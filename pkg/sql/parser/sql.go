// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15764

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1906,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	284, 577,
	-2, 0,
	-1, 75,
	8, 1047,
	29, 1047,
	650, 1047,
	651, 1047,
	-2, 0,
	-1, 76,
	8, 1047,
	29, 1047,
	650, 1047,
	651, 1047,
	-2, 0,
	-1, 78,
	1, 1753,
	140, 1753,
	271, 1753,
	359, 1753,
	422, 1753,
	432, 1753,
	631, 1753,
	663, 1753,
	-2, 0,
	-1, 79,
	1, 1753,
	663, 1753,
	-2, 0,
	-1, 85,
	264, 292,
	566, 292,
	-2, 0,
	-1, 99,
	205, 478,
	250, 1627,
	266, 1627,
	284, 478,
	424, 478,
	436, 1370,
	480, 478,
	497, 1370,
	550, 1370,
	579, 478,
	607, 1370,
	-2, 0,
	-1, 106,
	142, 1906,
	259, 1906,
	590, 1906,
	591, 1906,
	-2, 0,
	-1, 124,
	162, 1877,
	183, 1877,
	196, 1877,
	262, 1877,
	298, 1877,
	372, 1877,
	383, 1877,
	585, 1877,
	-2, 1848,
	-1, 167,
	170, 1184,
	282, 1184,
	427, 1145,
	502, 1145,
	549, 1145,
	569, 1184,
	571, 1145,
	-2, 0,
	-1, 172,
	4, 1908,
	21, 1908,
	22, 1908,
	23, 1908,
	24, 1908,
	25, 1908,
	26, 1908,
	27, 1908,
	28, 1908,
	30, 1908,
	31, 1908,
	37, 1908,
	41, 1908,
	43, 1908,
	44, 1908,
	45, 1908,
	47, 1908,
	48, 1908,
	49, 1908,
	50, 1908,
	51, 1908,
	52, 1908,
	53, 1908,
	54, 1908,
	55, 1908,
	57, 1908,
	58, 1908,
	59, 1908,
	60, 1908,
	62, 1908,
	63, 1908,
	64, 1908,
	65, 1908,
	66, 1908,
	67, 1908,
	68, 1908,
	69, 1908,
	73, 1908,
	74, 1908,
	75, 1908,
	76, 1908,
	78, 1908,
	79, 1908,
	80, 1908,
	84, 1908,
	85, 1908,
	86, 1908,
	87, 1908,
	88, 1908,
	89, 1908,
	90, 1908,
	91, 1908,
	94, 1908,
	95, 1908,
	96, 1908,
	97, 1908,
	98, 1908,
	99, 1908,
	101, 1908,
	103, 1908,
	104, 1908,
	105, 1908,
	106, 1908,
	107, 1908,
	108, 1908,
	109, 1908,
	111, 1908,
	112, 1908,
	113, 1908,
	115, 1908,
	116, 1908,
	117, 1908,
	125, 1908,
	126, 1908,
	127, 1908,
	128, 1908,
	129, 1908,
	131, 1908,
	132, 1908,
	133, 1908,
	134, 1908,
	136, 1908,
	137, 1908,
	138, 1908,
	139, 1908,
	141, 1908,
	142, 1908,
	143, 1908,
	144, 1908,
	146, 1908,
	147, 1908,
	148, 1908,
	151, 1908,
	152, 1908,
	153, 1908,
	155, 1908,
	156, 1908,
	157, 1908,
	159, 1908,
	160, 1908,
	161, 1908,
	163, 1908,
	164, 1908,
	165, 1908,
	166, 1908,
	167, 1908,
	168, 1908,
	169, 1908,
	170, 1908,
	171, 1908,
	172, 1908,
	173, 1908,
	174, 1908,
	175, 1908,
	176, 1908,
	177, 1908,
	178, 1908,
	179, 1908,
	180, 1908,
	182, 1908,
	188, 1908,
	189, 1908,
	190, 1908,
	191, 1908,
	195, 1908,
	197, 1908,
	198, 1908,
	199, 1908,
	201, 1908,
	202, 1908,
	205, 1908,
	206, 1908,
	207, 1908,
	208, 1908,
	209, 1908,
	210, 1908,
	211, 1908,
	212, 1908,
	213, 1908,
	214, 1908,
	215, 1908,
	216, 1908,
	217, 1908,
	218, 1908,
	220, 1908,
	221, 1908,
	223, 1908,
	224, 1908,
	226, 1908,
	227, 1908,
	228, 1908,
	229, 1908,
	230, 1908,
	231, 1908,
	232, 1908,
	233, 1908,
	234, 1908,
	235, 1908,
	236, 1908,
	238, 1908,
	239, 1908,
	240, 1908,
	242, 1908,
	243, 1908,
	244, 1908,
	245, 1908,
	246, 1908,
	250, 1908,
	251, 1908,
	252, 1908,
	253, 1908,
	256, 1908,
	257, 1908,
	258, 1908,
	259, 1908,
	260, 1908,
	261, 1908,
	263, 1908,
	265, 1908,
	266, 1908,
	267, 1908,
	269, 1908,
	271, 1908,
	272, 1908,
	273, 1908,
	275, 1908,
	279, 1908,
	280, 1908,
	281, 1908,
	282, 1908,
	283, 1908,
	284, 1908,
	285, 1908,
	287, 1908,
	288, 1908,
	289, 1908,
	291, 1908,
	292, 1908,
	293, 1908,
	295, 1908,
	296, 1908,
	299, 1908,
	300, 1908,
	301, 1908,
	302, 1908,
	303, 1908,
	304, 1908,
	305, 1908,
	308, 1908,
	309, 1908,
	310, 1908,
	311, 1908,
	313, 1908,
	314, 1908,
	315, 1908,
	316, 1908,
	317, 1908,
	318, 1908,
	319, 1908,
	320, 1908,
	321, 1908,
	322, 1908,
	323, 1908,
	324, 1908,
	325, 1908,
	326, 1908,
	327, 1908,
	328, 1908,
	329, 1908,
	330, 1908,
	331, 1908,
	332, 1908,
	333, 1908,
	334, 1908,
	335, 1908,
	337, 1908,
	339, 1908,
	340, 1908,
	341, 1908,
	342, 1908,
	343, 1908,
	344, 1908,
	345, 1908,
	346, 1908,
	347, 1908,
	348, 1908,
	349, 1908,
	350, 1908,
	351, 1908,
	352, 1908,
	353, 1908,
	354, 1908,
	355, 1908,
	357, 1908,
	358, 1908,
	360, 1908,
	362, 1908,
	363, 1908,
	364, 1908,
	365, 1908,
	367, 1908,
	368, 1908,
	369, 1908,
	370, 1908,
	371, 1908,
	374, 1908,
	376, 1908,
	378, 1908,
	379, 1908,
	380, 1908,
	381, 1908,
	384, 1908,
	385, 1908,
	386, 1908,
	388, 1908,
	390, 1908,
	391, 1908,
	392, 1908,
	393, 1908,
	394, 1908,
	395, 1908,
	396, 1908,
	397, 1908,
	398, 1908,
	399, 1908,
	400, 1908,
	401, 1908,
	402, 1908,
	403, 1908,
	405, 1908,
	406, 1908,
	407, 1908,
	408, 1908,
	409, 1908,
	410, 1908,
	411, 1908,
	412, 1908,
	413, 1908,
	414, 1908,
	415, 1908,
	416, 1908,
	417, 1908,
	418, 1908,
	419, 1908,
	421, 1908,
	422, 1908,
	423, 1908,
	425, 1908,
	426, 1908,
	427, 1908,
	428, 1908,
	429, 1908,
	430, 1908,
	431, 1908,
	432, 1908,
	433, 1908,
	434, 1908,
	435, 1908,
	436, 1908,
	437, 1908,
	438, 1908,
	440, 1908,
	442, 1908,
	443, 1908,
	444, 1908,
	450, 1908,
	451, 1908,
	452, 1908,
	454, 1908,
	455, 1908,
	456, 1908,
	457, 1908,
	458, 1908,
	459, 1908,
	460, 1908,
	461, 1908,
	462, 1908,
	463, 1908,
	464, 1908,
	466, 1908,
	467, 1908,
	468, 1908,
	469, 1908,
	470, 1908,
	472, 1908,
	473, 1908,
	474, 1908,
	475, 1908,
	476, 1908,
	477, 1908,
	478, 1908,
	480, 1908,
	481, 1908,
	482, 1908,
	483, 1908,
	484, 1908,
	485, 1908,
	486, 1908,
	487, 1908,
	488, 1908,
	489, 1908,
	490, 1908,
	491, 1908,
	492, 1908,
	493, 1908,
	494, 1908,
	495, 1908,
	497, 1908,
	498, 1908,
	499, 1908,
	500, 1908,
	501, 1908,
	502, 1908,
	504, 1908,
	505, 1908,
	506, 1908,
	507, 1908,
	508, 1908,
	509, 1908,
	510, 1908,
	512, 1908,
	513, 1908,
	514, 1908,
	515, 1908,
	516, 1908,
	517, 1908,
	518, 1908,
	519, 1908,
	521, 1908,
	523, 1908,
	524, 1908,
	525, 1908,
	526, 1908,
	527, 1908,
	528, 1908,
	529, 1908,
	530, 1908,
	531, 1908,
	532, 1908,
	533, 1908,
	534, 1908,
	535, 1908,
	536, 1908,
	537, 1908,
	538, 1908,
	539, 1908,
	540, 1908,
	541, 1908,
	542, 1908,
	543, 1908,
	545, 1908,
	546, 1908,
	548, 1908,
	549, 1908,
	551, 1908,
	552, 1908,
	553, 1908,
	554, 1908,
	555, 1908,
	556, 1908,
	558, 1908,
	559, 1908,
	561, 1908,
	562, 1908,
	563, 1908,
	564, 1908,
	565, 1908,
	567, 1908,
	569, 1908,
	570, 1908,
	571, 1908,
	572, 1908,
	573, 1908,
	574, 1908,
	575, 1908,
	576, 1908,
	578, 1908,
	579, 1908,
	580, 1908,
	581, 1908,
	582, 1908,
	583, 1908,
	584, 1908,
	587, 1908,
	588, 1908,
	589, 1908,
	590, 1908,
	591, 1908,
	592, 1908,
	593, 1908,
	594, 1908,
	596, 1908,
	599, 1908,
	600, 1908,
	601, 1908,
	602, 1908,
	603, 1908,
	604, 1908,
	606, 1908,
	607, 1908,
	608, 1908,
	609, 1908,
	610, 1908,
	611, 1908,
	612, 1908,
	613, 1908,
	614, 1908,
	615, 1908,
	616, 1908,
	617, 1908,
	622, 1908,
	623, 1908,
	624, 1908,
	625, 1908,
	626, 1908,
	627, 1908,
	-2, 0,
	-1, 174,
	1, 1753,
	663, 1753,
	666, 1753,
	-2, 0,
	-1, 175,
	1, 1753,
	566, 1753,
	663, 1753,
	666, 1753,
	-2, 0,
	-1, 211,
	162, 1876,
	183, 1876,
	196, 1876,
	262, 1876,
	298, 1876,
	372, 1876,
	383, 1876,
	585, 1876,
	-2, 1851,
	-1, 272,
	4, 1915,
	5, 1915,
	6, 1915,
	7, 1915,
	8, 1915,
	9, 1915,
	10, 1915,
	21, 1915,
	22, 1915,
	23, 1915,
	24, 1915,
	25, 1915,
	26, 1915,
	27, 1915,
	28, 1915,
	30, 1915,
	31, 1915,
	37, 1915,
	38, 1915,
	41, 1915,
	43, 1915,
	44, 1915,
	45, 1915,
	46, 1915,
	47, 1915,
	48, 1915,
	49, 1915,
	50, 1915,
	51, 1915,
	52, 1915,
	53, 1915,
	54, 1915,
	55, 1915,
	57, 1915,
	58, 1915,
	59, 1915,
	60, 1915,
	62, 1915,
	63, 1915,
	64, 1915,
	65, 1915,
	66, 1915,
	67, 1915,
	68, 1915,
	69, 1915,
	70, 1915,
	71, 1915,
	72, 1915,
	73, 1915,
	74, 1915,
	75, 1915,
	76, 1915,
	78, 1915,
	79, 1915,
	80, 1915,
	82, 1915,
	84, 1915,
	85, 1915,
	86, 1915,
	87, 1915,
	88, 1915,
	89, 1915,
	90, 1915,
	91, 1915,
	94, 1915,
	95, 1915,
	96, 1915,
	97, 1915,
	98, 1915,
	99, 1915,
	101, 1915,
	103, 1915,
	104, 1915,
	105, 1915,
	106, 1915,
	107, 1915,
	108, 1915,
	109, 1915,
	111, 1915,
	112, 1915,
	113, 1915,
	114, 1915,
	115, 1915,
	116, 1915,
	117, 1915,
	118, 1915,
	119, 1915,
	120, 1915,
	121, 1915,
	122, 1915,
	123, 1915,
	124, 1915,
	125, 1915,
	126, 1915,
	127, 1915,
	128, 1915,
	129, 1915,
	130, 1915,
	131, 1915,
	132, 1915,
	133, 1915,
	134, 1915,
	135, 1915,
	136, 1915,
	137, 1915,
	138, 1915,
	139, 1915,
	141, 1915,
	142, 1915,
	143, 1915,
	144, 1915,
	146, 1915,
	147, 1915,
	148, 1915,
	151, 1915,
	152, 1915,
	153, 1915,
	155, 1915,
	156, 1915,
	157, 1915,
	159, 1915,
	160, 1915,
	161, 1915,
	163, 1915,
	164, 1915,
	165, 1915,
	166, 1915,
	167, 1915,
	168, 1915,
	169, 1915,
	170, 1915,
	171, 1915,
	172, 1915,
	173, 1915,
	174, 1915,
	175, 1915,
	176, 1915,
	177, 1915,
	178, 1915,
	179, 1915,
	180, 1915,
	181, 1915,
	182, 1915,
	188, 1915,
	189, 1915,
	190, 1915,
	191, 1915,
	195, 1915,
	197, 1915,
	198, 1915,
	199, 1915,
	201, 1915,
	202, 1915,
	204, 1915,
	205, 1915,
	206, 1915,
	207, 1915,
	208, 1915,
	209, 1915,
	210, 1915,
	211, 1915,
	212, 1915,
	213, 1915,
	214, 1915,
	215, 1915,
	216, 1915,
	217, 1915,
	218, 1915,
	220, 1915,
	221, 1915,
	223, 1915,
	224, 1915,
	226, 1915,
	227, 1915,
	228, 1915,
	229, 1915,
	230, 1915,
	231, 1915,
	232, 1915,
	233, 1915,
	234, 1915,
	235, 1915,
	236, 1915,
	237, 1915,
	238, 1915,
	239, 1915,
	240, 1915,
	242, 1915,
	243, 1915,
	244, 1915,
	245, 1915,
	246, 1915,
	250, 1915,
	251, 1915,
	252, 1915,
	253, 1915,
	255, 1915,
	256, 1915,
	257, 1915,
	258, 1915,
	259, 1915,
	260, 1915,
	261, 1915,
	263, 1915,
	265, 1915,
	266, 1915,
	267, 1915,
	268, 1915,
	269, 1915,
	270, 1915,
	271, 1915,
	272, 1915,
	273, 1915,
	274, 1915,
	275, 1915,
	279, 1915,
	280, 1915,
	281, 1915,
	282, 1915,
	283, 1915,
	284, 1915,
	285, 1915,
	287, 1915,
	288, 1915,
	289, 1915,
	291, 1915,
	292, 1915,
	293, 1915,
	294, 1915,
	295, 1915,
	296, 1915,
	297, 1915,
	299, 1915,
	300, 1915,
	301, 1915,
	302, 1915,
	303, 1915,
	304, 1915,
	305, 1915,
	306, 1915,
	307, 1915,
	308, 1915,
	309, 1915,
	310, 1915,
	311, 1915,
	313, 1915,
	314, 1915,
	315, 1915,
	316, 1915,
	317, 1915,
	318, 1915,
	319, 1915,
	320, 1915,
	321, 1915,
	322, 1915,
	323, 1915,
	324, 1915,
	325, 1915,
	326, 1915,
	327, 1915,
	328, 1915,
	329, 1915,
	330, 1915,
	331, 1915,
	332, 1915,
	333, 1915,
	334, 1915,
	335, 1915,
	337, 1915,
	338, 1915,
	339, 1915,
	340, 1915,
	341, 1915,
	342, 1915,
	343, 1915,
	344, 1915,
	345, 1915,
	346, 1915,
	347, 1915,
	348, 1915,
	349, 1915,
	350, 1915,
	351, 1915,
	352, 1915,
	353, 1915,
	354, 1915,
	355, 1915,
	356, 1915,
	357, 1915,
	358, 1915,
	359, 1915,
	360, 1915,
	361, 1915,
	362, 1915,
	363, 1915,
	364, 1915,
	365, 1915,
	366, 1915,
	367, 1915,
	368, 1915,
	369, 1915,
	370, 1915,
	371, 1915,
	374, 1915,
	376, 1915,
	379, 1915,
	380, 1915,
	381, 1915,
	384, 1915,
	385, 1915,
	386, 1915,
	387, 1915,
	388, 1915,
	389, 1915,
	390, 1915,
	391, 1915,
	392, 1915,
	393, 1915,
	394, 1915,
	395, 1915,
	396, 1915,
	397, 1915,
	398, 1915,
	399, 1915,
	400, 1915,
	401, 1915,
	402, 1915,
	403, 1915,
	405, 1915,
	406, 1915,
	407, 1915,
	408, 1915,
	409, 1915,
	410, 1915,
	411, 1915,
	412, 1915,
	413, 1915,
	414, 1915,
	415, 1915,
	416, 1915,
	417, 1915,
	418, 1915,
	419, 1915,
	421, 1915,
	422, 1915,
	423, 1915,
	425, 1915,
	426, 1915,
	427, 1915,
	428, 1915,
	429, 1915,
	430, 1915,
	431, 1915,
	432, 1915,
	433, 1915,
	434, 1915,
	435, 1915,
	436, 1915,
	437, 1915,
	438, 1915,
	440, 1915,
	442, 1915,
	443, 1915,
	444, 1915,
	450, 1915,
	451, 1915,
	452, 1915,
	454, 1915,
	455, 1915,
	456, 1915,
	457, 1915,
	458, 1915,
	459, 1915,
	460, 1915,
	461, 1915,
	462, 1915,
	463, 1915,
	464, 1915,
	466, 1915,
	467, 1915,
	468, 1915,
	469, 1915,
	470, 1915,
	471, 1915,
	472, 1915,
	473, 1915,
	474, 1915,
	475, 1915,
	476, 1915,
	477, 1915,
	478, 1915,
	480, 1915,
	481, 1915,
	482, 1915,
	483, 1915,
	484, 1915,
	485, 1915,
	486, 1915,
	487, 1915,
	488, 1915,
	489, 1915,
	490, 1915,
	491, 1915,
	492, 1915,
	493, 1915,
	494, 1915,
	495, 1915,
	497, 1915,
	498, 1915,
	499, 1915,
	500, 1915,
	501, 1915,
	502, 1915,
	503, 1915,
	504, 1915,
	505, 1915,
	506, 1915,
	507, 1915,
	508, 1915,
	509, 1915,
	510, 1915,
	511, 1915,
	512, 1915,
	513, 1915,
	514, 1915,
	515, 1915,
	516, 1915,
	517, 1915,
	518, 1915,
	519, 1915,
	521, 1915,
	523, 1915,
	524, 1915,
	525, 1915,
	526, 1915,
	527, 1915,
	528, 1915,
	529, 1915,
	530, 1915,
	531, 1915,
	532, 1915,
	533, 1915,
	534, 1915,
	535, 1915,
	536, 1915,
	537, 1915,
	538, 1915,
	539, 1915,
	540, 1915,
	541, 1915,
	542, 1915,
	543, 1915,
	545, 1915,
	546, 1915,
	547, 1915,
	548, 1915,
	549, 1915,
	551, 1915,
	552, 1915,
	553, 1915,
	554, 1915,
	555, 1915,
	556, 1915,
	558, 1915,
	559, 1915,
	561, 1915,
	562, 1915,
	563, 1915,
	564, 1915,
	565, 1915,
	567, 1915,
	569, 1915,
	570, 1915,
	571, 1915,
	572, 1915,
	573, 1915,
	574, 1915,
	575, 1915,
	576, 1915,
	577, 1915,
	578, 1915,
	579, 1915,
	580, 1915,
	581, 1915,
	582, 1915,
	583, 1915,
	584, 1915,
	586, 1915,
	587, 1915,
	588, 1915,
	589, 1915,
	590, 1915,
	591, 1915,
	592, 1915,
	593, 1915,
	594, 1915,
	595, 1915,
	596, 1915,
	599, 1915,
	600, 1915,
	601, 1915,
	602, 1915,
	603, 1915,
	604, 1915,
	606, 1915,
	607, 1915,
	608, 1915,
	609, 1915,
	610, 1915,
	611, 1915,
	612, 1915,
	613, 1915,
	614, 1915,
	615, 1915,
	616, 1915,
	617, 1915,
	622, 1915,
	623, 1915,
	624, 1915,
	625, 1915,
	626, 1915,
	627, 1915,
	628, 1915,
	643, 1915,
	650, 1915,
	651, 1915,
	652, 1915,
	660, 1915,
	664, 1915,
	-2, 0,
	-1, 851,
	4, 1625,
	21, 1625,
	22, 1625,
	23, 1625,
	24, 1625,
	25, 1625,
	26, 1625,
	27, 1625,
	28, 1625,
	30, 1625,
	31, 1625,
	37, 1625,
	41, 1625,
	43, 1625,
	44, 1625,
	45, 1625,
	47, 1625,
	48, 1625,
	49, 1625,
	50, 1625,
	51, 1625,
	52, 1625,
	53, 1625,
	54, 1625,
	55, 1625,
	57, 1625,
	58, 1625,
	59, 1625,
	60, 1625,
	62, 1625,
	63, 1625,
	64, 1625,
	65, 1625,
	66, 1625,
	67, 1625,
	68, 1625,
	69, 1625,
	73, 1625,
	74, 1625,
	75, 1625,
	76, 1625,
	78, 1625,
	79, 1625,
	80, 1625,
	84, 1625,
	85, 1625,
	86, 1625,
	87, 1625,
	88, 1625,
	89, 1625,
	90, 1625,
	91, 1625,
	94, 1625,
	95, 1625,
	96, 1625,
	97, 1625,
	98, 1625,
	99, 1625,
	101, 1625,
	103, 1625,
	104, 1625,
	105, 1625,
	106, 1625,
	107, 1625,
	108, 1625,
	109, 1625,
	111, 1625,
	112, 1625,
	113, 1625,
	115, 1625,
	116, 1625,
	117, 1625,
	125, 1625,
	126, 1625,
	127, 1625,
	128, 1625,
	129, 1625,
	131, 1625,
	132, 1625,
	133, 1625,
	134, 1625,
	136, 1625,
	137, 1625,
	138, 1625,
	139, 1625,
	141, 1625,
	142, 1625,
	143, 1625,
	144, 1625,
	146, 1625,
	147, 1625,
	148, 1625,
	151, 1625,
	152, 1625,
	153, 1625,
	155, 1625,
	156, 1625,
	157, 1625,
	159, 1625,
	160, 1625,
	161, 1625,
	163, 1625,
	164, 1625,
	165, 1625,
	166, 1625,
	167, 1625,
	168, 1625,
	169, 1625,
	170, 1625,
	171, 1625,
	172, 1625,
	173, 1625,
	174, 1625,
	175, 1625,
	176, 1625,
	177, 1625,
	178, 1625,
	179, 1625,
	180, 1625,
	182, 1625,
	188, 1625,
	189, 1625,
	190, 1625,
	191, 1625,
	195, 1625,
	197, 1625,
	198, 1625,
	199, 1625,
	201, 1625,
	202, 1625,
	205, 1625,
	206, 1625,
	207, 1625,
	208, 1625,
	209, 1625,
	210, 1625,
	211, 1625,
	212, 1625,
	213, 1625,
	214, 1625,
	215, 1625,
	216, 1625,
	217, 1625,
	218, 1625,
	220, 1625,
	221, 1625,
	223, 1625,
	224, 1625,
	226, 1625,
	227, 1625,
	228, 1625,
	229, 1625,
	230, 1625,
	231, 1625,
	232, 1625,
	233, 1625,
	234, 1625,
	235, 1625,
	236, 1625,
	238, 1625,
	239, 1625,
	240, 1625,
	242, 1625,
	243, 1625,
	244, 1625,
	245, 1625,
	246, 1625,
	250, 1625,
	251, 1625,
	252, 1625,
	253, 1625,
	256, 1625,
	257, 1625,
	258, 1625,
	259, 1625,
	260, 1625,
	261, 1625,
	263, 1625,
	265, 1625,
	266, 1625,
	267, 1625,
	269, 1625,
	271, 1625,
	272, 1625,
	273, 1625,
	275, 1625,
	279, 1625,
	280, 1625,
	281, 1625,
	282, 1625,
	283, 1625,
	284, 1625,
	285, 1625,
	287, 1625,
	288, 1625,
	289, 1625,
	291, 1625,
	292, 1625,
	293, 1625,
	295, 1625,
	296, 1625,
	299, 1625,
	300, 1625,
	301, 1625,
	302, 1625,
	303, 1625,
	304, 1625,
	305, 1625,
	308, 1625,
	309, 1625,
	310, 1625,
	311, 1625,
	313, 1625,
	314, 1625,
	315, 1625,
	316, 1625,
	317, 1625,
	318, 1625,
	319, 1625,
	320, 1625,
	321, 1625,
	322, 1625,
	323, 1625,
	324, 1625,
	325, 1625,
	326, 1625,
	327, 1625,
	328, 1625,
	329, 1625,
	330, 1625,
	331, 1625,
	332, 1625,
	333, 1625,
	334, 1625,
	335, 1625,
	337, 1625,
	339, 1625,
	340, 1625,
	341, 1625,
	342, 1625,
	343, 1625,
	344, 1625,
	345, 1625,
	346, 1625,
	347, 1625,
	348, 1625,
	349, 1625,
	350, 1625,
	351, 1625,
	352, 1625,
	353, 1625,
	354, 1625,
	355, 1625,
	357, 1625,
	358, 1625,
	360, 1625,
	362, 1625,
	363, 1625,
	364, 1625,
	365, 1625,
	367, 1625,
	368, 1625,
	369, 1625,
	370, 1625,
	371, 1625,
	374, 1625,
	376, 1625,
	379, 1625,
	380, 1625,
	381, 1625,
	384, 1625,
	385, 1625,
	386, 1625,
	388, 1625,
	390, 1625,
	391, 1625,
	392, 1625,
	393, 1625,
	394, 1625,
	395, 1625,
	396, 1625,
	397, 1625,
	398, 1625,
	399, 1625,
	400, 1625,
	401, 1625,
	402, 1625,
	403, 1625,
	405, 1625,
	406, 1625,
	407, 1625,
	408, 1625,
	409, 1625,
	410, 1625,
	411, 1625,
	412, 1625,
	413, 1625,
	414, 1625,
	415, 1625,
	416, 1625,
	417, 1625,
	418, 1625,
	419, 1625,
	421, 1625,
	422, 1625,
	423, 1625,
	425, 1625,
	426, 1625,
	427, 1625,
	428, 1625,
	429, 1625,
	430, 1625,
	431, 1625,
	432, 1625,
	433, 1625,
	434, 1625,
	435, 1625,
	436, 1625,
	437, 1625,
	438, 1625,
	440, 1625,
	442, 1625,
	443, 1625,
	444, 1625,
	450, 1625,
	451, 1625,
	452, 1625,
	454, 1625,
	455, 1625,
	456, 1625,
	457, 1625,
	458, 1625,
	459, 1625,
	460, 1625,
	461, 1625,
	462, 1625,
	463, 1625,
	464, 1625,
	466, 1625,
	467, 1625,
	468, 1625,
	469, 1625,
	470, 1625,
	472, 1625,
	473, 1625,
	474, 1625,
	475, 1625,
	476, 1625,
	477, 1625,
	478, 1625,
	480, 1625,
	481, 1625,
	482, 1625,
	483, 1625,
	484, 1625,
	485, 1625,
	486, 1625,
	487, 1625,
	488, 1625,
	489, 1625,
	490, 1625,
	491, 1625,
	492, 1625,
	493, 1625,
	494, 1625,
	495, 1625,
	497, 1625,
	498, 1625,
	499, 1625,
	500, 1625,
	501, 1625,
	502, 1625,
	504, 1625,
	505, 1625,
	506, 1625,
	507, 1625,
	508, 1625,
	509, 1625,
	510, 1625,
	512, 1625,
	513, 1625,
	514, 1625,
	515, 1625,
	516, 1625,
	517, 1625,
	518, 1625,
	519, 1625,
	521, 1625,
	523, 1625,
	524, 1625,
	525, 1625,
	526, 1625,
	527, 1625,
	528, 1625,
	529, 1625,
	530, 1625,
	531, 1625,
	532, 1625,
	533, 1625,
	534, 1625,
	535, 1625,
	536, 1625,
	537, 1625,
	538, 1625,
	539, 1625,
	540, 1625,
	541, 1625,
	542, 1625,
	543, 1625,
	545, 1625,
	546, 1625,
	548, 1625,
	549, 1625,
	551, 1625,
	552, 1625,
	553, 1625,
	554, 1625,
	555, 1625,
	556, 1625,
	558, 1625,
	559, 1625,
	561, 1625,
	562, 1625,
	563, 1625,
	564, 1625,
	565, 1625,
	567, 1625,
	569, 1625,
	570, 1625,
	571, 1625,
	572, 1625,
	573, 1625,
	574, 1625,
	575, 1625,
	576, 1625,
	578, 1625,
	579, 1625,
	580, 1625,
	581, 1625,
	582, 1625,
	583, 1625,
	584, 1625,
	587, 1625,
	588, 1625,
	589, 1625,
	590, 1625,
	591, 1625,
	592, 1625,
	593, 1625,
	594, 1625,
	596, 1625,
	599, 1625,
	600, 1625,
	601, 1625,
	602, 1625,
	603, 1625,
	604, 1625,
	606, 1625,
	607, 1625,
	608, 1625,
	609, 1625,
	610, 1625,
	611, 1625,
	612, 1625,
	613, 1625,
	614, 1625,
	615, 1625,
	616, 1625,
	617, 1625,
	622, 1625,
	623, 1625,
	624, 1625,
	625, 1625,
	626, 1625,
	627, 1625,
	-2, 0,
	-1, 870,
	203, 2731,
	566, 2731,
	642, 2731,
	662, 2731,
	-2, 0,
	-1, 871,
	203, 2716,
	566, 2716,
	642, 2716,
	662, 2716,
	-2, 0,
	-1, 873,
	203, 3014,
	566, 3014,
	642, 3014,
	662, 3014,
	-2, 0,
	-1, 876,
	203, 2856,
	566, 2856,
	642, 2856,
	662, 2856,
	-2, 0,
	-1, 877,
	203, 3061,
	566, 3061,
	642, 3061,
	662, 3061,
	-2, 0,
	-1, 885,
	203, 2884,
	566, 2884,
	642, 2884,
	662, 2884,
	-2, 911,
	-1, 901,
	8, 1046,
	29, 1046,
	650, 1046,
	651, 1046,
	-2, 1051,
	-1, 905,
	1, 2789,
	663, 2789,
	666, 2789,
	-2, 1051,
	-1, 906,
	1, 2843,
	663, 2843,
	666, 2843,
	-2, 1051,
	-1, 909,
	1, 2889,
	663, 2889,
	666, 2889,
	-2, 1044,
	-1, 910,
	1, 2946,
	663, 2946,
	666, 2946,
	-2, 1045,
	-1, 911,
	1, 2794,
	663, 2794,
	666, 2794,
	-2, 1048,
	-1, 912,
	1, 2702,
	663, 2702,
	666, 2702,
	-2, 1049,
	-1, 952,
	662, 2659,
	665, 2659,
	-2, 1286,
	-1, 953,
	662, 2661,
	665, 2661,
	-2, 1287,
	-1, 954,
	662, 2660,
	665, 2660,
	-2, 1288,
	-1, 955,
	665, 2583,
	-2, 1289,
	-1, 981,
	196, 326,
	-2, 0,
	-1, 1003,
	46, 2632,
	-2, 0,
	-1, 1004,
	607, 1603,
	-2, 1371,
	-1, 1021,
	4, 2061,
	21, 2061,
	22, 2061,
	23, 2061,
	24, 2061,
	25, 2061,
	26, 2061,
	27, 2061,
	28, 2061,
	30, 2061,
	31, 2061,
	37, 2061,
	41, 2061,
	43, 2061,
	44, 2061,
	45, 2061,
	47, 2061,
	48, 2061,
	49, 2061,
	50, 2061,
	51, 2061,
	52, 2061,
	53, 2061,
	54, 2061,
	55, 2061,
	57, 2061,
	58, 2061,
	59, 2061,
	60, 2061,
	62, 2061,
	63, 2061,
	64, 2061,
	65, 2061,
	66, 2061,
	67, 2061,
	68, 2061,
	69, 2061,
	73, 2061,
	74, 2061,
	75, 2061,
	76, 2061,
	78, 2061,
	79, 2061,
	80, 2061,
	84, 2061,
	85, 2061,
	86, 2061,
	87, 2061,
	88, 2061,
	89, 2061,
	90, 2061,
	91, 2061,
	94, 2061,
	95, 2061,
	96, 2061,
	97, 2061,
	98, 2061,
	99, 2061,
	101, 2061,
	103, 2061,
	104, 2061,
	105, 2061,
	106, 2061,
	107, 2061,
	108, 2061,
	109, 2061,
	111, 2061,
	112, 2061,
	113, 2061,
	115, 2061,
	116, 2061,
	117, 2061,
	125, 2061,
	126, 2061,
	127, 2061,
	128, 2061,
	129, 2061,
	131, 2061,
	132, 2061,
	133, 2061,
	134, 2061,
	136, 2061,
	137, 2061,
	138, 2061,
	139, 2061,
	141, 2061,
	142, 2061,
	143, 2061,
	144, 2061,
	146, 2061,
	147, 2061,
	148, 2061,
	151, 2061,
	152, 2061,
	153, 2061,
	155, 2061,
	156, 2061,
	157, 2061,
	159, 2061,
	160, 2061,
	161, 2061,
	163, 2061,
	164, 2061,
	165, 2061,
	166, 2061,
	167, 2061,
	168, 2061,
	169, 2061,
	170, 2061,
	171, 2061,
	172, 2061,
	173, 2061,
	174, 2061,
	175, 2061,
	176, 2061,
	177, 2061,
	178, 2061,
	179, 2061,
	180, 2061,
	182, 2061,
	188, 2061,
	189, 2061,
	190, 2061,
	191, 2061,
	195, 2061,
	197, 2061,
	198, 2061,
	199, 2061,
	201, 2061,
	202, 2061,
	205, 2061,
	206, 2061,
	207, 2061,
	208, 2061,
	209, 2061,
	210, 2061,
	211, 2061,
	212, 2061,
	213, 2061,
	214, 2061,
	215, 2061,
	216, 2061,
	217, 2061,
	218, 2061,
	220, 2061,
	221, 2061,
	223, 2061,
	224, 2061,
	226, 2061,
	227, 2061,
	228, 2061,
	229, 2061,
	230, 2061,
	231, 2061,
	232, 2061,
	233, 2061,
	234, 2061,
	235, 2061,
	236, 2061,
	238, 2061,
	239, 2061,
	240, 2061,
	242, 2061,
	243, 2061,
	244, 2061,
	245, 2061,
	246, 2061,
	250, 2061,
	251, 2061,
	252, 2061,
	253, 2061,
	256, 2061,
	257, 2061,
	258, 2061,
	259, 2061,
	260, 2061,
	261, 2061,
	263, 2061,
	265, 2061,
	266, 2061,
	267, 2061,
	269, 2061,
	271, 2061,
	272, 2061,
	273, 2061,
	275, 2061,
	279, 2061,
	280, 2061,
	281, 2061,
	282, 2061,
	283, 2061,
	284, 2061,
	285, 2061,
	287, 2061,
	288, 2061,
	289, 2061,
	291, 2061,
	292, 2061,
	293, 2061,
	295, 2061,
	296, 2061,
	299, 2061,
	300, 2061,
	301, 2061,
	302, 2061,
	303, 2061,
	304, 2061,
	305, 2061,
	308, 2061,
	309, 2061,
	310, 2061,
	311, 2061,
	313, 2061,
	314, 2061,
	315, 2061,
	316, 2061,
	317, 2061,
	318, 2061,
	319, 2061,
	320, 2061,
	321, 2061,
	322, 2061,
	323, 2061,
	324, 2061,
	325, 2061,
	326, 2061,
	327, 2061,
	328, 2061,
	329, 2061,
	330, 2061,
	331, 2061,
	332, 2061,
	333, 2061,
	334, 2061,
	335, 2061,
	337, 2061,
	339, 2061,
	340, 2061,
	341, 2061,
	342, 2061,
	343, 2061,
	344, 2061,
	345, 2061,
	346, 2061,
	347, 2061,
	348, 2061,
	349, 2061,
	350, 2061,
	351, 2061,
	352, 2061,
	353, 2061,
	354, 2061,
	355, 2061,
	357, 2061,
	358, 2061,
	360, 2061,
	362, 2061,
	363, 2061,
	364, 2061,
	365, 2061,
	367, 2061,
	368, 2061,
	369, 2061,
	370, 2061,
	371, 2061,
	374, 2061,
	376, 2061,
	379, 2061,
	380, 2061,
	381, 2061,
	384, 2061,
	385, 2061,
	386, 2061,
	388, 2061,
	390, 2061,
	391, 2061,
	392, 2061,
	393, 2061,
	394, 2061,
	395, 2061,
	396, 2061,
	397, 2061,
	398, 2061,
	399, 2061,
	400, 2061,
	401, 2061,
	402, 2061,
	403, 2061,
	405, 2061,
	406, 2061,
	407, 2061,
	408, 2061,
	409, 2061,
	410, 2061,
	411, 2061,
	412, 2061,
	413, 2061,
	414, 2061,
	415, 2061,
	416, 2061,
	417, 2061,
	418, 2061,
	419, 2061,
	421, 2061,
	422, 2061,
	423, 2061,
	425, 2061,
	426, 2061,
	427, 2061,
	428, 2061,
	429, 2061,
	430, 2061,
	431, 2061,
	432, 2061,
	433, 2061,
	434, 2061,
	435, 2061,
	436, 2061,
	437, 2061,
	438, 2061,
	440, 2061,
	442, 2061,
	443, 2061,
	444, 2061,
	450, 2061,
	451, 2061,
	452, 2061,
	454, 2061,
	455, 2061,
	456, 2061,
	457, 2061,
	458, 2061,
	459, 2061,
	460, 2061,
	461, 2061,
	462, 2061,
	463, 2061,
	464, 2061,
	466, 2061,
	467, 2061,
	468, 2061,
	469, 2061,
	470, 2061,
	472, 2061,
	473, 2061,
	474, 2061,
	475, 2061,
	476, 2061,
	477, 2061,
	478, 2061,
	480, 2061,
	481, 2061,
	482, 2061,
	483, 2061,
	484, 2061,
	485, 2061,
	486, 2061,
	487, 2061,
	488, 2061,
	489, 2061,
	490, 2061,
	491, 2061,
	492, 2061,
	493, 2061,
	494, 2061,
	495, 2061,
	497, 2061,
	498, 2061,
	499, 2061,
	500, 2061,
	501, 2061,
	502, 2061,
	504, 2061,
	505, 2061,
	506, 2061,
	507, 2061,
	508, 2061,
	509, 2061,
	510, 2061,
	512, 2061,
	513, 2061,
	514, 2061,
	515, 2061,
	516, 2061,
	517, 2061,
	518, 2061,
	519, 2061,
	521, 2061,
	523, 2061,
	524, 2061,
	525, 2061,
	526, 2061,
	527, 2061,
	528, 2061,
	529, 2061,
	530, 2061,
	531, 2061,
	532, 2061,
	533, 2061,
	534, 2061,
	535, 2061,
	536, 2061,
	537, 2061,
	538, 2061,
	539, 2061,
	540, 2061,
	541, 2061,
	542, 2061,
	543, 2061,
	545, 2061,
	546, 2061,
	548, 2061,
	549, 2061,
	551, 2061,
	552, 2061,
	553, 2061,
	554, 2061,
	555, 2061,
	556, 2061,
	558, 2061,
	559, 2061,
	561, 2061,
	562, 2061,
	563, 2061,
	564, 2061,
	565, 2061,
	567, 2061,
	569, 2061,
	570, 2061,
	571, 2061,
	572, 2061,
	573, 2061,
	574, 2061,
	575, 2061,
	576, 2061,
	578, 2061,
	579, 2061,
	580, 2061,
	581, 2061,
	582, 2061,
	583, 2061,
	584, 2061,
	587, 2061,
	588, 2061,
	589, 2061,
	590, 2061,
	591, 2061,
	592, 2061,
	593, 2061,
	594, 2061,
	596, 2061,
	599, 2061,
	600, 2061,
	601, 2061,
	602, 2061,
	603, 2061,
	604, 2061,
	606, 2061,
	607, 2061,
	608, 2061,
	609, 2061,
	610, 2061,
	611, 2061,
	612, 2061,
	613, 2061,
	614, 2061,
	615, 2061,
	616, 2061,
	617, 2061,
	622, 2061,
	623, 2061,
	624, 2061,
	625, 2061,
	626, 2061,
	627, 2061,
	-2, 0,
	-1, 1032,
	284, 577,
	-2, 0,
	-1, 1111,
	203, 1091,
	-2, 0,
	-1, 1112,
	427, 1146,
	502, 1146,
	549, 1146,
	571, 1146,
	-2, 0,
	-1, 1113,
	427, 1145,
	502, 1145,
	549, 1145,
	571, 1145,
	-2, 1064,
	-1, 1117,
	1, 1198,
	659, 1198,
	661, 1198,
	663, 1198,
	666, 1198,
	-2, 0,
	-1, 1119,
	1, 1119,
	659, 1119,
	661, 1119,
	663, 1119,
	666, 1119,
	-2, 0,
	-1, 1120,
	1, 1123,
	659, 1123,
	661, 1123,
	663, 1123,
	666, 1123,
	-2, 0,
	-1, 1121,
	1, 1275,
	196, 1275,
	659, 1275,
	661, 1275,
	663, 1275,
	666, 1275,
	-2, 0,
	-1, 1130,
	1, 1151,
	659, 1151,
	661, 1151,
	663, 1151,
	666, 1151,
	-2, 0,
	-1, 1137,
	1, 1198,
	659, 1198,
	661, 1198,
	663, 1198,
	666, 1198,
	-2, 0,
	-1, 1138,
	1, 1200,
	659, 1200,
	661, 1200,
	663, 1200,
	666, 1200,
	-2, 0,
	-1, 1139,
	1, 1203,
	659, 1203,
	661, 1203,
	663, 1203,
	666, 1203,
	-2, 0,
	-1, 1147,
	1, 1238,
	659, 1238,
	661, 1238,
	663, 1238,
	666, 1238,
	-2, 0,
	-1, 1148,
	1, 1240,
	659, 1240,
	661, 1240,
	663, 1240,
	666, 1240,
	-2, 0,
	-1, 1153,
	1, 1268,
	659, 1268,
	661, 1268,
	663, 1268,
	666, 1268,
	-2, 0,
	-1, 1205,
	183, 1919,
	196, 1919,
	298, 1919,
	372, 1919,
	-2, 1855,
	-1, 1221,
	183, 1918,
	196, 1918,
	298, 1918,
	372, 1918,
	-2, 1852,
	-1, 1250,
	662, 2658,
	-2, 919,
	-1, 1279,
	5, 2650,
	660, 2648,
	-2, 2639,
	-1, 1287,
	5, 2671,
	660, 2668,
	-2, 2659,
	-1, 1288,
	5, 2672,
	660, 2669,
	-2, 2660,
	-1, 1296,
	662, 2656,
	-2, 2638,
	-1, 1297,
	660, 3175,
	-2, 2657,
	-1, 1320,
	5, 2673,
	38, 2673,
	135, 2673,
	642, 2673,
	658, 2673,
	661, 2673,
	662, 2673,
	665, 2673,
	-2, 3174,
	-1, 1321,
	5, 2136,
	-2, 3144,
	-1, 1322,
	5, 2137,
	-2, 3145,
	-1, 1323,
	5, 2138,
	-2, 3160,
	-1, 1324,
	5, 2139,
	-2, 3122,
	-1, 1325,
	5, 2140,
	-2, 3157,
	-1, 1326,
	5, 2148,
	-2, 3135,
	-1, 1327,
	5, 2135,
	-2, 3131,
	-1, 1328,
	5, 2135,
	-2, 3130,
	-1, 1329,
	5, 2135,
	-2, 3150,
	-1, 1330,
	5, 2146,
	-2, 3124,
	-1, 1331,
	5, 2151,
	-2, 3123,
	-1, 1332,
	5, 2153,
	-2, 3170,
	-1, 1335,
	5, 2175,
	-2, 3163,
	-1, 1336,
	5, 2167,
	-2, 3164,
	-1, 1337,
	5, 2175,
	-2, 3165,
	-1, 1338,
	5, 2171,
	-2, 3166,
	-1, 1339,
	5, 2121,
	-2, 3136,
	-1, 1340,
	5, 2122,
	-2, 3137,
	-1, 1341,
	5, 2123,
	-2, 3125,
	-1, 1369,
	5, 2158,
	-2, 3171,
	-1, 1370,
	5, 2159,
	-2, 3161,
	-1, 1371,
	5, 2160,
	608, 2160,
	-2, 3126,
	-1, 1372,
	5, 2161,
	608, 2161,
	-2, 3127,
	-1, 1410,
	660, 2668,
	-2, 2659,
	-1, 1411,
	660, 2669,
	-2, 2660,
	-1, 1520,
	203, 3061,
	566, 3061,
	642, 3061,
	662, 3061,
	-2, 0,
	-1, 1525,
	1, 895,
	663, 895,
	666, 895,
	-2, 1761,
	-1, 1572,
	1, 1756,
	663, 1756,
	666, 1756,
	-2, 1761,
	-1, 1674,
	392, 2633,
	454, 2633,
	504, 2633,
	652, 2633,
	-2, 2621,
	-1, 1680,
	203, 167,
	291, 167,
	357, 167,
	617, 167,
	-2, 3056,
	-1, 1681,
	203, 168,
	291, 168,
	357, 168,
	617, 168,
	-2, 2779,
	-1, 1682,
	203, 169,
	291, 169,
	357, 169,
	617, 169,
	-2, 2969,
	-1, 1688,
	664, 2633,
	-2, 2635,
	-1, 1691,
	25, 2993,
	241, 2993,
	-2, 0,
	-1, 1713,
	1, 1600,
	459, 1554,
	504, 1554,
	634, 1554,
	639, 1554,
	659, 1600,
	661, 1600,
	663, 1600,
	666, 1600,
	-2, 1904,
	-1, 1719,
	219, 1700,
	241, 1700,
	470, 1700,
	-2, 0,
	-1, 1787,
	46, 2631,
	-2, 1333,
	-1, 1794,
	1, 1600,
	659, 1600,
	661, 1600,
	663, 1600,
	666, 1600,
	-2, 1904,
	-1, 1797,
	436, 1370,
	607, 1370,
	-2, 477,
	-1, 1803,
	4, 1625,
	21, 1625,
	22, 1625,
	23, 1625,
	24, 1625,
	25, 1625,
	26, 1625,
	27, 1625,
	28, 1625,
	30, 1625,
	31, 1625,
	37, 1625,
	41, 1625,
	43, 1625,
	44, 1625,
	45, 1625,
	47, 1625,
	48, 1625,
	49, 1625,
	50, 1625,
	51, 1625,
	52, 1625,
	53, 1625,
	54, 1625,
	55, 1625,
	57, 1625,
	58, 1625,
	59, 1625,
	60, 1625,
	62, 1625,
	63, 1625,
	64, 1625,
	65, 1625,
	66, 1625,
	67, 1625,
	68, 1625,
	69, 1625,
	73, 1625,
	74, 1625,
	75, 1625,
	76, 1625,
	78, 1625,
	79, 1625,
	80, 1625,
	84, 1625,
	85, 1625,
	86, 1625,
	87, 1625,
	88, 1625,
	89, 1625,
	90, 1625,
	91, 1625,
	94, 1625,
	95, 1625,
	96, 1625,
	97, 1625,
	98, 1625,
	99, 1625,
	101, 1625,
	103, 1625,
	104, 1625,
	105, 1625,
	106, 1625,
	107, 1625,
	108, 1625,
	109, 1625,
	111, 1625,
	112, 1625,
	113, 1625,
	115, 1625,
	116, 1625,
	117, 1625,
	125, 1625,
	126, 1625,
	127, 1625,
	128, 1625,
	129, 1625,
	131, 1625,
	132, 1625,
	133, 1625,
	134, 1625,
	136, 1625,
	137, 1625,
	138, 1625,
	139, 1625,
	141, 1625,
	142, 1625,
	143, 1625,
	144, 1625,
	146, 1625,
	147, 1625,
	148, 1625,
	151, 1625,
	152, 1625,
	153, 1625,
	155, 1625,
	156, 1625,
	157, 1625,
	159, 1625,
	160, 1625,
	161, 1625,
	163, 1625,
	164, 1625,
	165, 1625,
	166, 1625,
	167, 1625,
	168, 1625,
	169, 1625,
	170, 1625,
	171, 1625,
	172, 1625,
	173, 1625,
	174, 1625,
	175, 1625,
	176, 1625,
	177, 1625,
	178, 1625,
	179, 1625,
	180, 1625,
	188, 1625,
	189, 1625,
	190, 1625,
	191, 1625,
	195, 1625,
	197, 1625,
	198, 1625,
	199, 1625,
	201, 1625,
	202, 1625,
	205, 1625,
	206, 1625,
	207, 1625,
	208, 1625,
	209, 1625,
	210, 1625,
	211, 1625,
	212, 1625,
	213, 1625,
	214, 1625,
	215, 1625,
	216, 1625,
	217, 1625,
	218, 1625,
	220, 1625,
	221, 1625,
	223, 1625,
	224, 1625,
	226, 1625,
	227, 1625,
	228, 1625,
	229, 1625,
	230, 1625,
	231, 1625,
	232, 1625,
	233, 1625,
	234, 1625,
	235, 1625,
	236, 1625,
	238, 1625,
	239, 1625,
	240, 1625,
	242, 1625,
	243, 1625,
	244, 1625,
	245, 1625,
	246, 1625,
	251, 1625,
	252, 1625,
	253, 1625,
	256, 1625,
	257, 1625,
	258, 1625,
	259, 1625,
	260, 1625,
	261, 1625,
	263, 1625,
	265, 1625,
	266, 1625,
	267, 1625,
	269, 1625,
	271, 1625,
	272, 1625,
	273, 1625,
	275, 1625,
	279, 1625,
	280, 1625,
	281, 1625,
	282, 1625,
	283, 1625,
	284, 1625,
	285, 1625,
	287, 1625,
	288, 1625,
	289, 1625,
	291, 1625,
	292, 1625,
	293, 1625,
	295, 1625,
	296, 1625,
	299, 1625,
	300, 1625,
	301, 1625,
	302, 1625,
	303, 1625,
	304, 1625,
	305, 1625,
	308, 1625,
	309, 1625,
	310, 1625,
	311, 1625,
	313, 1625,
	314, 1625,
	315, 1625,
	316, 1625,
	317, 1625,
	318, 1625,
	319, 1625,
	320, 1625,
	321, 1625,
	322, 1625,
	323, 1625,
	324, 1625,
	325, 1625,
	326, 1625,
	327, 1625,
	328, 1625,
	329, 1625,
	330, 1625,
	331, 1625,
	332, 1625,
	333, 1625,
	334, 1625,
	335, 1625,
	337, 1625,
	339, 1625,
	340, 1625,
	341, 1625,
	342, 1625,
	343, 1625,
	344, 1625,
	345, 1625,
	346, 1625,
	347, 1625,
	348, 1625,
	349, 1625,
	350, 1625,
	351, 1625,
	352, 1625,
	353, 1625,
	354, 1625,
	355, 1625,
	357, 1625,
	358, 1625,
	362, 1625,
	363, 1625,
	364, 1625,
	365, 1625,
	367, 1625,
	368, 1625,
	369, 1625,
	370, 1625,
	371, 1625,
	374, 1625,
	376, 1625,
	377, 1625,
	379, 1625,
	380, 1625,
	381, 1625,
	384, 1625,
	385, 1625,
	386, 1625,
	388, 1625,
	390, 1625,
	391, 1625,
	392, 1625,
	393, 1625,
	394, 1625,
	395, 1625,
	396, 1625,
	397, 1625,
	398, 1625,
	399, 1625,
	400, 1625,
	401, 1625,
	402, 1625,
	403, 1625,
	405, 1625,
	406, 1625,
	407, 1625,
	408, 1625,
	409, 1625,
	410, 1625,
	411, 1625,
	412, 1625,
	413, 1625,
	414, 1625,
	415, 1625,
	416, 1625,
	417, 1625,
	418, 1625,
	419, 1625,
	421, 1625,
	422, 1625,
	423, 1625,
	425, 1625,
	426, 1625,
	427, 1625,
	428, 1625,
	429, 1625,
	430, 1625,
	431, 1625,
	432, 1625,
	433, 1625,
	434, 1625,
	435, 1625,
	436, 1625,
	437, 1625,
	438, 1625,
	440, 1625,
	442, 1625,
	443, 1625,
	444, 1625,
	450, 1625,
	451, 1625,
	452, 1625,
	454, 1625,
	455, 1625,
	456, 1625,
	457, 1625,
	458, 1625,
	459, 1625,
	460, 1625,
	461, 1625,
	462, 1625,
	463, 1625,
	464, 1625,
	466, 1625,
	467, 1625,
	468, 1625,
	469, 1625,
	470, 1625,
	472, 1625,
	473, 1625,
	474, 1625,
	475, 1625,
	476, 1625,
	477, 1625,
	478, 1625,
	480, 1625,
	481, 1625,
	482, 1625,
	483, 1625,
	484, 1625,
	485, 1625,
	486, 1625,
	487, 1625,
	488, 1625,
	489, 1625,
	490, 1625,
	491, 1625,
	492, 1625,
	493, 1625,
	494, 1625,
	495, 1625,
	497, 1625,
	498, 1625,
	499, 1625,
	500, 1625,
	501, 1625,
	502, 1625,
	504, 1625,
	505, 1625,
	506, 1625,
	507, 1625,
	508, 1625,
	509, 1625,
	510, 1625,
	512, 1625,
	513, 1625,
	514, 1625,
	515, 1625,
	516, 1625,
	517, 1625,
	518, 1625,
	519, 1625,
	521, 1625,
	523, 1625,
	524, 1625,
	525, 1625,
	526, 1625,
	527, 1625,
	528, 1625,
	529, 1625,
	530, 1625,
	531, 1625,
	532, 1625,
	533, 1625,
	534, 1625,
	535, 1625,
	536, 1625,
	537, 1625,
	538, 1625,
	539, 1625,
	540, 1625,
	541, 1625,
	542, 1625,
	543, 1625,
	545, 1625,
	546, 1625,
	548, 1625,
	549, 1625,
	551, 1625,
	552, 1625,
	553, 1625,
	554, 1625,
	555, 1625,
	556, 1625,
	558, 1625,
	559, 1625,
	561, 1625,
	562, 1625,
	563, 1625,
	564, 1625,
	565, 1625,
	567, 1625,
	569, 1625,
	570, 1625,
	571, 1625,
	572, 1625,
	573, 1625,
	574, 1625,
	575, 1625,
	576, 1625,
	578, 1625,
	579, 1625,
	580, 1625,
	581, 1625,
	582, 1625,
	583, 1625,
	584, 1625,
	587, 1625,
	588, 1625,
	589, 1625,
	590, 1625,
	591, 1625,
	592, 1625,
	593, 1625,
	594, 1625,
	596, 1625,
	599, 1625,
	600, 1625,
	601, 1625,
	602, 1625,
	603, 1625,
	604, 1625,
	606, 1625,
	607, 1625,
	608, 1625,
	609, 1625,
	610, 1625,
	611, 1625,
	612, 1625,
	613, 1625,
	614, 1625,
	615, 1625,
	616, 1625,
	617, 1625,
	622, 1625,
	623, 1625,
	624, 1625,
	625, 1625,
	626, 1625,
	627, 1625,
	-2, 0,
	-1, 1826,
	1, 721,
	659, 721,
	661, 721,
	663, 721,
	666, 721,
	-2, 1875,
	-1, 1829,
	4, 3169,
	11, 3169,
	12, 3169,
	14, 3169,
	15, 3169,
	16, 3169,
	17, 3169,
	18, 3169,
	19, 3169,
	21, 3169,
	22, 3169,
	23, 3169,
	24, 3169,
	25, 3169,
	26, 3169,
	27, 3169,
	28, 3169,
	30, 3169,
	31, 3169,
	34, 3169,
	35, 3169,
	37, 3169,
	39, 3169,
	41, 3169,
	43, 3169,
	44, 3169,
	45, 3169,
	47, 3169,
	48, 3169,
	49, 3169,
	50, 3169,
	51, 3169,
	52, 3169,
	53, 3169,
	54, 3169,
	55, 3169,
	57, 3169,
	58, 3169,
	59, 3169,
	60, 3169,
	62, 3169,
	63, 3169,
	64, 3169,
	65, 3169,
	66, 3169,
	67, 3169,
	68, 3169,
	69, 3169,
	72, 3169,
	73, 3169,
	74, 3169,
	75, 3169,
	76, 3169,
	78, 3169,
	79, 3169,
	80, 3169,
	81, 3169,
	84, 3169,
	85, 3169,
	86, 3169,
	87, 3169,
	88, 3169,
	89, 3169,
	90, 3169,
	91, 3169,
	92, 3169,
	94, 3169,
	95, 3169,
	96, 3169,
	97, 3169,
	98, 3169,
	99, 3169,
	101, 3169,
	102, 3169,
	103, 3169,
	104, 3169,
	105, 3169,
	106, 3169,
	107, 3169,
	108, 3169,
	109, 3169,
	111, 3169,
	112, 3169,
	113, 3169,
	114, 3169,
	115, 3169,
	116, 3169,
	117, 3169,
	125, 3169,
	126, 3169,
	127, 3169,
	128, 3169,
	129, 3169,
	131, 3169,
	132, 3169,
	133, 3169,
	134, 3169,
	136, 3169,
	137, 3169,
	138, 3169,
	139, 3169,
	141, 3169,
	142, 3169,
	143, 3169,
	144, 3169,
	146, 3169,
	147, 3169,
	148, 3169,
	151, 3169,
	152, 3169,
	153, 3169,
	155, 3169,
	156, 3169,
	157, 3169,
	159, 3169,
	160, 3169,
	161, 3169,
	163, 3169,
	164, 3169,
	165, 3169,
	166, 3169,
	167, 3169,
	168, 3169,
	169, 3169,
	170, 3169,
	171, 3169,
	172, 3169,
	173, 3169,
	174, 3169,
	175, 3169,
	176, 3169,
	177, 3169,
	178, 3169,
	179, 3169,
	180, 3169,
	184, 3169,
	185, 3169,
	186, 3169,
	187, 3169,
	188, 3169,
	189, 3169,
	190, 3169,
	191, 3169,
	194, 3169,
	195, 3169,
	197, 3169,
	198, 3169,
	199, 3169,
	201, 3169,
	202, 3169,
	204, 3169,
	205, 3169,
	206, 3169,
	207, 3169,
	208, 3169,
	209, 3169,
	210, 3169,
	211, 3169,
	212, 3169,
	213, 3169,
	214, 3169,
	215, 3169,
	216, 3169,
	217, 3169,
	218, 3169,
	220, 3169,
	221, 3169,
	223, 3169,
	224, 3169,
	226, 3169,
	227, 3169,
	228, 3169,
	229, 3169,
	230, 3169,
	231, 3169,
	232, 3169,
	233, 3169,
	234, 3169,
	235, 3169,
	236, 3169,
	237, 3169,
	238, 3169,
	239, 3169,
	240, 3169,
	241, 3169,
	242, 3169,
	243, 3169,
	244, 3169,
	245, 3169,
	246, 3169,
	248, 3169,
	249, 3169,
	251, 3169,
	252, 3169,
	253, 3169,
	255, 3169,
	256, 3169,
	257, 3169,
	258, 3169,
	259, 3169,
	260, 3169,
	261, 3169,
	263, 3169,
	265, 3169,
	266, 3169,
	267, 3169,
	268, 3169,
	269, 3169,
	270, 3169,
	271, 3169,
	272, 3169,
	273, 3169,
	274, 3169,
	275, 3169,
	277, 3169,
	278, 3169,
	279, 3169,
	280, 3169,
	281, 3169,
	282, 3169,
	283, 3169,
	284, 3169,
	285, 3169,
	287, 3169,
	288, 3169,
	289, 3169,
	291, 3169,
	292, 3169,
	293, 3169,
	294, 3169,
	295, 3169,
	296, 3169,
	297, 3169,
	299, 3169,
	300, 3169,
	301, 3169,
	302, 3169,
	303, 3169,
	304, 3169,
	305, 3169,
	308, 3169,
	309, 3169,
	310, 3169,
	311, 3169,
	312, 3169,
	313, 3169,
	314, 3169,
	315, 3169,
	316, 3169,
	317, 3169,
	318, 3169,
	319, 3169,
	320, 3169,
	321, 3169,
	322, 3169,
	323, 3169,
	324, 3169,
	325, 3169,
	326, 3169,
	327, 3169,
	328, 3169,
	329, 3169,
	330, 3169,
	331, 3169,
	332, 3169,
	333, 3169,
	334, 3169,
	335, 3169,
	337, 3169,
	338, 3169,
	339, 3169,
	340, 3169,
	341, 3169,
	342, 3169,
	343, 3169,
	344, 3169,
	345, 3169,
	346, 3169,
	347, 3169,
	348, 3169,
	349, 3169,
	350, 3169,
	351, 3169,
	352, 3169,
	353, 3169,
	354, 3169,
	355, 3169,
	357, 3169,
	358, 3169,
	361, 3169,
	362, 3169,
	363, 3169,
	364, 3169,
	365, 3169,
	367, 3169,
	368, 3169,
	369, 3169,
	370, 3169,
	371, 3169,
	374, 3169,
	376, 3169,
	379, 3169,
	380, 3169,
	381, 3169,
	382, 3169,
	384, 3169,
	385, 3169,
	386, 3169,
	388, 3169,
	390, 3169,
	391, 3169,
	392, 3169,
	393, 3169,
	394, 3169,
	395, 3169,
	396, 3169,
	397, 3169,
	398, 3169,
	399, 3169,
	400, 3169,
	401, 3169,
	402, 3169,
	403, 3169,
	405, 3169,
	406, 3169,
	407, 3169,
	408, 3169,
	409, 3169,
	410, 3169,
	411, 3169,
	412, 3169,
	413, 3169,
	414, 3169,
	415, 3169,
	416, 3169,
	417, 3169,
	418, 3169,
	419, 3169,
	421, 3169,
	422, 3169,
	423, 3169,
	425, 3169,
	426, 3169,
	427, 3169,
	428, 3169,
	429, 3169,
	430, 3169,
	431, 3169,
	432, 3169,
	433, 3169,
	434, 3169,
	435, 3169,
	436, 3169,
	437, 3169,
	438, 3169,
	440, 3169,
	442, 3169,
	443, 3169,
	444, 3169,
	450, 3169,
	451, 3169,
	452, 3169,
	453, 3169,
	454, 3169,
	455, 3169,
	456, 3169,
	457, 3169,
	458, 3169,
	459, 3169,
	460, 3169,
	461, 3169,
	462, 3169,
	463, 3169,
	464, 3169,
	466, 3169,
	467, 3169,
	468, 3169,
	469, 3169,
	470, 3169,
	471, 3169,
	472, 3169,
	473, 3169,
	474, 3169,
	475, 3169,
	476, 3169,
	477, 3169,
	478, 3169,
	479, 3169,
	480, 3169,
	481, 3169,
	482, 3169,
	483, 3169,
	484, 3169,
	485, 3169,
	486, 3169,
	487, 3169,
	488, 3169,
	489, 3169,
	490, 3169,
	491, 3169,
	492, 3169,
	493, 3169,
	494, 3169,
	495, 3169,
	497, 3169,
	498, 3169,
	499, 3169,
	500, 3169,
	501, 3169,
	502, 3169,
	504, 3169,
	505, 3169,
	506, 3169,
	507, 3169,
	508, 3169,
	509, 3169,
	510, 3169,
	511, 3169,
	512, 3169,
	513, 3169,
	514, 3169,
	515, 3169,
	516, 3169,
	517, 3169,
	518, 3169,
	519, 3169,
	521, 3169,
	523, 3169,
	524, 3169,
	525, 3169,
	526, 3169,
	527, 3169,
	528, 3169,
	529, 3169,
	530, 3169,
	531, 3169,
	532, 3169,
	533, 3169,
	534, 3169,
	535, 3169,
	536, 3169,
	537, 3169,
	538, 3169,
	539, 3169,
	540, 3169,
	541, 3169,
	542, 3169,
	543, 3169,
	545, 3169,
	546, 3169,
	547, 3169,
	548, 3169,
	549, 3169,
	551, 3169,
	552, 3169,
	553, 3169,
	554, 3169,
	555, 3169,
	556, 3169,
	558, 3169,
	559, 3169,
	561, 3169,
	562, 3169,
	563, 3169,
	564, 3169,
	565, 3169,
	567, 3169,
	569, 3169,
	570, 3169,
	571, 3169,
	572, 3169,
	573, 3169,
	574, 3169,
	575, 3169,
	576, 3169,
	578, 3169,
	579, 3169,
	580, 3169,
	581, 3169,
	582, 3169,
	583, 3169,
	584, 3169,
	587, 3169,
	588, 3169,
	589, 3169,
	590, 3169,
	591, 3169,
	592, 3169,
	593, 3169,
	594, 3169,
	596, 3169,
	599, 3169,
	600, 3169,
	601, 3169,
	602, 3169,
	603, 3169,
	604, 3169,
	606, 3169,
	607, 3169,
	608, 3169,
	609, 3169,
	610, 3169,
	611, 3169,
	612, 3169,
	613, 3169,
	614, 3169,
	615, 3169,
	616, 3169,
	617, 3169,
	622, 3169,
	623, 3169,
	624, 3169,
	625, 3169,
	626, 3169,
	627, 3169,
	628, 3169,
	630, 3169,
	640, 3169,
	641, 3169,
	642, 3169,
	643, 3169,
	644, 3169,
	645, 3169,
	647, 3169,
	648, 3169,
	649, 3169,
	650, 3169,
	651, 3169,
	652, 3169,
	653, 3169,
	654, 3169,
	655, 3169,
	658, 3169,
	661, 3169,
	662, 3169,
	664, 3169,
	665, 3169,
	-2, 0,
	-1, 1834,
	203, 3014,
	566, 3014,
	642, 3014,
	662, 3014,
	-2, 0,
	-1, 1882,
	203, 1092,
	-2, 3004,
	-1, 1883,
	203, 1093,
	-2, 2787,
	-1, 1884,
	203, 1094,
	-2, 2955,
	-1, 1885,
	203, 1095,
	-2, 3083,
	-1, 1890,
	427, 1146,
	502, 1146,
	549, 1146,
	571, 1146,
	-2, 0,
	-1, 1901,
	1, 1700,
	241, 1700,
	659, 1700,
	661, 1700,
	663, 1700,
	666, 1700,
	-2, 0,
	-1, 1919,
	1, 1141,
	659, 1141,
	661, 1141,
	663, 1141,
	666, 1141,
	-2, 0,
	-1, 1920,
	1, 1185,
	659, 1185,
	661, 1185,
	663, 1185,
	666, 1185,
	-2, 0,
	-1, 1921,
	1, 1193,
	659, 1193,
	661, 1193,
	663, 1193,
	666, 1193,
	-2, 0,
	-1, 1924,
	1, 1150,
	659, 1150,
	661, 1150,
	663, 1150,
	666, 1150,
	-2, 0,
	-1, 1926,
	1, 1156,
	659, 1156,
	661, 1156,
	663, 1156,
	666, 1156,
	-2, 0,
	-1, 1929,
	1, 1152,
	659, 1152,
	661, 1152,
	663, 1152,
	666, 1152,
	-2, 0,
	-1, 1934,
	1, 1166,
	659, 1166,
	661, 1166,
	663, 1166,
	666, 1166,
	-2, 0,
	-1, 1969,
	1, 2993,
	659, 2993,
	661, 2993,
	662, 2993,
	663, 2993,
	666, 2993,
	-2, 0,
	-1, 1974,
	1, 1249,
	659, 1249,
	661, 1249,
	663, 1249,
	666, 1249,
	-2, 0,
	-1, 1994,
	183, 1918,
	196, 1918,
	298, 1918,
	372, 1918,
	-2, 1856,
	-1, 2096,
	162, 1877,
	183, 1877,
	196, 1877,
	262, 1877,
	298, 1877,
	372, 1877,
	383, 1877,
	585, 1877,
	-2, 2340,
	-1, 2157,
	661, 2515,
	-2, 0,
	-1, 2194,
	162, 1877,
	183, 1877,
	196, 1877,
	262, 1877,
	298, 1877,
	372, 1877,
	383, 1877,
	585, 1877,
	-2, 2018,
	-1, 2233,
	662, 2659,
	665, 2659,
	-2, 1276,
	-1, 2234,
	662, 2661,
	665, 2661,
	-2, 1277,
	-1, 2235,
	662, 2660,
	665, 2660,
	-2, 1278,
	-1, 2236,
	665, 2583,
	-2, 1279,
	-1, 2260,
	660, 2163,
	-2, 2151,
	-1, 2292,
	203, 3011,
	662, 3011,
	665, 3011,
	-2, 0,
	-1, 2343,
	1, 897,
	663, 897,
	666, 897,
	-2, 1761,
	-1, 2546,
	241, 320,
	-2, 2667,
	-1, 2547,
	241, 321,
	-2, 385,
	-1, 2664,
	1, 1143,
	659, 1143,
	661, 1143,
	663, 1143,
	666, 1143,
	-2, 0,
	-1, 2665,
	1, 1187,
	659, 1187,
	661, 1187,
	663, 1187,
	666, 1187,
	-2, 0,
	-1, 2666,
	1, 1195,
	659, 1195,
	661, 1195,
	663, 1195,
	666, 1195,
	-2, 0,
	-1, 2667,
	1, 1251,
	659, 1251,
	661, 1251,
	663, 1251,
	666, 1251,
	-2, 0,
	-1, 2709,
	1, 1168,
	659, 1168,
	661, 1168,
	663, 1168,
	666, 1168,
	-2, 0,
	-1, 2732,
	1, 1230,
	659, 1230,
	661, 1230,
	663, 1230,
	666, 1230,
	-2, 0,
	-1, 2782,
	477, 1945,
	478, 1945,
	-2, 2196,
	-1, 2815,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2216,
	-1, 2816,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2217,
	-1, 2817,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2218,
	-1, 2818,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2219,
	-1, 2819,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2220,
	-1, 2820,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2221,
	-1, 2821,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2222,
	-1, 2822,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2223,
	-1, 2834,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2235,
	-1, 2835,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2236,
	-1, 2836,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2237,
	-1, 2840,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2244,
	-1, 2846,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2248,
	-1, 2848,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2256,
	-1, 2849,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2257,
	-1, 2850,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2258,
	-1, 2851,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2259,
	-1, 3025,
	5, 2671,
	203, 2526,
	660, 2668,
	-2, 2659,
	-1, 3026,
	203, 2527,
	-2, 3099,
	-1, 3027,
	203, 2528,
	-2, 2882,
	-1, 3028,
	203, 2529,
	-2, 2750,
	-1, 3029,
	203, 2530,
	-2, 2815,
	-1, 3030,
	203, 2531,
	-2, 2867,
	-1, 3031,
	203, 2532,
	-2, 3007,
	-1, 3032,
	203, 2533,
	-2, 2323,
	-1, 3127,
	1, 2019,
	2, 2019,
	114, 2019,
	162, 2019,
	183, 2019,
	196, 2019,
	204, 2019,
	222, 2019,
	225, 2019,
	255, 2019,
	262, 2019,
	274, 2019,
	294, 2019,
	298, 2019,
	338, 2019,
	372, 2019,
	377, 2019,
	383, 2019,
	465, 2019,
	471, 2019,
	585, 2019,
	597, 2019,
	619, 2019,
	620, 2019,
	621, 2019,
	631, 2019,
	659, 2019,
	661, 2019,
	663, 2019,
	665, 2019,
	666, 2019,
	-2, 2018,
	-1, 3143,
	660, 2640,
	-2, 2654,
	-1, 3145,
	1, 402,
	619, 402,
	666, 402,
	-2, 1904,
	-1, 3183,
	660, 2162,
	-2, 2152,
	-1, 3214,
	38, 2671,
	135, 2671,
	642, 2671,
	658, 2671,
	661, 2671,
	662, 2671,
	665, 2671,
	-2, 2668,
	-1, 3215,
	38, 2672,
	135, 2672,
	642, 2672,
	658, 2672,
	661, 2672,
	662, 2672,
	665, 2672,
	-2, 2669,
	-1, 3445,
	1, 1600,
	459, 1554,
	504, 1554,
	634, 1554,
	639, 1554,
	659, 1600,
	661, 1600,
	663, 1600,
	666, 1600,
	-2, 1904,
	-1, 3605,
	1, 1234,
	659, 1234,
	661, 1234,
	663, 1234,
	666, 1234,
	-2, 0,
	-1, 3633,
	378, 1948,
	-2, 3158,
	-1, 3634,
	378, 1949,
	-2, 2990,
	-1, 3638,
	477, 2594,
	478, 2594,
	-2, 2321,
	-1, 3639,
	477, 2598,
	478, 2598,
	-2, 2322,
	-1, 3640,
	477, 2595,
	478, 2595,
	-2, 2321,
	-1, 3641,
	477, 2599,
	478, 2599,
	-2, 2322,
	-1, 3655,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2246,
	-1, 3656,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2250,
	-1, 3662,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2252,
	-1, 3911,
	1, 892,
	659, 892,
	661, 892,
	663, 892,
	666, 892,
	-2, 1761,
	-1, 4138,
	46, 2631,
	-2, 1334,
	-1, 4143,
	1, 1600,
	659, 1600,
	661, 1600,
	663, 1600,
	666, 1600,
	-2, 1904,
	-1, 4257,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2254,
	-1, 4264,
	268, 0,
	270, 0,
	361, 0,
	-2, 2273,
	-1, 4332,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2302,
	-1, 4333,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2303,
	-1, 4334,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2304,
	-1, 4338,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2308,
	-1, 4339,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2309,
	-1, 4340,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2310,
	-1, 4392,
	660, 2641,
	-2, 2655,
	-1, 4637,
	662, 3276,
	-2, 1830,
	-1, 4696,
	268, 0,
	270, 0,
	361, 0,
	-2, 2274,
	-1, 4699,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2277,
	-1, 4700,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2279,
	-1, 4830,
	662, 2656,
	-2, 1635,
	-1, 5006,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2278,
	-1, 5007,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2280,
	-1, 5018,
	268, 0,
	-2, 2313,
	-1, 5222,
	268, 0,
	-2, 2314,
	-1, 5455,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 3121,
}

const sqlPrivate = 57344

const sqlLast = 161453

var sqlAct = [...]int16{
	314, 3403, 5652, 5386, 5673, 1501, 5503, 5585, 5276, 3348,
	3795, 5510, 3520, 4, 5644, 5526, 5441, 1030, 6, 5083,
	5385, 5454, 1031, 10, 5468, 5599, 1230, 200, 5337, 5319,
	5397, 5376, 5268, 4124, 2543, 5470, 4826, 4679, 5424, 5400,
	5469, 5535, 2403, 4609, 1694, 5190, 1729, 5167, 5140, 5154,
	5416, 5226, 1403, 4297, 5453, 5466, 4958, 1557, 4963, 4921,
	4125, 1279, 2586, 3489, 4952, 4993, 4884, 5088, 3868, 4249,
	5027, 2792, 2637, 3938, 4161, 2374, 1498, 2200, 4621, 5173,
	1414, 4629, 3057, 3941, 4052, 5304, 954, 3207, 4529, 3647,
	4827, 4807, 2325, 807, 4002, 3274, 2863, 1852, 2635, 2247,
	2003, 1222, 4968, 1393, 1491, 3540, 4592, 4577, 2612, 4094,
	4575, 4382, 4155, 2802, 3944, 954, 3364, 4109, 5023, 1578,
	4190, 2412, 882, 3509, 4188, 2793, 3477, 4114, 4087, 3506,
	4113, 4086, 2599, 200, 3927, 3925, 4106, 3157, 1278, 3273,
	3404, 4395, 3926, 3801, 3844, 4116, 2633, 3818, 3810, 3851,
	3776, 4678, 3572, 1850, 819, 1034, 3535, 4735, 3521, 3799,
	2169, 2530, 1671, 3452, 3128, 3504, 2441, 2492, 2532, 3377,
	2424, 5511, 3835, 4107, 2229, 1724, 3965, 3775, 1725, 4359,
	2166, 5227, 2301, 3120, 3122, 2143, 2799, 2074, 1898, 3534,
	2104, 3631, 2876, 2583, 2941, 1025, 1496, 3119, 1789, 949,
	3414, 3930, 2490, 2943, 2531, 2486, 2468, 2464, 1493, 878,
	2472, 1283, 2323, 1540, 2391, 3490, 1288, 2189, 1484, 1467,
	2395, 1572, 3205, 1394, 3206, 2170, 3054, 3163, 308, 2932,
	2860, 3100, 1470, 2373, 2781, 2764, 1477, 2762, 2370, 855,
	794, 1559, 3158, 1696, 817, 1792, 1827, 3514, 1785, 2186,
	2363, 2516, 2582, 5421, 5653, 3298, 3299, 5338, 307, 4117,
	1106, 956, 1286, 1527, 955, 123, 3259, 1473, 1481, 1444,
	1432, 1447, 2138, 2935, 1397, 1411, 3109, 3069, 1251, 1555,
	1376, 2179, 898, 2913, 3021, 2987, 2088, 2004, 2005, 2763,
	956, 1233, 2765, 955, 1934, 211, 2679, 2540, 863, 1818,
	212, 1919, 874, 1004, 127, 838, 1825, 2521, 3213, 5527,
	1285, 1754, 1679, 5586, 960, 1552, 1264, 812, 50, 49,
	1399, 1374, 47, 38, 944, 36, 34, 2010, 3685, 808,
	1985, 821, 1735, 1571, 1128, 4373, 1409, 3679, 4374, 1005,
	2303, 1728, 2303, 960, 963, 5688, 3797, 2303, 5676, 3099,
	2303, 5662, 4067, 2303, 5660, 2303, 891, 894, 3099, 3746,
	3747, 5659, 113, 5619, 5617, 3099, 5557, 5087, 5087, 3869,
	2552, 176, 5512, 963, 5494, 5492, 5513, 5489, 3099, 3099,
	84, 5490, 52, 51, 5486, 1786, 5464, 5451, 5487, 5463,
	5450, 2552, 4170, 5449, 2552, 5047, 5439, 3545, 5437, 85,
	5087, 5428, 5087, 78, 5427, 5087, 5395, 5359, 5087, 5055,
	5087, 3174, 5352, 2335, 5052, 5351, 3099, 90, 1391, 3099,
	5342, 5318, 5315, 5297, 2552, 2552, 5087, 4911, 73, 1925,
	2020, 2021, 5224, 1862, 5204, 54, 3174, 174, 4654, 5169,
	5106, 5105, 5094, 4451, 2552, 2552, 2552, 5046, 5045, 5093,
	5051, 1377, 1377, 5087, 2051, 5086, 1536, 53, 5050, 5087,
	99, 5034, 2023, 5008, 4978, 2552, 4771, 3174, 3545, 4946,
	1215, 4945, 4879, 4067, 4854, 1226, 3099, 4171, 3099, 1227,
	3746, 3747, 4750, 3764, 3765, 3766, 4751, 1226, 56, 74,
	2634, 2076, 3861, 4698, 2332, 4645, 1206, 3174, 57, 4183,
	2022, 1205, 3888, 63, 1536, 3746, 3747, 106, 79, 4639,
	2335, 2042, 2587, 4183, 3694, 4589, 55, 4482, 122, 4590,
	3695, 4483, 4450, 3199, 106, 119, 4451, 2020, 2021, 2938,
	4388, 4386, 4366, 75, 4389, 4387, 3099, 1406, 4363, 4281,
	4277, 1221, 3752, 2552, 3099, 4182, 2332, 2332, 3891, 4183,
	3882, 2051, 3892, 3794, 3792, 3071, 3482, 3099, 3793, 2023,
	3787, 3761, 3786, 3737, 3099, 4067, 3099, 3738, 3169, 58,
	3735, 3727, 1262, 3725, 3736, 3728, 3696, 3099, 3544, 3531,
	3099, 1429, 3545, 2622, 2552, 1405, 3761, 1439, 2076, 1378,
	107, 2332, 3530, 2335, 3238, 3173, 2622, 2022, 3099, 3174,
	1380, 3646, 1381, 2045, 2046, 2047, 2048, 3155, 2042, 3746,
	3747, 3099, 2335, 2028, 3099, 3147, 3098, 2621, 2039, 2552,
	3099, 2622, 2335, 1737, 272, 5360, 5228, 1737, 5219, 2939,
	5207, 3545, 4363, 3070, 4956, 4911, 2332, 4855, 4654, 4591,
	4584, 3355, 2417, 3258, 2349, 2551, 3249, 2329, 3482, 4048,
	2302, 3374, 3164, 2164, 2316, 1430, 1722, 4500, 4252, 4220,
	3762, 3746, 3747, 3752, 3764, 3765, 3766, 2050, 2052, 2187,
	2479, 4172, 76, 1900, 3139, 3138, 3137, 4692, 274, 3136,
	1430, 3135, 1382, 1379, 4694, 1214, 1213, 1843, 3752, 1212,
	1211, 4173, 5479, 1210, 2889, 2890, 2891, 2908, 2909, 2910,
	2045, 2046, 2047, 2048, 1209, 1208, 1204, 1203, 1202, 272,
	2028, 1201, 1200, 1199, 3598, 2911, 1198, 2940, 1197, 2937,
	1196, 3746, 3747, 1195, 3764, 3765, 3766, 1194, 1193, 1192,
	273, 2043, 1191, 2304, 1190, 2304, 1189, 3768, 1188, 1187,
	2304, 2073, 3761, 2304, 4693, 1186, 2304, 1185, 2304, 266,
	111, 1184, 2076, 1171, 1104, 5478, 1103, 3099, 267, 1102,
	1101, 1100, 1099, 274, 2050, 2052, 1098, 4755, 59, 3684,
	1097, 1096, 2901, 1095, 1094, 1093, 1092, 1091, 1090, 1089,
	1088, 3762, 2897, 1087, 4710, 62, 3482, 1086, 213, 1749,
	65, 1736, 3752, 2037, 2038, 1085, 1084, 1083, 1082, 1081,
	77, 1080, 3761, 1079, 1078, 1077, 3762, 1076, 64, 209,
	1075, 114, 2073, 1074, 118, 273, 1073, 1072, 1071, 1070,
	60, 1069, 1743, 1068, 175, 3746, 3747, 3763, 2043, 272,
	1067, 1056, 61, 1055, 1054, 1049, 1048, 1041, 1040, 1039,
	1024, 1023, 1022, 167, 3752, 980, 272, 1407, 2332, 3746,
	3747, 2332, 979, 978, 68, 977, 1503, 1288, 976, 967,
	167, 966, 2073, 965, 2902, 2903, 2904, 2905, 964, 1728,
	926, 2332, 2049, 213, 2896, 2701, 2332, 173, 925, 889,
	888, 1737, 887, 274, 1288, 1288, 1288, 2073, 869, 302,
	301, 2942, 300, 299, 298, 297, 296, 295, 2044, 294,
	274, 293, 292, 1431, 3752, 291, 290, 289, 288, 2073,
	3762, 287, 2332, 286, 285, 284, 283, 1441, 3768, 282,
	2332, 3517, 281, 272, 2020, 2021, 280, 272, 172, 279,
	1581, 3499, 278, 3070, 1288, 273, 2335, 1699, 3225, 4170,
	277, 1288, 1288, 2332, 215, 1503, 2329, 4970, 3763, 2302,
	1713, 2757, 273, 276, 266, 275, 2023, 2906, 2907, 1544,
	1545, 1546, 3762, 267, 1430, 4421, 2075, 4378, 4224, 2049,
	1288, 266, 1288, 3763, 1288, 4184, 1531, 274, 3768, 3847,
	267, 274, 1699, 3707, 210, 1737, 3690, 3681, 3575, 214,
	1866, 2073, 2899, 213, 2022, 2044, 3755, 3756, 3748, 3749,
	3750, 3751, 3753, 3754, 3462, 3178, 1503, 3144, 3752, 3790,
	213, 1794, 2332, 3, 2106, 3126, 3266, 3070, 3266, 1531,
	1748, 2970, 3762, 2968, 2936, 2754, 1847, 1684, 1699, 273,
	2954, 2952, 3752, 273, 2190, 1699, 1726, 2376, 2334, 2213,
	1689, 2115, 1986, 2073, 1288, 1927, 1288, 1731, 266, 1430,
	1548, 1699, 266, 1742, 3791, 200, 200, 267, 3187, 1413,
	1288, 267, 1288, 2075, 5475, 2017, 2033, 2031, 2032, 2024,
	2025, 2026, 2027, 2029, 2030, 5452, 5436, 3763, 2146, 5323,
	5231, 5216, 1476, 1480, 5210, 2145, 1523, 213, 5078, 5022,
	2146, 213, 4602, 4976, 3746, 3747, 1488, 2145, 5208, 1525,
	4955, 4780, 4733, 2073, 4732, 4726, 4725, 2028, 4724, 3758,
	3759, 3760, 1699, 1799, 1802, 2149, 3757, 3755, 3756, 3748,
	3749, 3750, 3751, 3753, 3754, 1821, 4717, 2144, 2113, 3763,
	2106, 1509, 4716, 1288, 4714, 4709, 1288, 4706, 4705, 4588,
	1711, 3757, 3755, 3756, 3748, 3749, 3750, 3751, 3753, 3754,
	3762, 1676, 1574, 4583, 1668, 1673, 4425, 1229, 4424, 2900,
	2040, 2036, 4423, 2033, 2031, 2032, 2024, 2025, 2026, 2027,
	2029, 2030, 4391, 4353, 4972, 4352, 1517, 2559, 4351, 4273,
	4268, 272, 1551, 1562, 1563, 1723, 960, 3842, 3783, 3763,
	3774, 3745, 3742, 3741, 3739, 2107, 3734, 2105, 2557, 4488,
	1787, 3264, 3501, 3733, 3732, 3729, 3726, 2073, 3706, 3689,
	4498, 1704, 3682, 3680, 3532, 3127, 963, 1554, 2925, 1867,
	1707, 1564, 1565, 2017, 1830, 1832, 2016, 2075, 2602, 5682,
	1805, 2073, 3746, 3747, 2108, 274, 1390, 5607, 5606, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 3756, 3748, 3749,
	3750, 3751, 3753, 3754, 5525, 5523, 1415, 4299, 3874, 5387,
	4603, 5302, 3117, 5288, 5284, 5283, 5282, 5262, 5261, 5259,
	5230, 1828, 1288, 5229, 1531, 5202, 2866, 3752, 1288, 5188,
	5185, 5184, 272, 272, 5165, 272, 5164, 273, 5102, 5073,
	3758, 3759, 3760, 1227, 5020, 5003, 5002, 3757, 3755, 3756,
	3748, 3749, 3750, 3751, 3753, 3754, 266, 1995, 4941, 4937,
	1819, 4934, 4912, 2872, 4731, 267, 272, 3763, 4655, 4486,
	2886, 2887, 2888, 2912, 2898, 2892, 1943, 2894, 2895, 2893,
	2880, 2881, 2882, 2883, 2884, 2885, 274, 274, 4485, 274,
	3176, 4466, 4465, 4463, 3263, 213, 3836, 2095, 2167, 4369,
	3758, 3759, 3760, 4356, 4263, 3788, 2093, 3757, 3755, 3756,
	3748, 3749, 3750, 3751, 3753, 3754, 4185, 4147, 1872, 272,
	274, 3263, 4137, 3263, 4028, 3976, 3943, 1842, 4603, 3876,
	3711, 3710, 3705, 3671, 1288, 1288, 1288, 3476, 273, 273,
	1288, 273, 3474, 1861, 3291, 3762, 1991, 1411, 2152, 1411,
	2151, 2150, 2147, 2139, 2137, 3185, 3184, 266, 266, 3141,
	266, 3134, 3097, 2950, 1581, 3752, 267, 267, 2092, 267,
	2307, 2212, 273, 274, 2168, 2161, 1288, 200, 2160, 2235,
	1503, 2159, 3500, 2158, 2157, 2156, 2155, 2265, 2235, 2154,
	1503, 266, 2153, 1503, 1699, 2018, 3516, 213, 1891, 213,
	267, 2134, 2133, 2132, 2131, 2130, 2129, 4971, 1409, 2128,
	1409, 2127, 2216, 1928, 3748, 3749, 3750, 3751, 3753, 3754,
	2126, 2125, 2176, 2124, 5233, 273, 2073, 1996, 2123, 2122,
	213, 2221, 2121, 2120, 272, 3757, 3755, 3756, 3748, 3749,
	3750, 3751, 3753, 3754, 266, 2119, 1987, 2108, 1824, 2094,
	2091, 2086, 1516, 267, 1436, 2223, 2243, 1425, 2228, 1992,
	5232, 1503, 2000, 2222, 4944, 1999, 2294, 1288, 4776, 2297,
	272, 4702, 3839, 2148, 4420, 4385, 1206, 4372, 3693, 3132,
	5048, 1205, 4778, 213, 1994, 4419, 2107, 1227, 274, 3872,
	2089, 1288, 2197, 3746, 3747, 2173, 2174, 4176, 4857, 1581,
	2020, 2021, 2013, 2014, 2208, 5471, 1541, 1543, 3349, 1558,
	1377, 1558, 3763, 5598, 1558, 2026, 2027, 2029, 2030, 1558,
	2369, 4585, 5292, 1558, 274, 5285, 4975, 4895, 2406, 2020,
	2021, 4894, 2023, 1558, 4893, 1556, 4892, 2337, 4891, 4856,
	273, 4757, 4662, 4661, 4660, 4659, 4658, 2367, 4657, 2341,
	4656, 2140, 2141, 4452, 2238, 4376, 4375, 2236, 4187, 266,
	4186, 2023, 2288, 2238, 2218, 4069, 2236, 2198, 267, 1531,
	2022, 4068, 4057, 2361, 2360, 272, 273, 1558, 2369, 3317,
	2454, 2220, 5553, 1542, 5551, 2217, 4606, 2340, 5174, 1536,
	2146, 5467, 1989, 2190, 2188, 266, 1536, 2145, 213, 2022,
	2314, 272, 2938, 2355, 267, 4250, 2319, 960, 3979, 1406,
	2321, 1406, 4520, 3731, 1227, 3730, 960, 2326, 3653, 4018,
	3302, 2328, 2129, 2195, 1539, 3412, 2331, 4481, 2117, 274,
	2969, 1890, 2967, 3945, 213, 1182, 1824, 963, 2476, 2953,
	2951, 5255, 2317, 2129, 5254, 2587, 963, 2165, 4127, 2533,
	4126, 4596, 1536, 5168, 1944, 274, 4446, 1405, 4447, 1405,
	5500, 2654, 1899, 4953, 3541, 5211, 4095, 2192, 5255, 2207,
	2206, 1699, 1699, 2205, 2203, 4899, 2202, 2201, 1900, 5209,
	2534, 273, 1581, 3748, 3749, 3750, 3751, 3753, 3754, 1183,
	4582, 5024, 2343, 4526, 3797, 2248, 5077, 4517, 2244, 4491,
	266, 4215, 2939, 3909, 2364, 2722, 2631, 273, 1699, 267,
	2567, 4301, 2028, 3699, 2473, 4822, 2933, 3300, 5665, 2488,
	3183, 3362, 3351, 2162, 4841, 5476, 266, 2142, 1823, 4144,
	2595, 2339, 4838, 2114, 2460, 267, 1798, 1699, 1718, 213,
	1512, 1472, 5491, 5488, 4871, 4867, 3371, 4166, 2449, 3368,
	2458, 4457, 2477, 4815, 3366, 2453, 2469, 1876, 5277, 4959,
	2452, 5394, 2417, 3948, 4476, 213, 3513, 2517, 2544, 2549,
	3574, 1855, 4078, 1018, 5645, 5554, 5100, 5555, 2019, 5096,
	5075, 5590, 1699, 2463, 1699, 2381, 1699, 2382, 2463, 5097,
	2940, 4244, 2937, 3913, 5129, 1232, 4843, 2389, 2390, 2603,
	2463, 5532, 5477, 3276, 1699, 1699, 2362, 5133, 1768, 4032,
	1923, 4816, 5069, 1225, 1180, 4539, 1941, 4053, 1699, 1178,
	3239, 2383, 2384, 3750, 3751, 3753, 3754, 1720, 2387, 2388,
	1699, 1176, 2366, 1699, 1699, 1699, 1699, 2423, 2415, 2411,
	5675, 5293, 1761, 3262, 1389, 3262, 924, 5122, 5108, 2626,
	2356, 921, 4904, 2715, 4903, 1942, 1167, 2713, 2235, 3873,
	3260, 4537, 3260, 4536, 4528, 2733, 1821, 4506, 2614, 1543,
	2614, 2536, 2537, 2365, 4505, 2615, 1231, 4050, 4503, 4502,
	4490, 1288, 4449, 4448, 2446, 2665, 2461, 4084, 4083, 4460,
	1019, 4538, 2538, 4020, 2655, 2518, 4049, 3860, 3704, 3703,
	2550, 960, 3454, 3702, 2591, 3701, 2596, 3657, 2499, 3410,
	3177, 2073, 3409, 1224, 3389, 3387, 1823, 3373, 3361, 1407,
	1288, 1407, 3353, 3342, 2609, 3341, 3279, 2652, 1940, 3329,
	3328, 963, 1922, 3327, 3307, 3306, 2445, 3267, 2344, 3156,
	2442, 2459, 2847, 2245, 2629, 1542, 1993, 2467, 5205, 3915,
	2983, 1874, 2982, 2804, 2666, 2617, 4837, 1288, 2639, 1288,
	2660, 1537, 2523, 861, 2942, 2523, 1288, 45, 2526, 1288,
	2474, 2265, 2265, 1581, 4839, 1288, 1288, 1288, 1288, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
	1288, 5591, 1288, 4016, 1288, 1288, 1288, 1288, 2570, 2564,
	2522, 2619, 2606, 2522, 3945, 1828, 1543, 1828, 4586, 2534,
	5646, 5533, 2685, 2238, 1226, 4811, 2236, 2163, 5098, 2646,
	1288, 2587, 4812, 2462, 1288, 1288, 3510, 1227, 2462, 1227,
	4055, 2598, 1288, 4817, 4217, 2774, 1288, 3978, 1288, 1288,
	2462, 5070, 2611, 1016, 2772, 1015, 1581, 1811, 3246, 1810,
	2761, 2645, 1288, 1288, 1288, 1288, 1537, 2725, 1288, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 960, 1517, 2623, 1809,
	2624, 1808, 1533, 3193, 5145, 861, 4814, 2936, 4054, 5593,
	5001, 1869, 1542, 1772, 1288, 1288, 1288, 1288, 1288, 1288,
	1288, 1288, 1288, 4788, 1288, 4818, 963, 1763, 2416, 1288,
	1173, 2456, 3323, 2756, 3321, 1526, 2914, 2915, 2770, 1721,
	2746, 1411, 4799, 3162, 3304, 2743, 2585, 3754, 1581, 2752,
	2914, 2930, 1579, 2664, 2030, 2650, 3278, 1411, 4858, 2675,
	2413, 1560, 1561, 1560, 1561, 2686, 1560, 1561, 1458, 1984,
	1780, 2371, 2372, 1288, 1581, 1560, 1561, 2978, 2024, 2025,
	2026, 2027, 2029, 2030, 2732, 1560, 1561, 2933, 2729, 1892,
	1538, 2709, 5270, 2798, 1960, 3548, 3024, 3024, 3038, 2409,
	2914, 1923, 1409, 3058, 3060, 2862, 1503, 2786, 4017, 2862,
	2785, 3068, 2797, 5132, 5594, 4798, 3593, 1533, 1409, 3146,
	2672, 3290, 4840, 860, 3171, 1939, 1764, 1988, 3340, 2371,
	2372, 1021, 1020, 200, 2414, 5554, 2720, 1870, 1954, 3629,
	2878, 3332, 3330, 2707, 4051, 2760, 1223, 3166, 2759, 2730,
	2766, 2773, 2758, 1534, 2870, 3142, 2519, 1503, 2929, 2669,
	5153, 2868, 2745, 1535, 3114, 2410, 1206, 1888, 3215, 1206,
	1206, 2789, 4813, 1537, 2790, 2791, 1920, 3370, 5473, 2731,
	2425, 1515, 3170, 1900, 3106, 2524, 2663, 5623, 1998, 2800,
	2801, 1900, 5592, 3334, 2772, 3644, 1503, 1503, 3378, 3912,
	2197, 3233, 3289, 2980, 2771, 1538, 2429, 5602, 2981, 1377,
	2616, 2984, 3369, 2985, 2986, 3367, 4229, 1227, 4823, 4824,
	3365, 4228, 3277, 1922, 3595, 5272, 4136, 1227, 2208, 1793,
	2525, 1227, 3609, 3198, 2874, 5596, 4487, 1581, 3261, 3333,
	3331, 4473, 2673, 3131, 2520, 1921, 862, 3195, 3393, 5654,
	2942, 2927, 2527, 806, 1958, 860, 5245, 5244, 2770, 2858,
	1065, 3668, 1875, 4902, 3113, 4835, 3118, 2426, 1534, 3124,
	3125, 3105, 4290, 3234, 5146, 4567, 4287, 4504, 1535, 4501,
	801, 5577, 2753, 3918, 2443, 2769, 2265, 3189, 5144, 2448,
	1791, 2856, 922, 3666, 3228, 3192, 5142, 922, 3020, 3033,
	3159, 3049, 3062, 1406, 1533, 3064, 3212, 1531, 4430, 1175,
	5000, 3095, 3096, 3746, 3747, 3179, 3764, 3765, 3766, 1406,
	3111, 3112, 1227, 3107, 922, 2148, 960, 3165, 960, 922,
	2714, 2195, 3236, 2178, 2712, 3160, 4429, 4568, 4428, 4414,
	1581, 3204, 4413, 3643, 3303, 2742, 918, 2768, 3191, 5141,
	4412, 1405, 1699, 4221, 3612, 2417, 963, 4090, 963, 3190,
	3220, 4082, 1536, 3339, 4288, 2450, 3224, 1405, 4787, 4471,
	5474, 5576, 3168, 4014, 5566, 3388, 3372, 3242, 862, 5143,
	3235, 960, 3326, 3305, 3268, 2430, 1936, 4566, 3161, 3230,
	3996, 3253, 1538, 5625, 3761, 3218, 1503, 3186, 5356, 3987,
	3244, 3445, 3231, 2556, 2555, 3154, 3227, 2140, 2141, 5540,
	968, 963, 2444, 1476, 3237, 1480, 4684, 1288, 1288, 3223,
	1288, 4683, 2501, 2182, 2771, 3265, 3197, 3407, 4222, 2367,
	2367, 3363, 3449, 3229, 3200, 3201, 1771, 975, 2438, 3636,
	3637, 4091, 2420, 4088, 3245, 2852, 2942, 3663, 3222, 3485,
	5504, 1503, 3997, 5595, 3309, 1534, 3488, 2431, 2432, 3324,
	1158, 3988, 2744, 4917, 2511, 1535, 3243, 1290, 916, 2853,
	4163, 3602, 3240, 4164, 2185, 3347, 2854, 1536, 3664, 1797,
	2859, 5600, 3669, 1699, 2427, 1219, 5472, 2303, 3480, 4833,
	5278, 1457, 3294, 2180, 3450, 1699, 3752, 1699, 2529, 4546,
	2439, 3611, 3995, 1699, 2421, 2769, 3308, 4836, 200, 4544,
	1873, 3986, 1158, 2183, 1699, 1699, 3271, 3337, 3379, 1982,
	3325, 5271, 3343, 1955, 3281, 3284, 3254, 3255, 4010, 2844,
	3256, 3257, 2428, 2507, 3608, 3252, 2214, 1219, 2942, 5371,
	3497, 1503, 2671, 1503, 3448, 5061, 4055, 1333, 2480, 4012,
	2437, 3457, 1281, 2487, 2419, 4011, 3459, 2181, 3411, 1871,
	2528, 4163, 3336, 3446, 3447, 3335, 1288, 3551, 3552, 3315,
	3316, 3318, 3319, 3320, 3322, 3345, 3352, 4009, 1174, 3559,
	3560, 3561, 3562, 3359, 1159, 4008, 3932, 3460, 3492, 1419,
	4005, 5443, 3542, 5444, 3310, 2504, 3812, 1699, 4548, 1793,
	5601, 2434, 3350, 3539, 5354, 3538, 1421, 3659, 3384, 3914,
	1952, 2861, 3558, 1407, 3762, 859, 3524, 3576, 2708, 3577,
	1959, 1901, 3397, 3398, 3960, 2417, 3570, 3400, 3536, 1407,
	3401, 3402, 1719, 4547, 1416, 1434, 1159, 4931, 1288, 2135,
	960, 3455, 5603, 3533, 1288, 1288, 3546, 2869, 3145, 2509,
	3543, 2440, 5355, 3553, 3610, 3554, 3549, 802, 3262, 1288,
	2457, 3870, 2455, 3526, 1536, 2668, 1953, 4834, 2433, 3040,
	963, 2377, 1887, 1889, 1956, 3282, 2481, 3528, 1066, 2457,
	969, 970, 1422, 2455, 4073, 3959, 1514, 2855, 4995, 3665,
	2184, 3481, 2662, 1997, 4089, 2073, 3614, 2857, 3616, 3667,
	4765, 2415, 1288, 1288, 3496, 3966, 917, 4766, 1288, 2524,
	2477, 1423, 2842, 2451, 5518, 2510, 2845, 5313, 2454, 3567,
	4472, 1288, 1288, 3519, 4680, 5519, 1828, 1288, 1288, 3529,
	3527, 2407, 5013, 1288, 5564, 1508, 3583, 3508, 3585, 5405,
	3587, 5539, 3589, 3590, 1164, 1163, 4873, 2182, 4822, 803,
	2514, 3569, 3578, 5621, 2525, 2435, 1420, 827, 2924, 2085,
	3709, 3110, 3968, 2447, 919, 3599, 3897, 3584, 915, 3586,
	4764, 3588, 2841, 5626, 5305, 4013, 3455, 3123, 1288, 1288,
	1288, 3763, 1957, 1226, 1288, 4546, 4815, 3582, 4303, 5306,
	4808, 5609, 4943, 1160, 1288, 4544, 1164, 1163, 2185, 4685,
	4669, 2456, 3660, 3346, 804, 4907, 805, 4775, 4550, 4806,
	4415, 1288, 3933, 1440, 1438, 4246, 3811, 3108, 3385, 4810,
	3627, 4545, 1906, 2502, 5307, 3617, 5320, 5411, 3619, 5336,
	5187, 3692, 3967, 3635, 2512, 972, 971, 2183, 4994, 4906,
	4905, 3624, 4627, 4151, 4816, 1160, 2020, 2021, 1734, 4063,
	1741, 2508, 1747, 4061, 2553, 3886, 3626, 3625, 3391, 3153,
	3386, 3687, 3688, 5505, 2581, 2175, 3691, 1437, 1428, 2396,
	2051, 793, 3630, 5136, 2397, 4932, 2786, 3683, 2023, 2785,
	2304, 1480, 2505, 4601, 4548, 3645, 2008, 2719, 2473, 2503,
	4729, 4809, 3652, 2453, 1057, 5309, 4342, 2513, 2452, 5095,
	4681, 2788, 2418, 1288, 1288, 1288, 1288, 2076, 2357, 973,
	974, 2007, 1288, 1288, 1288, 2484, 2022, 1288, 5041, 4547,
	5308, 1058, 1841, 4555, 1846, 2548, 2477, 3852, 1161, 4062,
	3392, 1288, 1411, 1581, 5196, 3658, 1042, 5631, 1860, 5310,
	1865, 4076, 3758, 3759, 3760, 3939, 4077, 2778, 2354, 3757,
	3755, 3756, 3748, 3749, 3750, 3751, 3753, 3754, 1288, 1162,
	1288, 5252, 5538, 1047, 4628, 4532, 3804, 3805, 4507, 1411,
	4458, 4456, 2506, 2396, 4152, 4142, 3935, 2482, 2397, 3498,
	1161, 2416, 3491, 2471, 3478, 2610, 2843, 1581, 2604, 2178,
	4996, 5517, 1227, 1409, 1417, 3283, 2597, 2398, 2589, 3785,
	2566, 2563, 1411, 3382, 4286, 1581, 868, 1765, 1926, 5321,
	1449, 1162, 3311, 2470, 2184, 2402, 4357, 1503, 1166, 4576,
	2007, 3698, 4247, 5377, 5181, 5339, 2006, 2483, 3266, 2028,
	1409, 2352, 2721, 2002, 2350, 2265, 3396, 3101, 1165, 1581,
	3806, 4630, 2007, 4964, 3475, 1459, 4442, 4686, 5160, 1503,
	5158, 5072, 2465, 3816, 3845, 3951, 1418, 3947, 3946, 3650,
	1503, 3628, 2651, 1409, 4371, 3889, 3215, 2265, 4811, 3809,
	1166, 3808, 3841, 2643, 3866, 4812, 2632, 3104, 2353, 2182,
	1930, 1929, 2561, 2050, 2052, 1924, 4817, 2414, 4064, 4408,
	1165, 3394, 3152, 3859, 3151, 3150, 2399, 2404, 1288, 2779,
	2008, 2398, 3149, 1817, 3846, 1224, 4343, 4545, 2085, 3148,
	1288, 4730, 3814, 1784, 4581, 1803, 2380, 4344, 2466, 2402,
	4901, 3103, 2406, 1815, 4554, 3880, 3102, 1064, 1503, 4814,
	2185, 1804, 5084, 3934, 2265, 2006, 4922, 5265, 3780, 3781,
	3782, 3287, 4687, 4597, 2474, 2803, 4464, 2043, 4818, 2180,
	3887, 1288, 2608, 3894, 3896, 4098, 3798, 2006, 2406, 3854,
	3855, 3856, 3857, 3829, 1059, 1060, 3828, 1503, 5630, 2183,
	2417, 3815, 3984, 3910, 3850, 3834, 3827, 3838, 3903, 2493,
	4453, 1786, 3830, 3831, 5162, 3916, 907, 2400, 1503, 4511,
	1503, 5561, 5080, 3999, 1406, 4001, 5059, 1907, 1531, 3813,
	2399, 2404, 3312, 3313, 3212, 3833, 1043, 1044, 5057, 2008,
	3837, 5056, 3573, 2181, 1288, 1288, 3453, 5311, 4065, 2476,
	4019, 3395, 1581, 5312, 908, 5322, 3950, 2476, 2073, 3955,
	4218, 1406, 3957, 5079, 1503, 4212, 2221, 3885, 2945, 4043,
	5180, 2407, 1405, 3884, 3890, 5067, 5085, 3883, 3877, 3878,
	1503, 3879, 3865, 960, 3864, 4060, 3863, 3981, 3936, 3922,
	3923, 3899, 4443, 5161, 1406, 3901, 3902, 1217, 3862, 1158,
	3905, 1503, 3906, 3547, 3907, 3458, 4071, 3456, 2204, 1405,
	2636, 3949, 2533, 963, 3953, 1879, 3963, 4006, 3853, 3895,
	3893, 2400, 4793, 5383, 1219, 4813, 5068, 4792, 3920, 3904,
	3985, 3900, 4075, 2405, 5266, 5391, 5374, 4736, 4360, 4033,
	2949, 5044, 1405, 1908, 2044, 4516, 1503, 1699, 867, 1699,
	1979, 3911, 4416, 1581, 4066, 1981, 5413, 5565, 5148, 1978,
	954, 1699, 1699, 2379, 5563, 3215, 3143, 4074, 4029, 3919,
	3972, 4823, 4824, 3871, 1218, 2407, 2184, 5493, 3921, 5295,
	5286, 4000, 5054, 5019, 1976, 2711, 1503, 4454, 4784, 4728,
	4580, 4143, 4435, 2738, 3777, 1816, 4035, 3983, 4037, 3969,
	1948, 4041, 1946, 4262, 1411, 4047, 3977, 1061, 1062, 4213,
	4157, 1918, 2075, 4159, 4210, 1814, 3990, 4021, 3998, 1063,
	5384, 1916, 4092, 1159, 1699, 2491, 1914, 1912, 1910, 1903,
	3994, 5267, 3970, 1897, 4132, 1895, 1699, 2405, 1699, 3881,
	3740, 3670, 1237, 3479, 4093, 3360, 4096, 200, 200, 1045,
	1046, 4015, 3354, 3301, 3188, 2751, 4024, 2747, 1813, 2653,
	4031, 4030, 2642, 4141, 4042, 1409, 2627, 2296, 2215, 2211,
	4044, 1983, 3942, 4056, 2401, 1854, 4791, 2677, 3778, 2542,
	4059, 4241, 3971, 4240, 4168, 4179, 4231, 3991, 2002, 3597,
	3596, 3992, 3556, 3993, 2767, 1935, 2680, 4080, 4150, 1581,
	2562, 4070, 1581, 3212, 4072, 2295, 4112, 2293, 4216, 2118,
	1868, 4219, 3337, 2031, 2032, 2024, 2025, 2026, 2027, 2029,
	2030, 1373, 2948, 5465, 4135, 4874, 4519, 4518, 4553, 3250,
	5373, 4878, 4853, 4962, 1407, 956, 4883, 1288, 955, 4232,
	4081, 4869, 4208, 4866, 1288, 1288, 3536, 5536, 1288, 1288,
	1288, 3309, 1288, 4079, 4804, 3536, 1980, 4803, 4416, 4100,
	1977, 1288, 2265, 4160, 4153, 4085, 4133, 4034, 4626, 4616,
	1288, 1407, 4535, 4509, 4138, 1288, 4139, 4479, 2401, 2710,
	4206, 1581, 4477, 1164, 1163, 1975, 4211, 2740, 960, 3820,
	1288, 4209, 2227, 4167, 2739, 4239, 4165, 4455, 1581, 4146,
	4140, 1947, 4128, 1945, 1407, 4174, 3511, 3503, 2265, 2265,
	1288, 1288, 1917, 1288, 1288, 1288, 4177, 4178, 963, 3495,
	4158, 4238, 1915, 3487, 3472, 3470, 3451, 1913, 1911, 1909,
	1902, 1288, 1160, 3226, 1896, 1288, 1894, 2265, 2265, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1812,
	1288, 4265, 4248, 4225, 920, 4226, 1406, 4227, 1288, 1288,
	2265, 2676, 1227, 2541, 3221, 1288, 2560, 2558, 4275, 4276,
	2535, 2478, 2436, 2422, 4315, 2408, 4316, 2336, 1288, 2333,
	2330, 2327, 2322, 2320, 3821, 2315, 4355, 2309, 2305, 1411,
	1411, 4957, 4283, 1288, 5531, 200, 4156, 1386, 5448, 3648,
	4045, 2011, 4245, 3390, 1405, 2487, 5555, 2358, 4236, 2346,
	2347, 5264, 3620, 3621, 3618, 2750, 3444, 4242, 5430, 5330,
	4243, 4977, 4890, 4790, 1387, 3537, 3917, 2375, 1581, 1770,
	5198, 951, 3288, 4397, 923, 3605, 3262, 3819, 3826, 3262,
	4393, 1503, 1503, 5191, 3167, 2736, 1757, 4354, 1443, 4272,
	1409, 1409, 4270, 3260, 4638, 2667, 3285, 1161, 2417, 1973,
	1974, 2607, 1503, 1503, 1482, 2748, 4282, 2235, 2705, 1503,
	1483, 4298, 2700, 3215, 2265, 3825, 2265, 4289, 4291, 4292,
	5429, 2674, 4844, 4885, 4305, 3408, 1216, 1218, 1162, 4293,
	1893, 4398, 2020, 2021, 1553, 4313, 1288, 896, 5218, 4314,
	3292, 4318, 5082, 4737, 3649, 4715, 4346, 3964, 4409, 3293,
	2020, 2021, 4312, 4320, 2749, 3314, 2015, 4410, 4411, 4399,
	1510, 2012, 4396, 5549, 1288, 1442, 4362, 2702, 4046, 1177,
	1179, 4407, 4367, 4368, 4347, 3293, 1550, 4405, 4426, 4427,
	2345, 4200, 2023, 4531, 1388, 4436, 1051, 1166, 4613, 5501,
	4549, 303, 1483, 3469, 2590, 1483, 4198, 1288, 1288, 1521,
	2248, 4438, 2022, 4439, 4364, 4365, 4191, 1165, 4530, 3368,
	899, 899, 3366, 4406, 913, 3375, 5569, 3358, 4402, 3356,
	2022, 3297, 1692, 3295, 1951, 5382, 5361, 4380, 5328, 4377,
	4390, 3357, 3822, 3823, 3824, 3296, 5324, 4379, 5263, 5182,
	4512, 1288, 1288, 4403, 790, 5179, 2800, 4306, 5060, 1288,
	3131, 3212, 4990, 4624, 4615, 4384, 4600, 4459, 4145, 3518,
	3484, 3471, 3065, 2342, 2259, 2246, 5597, 1755, 4076, 5081,
	1699, 1699, 4076, 4077, 3344, 2800, 4321, 4077, 1699, 4492,
	1717, 4431, 2238, 1716, 1710, 2236, 4437, 1220, 3867, 1699,
	1699, 1406, 1406, 2493, 5568, 4202, 5629, 5326, 4896, 1699,
	4422, 3746, 3747, 4440, 1503, 1728, 1407, 4441, 4350, 4564,
	4551, 2020, 2021, 4076, 4193, 2386, 3248, 4707, 4077, 2944,
	1836, 4496, 4497, 4499, 2385, 3247, 2489, 4418, 4559, 3600,
	4192, 4527, 1728, 2265, 4521, 960, 1851, 5347, 2979, 1405,
	1405, 1728, 1878, 1727, 2262, 2386, 2385, 1728, 1877, 2253,
	1950, 5508, 4623, 1949, 4514, 4515, 4478, 1288, 4480, 4612,
	4533, 4484, 5183, 4489, 5123, 963, 4887, 4882, 4542, 4881,
	4767, 4763, 4762, 4703, 4677, 4552, 4417, 4294, 1699, 4543,
	4039, 4036, 4400, 3603, 1288, 3309, 4631, 2112, 2111, 4201,
	4401, 3623, 1411, 1288, 2755, 5614, 5578, 1881, 5434, 5365,
	4640, 1699, 4569, 4570, 5364, 5363, 1699, 1699, 1699, 5294,
	5238, 4593, 5234, 5156, 5112, 5049, 5043, 5042, 5040, 5039,
	4939, 4916, 4632, 4842, 4777, 4761, 4760, 4579, 4556, 4608,
	4189, 1699, 4650, 1699, 4644, 4587, 4475, 4565, 4540, 1699,
	4534, 1581, 4467, 4233, 3379, 4404, 4149, 4148, 4607, 3956,
	3898, 3604, 3594, 1409, 3566, 3565, 3564, 4635, 3563, 3502,
	4574, 3473, 3286, 4578, 4647, 3217, 3181, 3180, 4562, 2873,
	2741, 2706, 4599, 1581, 2699, 4573, 1288, 1288, 4651, 2698,
	2697, 4634, 1288, 1288, 2265, 2696, 2695, 1288, 1288, 2605,
	1288, 2576, 2575, 2574, 2573, 1288, 2572, 4618, 2571, 4620,
	2312, 2311, 2310, 2308, 4563, 4595, 1288, 2226, 2225, 1972,
	1971, 1904, 1779, 1778, 1777, 1776, 1775, 4611, 1774, 4572,
	1773, 1769, 1288, 4614, 1767, 4617, 1766, 1703, 4665, 1702,
	3524, 1570, 4663, 1569, 1568, 1567, 4671, 4666, 4204, 1566,
	1513, 1466, 1465, 3536, 4636, 1464, 1463, 4633, 1462, 4641,
	1461, 4642, 1460, 1368, 1454, 3803, 1453, 1452, 4648, 1451,
	4649, 4688, 1450, 4199, 4194, 4195, 4196, 4197, 2348, 1181,
	1172, 5269, 4701, 4821, 4820, 4819, 4664, 2737, 2584, 105,
	1762, 3383, 98, 4697, 1411, 2485, 4667, 4474, 5502, 4689,
	5610, 5638, 1411, 2568, 4734, 4674, 1581, 1581, 2494, 1581,
	5415, 1407, 1407, 200, 2265, 4203, 5414, 5299, 3202, 3832,
	1411, 4682, 2306, 4105, 4104, 5507, 2498, 5152, 985, 4989,
	1699, 1699, 1134, 5412, 1752, 1000, 5393, 3848, 3958, 3413,
	1905, 5176, 2681, 3840, 3133, 5353, 4742, 4711, 3708, 4676,
	5225, 3942, 1581, 4673, 5012, 1409, 2947, 2116, 3789, 100,
	1272, 1318, 4930, 1409, 1406, 4205, 1503, 4929, 4805, 4461,
	4115, 3875, 3845, 4926, 4925, 2250, 2252, 1236, 1584, 3073,
	3075, 1409, 5442, 1288, 2359, 5620, 2368, 3182, 3023, 1295,
	1292, 2254, 2256, 4200, 1411, 4753, 1411, 1294, 1293, 4727,
	2255, 2136, 1291, 2249, 4622, 4134, 3522, 4175, 4198, 4769,
	4770, 1822, 1405, 1820, 1136, 1296, 3129, 2867, 4191, 2931,
	3697, 1503, 4745, 4747, 2109, 1252, 4852, 1274, 2928, 1435,
	1263, 1581, 4831, 1503, 3817, 3796, 1503, 4738, 4861, 2299,
	4162, 4864, 4789, 4832, 3066, 4743, 4828, 4741, 4828, 4381,
	2777, 4744, 4739, 4740, 1010, 1409, 1288, 1409, 4797, 1581,
	3743, 2934, 4848, 4849, 4754, 1424, 4756, 310, 310, 310,
	3046, 796, 797, 3039, 813, 796, 813, 825, 3035, 4800,
	866, 3908, 3512, 1990, 886, 5026, 2087, 3523, 4768, 893,
	893, 893, 893, 4846, 1547, 1256, 2865, 2100, 3675, 2787,
	4785, 310, 2248, 3463, 4169, 3843, 3466, 4202, 3468, 3175,
	5423, 1699, 1699, 4802, 4897, 3215, 1288, 1288, 4794, 4795,
	4302, 3601, 1246, 1038, 4796, 2580, 4193, 1385, 1384, 1433,
	310, 1383, 5399, 5396, 4868, 2475, 4933, 4870, 4110, 4111,
	2351, 4872, 4192, 3241, 1503, 2877, 4129, 4845, 4847, 4947,
	1268, 4772, 4773, 4774, 3579, 3580, 1406, 1581, 2259, 2259,
	3515, 1687, 1699, 3515, 1406, 2726, 4862, 4781, 4782, 4783,
	4965, 4234, 4786, 4889, 3802, 4880, 4598, 1781, 5089, 1280,
	2072, 3440, 1406, 4914, 3439, 5258, 1532, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1530, 1529, 1528, 5587, 3381, 4865,
	3376, 4201, 2515, 4470, 1405, 4886, 4966, 4888, 4948, 4915,
	4469, 1581, 1405, 4468, 4910, 271, 3642, 2009, 4913, 2001,
	4851, 4898, 4752, 1288, 1288, 1288, 268, 270, 269, 4951,
	1405, 4954, 4909, 4860, 3962, 4908, 4863, 4394, 2262, 2262,
	3849, 1581, 1880, 2253, 2253, 5499, 1288, 4494, 3591, 1288,
	1288, 4918, 4928, 3212, 4097, 3848, 1406, 4936, 1406, 1288,
	4923, 4942, 2265, 4997, 4998, 4969, 4924, 1288, 1288, 4940,
	27, 900, 4974, 4960, 1407, 901, 902, 3251, 2378, 4950,
	1549, 4445, 796, 796, 26, 4982, 1581, 4967, 1699, 4986,
	310, 25, 4935, 24, 23, 128, 48, 29, 28, 5,
	4988, 22, 171, 169, 1405, 4979, 1405, 146, 166, 5004,
	4980, 165, 138, 164, 163, 1503, 162, 161, 160, 168,
	159, 158, 153, 157, 156, 155, 154, 152, 150, 151,
	4999, 145, 149, 148, 147, 144, 5009, 143, 142, 1581,
	141, 140, 139, 137, 4991, 170, 136, 1288, 135, 312,
	4204, 216, 134, 1755, 5035, 133, 5036, 132, 131, 130,
	1288, 5021, 129, 879, 880, 67, 66, 125, 126, 1288,
	21, 5015, 46, 16, 2265, 4199, 4194, 4195, 4196, 4197,
	71, 72, 2588, 5066, 1288, 20, 15, 1288, 5032, 5033,
	41, 5053, 103, 5037, 117, 116, 115, 42, 112, 40,
	19, 4235, 18, 17, 1579, 110, 1288, 109, 108, 1288,
	39, 37, 13, 11, 43, 2199, 1581, 4203, 5063, 14,
	5064, 7, 1699, 1288, 208, 1699, 1699, 205, 5092, 204,
	207, 2625, 203, 206, 1503, 102, 202, 104, 201, 5138,
	101, 35, 12, 196, 5115, 2259, 5172, 4605, 5116, 2638,
	2640, 93, 5065, 199, 198, 2406, 197, 195, 5071, 194,
	193, 5062, 5111, 2644, 190, 1411, 1407, 4205, 94, 91,
	192, 97, 96, 191, 1407, 92, 95, 33, 2656, 2657,
	2658, 2659, 8, 4279, 70, 5147, 5128, 9, 4992, 4214,
	120, 5114, 1407, 1581, 5155, 121, 1699, 44, 89, 88,
	4295, 5163, 87, 86, 5192, 5159, 5171, 32, 5109, 69,
	31, 5113, 265, 263, 5166, 264, 262, 4828, 261, 186,
	241, 240, 5134, 5135, 5117, 2262, 1409, 239, 238, 5125,
	2253, 237, 236, 1288, 1288, 235, 234, 233, 228, 232,
	5193, 230, 229, 231, 227, 257, 256, 255, 5197, 5149,
	1288, 2265, 254, 5150, 253, 5151, 252, 251, 5103, 5104,
	5157, 5178, 250, 2259, 244, 1250, 1407, 5139, 1407, 5201,
	2248, 5203, 5175, 5195, 243, 249, 1503, 1503, 1503, 2614,
	248, 1503, 1503, 1503, 5177, 1503, 1503, 247, 246, 5170,
	245, 242, 260, 82, 226, 225, 224, 5124, 222, 5126,
	218, 5127, 5200, 221, 1288, 4969, 1288, 5199, 1288, 5189,
	5194, 4112, 223, 220, 219, 5214, 5215, 217, 1411, 259,
	258, 189, 5118, 83, 5213, 184, 185, 5206, 81, 183,
	182, 1288, 181, 1411, 5137, 180, 179, 178, 177, 80,
	4392, 5251, 188, 2262, 5217, 187, 30, 2, 2253, 1,
	5223, 0, 5235, 5236, 5237, 0, 0, 5239, 5240, 5241,
	0, 5242, 5243, 5253, 0, 0, 0, 0, 0, 5281,
	4828, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 5101, 2265, 5246, 4828, 5250, 0, 0, 5249,
	0, 0, 0, 0, 1409, 1411, 1411, 0, 5280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5273, 5274,
	0, 0, 0, 0, 0, 306, 1411, 5327, 5301, 1411,
	0, 0, 0, 1699, 0, 0, 0, 1406, 0, 0,
	0, 5316, 5317, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 5289, 0, 0, 0, 0, 4828, 4828, 1288,
	1288, 5303, 5333, 0, 0, 5335, 1409, 1409, 0, 1288,
	0, 0, 0, 0, 5291, 0, 5298, 5340, 4828, 0,
	5300, 4828, 5296, 0, 0, 1405, 0, 1409, 5314, 0,
	1409, 0, 5325, 0, 0, 0, 5349, 0, 5350, 0,
	0, 0, 0, 5332, 0, 0, 0, 0, 0, 0,
	0, 5175, 0, 5348, 5344, 5345, 5341, 0, 0, 0,
	0, 0, 5343, 5346, 1426, 1288, 1288, 0, 0, 1288,
	0, 5358, 0, 1699, 1503, 813, 1503, 0, 0, 5362,
	0, 5357, 0, 0, 5366, 5367, 5368, 0, 0, 813,
	0, 5290, 0, 3973, 3974, 310, 3975, 0, 0, 0,
	5398, 5401, 1456, 5372, 5426, 5380, 5381, 0, 0, 2248,
	0, 5422, 0, 310, 0, 310, 310, 5390, 1487, 310,
	1497, 0, 0, 5389, 5388, 0, 0, 0, 0, 5445,
	1406, 1511, 0, 5447, 0, 1288, 1288, 1288, 5407, 886,
	0, 5403, 886, 0, 0, 1406, 0, 5402, 0, 0,
	5409, 5406, 5410, 0, 4025, 4026, 0, 4027, 0, 0,
	0, 0, 0, 5431, 0, 893, 0, 0, 0, 0,
	5408, 5438, 0, 0, 0, 1288, 5435, 0, 1405, 0,
	5446, 0, 0, 0, 5485, 5480, 0, 0, 0, 0,
	5459, 5460, 5461, 1405, 310, 5462, 310, 310, 1487, 1699,
	310, 310, 0, 0, 0, 310, 0, 1406, 1406, 1497,
	0, 0, 0, 0, 5481, 2406, 5515, 0, 0, 0,
	0, 0, 5425, 310, 0, 1730, 5522, 5482, 1406, 5516,
	0, 1406, 5528, 5369, 5370, 0, 1288, 0, 0, 5514,
	5498, 1750, 0, 5509, 1503, 1503, 5506, 0, 0, 0,
	1759, 0, 5524, 5483, 5155, 1405, 1405, 5537, 5496, 0,
	5521, 5520, 0, 0, 0, 0, 0, 1783, 0, 1497,
	0, 5556, 5530, 0, 310, 310, 1405, 1487, 0, 1405,
	0, 5543, 5544, 5529, 0, 5550, 1288, 1407, 0, 5547,
	0, 5552, 5534, 0, 0, 5558, 0, 0, 5560, 886,
	0, 310, 310, 0, 1411, 5398, 1411, 5548, 5401, 0,
	5562, 0, 0, 1848, 1709, 5573, 5567, 0, 0, 0,
	5545, 5546, 0, 0, 1856, 5583, 5559, 0, 5574, 1038,
	0, 5580, 5572, 0, 5579, 5581, 0, 3380, 0, 5589,
	5582, 2782, 5584, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 5571, 0, 5588, 4828, 5575, 4828, 0,
	0, 5604, 0, 5605, 0, 1409, 5613, 1409, 0, 0,
	5495, 0, 0, 5497, 0, 5612, 0, 0, 1288, 1288,
	0, 0, 5616, 0, 0, 5624, 5622, 1288, 1288, 5615,
	0, 5636, 0, 2396, 0, 0, 0, 5641, 2397, 5627,
	0, 0, 5642, 0, 5640, 5632, 5649, 5647, 6, 5650,
	0, 5655, 310, 10, 5611, 5658, 5657, 200, 5656, 5661,
	0, 4749, 5608, 0, 5618, 0, 0, 0, 0, 0,
	0, 0, 5651, 5425, 5664, 0, 1503, 5663, 310, 5666,
	1407, 5670, 0, 5674, 5671, 5668, 0, 0, 5672, 0,
	3672, 3673, 5669, 5643, 5681, 1407, 0, 5648, 0, 5677,
	0, 5678, 5667, 1288, 4779, 2501, 0, 0, 5679, 5633,
	5634, 5684, 5674, 5690, 5686, 0, 0, 0, 0, 5687,
	0, 5689, 0, 1250, 1250, 1250, 0, 0, 3550, 3041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3557,
	0, 0, 0, 0, 0, 0, 0, 2511, 0, 0,
	5680, 0, 3524, 0, 0, 0, 0, 1407, 1407, 0,
	5683, 2398, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 2402,
	0, 1407, 0, 3524, 0, 5685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2259, 0, 0, 0, 1406, 0, 1406, 0,
	0, 5635, 0, 0, 0, 0, 2507, 0, 0, 0,
	0, 0, 3606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2259, 2259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1405, 0, 1405, 0, 0, 0,
	2399, 2404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3770, 3771, 3772, 3773, 0, 0, 2504, 0,
	0, 796, 2262, 0, 2098, 0, 0, 2253, 2103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2259, 310, 0, 310, 0, 0, 0, 310, 0,
	0, 0, 0, 2262, 2262, 0, 0, 0, 2253, 2253,
	0, 1730, 1487, 1497, 310, 0, 310, 2224, 0, 0,
	0, 0, 2509, 0, 310, 0, 813, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 2400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 2313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 2262, 2500, 0, 0, 0, 2253, 310, 0, 0,
	0, 0, 0, 5010, 0, 0, 0, 0, 2510, 0,
	2394, 0, 0, 0, 0, 2407, 0, 0, 2020, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	886, 0, 2020, 2021, 0, 0, 0, 0, 2064, 2065,
	2066, 2497, 2051, 2514, 0, 1448, 0, 0, 5010, 0,
	2023, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 1471, 2023, 1471, 1471, 0, 893, 1492,
	893, 0, 2392, 0, 0, 2070, 0, 2405, 0, 2076,
	893, 893, 0, 0, 0, 0, 0, 0, 2022, 0,
	0, 3746, 3747, 2076, 3764, 3765, 3766, 0, 0, 0,
	0, 2803, 2022, 2495, 0, 0, 0, 0, 0, 0,
	0, 0, 2259, 2042, 4267, 0, 2502, 0, 0, 0,
	0, 0, 2393, 2039, 0, 0, 1407, 2512, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2508, 0, 0, 1674, 0, 0,
	1688, 1492, 0, 2496, 0, 1448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3761, 0, 0, 2505, 0, 0, 2803, 0,
	0, 0, 2503, 0, 0, 0, 0, 0, 0, 0,
	2513, 0, 2262, 4619, 0, 0, 0, 2253, 0, 0,
	0, 2028, 0, 0, 0, 2045, 2046, 2047, 2048, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 2401, 0,
	0, 0, 0, 0, 1492, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 310, 0,
	0, 0, 0, 3431, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 0, 0, 2050, 2052, 0, 2061, 0,
	0, 4668, 2071, 1665, 0, 2506, 0, 0, 0, 2050,
	2052, 0, 0, 0, 3752, 2051, 0, 310, 3421, 3419,
	0, 0, 0, 2023, 0, 0, 3423, 3425, 3415, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 2037, 2038,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 2259,
	0, 0, 2076, 0, 310, 0, 0, 0, 2059, 2043,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 3441, 310, 2043, 0, 0, 796, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3768, 0,
	886, 0, 0, 0, 1038, 2259, 2259, 0, 0, 0,
	3632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2259, 2259, 1487, 310, 0, 2262,
	1250, 0, 3762, 0, 2253, 0, 0, 0, 1665, 0,
	2073, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 2073, 0, 0, 2259, 2678, 0,
	0, 0, 0, 310, 0, 310, 0, 310, 0, 310,
	0, 310, 0, 310, 2028, 2262, 2262, 0, 0, 0,
	2253, 2253, 0, 3041, 3041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2716, 0,
	0, 2717, 0, 2718, 2262, 2262, 0, 0, 0, 2253,
	2253, 0, 0, 2073, 2049, 0, 0, 0, 310, 310,
	310, 310, 310, 0, 3417, 0, 2044, 0, 2050, 2052,
	0, 0, 0, 0, 0, 3433, 0, 2262, 4258, 4259,
	2044, 0, 2253, 0, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 886, 0, 0, 0, 0, 0, 3432,
	3422, 3420, 3424, 3426, 3416, 3418, 3434, 3436, 0, 0,
	2259, 2259, 2062, 2259, 0, 0, 0, 3428, 3430, 3438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 0, 2075, 0, 0, 0, 0, 3763,
	0, 0, 0, 0, 0, 0, 4101, 4102, 2075, 0,
	0, 0, 4876, 0, 3442, 0, 0, 0, 0, 0,
	0, 1665, 0, 0, 0, 0, 0, 0, 4322, 4323,
	4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333,
	4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 2879, 4345,
	2262, 2262, 0, 2262, 0, 2253, 2253, 0, 2253, 0,
	0, 0, 0, 0, 0, 3041, 3041, 3041, 3041, 4181,
	0, 0, 0, 2073, 0, 0, 1688, 0, 0, 0,
	0, 4207, 0, 0, 0, 0, 0, 0, 4938, 2060,
	0, 0, 0, 0, 2033, 2031, 2032, 2024, 2025, 2026,
	2027, 2029, 2030, 4949, 2063, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0,
	796, 0, 0, 3067, 0, 0, 0, 4973, 1471, 0,
	0, 0, 0, 0, 0, 0, 310, 1688, 0, 0,
	3435, 0, 0, 0, 0, 796, 0, 0, 2871, 0,
	0, 0, 310, 0, 796, 0, 0, 0, 0, 2044,
	3758, 3759, 3760, 0, 2098, 0, 310, 3757, 3755, 3756,
	3748, 3749, 3750, 3751, 3753, 3754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 1497, 0, 0,
	2259, 0, 0, 310, 0, 310, 1730, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 2021, 3443, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 3427, 3429, 1709, 2075, 3437, 3746,
	3747, 0, 3764, 3765, 3766, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 2023, 310, 1497, 0, 310, 813,
	0, 813, 4266, 0, 0, 0, 0, 0, 310, 0,
	0, 310, 0, 0, 0, 3216, 0, 0, 2020, 2021,
	2262, 310, 310, 2076, 0, 2253, 310, 0, 310, 5058,
	0, 0, 2022, 1487, 0, 310, 310, 0, 1497, 1497,
	3232, 0, 2051, 2042, 0, 310, 0, 0, 0, 0,
	2023, 0, 0, 2039, 0, 0, 0, 0, 1250, 0,
	3761, 0, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 2022, 893,
	893, 2259, 0, 893, 893, 0, 0, 0, 0, 2042,
	0, 0, 3275, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 4261, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 0, 2045, 2046, 2047, 2048, 0,
	0, 0, 310, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 886, 0, 1665, 0, 0, 886, 0,
	0, 0, 3752, 0, 0, 0, 0, 2569, 4256, 0,
	0, 2262, 0, 0, 0, 0, 2253, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2047, 2048, 0, 0, 2594, 84, 2050,
	2052, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2259, 0, 0, 0, 0, 0, 85, 0, 3399,
	0, 0, 0, 0, 0, 3405, 1730, 1665, 2037, 2038,
	0, 0, 0, 0, 0, 90, 3768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1665, 0, 2050, 2052, 310, 3461, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	3762, 0, 0, 0, 2037, 2038, 0, 1730, 0, 0,
	310, 2262, 0, 3405, 0, 0, 2253, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3507, 0, 0, 0, 0, 0, 0, 2043,
	0, 1032, 3275, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 1038, 3275, 4541, 122, 0, 0, 0,
	0, 0, 106, 119, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4557, 4558, 310, 0, 5287, 0,
	0, 2073, 0, 0, 4560, 0, 0, 0, 0, 0,
	2594, 2727, 2728, 0, 0, 0, 0, 310, 1487, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3581,
	310, 0, 0, 0, 1487, 0, 1487, 0, 1487, 0,
	2073, 0, 0, 0, 2049, 0, 0, 0, 107, 0,
	0, 0, 2259, 0, 0, 0, 1665, 5329, 0, 0,
	5331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 3041, 3041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3763, 310, 310,
	310, 310, 1487, 0, 0, 1487, 0, 0, 310, 0,
	2049, 0, 0, 310, 0, 0, 4646, 0, 0, 0,
	0, 2638, 4652, 4653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 2262, 0, 310, 0, 0, 2253, 2075, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 3041, 3041, 3041, 3041, 3041, 3041, 3041, 3041, 3041,
	3041, 3041, 3041, 3041, 3041, 3041, 3041, 3041, 3041, 3041,
	3041, 1243, 3041, 0, 0, 0, 0, 3172, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 2259,
	0, 0, 5432, 0, 0, 0, 5433, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 3758, 3759,
	3760, 0, 0, 0, 0, 3757, 3755, 3756, 3748, 3749,
	3750, 3751, 3753, 3754, 0, 0, 0, 209, 0, 114,
	1730, 0, 118, 0, 0, 0, 1492, 0, 0, 2262,
	0, 0, 0, 0, 2253, 0, 0, 0, 1448, 0,
	0, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025, 2026,
	2027, 2029, 2030, 0, 272, 0, 0, 0, 0, 0,
	0, 2259, 1033, 1709, 1709, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 124, 4758, 4759, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1448, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 1471, 3219, 0, 0, 0, 1471, 0, 1471, 0,
	84, 0, 0, 0, 0, 1492, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 85,
	0, 2262, 0, 0, 0, 0, 2253, 0, 5018, 0,
	0, 0, 215, 0, 0, 0, 0, 90, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 310, 1207, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 266,
	0, 1228, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 210, 0, 0, 0, 0, 214, 0, 0,
	99, 0, 0, 84, 310, 1029, 1028, 0, 0, 796,
	0, 0, 0, 0, 796, 0, 0, 796, 213, 0,
	796, 796, 85, 0, 0, 5417, 796, 0, 1250, 796,
	0, 0, 1674, 0, 0, 0, 5074, 310, 2259, 0,
	90, 0, 1395, 1032, 0, 1709, 1709, 1709, 1709, 310,
	0, 0, 2501, 0, 0, 0, 2638, 0, 122, 0,
	310, 0, 0, 1730, 106, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 2511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 2262, 0,
	0, 310, 310, 2253, 0, 0, 1032, 0, 0, 0,
	107, 0, 4981, 0, 4983, 4984, 4985, 0, 4987, 55,
	0, 122, 0, 0, 0, 0, 0, 106, 119, 0,
	2020, 2021, 0, 0, 0, 3275, 3275, 310, 0, 3928,
	3931, 0, 0, 2507, 0, 0, 3275, 0, 2224, 0,
	2259, 0, 0, 0, 2051, 0, 0, 3275, 2224, 0,
	3275, 2224, 2023, 0, 2224, 0, 0, 3928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	310, 3931, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 107, 0, 0, 0, 0, 0, 0,
	2022, 0, 3931, 0, 310, 2504, 4004, 0, 4004, 0,
	0, 2042, 0, 5038, 0, 0, 0, 0, 1487, 5222,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	2262, 0, 0, 0, 0, 2253, 0, 0, 0, 0,
	0, 0, 3275, 0, 3275, 0, 4040, 3275, 3931, 1688,
	5418, 3275, 0, 0, 0, 0, 0, 0, 0, 2509,
	1492, 0, 0, 4058, 3931, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 5257, 0, 0, 0, 0,
	4255, 0, 1665, 0, 0, 3931, 0, 0, 886, 0,
	0, 0, 3746, 3747, 0, 3764, 3765, 3766, 0, 0,
	5279, 0, 0, 2045, 2046, 2047, 2048, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 1688,
	1487, 1688, 0, 0, 0, 2510, 0, 310, 0, 209,
	0, 114, 0, 0, 118, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 5130, 4103, 0,
	0, 4108, 3275, 111, 1665, 310, 0, 0, 0, 0,
	2514, 0, 0, 1497, 1471, 0, 272, 2050, 2052, 0,
	0, 0, 0, 3761, 1033, 0, 0, 0, 0, 310,
	167, 0, 0, 0, 3507, 0, 0, 1487, 1665, 310,
	0, 0, 3275, 0, 796, 0, 2037, 2038, 0, 0,
	0, 3275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 114, 0, 0, 118, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2043, 0, 2502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2512, 0, 0, 1250, 172, 272,
	0, 4223, 0, 0, 0, 0, 0, 1033, 0, 1250,
	0, 2508, 0, 167, 215, 0, 0, 0, 0, 0,
	3386, 0, 273, 0, 4230, 3752, 84, 0, 1730, 0,
	0, 0, 0, 0, 0, 1487, 310, 0, 310, 0,
	0, 266, 2505, 0, 1487, 85, 0, 1487, 0, 2503,
	267, 0, 0, 274, 210, 0, 0, 2513, 0, 214,
	0, 0, 2073, 90, 0, 0, 0, 0, 0, 2020,
	2021, 0, 3769, 0, 0, 0, 310, 0, 0, 0,
	213, 172, 0, 0, 0, 0, 0, 0, 0, 5419,
	0, 0, 0, 2051, 0, 0, 0, 215, 0, 3768,
	0, 2023, 0, 0, 0, 273, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1665, 2049, 0, 266, 0, 0, 0, 0, 0,
	2076, 0, 2506, 267, 0, 4300, 5420, 210, 0, 2022,
	0, 0, 214, 3762, 0, 0, 0, 0, 2044, 1032,
	2042, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	2039, 0, 55, 1027, 122, 0, 0, 0, 0, 0,
	106, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2638, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 4358,
	0, 3041, 1665, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 310, 107, 0, 0, 0,
	0, 0, 2045, 2046, 2047, 2048, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 796,
	0, 0, 4383, 796, 0, 0, 0, 0, 124, 0,
	124, 796, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 0, 1709, 0, 0, 0, 2050, 2052, 0, 3041,
	3763, 0, 310, 2040, 2036, 0, 2033, 2031, 2032, 2024,
	2025, 2026, 2027, 2029, 2030, 1228, 124, 124, 0, 0,
	0, 0, 0, 0, 0, 2037, 2038, 0, 0, 0,
	0, 0, 124, 0, 124, 0, 0, 1471, 2020, 2021,
	0, 1688, 1688, 0, 0, 0, 0, 0, 124, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	2043, 1665, 2051, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 2042,
	1688, 4508, 0, 0, 4510, 0, 0, 4513, 0, 2039,
	0, 0, 0, 0, 0, 4004, 0, 0, 0, 0,
	1665, 2073, 0, 0, 2594, 209, 0, 114, 0, 0,
	118, 310, 0, 0, 0, 0, 0, 1665, 0, 0,
	0, 3758, 3759, 3760, 0, 0, 0, 0, 3757, 3755,
	3756, 3748, 3749, 3750, 3751, 3753, 3754, 0, 0, 0,
	0, 0, 272, 3405, 0, 0, 0, 2056, 3661, 0,
	1033, 0, 0, 0, 0, 0, 167, 0, 3931, 0,
	310, 2049, 3041, 0, 813, 813, 1497, 0, 0, 0,
	0, 2045, 2046, 2047, 2048, 0, 0, 0, 1207, 0,
	0, 2028, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 310, 3507, 274, 0, 3507, 2224,
	0, 2090, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 4610, 0, 3405, 0, 0, 310, 0, 3041, 2096,
	310, 0, 310, 2102, 172, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 2050, 2052, 0, 0, 0,
	215, 0, 0, 3041, 0, 0, 3275, 310, 273, 0,
	0, 84, 0, 0, 0, 2075, 0, 1665, 1038, 3275,
	0, 0, 0, 0, 2037, 2038, 0, 266, 0, 0,
	85, 0, 0, 0, 0, 0, 267, 0, 0, 1492,
	210, 0, 0, 0, 84, 214, 0, 0, 90, 0,
	0, 0, 0, 310, 0, 0, 0, 3931, 0, 2043,
	3232, 0, 0, 85, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2191, 0, 2194, 0, 124, 0,
	0, 0, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025,
	2026, 2027, 2029, 2030, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1032, 4712, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 2020, 2021, 55, 1688, 122,
	0, 0, 0, 0, 0, 106, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1032, 0, 2051,
	0, 0, 0, 0, 0, 0, 0, 2023, 2056, 0,
	55, 0, 122, 0, 0, 0, 0, 0, 106, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	2049, 0, 0, 0, 0, 1730, 2076, 310, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 310, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 1497,
	1497, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 1497, 1497, 0, 310, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3275, 3275, 0, 3928, 0, 0,
	4004, 3275, 0, 0, 2075, 0, 0, 0, 0, 4830,
	0, 4830, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3275, 0, 2224, 0, 0, 0, 3928,
	0, 1730, 1730, 310, 3931, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 3931, 0, 310,
	3931, 0, 310, 0, 0, 4004, 0, 0, 4004, 0,
	2056, 0, 4004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3275, 0, 3275, 310, 0, 0, 2056, 0, 0,
	0, 111, 2050, 2052, 0, 0, 3405, 0, 0, 4900,
	1665, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025, 2026,
	2027, 2029, 2030, 0, 2056, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 111, 0, 2056, 0, 0, 0,
	0, 0, 1665, 2020, 2021, 0, 3275, 3275, 0, 0,
	0, 0, 3507, 3507, 0, 927, 0, 0, 0, 3928,
	209, 0, 114, 0, 0, 118, 2043, 2051, 0, 0,
	0, 0, 310, 0, 0, 2023, 0, 0, 0, 0,
	0, 938, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 114, 0, 272, 118, 0,
	0, 0, 936, 0, 2076, 1033, 0, 0, 0, 0,
	0, 167, 0, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 0, 940, 0, 0, 0,
	272, 2056, 0, 0, 2039, 0, 2056, 0, 1033, 0,
	0, 0, 0, 0, 167, 0, 0, 2073, 0, 0,
	2056, 274, 0, 0, 0, 2056, 0, 0, 0, 1228,
	0, 1228, 0, 0, 0, 1665, 1665, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 932, 0, 0, 274, 0, 0, 0, 948, 0,
	0, 1492, 0, 3654, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 273, 937, 0, 0, 4383, 0, 0,
	0, 1665, 172, 0, 0, 0, 2045, 2046, 2047, 2048,
	0, 0, 266, 2056, 0, 0, 2028, 0, 215, 2056,
	0, 267, 0, 2044, 0, 210, 273, 0, 0, 0,
	214, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 124, 939, 3275,
	2224, 1833, 2224, 0, 267, 4610, 0, 0, 210, 0,
	0, 0, 0, 214, 310, 861, 0, 0, 0, 0,
	2050, 2052, 0, 0, 5090, 0, 5090, 0, 0, 0,
	1665, 1709, 0, 0, 1831, 0, 2594, 0, 0, 0,
	0, 2075, 0, 934, 2177, 0, 0, 0, 0, 2037,
	2038, 886, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 0, 4004, 1730, 0, 0, 0, 1730, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 1207, 0,
	0, 1207, 1207, 0, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3931, 0,
	310, 0, 0, 0, 0, 0, 0, 947, 0, 2056,
	2056, 2056, 2056, 2056, 2056, 2056, 2056, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 4610, 0, 2056,
	4830, 0, 0, 1730, 0, 0, 0, 3275, 0, 2864,
	0, 310, 2056, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 0, 0, 0, 5186, 1665, 0, 0, 1228,
	0, 0, 0, 0, 0, 2073, 0, 1730, 0, 2096,
	0, 0, 0, 2096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3045, 0,
	929, 0, 0, 0, 0, 0, 310, 310, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 2056,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4300, 0, 0, 933, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	0, 2044, 0, 0, 0, 4004, 5248, 0, 0, 0,
	1235, 0, 0, 4610, 2194, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 4830, 0, 1665, 0, 0, 0, 0,
	931, 0, 0, 0, 0, 0, 0, 0, 4830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 2075,
	0, 0, 1709, 0, 0, 310, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 0, 0, 928, 813, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4830, 4830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 935, 0, 0, 0, 0, 1709, 0,
	0, 4830, 0, 310, 4830, 0, 1250, 0, 862, 0,
	0, 0, 0, 0, 2224, 0, 0, 0, 0, 0,
	930, 0, 2594, 1709, 0, 1730, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 1665, 2040, 2036, 0, 2033,
	2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 945, 946,
	0, 942, 0, 0, 1492, 0, 0, 0, 0, 0,
	1497, 1497, 0, 0, 0, 0, 0, 3016, 3017, 3018,
	3019, 3012, 3013, 3014, 3015, 5378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5090, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 0, 0, 0, 3275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 0, 2051, 2992, 2993, 2994,
	2995, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2070, 4300, 0, 0, 0,
	0, 3004, 3005, 3006, 3007, 3000, 3001, 3002, 3003, 3008,
	3009, 3010, 3011, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 124, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2988, 2989, 2990, 2991, 2996,
	2997, 2998, 2999, 0, 0, 0, 0, 0, 0, 0,
	0, 4610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 124, 0, 2045, 2046, 2047, 2048, 124,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4830,
	0, 4830, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 2061, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 2050,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 3275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 3405, 0, 0, 2056, 0,
	0, 0, 2056, 2043, 0, 1250, 0, 0, 0, 3275,
	0, 0, 0, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 3405, 0, 0, 0, 2056, 2056, 2056,
	2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056,
	2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056,
	2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056,
	2056, 2056, 2056, 0, 0, 0, 0, 0, 2056, 0,
	2056, 2056, 2056, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 3045, 3045, 2073, 0, 0, 1688, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 0, 2864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 1235,
	1235, 0, 0, 0, 2096, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 0,
	2044, 0, 0, 0, 0, 1705, 0, 0, 2056, 0,
	0, 2056, 0, 0, 2056, 0, 0, 2056, 0, 0,
	0, 0, 0, 2056, 2056, 2056, 2056, 2056, 2056, 2056,
	0, 0, 2062, 0, 1732, 0, 1738, 0, 1744, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2051,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 2056,
	0, 0, 3767, 0, 3045, 3045, 3045, 3045, 2070, 0,
	2056, 0, 2056, 0, 0, 0, 0, 2056, 1839, 0,
	1844, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 1858, 2022, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 1931, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 0, 2067, 0, 2068, 0, 0, 0, 0, 0,
	0, 2037, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 2059, 2110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 124, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 846, 2069, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 830, 2058, 0, 0, 0,
	831, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 124, 124, 0, 124, 2171, 2171,
	2171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 2056, 0, 2056,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 2062, 0, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 836, 828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1395, 837, 0, 1228, 1235, 0, 829, 0, 0,
	0, 0, 305, 305, 792, 0, 0, 0, 124, 124,
	0, 0, 0, 0, 861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 0, 0, 0, 4720, 0, 2056, 2056, 4719,
	3045, 3045, 0, 0, 2056, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 3767, 3767, 0, 0, 2056, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 846, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 830, 0, 0, 0, 0, 831, 0, 0,
	0, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 839, 0, 0, 0, 0,
	3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045,
	3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045,
	832, 3045, 3767, 3767, 3767, 3767, 859, 0, 840, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 124, 852, 0, 0,
	0, 0, 841, 0, 0, 0, 0, 856, 857, 0,
	854, 0, 0, 0, 0, 0, 1395, 1395, 0, 849,
	835, 0, 842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 836, 828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	843, 0, 850, 0, 829, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 0, 845, 0, 0,
	0, 0, 853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2703, 0, 862, 0, 851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 847,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 2776, 0, 2780, 2056, 2056, 0, 0, 0, 0,
	2794, 0, 0, 1235, 0, 0, 0, 0, 0, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 0, 2846, 0, 2848, 2849,
	2850, 2851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2875, 0, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	2926, 0, 0, 859, 0, 840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2956, 2959, 2962, 2965,
	0, 0, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 309,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3037, 860, 3048, 3050, 3055, 0, 0, 0, 0, 841,
	0, 0, 0, 124, 856, 857, 0, 854, 0, 0,
	0, 0, 961, 0, 0, 0, 849, 0, 0, 842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 850,
	0, 124, 0, 0, 0, 2056, 2056, 0, 844, 2056,
	3767, 3767, 2056, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 2056, 845, 0, 0, 0, 0, 853,
	0, 0, 0, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 2056,
	2056, 2056, 2056, 2056, 0, 0, 0, 0, 0, 2056,
	0, 2056, 0, 0, 3767, 3767, 3767, 3767, 3767, 3767,
	3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767,
	3767, 3767, 3767, 3767, 0, 0, 0, 3767, 0, 0,
	2056, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 1395, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 0, 1686, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 3464, 3465, 0, 3467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 1961, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 2056, 0, 0, 0, 2056, 2056, 0,
	0, 2056, 2056, 0, 0, 0, 2056, 0, 0, 0,
	2056, 0, 0, 1412, 0, 2056, 0, 0, 0, 0,
	3592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 987, 2077, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 3045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 1002, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3655, 3656, 0, 0,
	0, 0, 3662, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 990, 0, 0, 0, 0, 2056,
	0, 3676, 3677, 0, 0, 0, 0, 2926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1011, 0, 0,
	0, 0, 0, 0, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 2209, 0, 0, 0, 0, 0, 0,
	1009, 2056, 2056, 0, 0, 0, 0, 0, 0, 2219,
	0, 1686, 3686, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 982, 0, 3700, 0,
	0, 0, 0, 0, 309, 0, 309, 309, 0, 0,
	309, 0, 0, 0, 0, 3712, 0, 0, 0, 992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1013, 0, 0, 0,
	0, 861, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 2056, 2056,
	0, 0, 0, 2864, 0, 0, 0, 0, 2056, 2056,
	3767, 3045, 0, 0, 0, 0, 0, 2056, 0, 0,
	2056, 0, 0, 0, 0, 309, 0, 309, 309, 0,
	0, 309, 309, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 0, 3055, 3055, 3055, 0,
	0, 0, 0, 1012, 0, 0, 3767, 3045, 0, 0,
	0, 0, 0, 1007, 0, 2171, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 2056, 3045, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 3807, 309, 309, 0, 0, 0,
	0, 2056, 0, 2056, 0, 0, 0, 0, 1412, 0,
	1412, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 309, 0, 1412, 0, 0, 0, 0,
	0, 1006, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 993, 0, 0, 0, 0, 0, 2266, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	124, 0, 0, 0, 3767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 309, 981, 0, 0, 1003, 2056, 3767,
	0, 0, 2056, 0, 1235, 0, 0, 0, 0, 995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	1412, 3767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2578, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 3961, 0, 0, 0, 2601,
	0, 0, 0, 0, 0, 0, 0, 996, 0, 0,
	0, 997, 1016, 0, 1015, 2613, 0, 2613, 998, 0,
	0, 0, 0, 2620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 1008,
	0, 0, 0, 0, 0, 1017, 0, 1014, 0, 0,
	0, 0, 124, 0, 862, 0, 124, 0, 4022, 4023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2687, 0, 2689, 0, 2691, 0, 2693, 0, 2694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 1412, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2723, 2724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2193, 0, 1408, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 309, 2193, 309, 0, 0,
	0, 0, 0, 0, 0, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 1412, 0, 1412, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 1412, 1412, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 1412, 1412, 1412, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2794, 0, 0, 0, 0, 0, 0, 4253, 4254,
	0, 0, 4257, 0, 0, 0, 4260, 0, 0, 0,
	0, 0, 0, 0, 0, 4264, 0, 0, 0, 0,
	0, 0, 0, 0, 4271, 0, 0, 0, 0, 3807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4284, 0, 0, 0, 0, 0,
	0, 3140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4307, 4308, 0, 4309, 4310, 4311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2266, 2266, 1412, 4317, 0, 0, 0, 4319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4348, 4349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 4370, 0, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	2601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 1412,
	0, 309, 0, 309, 0, 0, 0, 0, 1412, 309,
	4444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 4493, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 0, 309, 0, 309, 0,
	309, 0, 309, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4522, 4523, 0, 0, 0,
	0, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 2051, 0, 0, 309,
	309, 309, 309, 309, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3483, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 2601, 0, 1412, 0,
	0, 0, 2022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2171, 0, 0, 0, 0, 0, 2266, 0, 0,
	0, 3555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2171, 0,
	0, 0, 3568, 0, 3571, 0, 0, 4643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 2045, 2046, 2047, 2048, 0,
	0, 0, 0, 1412, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3613, 1686, 3615, 1686, 0, 0, 0,
	0, 0, 0, 3622, 0, 0, 0, 0, 2061, 0,
	4690, 4691, 2071, 0, 0, 0, 4695, 4696, 0, 2050,
	2052, 4699, 4700, 0, 0, 0, 0, 1408, 0, 4704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	4708, 2068, 0, 1408, 0, 0, 0, 3651, 2037, 2038,
	0, 0, 0, 0, 0, 0, 4713, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 2043, 961, 0, 961, 0, 0, 309,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 1412, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 1412, 0, 0, 0,
	0, 0, 2069, 0, 0, 0, 309, 0, 0, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 309, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 309, 2073, 0, 0, 309, 0, 309,
	0, 0, 0, 0, 0, 0, 309, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4877, 0, 2062, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4919, 4920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 961, 2060,
	0, 0, 0, 0, 3858, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0,
	0, 309, 3721, 0, 0, 0, 3722, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 5005, 5006, 5007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2794, 0, 0, 5016, 5017, 0, 1686, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5025, 5028, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3924, 0, 0, 0, 0, 0, 309, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3980, 3982, 0, 0, 2601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 5091, 0, 0, 0, 0, 309,
	309, 309, 309, 5099, 0, 0, 0, 0, 1412, 309,
	0, 0, 0, 0, 309, 0, 0, 0, 5107, 0,
	0, 1235, 0, 1412, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5119, 0, 0, 5121, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 2266, 5131, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2020, 2021, 0, 2053, 2054, 2055,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 2051, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 5256, 0,
	0, 0, 5260, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 4237, 0, 1686, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	1412, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 1412, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 2045, 2046, 2047,
	2048, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 2794, 0, 0, 0, 0, 0,
	0, 0, 0, 5028, 0, 1412, 0, 0, 2193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	2061, 961, 0, 0, 2071, 0, 0, 1412, 0, 1412,
	0, 2050, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 2067, 0, 2068, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	2059, 0, 309, 309, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 1412, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 5458,
	5458, 5458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 0, 0, 2266, 0, 0, 0, 0, 0, 5484,
	309, 309, 0, 0, 309, 2058, 0, 0, 0, 0,
	0, 2193, 1412, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2266,
	2266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5458, 0, 0, 0, 0, 0, 0, 0, 2266, 2266,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2266, 2044, 0, 0, 0, 0, 0, 1297, 0,
	5570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 1412, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 311, 311, 0, 0, 0, 961, 0, 0, 1412,
	2075, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 2601, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	309, 0, 5458, 5628, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 2266, 0, 2266, 0, 4594,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 4604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2601, 0, 2601, 0, 0,
	0, 2060, 4625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 0,
	2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0,
	0, 0, 0, 0, 2922, 0, 0, 0, 2923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 4670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 1412, 0, 0, 0, 0, 0, 0, 1412,
	315, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066,
	1412, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 2057, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2266, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 953, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 1408, 1408, 1412, 1412, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 1412, 0, 0, 0, 0, 0,
	1412, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 2046, 2047, 2048, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 0, 2266, 0, 0, 4850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2601, 0, 0, 2061, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 2050, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	2068, 0, 0, 0, 0, 0, 0, 2037, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 1412, 1412, 0,
	1412, 0, 0, 0, 0, 2266, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 2601, 0, 0,
	0, 1412, 1412, 0, 0, 0, 0, 0, 4961, 0,
	0, 2069, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 1412, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 1412, 2049, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 309, 0, 309, 0, 0, 0, 0, 309, 2044,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 2075, 0, 5076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 1412, 0, 0, 311, 0, 311, 311,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 1412,
	1412, 1412, 1412, 1412, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 1412, 0, 0, 2601, 0, 0, 0, 0,
	2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 4718, 0, 311, 1585, 311,
	311, 0, 0, 311, 311, 1585, 2613, 0, 311, 0,
	0, 0, 0, 2266, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 311, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 1412,
	0, 0, 0, 0, 0, 0, 2193, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5212, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	1412, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 1585, 311, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	2193, 0, 2193, 0, 0, 2266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 309, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 1412, 0, 0, 1412, 1412, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 1412, 0, 0, 1412, 5334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 309, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 309, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 1412,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 5440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 1412, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	1412, 311, 0, 0, 1412, 309, 0, 0, 0, 0,
	0, 0, 1585, 0, 1412, 0, 0, 311, 311, 311,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 3074, 0,
	0, 0, 1585, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2051,
	0, 311, 0, 3072, 0, 0, 0, 2023, 3076, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	3077, 0, 0, 0, 1412, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	0, 2193, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 3078, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3079, 0, 0, 0, 0, 0, 0, 3080, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3081, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 0, 0, 0, 0, 0, 2028, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 3082, 2193, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 1582, 0, 0, 0, 0, 2193,
	0, 3083, 0, 0, 0, 0, 0, 0, 0, 2234,
	0, 3084, 2067, 0, 2068, 0, 0, 0, 2234, 0,
	0, 2037, 2038, 0, 1700, 0, 309, 311, 0, 1585,
	1585, 311, 0, 0, 0, 0, 0, 3085, 0, 0,
	1585, 2059, 0, 0, 0, 1412, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 2193, 2193, 0, 0, 0, 1585, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2193, 0, 309, 2193, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 2069, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 311, 2058, 0, 0, 1582,
	0, 311, 0, 0, 0, 0, 0, 2073, 3086, 0,
	1585, 0, 1585, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 1585, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 1585, 1585, 1585, 1585, 0, 0, 2049, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	3087, 3088, 0, 0, 0, 0, 311, 0, 311, 0,
	311, 0, 311, 2044, 311, 0, 311, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 3089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3094,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3090, 311, 311, 311, 311, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3091, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 3092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3093, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 1700, 0, 1700, 0, 0, 0,
	2193, 0, 2193, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	1700, 0, 1701, 1700, 1700, 1700, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2234, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 1585, 0, 0, 0, 2020, 2021, 0, 2053,
	2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 311, 0, 311, 2057,
	2051, 311, 0, 1701, 0, 0, 0, 0, 2023, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 311, 0,
	0, 311, 0, 1582, 0, 0, 0, 2042, 0, 0,
	0, 311, 0, 0, 311, 0, 1585, 2039, 0, 0,
	0, 0, 0, 0, 311, 311, 0, 0, 0, 311,
	0, 311, 0, 0, 0, 0, 0, 1701, 311, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 2045,
	2046, 2047, 2048, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 2050, 2052, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 2068, 0, 311, 1585, 0,
	0, 0, 2037, 2038, 1582, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 1585, 0, 1585, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 1582, 0, 311,
	0, 0, 1585, 1585, 0, 0, 0, 0, 2049, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	0, 311, 311, 311, 311, 0, 0, 0, 0, 0,
	1582, 311, 2075, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 1700, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040,
	2036, 0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 2051, 1700, 0, 1700, 0, 0,
	0, 0, 2023, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 1700, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 1701, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 1583, 0, 0,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 1701,
	0, 1701, 0, 2045, 2046, 2047, 2048, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 1701,
	1701, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 1701, 1701,
	1701, 1701, 0, 0, 0, 0, 2061, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 2050, 2052, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 2068,
	0, 0, 0, 1585, 0, 0, 2037, 2038, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 2043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 311, 311, 0, 0, 0, 0,
	2069, 0, 0, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 311, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 311, 0, 0,
	0, 1583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 2020, 2021, 0,
	2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 2051, 0, 0, 0, 0, 0, 1582, 0, 2023,
	0, 0, 0, 1583, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 1582, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 1583,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 1582,
	311, 0, 0, 0, 0, 1585, 0, 1585, 2039, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 311, 1585,
	1585, 0, 0, 1585, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024,
	2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 3724, 0, 0, 0, 0, 0,
	2045, 2046, 2047, 2048, 1585, 0, 1585, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1583, 2061, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 2050, 2052, 0, 1585, 0, 311,
	1585, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 2068, 0, 0, 0,
	0, 0, 1582, 2037, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 1700,
	0, 0, 0, 1582, 0, 0, 0, 0, 2058, 0,
	953, 1700, 1700, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 1700, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	1701, 0, 1701, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 1701,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 1582, 0, 0, 311, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 2070, 0, 0, 0, 0, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 1582, 0,
	0, 2022, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 2034, 2035, 2041, 2063,
	2040, 2036, 2039, 2033, 2031, 2032, 2024, 2025, 2026, 2027,
	2029, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 1585,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 311, 2045, 2046, 2047, 2048, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 311,
	0, 2071, 0, 311, 0, 311, 0, 0, 2050, 2052,
	311, 0, 0, 0, 0, 0, 1585, 2234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	2068, 0, 0, 0, 0, 0, 0, 2037, 2038, 1585,
	0, 0, 0, 0, 1585, 1585, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 1585, 2043, 0, 0, 0, 311, 1585, 0, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 1700, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1700, 0, 1583, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 1585, 0, 1585, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1583, 0, 0, 0, 1585, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 1700, 0, 0, 0, 0, 1700, 1700, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 1700, 0, 0, 311, 0, 0, 1700,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 311, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 1585, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1583, 0, 1585,
	1585, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 311, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 1582, 0, 1582,
	0, 0, 0, 0, 0, 1585, 1585, 1585, 1585, 1585,
	1585, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 1700, 1701, 0, 1701, 0, 0, 0, 1583, 1585,
	0, 0, 0, 0, 0, 0, 1701, 1701, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 2051, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 1585, 2070, 1585, 0, 0, 0,
	0, 1701, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 1582, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 2039, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 1583, 0, 0, 1583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 2045, 2046, 2047, 2048, 0,
	1585, 0, 0, 1585, 1585, 2028, 0, 1582, 0, 0,
	0, 0, 1700, 311, 0, 0, 1583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 0, 0, 0, 1700, 1700, 1700,
	1700, 1700, 1700, 1700, 0, 0, 0, 0, 2061, 0,
	0, 0, 2071, 0, 311, 0, 0, 0, 0, 2050,
	2052, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 1585, 0, 0, 0, 0, 2067,
	0, 2068, 0, 0, 0, 0, 0, 0, 2037, 2038,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 311,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2069, 1583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 1582, 0, 0, 0,
	0, 0, 1700, 0, 0, 1700, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 1701, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 1701, 1701, 0, 0, 0, 0,
	0, 1585, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3719, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 1701, 1701, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 1701, 0,
	0, 0, 0, 0, 1701, 0, 1583, 0, 2020, 2021,
	0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 2051, 1700, 0, 0, 0, 0, 1583, 0,
	2023, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 2070, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 2057, 2051, 2022, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 1583, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2047, 2048, 1701, 1701, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 2046, 2047, 2048,
	0, 0, 0, 0, 2061, 0, 2028, 0, 2071, 0,
	0, 0, 0, 0, 0, 2050, 2052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 2067, 0, 2068, 0, 0,
	0, 0, 0, 0, 2037, 2038, 0, 0, 0, 2061,
	0, 0, 0, 2071, 0, 0, 1583, 0, 0, 0,
	2050, 2052, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2043,
	2067, 0, 2068, 0, 1583, 0, 0, 0, 0, 2037,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 2043, 0, 0, 0, 2069, 0,
	0, 84, 0, 52, 51, 0, 1701, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 73,
	0, 0, 1583, 0, 0, 0, 54, 1701, 174, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 53, 0,
	0, 99, 1701, 1701, 1701, 1701, 1701, 1701, 1701, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 56,
	74, 0, 0, 0, 0, 0, 2044, 0, 0, 57,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 5639,
	0, 0, 0, 0, 0, 2049, 1583, 55, 0, 122,
	0, 0, 0, 0, 0, 106, 119, 0, 2062, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 0, 1701, 2075, 0, 0, 0, 0, 0,
	58, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2041,
	2063, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025, 2026,
	2027, 2029, 2030, 76, 0, 0, 0, 0, 0, 0,
	0, 0, 3718, 0, 0, 0, 0, 0, 0, 0,
	2060, 1583, 0, 0, 0, 0, 0, 1701, 0, 0,
	1701, 1701, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033,
	2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 59,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 0, 0, 0,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 64,
	209, 0, 114, 0, 0, 118, 0, 5505, 0, 0,
	0, 60, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 210, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 1586, 327, 328, 1587, 1588, 1589, 0, 1590, 736,
	1591, 1592, 1593, 329, 1594, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 1595, 741, 342, 343, 344, 345, 346,
	347, 348, 1596, 1597, 0, 349, 742, 743, 744, 1598,
	350, 351, 745, 1599, 1666, 1600, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 1601, 361, 362, 363, 360,
	364, 365, 1602, 366, 1701, 367, 368, 369, 370, 371,
	372, 373, 1603, 374, 375, 376, 1352, 377, 378, 379,
	1604, 1605, 1607, 1606, 1608, 1609, 1610, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 1611, 390, 392,
	386, 388, 1612, 391, 389, 393, 394, 1613, 395, 396,
	397, 1614, 1615, 398, 399, 400, 1616, 401, 402, 403,
	1617, 404, 405, 406, 1618, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 1619, 316, 1620, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 1621, 426,
	427, 428, 1622, 429, 430, 1623, 1353, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 1624, 443, 754, 1625, 755, 444, 1626, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 1355,
	452, 453, 454, 1627, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 1628, 1354, 759, 463,
	546, 464, 760, 761, 1629, 762, 1630, 465, 466, 468,
	1356, 763, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 1631, 479,
	481, 480, 1632, 483, 764, 482, 1359, 484, 485, 1360,
	1633, 486, 487, 488, 489, 490, 491, 494, 1634, 1635,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 1636, 318, 1363, 540, 541, 542, 543, 1637, 765,
	544, 766, 547, 548, 1638, 0, 549, 0, 550, 1639,
	1640, 552, 553, 554, 1641, 1642, 555, 556, 767, 1364,
	557, 1365, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 1643, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 1644, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 1645, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 1646, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 1647, 646,
	647, 645, 648, 649, 650, 1648, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 1649, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 1650, 683, 684, 0,
	678, 669, 1651, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 1652, 693, 779, 780, 781, 782, 1653, 705,
	1654, 694, 696, 697, 698, 699, 783, 700, 784, 1655,
	701, 702, 703, 704, 695, 706, 707, 1656, 1657, 708,
	709, 711, 713, 714, 710, 712, 715, 1658, 716, 1659,
	0, 717, 718, 719, 785, 786, 787, 1660, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1661, 1662, 1663, 1664, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 0, 0, 0, 0, 0,
	3115, 0, 0, 0, 0, 0, 0, 0, 0, 3116,
	319, 320, 322, 321, 323, 324, 325, 326, 1586, 327,
	328, 1587, 1588, 1589, 0, 1590, 736, 1591, 1592, 1593,
	329, 1594, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	1595, 741, 342, 343, 344, 345, 346, 347, 348, 1596,
	1597, 0, 349, 742, 743, 744, 1598, 350, 351, 745,
	1599, 1666, 1600, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 1601, 361, 362, 363, 360, 364, 365, 1602,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 1603,
	374, 375, 376, 1352, 377, 378, 379, 1604, 1605, 1607,
	1606, 1608, 1609, 1610, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 1611, 390, 392, 386, 388, 1612,
	391, 389, 393, 394, 1613, 395, 396, 397, 1614, 1615,
	398, 399, 400, 1616, 401, 402, 403, 1617, 404, 405,
	406, 1618, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	1619, 316, 1620, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 1621, 426, 427, 428, 1622,
	429, 430, 1623, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 1624, 443,
	754, 1625, 755, 444, 1626, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 1355, 452, 453, 454,
	1627, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 1628, 1354, 759, 463, 546, 464, 760,
	761, 1629, 762, 1630, 465, 466, 468, 1356, 763, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1631, 479, 481, 480, 1632,
	483, 764, 482, 1359, 484, 485, 1360, 1633, 486, 487,
	488, 489, 490, 491, 494, 1634, 1635, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1636, 318,
	1363, 540, 541, 542, 543, 1637, 765, 544, 766, 547,
	548, 1638, 0, 549, 0, 550, 1639, 1640, 552, 553,
	554, 1641, 1642, 555, 556, 767, 1364, 557, 1365, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 1643, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 1644,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 1645, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 1646, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 1647, 646, 647, 645, 648,
	649, 650, 1648, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 1649, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 1650, 683, 684, 0, 678, 669, 1651,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 1652,
	693, 779, 780, 781, 782, 1653, 705, 1654, 694, 696,
	697, 698, 699, 783, 700, 784, 1655, 701, 702, 703,
	704, 695, 706, 707, 1656, 1657, 708, 709, 711, 713,
	714, 710, 712, 715, 1658, 716, 1659, 0, 717, 718,
	719, 785, 786, 787, 1660, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 1661, 1662, 1663,
	1664, 731, 732, 789, 733, 734, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	0, 4278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4280, 319, 320, 322, 321, 323, 324,
	325, 326, 1586, 327, 328, 1587, 1588, 1589, 0, 1590,
	736, 1591, 1592, 1593, 329, 1594, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 1595, 741, 342, 343, 344, 345,
	346, 347, 348, 1596, 1597, 0, 349, 742, 743, 744,
	1598, 350, 351, 745, 1599, 1666, 1600, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 1601, 361, 362, 363,
	360, 364, 365, 1602, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 1603, 374, 375, 376, 1352, 377, 378,
	379, 1604, 1605, 1607, 1606, 1608, 1609, 1610, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 1611, 390,
	392, 386, 388, 1612, 391, 389, 393, 394, 1613, 395,
	396, 397, 1614, 1615, 398, 399, 400, 1616, 401, 402,
	403, 1617, 404, 405, 406, 1618, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 1619, 316, 1620, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 1621,
	426, 427, 428, 1622, 429, 430, 1623, 1353, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 1624, 443, 754, 1625, 755, 444, 1626, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1355, 452, 453, 454, 1627, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 1628, 1354, 759,
	463, 546, 464, 760, 761, 1629, 762, 1630, 465, 466,
	468, 1356, 763, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1631,
	479, 481, 480, 1632, 483, 764, 482, 1359, 484, 485,
	1360, 1633, 486, 487, 488, 489, 490, 491, 494, 1634,
	1635, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1636, 318, 1363, 540, 541, 542, 543, 1637,
	765, 544, 766, 547, 548, 1638, 0, 549, 0, 550,
	1639, 1640, 552, 553, 554, 1641, 1642, 555, 556, 767,
	1364, 557, 1365, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 1643, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 1644, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 1645, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 1646, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 1647,
	646, 647, 645, 648, 649, 650, 1648, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 1649, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 1650, 683, 684,
	0, 678, 669, 1651, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 1652, 693, 779, 780, 781, 782, 1653,
	705, 1654, 694, 696, 697, 698, 699, 783, 700, 784,
	1655, 701, 702, 703, 704, 695, 706, 707, 1656, 1657,
	708, 709, 711, 713, 714, 710, 712, 715, 1658, 716,
	1659, 0, 717, 718, 719, 785, 786, 787, 1660, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1661, 1662, 1663, 1664, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4748, 319, 320, 322, 321, 323, 324, 325, 326,
	1586, 327, 328, 1587, 1588, 1589, 0, 1590, 736, 1591,
	1592, 1593, 329, 1594, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 1595, 741, 342, 343, 344, 345, 346, 347,
	348, 1596, 1597, 0, 349, 742, 743, 744, 1598, 350,
	351, 745, 1599, 1666, 1600, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 1601, 361, 362, 363, 360, 364,
	365, 1602, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 1603, 374, 375, 376, 1352, 377, 378, 379, 1604,
	1605, 1607, 1606, 1608, 1609, 1610, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 1611, 390, 392, 386,
	388, 1612, 391, 389, 393, 394, 1613, 395, 396, 397,
	1614, 1615, 398, 399, 400, 1616, 401, 402, 403, 1617,
	404, 405, 406, 1618, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 1619, 316, 1620, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 1621, 426, 427,
	428, 1622, 429, 430, 1623, 1353, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	1624, 443, 754, 1625, 755, 444, 1626, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1355, 452,
	453, 454, 1627, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 1628, 1354, 759, 463, 546,
	464, 760, 761, 1629, 762, 1630, 465, 466, 468, 1356,
	763, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 1631, 479, 481,
	480, 1632, 483, 764, 482, 1359, 484, 485, 1360, 1633,
	486, 487, 488, 489, 490, 491, 494, 1634, 1635, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1636, 318, 1363, 540, 541, 542, 543, 1637, 765, 544,
	766, 547, 548, 1638, 0, 549, 0, 550, 1639, 1640,
	552, 553, 554, 1641, 1642, 555, 556, 767, 1364, 557,
	1365, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 1643, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 1644, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	1645, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 1646, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 1647, 646, 647,
	645, 648, 649, 650, 1648, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 1649, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 1650, 683, 684, 0, 678,
	669, 1651, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 1652, 693, 779, 780, 781, 782, 1653, 705, 1654,
	694, 696, 697, 698, 699, 783, 700, 784, 1655, 701,
	702, 703, 704, 695, 706, 707, 1656, 1657, 708, 709,
	711, 713, 714, 710, 712, 715, 1658, 716, 1659, 0,
	717, 718, 719, 785, 786, 787, 1660, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 1661,
	1662, 1663, 1664, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4746,
	319, 320, 322, 321, 323, 324, 325, 326, 1586, 327,
	328, 1587, 1588, 1589, 0, 1590, 736, 1591, 1592, 1593,
	329, 1594, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	1595, 741, 342, 343, 344, 345, 346, 347, 348, 1596,
	1597, 0, 349, 742, 743, 744, 1598, 350, 351, 745,
	1599, 1666, 1600, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 1601, 361, 362, 363, 360, 364, 365, 1602,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 1603,
	374, 375, 376, 1352, 377, 378, 379, 1604, 1605, 1607,
	1606, 1608, 1609, 1610, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 1611, 390, 392, 386, 388, 1612,
	391, 389, 393, 394, 1613, 395, 396, 397, 1614, 1615,
	398, 399, 400, 1616, 401, 402, 403, 1617, 404, 405,
	406, 1618, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	1619, 316, 1620, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 1621, 426, 427, 428, 1622,
	429, 430, 1623, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 1624, 443,
	754, 1625, 755, 444, 1626, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 1355, 452, 453, 454,
	1627, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 1628, 1354, 759, 463, 546, 464, 760,
	761, 1629, 762, 1630, 465, 466, 468, 1356, 763, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1631, 479, 481, 480, 1632,
	483, 764, 482, 1359, 484, 485, 1360, 1633, 486, 487,
	488, 489, 490, 491, 494, 1634, 1635, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1636, 318,
	1363, 540, 541, 542, 543, 1637, 765, 544, 766, 547,
	548, 1638, 0, 549, 0, 550, 1639, 1640, 552, 553,
	554, 1641, 1642, 555, 556, 767, 1364, 557, 1365, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 1643, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 1644,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 1645, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 1646, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 1647, 646, 647, 645, 648,
	649, 650, 1648, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 1649, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 1650, 683, 684, 0, 678, 669, 1651,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 1652,
	693, 779, 780, 781, 782, 1653, 705, 1654, 694, 696,
	697, 698, 699, 783, 700, 784, 1655, 701, 702, 703,
	704, 695, 706, 707, 1656, 1657, 708, 709, 711, 713,
	714, 710, 712, 715, 1658, 716, 1659, 0, 717, 718,
	719, 785, 786, 787, 1660, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 1661, 1662, 1663,
	1664, 731, 732, 789, 733, 734, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5011, 319, 320, 322, 321, 323, 324, 325, 326,
	1586, 327, 328, 1587, 1588, 1589, 0, 1590, 736, 1591,
	1592, 1593, 329, 1594, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 1595, 741, 342, 343, 344, 345, 346, 347,
	348, 1596, 1597, 0, 349, 742, 743, 744, 1598, 350,
	351, 745, 1599, 1666, 1600, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 1601, 361, 362, 363, 360, 364,
	365, 1602, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 1603, 374, 375, 376, 1352, 377, 378, 379, 1604,
	1605, 1607, 1606, 1608, 1609, 1610, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 1611, 390, 392, 386,
	388, 1612, 391, 389, 393, 394, 1613, 395, 396, 397,
	1614, 1615, 398, 399, 400, 1616, 401, 402, 403, 1617,
	404, 405, 406, 1618, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 1619, 316, 1620, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 1621, 426, 427,
	428, 1622, 429, 430, 1623, 1353, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	1624, 443, 754, 1625, 755, 444, 1626, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1355, 452,
	453, 454, 1627, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 1628, 1354, 759, 463, 546,
	464, 760, 761, 1629, 762, 1630, 465, 466, 468, 1356,
	763, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 1631, 479, 481,
	480, 1632, 483, 764, 482, 1359, 484, 485, 1360, 1633,
	486, 487, 488, 489, 490, 491, 494, 1634, 1635, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1636, 318, 1363, 540, 541, 542, 543, 1637, 765, 544,
	766, 547, 548, 1638, 0, 549, 0, 550, 1639, 1640,
	552, 553, 554, 1641, 1642, 555, 556, 767, 1364, 557,
	1365, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 1643, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 1644, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	1645, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 1646, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 1647, 646, 647,
	645, 648, 649, 650, 1648, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 1649, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 1650, 683, 684, 0, 678,
	669, 1651, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 1652, 693, 779, 780, 781, 782, 1653, 705, 1654,
	694, 696, 697, 698, 699, 783, 700, 784, 1655, 701,
	702, 703, 704, 695, 706, 707, 1656, 1657, 708, 709,
	711, 713, 714, 710, 712, 715, 1658, 716, 1659, 0,
	717, 718, 719, 785, 786, 787, 1660, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 1661,
	1662, 1663, 1664, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4859, 319, 320, 322, 321, 323, 324,
	325, 326, 1586, 327, 328, 1587, 1588, 1589, 0, 1590,
	736, 1591, 1592, 1593, 329, 1594, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 1595, 741, 342, 343, 344, 345,
	346, 347, 348, 1596, 1597, 0, 349, 742, 743, 744,
	1598, 350, 351, 745, 1599, 1666, 1600, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 1601, 361, 362, 363,
	360, 364, 365, 1602, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 1603, 374, 375, 376, 1352, 377, 378,
	379, 1604, 1605, 1607, 1606, 1608, 1609, 1610, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 1611, 390,
	392, 386, 388, 1612, 391, 389, 393, 394, 1613, 395,
	396, 397, 1614, 1615, 398, 399, 400, 1616, 401, 402,
	403, 1617, 404, 405, 406, 1618, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 1619, 316, 1620, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 1621,
	426, 427, 428, 1622, 429, 430, 1623, 1353, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 1624, 443, 754, 1625, 755, 444, 1626, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1355, 452, 453, 454, 1627, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 1628, 1354, 759,
	463, 546, 464, 760, 761, 1629, 762, 1630, 465, 466,
	468, 1356, 763, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1631,
	479, 481, 480, 1632, 483, 764, 482, 1359, 484, 485,
	1360, 1633, 486, 487, 488, 489, 490, 491, 494, 1634,
	1635, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1636, 318, 1363, 540, 541, 542, 543, 1637,
	765, 544, 766, 547, 548, 1638, 0, 549, 0, 550,
	1639, 1640, 552, 553, 554, 1641, 1642, 555, 556, 767,
	1364, 557, 1365, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 1643, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 1644, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 1645, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 1646, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 1647,
	646, 647, 645, 648, 649, 650, 1648, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 1649, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 1650, 683, 684,
	0, 678, 669, 1651, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 1652, 693, 779, 780, 781, 782, 1653,
	705, 1654, 694, 696, 697, 698, 699, 783, 700, 784,
	1655, 701, 702, 703, 704, 695, 706, 707, 1656, 1657,
	708, 709, 711, 713, 714, 710, 712, 715, 1658, 716,
	1659, 0, 717, 718, 719, 785, 786, 787, 1660, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1661, 1662, 1663, 1664, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4672, 319, 320, 322, 321,
	323, 324, 325, 326, 1586, 327, 328, 1587, 1588, 1589,
	0, 1590, 736, 1591, 1592, 1593, 329, 1594, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 1595, 741, 342, 343,
	344, 345, 346, 347, 348, 1596, 1597, 0, 349, 742,
	743, 744, 1598, 350, 351, 745, 1599, 1666, 1600, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 1601, 361,
	362, 363, 360, 364, 365, 1602, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 1603, 374, 375, 376, 1352,
	377, 378, 379, 1604, 1605, 1607, 1606, 1608, 1609, 1610,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	1611, 390, 392, 386, 388, 1612, 391, 389, 393, 394,
	1613, 395, 396, 397, 1614, 1615, 398, 399, 400, 1616,
	401, 402, 403, 1617, 404, 405, 406, 1618, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 1619, 316, 1620, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 1621, 426, 427, 428, 1622, 429, 430, 1623, 1353,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 1624, 443, 754, 1625, 755, 444,
	1626, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 1355, 452, 453, 454, 1627, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 1628,
	1354, 759, 463, 546, 464, 760, 761, 1629, 762, 1630,
	465, 466, 468, 1356, 763, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 1631, 479, 481, 480, 1632, 483, 764, 482, 1359,
	484, 485, 1360, 1633, 486, 487, 488, 489, 490, 491,
	494, 1634, 1635, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 1636, 318, 1363, 540, 541, 542,
	543, 1637, 765, 544, 766, 547, 548, 1638, 0, 549,
	0, 550, 1639, 1640, 552, 553, 554, 1641, 1642, 555,
	556, 767, 1364, 557, 1365, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 1643,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 1644, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 1645, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	1646, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 1647, 646, 647, 645, 648, 649, 650, 1648, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 1649, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 1650,
	683, 684, 0, 678, 669, 1651, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 1652, 693, 779, 780, 781,
	782, 1653, 705, 1654, 694, 696, 697, 698, 699, 783,
	700, 784, 1655, 701, 702, 703, 704, 695, 706, 707,
	1656, 1657, 708, 709, 711, 713, 714, 710, 712, 715,
	1658, 716, 1659, 0, 717, 718, 719, 785, 786, 787,
	1660, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 1661, 1662, 1663, 1664, 731, 732, 789,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4296, 319, 320,
	322, 321, 323, 324, 325, 326, 1586, 327, 328, 1587,
	1588, 1589, 0, 1590, 736, 1591, 1592, 1593, 329, 1594,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 1595, 741,
	342, 343, 344, 345, 346, 347, 348, 1596, 1597, 0,
	349, 742, 743, 744, 1598, 350, 351, 745, 1599, 1666,
	1600, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	1601, 361, 362, 363, 360, 364, 365, 1602, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 1603, 374, 375,
	376, 1352, 377, 378, 379, 1604, 1605, 1607, 1606, 1608,
	1609, 1610, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 1611, 390, 392, 386, 388, 1612, 391, 389,
	393, 394, 1613, 395, 396, 397, 1614, 1615, 398, 399,
	400, 1616, 401, 402, 403, 1617, 404, 405, 406, 1618,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 1619, 316,
	1620, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 1621, 426, 427, 428, 1622, 429, 430,
	1623, 1353, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 1624, 443, 754, 1625,
	755, 444, 1626, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1355, 452, 453, 454, 1627, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 1628, 1354, 759, 463, 546, 464, 760, 761, 1629,
	762, 1630, 465, 466, 468, 1356, 763, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 1631, 479, 481, 480, 1632, 483, 764,
	482, 1359, 484, 485, 1360, 1633, 486, 487, 488, 489,
	490, 491, 494, 1634, 1635, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1636, 318, 1363, 540,
	541, 542, 543, 1637, 765, 544, 766, 547, 548, 1638,
	0, 549, 0, 550, 1639, 1640, 552, 553, 554, 1641,
	1642, 555, 556, 767, 1364, 557, 1365, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 1643, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 1644, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 1645, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 1646, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 1647, 646, 647, 645, 648, 649, 650,
	1648, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 1649,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 1650, 683, 684, 0, 678, 669, 1651, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 1652, 693, 779,
	780, 781, 782, 1653, 705, 1654, 694, 696, 697, 698,
	699, 783, 700, 784, 1655, 701, 702, 703, 704, 695,
	706, 707, 1656, 1657, 708, 709, 711, 713, 714, 710,
	712, 715, 1658, 716, 1659, 0, 717, 718, 719, 785,
	786, 787, 1660, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 1661, 1662, 1663, 1664, 731,
	732, 789, 733, 734, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4099,
	319, 320, 322, 321, 323, 324, 325, 326, 1586, 327,
	328, 1587, 1588, 1589, 0, 1590, 736, 1591, 1592, 1593,
	329, 1594, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	1595, 741, 342, 343, 344, 345, 346, 347, 348, 1596,
	1597, 0, 349, 742, 743, 744, 1598, 350, 351, 745,
	1599, 1666, 1600, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 1601, 361, 362, 363, 360, 364, 365, 1602,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 1603,
	374, 375, 376, 1352, 377, 378, 379, 1604, 1605, 1607,
	1606, 1608, 1609, 1610, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 1611, 390, 392, 386, 388, 1612,
	391, 389, 393, 394, 1613, 395, 396, 397, 1614, 1615,
	398, 399, 400, 1616, 401, 402, 403, 1617, 404, 405,
	406, 1618, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	1619, 316, 1620, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 1621, 426, 427, 428, 1622,
	429, 430, 1623, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 1624, 443,
	754, 1625, 755, 444, 1626, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 1355, 452, 453, 454,
	1627, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 1628, 1354, 759, 463, 546, 464, 760,
	761, 1629, 762, 1630, 465, 466, 468, 1356, 763, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1631, 479, 481, 480, 1632,
	483, 764, 482, 1359, 484, 485, 1360, 1633, 486, 487,
	488, 489, 490, 491, 494, 1634, 1635, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1636, 318,
	1363, 540, 541, 542, 543, 1637, 765, 544, 766, 547,
	548, 1638, 0, 549, 0, 550, 1639, 1640, 552, 553,
	554, 1641, 1642, 555, 556, 767, 1364, 557, 1365, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 1643, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 1644,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 1645, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 1646, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 1647, 646, 647, 645, 648,
	649, 650, 1648, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 1649, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 1650, 683, 684, 0, 678, 669, 1651,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 1652,
	693, 779, 780, 781, 782, 1653, 705, 1654, 694, 696,
	697, 698, 699, 783, 700, 784, 1655, 701, 702, 703,
	704, 695, 706, 707, 1656, 1657, 708, 709, 711, 713,
	714, 710, 712, 715, 1658, 716, 1659, 0, 717, 718,
	719, 785, 786, 787, 1660, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 1661, 1662, 1663,
	1664, 731, 732, 789, 733, 734, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2946, 319, 320, 322, 321, 323, 324, 325, 326,
	1586, 327, 328, 1587, 1588, 1589, 0, 1590, 736, 1591,
	1592, 1593, 329, 1594, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 1595, 741, 342, 343, 344, 345, 346, 347,
	348, 1596, 1597, 0, 349, 742, 743, 744, 1598, 350,
	351, 745, 1599, 1666, 1600, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 1601, 361, 362, 363, 360, 364,
	365, 1602, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 1603, 374, 375, 376, 1352, 377, 378, 379, 1604,
	1605, 1607, 1606, 1608, 1609, 1610, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 1611, 390, 392, 386,
	388, 1612, 391, 389, 393, 394, 1613, 395, 396, 397,
	1614, 1615, 398, 399, 400, 1616, 401, 402, 403, 1617,
	404, 405, 406, 1618, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 1619, 316, 1620, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 1621, 426, 427,
	428, 1622, 429, 430, 1623, 1353, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	1624, 443, 754, 1625, 755, 444, 1626, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1355, 452,
	453, 454, 1627, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 1628, 1354, 759, 463, 546,
	464, 760, 761, 1629, 762, 1630, 465, 466, 468, 1356,
	763, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 1631, 479, 481,
	480, 1632, 483, 764, 482, 1359, 484, 485, 1360, 1633,
	486, 487, 488, 489, 490, 491, 494, 1634, 1635, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1636, 318, 1363, 540, 541, 542, 543, 1637, 765, 544,
	766, 547, 548, 1638, 0, 549, 0, 550, 1639, 1640,
	552, 553, 554, 1641, 1642, 555, 556, 767, 1364, 557,
	1365, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 1643, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 1644, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	1645, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 1646, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 1647, 646, 647,
	645, 648, 649, 650, 1648, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 1649, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 1650, 683, 684, 0, 678,
	669, 1651, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 1652, 693, 779, 780, 781, 782, 1653, 705, 1654,
	694, 696, 697, 698, 699, 783, 700, 784, 1655, 701,
	702, 703, 704, 695, 706, 707, 1656, 1657, 708, 709,
	711, 713, 714, 710, 712, 715, 1658, 716, 1659, 0,
	717, 718, 719, 785, 786, 787, 1660, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 1661,
	1662, 1663, 1664, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 1577, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2554, 319, 320, 322, 321, 323, 324,
	325, 326, 1586, 327, 328, 1587, 1588, 1589, 0, 1590,
	736, 1591, 1592, 1593, 329, 1594, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 1595, 741, 342, 343, 344, 345,
	346, 347, 348, 1596, 1597, 0, 349, 742, 743, 744,
	1598, 350, 351, 745, 1599, 1666, 1600, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 1601, 361, 362, 363,
	360, 364, 365, 1602, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 1603, 374, 375, 376, 1352, 377, 378,
	379, 1604, 1605, 1607, 1606, 1608, 1609, 1610, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 1611, 390,
	392, 386, 388, 1612, 391, 389, 393, 394, 1613, 395,
	396, 397, 1614, 1615, 398, 399, 400, 1616, 401, 402,
	403, 1617, 404, 405, 406, 1618, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 1619, 316, 1620, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 1621,
	426, 427, 428, 1622, 429, 430, 1623, 1353, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 1624, 443, 754, 1625, 755, 444, 1626, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1355, 452, 453, 454, 1627, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 1628, 1354, 759,
	463, 546, 464, 760, 761, 1629, 762, 1630, 465, 466,
	468, 1356, 763, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1631,
	479, 481, 480, 1632, 483, 764, 482, 1359, 484, 485,
	1360, 1633, 486, 487, 488, 489, 490, 491, 494, 1634,
	1635, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1636, 318, 1363, 540, 541, 542, 543, 1637,
	765, 544, 766, 547, 548, 1638, 0, 549, 0, 550,
	1639, 1640, 552, 553, 554, 1641, 1642, 555, 556, 767,
	1364, 557, 1365, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 1643, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 1644, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 1645, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 1646, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 1647,
	646, 647, 645, 648, 649, 650, 1648, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 1649, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 1650, 683, 684,
	0, 678, 669, 1651, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 1652, 693, 779, 780, 781, 782, 1653,
	705, 1654, 694, 696, 697, 698, 699, 783, 700, 784,
	1655, 701, 702, 703, 704, 695, 706, 707, 1656, 1657,
	708, 709, 711, 713, 714, 710, 712, 715, 1658, 716,
	1659, 0, 717, 718, 719, 785, 786, 787, 1660, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1661, 1662, 1663, 1664, 731, 732, 789, 733, 734,
	735, 1580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 1586, 327, 328, 1587,
	1588, 1589, 0, 1590, 736, 1591, 1592, 1593, 329, 1594,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 1595, 741,
	342, 343, 344, 345, 346, 347, 348, 1596, 1597, 0,
	349, 742, 743, 744, 1598, 350, 351, 745, 1599, 1666,
	1600, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	1601, 361, 362, 363, 360, 364, 365, 1602, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 1603, 374, 375,
	376, 1352, 377, 378, 379, 1604, 1605, 1607, 1606, 1608,
	1609, 1610, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 1611, 390, 392, 386, 388, 1612, 391, 389,
	393, 394, 1613, 395, 396, 397, 1614, 1615, 398, 399,
	400, 1616, 401, 402, 403, 1617, 404, 405, 406, 1618,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 1619, 316,
	1620, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 1621, 426, 427, 428, 1622, 429, 430,
	1623, 1353, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 1624, 443, 754, 1625,
	755, 444, 1626, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1355, 452, 453, 454, 1627, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 1628, 1354, 759, 463, 546, 464, 760, 761, 1629,
	762, 1630, 465, 466, 468, 1356, 763, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 1631, 479, 481, 480, 1632, 483, 764,
	482, 1359, 484, 485, 1360, 1633, 486, 487, 488, 489,
	490, 491, 494, 1634, 1635, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1636, 318, 1363, 540,
	541, 542, 543, 1637, 765, 544, 766, 547, 548, 1638,
	0, 549, 0, 550, 1639, 1640, 552, 553, 554, 1641,
	1642, 555, 556, 767, 1364, 557, 1365, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 1643, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 1644, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 1645, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 1646, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 1647, 646, 647, 645, 648, 649, 650,
	1648, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 1649,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 1650, 683, 684, 0, 678, 669, 1651, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 1652, 693, 779,
	780, 781, 782, 1653, 705, 1654, 694, 696, 697, 698,
	699, 783, 700, 784, 1655, 701, 702, 703, 704, 695,
	706, 707, 1656, 1657, 708, 709, 711, 713, 714, 710,
	712, 715, 1658, 716, 1659, 0, 717, 718, 719, 785,
	786, 787, 1660, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 1661, 1662, 1663, 1664, 731,
	732, 789, 733, 734, 735, 2921, 0, 1287, 1259, 1260,
	1261, 1257, 1258, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 2918, 327, 328, 0, 0, 0, 0, 0,
	1311, 1275, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 1324, 0,
	340, 1331, 341, 1330, 0, 1341, 342, 343, 344, 345,
	346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744,
	0, 350, 351, 1317, 0, 1298, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381,
	382, 383, 384, 1334, 385, 387, 1328, 1327, 1247, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 2919, 0, 398, 1319, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1253, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1342, 1343, 421, 1266, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1326, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 1339, 1340, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1349, 0, 1276, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1312, 1313, 1316, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 1321, 1322, 0, 1282, 0, 465, 466,
	468, 1356, 1314, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1350, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 1305,
	1304, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1244, 318, 1363, 540, 541, 542, 543, 1267,
	1315, 544, 1329, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 1344, 558, 559, 1254, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1345, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1325, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	1255, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1308, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 1323, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1370, 672, 673,
	674, 675, 1346, 679, 680, 681, 682, 0, 683, 684,
	1241, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1335, 1336, 1337, 1338, 0,
	705, 0, 694, 696, 697, 698, 699, 1347, 700, 1348,
	1265, 701, 702, 703, 704, 695, 706, 707, 0, 1248,
	708, 709, 711, 713, 714, 710, 712, 715, 1309, 716,
	0, 0, 717, 718, 719, 785, 1332, 1369, 2917, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1240, 0, 0, 0,
	0, 0, 0, 1238, 1239, 2920, 0, 0, 0, 0,
	0, 0, 0, 1271, 2916, 0, 1229, 1269, 1287, 1259,
	1260, 1261, 1257, 1258, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 1311, 1275, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 1324,
	0, 340, 1331, 341, 1330, 0, 1341, 342, 343, 344,
	345, 346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372,
	744, 0, 350, 351, 1317, 0, 1298, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380,
	381, 382, 383, 384, 1334, 385, 387, 1328, 1327, 1247,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1319, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1253,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1342, 1343, 421, 1266, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1326, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 1339, 1340, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1349, 0, 1276, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1312, 1313, 1316,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 1321, 1322, 0, 1282, 0, 465,
	466, 468, 1356, 1314, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1350, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	1305, 1304, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 1244, 318, 1363, 540, 541, 542, 543,
	1267, 1315, 544, 1329, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 1344, 558, 559, 1254, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1345,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1325, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 1255, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	272, 646, 647, 645, 648, 649, 650, 1308, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 1323, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1370, 672,
	673, 674, 675, 1346, 679, 680, 681, 682, 0, 683,
	684, 1241, 678, 669, 274, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1335, 1336, 1337, 1338,
	0, 705, 0, 694, 696, 697, 698, 699, 1347, 700,
	1348, 1265, 701, 702, 703, 704, 695, 706, 707, 0,
	1248, 708, 709, 711, 713, 714, 710, 712, 715, 1309,
	716, 0, 0, 717, 718, 719, 1829, 1332, 1369, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 266, 731, 732, 789, 733,
	734, 735, 1245, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 1238, 1239, 1287, 1259, 1260, 1261,
	1257, 1258, 1270, 0, 2101, 2099, 0, 0, 1269, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 1311,
	1275, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 1324, 0, 340,
	1331, 341, 1330, 0, 1341, 342, 343, 344, 345, 346,
	347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0,
	350, 351, 1317, 0, 1298, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382,
	383, 384, 1334, 385, 387, 1328, 1327, 1247, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1319, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1253, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1342, 1343, 421, 1266, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1326, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	1339, 1340, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1349, 0, 1276, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1312, 1313, 1316, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 1321, 1322, 0, 1282, 0, 465, 466, 468,
	1356, 1314, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1350, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 1305, 1304,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 1244, 318, 1363, 540, 541, 542, 543, 1267, 1315,
	544, 1329, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 1344, 558, 559, 1254, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1345, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1325, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 1255,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 272, 646,
	647, 645, 648, 649, 650, 1308, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 1323, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1370, 672, 673, 674,
	675, 1346, 679, 680, 681, 682, 0, 683, 684, 1241,
	678, 669, 274, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1335, 1336, 1337, 1338, 0, 705,
	0, 694, 696, 697, 698, 699, 1347, 700, 1348, 1265,
	701, 702, 703, 704, 695, 706, 707, 0, 1248, 708,
	709, 711, 713, 714, 710, 712, 715, 1309, 716, 0,
	0, 717, 718, 719, 1829, 1332, 1369, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 266, 731, 732, 789, 733, 734, 735,
	1245, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 1238, 1239, 1287, 1259, 1260, 1261, 1257, 1258,
	1270, 0, 2101, 3674, 0, 0, 1269, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 1311, 1275, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 1324, 0, 340, 1331, 341,
	1330, 0, 1341, 342, 343, 344, 345, 346, 347, 348,
	1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350, 351,
	1317, 0, 1298, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 1301, 1299,
	1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383, 384,
	1334, 385, 387, 1328, 1327, 1247, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1253, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1342, 1343,
	421, 1266, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1326, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 1339, 1340,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1349, 0, 1276, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1312, 1313, 1316, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	1321, 1322, 0, 1282, 0, 465, 466, 468, 1356, 1314,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1350, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 1305, 1304, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 1244,
	318, 1363, 540, 541, 542, 543, 1267, 1315, 544, 1329,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	1344, 558, 559, 1254, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1345, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1325, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 1255, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 272, 646, 647, 645,
	648, 649, 650, 1308, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 1323,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1370, 672, 673, 674, 675, 1346,
	679, 680, 681, 682, 0, 683, 684, 1241, 678, 669,
	274, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1335, 1336, 1337, 1338, 0, 705, 0, 694,
	696, 697, 698, 699, 1347, 700, 1348, 1265, 701, 702,
	703, 704, 695, 706, 707, 0, 1248, 708, 709, 711,
	713, 714, 710, 712, 715, 1309, 716, 0, 0, 717,
	718, 719, 1829, 1332, 1369, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 266, 731, 732, 789, 733, 734, 735, 1245, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	1238, 1239, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0,
	2101, 2099, 0, 0, 1269, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 3051,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	1242, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 1247, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 3056, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 3052, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 1244, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 1241, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 3053, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 1248, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1245, 0, 0, 0,
	0, 2966, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 1240, 0, 0, 0, 0, 0, 0, 1238, 1239,
	319, 320, 322, 321, 323, 324, 325, 326, 1271, 327,
	328, 0, 1269, 0, 0, 0, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 1277,
	1310, 1242, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 1247, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1253, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1244, 318,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 1254, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 1255, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 1241, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 1248, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 1238,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	2964, 0, 2963, 1269, 1287, 1259, 1260, 1261, 1257, 1258,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 1311, 1275, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 1324, 0, 340, 1331, 341,
	1330, 0, 1341, 342, 343, 344, 345, 346, 347, 348,
	1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350, 351,
	1317, 0, 1298, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 1301, 1299,
	1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383, 384,
	1334, 385, 387, 1328, 1327, 1247, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1253, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1342, 1343,
	421, 1266, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1326, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 1339, 1340,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1349, 0, 1276, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1312, 1313, 1316, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	1321, 1322, 0, 1282, 0, 465, 466, 468, 1356, 1314,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1350, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 1305, 1304, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 1244,
	318, 1363, 540, 541, 542, 543, 1267, 1315, 544, 1329,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	1344, 558, 559, 1254, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1345, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1325, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 1255, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1308, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 1323,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1370, 672, 673, 674, 675, 1346,
	679, 680, 681, 682, 0, 683, 684, 1241, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1335, 1336, 1337, 1338, 0, 705, 0, 694,
	696, 697, 698, 699, 1347, 700, 1348, 1265, 701, 702,
	703, 704, 695, 706, 707, 0, 1248, 708, 709, 711,
	713, 714, 710, 712, 715, 1309, 716, 0, 0, 717,
	718, 719, 785, 1332, 1369, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	1238, 1239, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 2961, 0, 2960, 1269, 1287, 1259, 1260, 1261, 1257,
	1258, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 0, 1311, 1275,
	0, 0, 329, 0, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 1324, 0, 340, 1331,
	341, 1330, 0, 1341, 342, 343, 344, 345, 346, 347,
	348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350,
	351, 1317, 0, 1298, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1352, 377, 378, 379, 1301,
	1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383,
	384, 1334, 385, 387, 1328, 1327, 1247, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1319, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1253, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1342,
	1343, 421, 1266, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1326, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1353, 431, 432, 433, 1339,
	1340, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1349, 0, 1276, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1312, 1313, 1316, 545, 1355, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1354, 759, 463, 546,
	464, 1321, 1322, 0, 1282, 0, 465, 466, 468, 1356,
	1314, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1350, 482, 1359, 484, 485, 1360, 0,
	486, 487, 488, 489, 490, 491, 494, 1305, 1304, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1244, 318, 1363, 540, 541, 542, 543, 1267, 1315, 544,
	1329, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1364, 557,
	1365, 1344, 558, 559, 1254, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1345, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1325, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 1255, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1308, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	1323, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1370, 672, 673, 674, 675,
	1346, 679, 680, 681, 682, 0, 683, 684, 1241, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1335, 1336, 1337, 1338, 0, 705, 0,
	694, 696, 697, 698, 699, 1347, 700, 1348, 1265, 701,
	702, 703, 704, 695, 706, 707, 0, 1248, 708, 709,
	711, 713, 714, 710, 712, 715, 1309, 716, 0, 0,
	717, 718, 719, 785, 1332, 1369, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 1238, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 2958, 0, 2957, 1269, 1287, 1259, 1260, 1261,
	1257, 1258, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 1311,
	1275, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 1324, 0, 340,
	1331, 341, 1330, 0, 1341, 342, 343, 344, 345, 346,
	347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0,
	350, 351, 1317, 0, 1298, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382,
	383, 384, 1334, 385, 387, 1328, 1327, 1247, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1319, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1253, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1342, 1343, 421, 1266, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1326, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	1339, 1340, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1349, 0, 1276, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1312, 1313, 1316, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 1321, 1322, 0, 1282, 0, 465, 466, 468,
	1356, 1314, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1350, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 1305, 1304,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 1244, 318, 1363, 540, 541, 542, 543, 1267, 1315,
	544, 1329, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 1344, 558, 559, 1254, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1345, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1325, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 1255,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1308, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 1323, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1370, 672, 673, 674,
	675, 1346, 679, 680, 681, 682, 0, 683, 684, 1241,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1335, 1336, 1337, 1338, 0, 705,
	0, 694, 696, 697, 698, 699, 1347, 700, 1348, 1265,
	701, 702, 703, 704, 695, 706, 707, 0, 1248, 708,
	709, 711, 713, 714, 710, 712, 715, 1309, 716, 0,
	0, 717, 718, 719, 785, 1332, 1369, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 1238, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 2955, 0, 1933, 1269, 1287, 1259, 1260,
	1261, 1257, 1258, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 0, 0, 0,
	1311, 1275, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 1324, 0,
	340, 1331, 341, 1330, 0, 1341, 342, 343, 344, 345,
	346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744,
	0, 350, 351, 1317, 0, 1298, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381,
	382, 383, 384, 1334, 385, 387, 1328, 1327, 1247, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1319, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1253, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1342, 1343, 421, 1266, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1326, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 1339, 1340, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1349, 0, 1276, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1312, 1313, 1316, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 1321, 1322, 0, 1282, 0, 465, 466,
	468, 1356, 1314, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1350, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 1305,
	1304, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1244, 318, 1363, 540, 541, 542, 543, 1267,
	1315, 544, 1329, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 1344, 558, 559, 1254, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1345, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1325, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	1255, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1308, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 1323, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1370, 672, 673,
	674, 675, 1346, 679, 680, 681, 682, 0, 683, 684,
	1241, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1335, 1336, 1337, 1338, 0,
	705, 0, 694, 696, 697, 698, 699, 1347, 700, 1348,
	1265, 701, 702, 703, 704, 695, 706, 707, 0, 1248,
	708, 709, 711, 713, 714, 710, 712, 715, 1309, 716,
	0, 0, 717, 718, 719, 785, 1332, 1369, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1932, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1245, 0, 0, 0, 0, 1234, 0, 1287, 1259,
	1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0,
	0, 0, 0, 1238, 1239, 319, 320, 322, 321, 323,
	324, 325, 326, 1271, 327, 328, 0, 1269, 0, 0,
	0, 1311, 1275, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 1324,
	0, 340, 1331, 341, 1330, 0, 1341, 342, 343, 344,
	345, 346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372,
	744, 0, 350, 351, 1317, 0, 1298, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380,
	381, 382, 383, 384, 1334, 385, 387, 1328, 1327, 1247,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1319, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1253,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1342, 1343, 421, 1266, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1326, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 1339, 1340, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1349, 0, 1276, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1312, 1313, 1316,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 1321, 1322, 0, 1282, 0, 465,
	466, 468, 1356, 1314, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1350, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	1305, 1304, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 1244, 318, 1363, 540, 541, 542, 543,
	1267, 1315, 544, 1329, 547, 548, 0, 0, 549, 0,
	550, 1249, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 1344, 558, 559, 1254, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1345,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1325, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 1255, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1308, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 1323, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1370, 672,
	673, 674, 675, 1346, 679, 680, 681, 682, 0, 683,
	684, 1241, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1335, 1336, 1337, 1338,
	0, 705, 0, 694, 696, 697, 698, 699, 1347, 700,
	1348, 1265, 701, 702, 703, 704, 695, 706, 707, 0,
	1248, 708, 709, 711, 713, 714, 710, 712, 715, 1309,
	716, 0, 0, 717, 718, 719, 785, 1332, 1369, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1245, 0, 0, 0, 0, 0, 0, 1287,
	1259, 1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0,
	0, 0, 0, 0, 1238, 1239, 319, 320, 322, 321,
	323, 324, 325, 326, 1271, 327, 328, 0, 1269, 0,
	0, 0, 1311, 1275, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	1324, 0, 340, 1331, 341, 1330, 0, 1341, 342, 343,
	344, 345, 346, 347, 348, 1277, 1310, 1242, 349, 1371,
	1372, 744, 0, 350, 351, 1317, 0, 1298, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 5404, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306,
	380, 381, 382, 383, 384, 1334, 385, 387, 1328, 1327,
	1247, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1319, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1253, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1342, 1343, 421, 1266, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1326, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 1339, 1340, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1349, 0, 1276, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1312, 1313,
	1316, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 1321, 1322, 0, 1282, 0,
	465, 466, 468, 1356, 1314, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1350, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 1305, 1304, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 1244, 318, 1363, 540, 541, 542,
	543, 1267, 1315, 544, 1329, 547, 548, 0, 0, 549,
	0, 550, 1249, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 1344, 558, 559, 1254, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1345, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1325, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 1255, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1308, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 1323, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1370,
	672, 673, 674, 675, 1346, 679, 680, 681, 682, 0,
	683, 684, 1241, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1335, 1336, 1337,
	1338, 0, 705, 0, 694, 696, 697, 698, 699, 1347,
	700, 1348, 1265, 701, 702, 703, 704, 695, 706, 707,
	0, 1248, 708, 709, 711, 713, 714, 710, 712, 715,
	1309, 716, 0, 0, 717, 718, 719, 785, 1332, 1369,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1245, 0, 0, 0, 0, 0, 0,
	1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 1240, 0,
	0, 0, 0, 0, 0, 1238, 1239, 319, 320, 322,
	321, 323, 324, 325, 326, 1271, 327, 328, 0, 1269,
	0, 0, 0, 1311, 1275, 0, 0, 329, 0, 330,
	331, 332, 1351, 333, 334, 335, 336, 337, 338, 339,
	737, 1324, 0, 340, 1331, 341, 1330, 0, 1341, 342,
	343, 344, 345, 346, 347, 348, 1277, 1310, 1242, 349,
	1371, 1372, 744, 0, 350, 351, 1317, 0, 1298, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302,
	1306, 380, 381, 382, 383, 384, 1334, 385, 387, 1328,
	1327, 1247, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1319, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1253, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1342, 1343, 421, 1266, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1326, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1353, 431, 432, 433, 1339, 1340, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1349, 0, 1276,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1312,
	1313, 1316, 545, 1355, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 2796, 460, 461, 462,
	0, 1354, 759, 463, 546, 464, 1321, 1322, 0, 1282,
	0, 465, 466, 468, 1356, 1314, 1357, 467, 469, 470,
	1358, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1350, 482,
	1359, 484, 485, 1360, 0, 486, 487, 488, 489, 490,
	491, 494, 1305, 1304, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1361, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1362, 538, 526, 1244, 318, 1363, 540, 541,
	542, 543, 1267, 1315, 544, 1329, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1364, 557, 1365, 1344, 558, 559, 1254,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1345, 578, 772, 579, 580, 2795, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1325,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1366, 620, 621,
	622, 623, 624, 1255, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1308,
	651, 775, 652, 632, 633, 653, 654, 1367, 655, 656,
	657, 658, 659, 660, 661, 1323, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1370, 672, 673, 674, 675, 1346, 679, 680, 681, 682,
	0, 683, 684, 1241, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1335, 1336,
	1337, 1338, 0, 705, 0, 694, 696, 697, 698, 699,
	1347, 700, 1348, 1265, 701, 702, 703, 704, 695, 706,
	707, 0, 1248, 708, 709, 711, 713, 714, 710, 712,
	715, 1309, 716, 0, 0, 717, 718, 719, 785, 1332,
	1369, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1245, 0, 0, 0, 0, 0,
	0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 1240,
	0, 0, 0, 0, 0, 0, 1238, 1239, 319, 320,
	322, 321, 323, 324, 325, 326, 1271, 327, 328, 0,
	1269, 0, 0, 0, 1311, 1275, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 1324, 0, 340, 1331, 341, 1330, 0, 1341,
	342, 343, 344, 345, 346, 347, 348, 1277, 1310, 1242,
	349, 1371, 1372, 744, 0, 350, 351, 1317, 0, 1298,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 5110, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303,
	1302, 1306, 380, 381, 382, 383, 384, 1334, 385, 387,
	1328, 1327, 1247, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1319,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1253, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1342, 1343, 421, 1266, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1326, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 1339, 1340, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1349, 0,
	1276, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1312, 1313, 1316, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 1321, 1322, 0,
	1282, 0, 465, 466, 468, 1356, 1314, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1350,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 1305, 1304, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1244, 318, 1363, 540,
	541, 542, 543, 1267, 1315, 544, 1329, 547, 548, 0,
	0, 549, 0, 550, 1249, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 1344, 558, 559,
	1254, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1345, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1325, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 1255, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1308, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 1323, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1370, 672, 673, 674, 675, 1346, 679, 680, 681,
	682, 0, 683, 684, 1241, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1335,
	1336, 1337, 1338, 0, 705, 0, 694, 696, 697, 698,
	699, 1347, 700, 1348, 1265, 701, 702, 703, 704, 695,
	706, 707, 0, 1248, 708, 709, 711, 713, 714, 710,
	712, 715, 1309, 716, 0, 0, 717, 718, 719, 785,
	1332, 1369, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1245, 0, 0, 0, 0,
	0, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0,
	1240, 0, 0, 0, 0, 0, 0, 1238, 1239, 319,
	320, 322, 321, 323, 324, 325, 326, 1271, 327, 328,
	0, 1269, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 0,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	1242, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 1247, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 1244, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 1249, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 1241, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 0, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 1248, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1245, 0, 0, 0,
	0, 0, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 1240, 0, 0, 0, 0, 0, 0, 1238, 1239,
	319, 320, 322, 321, 323, 324, 325, 326, 1271, 327,
	328, 0, 1269, 0, 0, 0, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 1277,
	1310, 1242, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 1247, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1253, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1244, 4637,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 1254, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 1255, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 1241, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 1248, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 1238,
	1239, 2172, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 1271,
	0, 0, 0, 1269, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 0,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	1242, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 1247, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 1244, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 1241, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 0, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 1248, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 1238, 1239,
	2172, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 1271, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 0, 1311, 1275, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 1324, 0, 340, 1331, 341, 1330, 0, 1341,
	342, 343, 344, 345, 346, 347, 348, 1277, 1310, 1242,
	349, 1371, 1372, 744, 0, 350, 351, 1317, 0, 1298,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303,
	1302, 1306, 380, 381, 382, 383, 384, 1334, 385, 387,
	1328, 1327, 1247, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1319,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1253, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1342, 1343, 421, 1266, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1326, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 1339, 1340, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1349, 0,
	1276, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1312, 1313, 1316, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 1321, 1322, 0,
	1282, 0, 465, 466, 468, 1356, 1314, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1350,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 1305, 1304, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1244, 318, 1363, 540,
	541, 542, 543, 1267, 1315, 544, 1329, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 1344, 558, 559,
	1254, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1345, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1325, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 1255, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1308, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 1323, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1370, 672, 673, 674, 675, 1346, 679, 680, 681,
	682, 0, 683, 684, 1241, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1335,
	1336, 1337, 1338, 0, 705, 0, 694, 696, 697, 698,
	699, 1347, 700, 1348, 1265, 701, 702, 703, 704, 695,
	706, 707, 0, 1248, 708, 709, 711, 713, 714, 710,
	712, 715, 1309, 716, 0, 0, 717, 718, 719, 785,
	1332, 1369, 4274, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1245, 0, 0, 0, 0,
	0, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0,
	1240, 0, 0, 0, 0, 0, 0, 1238, 1239, 319,
	320, 322, 321, 323, 324, 325, 326, 1271, 327, 328,
	0, 1269, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 0,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	1242, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 1247, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 3056, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 1244, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 1241, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 0, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 1248, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1245, 0, 0, 0,
	0, 0, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 1240, 0, 0, 0, 0, 0, 0, 1238, 1239,
	319, 320, 322, 321, 323, 324, 325, 326, 1271, 327,
	328, 0, 1269, 0, 0, 0, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 1277,
	1310, 1242, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 1247, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1253, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1244, 318,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 1254, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 1255, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 1241, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 1248, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 1238,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	2099, 0, 3061, 1269, 1287, 1259, 1260, 1261, 1257, 1258,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 1311, 1275, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 1324, 0, 340, 1331, 341,
	1330, 0, 1341, 342, 343, 344, 345, 346, 347, 348,
	1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350, 351,
	1317, 0, 1298, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 1301, 1299,
	1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383, 384,
	1334, 385, 387, 1328, 1327, 1247, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1253, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1342, 1343,
	421, 1266, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1326, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 1339, 1340,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1349, 0, 1276, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1312, 1313, 1316, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	1321, 1322, 0, 1282, 0, 465, 466, 468, 1356, 1314,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1350, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 1305, 1304, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 1244,
	318, 1363, 540, 541, 542, 543, 1267, 1315, 544, 1329,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	1344, 558, 559, 1254, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1345, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1325, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 1255, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1308, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 1323,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1370, 672, 673, 674, 675, 1346,
	679, 680, 681, 682, 0, 683, 684, 1241, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1335, 1336, 1337, 1338, 0, 705, 0, 694,
	696, 697, 698, 699, 1347, 700, 1348, 1265, 701, 702,
	703, 704, 695, 706, 707, 0, 1248, 708, 709, 711,
	713, 714, 710, 712, 715, 1309, 716, 0, 0, 717,
	718, 719, 785, 1332, 1369, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1245, 0,
	0, 0, 0, 3059, 0, 1287, 1259, 1260, 1261, 1257,
	1258, 1270, 0, 1240, 0, 0, 0, 0, 0, 0,
	1238, 1239, 319, 320, 322, 321, 323, 324, 325, 326,
	1271, 327, 328, 0, 1269, 0, 0, 0, 1311, 1275,
	0, 0, 329, 0, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 1324, 0, 340, 1331,
	341, 1330, 0, 1341, 342, 343, 344, 345, 346, 347,
	348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350,
	351, 1317, 0, 1298, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1352, 377, 378, 379, 1301,
	1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383,
	384, 1334, 385, 387, 1328, 1327, 1247, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1319, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1253, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1342,
	1343, 421, 1266, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1326, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1353, 431, 432, 433, 1339,
	1340, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1349, 0, 1276, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1312, 1313, 1316, 545, 1355, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1354, 759, 463, 546,
	464, 1321, 1322, 0, 1282, 0, 465, 466, 468, 1356,
	1314, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1350, 482, 1359, 484, 485, 1360, 0,
	486, 487, 488, 489, 490, 491, 494, 1305, 1304, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1244, 318, 1363, 540, 541, 542, 543, 1267, 1315, 544,
	1329, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1364, 557,
	1365, 1344, 558, 559, 1254, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1345, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1325, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 1255, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1308, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	1323, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1370, 672, 673, 674, 675,
	1346, 679, 680, 681, 682, 0, 683, 684, 1241, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1335, 1336, 1337, 1338, 0, 705, 0,
	694, 696, 697, 698, 699, 1347, 700, 1348, 1265, 701,
	702, 703, 704, 695, 706, 707, 0, 1248, 708, 709,
	711, 713, 714, 710, 712, 715, 1309, 716, 0, 0,
	717, 718, 719, 785, 1332, 1369, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1245,
	0, 0, 0, 0, 3047, 0, 1287, 1259, 1260, 1261,
	1257, 1258, 1270, 0, 1240, 0, 0, 0, 0, 0,
	0, 1238, 1239, 319, 320, 322, 321, 323, 324, 325,
	326, 1271, 327, 328, 0, 1269, 0, 0, 0, 1311,
	1275, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 1324, 0, 340,
	1331, 341, 1330, 0, 1341, 342, 343, 344, 345, 346,
	347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0,
	350, 351, 1317, 0, 1298, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382,
	383, 384, 1334, 385, 387, 1328, 1327, 1247, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1319, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1253, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1342, 1343, 421, 1266, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1326, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	1339, 1340, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1349, 0, 1276, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1312, 1313, 1316, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 1321, 1322, 0, 1282, 0, 465, 466, 468,
	1356, 1314, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1350, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 1305, 1304,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 1244, 318, 1363, 540, 541, 542, 543, 1267, 1315,
	544, 1329, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 1344, 558, 559, 1254, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1345, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1325, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 1255,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1308, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 1323, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1370, 672, 673, 674,
	675, 1346, 679, 680, 681, 682, 0, 683, 684, 1241,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1335, 1336, 1337, 1338, 0, 705,
	0, 694, 696, 697, 698, 699, 1347, 700, 1348, 1265,
	701, 702, 703, 704, 695, 706, 707, 0, 1248, 708,
	709, 711, 713, 714, 710, 712, 715, 1309, 716, 0,
	0, 717, 718, 719, 785, 1332, 1369, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1245, 0, 0, 0, 0, 3036, 0, 1287, 1259, 1260,
	1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0, 0,
	0, 0, 1238, 1239, 319, 320, 322, 321, 323, 324,
	325, 326, 1271, 327, 328, 0, 1269, 0, 0, 0,
	1311, 1275, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 1324, 0,
	340, 1331, 341, 1330, 0, 1341, 342, 343, 344, 345,
	346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744,
	0, 350, 351, 1317, 0, 1298, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381,
	382, 383, 384, 1334, 385, 387, 1328, 1327, 1247, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1319, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1253, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1342, 1343, 421, 1266, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1326, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 1339, 1340, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1349, 0, 1276, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1312, 1313, 1316, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 1321, 1322, 0, 1282, 0, 465, 466,
	468, 1356, 1314, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1350, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 1305,
	1304, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1244, 318, 1363, 540, 541, 542, 543, 1267,
	1315, 544, 1329, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 1344, 558, 559, 1254, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1345, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1325, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	1255, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1308, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 1323, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1370, 672, 673,
	674, 675, 1346, 679, 680, 681, 682, 0, 683, 684,
	1241, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1335, 1336, 1337, 1338, 0,
	705, 0, 694, 696, 697, 698, 699, 1347, 700, 1348,
	1265, 701, 702, 703, 704, 695, 706, 707, 0, 1248,
	708, 709, 711, 713, 714, 710, 712, 715, 1309, 716,
	0, 0, 717, 718, 719, 785, 1332, 1369, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1245, 0, 0, 0, 0, 3034, 0, 3025, 3032,
	1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0,
	0, 0, 0, 1238, 1239, 319, 320, 322, 321, 323,
	324, 325, 326, 1271, 327, 328, 0, 1269, 0, 0,
	0, 1311, 1275, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 1324,
	0, 340, 1331, 341, 1330, 0, 1341, 342, 343, 344,
	345, 346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372,
	744, 0, 350, 351, 1317, 0, 1298, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380,
	381, 382, 383, 384, 1334, 3028, 387, 1328, 1327, 1247,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1319, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1253,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1342, 1343, 421, 1266, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1326, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 1339, 1340, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1349, 0, 1276, 444, 0,
	445, 446, 447, 448, 449, 3029, 451, 1312, 1313, 1316,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 1321, 1322, 0, 1282, 0, 465,
	466, 468, 1356, 1314, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1350, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	1305, 1304, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 3030, 504, 3027, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 1244, 318, 1363, 540, 541, 542, 543,
	1267, 1315, 544, 1329, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 1344, 558, 559, 1254, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1345,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1325, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 1255, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 3031, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1308, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 1323, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1370, 672,
	673, 674, 675, 1346, 679, 680, 681, 682, 0, 683,
	684, 1241, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1335, 1336, 1337, 1338,
	0, 705, 0, 694, 696, 697, 698, 699, 1347, 700,
	1348, 1265, 701, 702, 703, 704, 695, 706, 707, 0,
	1248, 708, 709, 711, 713, 714, 710, 712, 715, 1309,
	716, 0, 0, 717, 718, 719, 785, 1332, 1369, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	3026, 735, 1245, 0, 0, 0, 0, 3022, 0, 3025,
	3032, 1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0,
	0, 0, 0, 0, 1238, 1239, 319, 320, 322, 321,
	323, 324, 325, 326, 1271, 327, 328, 0, 1269, 0,
	0, 0, 1311, 1275, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	1324, 0, 340, 1331, 341, 1330, 0, 1341, 342, 343,
	344, 345, 346, 347, 348, 1277, 1310, 1242, 349, 1371,
	1372, 744, 0, 350, 351, 1317, 0, 1298, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306,
	380, 381, 382, 383, 384, 1334, 3028, 387, 1328, 1327,
	1247, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1319, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1253, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1342, 1343, 421, 1266, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1326, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 1339, 1340, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1349, 0, 1276, 444,
	0, 445, 446, 447, 448, 449, 3029, 451, 1312, 1313,
	1316, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 1321, 1322, 0, 1282, 0,
	465, 466, 468, 1356, 1314, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1350, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 1305, 1304, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 3030, 504, 3027, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 1244, 318, 1363, 540, 541, 542,
	543, 1267, 1315, 544, 1329, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 1344, 558, 559, 1254, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1345, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1325, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 1255, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 3031, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1308, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 1323, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1370,
	672, 673, 674, 675, 1346, 679, 680, 681, 682, 0,
	683, 684, 1241, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1335, 1336, 1337,
	1338, 0, 705, 0, 694, 696, 697, 698, 699, 1347,
	700, 1348, 1265, 701, 702, 703, 704, 695, 706, 707,
	0, 1248, 708, 709, 711, 713, 714, 710, 712, 715,
	1309, 716, 0, 0, 717, 718, 719, 785, 1332, 1369,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 3026, 735, 1245, 0, 0, 0, 0, 0, 0,
	1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 1240, 0,
	0, 0, 0, 0, 0, 1238, 1239, 319, 320, 322,
	321, 323, 324, 325, 326, 1271, 327, 328, 0, 1269,
	0, 0, 0, 1311, 1275, 0, 0, 329, 0, 330,
	331, 332, 1351, 333, 334, 335, 336, 337, 338, 339,
	737, 1324, 0, 340, 1331, 341, 1330, 0, 1341, 342,
	343, 344, 345, 346, 347, 348, 1277, 1310, 1242, 349,
	1371, 1372, 744, 0, 350, 351, 1317, 0, 1298, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302,
	1306, 380, 381, 382, 383, 384, 1334, 385, 387, 1328,
	1327, 1247, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1319, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1253, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1342, 1343, 421, 1266, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1326, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1353, 431, 432, 433, 1339, 1340, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1349, 0, 1276,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1312,
	1313, 1316, 545, 1355, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1354, 759, 463, 546, 464, 1321, 1322, 0, 1282,
	0, 465, 466, 468, 1356, 1314, 1357, 467, 469, 470,
	1358, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1350, 482,
	1359, 484, 485, 1360, 0, 486, 487, 488, 489, 490,
	491, 494, 1305, 1304, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1361, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1362, 538, 526, 1244, 318, 1363, 540, 541,
	542, 543, 1267, 1315, 544, 1329, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1364, 557, 1365, 1344, 558, 559, 1254,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1345, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1325,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1366, 620, 621,
	622, 623, 624, 1255, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1308,
	651, 775, 652, 632, 633, 653, 654, 1367, 655, 656,
	657, 658, 659, 660, 661, 1323, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1370, 672, 673, 674, 675, 1346, 679, 680, 681, 682,
	0, 683, 684, 1241, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1335, 1336,
	1337, 1338, 0, 705, 0, 694, 696, 697, 698, 699,
	1347, 700, 1348, 1265, 701, 702, 703, 704, 695, 706,
	707, 0, 1248, 708, 709, 711, 713, 714, 710, 712,
	715, 1309, 716, 0, 0, 717, 718, 719, 785, 1332,
	1369, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1240,
	0, 0, 0, 0, 0, 0, 1238, 1239, 0, 0,
	0, 0, 0, 0, 2107, 0, 1271, 0, 0, 0,
	1269, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 2775, 327, 328, 0,
	0, 0, 0, 0, 1311, 1275, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 1324, 0, 340, 1331, 341, 1330, 0, 1341,
	342, 343, 344, 345, 346, 347, 348, 1277, 1310, 1242,
	349, 1371, 1372, 744, 0, 350, 351, 1317, 0, 1298,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303,
	1302, 1306, 380, 381, 382, 383, 384, 1334, 385, 387,
	1328, 1327, 1247, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1319,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1253, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1342, 1343, 421, 1266, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1326, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 1339, 1340, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1349, 0,
	1276, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1312, 1313, 1316, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 1321, 1322, 0,
	1282, 0, 465, 466, 468, 1356, 1314, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1350,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 1305, 1304, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1244, 318, 1363, 540,
	541, 542, 543, 1267, 1315, 544, 1329, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 1344, 558, 559,
	1254, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1345, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1325, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 1255, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1308, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 1323, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1370, 672, 673, 674, 675, 1346, 679, 680, 681,
	682, 0, 683, 684, 1241, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1335,
	1336, 1337, 1338, 0, 705, 0, 694, 696, 697, 698,
	699, 1347, 700, 1348, 1265, 701, 702, 703, 704, 695,
	706, 707, 0, 1248, 708, 709, 711, 713, 714, 710,
	712, 715, 1309, 716, 0, 0, 717, 718, 719, 785,
	1332, 1369, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1245, 0, 0, 0, 0,
	2735, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0,
	1240, 0, 0, 0, 0, 0, 0, 1238, 1239, 319,
	320, 322, 321, 323, 324, 325, 326, 1271, 327, 328,
	0, 1269, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 0,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	1242, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 1247, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 1244, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 1241, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 0, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 1248, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1245, 0, 0, 0,
	0, 2704, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 1240, 0, 0, 0, 0, 0, 0, 1238, 1239,
	319, 320, 322, 321, 323, 324, 325, 326, 1271, 327,
	328, 0, 1269, 0, 0, 0, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 1277,
	1310, 1242, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 1247, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1253, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1244, 318,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 1254, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 1255, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 1241, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 1248, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1245, 0, 0,
	0, 0, 1938, 0, 1287, 1259, 1260, 1261, 1257, 1258,
	1270, 0, 1240, 0, 0, 0, 0, 0, 0, 1238,
	1239, 319, 320, 322, 321, 323, 324, 325, 326, 1271,
	327, 328, 0, 1269, 0, 0, 0, 1311, 1275, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 1324, 0, 340, 1331, 341,
	1330, 0, 1341, 342, 343, 344, 345, 346, 347, 348,
	1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350, 351,
	1317, 0, 1298, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 1301, 1299,
	1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383, 384,
	1334, 385, 387, 1328, 1327, 1247, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1253, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1342, 1343,
	421, 1266, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1326, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 1339, 1340,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1349, 0, 1276, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1312, 1313, 1316, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	1321, 1322, 0, 1282, 0, 465, 466, 468, 1356, 1314,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1350, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 1305, 1304, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 1244,
	318, 1363, 540, 541, 542, 543, 1267, 1315, 544, 1329,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	1344, 558, 559, 1254, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1345, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1325, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 1255, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1308, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 1323,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1370, 672, 673, 674, 675, 1346,
	679, 680, 681, 682, 0, 683, 684, 1241, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1335, 1336, 1337, 1338, 0, 705, 0, 694,
	696, 697, 698, 699, 1347, 700, 1348, 1265, 701, 702,
	703, 704, 695, 706, 707, 0, 1248, 708, 709, 711,
	713, 714, 710, 712, 715, 1309, 716, 0, 0, 717,
	718, 719, 785, 1332, 1369, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1245, 0,
	0, 0, 0, 1864, 0, 1287, 1259, 1260, 1261, 1257,
	1258, 1270, 0, 1240, 0, 0, 0, 0, 0, 0,
	1238, 1239, 319, 320, 322, 321, 323, 324, 325, 326,
	1271, 327, 328, 0, 1269, 0, 0, 0, 1311, 1275,
	0, 0, 329, 0, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 1324, 0, 340, 1331,
	341, 1330, 0, 1341, 342, 343, 344, 345, 346, 347,
	348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350,
	351, 1317, 0, 1298, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1352, 377, 378, 379, 1301,
	1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383,
	384, 1334, 385, 387, 1328, 1327, 1247, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1319, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1253, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1342,
	1343, 421, 1266, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1326, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1353, 431, 432, 433, 1339,
	1340, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1349, 0, 1276, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1312, 1313, 1316, 545, 1355, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1354, 759, 463, 546,
	464, 1321, 1322, 0, 1282, 0, 465, 466, 468, 1356,
	1314, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1350, 482, 1359, 484, 485, 1360, 0,
	486, 487, 488, 489, 490, 491, 494, 1305, 1304, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1244, 318, 1363, 540, 541, 542, 543, 1267, 1315, 544,
	1329, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1364, 557,
	1365, 1344, 558, 559, 1254, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1345, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1325, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 1255, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1308, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	1323, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1370, 672, 673, 674, 675,
	1346, 679, 680, 681, 682, 0, 683, 684, 1241, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1335, 1336, 1337, 1338, 0, 705, 0,
	694, 696, 697, 698, 699, 1347, 700, 1348, 1265, 701,
	702, 703, 704, 695, 706, 707, 0, 1248, 708, 709,
	711, 713, 714, 710, 712, 715, 1309, 716, 0, 0,
	717, 718, 719, 785, 1332, 1369, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1245,
	0, 0, 0, 0, 1859, 0, 1287, 1259, 1260, 1261,
	1257, 1258, 1270, 0, 1240, 0, 0, 0, 0, 0,
	0, 1238, 1239, 319, 320, 322, 321, 323, 324, 325,
	326, 1271, 327, 328, 0, 1269, 0, 0, 0, 1311,
	1275, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 1324, 0, 340,
	1331, 341, 1330, 0, 1341, 342, 343, 344, 345, 346,
	347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0,
	350, 351, 1317, 0, 1298, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382,
	383, 384, 1334, 385, 387, 1328, 1327, 1247, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1319, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1253, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1342, 1343, 421, 1266, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1326, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	1339, 1340, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1349, 0, 1276, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1312, 1313, 1316, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 1321, 1322, 0, 1282, 0, 465, 466, 468,
	1356, 1314, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1350, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 1305, 1304,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 1244, 318, 1363, 540, 541, 542, 543, 1267, 1315,
	544, 1329, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 1344, 558, 559, 1254, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1345, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1325, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 1255,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1308, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 1323, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1370, 672, 673, 674,
	675, 1346, 679, 680, 681, 682, 0, 683, 684, 1241,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1335, 1336, 1337, 1338, 0, 705,
	0, 694, 696, 697, 698, 699, 1347, 700, 1348, 1265,
	701, 702, 703, 704, 695, 706, 707, 0, 1248, 708,
	709, 711, 713, 714, 710, 712, 715, 1309, 716, 0,
	0, 717, 718, 719, 785, 1332, 1369, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1245, 0, 0, 0, 0, 1845, 0, 1287, 1259, 1260,
	1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0, 0,
	0, 0, 1238, 1239, 319, 320, 322, 321, 323, 324,
	325, 326, 1271, 327, 328, 0, 1269, 0, 0, 0,
	1311, 1275, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 1324, 0,
	340, 1331, 341, 1330, 0, 1341, 342, 343, 344, 345,
	346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744,
	0, 350, 351, 1317, 0, 1298, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381,
	382, 383, 384, 1334, 385, 387, 1328, 1327, 1247, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1319, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1253, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1342, 1343, 421, 1266, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1326, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 1339, 1340, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1349, 0, 1276, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1312, 1313, 1316, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 1321, 1322, 0, 1282, 0, 465, 466,
	468, 1356, 1314, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1350, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 1305,
	1304, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1244, 318, 1363, 540, 541, 542, 543, 1267,
	1315, 544, 1329, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 1344, 558, 559, 1254, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1345, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1325, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	1255, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1308, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 1323, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1370, 672, 673,
	674, 675, 1346, 679, 680, 681, 682, 0, 683, 684,
	1241, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1335, 1336, 1337, 1338, 0,
	705, 0, 694, 696, 697, 698, 699, 1347, 700, 1348,
	1265, 701, 702, 703, 704, 695, 706, 707, 0, 1248,
	708, 709, 711, 713, 714, 710, 712, 715, 1309, 716,
	0, 0, 717, 718, 719, 785, 1332, 1369, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1245, 0, 0, 0, 0, 1840, 0, 1287, 1259,
	1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0,
	0, 0, 0, 1238, 1239, 319, 320, 322, 321, 323,
	324, 325, 326, 1271, 327, 328, 0, 1269, 0, 0,
	0, 1311, 1275, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 1324,
	0, 340, 1331, 341, 1330, 0, 1341, 342, 343, 344,
	345, 346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372,
	744, 0, 350, 351, 1317, 0, 1298, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380,
	381, 382, 383, 384, 1334, 385, 387, 1328, 1327, 1247,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1319, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1253,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1342, 1343, 421, 1266, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1326, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 1339, 1340, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1349, 0, 1276, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1312, 1313, 1316,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 1321, 1322, 0, 1282, 0, 465,
	466, 468, 1356, 1314, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1350, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	1305, 1304, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 1244, 318, 1363, 540, 541, 542, 543,
	1267, 1315, 544, 1329, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 1344, 558, 559, 1254, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1345,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1325, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 1255, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1308, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 1323, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1370, 672,
	673, 674, 675, 1346, 679, 680, 681, 682, 0, 683,
	684, 1241, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1335, 1336, 1337, 1338,
	0, 705, 0, 694, 696, 697, 698, 699, 1347, 700,
	1348, 1265, 701, 702, 703, 704, 695, 706, 707, 0,
	1248, 708, 709, 711, 713, 714, 710, 712, 715, 1309,
	716, 0, 0, 717, 718, 719, 785, 1332, 1369, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1245, 0, 0, 0, 0, 1746, 0, 1287,
	1259, 1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0,
	0, 0, 0, 0, 1238, 1239, 319, 320, 322, 321,
	323, 324, 325, 326, 1271, 327, 328, 0, 1269, 0,
	0, 0, 1311, 1275, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	1324, 0, 340, 1331, 341, 1330, 0, 1341, 342, 343,
	344, 345, 346, 347, 348, 1277, 1310, 1242, 349, 1371,
	1372, 744, 0, 350, 351, 1317, 0, 1298, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306,
	380, 381, 382, 383, 384, 1334, 385, 387, 1328, 1327,
	1247, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1319, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1253, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1342, 1343, 421, 1266, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1326, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 1339, 1340, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1349, 0, 1276, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1745, 1313,
	1316, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 1321, 1322, 0, 1282, 0,
	465, 466, 468, 1356, 1314, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1350, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 1305, 1304, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 1244, 318, 1363, 540, 541, 542,
	543, 1267, 1315, 544, 1329, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 1344, 558, 559, 1254, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1345, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1325, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 1255, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1308, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 1323, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1370,
	672, 673, 674, 675, 1346, 679, 680, 681, 682, 0,
	683, 684, 1241, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1335, 1336, 1337,
	1338, 0, 705, 0, 694, 696, 697, 698, 699, 1347,
	700, 1348, 1265, 701, 702, 703, 704, 695, 706, 707,
	0, 1248, 708, 709, 711, 713, 714, 710, 712, 715,
	1309, 716, 0, 0, 717, 718, 719, 785, 1332, 1369,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1245, 0, 0, 0, 0, 1740, 0,
	1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 1240, 0,
	0, 0, 0, 0, 0, 1238, 1239, 319, 320, 322,
	321, 323, 324, 325, 326, 1271, 327, 328, 0, 1269,
	0, 0, 0, 1311, 1275, 0, 0, 329, 0, 330,
	331, 332, 1351, 333, 334, 335, 336, 337, 338, 339,
	737, 1324, 0, 340, 1331, 341, 1330, 0, 1341, 342,
	343, 344, 345, 346, 347, 348, 1277, 1310, 1242, 349,
	1371, 1372, 744, 0, 350, 351, 1317, 0, 1298, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302,
	1306, 380, 381, 382, 383, 384, 1334, 385, 387, 1328,
	1327, 1247, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1319, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1253, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1342, 1343, 421, 1266, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1326, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1353, 431, 432, 433, 1339, 1340, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1349, 0, 1276,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1739,
	1313, 1316, 545, 1355, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1354, 759, 463, 546, 464, 1321, 1322, 0, 1282,
	0, 465, 466, 468, 1356, 1314, 1357, 467, 469, 470,
	1358, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1350, 482,
	1359, 484, 485, 1360, 0, 486, 487, 488, 489, 490,
	491, 494, 1305, 1304, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1361, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1362, 538, 526, 1244, 318, 1363, 540, 541,
	542, 543, 1267, 1315, 544, 1329, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1364, 557, 1365, 1344, 558, 559, 1254,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1345, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1325,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1366, 620, 621,
	622, 623, 624, 1255, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1308,
	651, 775, 652, 632, 633, 653, 654, 1367, 655, 656,
	657, 658, 659, 660, 661, 1323, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1370, 672, 673, 674, 675, 1346, 679, 680, 681, 682,
	0, 683, 684, 1241, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1335, 1336,
	1337, 1338, 0, 705, 0, 694, 696, 697, 698, 699,
	1347, 700, 1348, 1265, 701, 702, 703, 704, 695, 706,
	707, 0, 1248, 708, 709, 711, 713, 714, 710, 712,
	715, 1309, 716, 0, 0, 717, 718, 719, 785, 1332,
	1369, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1245, 0, 0, 0, 0, 1733,
	0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 1240,
	0, 0, 0, 0, 0, 0, 1238, 1239, 319, 320,
	322, 321, 323, 324, 325, 326, 1271, 327, 328, 0,
	1269, 0, 0, 0, 1311, 1275, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 1324, 0, 340, 1331, 341, 1330, 0, 1341,
	342, 343, 344, 345, 346, 347, 348, 1277, 1310, 1242,
	349, 1371, 1372, 744, 0, 350, 351, 1317, 0, 1298,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303,
	1302, 1306, 380, 381, 382, 383, 384, 1334, 385, 387,
	1328, 1327, 1247, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1319,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1253, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1342, 1343, 421, 1266, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1326, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 1339, 1340, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1349, 0,
	1276, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1312, 1313, 1316, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 1321, 1322, 0,
	1282, 0, 465, 466, 468, 1356, 1314, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1350,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 1305, 1304, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1244, 318, 1363, 540,
	541, 542, 543, 1267, 1315, 544, 1329, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 1344, 558, 559,
	1254, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1345, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1325, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 1255, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1308, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 1323, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1370, 672, 673, 674, 675, 1346, 679, 680, 681,
	682, 0, 683, 684, 1241, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1335,
	1336, 1337, 1338, 0, 705, 0, 694, 696, 697, 698,
	699, 1347, 700, 1348, 1265, 701, 702, 703, 704, 695,
	706, 707, 0, 1248, 708, 709, 711, 713, 714, 710,
	712, 715, 1309, 716, 0, 0, 717, 718, 719, 785,
	1332, 1369, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1245, 0, 0, 0, 0,
	1706, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0,
	1240, 0, 0, 0, 0, 0, 0, 1238, 1239, 319,
	320, 322, 321, 323, 324, 325, 326, 1271, 327, 328,
	0, 1269, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 0,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	1242, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 1247, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 1244, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 1241, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 0, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 1248, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1245, 0, 0, 0,
	0, 1677, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 1240, 0, 0, 0, 0, 0, 0, 1238, 1239,
	319, 320, 322, 321, 323, 324, 325, 326, 1271, 327,
	328, 0, 1269, 0, 0, 0, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 1277,
	1310, 1242, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 1247, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1253, 409, 410, 411, 413, 415,
	412, 1681, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 1244, 318,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 1254, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 1682, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 1255, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 1241, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 1680, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 1248, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1245, 0, 0,
	0, 0, 1507, 0, 1287, 1259, 1260, 1261, 1257, 1258,
	1270, 0, 1240, 0, 0, 0, 0, 0, 0, 1238,
	1239, 319, 320, 322, 321, 323, 324, 325, 326, 1271,
	327, 328, 0, 1269, 0, 0, 0, 1311, 1275, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 1324, 0, 340, 1331, 341,
	1330, 0, 1341, 342, 343, 344, 345, 346, 347, 348,
	1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350, 351,
	1317, 0, 1298, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 1301, 1299,
	1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383, 384,
	1334, 385, 387, 1328, 1327, 1247, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1253, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1342, 1343,
	421, 1266, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1326, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 1339, 1340,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1349, 0, 1276, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1312, 1313, 1316, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	1321, 1322, 0, 1282, 0, 465, 466, 468, 1356, 1314,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1350, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 1305, 1304, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 1244,
	318, 1363, 540, 541, 542, 543, 1267, 1315, 544, 1329,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	1344, 558, 559, 1254, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1345, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1325, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 1255, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1308, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 1323,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1370, 672, 673, 674, 675, 1346,
	679, 680, 681, 682, 0, 683, 684, 1241, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1335, 1336, 1337, 1338, 0, 705, 0, 694,
	696, 697, 698, 699, 1347, 700, 1348, 1265, 701, 702,
	703, 704, 695, 706, 707, 0, 1248, 708, 709, 711,
	713, 714, 710, 712, 715, 1309, 716, 0, 0, 717,
	718, 719, 785, 1332, 1369, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1245, 0,
	0, 0, 0, 0, 0, 1287, 1259, 1260, 1261, 1257,
	1258, 1270, 0, 1240, 0, 0, 0, 0, 0, 0,
	1238, 1239, 319, 320, 322, 321, 323, 324, 325, 326,
	1271, 327, 328, 0, 1269, 0, 0, 0, 1311, 1275,
	0, 0, 329, 0, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 1324, 0, 340, 1331,
	341, 1330, 0, 1341, 342, 343, 344, 345, 346, 347,
	348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350,
	351, 1317, 0, 1298, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1352, 377, 378, 379, 1301,
	1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383,
	384, 1334, 385, 387, 1328, 1327, 1247, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1319, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1253, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1342,
	1343, 421, 1266, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1326, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1353, 431, 432, 433, 1339,
	1340, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1349, 0, 1276, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1312, 1313, 1316, 545, 1355, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1354, 759, 463, 546,
	464, 1321, 1322, 0, 1282, 0, 465, 466, 468, 1356,
	1314, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1350, 482, 1359, 484, 485, 1360, 0,
	486, 487, 488, 489, 490, 491, 494, 1305, 1304, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	1244, 318, 1363, 540, 541, 542, 543, 1267, 1315, 544,
	1329, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1364, 557,
	1365, 1344, 558, 559, 1254, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1345, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1325, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 1255, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1308, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	1323, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1370, 672, 673, 674, 675,
	1346, 679, 680, 681, 682, 0, 683, 684, 1241, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1335, 1336, 1337, 1338, 0, 705, 0,
	694, 696, 697, 698, 699, 1347, 700, 1348, 1265, 701,
	702, 703, 704, 695, 706, 707, 0, 1248, 708, 709,
	711, 713, 714, 710, 712, 715, 1309, 716, 0, 0,
	717, 718, 719, 785, 1332, 1369, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1245,
	0, 0, 0, 0, 0, 0, 1287, 1259, 1260, 1261,
	1257, 1258, 1270, 0, 1240, 0, 0, 0, 0, 0,
	0, 1238, 1239, 319, 320, 322, 321, 323, 324, 325,
	326, 1271, 327, 328, 0, 1269, 0, 0, 0, 1311,
	1275, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 1324, 0, 340,
	1331, 341, 1330, 0, 1341, 342, 343, 344, 345, 346,
	347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744, 0,
	350, 351, 1317, 0, 1298, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 5457,
	1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382,
	383, 384, 1334, 385, 387, 1328, 1327, 1247, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1319, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1253, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1342, 1343, 421, 1266, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1326, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	1339, 1340, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1349, 0, 1276, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1312, 1313, 1316, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 1321, 1322, 0, 1282, 0, 465, 466, 468,
	1356, 1314, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1350, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 1305, 1304,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 1244, 318, 1363, 540, 541, 542, 543, 1267, 1315,
	544, 1329, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 1344, 558, 559, 1254, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1345, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1325, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 1255,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1308, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 1323, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1370, 672, 673, 674,
	675, 1346, 679, 680, 681, 682, 0, 683, 684, 1241,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1335, 1336, 1337, 1338, 0, 705,
	0, 694, 696, 697, 698, 699, 1347, 700, 1348, 1265,
	701, 702, 703, 704, 695, 5456, 707, 0, 1248, 708,
	709, 711, 713, 714, 710, 712, 715, 1309, 716, 0,
	0, 717, 718, 719, 785, 1332, 1369, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1245, 0, 0, 0, 0, 0, 0, 1287, 1259, 1260,
	1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0, 0,
	0, 0, 1238, 1239, 319, 320, 322, 321, 323, 324,
	325, 326, 1271, 327, 328, 0, 1269, 0, 0, 0,
	1311, 1275, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 5455, 1324, 0,
	340, 1331, 341, 1330, 0, 1341, 342, 343, 344, 345,
	346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372, 744,
	0, 350, 351, 1317, 0, 1298, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	5457, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381,
	382, 383, 384, 1334, 385, 387, 1328, 1327, 1247, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1319, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1253, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1342, 1343, 421, 1266, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1326, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 1339, 1340, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1349, 0, 1276, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1312, 1313, 1316, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 1321, 1322, 0, 1282, 0, 465, 466,
	468, 1356, 1314, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1350, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 1305,
	1304, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 1244, 318, 1363, 540, 541, 542, 543, 1267,
	1315, 544, 1329, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 1344, 558, 559, 1254, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1345, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1325, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	1255, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1308, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 1323, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1370, 672, 673,
	674, 675, 1346, 679, 680, 681, 682, 0, 683, 684,
	1241, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1335, 1336, 1337, 1338, 0,
	705, 0, 694, 696, 697, 698, 699, 1347, 700, 1348,
	1265, 701, 702, 703, 704, 695, 5456, 707, 0, 1248,
	708, 709, 711, 713, 714, 710, 712, 715, 1309, 716,
	0, 0, 717, 718, 719, 785, 1332, 1369, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1245, 0, 0, 0, 0, 0, 0, 1287, 1259,
	1260, 1261, 1257, 1258, 1270, 0, 1240, 0, 0, 0,
	0, 0, 0, 1238, 1239, 319, 320, 322, 321, 323,
	324, 325, 326, 1271, 327, 328, 0, 1269, 0, 0,
	0, 1311, 1275, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 1324,
	0, 340, 1331, 341, 1330, 0, 1341, 342, 343, 344,
	345, 346, 347, 348, 1277, 1310, 1242, 349, 1371, 1372,
	744, 0, 350, 351, 1317, 0, 1298, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	5030, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380,
	381, 382, 383, 384, 1334, 385, 387, 1328, 1327, 1247,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1319, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1253,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1342, 1343, 421, 1266, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1326, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 1339, 1340, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1349, 0, 5031, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1312, 1313, 1316,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 1321, 1322, 0, 1282, 0, 465,
	466, 468, 1356, 1314, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1350, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	1305, 1304, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 1244, 318, 1363, 540, 541, 542, 543,
	1267, 1315, 544, 1329, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 1344, 558, 559, 1254, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1345,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1325, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 5029,
	624, 1255, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1308, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 1323, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1370, 672,
	673, 674, 675, 1346, 679, 680, 681, 682, 0, 683,
	684, 1241, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1335, 1336, 1337, 1338,
	0, 705, 0, 694, 696, 697, 698, 699, 1347, 700,
	1348, 1265, 701, 702, 703, 704, 695, 706, 707, 0,
	1248, 708, 709, 711, 713, 714, 710, 712, 715, 1309,
	716, 0, 0, 717, 718, 719, 785, 1332, 1369, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1245, 0, 0, 0, 0, 0, 0, 1287,
	1259, 1260, 1261, 3640, 3641, 1270, 0, 1240, 0, 0,
	0, 0, 0, 0, 1238, 1239, 319, 320, 322, 321,
	323, 324, 325, 326, 1271, 327, 328, 0, 1269, 0,
	0, 0, 1311, 1275, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	1324, 0, 340, 1331, 341, 1330, 0, 1341, 342, 343,
	344, 345, 346, 347, 348, 1277, 1310, 1242, 349, 1371,
	1372, 744, 0, 350, 351, 1317, 0, 1298, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306,
	380, 381, 382, 383, 384, 1334, 385, 387, 1328, 1327,
	1247, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1319, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1253, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1342, 1343, 421, 1266, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1326, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 1339, 1340, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1349, 0, 1276, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1312, 1313,
	1316, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 1321, 1322, 0, 1282, 0,
	465, 466, 468, 1356, 1314, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1350, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 1305, 1304, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 1244, 318, 1363, 540, 541, 542,
	543, 1267, 1315, 544, 1329, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 1344, 558, 559, 1254, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1345, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1325, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 1255, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1308, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 1323, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1370,
	672, 673, 674, 675, 1346, 679, 680, 681, 682, 0,
	683, 684, 1241, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1335, 1336, 1337,
	1338, 0, 705, 0, 694, 696, 697, 698, 699, 1347,
	700, 1348, 1265, 701, 702, 703, 704, 695, 706, 707,
	0, 1248, 708, 709, 711, 713, 714, 710, 712, 715,
	1309, 716, 0, 0, 717, 718, 719, 785, 1332, 1369,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1245, 0, 0, 0, 0, 0, 0,
	1287, 1259, 1260, 1261, 3638, 3639, 1270, 0, 1240, 0,
	0, 0, 0, 0, 0, 1238, 1239, 319, 320, 322,
	321, 323, 324, 325, 326, 1271, 327, 328, 0, 1269,
	0, 0, 0, 1311, 1275, 0, 0, 329, 0, 330,
	331, 332, 1351, 333, 334, 335, 336, 337, 338, 339,
	737, 1324, 0, 340, 1331, 341, 1330, 0, 1341, 342,
	343, 344, 345, 346, 347, 348, 1277, 1310, 1242, 349,
	1371, 1372, 744, 0, 350, 351, 1317, 0, 1298, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302,
	1306, 380, 381, 382, 383, 384, 1334, 385, 387, 1328,
	1327, 1247, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1319, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1253, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1342, 1343, 421, 1266, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1326, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1353, 431, 432, 433, 1339, 1340, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1349, 0, 1276,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1312,
	1313, 1316, 545, 1355, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1354, 759, 463, 546, 464, 1321, 1322, 0, 1282,
	0, 465, 466, 468, 1356, 1314, 1357, 467, 469, 470,
	1358, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1350, 482,
	1359, 484, 485, 1360, 0, 486, 487, 488, 489, 490,
	491, 494, 1305, 1304, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1361, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1362, 538, 526, 1244, 318, 1363, 540, 541,
	542, 543, 1267, 1315, 544, 1329, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1364, 557, 1365, 1344, 558, 559, 1254,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1345, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1325,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1366, 620, 621,
	622, 623, 624, 1255, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1308,
	651, 775, 652, 632, 633, 653, 654, 1367, 655, 656,
	657, 658, 659, 660, 661, 1323, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1370, 672, 673, 674, 675, 1346, 679, 680, 681, 682,
	0, 683, 684, 1241, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1335, 1336,
	1337, 1338, 0, 705, 0, 694, 696, 697, 698, 699,
	1347, 700, 1348, 1265, 701, 702, 703, 704, 695, 706,
	707, 0, 1248, 708, 709, 711, 713, 714, 710, 712,
	715, 1309, 716, 0, 0, 717, 718, 719, 785, 1332,
	1369, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1245, 0, 0, 0, 0, 0,
	0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0, 1240,
	0, 0, 0, 0, 0, 0, 1238, 1239, 319, 320,
	322, 321, 323, 324, 325, 326, 1271, 327, 328, 0,
	1269, 0, 0, 0, 1311, 1275, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 1324, 0, 340, 1331, 341, 1330, 0, 1341,
	342, 343, 344, 345, 346, 347, 348, 1277, 1310, 1242,
	349, 1371, 1372, 744, 0, 350, 351, 1317, 0, 1298,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303,
	1302, 1306, 380, 381, 382, 383, 384, 1334, 385, 387,
	1328, 1327, 1247, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1319,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1253, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1342, 1343, 421, 1266, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1326, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 1339, 1340, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1349, 0,
	1276, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1312, 1313, 1316, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 1321, 1322, 0,
	1282, 0, 465, 466, 468, 1356, 1314, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1350,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 1305, 1304, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 1244, 318, 1363, 540,
	541, 542, 543, 1267, 1315, 544, 1329, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 1344, 558, 559,
	1254, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1345, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1325, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 1255, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1308, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 1323, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1370, 672, 673, 674, 675, 1346, 679, 680, 681,
	682, 0, 683, 684, 1241, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1335,
	1336, 1337, 1338, 0, 705, 0, 694, 696, 697, 698,
	699, 1347, 700, 1348, 1265, 701, 702, 703, 704, 695,
	706, 707, 0, 1248, 708, 709, 711, 713, 714, 710,
	712, 715, 1309, 716, 0, 0, 717, 718, 719, 785,
	1332, 1369, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1245, 0, 0, 0, 0,
	0, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270, 0,
	1240, 0, 0, 0, 0, 0, 0, 2783, 2784, 319,
	320, 322, 321, 323, 324, 325, 326, 1271, 327, 328,
	0, 1269, 0, 0, 0, 1311, 1275, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 1324, 0, 340, 1331, 341, 1330, 0,
	1341, 342, 343, 344, 345, 346, 347, 348, 1277, 1310,
	0, 349, 1371, 1372, 744, 0, 350, 351, 1317, 0,
	1298, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307,
	1303, 1302, 1306, 380, 381, 382, 383, 384, 1334, 385,
	387, 1328, 1327, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1253, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1342, 1343, 421, 1266,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1326,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 1339, 1340, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1349,
	0, 1276, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1312, 1313, 1316, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 1321, 1322,
	0, 1282, 0, 465, 466, 468, 1356, 1314, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1350, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 1305, 1304, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 0, 318, 1363,
	540, 541, 542, 543, 1267, 1315, 544, 1329, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 1344, 558,
	559, 1254, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1345, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1325, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 1255, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1308, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 1323, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1370, 672, 673, 674, 675, 1346, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1335, 1336, 1337, 1338, 0, 705, 0, 694, 696, 697,
	698, 699, 1347, 700, 1348, 1265, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 1309, 716, 0, 0, 717, 718, 719,
	785, 1332, 1369, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 3044, 0, 0, 0, 0, 0, 0, 3042, 3043,
	319, 320, 322, 321, 323, 324, 325, 326, 1271, 327,
	328, 0, 1269, 0, 0, 0, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 1277,
	1310, 0, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1253, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 0, 318,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 3633, 3634, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 0, 0, 0,
	0, 0, 0, 0, 1287, 1259, 1260, 1261, 1257, 1258,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 2371,
	2372, 319, 320, 322, 321, 323, 324, 325, 326, 1271,
	327, 328, 0, 1269, 0, 0, 0, 1311, 1275, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 0, 1324, 0, 340, 1331, 341,
	1330, 0, 1341, 342, 343, 344, 345, 346, 347, 348,
	1277, 1310, 1242, 349, 1371, 1372, 744, 0, 350, 351,
	1317, 0, 1298, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 5457, 1301, 1299,
	1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383, 384,
	1334, 385, 387, 1328, 1327, 1247, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1253, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1342, 1343,
	421, 1266, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1326, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 1339, 1340,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1349, 0, 1276, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1312, 1313, 1316, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	1321, 1322, 0, 1282, 0, 465, 466, 468, 0, 1314,
	0, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1350, 482, 1359, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 1305, 1304, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 1244,
	318, 0, 540, 541, 542, 543, 1267, 1315, 544, 1329,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	1344, 558, 559, 1254, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1345, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1325, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 1255, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1308, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 1323,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1370, 672, 673, 674, 675, 1346,
	679, 680, 681, 682, 0, 683, 684, 1241, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1335, 1336, 1337, 1338, 0, 705, 0, 694,
	696, 697, 698, 699, 1347, 700, 1348, 1265, 701, 702,
	703, 704, 695, 5456, 707, 0, 1248, 708, 709, 711,
	713, 714, 710, 712, 715, 1309, 716, 0, 0, 717,
	718, 719, 785, 1332, 1369, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 3063, 0, 1287, 1259, 1260, 1261, 1257,
	1258, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 1239, 319, 320, 322, 321, 323, 324, 325, 326,
	1271, 327, 328, 0, 1269, 0, 0, 0, 1311, 1275,
	0, 0, 329, 0, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 1324, 0, 340, 1331,
	341, 1330, 0, 1341, 342, 343, 344, 345, 346, 347,
	348, 0, 1310, 0, 349, 1371, 1372, 744, 0, 350,
	351, 1317, 0, 1298, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1352, 377, 378, 379, 1301,
	1299, 1300, 1307, 1303, 1302, 1306, 380, 381, 382, 383,
	384, 1334, 385, 387, 1328, 1327, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1319, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1342,
	1343, 421, 1266, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1326, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1353, 431, 432, 433, 1339,
	1340, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1349, 0, 1276, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1312, 1313, 1316, 545, 1355, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1354, 759, 463, 546,
	464, 1321, 1322, 0, 1282, 0, 465, 466, 468, 1356,
	1314, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1350, 482, 1359, 484, 485, 1360, 0,
	486, 487, 488, 489, 490, 491, 494, 1305, 1304, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	0, 318, 1363, 540, 541, 542, 543, 1267, 1315, 544,
	1329, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1364, 557,
	1365, 1344, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1345, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1325, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 1255, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1308, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	1323, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1370, 672, 673, 674, 675,
	1346, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1335, 1336, 1337, 1338, 0, 705, 0,
	694, 696, 697, 698, 699, 1347, 700, 1348, 1265, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 1309, 716, 0, 0,
	717, 718, 719, 785, 1332, 1369, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 0,
	0, 1708, 0, 1287, 1259, 1260, 1261, 1257, 1258, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 1271, 0, 0, 0, 1269, 1311, 1275, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 1324, 0, 340, 1331, 341, 1330,
	0, 1341, 342, 343, 344, 345, 346, 347, 348, 0,
	1310, 0, 349, 1371, 1372, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 1334,
	385, 387, 1328, 1327, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1319, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	1266, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1326, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 1339, 1340, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 1276, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 1321,
	1322, 0, 1282, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 0, 318,
	1363, 540, 541, 542, 543, 1267, 1315, 544, 1329, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1325, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 1255, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 1323, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1370, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1335, 1336, 1337, 1338, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 1265, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 1332, 1369, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1229, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 0, 0, 1271,
	0, 0, 1311, 1269, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 0, 741, 342, 343,
	344, 345, 346, 347, 348, 0, 1310, 0, 349, 742,
	743, 744, 0, 350, 351, 1317, 0, 1298, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1342, 1343, 421, 0, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1349, 0, 755, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1312, 1313,
	1316, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 760, 761, 0, 762, 0,
	465, 466, 468, 1356, 1314, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 1396, 479, 481, 480, 0, 483, 1350, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 1305, 1304, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 0, 318, 1363, 540, 541, 542,
	543, 0, 1315, 544, 766, 547, 548, 0, 0, 549,
	0, 550, 0, 1402, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 1344, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1345, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 774, 1404, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 272, 646, 647, 645, 648, 649, 650, 1308, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 1346, 679, 680, 681, 682, 0,
	683, 684, 0, 678, 669, 274, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 779, 780, 781,
	782, 0, 705, 0, 694, 696, 697, 698, 699, 1347,
	700, 1348, 0, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	1309, 716, 0, 0, 717, 718, 719, 1829, 786, 787,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 266, 731, 732, 789,
	733, 734, 735, 1410, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 1400, 0, 2196, 1311, 0, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	1310, 0, 349, 742, 743, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1396, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 0, 318,
	1363, 540, 541, 542, 543, 0, 1315, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 1402, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 1404, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 272, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 274,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 1829, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	266, 731, 732, 789, 733, 734, 735, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3800, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1400, 0, 2196,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	1310, 0, 349, 742, 743, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1396, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 0, 318,
	1363, 540, 541, 542, 543, 0, 1315, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 1402, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 1404, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1392, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 1400, 0, 1398,
	0, 0, 1311, 0, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 0, 741, 342, 343,
	344, 345, 346, 347, 348, 0, 1310, 0, 349, 742,
	743, 744, 0, 350, 351, 1317, 0, 1298, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1342, 1343, 421, 0, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1349, 0, 755, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1312, 1313,
	1316, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 760, 761, 0, 762, 0,
	465, 466, 468, 1356, 1314, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 1396, 479, 481, 480, 0, 483, 1350, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 1305, 1304, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 0, 318, 1363, 540, 541, 542,
	543, 0, 1315, 544, 766, 547, 548, 0, 0, 549,
	0, 550, 0, 1402, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 1344, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1345, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 774, 1404, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1308, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 1346, 679, 680, 681, 682, 0,
	683, 684, 0, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 779, 780, 781,
	782, 0, 705, 0, 694, 696, 697, 698, 699, 1347,
	700, 1348, 0, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	1309, 716, 0, 0, 717, 718, 719, 785, 786, 787,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 1400, 0, 1398, 1311, 0, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	1310, 0, 349, 742, 743, 744, 0, 350, 351, 1317,
	0, 1298, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 1301, 1299, 1300,
	1307, 1303, 1302, 1306, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1342, 1343, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1349, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1312, 1313, 1316, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1356, 1314, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1396, 479, 481, 480, 0,
	483, 1350, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 1305, 1304, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 0, 318,
	1363, 540, 541, 542, 543, 0, 1315, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 1402, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 1344,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1345, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 1404, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1308, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 1346, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 1347, 700, 1348, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1309, 716, 0, 0, 717, 718,
	719, 785, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 1400, 0, 1398,
	1311, 0, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 1310, 0, 349, 742, 743, 744,
	0, 350, 351, 1317, 0, 1298, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1342, 1343, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1349, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1312, 1313, 1316, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1356, 1314, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1350, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 1305,
	1304, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 0, 318, 1363, 540, 541, 542, 543, 0,
	1315, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 1344, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1345, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1308, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 1346, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 1347, 700, 1348,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 1309, 716,
	0, 0, 717, 718, 719, 785, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 4829, 1311, 0, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 1310, 0,
	349, 742, 743, 744, 0, 350, 351, 1317, 0, 1298,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 1301, 1299, 1300, 1307, 1303,
	1302, 1306, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1342, 1343, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1349, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1312, 1313, 1316, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 1356, 1314, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1350,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 1305, 1304, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 0, 318, 1363, 540,
	541, 542, 543, 0, 1315, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 1344, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1345, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 774, 1404, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1308, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 1346, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 1347, 700, 1348, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 1309, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 313, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 2889, 2890, 2891, 2908, 2909,
	2910, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 2911, 0, 736, 0,
	0, 0, 329, 0, 330, 331, 332, 2091, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 2076, 349, 742, 743, 744, 0, 350,
	351, 745, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 2901, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 2897, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 0, 0, 0, 2902, 2903, 2904, 2905, 422,
	423, 424, 751, 0, 0, 2896, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 0, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 754, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 0, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 0, 460, 461, 462, 0, 0, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 0,
	763, 0, 467, 469, 470, 0, 471, 0, 2906, 2907,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 764, 482, 0, 484, 485, 0, 0,
	486, 487, 488, 489, 490, 491, 494, 0, 0, 492,
	493, 495, 496, 2899, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 0,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 0, 538, 526,
	0, 0, 0, 540, 541, 542, 543, 0, 765, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 0, 557,
	0, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 0, 620, 621, 622, 623, 624, 774, 625,
	2900, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 0, 651, 775, 652, 632, 633,
	653, 654, 0, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 0, 683, 684, 2075, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 783, 700, 784, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 0, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	1698, 2886, 2887, 2888, 2912, 2898, 2892, 0, 2894, 2895,
	2893, 2880, 2881, 2882, 2883, 2884, 2885, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 1351, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 1666, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1352, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1353, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 1355, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 1354, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 1356, 763, 1357, 467, 469, 470,
	1358, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	1359, 484, 485, 1360, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1361, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1362, 538, 526, 0, 0, 1363, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1364, 557, 1365, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1366, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 272, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 1367, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 274, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 1829, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 266, 731, 732,
	789, 733, 734, 735, 0, 1826, 267, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 213, 0, 0, 0,
	736, 0, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 0, 349, 742, 743, 744,
	0, 350, 351, 745, 0, 1666, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 0, 0, 0, 0, 0, 0, 0, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 754, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 0, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1356, 763, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 764, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 0,
	0, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 0, 0, 1363, 540, 541, 542, 543, 0,
	765, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 272,
	646, 647, 645, 648, 649, 650, 0, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 274, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 783, 700, 784,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 0, 716,
	0, 0, 717, 718, 719, 1829, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 266, 731, 732, 789, 733, 734,
	735, 1698, 1697, 267, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 213, 736, 0, 0, 0, 329, 0,
	330, 331, 332, 1351, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 742, 743, 744, 0, 350, 351, 745, 0, 1666,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1352, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1353, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 754, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1355, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 0, 460, 461,
	462, 0, 1354, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 1356, 763, 1357, 467, 469,
	470, 1358, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 764,
	482, 1359, 484, 485, 1360, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1361, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1362, 538, 526, 0, 0, 1363, 540,
	541, 542, 543, 0, 765, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1364, 557, 1365, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1366, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	0, 651, 775, 652, 632, 633, 653, 654, 1367, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 783, 700, 784, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1698, 1697, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 1853, 736, 0,
	0, 0, 329, 0, 330, 331, 332, 1351, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 0, 349, 742, 743, 744, 0, 350,
	351, 745, 0, 1666, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1352, 377, 378, 379, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 0, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1353, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 754, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1355, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 0, 460, 461, 462, 0, 1354, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 1356,
	763, 1357, 467, 469, 470, 1358, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 764, 482, 1359, 484, 485, 1360, 0,
	486, 487, 488, 489, 490, 491, 494, 0, 0, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1361,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1362, 538, 526,
	0, 0, 1363, 540, 541, 542, 543, 0, 765, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1364, 557,
	1365, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1366, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 0, 651, 775, 652, 632, 633,
	653, 654, 1367, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 783, 700, 784, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 0, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1698,
	1697, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 0, 0, 0,
	0, 4180, 736, 0, 0, 0, 329, 0, 330, 331,
	332, 1351, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 0, 741, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 0, 349, 742,
	743, 744, 0, 350, 351, 745, 0, 1666, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1352,
	377, 378, 379, 0, 0, 0, 0, 0, 0, 0,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 0, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1353,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 754, 0, 755, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 1355, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 0, 460, 461, 462, 0,
	1354, 759, 463, 546, 464, 760, 761, 0, 762, 0,
	465, 466, 468, 1356, 763, 1357, 467, 469, 470, 1358,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 764, 482, 1359,
	484, 485, 1360, 0, 486, 487, 488, 489, 490, 491,
	494, 0, 0, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1361, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1362, 538, 526, 0, 0, 1363, 540, 541, 542,
	543, 0, 765, 544, 766, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1364, 557, 1365, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 2641, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1366, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 0, 651,
	775, 652, 632, 633, 653, 654, 1367, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 0,
	683, 684, 0, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 779, 780, 781,
	782, 0, 705, 0, 694, 696, 697, 698, 699, 783,
	700, 784, 0, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	0, 716, 0, 0, 717, 718, 719, 785, 786, 787,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1698, 2546, 0, 0, 0, 0, 2547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 0, 0, 1853, 736, 0, 0, 0,
	329, 0, 330, 331, 332, 1351, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 0, 349, 742, 743, 744, 0, 350, 351, 745,
	0, 1666, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1352, 377, 378, 379, 0, 0, 0,
	0, 0, 0, 0, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1353, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	754, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 1355, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 0,
	460, 461, 462, 0, 1354, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1356, 763, 1357,
	467, 469, 470, 1358, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 2545, 481, 480, 0,
	483, 764, 482, 1359, 484, 485, 1360, 0, 486, 487,
	488, 489, 490, 491, 494, 0, 0, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1361, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1362, 538, 526, 0, 0,
	1363, 540, 541, 542, 543, 0, 765, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1364, 557, 1365, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1366, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 0, 651, 775, 652, 632, 633, 653, 654,
	1367, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 783, 700, 784, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 0, 716, 0, 0, 717, 718,
	719, 785, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1698, 1697, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 0, 0, 1853,
	736, 0, 0, 0, 329, 0, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 0, 349, 742, 743, 744,
	0, 350, 351, 745, 0, 1666, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 0, 0, 0, 0, 0, 0, 0, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 754, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1355, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 0, 460, 461, 462, 0, 1354, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1356, 763, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 764, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 0,
	0, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 0, 0, 1363, 540, 541, 542, 543, 0,
	765, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1364, 557, 1365, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 0, 651, 775, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 783, 700, 784,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 0, 716,
	0, 0, 717, 718, 719, 785, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1229, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 1835, 0, 0, 736, 0, 0, 0,
	329, 0, 330, 331, 332, 0, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 0, 349, 742, 743, 744, 0, 350, 351, 745,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 0, 0,
	0, 0, 0, 0, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	0, 0, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 0, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	754, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 0, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 0,
	460, 461, 462, 0, 0, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 0, 763, 0,
	467, 469, 470, 0, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 764, 482, 0, 484, 485, 0, 0, 486, 487,
	488, 489, 490, 491, 494, 0, 0, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 0, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 0, 538, 526, 0, 0,
	0, 540, 541, 542, 543, 0, 765, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 0, 557, 0, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	0, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 272, 646, 647, 645, 648,
	649, 650, 0, 651, 775, 652, 632, 633, 653, 654,
	0, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 274,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 783, 700, 784, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 0, 716, 0, 0, 717, 718,
	719, 1829, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 313, 0, 0,
	266, 731, 732, 789, 733, 734, 735, 0, 0, 267,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 329, 0, 330, 331, 332, 213,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 0, 349, 742, 743, 744,
	0, 350, 351, 745, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 0, 0, 0, 0, 0, 0, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 0, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 754, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	0, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 0, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 0, 763, 0, 467, 469, 470, 0, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 764, 482, 0, 484, 485,
	0, 0, 486, 487, 488, 489, 490, 491, 494, 0,
	0, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 0, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 0,
	538, 526, 0, 318, 0, 540, 541, 542, 543, 0,
	765, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	0, 557, 0, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 0, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 0, 651, 775, 652,
	632, 633, 653, 654, 0, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 783, 700, 784,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 0, 716,
	0, 0, 717, 718, 719, 785, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 313, 3406, 0, 0, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 329, 0,
	330, 331, 332, 2210, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 742, 743, 744, 0, 350, 351, 745, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 0, 0,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 0, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 754, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 0, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 0, 460, 461,
	462, 0, 0, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 0, 763, 0, 467, 469,
	470, 0, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 764,
	482, 0, 484, 485, 0, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 0, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 0, 538, 526, 0, 0, 0, 540,
	541, 542, 543, 0, 765, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 0, 557, 0, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 0, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	0, 651, 775, 652, 632, 633, 653, 654, 0, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 783, 700, 784, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 313, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 329, 0, 330, 331, 332, 5637, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 0, 349, 742, 743, 744, 0, 350,
	351, 745, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 0, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 0, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 754, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 0, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 0, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 0,
	763, 0, 467, 469, 470, 0, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 764, 482, 0, 484, 485, 0, 0,
	486, 487, 488, 489, 490, 491, 494, 0, 0, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 0,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 0, 538, 526,
	0, 318, 0, 540, 541, 542, 543, 0, 765, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 0, 557,
	0, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 0, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 0, 651, 775, 652, 632, 633,
	653, 654, 0, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 783, 700, 784, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 0, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 313, 0, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 329, 1823,
	330, 331, 332, 0, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 742, 743, 744, 0, 350, 351, 745, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 0, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 754, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 0, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 0, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 0, 763, 0, 467, 469,
	470, 0, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 764,
	482, 0, 484, 485, 0, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 0, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 0, 538, 526, 0, 318, 0, 540,
	541, 542, 543, 0, 765, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 0, 557, 0, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 0, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	0, 651, 775, 652, 632, 633, 653, 654, 0, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 783, 700, 784, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 3214, 0, 731,
	732, 789, 733, 734, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 4131, 330, 331, 332, 1351,
	333, 334, 335, 336, 337, 338, 339, 0, 2270, 0,
	340, 2260, 341, 2276, 0, 2283, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 0, 349, 2286, 2287, 0,
	0, 350, 351, 0, 0, 1666, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1352, 377, 378,
	379, 0, 0, 0, 0, 0, 0, 0, 380, 381,
	382, 383, 384, 1334, 385, 387, 2274, 2273, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1319, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 0, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 0, 0, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 2272, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1353, 431, 432,
	433, 2281, 2282, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 0, 0, 0, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 0, 0, 0, 545,
	1355, 452, 453, 454, 3208, 455, 456, 457, 458, 459,
	0, 0, 0, 0, 460, 461, 462, 0, 1354, 3210,
	463, 546, 464, 2267, 2268, 0, 2263, 0, 465, 466,
	468, 1356, 0, 1357, 467, 469, 470, 1358, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 0, 482, 1359, 484, 485,
	1360, 0, 486, 487, 488, 489, 490, 491, 494, 0,
	0, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1361, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1362,
	538, 526, 0, 0, 1363, 540, 541, 542, 543, 0,
	0, 544, 2275, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 3209,
	1364, 557, 1365, 0, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	2257, 572, 573, 574, 2258, 575, 576, 577, 0, 578,
	0, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 2271, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1366, 620, 621, 622, 623, 624,
	0, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 0, 651, 0, 652,
	632, 633, 653, 654, 1367, 655, 656, 657, 658, 659,
	660, 661, 2269, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 2285, 672, 673,
	674, 675, 0, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 2277, 2278, 2279, 2280, 0,
	705, 0, 694, 696, 697, 698, 699, 0, 700, 0,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 0, 716,
	0, 0, 717, 718, 719, 0, 2261, 2284, 3211, 721,
	722, 720, 723, 724, 727, 725, 726, 0, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 0, 733, 734,
	735, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 3203, 736, 0, 2251, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 3214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 3525, 0,
	0, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 0, 2270, 0, 340,
	2260, 341, 2276, 0, 2283, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 2286, 2287, 0, 0,
	350, 351, 0, 0, 1666, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 1334, 385, 387, 2274, 2273, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1319, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 0, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	0, 0, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 2272, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	2281, 2282, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 0, 0, 0, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 0, 0, 0, 545, 1355,
	452, 453, 454, 3208, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 1354, 3210, 463,
	546, 464, 2267, 2268, 0, 2263, 0, 465, 466, 468,
	1356, 0, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 0, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 0, 0, 1363, 540, 541, 542, 543, 0, 0,
	544, 2275, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 3209, 1364,
	557, 1365, 0, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 2257,
	572, 573, 574, 2258, 575, 576, 577, 0, 578, 0,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 2271, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 0,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 0, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 2269, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 2285, 672, 673, 674,
	675, 0, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 2277, 2278, 2279, 2280, 0, 705,
	0, 694, 696, 697, 698, 699, 0, 700, 0, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 0, 2261, 2284, 3211, 721, 722,
	720, 723, 724, 727, 725, 726, 0, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 0, 733, 734, 735,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 2251, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 4299, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	2628, 1311, 0, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 1310, 0, 349, 742, 743,
	744, 0, 350, 351, 1317, 0, 1298, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 1301, 1299, 1300, 1307, 1303, 1302, 1306, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1342, 1343, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1349, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1312, 1313, 1316,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 1356, 1314, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1350, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	1305, 1304, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 0, 318, 1363, 540, 541, 542, 543,
	0, 1315, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 1344, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1345,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1308, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 1346, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 1347, 700,
	1348, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 1309,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 2264, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 0, 2270, 0, 340, 2260, 341, 2276, 0,
	2283, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 2286, 2287, 0, 0, 350, 351, 0, 0,
	1666, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 1334, 385,
	387, 2274, 2273, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1319, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 0, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 2272,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 2281, 2282, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 0,
	0, 0, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 0, 0, 0, 545, 1355, 452, 453, 454, 3208,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1354, 3210, 463, 546, 464, 2267, 2268,
	0, 2263, 0, 465, 466, 468, 1356, 0, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	0, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 0, 0, 1363,
	540, 541, 542, 543, 0, 0, 544, 2275, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 3209, 1364, 557, 1365, 0, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 2257, 572, 573, 574, 2258,
	575, 576, 577, 0, 578, 0, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 2271, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 0, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 0, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 2269, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 2285, 672, 673, 674, 675, 0, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	2277, 2278, 2279, 2280, 0, 705, 0, 694, 696, 697,
	698, 699, 0, 700, 0, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	0, 2261, 2284, 3211, 721, 722, 720, 723, 724, 727,
	725, 726, 0, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 0, 733, 734, 735, 1053, 0, 952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 2251, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 959, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 1050, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	1052, 0, 678, 669, 957, 685, 686, 687, 688, 689,
	958, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 2233, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 4434, 327, 328,
	0, 0, 0, 0, 0, 736, 962, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 2240, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 2241, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 2242, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 4433, 630, 639, 640,
	641, 642, 644, 643, 0, 2237, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 2239, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 4432, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 2233, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 2291, 327, 328, 0, 0, 0, 0, 0, 736,
	962, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	2240, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 2241,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 2242, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	2290, 630, 639, 640, 641, 642, 644, 643, 0, 2292,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 2239, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 2289, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	2233, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 2232, 327, 328, 0, 0,
	0, 0, 0, 736, 962, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 2240, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 2241, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 2242, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 2231, 630, 639, 640, 641, 642,
	644, 643, 0, 2237, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 2239, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 2230, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 950, 0, 952, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 962, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	959, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 957, 685, 686, 687, 688, 689, 958, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	952, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 962, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 959, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 957, 685, 686, 687,
	688, 689, 958, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 3214, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 0, 2270, 0, 340, 2260, 341,
	2276, 0, 2283, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 2286, 2287, 0, 0, 350, 351,
	0, 0, 1666, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	1334, 385, 387, 2274, 2273, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1319, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 0, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 0, 0,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 2272, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 2281, 2282,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 0, 0, 0, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 0, 0, 0, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 1354, 0, 463, 546, 464,
	2267, 2268, 0, 2263, 0, 465, 466, 468, 1356, 0,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 0, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 0,
	0, 1363, 540, 541, 542, 543, 0, 0, 544, 2275,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 0, 1364, 557, 1365,
	0, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 2257, 572, 573,
	574, 2258, 575, 576, 577, 0, 578, 0, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 2271, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 0, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 0, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 2269,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 2285, 672, 673, 674, 675, 0,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 2277, 2278, 2279, 2280, 0, 705, 0, 694,
	696, 697, 698, 699, 0, 700, 0, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 0, 2261, 2284, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 0, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 0, 733, 734, 735, 3194, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 2251, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 2233, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 962, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 2240, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 2241, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 2242, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 2682, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 2683, 630,
	639, 640, 641, 642, 644, 643, 0, 2237, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	2239, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	2684, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 2264, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 0, 2270,
	0, 340, 2260, 341, 2276, 0, 2283, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 2286, 2287,
	0, 0, 350, 351, 0, 0, 1666, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 1334, 385, 387, 2274, 2273, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1319, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 0,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 2272, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 2281, 2282, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 0, 0, 0, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 0, 0, 0,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1354,
	0, 463, 546, 464, 2267, 2268, 0, 2263, 0, 465,
	466, 468, 1356, 0, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 0, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 0, 0, 1363, 540, 541, 542, 543,
	0, 0, 544, 2275, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	0, 1364, 557, 1365, 0, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 2257, 572, 573, 574, 2258, 575, 576, 577, 0,
	578, 0, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 2271, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 0, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 0,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 2269, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 2285, 672,
	673, 674, 675, 0, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 2277, 2278, 2279, 2280,
	0, 705, 0, 694, 696, 697, 698, 699, 0, 700,
	0, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 0, 2261, 2284, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 0, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 0, 733,
	734, 735, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 2251, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	962, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1697,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4675, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 1666, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 1356, 763, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 0, 0, 1363, 540, 541, 542, 543,
	4561, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 3607, 0, 1698, 1697, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 1666, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 1356, 763,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 0,
	0, 1363, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 2565, 0,
	1698, 1697, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 1351, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 1666, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1352, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1353, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1756,
	757, 758, 545, 1355, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 1354, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 1356, 763, 1357, 467, 469, 470,
	1358, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	1359, 484, 485, 1360, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1361, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1362, 538, 526, 0, 0, 1363, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1364, 557, 1365, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1366, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 1367, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 2300, 0, 1698, 1697, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 1666, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	1356, 763, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 0, 0, 1363, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1886, 0, 1698, 1697, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	1666, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 1883, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 1356, 763, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 0, 0, 1363,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 1884,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 1882, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 1885, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1753, 0, 1698, 1697,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 1666, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1756, 757, 758,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 1356, 763, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 0, 0, 1363, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1693, 0, 1698, 1697, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 1351, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 1666, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1352, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1353, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 1355, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 1354, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 1356, 763,
	1357, 467, 469, 470, 1358, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 1359, 484, 485, 1360, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1361, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1362, 538, 526, 0,
	0, 1363, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1364, 557, 1365,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1366, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 1691, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 1367, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1698, 1697,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1351, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 1666, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1352, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1353, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 1355, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1354,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 1356, 763, 1357, 467, 469, 470, 1358, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 1359, 484,
	485, 1360, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1361, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1362, 538, 526, 0, 0, 1363, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1364, 557, 1365, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1366, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 1367, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1698, 1697, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 1351, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	1666, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1352, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1353, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 1355, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1354, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 1356, 763, 1357, 467,
	469, 470, 1358, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 1359, 484, 485, 1360, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1361, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1362, 538, 526, 0, 0, 1363,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1364, 557, 1365, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1366,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 1367,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1698, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 1351, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 1666, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1352, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1353, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 1355,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 1354, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	1356, 763, 1357, 467, 469, 470, 1358, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 1359, 484, 485, 1360,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1361, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1362, 538,
	526, 0, 0, 1363, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1364,
	557, 1365, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1366, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 1367, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 3276, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 4123, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 3280,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 4122, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 3279, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 4119, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 4121, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 4118, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 3278, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 4120, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 3276, 350, 351,
	745, 0, 0, 3270, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	3272, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 3280, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	3279, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 3269, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	3278, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 3277, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1968, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 1967, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 1965, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 1970, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 1966, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 1969, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 1964, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 1962, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 1963, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1670, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1672, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	1402, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1667, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1669, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 1402, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1573, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1575, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 1402, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 824, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 822, 325, 326, 811,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	814, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 820,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 816, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 823, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 810, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 811, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 814, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 815, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 816, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 809, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 811,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	814, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 815,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 816, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 811, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 814, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 4571, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	816, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 1402, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 3989, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	3494, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 3493, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 811, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 814, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 815, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 816, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 3196, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	2649, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 2593, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 2592, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 2577, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 2579, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 2539, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 1402, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1801, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1800, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1690, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1683, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1685, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1490, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1489, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1479, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1478, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1475, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1474, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1469, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1468,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1446, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1445, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	791, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 304, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 814, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 815, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 816, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 2692, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 2690, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 2688, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 2600, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 2324, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 2318,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1037, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 1036, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 1035, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	914, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	903, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 912,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 905, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 911,
	430, 907, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 908,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 906, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	909, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 910,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 904,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 897, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 903, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 912, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 905, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 911, 430, 907, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 908, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 906,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 909, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 910, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 904, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	4122, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 4927, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1518, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1521, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	1519, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 885, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 884, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 883, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 1522, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 881, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1518, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 1521, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 1519, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 885, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 884, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 883, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 1522, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 881, 780, 781, 782, 0, 705, 0, 694,
	1520, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 892, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 890, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 800, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 799, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	798, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 3406, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	5247, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 3929,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 4801, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 4495, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 3130, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 3121,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 3406,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 3486, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 2457, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	884, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 883, 630, 639, 640,
	641, 642, 3338, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	881, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 2661, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	2647, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1857, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1849, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 875, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 871, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	876, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 885, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 884, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 883, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 1834, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 881, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1807, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1806, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1790, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1788, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1782, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1760, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1758, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1751, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1712, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1675, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1524, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 884, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 883, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 881, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1495, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1494, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1486, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1485,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 1427,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 895, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 875, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 871, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 870, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 876, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 885,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 884, 621, 622, 623, 624, 872,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	883, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 873, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 881, 780, 781, 782, 0, 705,
	0, 694, 877, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	864, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	865, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 826, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 818, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 795, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 4154, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	884, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 883, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	881, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 4038, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 4007,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 4003, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 3954, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 3952, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 3940, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 3937,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 3505, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 865, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 2618, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 0, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1455, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 1375, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 0, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 0, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	0, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 0, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1796, 0,
	1502, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	0, 0, 0, 0, 350, 351, 0, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	1504, 380, 381, 382, 383, 384, 0, 385, 387, 0,
	0, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 0, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 0, 0, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 0, 0, 0,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1795,
	0, 0, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 0, 463, 546, 464, 0, 0, 0, 0,
	0, 465, 466, 468, 0, 0, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 0, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 0, 544, 0, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 0, 0, 557, 0, 0, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 0, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 0, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 0, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1505,
	651, 0, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 0, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	0, 672, 673, 674, 675, 0, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 0, 0,
	0, 0, 0, 705, 0, 694, 696, 697, 698, 699,
	0, 700, 0, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 0, 0,
	0, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	0, 728, 729, 730, 1715, 0, 1502, 0, 731, 732,
	0, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 0, 0, 0, 0,
	350, 351, 0, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 1504, 380, 381, 382,
	383, 384, 0, 385, 387, 0, 0, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 0, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	0, 0, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 0, 0, 0, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1714, 0, 0, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 0, 463,
	546, 464, 0, 0, 0, 0, 0, 465, 466, 468,
	0, 0, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 0, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 0,
	544, 0, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 0, 0,
	557, 0, 0, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 0,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 0,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 0,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1505, 651, 0, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 0, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 0, 672, 673, 674,
	675, 0, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 0, 0, 0, 0, 0, 705,
	0, 694, 696, 697, 698, 699, 0, 700, 0, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 0, 0, 0, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 0, 728, 729, 730,
	1500, 0, 1502, 0, 731, 732, 0, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 0, 0, 0, 0, 350, 351, 0, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 1504, 380, 381, 382, 383, 384, 0, 385,
	387, 0, 0, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 0, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 0, 0, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 0,
	0, 0, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1499, 0, 0, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 0, 463, 546, 464, 0, 0,
	0, 0, 0, 465, 466, 468, 0, 0, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	0, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 0, 544, 0, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 0, 0, 557, 0, 0, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 0, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 0, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 0, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1505, 651, 0, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 0, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 0, 672, 673, 674, 675, 0, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	0, 0, 0, 0, 0, 705, 0, 694, 696, 697,
	698, 699, 0, 700, 0, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	0, 0, 0, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 0, 728, 729, 730, 2338, 0, 1502, 0,
	731, 732, 0, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 0, 0,
	0, 0, 350, 351, 0, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 1504, 380,
	381, 382, 383, 384, 0, 385, 387, 0, 0, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 0,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 0, 0, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 0, 0, 0, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 0, 0, 0,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	0, 463, 546, 464, 0, 0, 0, 0, 0, 465,
	466, 468, 0, 0, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 0, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 0, 544, 0, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	0, 0, 557, 0, 0, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 0, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 0, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 0, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1505, 651, 0,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 0, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 0, 672,
	673, 674, 675, 0, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 0, 0, 0, 0,
	0, 705, 0, 694, 696, 697, 698, 699, 0, 700,
	0, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 0, 0, 0, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 0, 728,
	729, 730, 2298, 0, 1502, 0, 731, 732, 0, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 0, 0, 0, 0, 350, 351,
	0, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 1504, 380, 381, 382, 383, 384,
	0, 385, 387, 0, 0, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 0, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 0, 0,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 0, 0, 0, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 0, 0, 0, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 0, 463, 546, 464,
	0, 0, 0, 0, 0, 465, 466, 468, 0, 0,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 0, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 0, 544, 0,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 0, 0, 557, 0,
	0, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 0, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 0, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 0, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1505, 651, 0, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 0,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 0, 672, 673, 674, 675, 0,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 0, 0, 0, 0, 0, 705, 0, 694,
	696, 697, 698, 699, 0, 700, 0, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 0, 0, 0, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 1502, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 0, 733, 734, 735, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 0, 0, 0, 0, 350, 351,
	0, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 1504, 380, 381, 382, 383, 384,
	0, 385, 387, 0, 0, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 0, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 0, 0,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 0, 0, 0, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 0, 0, 0, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 0, 463, 546, 464,
	0, 0, 0, 0, 0, 465, 466, 468, 0, 0,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 0, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 0, 544, 0,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 0, 0, 557, 0,
	0, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 0, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 0, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 0, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1505, 651, 0, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 0,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 0, 672, 673, 674, 675, 0,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 0, 0, 0, 0, 0, 705, 0, 694,
	696, 697, 698, 699, 0, 700, 0, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 0, 0, 0, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 0, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 0, 733, 734, 735, 2020, 2021,
	0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 2051, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 2057, 2051, 2022, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2047, 2048, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 2051, 2045, 2046, 2047, 2048,
	0, 0, 0, 2023, 2061, 0, 2028, 0, 2071, 0,
	0, 0, 0, 0, 2070, 2050, 2052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 2067, 0, 2068, 0, 0,
	0, 2022, 0, 0, 2037, 2038, 0, 0, 0, 2061,
	0, 0, 2042, 2071, 0, 0, 0, 0, 0, 0,
	2050, 2052, 2039, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2043,
	2067, 0, 2068, 0, 0, 0, 0, 0, 0, 2037,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 2046, 2047, 2048, 0, 2058,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 2061, 0, 0,
	0, 2071, 0, 0, 0, 2073, 0, 0, 2050, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	2068, 0, 0, 0, 0, 0, 0, 2037, 2038, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 2075, 0, 0, 0, 0, 0,
	0, 2069, 0, 2062, 0, 0, 0, 0, 2057, 2051,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2041,
	2063, 2040, 2036, 2049, 2033, 2031, 2032, 2024, 2025, 2026,
	2027, 2029, 2030, 0, 0, 0, 0, 0, 5379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033,
	2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0,
	0, 2062, 0, 5375, 0, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 0, 0, 0, 2020, 2021, 2028, 2053,
	2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 2057,
	2051, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 2061, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 0,
	0, 0, 2067, 0, 2068, 0, 0, 2042, 0, 0,
	0, 2037, 2038, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2041, 2063, 2040, 2036, 2043, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0,
	0, 5275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 2045,
	2046, 2047, 2048, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 2050, 2052, 0, 0, 0, 0, 0,
	0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066,
	0, 0, 0, 2067, 0, 2068, 0, 2049, 0, 0,
	0, 0, 2037, 2038, 2057, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 2044, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	2020, 2021, 2039, 2053, 2054, 2055, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 0, 2069, 0, 0, 0,
	0, 2075, 0, 2057, 2051, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 2070, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 0, 0, 2045, 2046, 2047, 2048, 0, 0,
	0, 2039, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 0, 0, 2044, 5221, 0, 2061, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 2050, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 2067, 0,
	2068, 0, 0, 2045, 2046, 2047, 2048, 2037, 2038, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 2050, 2052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 2068,
	0, 2069, 0, 0, 0, 0, 2037, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 2060, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 2073, 0, 2034, 2035, 2041, 2063, 2040,
	2036, 2043, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029,
	2030, 0, 0, 0, 0, 0, 5220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2020, 2021, 0, 2053, 2054, 2055,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 0,
	2069, 0, 0, 2049, 0, 0, 0, 2057, 2051, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 2070, 0, 2044,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064,
	2065, 2066, 2049, 0, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 2051, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	2062, 0, 0, 2022, 0, 0, 0, 2045, 2046, 2047,
	2048, 0, 0, 0, 2042, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0,
	2061, 5014, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 2050, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 0, 2068, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 0, 0, 0, 2045, 2046, 2047, 2048,
	0, 0, 0, 0, 0, 0, 2028, 2060, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2041, 2063, 2040, 2036, 2043, 2033, 2031, 2032, 2024,
	2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0, 0,
	4825, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 2071, 0, 0, 0, 0, 0, 0,
	2050, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	2067, 0, 2068, 0, 0, 0, 0, 0, 0, 2037,
	2038, 0, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 2057, 2051,
	0, 0, 0, 2069, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 2044, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 2020, 2021, 0, 2053, 2054, 2055,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 0,
	2075, 0, 0, 0, 0, 2049, 0, 2057, 2051, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 2062, 0, 2042, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 2075,
	2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0,
	0, 2061, 0, 0, 4723, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 2068, 0, 0, 0, 0, 0,
	0, 2037, 2038, 0, 0, 0, 0, 2045, 2046, 2047,
	2048, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033,
	2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0,
	2061, 0, 0, 4722, 2071, 0, 0, 0, 0, 0,
	0, 2050, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 2067, 0, 2068, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 2021, 0, 2053,
	2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 2057,
	2051, 0, 0, 0, 2069, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 2044, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 0, 2049, 0, 2057, 2051,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 2045,
	2046, 2047, 2048, 0, 2062, 0, 2042, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	2075, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 2061, 0, 0, 4721, 2071, 0, 0, 0,
	0, 0, 0, 2050, 2052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 2068, 0, 0, 0, 0,
	0, 0, 2037, 2038, 0, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 2043, 0, 0,
	0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 0,
	2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0,
	0, 2061, 0, 0, 4304, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 2067, 0, 2068, 0, 0, 0, 0, 0,
	0, 2037, 2038, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2020, 2021, 0,
	2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	2057, 2051, 0, 0, 0, 2069, 0, 0, 0, 2023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 2044, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 2020, 2021, 0, 2053,
	2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 2049, 0, 2057,
	2051, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 0,
	2045, 2046, 2047, 2048, 0, 2062, 0, 2042, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040,
	2036, 2075, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029,
	2030, 0, 0, 2061, 0, 0, 3716, 2071, 0, 0,
	0, 0, 0, 0, 2050, 2052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 2068, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 0, 0, 0, 2045,
	2046, 2047, 2048, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 2061, 0, 0, 3715, 2071, 0, 0, 0,
	0, 0, 0, 2050, 2052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 2067, 0, 2068, 0, 0, 0, 0,
	0, 0, 2037, 2038, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 2021,
	0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 2057, 2051, 0, 0, 0, 2069, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 0, 0, 0, 2044, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 2020, 2021, 0,
	2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 2517, 0, 2075, 0, 0, 0, 0, 2049, 0,
	2057, 2051, 0, 0, 0, 0, 0, 0, 0, 2023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 2045, 2046, 2047, 2048, 0, 2062, 0, 2042, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 2035, 2041, 2063,
	2040, 2036, 2075, 2033, 2031, 2032, 2024, 2025, 2026, 2027,
	2029, 2030, 0, 0, 2061, 0, 0, 3714, 2071, 0,
	0, 0, 0, 0, 0, 2050, 2052, 0, 0, 2518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 2068, 0, 0,
	0, 0, 0, 0, 2037, 2038, 0, 0, 0, 0,
	2045, 2046, 2047, 2048, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040,
	2036, 0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029,
	2030, 0, 0, 2061, 0, 0, 3713, 2071, 0, 0,
	0, 0, 0, 0, 2050, 2052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 2067, 0, 2068, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066,
	2049, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 2057, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 2044, 0, 2058, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 2062, 0,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 2417, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2519, 0, 2415, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 2045, 2046, 2047, 2048, 0, 0,
	0, 0, 0, 0, 2028, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2041,
	2063, 2040, 2036, 2075, 2033, 2031, 2032, 2024, 2025, 2026,
	2027, 2029, 2030, 0, 0, 0, 3678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 2050, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 2520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	2068, 0, 0, 0, 0, 0, 0, 2037, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 2035, 2041, 2063,
	2040, 2036, 2043, 2033, 2031, 2032, 2024, 2025, 2026, 2027,
	2029, 2030, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 2051, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2073, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 2042, 2053, 2054, 2055, 2064, 2065, 2066,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 2416, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 2045, 2046, 2047, 2048, 0,
	0, 0, 0, 0, 0, 2028, 5542, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2061, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 2414, 2050,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 2046, 2047, 2048, 0, 2067,
	0, 2068, 0, 0, 2028, 0, 3778, 0, 2037, 2038,
	0, 0, 0, 3777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 2061, 2060, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 2050, 2052,
	2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 2067, 0,
	2068, 0, 0, 0, 0, 0, 0, 2037, 2038, 0,
	0, 0, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 0, 2073, 0, 0, 0, 0, 0,
	2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 5541, 0, 0,
	0, 0, 0, 2057, 2051, 0, 0, 0, 0, 3648,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 2076, 2058, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	2044, 2042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 2020,
	2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 2049, 3649, 0, 0, 0, 0, 0,
	0, 0, 2057, 2051, 0, 0, 0, 0, 2075, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 2070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 2046, 2047, 2048, 0, 0, 0,
	2076, 0, 0, 2028, 0, 0, 0, 0, 0, 2022,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 2075, 0, 2060,
	2071, 0, 0, 0, 0, 0, 0, 2050, 2052, 0,
	0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 2067, 0, 2068,
	0, 0, 0, 0, 0, 0, 2037, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 2045, 2046, 2047, 2048, 0, 0, 0, 0,
	0, 2043, 2028, 0, 5120, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 2071,
	2069, 0, 0, 0, 0, 0, 2050, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 2067, 0, 2068, 0,
	0, 0, 2073, 0, 0, 2037, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 2057, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 2044, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	2058, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 2073, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 2045, 2046, 2047, 2048, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024,
	2025, 2026, 2027, 2029, 2030, 0, 0, 2061, 0, 0,
	0, 2071, 0, 0, 0, 2075, 0, 0, 2050, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	2068, 0, 0, 0, 0, 0, 0, 2037, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 2035,
	2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025,
	2026, 2027, 2029, 2030, 0, 0, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 2020,
	2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2051, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 2020, 2021, 0, 2053, 2054, 2055,
	2064, 2065, 2066, 2049, 0, 0, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 2057, 2051, 2022,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 2044,
	2042, 0, 0, 0, 0, 0, 0, 2070, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 2062, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2046, 2047, 2048, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2046, 2047,
	2048, 0, 0, 0, 0, 2061, 0, 2028, 2060, 2071,
	0, 0, 0, 0, 0, 0, 2050, 2052, 0, 0,
	2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032,
	2024, 2025, 2026, 2027, 2029, 2030, 2067, 0, 2068, 0,
	0, 0, 0, 0, 0, 2037, 2038, 0, 0, 0,
	2061, 0, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 2050, 2052, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2067, 0, 2068, 0, 0, 0, 0, 0, 0,
	2037, 2038, 0, 0, 0, 0, 0, 0, 0, 2020,
	2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2051, 0, 2043, 0, 0, 0, 2069,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2076, 2073, 0, 0, 0, 0, 0, 0, 0, 2022,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2020, 2021, 0,
	2053, 2054, 2055, 2064, 2065, 2066, 2049, 0, 0, 0,
	0, 0, 2045, 2046, 2047, 2048, 0, 0, 0, 2062,
	2057, 2051, 2028, 0, 4524, 0, 0, 0, 0, 2023,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 2076, 0,
	0, 0, 0, 0, 2062, 2061, 0, 2022, 0, 2071,
	0, 0, 0, 0, 4875, 0, 2050, 2052, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 2068, 0,
	2075, 0, 0, 0, 0, 2037, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4525,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	2043, 0, 0, 0, 0, 0, 0, 0, 2034, 2035,
	2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025,
	2026, 2027, 2029, 2030, 0, 0, 0, 0, 0, 0,
	2045, 2046, 2047, 2048, 0, 0, 0, 0, 0, 0,
	2028, 2060, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 0,
	2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 2061, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 2050, 2052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 2068, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 0, 0, 0, 0,
	0, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064, 2065,
	2066, 2049, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 2051, 0, 2043, 0,
	0, 0, 0, 0, 2023, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 2070, 0, 2020, 2021, 0,
	2053, 2054, 2055, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 2062,
	2057, 2051, 2022, 0, 0, 3779, 0, 2069, 0, 2023,
	0, 0, 0, 2042, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 2039, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 2076, 2073,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 2045, 2046, 2047, 2048, 0,
	0, 0, 0, 0, 0, 2028, 2060, 0, 0, 0,
	0, 0, 0, 0, 3784, 2044, 0, 0, 2034, 2035,
	2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025,
	2026, 2027, 2029, 2030, 0, 0, 0, 0, 0, 0,
	2045, 2046, 2047, 2048, 0, 0, 0, 2062, 2061, 0,
	2028, 0, 2071, 0, 0, 0, 0, 0, 0, 2050,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 2068, 0, 2075, 0, 0, 0, 0, 2037, 2038,
	0, 0, 0, 2061, 0, 0, 4285, 2071, 0, 0,
	0, 0, 0, 0, 2050, 2052, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 2067, 0, 2068, 0, 0, 0,
	0, 0, 0, 2037, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 2043, 0,
	0, 0, 2069, 0, 0, 0, 2034, 2035, 2041, 2063,
	2040, 2036, 0, 2033, 2031, 2032, 2024, 2025, 2026, 2027,
	2029, 2030, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2051,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	2020, 2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 2049,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 2062, 2057, 2051, 2022, 0, 0, 3717, 0,
	0, 0, 2023, 0, 0, 2044, 2042, 0, 0, 0,
	0, 0, 0, 2070, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 2076, 0, 0, 0, 0, 0, 2062, 0, 0,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 0, 0, 0, 0, 0, 2028, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033, 2031,
	2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0, 0,
	0, 0, 0, 2045, 2046, 2047, 2048, 0, 0, 0,
	0, 2061, 0, 2028, 2060, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 0, 0, 2034, 2035, 2041, 2063,
	2040, 2036, 0, 2033, 2031, 2032, 2024, 2025, 2026, 2027,
	2029, 2030, 2067, 0, 2068, 0, 0, 0, 0, 0,
	0, 2037, 2038, 0, 0, 0, 2061, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 2050, 2052, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2067, 0, 2068,
	0, 0, 0, 0, 0, 0, 2037, 2038, 0, 0,
	0, 0, 0, 0, 0, 2020, 2021, 0, 2053, 2054,
	2055, 2064, 2065, 2066, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2051,
	0, 2043, 0, 0, 0, 2069, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 2073, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 3744, 0,
	2069, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 2021, 0, 2053, 2054, 2055, 2064,
	2065, 2066, 2049, 0, 0, 0, 0, 0, 2045, 2046,
	2047, 2048, 0, 0, 0, 2062, 2057, 2051, 2028, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 2076, 0, 0, 0, 0, 0,
	2062, 2061, 0, 2022, 0, 2071, 0, 0, 0, 0,
	0, 0, 2050, 2052, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 2068, 0, 2075, 0, 0, 0,
	0, 2037, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	0, 0, 0, 0, 0, 0, 2045, 2046, 2047, 2048,
	0, 0, 0, 0, 0, 0, 2028, 2060, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 2034,
	2035, 2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024,
	2025, 2026, 2027, 2029, 2030, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 2061,
	0, 0, 0, 2071, 0, 0, 0, 0, 0, 0,
	2050, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 2068, 0, 0, 0, 0, 0, 0, 2037,
	2038, 0, 0, 0, 2020, 2021, 0, 2053, 2054, 2055,
	2064, 2065, 2066, 0, 0, 0, 0, 2049, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 2057, 2051, 0,
	0, 0, 0, 0, 2043, 0, 2023, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 2062, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	2021, 0, 2053, 2054, 2055, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 2045, 2046, 2047,
	2048, 0, 0, 2051, 0, 2630, 0, 2028, 0, 0,
	0, 2023, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 2070, 0, 2034, 2035, 2041, 2063, 2040, 2036,
	0, 2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	2061, 0, 0, 2062, 2071, 0, 0, 0, 0, 0,
	2042, 2050, 2052, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 0, 2068, 0, 0, 0, 0, 0, 2075,
	2037, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2046, 2047, 2048, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 0, 2033,
	2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0, 0,
	0, 0, 0, 0, 0, 2061, 2073, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 2050, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 2068, 0,
	0, 0, 0, 0, 0, 2037, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1105, 0, 1158,
	0, 0, 0, 0, 0, 2059, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 0, 0, 1113, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1129, 0, 1111, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 1131, 2069,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 1170, 0, 1141, 0, 0, 0,
	0, 0, 0, 0, 0, 1126, 1127, 0, 0, 0,
	2075, 2073, 0, 0, 0, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1159, 1117, 0, 0, 0, 0, 0,
	1118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 0,
	0, 2049, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 2034, 2035, 2041, 2063, 2040, 2036, 1157,
	2033, 2031, 2032, 2024, 2025, 2026, 2027, 2029, 2030, 0,
	0, 0, 0, 0, 0, 1121, 0, 0, 0, 2062,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 1124, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1132, 1130, 0,
	0, 0, 0, 0, 0, 1125, 0, 0, 0, 0,
	1142, 0, 0, 1164, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 2035,
	2041, 2063, 2040, 2036, 0, 2033, 2031, 2032, 2024, 2025,
	2026, 2027, 2029, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1116, 0, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 0, 1150, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 1148, 0,
	0, 0, 0, 0, 0, 0, 1168, 1143, 0, 0,
	1135, 1133, 0, 0, 0, 1138, 0, 0, 0, 0,
	0, 0, 0, 1139, 0, 0, 1107, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 1152, 0,
	1140, 1122, 0, 0, 0, 0, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1166, 0, 0,
	0, 0, 0, 0, 0, 1144, 0, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1149,
}

var sqlPact = [...]int32{
	350, -1000, -1000, -1000, -1000, -1000, -1000, 292, -1000, -1000,
	290, 277, 269, 266, 263, 259, 256, 253, 252, 251,
	250, -1000, -1000, 248, 245, 244, 243, -1000, 242, 239,
	-1000, 238, -1000, -1000, 236, -1000, 234, 233, 232, -1000,
	-1000, 231, -1000, 230, -1000, -1000, -1000, -1000, 229, 227,
	226, 110404, 109788, 111018, 2634, 139316, 120242, 2391, 98096, 138700,
	97480, 138084, 2506, 10672, 137468, 3144, 225, -1000, 136852, 219,
	217, 216, -1000, 119626, 136236, 117164, 116548, 2358, 1899, 1894,
	-1000, 215, 207, -1000, 9083, 82612, 205, 200, 198, 196,
	2548, 195, -1000, 192, 190, -1000, 189, 182, -1000, 12089,
	1681, -1000, 179, 178, 177, -1000, 7563, 115932, 176, 175,
	174, 3074, 173, 172, 80154, 171, 170, 168, 3032, 3265,
	-1000, -1000, 2327, -1000, -1000, 167, 160, 158, 156, 155,
	154, 153, 150, 147, 144, 142, 141, 140, 138, -1000,
	136, 135, 134, 133, 132, -1000, 124, 120, 117, -1000,
	116, -1000, 115, 114, 113, 112, 111, 110, 108, 107,
	103, 99, 98, 97, 96, 93, 91, 160825, -1000, -1000,
	90, -1000, 2168, 1879, 1867, 1862, 1115, 88, 84, 82,
	76, 75, 73, 71, 69, 66, 65, 64, 60, -1000,
	57, 55, 53, 50, 49, 48, 45, 44, 43, -1000,
	213, 42, 41, 30, 27, 26, 23, 22, -1000, 3405,
	4038, -1000, 1701, 1155, 1344, 36124, 3435, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 148526, 139930, 20, -63,
	19, -1000, 3815, 1234, 65235, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 397,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 596, 2646, 847, -1000, -1000, -1000, 135620, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2631, 15, 98710,
	-1000, 2352, -1000, -1000, -1000, -1000, -1000, 844, -1000, 2630,
	2574, 384, 2573, 98710, -1000, -1000, -1000, 3881, 3770, 109172,
	2832, 4340, 4337, 4335, 4334, 4332, 147912, 2081, 2901, 4330,
	4328, 4326, 4324, 4323, 4320, 4319, -1000, 108556, 1184, 107940,
	107324, 3882, 135006, 106708, 134390, 150988, 55150, 1129, 3876, -1000,
	-1000, -1000, -1000, -1000, -1000, 139930, -1000, 1183, -1000, -1000,
	4318, 2319, 842, 119010, -1000, -1000, 133774, 2173, -1000, -1000,
	-1000, 1047, 1353, 38648, 38648, 38648, 388, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3899, -1000, -1000, -1000, -1000, 139930,
	3123, 3123, 1556, 1575, 1575, 3123, 3123, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4317, 4313, 4312, 4311, 4309,
	1871, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 96864, 28363,
	96248, 95632, 133158, 54519, 106092, 105476, 91320, 4307, 4305, 111018,
	53888, 62719, 4035, 132542, 150372, 4034, 4031, 1181, 2349, 1613,
	-1000, -1000, -1000, -1000, -1000, -1000, -9, 86318, 4119, 139930,
	-1000, 385, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53257,
	789, 52626, 820, 51995, 787, 131926, -1000, -1000, -1000, -1000,
	-1000, 90694, 3768, -1000, 131310, 1687, 2829, 4304, 4302, 1283,
	4299, 3744, 2026, 4298, 4296, 4294, 4293, 4292, 4291, 4290,
	1660, 130694, 3057, 130078, 1933, 149756, 2163, 1179, 104860, 111018,
	3005, 129462, 1586, 1564, -1000, -1000, -1000, -1000, 3566, 3261,
	3241, 1308, -1000, -1000, -1000, -1000, -1000, 68983, 8664, 8631,
	-1000, -1000, 11019, 128846, 72103, 111018, 111018, -1000, -1000, -1000,
	-1000, -1000, -1000, 51364, 685, 50733, 1024, 128230, -1000, -1000,
	69607, 3382, 1225, -1000, -1000, -1000, -1000, -1000, 127614, 50102,
	431, 49471, 988, 139930, -1000, 3424, 2149, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2648, 1805, 4120,
	3184, 90068, 2305, 1602, 3831, 3543, 3541, 1710, 2338, 3537,
	4289, 2960, 3233, 3536, 3535, 3534, 3529, 3519, 1814, 2952,
	427, 2948, 35493, 3409, 2040, 48840, 1696, 1702, 3510, 3508,
	4128, 3961, 2322, 2276, 2392, 2232, 95016, 4288, 4287, 3785,
	3492, 3467, 3242, 3463, 2215, -1000, 3378, 1659, 380, -1000,
	-1000, -1000, -1000, -1000, -1000, 380, 1640, -1000, -1000, -1000,
	-1000, -1000, 99938, -1000, -1000, 1871, -1000, -1000, -1000, 1430,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1701, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2596, -1000, 2326, -1000,
	-1000, -1000, 2977, 3792, 3792, 3792, 3872, 565, 562, -1000,
	213, 991, 1246, -1000, -1000, 160112, -1000, -1000, 55781, 55781,
	55781, 55781, 55781, 55781, 55781, 55781, 2510, -1000, 841, -1000,
	-1000, 882, -1000, 840, 758, 696, -1000, -1000, -1000, -1000,
	-1000, -1000, 839, -1000, -1000, -1000, -1000, -1000, -1000, 4077,
	-1000, 31570, -1000, -1000, -1000, 537, 837, 55781, -1000, -1000,
	4163, 4162, 1123, -1000, 379, 1056, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3423, 835,
	823, -1000, 822, 819, 818, 813, 811, -1000, 810, -1000,
	801, 799, 796, 795, 794, 793, 792, 791, -1000, 2362,
	-1000, -1000, -1000, -1000, -1000, -1000, 744, 743, 743, 743,
	-1000, 1169, -1000, -1000, -1000, 467, 742, 455, 741, 740,
	738, -1000, 782, 779, 776, 775, 774, 773, 771, 768,
	765, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1165, -1000,
	-1000, -1000, -1000, 1531, -12, 139930, -1000, 688, -12, -1000,
	-1000, 764, -1000, 39928, 39928, 39928, -1000, -1000, 2628, 55781,
	-1000, 3015, -1000, 5, 5, 1013, 67107, -1000, 63969, 1013,
	333, 902, 73343, -1000, 3376, -1000, -1000, 761, 377, -1000,
	-1000, -1000, -1000, 28987, 3375, 139930, 139930, 139930, 111018, 111018,
	111018, 139930, 4286, 4285, 3554, 55781, -1000, -1000, 81996, 152830,
	111632, 1427, -10, -1000, -1000, 4006, 85694, 81382, 3421, 152830,
	3419, 3374, 152220, 89442, 284, 3643, -1000, -1000, 760, 4281,
	-1000, -1000, -1000, -1000, -1000, 3642, 4280, 4279, 4278, 139930,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2558, 3640, -1000,
	-11, -1000, 115316, 2558, 3638, -1000, -11, 2558, 3637, -1000,
	-11, 114702, -1000, -1000, 2558, 3636, -1000, -1000, 281, 3635,
	-1000, -1000, -1000, 278, 3634, -1000, -1000, 376, -72, 3632,
	-1000, -1000, -1000, -1000, -1000, -1000, 160112, -1000, -1000, -1000,
	151604, -1000, 3797, -1000, 139930, -1000, 55781, -1000, -1000, 4004,
	1986, 3825, 3933, -1000, -1000, -21, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2878, 2860, 1275, 2678, -1000, 3687, 1619,
	38648, 3730, -1000, -1000, -1000, -1000, -1000, 375, 28987, 3215,
	-1000, -1000, 139930, -1000, 139930, 3123, 3123, -1000, -1000, -1000,
	4118, 4117, 3123, 3123, 139930, 139930, -1000, -1000, -1000, -1000,
	-1000, -1000, -21, -1000, 5588, 3630, 1716, -1000, 2672, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2190, 3628,
	-1000, 2281, 3627, 2186, -1000, -1000, 2399, -1000, 156940, 1493,
	-1000, -1000, -1000, -1000, 2669, 3626, 6, -1000, -1000, 2663,
	-1000, 4104, 3294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 5619, 156606, -1000, 1866, -1000, -1000,
	2390, 2246, -1000, 1458, 3625, -1000, 3181, 3181, 104244, 3587,
	71479, 69607, 86318, -20, -1000, -1000, -1000, -1000, -1000, -81,
	-1000, 27731, 160112, -1000, -1000, -1000, -1000, 2058, 160112, 1033,
	-1000, -1000, 3622, -1000, 160112, 1012, -1000, -1000, 3621, -1000,
	2949, -1000, 3414, -1000, -1000, -1000, 2782, 88816, 2781, 1139,
	-1000, 111018, 2331, 4276, -1000, 4274, -1000, -1000, 4272, -1000,
	4271, 4270, 4269, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	103630, 2627, -1000, -1000, 1636, 1074, 91944, -1000, 2779, 3928,
	-1000, 103014, 1173, -1000, 1109, 2777, -1000, 1560, 114088, 1189,
	2769, -1000, 4267, 3879, 3042, 1109, 2766, -1000, -1000, -1000,
	-1000, -1000, 1120, -1000, 74571, -1000, 74571, -1000, 1846, -1000,
	147298, 5, 111018, 4077, -1000, -44, -1000, -1000, -1000, 1234,
	-1000, 68356, -1000, 68356, 118394, 91944, 1074, 3373, 78290, 159954,
	-1000, 1135, -1000, -1000, 160112, -1000, -1000, -1000, 2943, -1000,
	-175, 3179, -1000, 91944, 70855, 3369, 2940, -1000, 160112, -1000,
	-1000, -1000, -1000, 160112, -1000, -1000, -1000, 91944, 1636, -1000,
	126998, 102398, -1000, -1000, 1645, 2927, -1000, -1000, -1000, 69607,
	3366, 1470, 91944, 91944, 91944, 91944, -1000, 126382, -1000, -1000,
	2324, 1433, 3780, 2297, 111018, -1000, 2132, -1000, -1000, -1000,
	3816, 3585, 139930, -1000, -1000, 3410, -1000, 85080, 3410, 113474,
	-1000, 112860, -1000, 112246, -1000, 111018, -1000, 111018, -1000, 4264,
	4263, 4258, -1000, -1000, 4257, -1000, 4252, 3802, -1000, 873,
	48209, 160112, 3798, -1000, 4249, 2234, 3409, 160112, -1000, 3493,
	1905, 1901, 139930, -1000, -1000, 139930, -1000, 139930, -1000, -1000,
	-1000, 2655, 1747, -1000, -1000, 2876, -1000, -1000, -1000, 1134,
	-1000, -1000, 111018, 111018, 111018, 111018, 111018, 1738, -1000, 47578,
	3767, -1000, -1000, 3501, 4248, 1935, -1000, 2052, -1000, 3364,
	3806, -1000, 3362, 1639, 1939, 363, 4170, 363, -1000, -1000,
	286, -1000, -1000, 146684, -1000, 2977, -1000, 139930, -1000, 2868,
	3402, 3408, 2055, 2654, 2999, -1000, 46947, 2897, 59567, 2671,
	213, -1000, -1000, 213, 213, 37386, -1000, -1000, 38648, 991,
	85694, 85694, 28987, 1441, 55781, 55781, 55781, 55781, 55781, 55781,
	55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781,
	55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781,
	55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781, 55781,
	2615, 55781, 1426, 55781, 55781, 55781, 55781, 2250, -1000, -1000,
	2207, 616, 2265, 758, -1000, -1000, -1000, 4080, 4080, 4080,
	1568, 1568, 1568, 160538, 160538, 653, 4247, 882, -1000, 55781,
	-1000, 128, 67721, 55781, 29613, -1000, 562, 14353, 2859, -1000,
	557, 30274, -1000, -1000, -1000, 31570, 696, 46286, 55781, 1148,
	160112, -1000, -1000, 1521, 4091, 27099, 3443, 3228, 753, 1029,
	1028, 34832, 34171, 33510, 32849, 1021, 1019, 55781, 55781, 55781,
	55781, 55781, 55781, 55781, 55781, -1000, -1000, 4110, -1000, 4091,
	-1000, -1000, -1000, -1000, 4091, 1440, 1438, 4091, -1000, 4091,
	4091, 9528, 9528, 45655, 45024, 44393, 60198, 43762, 55781, 32218,
	43131, 42500, -1000, 62091, 139930, -12, 4003, 139930, 55781, 352,
	-1000, 16274, -1000, 352, 352, 752, -45, 160112, 2951, 2951,
	65859, 2683, 2514, 2514, 2514, -1000, 1013, 21372, 1013, 124540,
	2533, 1013, 1013, 353, 404, 554, 63345, 3015, 123926, 870,
	751, 18, 16, 13, -1000, -1000, 12, 11, -1000, -1000,
	111018, 749, 29613, 28987, 345, 2257, -46, 2981, 2974, 2967,
	2966, -1000, 2964, 2622, -1000, -1000, -1000, 2067, -54, 1423,
	111018, 139930, 1977, -1000, -1000, -1000, -1000, 86318, -13, 86318,
	139930, 3766, 111018, -53, -1000, 152830, 6948, -66, -1000, 1302,
	343, 4091, -1000, -1000, -1000, -1000, -1000, 4245, 4244, -1000,
	1162, 746, 745, 398, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 744, 743, 743, 743, -1000, 467, 742, 455,
	741, 740, 738, -1000, -1000, -1000, -1000, -1000, 3361, 111018,
	139930, 1937, 84466, 101782, -72, 111632, 152830, -43, -1000, -1000,
	-1000, -1000, 111018, -1000, -1000, 111018, -1000, 75803, -1000, 139930,
	-1000, -1000, -1000, 4243, -1000, 111018, 111018, 2558, 3619, -1000,
	111018, -1000, 111018, 273, 3578, -1000, -1000, 139930, -1000, 111018,
	111018, -1000, 139930, 139930, 139930, 152830, 152830, 271, -1000, 111018,
	991, -67, 1300, -21, -1000, -1000, -1000, -1000, 1871, -1000,
	2085, -1000, -1000, -1000, -1000, -1000, -1000, 1572, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1123, -1000, -1000, -1000,
	-1000, 4096, 4087, -19, -1000, -1000, 28987, -1000, 2188, -1000,
	-1000, -1000, -1000, 139930, 139930, -1000, -1000, 139930, 139930, -1000,
	-1000, -22, 1812, 713, 1421, -1000, 94400, 2715, 3776, 4240,
	3029, 3752, 1838, -1000, 1732, 734, -1000, 3891, 99938, 3960,
	3972, 1476, -1000, 3360, -1000, -1000, -1000, 1043, 1934, 2035,
	1419, 1418, 99938, 2281, -1000, 85694, -1000, 3026, 3871, 1575,
	1565, 1575, 1575, 1553, 1551, -1000, 99938, 2034, 1417, 1414,
	1413, -1000, -1000, 1840, 1839, -1000, -1000, 125768, 1963, -1000,
	1409, 1407, 141158, 4025, 2596, 2480, 916, 2300, -1000, 1481,
	1406, 3359, -1000, -1000, -24, 3956, 3968, 1476, -1000, -1000,
	3352, 1402, -1000, 1156, -1000, -1000, -1000, 3865, 111018, 28987,
	1759, 1754, 1751, 2028, 1401, -14, -1000, 3950, 1834, -1000,
	4048, 91944, -1000, 2802, 2496, 1399, 2027, 1398, 3679, -1000,
	-1000, 2621, 2704, -1000, -1000, -1000, -1000, 1893, 3094, -1000,
	2883, 1561, 1561, 139930, -1000, 1792, -1000, 1636, 1636, 120856,
	139930, -1000, -1000, -1000, 3828, 3826, -1000, -1000, 1396, 1393,
	-1000, 1171, 6145, 3708, -1000, 152830, 1171, 1171, 2180, 3571,
	3115, 1923, -1000, 3176, 1008, 3174, -1000, -1000, -1000, 1008,
	-20, 86318, 139930, 342, -1000, 128, 55781, 55781, 128, 55781,
	128, -1000, 3924, 3570, 4002, -1000, 3569, 4239, 732, -1000,
	2900, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 727, 2765,
	3350, 139930, 121, -1000, 111018, -1000, 4001, 125154, -1000, 3568,
	152830, 2281, 2763, -1000, -1000, 101168, -1000, 3564, 2303, 596,
	2760, -1000, 772, 4237, 3552, -1000, 146070, -1000, 3797, 1542,
	3551, 1219, 786, 4000, -1000, 786, 76428, -1000, 139930, -1000,
	5, 8056, 93172, -69, -82, 553, -1000, 139930, 139930, 3718,
	2311, 2309, -1000, 1093, 69607, -1000, 69607, -83, -1000, -175,
	3172, 1703, 69607, -1000, 1074, -109, 1008, -1000, 1008, -1000,
	111018, 3406, -1000, 91944, 69607, -1000, 1074, 1074, 1074, 1074,
	-1000, -1000, -1000, -1000, 4236, 4234, 4233, 4232, -1000, -1000,
	1107, 111018, 139930, 111018, -1000, 3111, 1791, -1000, 326, -1000,
	152830, -1000, 152830, 139930, 111018, -1000, -1000, 1107, 139930, 1107,
	139930, 1107, 139930, 1107, 1107, -1000, -1000, -1000, -1000, -1000,
	128, -1000, -1000, 160112, -1000, 55781, -1000, -1000, 1727, 4230,
	1863, -1000, 3404, -1000, 3403, -1000, 52, -1000, -1000, 4101,
	2146, -1000, 4158, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4229, 3756, 160112, -1000, 88190, 2244, -1000, -1000,
	-1000, -1000, 111018, 111018, 111018, 111018, 139930, 3706, -1000, 139930,
	3703, 3705, 111018, -1000, 4167, -1000, -1000, 99938, -1000, 2868,
	3402, -1000, -1000, -1000, -1000, -1000, -1000, 1835, 2582, -1000,
	2922, -1000, 1770, -1000, -1000, -1000, 160112, 60829, -1000, -1000,
	160112, 2102, -1000, 58936, 58305, -1000, -1000, 1970, 111018, 2983,
	-1000, 2983, -64, -1000, 157639, 2920, 111018, -19, 38648, -1000,
	-1000, -1000, -1000, -1000, 1041, 913, 913, 1539, 1539, 1539,
	1539, 3919, 8784, 6210, 2975, 5991, 5991, 419, 419, 419,
	419, 419, 5991, 5977, 1568, 1568, 5977, 5977, 5977, 5977,
	5977, 1568, 1568, 1568, 5991, 5991, 5991, 1568, 160538, 160383,
	9062, 55781, 55781, 1391, 2203, 616, 8397, 55781, 8118, 8118,
	8118, 8118, -1000, 2252, -1000, -1000, -1000, -1000, 3348, 723,
	60198, 60198, -1000, -1000, -1000, -1000, 30922, 55781, -1000, -1000,
	-1000, -1000, 41839, -1000, -1000, 156507, -332, 552, -1000, 325,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 551, -51, 104, -1000, 55781, 55781, 55781,
	548, -1000, 324, 55781, 139930, -1000, 20312, 869, -145, -1000,
	-85, 1609, -1000, 55781, -1000, -1000, 1389, -1000, 1387, 1383,
	1382, -1000, 722, 547, -1000, 321, -1000, 2512, 721, 720,
	55781, -1000, -1000, -1000, -1000, -1000, 156185, -1000, -1000, 156086,
	-1000, -1000, 155764, -1000, -1000, 155665, -1000, -1000, -1000, -1000,
	-1000, 159679, 20267, 19541, 18740, 13351, 18196, 17709, -88, 545,
	-90, 544, 1038, 1036, 543, 542, 535, -91, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-98, 533, -1000, 3347, -51, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 532, -1000, 531, -1000, 159634, -51, 530,
	7891, -1000, 60198, 60198, 60198, 60198, 529, -1000, 157330, -1000,
	159246, 41208, 41208, 41208, 527, 159201, 55781, -51, -99, -1000,
	-101, -1000, -1000, -1000, -1000, 695, -107, -1000, -108, 1125,
	39928, 64609, 28987, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1125, 1125, 55781, -1000, 55781,
	2937, -1000, -1000, -1000, -1000, 2935, 2359, 2951, 65859, -1000,
	-1000, -1000, -1000, 124540, -1000, 4077, 3659, -1000, 124540, -1000,
	-1000, 139930, 688, -1000, 124540, 124540, 28987, 1013, -1000, -1000,
	139930, 686, 1013, 124540, 861, -1000, -1000, -1000, -1000, -1000,
	526, 78914, 104, 317, 28987, 1109, -1000, -1000, 3062, 3062,
	3062, 3062, 3062, 111018, -1000, -1000, 152830, 1381, -18, -74,
	3167, 3155, 3153, -20, 86318, -20, -81, 139930, -15, 4042,
	-252, -1000, 2396, -1000, 85694, -1000, 881, 1250, 28987, -1000,
	-1000, -1000, 719, -1000, 4091, 4091, -1000, 4091, 152830, 3346,
	347, 3146, 3142, 3136, -1000, 2618, 98710, 299, -72, 152830,
	-1000, 284, -113, -1000, -1000, 83840, 79528, -1000, 2520, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4228, -1000, 2558, -1000,
	-1000, 111018, 2558, 2558, -1000, 111018, 111018, 2558, -1000, 281,
	-1000, 278, -1000, -1000, -72, -1000, 1132, 38648, -1000, 1871,
	-1000, -1000, 1755, -1000, 2317, -1000, 1437, -1000, -1000, 38648,
	-1000, 3721, -1000, 1936, -1000, -1000, -1000, -1000, 2984, 139930,
	139930, 111018, -1000, 122084, 139930, -1000, 2509, 152830, -1000, 2757,
	145456, 2726, 144842, 85694, -1000, -1000, 716, 1060, 2919, 2918,
	1216, 139930, 139930, 2916, 144228, 143614, -1000, 4227, 139930, 2393,
	55781, 122084, 3863, 2542, 3088, 128, 128, -1000, 128, -1000,
	-1000, 715, 1510, 111018, 111018, 139930, 152830, 111018, 2147, -1000,
	-1000, -1000, -1000, -1000, 100552, -1000, -1000, 1575, -1000, -1000,
	-1000, 1575, -1000, 1575, 2281, 2138, 139930, 152830, 111018, 152830,
	143000, 2288, 142386, 2283, 2275, -1000, -1000, -1000, 2226, 2253,
	2472, 2025, 139930, -1000, -1000, -1000, -1000, -1000, 1621, -1000,
	916, 1377, 3324, 55781, 55781, 2453, 128, 128, -1000, 128,
	714, 28987, -1000, 1405, -1000, 3444, 139930, 4156, 141772, 4155,
	139930, 139930, 139930, 152830, 3795, 139930, -16, -1000, 1663, -1000,
	4048, -1000, 980, -1000, -1000, -1000, -1000, 139930, 139930, 152830,
	2616, 2703, 2612, 3091, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -109, -17, -100, -1000, 979, 973, -81, 2319, 139930,
	152830, -1000, 141158, 6145, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2425, 3076, 1229, 139930, 1458, -1000, -1000, 2013, 1372,
	1371, 99938, 2364, 2009, 2108, 152830, 69607, 1095, 69607, 3050,
	-1000, -1000, 26467, -1000, 160112, 160112, -1000, 160112, -1000, 83226,
	91944, 91944, 139930, -1000, 77052, 139930, 93786, 1077, 3547, 75187,
	-81, 1074, 1636, 3452, 1870, -100, 712, 139930, -1000, -1000,
	2281, 3545, 596, 2756, -1000, 152830, 1172, 3999, 3544, 707,
	4225, 4224, -1000, 111018, 2606, 2755, -1000, -1000, 140544, 3661,
	916, 139930, 1125, 65859, 2236, -1000, 72729, 1195, 139930, 2145,
	274, -1000, -1000, -1000, 29, 139930, -1000, 895, -1000, -1000,
	8056, 8056, 1074, 70231, -116, -1000, 313, 706, 968, 966,
	-1000, 3829, -1000, -175, -1000, 91944, 1093, 69607, 3321, -175,
	3134, 3316, -1000, -1000, 1130, 1074, 1554, 3129, 1074, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -5, -1000, 2005, 2095, 139930, -72, -72, -29, -1000,
	-1000, 306, -18, -1000, 1107, -1000, 1107, -1000, 1107, -1000,
	-1000, -1000, 160112, -1000, -1000, -1000, 1860, 1855, 139930, -1000,
	3400, -1000, 139930, -1000, -1000, 4221, -1000, -1000, 28987, 139930,
	111018, 28987, 111018, 3397, 3395, -1000, -1000, -1000, 139930, -1000,
	-1000, 139930, -1000, -1000, -1000, -1000, -1000, -1000, 1251, -1000,
	2102, 2577, -1000, 696, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2854, -1000, -1000, 37386, 1026, -1000, -1000,
	111018, -6, -19, 55781, 55781, 7729, 6787, 55781, 60198, 60198,
	-1000, 55781, 6731, -1000, -1000, -1000, -1000, -1000, 3310, 694,
	55781, 85694, 6748, 6050, -1000, 519, 17045, 5977, -1000, 55781,
	-1000, 680, -1000, 518, 40577, -1000, 158060, 92, -121, -1000,
	22019, -51, -122, -1000, -1000, 878, -1000, 3654, -1000, 55781,
	158926, 2823, 2185, 2093, 1897, 4091, 4152, 25835, -1000, 77676,
	1142, 2545, 155343, -1000, -1000, -1000, -1000, 85694, 85694, 55781,
	55781, -1000, 55781, 55781, 55781, -1000, -1000, -1000, 4091, 1017,
	-1000, -1000, -1000, 1017, -1000, -1000, 1575, -1000, 1575, -1000,
	55781, -1000, -1000, 3301, 55781, -1000, 85694, 85694, 60198, 60198,
	60198, 60198, 60198, 60198, 60198, 60198, 60198, 60198, 60198, 60198,
	60198, 60198, 60198, 60198, 60198, 60198, 60198, 60198, 2887, 60198,
	4070, 4070, 4070, 814, -1000, 3392, 3301, 55781, 55781, 85694,
	517, 514, 512, -1000, 55781, -51, -1000, -1000, 7480, 693,
	-1000, 2842, -1000, 139930, -1000, 3226, -1000, 55781, -1000, -127,
	-1000, 3015, -1000, -1000, 3226, 3226, -129, 160112, 65859, 65859,
	-1000, 689, 55781, 2930, -1000, -1000, 868, -330, -1000, 964,
	-1000, -1000, -1000, -1000, -1000, -1000, 963, -1000, 688, -1000,
	-1000, -1000, 305, 124540, 686, -1000, 139930, 124540, 866, -1000,
	-130, -1000, -1000, -131, -1000, 123926, 511, 28987, -1000, 1125,
	3796, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2961, -252,
	152830, 152830, 2002, 1994, 1991, -20, -81, 2570, -1000, 3243,
	4151, -1000, 4099, 877, 865, 303, 4091, 501, 497, 495,
	-72, 152830, 152830, 1990, 1988, 1960, 80768, 3299, 152830, -1000,
	-1000, -1000, 77052, 85694, -1000, 85694, -1000, -1000, -1000, -1000,
	2558, -1000, -1000, -1000, 273, -1000, -1000, -1000, -1000, 3059,
	-1000, -21, -1000, -1000, -1000, 55781, -1000, 1085, -1000, -1000,
	3773, 684, 1367, 1366, -1000, -139, -1000, 961, -1000, -1000,
	-1000, -1000, -1000, 3256, -1000, 3542, -1000, 2752, -1000, 1202,
	2751, 1776, -1000, 55781, 683, 3036, 682, 681, 4220, 2356,
	4214, 1217, 3527, 2558, 3522, 2558, -1000, -1000, -1000, 1052,
	-1000, 160112, -144, -1000, 2542, -1000, 678, 659, -1000, -22,
	1810, 711, 1364, 1128, -1000, -1000, 55781, 55781, 123312, -1000,
	546, 3782, -7, -1000, -1000, -1000, 1931, 1363, 1362, -1000,
	-1000, -1000, -1000, -1000, 2281, 1929, 1358, 1351, -1000, -1000,
	-1000, -1000, -1000, 2749, -1000, 139930, -1000, 3518, 139930, 3096,
	916, 139930, 3782, 3214, 1126, -1000, 3457, 3456, 1035, 139930,
	55781, 55781, 158768, 158493, -1000, 1122, -1000, -1000, 55781, -1000,
	-24, -1000, 1348, 3936, 2746, 111018, -1000, 2558, 3517, 1347,
	-1000, 1345, -1000, -1000, -1000, 3947, 3944, 1361, 1834, 91944,
	69607, 2492, -1000, 3921, 2568, 4088, 4048, 69607, -1000, -1000,
	-1000, 3462, 3007, 2697, -1000, -1000, -1000, 120856, 91944, 91944,
	-1000, -1000, -1000, 4088, -1000, -1000, -1000, -1000, 87564, -1000,
	-1000, 1171, 139930, 152830, 111018, 2023, -1000, -1000, 98710, 99324,
	139930, 3115, -72, 1008, -1000, 2778, 1008, 1095, 3297, -1000,
	2990, -1000, -1000, 1119, 492, -25, -1000, 1436, 4213, 478,
	-146, -26, 85694, -1000, -1000, -1000, -1000, 2726, 111018, 139930,
	1451, 3033, 139930, 139930, 3997, -1000, 2649, 718, 111018, 1015,
	-1000, 4077, -1000, -1000, -1000, 139930, 39928, 120856, -1000, 3922,
	111018, 3995, 3514, 1109, 111018, 128, 111018, 4127, -1000, -1000,
	3994, 111018, 3513, 2605, 2745, 2892, 916, 92558, 1109, 2540,
	-33, -1000, 2145, 39279, 3777, -152, -1000, -1000, -1000, 1125,
	76428, 65859, 55781, 4212, -166, -1000, -1000, -1000, -1000, -1000,
	91944, 1074, 139930, 139930, 4210, 91944, 91944, 91944, -27, 658,
	-1000, 958, 956, 954, -1000, -1000, -1000, -1000, -1000, -1000,
	953, 952, 951, 950, -1000, -1000, 1093, -1000, -1000, -175,
	69607, 1093, 69607, 128, -1000, 2559, -1000, 111018, 69607, -1000,
	25203, 139930, 3111, -1000, 86932, -1000, -1000, -1000, -1000, -1000,
	1107, 4149, -81, -1000, -1000, -1000, -1000, 2467, 2670, 2467,
	2084, 2079, -1000, -1000, -1000, 2561, -1000, -1000, -1000, -1000,
	2997, 3779, 28987, 3901, 8118, 55781, 55781, 516, 710, 650,
	8118, 55781, 55781, 85694, 9791, -168, 55781, 55781, -1000, 55781,
	862, 160112, -1000, 4148, 55781, 477, 476, -1000, -1000, -1000,
	4089, -1000, -1000, -1000, 160112, 55781, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 474, -1000, 122, -1000, -1000, -1000, 149140,
	-1000, 55781, 473, 3861, -1000, 471, 465, 15100, 10314, 155244,
	154922, 154823, 447, -1000, -1000, 445, 444, 160112, 3392, 160112,
	-1000, -1000, 1221, 1221, 1532, 1532, 1532, 1532, 4070, 598,
	1083, 348, 494, 494, 494, 838, 814, 814, 494, 494,
	494, 814, 3296, 2881, 654, 469, -1000, -1000, 160112, 160112,
	443, -1000, -1000, -1000, -51, 441, 7480, -1000, -1000, 3222,
	3859, 160112, -1000, 65859, 3222, 3222, -1000, -1000, 2359, 139930,
	160112, 65859, -1000, 3659, -1000, 23301, 22663, -1000, 28987, -1000,
	-1000, -179, -1000, 85694, -1000, -1000, -1000, 4077, -1000, 78914,
	-1000, -1000, 105, -1000, 3796, -1000, 949, -1000, -1000, 91944,
	91944, 4204, 4203, -1000, 4147, 4146, 2481, 4145, 3062, -1000,
	-252, -155, 139930, 139930, 139930, -1000, 2567, -1000, 859, 4202,
	874, 28987, 440, -1000, -1000, -1000, -72, -72, 139930, 139930,
	139930, 3295, 111018, 139930, 1957, 152830, -72, -1000, -1000, -1000,
	-1000, -1000, -1000, 3716, 160112, 3390, 3207, 3202, 139930, 139930,
	-1000, 122084, 38648, 1705, 122698, 139930, 3502, -1000, 3499, -1000,
	1216, 2849, 154489, 66483, -1000, 66483, 139930, -1000, -1000, -1000,
	-1000, 2270, 1647, 4201, 1266, -1000, 3818, 139930, -1000, 139930,
	-1000, -1000, -1000, 122084, -1000, 139930, 139930, 111018, 139930, -1000,
	152830, 3469, -187, 160112, -28, -1000, 947, -1000, 1546, -1000,
	24571, 139930, 152830, 111018, 139930, 152830, 111018, 3488, 1193, 139930,
	-1000, 3486, 139930, 1192, -1000, -1000, 139930, 2491, -1000, -1000,
	3455, -1000, 160112, 158448, 128, 55781, 3468, -189, 28987, -1000,
	4144, 4142, 3481, 3822, -1000, 139930, 4141, 139930, 111018, 3715,
	-1000, -1000, -1000, -1000, 946, 944, 942, 939, 935, 4047,
	120856, -1000, 1104, 139930, -1000, 3003, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1915, 1338, 1336, 2603,
	2602, 2565, -29, 2364, 1095, -30, 652, -1000, 1095, -1000,
	91944, 69607, 4199, 2136, 77052, 55781, 55781, -1000, 3024, -1000,
	117778, 93786, 2595, -1000, -1000, 651, 139930, 139930, 649, -1000,
	128, -1000, 4198, 122084, 648, -1000, 2551, -1000, 855, -1000,
	-1000, 268, -192, 152830, 2281, 128, 111018, -1000, 596, 1092,
	596, 439, -31, -1000, 3652, 1212, 28987, 111018, 3478, 2895,
	916, 92558, -1000, 1542, 2999, -1000, -32, -1000, 797, 128,
	2540, -1000, -33, 160112, -1000, 934, 432, -1000, 3714, -1000,
	-1000, -197, -1000, -1000, 4331, 4331, 91944, 69607, 91944, 91944,
	91944, 69607, 91944, -1000, 1093, 3993, -1000, -175, -1000, 2728,
	1074, 1074, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28987, 1900, -1000, 636, 635, -1000, -1000, -1000, -1000, 3779,
	8118, 8118, 55781, 55781, 55781, 8118, 9791, -198, -1000, 8118,
	8118, -51, -1000, -1000, 158060, -1000, -1000, -1000, 160112, -1000,
	23939, 2475, -1000, 154400, -1000, 37386, -1000, -1000, 55781, 55781,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60198, 3290,
	634, 85694, -1000, -1000, 428, 1121, 55781, 57674, 3015, 1121,
	1121, -1000, -200, -1000, -1000, -1000, 4077, -1000, 4077, 105,
	-1000, 139930, -1000, -1000, -1000, 28987, -1000, 91944, -1000, -1000,
	-1000, -1000, -1000, 4197, 4196, 2692, 4195, 4194, -1000, -1000,
	-1000, 3449, -118, -119, -171, -1000, 872, -1000, 4193, -1000,
	-1000, 255, 247, 211, 152830, 3289, 206, 3110, 3107, -72,
	-1000, 128, -1000, -1000, -1000, -1000, -1000, -1000, 3095, 3989,
	-1000, 2243, -1000, 139930, 139930, -1000, 139930, -1000, 28987, 139930,
	3203, 1496, -1000, 1060, 2912, 629, 60198, 1240, 111018, 1086,
	3141, 3100, -1000, 4018, 3858, 3132, -206, -1000, 139930, 55781,
	139930, -212, -219, 2673, -1000, -1000, 1239, 1473, 55781, 1236,
	-1000, -1000, -1000, 85694, 628, 2558, 2558, -1000, -220, -221,
	-1000, -1000, -1000, 55781, 1332, 139930, 38017, -1000, 4192, 3782,
	-1000, -1000, -1000, -1000, -1000, -1000, 139930, 139930, -1000, -1000,
	-1000, 139930, 3782, 139930, -1000, 55781, -1000, 157758, 55781, 1331,
	-1000, -1000, -1000, 4139, 2558, 28987, 2558, -1000, 2558, 3822,
	1264, 91944, 55781, 1676, 69607, 69607, -1000, -1000, -1000, 2637,
	-1000, -1000, 139930, 152830, 111018, 1938, 1938, 3272, -1000, -1000,
	-1000, 2492, 2492, -1000, -34, 1095, -1000, 1795, -1000, 160112,
	160112, 2474, 4191, -1000, -1000, -1000, -1000, 2911, -1000, -1000,
	-1000, 139930, 2909, 3160, 66483, 626, 624, 139930, 1082, -1000,
	-222, 93786, 1077, 1071, -1000, 74571, -1000, -1000, -1000, -1000,
	596, 3986, -1000, 3037, 3980, -1000, 4137, 621, 620, 139930,
	2593, 619, 28987, 3765, 916, 92558, -1000, 3661, 2145, -1000,
	2714, 139930, 3750, -1000, 2999, 616, 1074, 615, 1074, -1000,
	-227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1442, 1093, -35, -1000, 1069, 1055, -1000, -1000, -1000, -1000,
	111018, 111018, 55781, 55781, -1000, 8118, 8118, 8118, -1000, 420,
	-1000, -1000, 2540, 3854, -1000, -37, 154155, 153974, 2442, 60198,
	85694, -229, -1000, -1000, 139930, 160112, -39, -1000, 160112, 613,
	610, 574, -1000, -1000, -1000, 851, 815, -1000, -1000, -1000,
	-1000, 4190, -1000, -1000, -1000, 152830, 152830, 152830, 4188, -1000,
	152830, 152830, 152830, -72, 152830, 152830, 1909, 1908, -1000, 121470,
	139930, -1000, -1000, 1776, 1726, -1000, -1000, 139930, 2742, -1000,
	-1000, -1000, 1097, 55781, 469, 60198, 609, 55781, -1000, 608,
	607, 3979, 3696, -1000, 3023, 3303, 2123, 66483, -1000, 3779,
	-1000, 153640, -1000, 1211, 2191, -1000, -1000, -1000, -1000, 160112,
	60198, 3822, 66483, -1000, -1000, 606, 605, 160112, 604, 933,
	3287, -1000, -1000, -1000, -1000, -81, -81, -1000, -1000, 160112,
	128, 160112, 603, 3936, -1000, -1000, -1000, -1000, 2558, 111018,
	-1000, 160112, -1000, -1000, -1000, -1000, 930, -1000, -1000, -1000,
	1325, -1000, -1000, -1000, -1000, -1000, 4187, 3286, 98710, -1000,
	-238, 2249, 85694, -1000, 1077, -1000, -1000, 2595, 601, -1000,
	1070, 2828, 2828, -239, 66483, 66483, -240, 2589, 3022, -1000,
	418, 3977, 1071, -1000, 4068, -1000, 1125, -1000, 3969, 128,
	3712, -1000, 128, -1000, 4127, 66483, -1000, 111018, 66483, 2592,
	2380, 2867, 92558, -1000, 2892, -1000, -1000, -241, 139930, 2145,
	-1000, -1000, 91944, -1000, -1000, 4113, -1000, 2728, -1000, 139930,
	-1000, 139930, -1000, -1000, -246, -249, -1000, 2314, 55781, 37386,
	-1000, -1000, 2442, -254, -1000, -40, -1000, 3967, 57674, 4183,
	4182, 4177, -1000, -1000, -1000, -252, -252, -252, -1000, -72,
	-72, -72, -72, -72, 139930, 139930, -1000, 2237, -1000, 2726,
	-1000, -1000, 3475, -1000, 3220, 600, 153492, 469, 2850, 139930,
	153447, 2281, 2281, -1000, 3966, 3292, -1000, -1000, 2453, 599,
	-1000, -1000, -1000, -1000, 1026, 139930, 1070, 3219, 111018, 469,
	1214, -255, 2467, 2467, 55781, 36755, 2484, -1000, 55781, -1000,
	-1000, 3822, 69607, 152830, -1000, 152830, 2590, -1000, 3262, 7576,
	-1000, 2589, 139930, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1211, -257, -260, -1000, -1000,
	3813, -1000, 3711, 3024, 128, -1000, -1000, -1000, 128, -1000,
	4176, 1092, 415, -263, 1212, -265, 111018, 2289, -1000, 916,
	-1000, 2895, 1125, 3668, -1000, -268, -1000, -1000, -1000, -271,
	-274, -1000, -1000, 414, 57043, 57043, 57043, -51, -64, -1000,
	139930, 597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 186,
	183, -1000, -1000, 3451, 1011, -1000, 918, 2114, 403, 1238,
	94, 31, -1000, -1000, -1000, 3132, -1000, 139930, -1000, -1000,
	-1000, 1011, 596, -1000, 55781, 1211, -277, -1000, 1191, -284,
	-1000, 1190, -286, -1000, 3284, -1000, -287, 2558, -1000, -252,
	271, 1938, 1089, 3920, 2537, 7576, -1000, 4126, 92558, -1000,
	-1000, -1000, 2863, -289, -1000, -1000, 2123, 1211, 2453, 2712,
	-1000, 2474, 1082, -1000, -1000, -1000, -1000, 1211, 595, 2123,
	594, 1629, 916, -1000, -1000, 1575, 3765, 3664, 1491, 1074,
	-1000, -1000, -1000, 3494, -1000, 61460, 2686, 2072, 157251, 3494,
	3494, -1000, -1000, 152830, 152830, 139930, 1070, 3884, -1000, 997,
	995, 1685, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1125, -295, -1000, 2850, 160112, 1070, -1000, 2467, 3090, -1000,
	2467, 3271, -1000, 2479, -1000, -1000, -1000, -1000, 3264, -1000,
	2029, 4043, -1000, -1000, 3952, 55781, -1000, -1000, -1000, -1000,
	-1000, -1000, 1070, 139930, 2453, 2123, 1070, 2033, 1943, 4174,
	1077, 2589, 2123, 66483, 2453, 66483, 2420, -1000, 139930, -1000,
	2380, 1471, -1000, 1828, -1000, -1000, 2032, 4012, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -72, -72, -1000, -1000, 921,
	-1000, 3684, -1000, 1235, 2278, 2278, -1000, -1000, 918, -1000,
	-1000, 578, -1000, 577, -1000, 152830, 2550, -1000, -1000, -1000,
	160112, -1000, -1000, 1070, 2453, 1125, -1000, 4173, -1000, 2589,
	-1000, 2453, -297, 1070, -298, 2501, -1000, -1000, -81, 2289,
	-1000, 1823, 76428, 2056, -1000, -1000, 2528, 56412, 55781, -1000,
	4052, -1000, -1000, 2942, -1000, 3132, 55781, 55781, 271, 73957,
	20601, 1125, 1070, 1465, -1000, 2863, 1070, 1211, 1125, 2123,
	1895, 916, 1629, 76428, -273, -1000, -1000, -1000, 160112, -1000,
	-1000, -1000, -1000, -300, -307, -1000, -100, 120856, -315, -1000,
	-1000, -1000, 1465, 1125, -1000, 1153, -1000, -1000, 1125, 2123,
	1465, 2453, -1000, -1000, 2226, 152830, 2420, -273, -1000, 2453,
	1324, -313, -1000, -1000, 1465, -1000, 1465, 2453, -1000, 1070,
	-1000, 1895, -1000, -1000, -1000, 569, -1000, -1000, -1000, 1070,
	1125, -1000, 55781, 1125, 1465, -316, 1465, -1000, 2453, -1000,
	-1000,
}

var sqlPgo = [...]int16{
	0, 5119, 5117, 13, 5116, 5115, 5112, 5109, 5108, 5107,
	5106, 5105, 5102, 5100, 5099, 5098, 166, 5096, 5095, 5093,
	5091, 5090, 5089, 5087, 5084, 5083, 5082, 5073, 5070, 5068,
	5066, 5065, 5064, 5063, 5062, 5061, 5060, 5058, 5057, 5050,
	5045, 5044, 5034, 5032, 5027, 5026, 5024, 5022, 5017, 5016,
	5015, 5014, 5013, 5012, 5011, 5009, 5008, 5007, 5006, 5005,
	5002, 5001, 4998, 4997, 4991, 4990, 4989, 4988, 4986, 4985,
	4983, 4982, 4980, 4979, 4977, 4973, 4972, 4969, 4968, 4967,
	4965, 4960, 4959, 4958, 65, 4957, 4954, 4952, 4947, 4946,
	4945, 4943, 4942, 4941, 4940, 4939, 4938, 4934, 4930, 4929,
	4927, 4926, 4924, 4923, 4921, 4917, 4916, 79, 4913, 326,
	4912, 4911, 4910, 4908, 4907, 4906, 4905, 4903, 4902, 4900,
	4899, 4897, 4894, 4891, 325, 4889, 17, 195, 4885, 4884,
	22, 4883, 4882, 323, 4881, 4880, 4878, 4877, 4875, 332,
	4873, 4872, 4870, 4869, 4868, 362, 4867, 4866, 4865, 4864,
	4862, 4860, 97, 153, 4856, 4855, 2017, 4851, 4850, 4843,
	4842, 4840, 4838, 4837, 304, 307, 4836, 4835, 4834, 302,
	209, 4833, 322, 4832, 4829, 4828, 4827, 4825, 4822, 4821,
	4818, 4816, 4815, 4813, 4812, 4811, 4810, 4808, 4807, 4805,
	4804, 4803, 4802, 4801, 4799, 4798, 4797, 4796, 4795, 4794,
	4793, 4792, 4791, 4790, 4789, 4788, 4787, 4786, 4784, 4783,
	4782, 4781, 4778, 4777, 4773, 4772, 301, 260, 149, 4771,
	4769, 4768, 4767, 4766, 319, 318, 4765, 4764, 4763, 4761,
	4754, 3917, 4751, 4750, 4748, 4747, 4746, 4745, 4741, 4740,
	4724, 140, 1, 62, 4717, 4715, 109, 107, 110, 105,
	120, 124, 4712, 4710, 141, 4707, 155, 134, 4704, 142,
	135, 33, 60, 265, 300, 7357, 295, 4698, 4697, 4696,
	292, 235, 4689, 288, 4687, 4686, 4685, 4683, 4680, 4673,
	89, 69, 251, 4672, 169, 4670, 4668, 167, 202, 220,
	214, 210, 207, 182, 73, 123, 112, 81, 58, 16,
	94, 257, 28, 254, 2, 7, 313, 4667, 309, 15,
	171, 11, 45, 4666, 4665, 4664, 4656, 4485, 129, 4655,
	317, 298, 200, 4654, 4651, 4650, 572, 4649, 4648, 66,
	282, 218, 116, 165, 139, 156, 4647, 181, 204, 43,
	4646, 184, 83, 4644, 4641, 119, 113, 11426, 10830, 4635,
	4631, 162, 104, 132, 5185, 258, 228, 242, 201, 152,
	196, 198, 4625, 208, 4624, 175, 178, 211, 61, 4620,
	108, 4616, 3971, 92, 212, 187, 7321, 4615, 4613, 4610,
	117, 4609, 126, 4608, 4606, 85, 29, 4, 3, 176,
	49, 42, 20, 4605, 37, 151, 59, 30, 4603, 39,
	4602, 4601, 4599, 4598, 64, 4597, 80, 189, 4595, 4591,
	328, 4590, 101, 71, 36, 4580, 46, 270, 4579, 277,
	159, 4575, 4574, 227, 232, 236, 219, 267, 4569, 82,
	283, 4568, 4567, 4566, 4565, 4564, 330, 160, 12, 158,
	4557, 4556, 179, 4555, 70, 289, 237, 4553, 74, 4552,
	4551, 215, 63, 170, 327, 188, 276, 148, 281, 231,
	284, 4548, 4543, 4540, 226, 4535, 4531, 273, 194, 4530,
	4524, 268, 334, 114, 56, 14, 206, 100, 287, 102,
	234, 191, 4520, 247, 172, 4519, 180, 4514, 111, 4510,
	333, 221, 263, 55, 8, 32, 127, 130, 4505, 10,
	286, 192, 249, 147, 4504, 9334, 2809, 3552, 278, 4500,
	177, 150, 96, 157, 190, 316, 99, 4499, 4498, 4592,
	4497, 4495, 4494, 4490, 229, 4489, 4487, 250, 183, 197,
	4486, 164, 217, 4484, 125, 90, 67, 38, 143, 103,
	320, 144, 274, 223, 299, 4483, 4481, 4477, 225, 4476,
	98, 146, 248, 4475, 246, 306, 78, 4474, 308, 4473,
	186, 2692, 88, 185, 4472, 272, 4471, 4470, 4468, 4467,
	4462, 4461, 4460, 2687, 285, 4459, 4458, 4457, 57, 241,
	4456, 238, 203, 279, 77, 75, 233, 122, 1262, 138,
	2607, 243, 44, 5, 4455, 76, 4454, 3065, 72, 4452,
	0, 16055, 11051, 14838, 4450, 4449, 15110, 4448, 4819, 4447,
	4446, 4445, 259, 95, 4444, 4443, 4440, 145, 4439, 106,
	4438, 4437, 91, 4432, 31, 24, 25, 35, 40, 310,
	262, 4431, 4430, 52, 168, 26, 4429, 321, 280, 4428,
	4427, 4426, 4424, 118, 4420, 51, 4418, 53, 4417, 4415,
	54, 21, 41, 4414, 4413, 252, 193, 3851, 199, 174,
	4412, 137, 4411, 4410, 296, 93, 161, 4409, 4408, 312,
	255, 256, 121, 4406, 303, 4405, 239, 4404, 84, 34,
	4403, 4402, 294, 131, 128, 68, 297, 163, 48, 4399,
	4398, 4397, 4396, 224, 4395, 4394, 4393, 4392, 4388, 136,
	173, 4387, 87, 4386, 4380, 4378, 50, 253, 222, 4373,
	6, 4371, 4370, 4368, 271, 269, 311, 213, 266, 4367,
	4365, 205, 4362, 4361, 4360, 305, 4359, 4358, 3914, 315,
	4357, 47, 4355, 4354, 4353, 19, 4351, 4350, 245, 3774,
	4349, 4348, 9, 4333, 230,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 14,
	14, 10, 10, 10, 10, 11, 11, 11, 11, 11,
	63, 63, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 20, 20,
	20, 20, 20, 20, 42, 44, 43, 37, 37, 38,
	38, 39, 40, 40, 45, 47, 46, 48, 49, 49,
	50, 50, 50, 13, 13, 13, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 23, 23, 51, 51, 24,
	24, 53, 53, 25, 25, 54, 54, 669, 669, 669,
	670, 670, 671, 671, 671, 28, 56, 58, 58, 476,
	476, 21, 22, 22, 22, 22, 672, 672, 672, 672,
	41, 29, 57, 34, 34, 34, 34, 34, 244, 244,
	244, 244, 27, 27, 52, 52, 290, 290, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 668, 668,
	292, 292, 291, 277, 277, 278, 278, 279, 279, 673,
	673, 293, 293, 293, 294, 294, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 562, 562, 562, 593,
	593, 593, 593, 595, 595, 720, 720, 721, 721, 721,
	721, 721, 155, 155, 450, 450, 450, 72, 72, 72,
	72, 72, 658, 658, 246, 246, 246, 248, 248, 247,
	247, 247, 247, 247, 247, 247, 247, 96, 96, 97,
	97, 285, 285, 284, 284, 284, 284, 284, 284, 284,
	679, 679, 678, 716, 716, 677, 677, 680, 680, 680,
	245, 245, 245, 93, 93, 114, 114, 151, 151, 151,
	151, 151, 151, 151, 151, 152, 152, 153, 153, 689,
	689, 689, 249, 249, 249, 251, 251, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 256, 19, 19, 134, 134, 134, 134, 134,
	134, 134, 129, 129, 597, 597, 598, 598, 240, 240,
	241, 241, 241, 241, 242, 242, 243, 243, 243, 87,
	87, 253, 253, 255, 255, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 75, 75,
	75, 75, 75, 76, 76, 76, 76, 76, 76, 77,
	77, 77, 77, 77, 77, 78, 78, 85, 85, 85,
	85, 85, 85, 85, 85, 218, 218, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 92, 92, 92, 92, 103, 690, 690, 691,
	691, 709, 695, 695, 696, 696, 699, 699, 699, 700,
	700, 700, 700, 700, 708, 708, 708, 708, 708, 702,
	701, 703, 703, 704, 704, 706, 706, 706, 706, 706,
	707, 707, 707, 707, 707, 707, 707, 707, 707, 707,
	707, 707, 707, 707, 707, 707, 707, 694, 710, 711,
	711, 712, 712, 713, 713, 713, 122, 122, 715, 715,
	714, 714, 697, 697, 698, 698, 67, 705, 705, 723,
	723, 68, 69, 70, 71, 692, 692, 722, 722, 722,
	722, 722, 722, 722, 722, 722, 722, 722, 722, 722,
	722, 722, 722, 722, 724, 724, 725, 725, 726, 726,
	726, 726, 726, 726, 726, 726, 726, 726, 726, 726,
	726, 726, 726, 726, 726, 726, 726, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 104, 104, 408, 408, 371,
	371, 105, 105, 105, 106, 106, 107, 107, 89, 89,
	89, 655, 655, 656, 662, 727, 727, 553, 553, 552,
	552, 109, 109, 449, 449, 110, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 120, 120, 120, 120, 120,
	121, 121, 121, 118, 118, 118, 115, 115, 115, 113,
	113, 113, 119, 119, 119, 661, 357, 357, 117, 117,
	117, 116, 116, 116, 424, 424, 425, 427, 426, 123,
	123, 123, 123, 372, 124, 124, 124, 124, 124, 124,
	124, 124, 127, 127, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 555, 555, 5,
	5, 283, 283, 282, 282, 282, 282, 6, 6, 6,
	288, 288, 287, 286, 125, 125, 125, 517, 517, 130,
	130, 130, 465, 465, 131, 131, 131, 131, 131, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 665, 665, 417,
	417, 320, 320, 320, 320, 143, 143, 143, 143, 144,
	144, 144, 144, 145, 145, 226, 226, 161, 161, 161,
	161, 160, 160, 160, 160, 160, 160, 160, 160, 79,
	79, 79, 80, 80, 81, 81, 82, 82, 83, 83,
	84, 84, 84, 84, 84, 164, 164, 33, 33, 33,
	33, 165, 165, 717, 717, 167, 163, 163, 163, 163,
	163, 163, 163, 162, 162, 166, 166, 166, 166, 168,
	170, 170, 170, 170, 170, 169, 169, 169, 169, 169,
	171, 171, 587, 587, 435, 435, 585, 585, 609, 609,
	586, 586, 378, 378, 378, 378, 378, 379, 379, 379,
	596, 596, 596, 596, 596, 596, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 227, 227, 227, 228, 228, 233,
	233, 234, 234, 234, 235, 235, 235, 232, 232, 232,
	229, 229, 230, 230, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 238, 238, 236, 236, 237, 237,
	729, 729, 728, 728, 239, 239, 239, 239, 239, 199,
	199, 199, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 436, 436, 202, 202, 202,
	186, 186, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 252, 252, 252, 252, 252, 179, 179, 179, 179,
	179, 179, 179, 179, 180, 180, 180, 174, 174, 188,
	188, 188, 188, 188, 181, 181, 182, 182, 182, 183,
	183, 183, 183, 210, 210, 185, 185, 185, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 175, 175, 175,
	175, 190, 190, 190, 190, 472, 472, 472, 216, 216,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 213, 213, 213, 213,
	213, 213, 681, 681, 682, 682, 682, 206, 206, 206,
	206, 206, 206, 533, 533, 200, 200, 200, 200, 205,
	205, 205, 205, 208, 208, 208, 208, 455, 455, 197,
	197, 197, 198, 198, 198, 203, 203, 215, 204, 409,
	409, 201, 201, 207, 207, 207, 207, 209, 209, 209,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	177, 177, 177, 177, 178, 178, 178, 178, 211, 211,
	196, 196, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 730, 730, 192, 192, 192, 191, 191,
	191, 191, 194, 194, 195, 195, 195, 195, 195, 195,
	195, 193, 184, 214, 663, 663, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 660, 660, 660, 660, 660,
	664, 664, 135, 135, 135, 135, 135, 135, 135, 146,
	146, 146, 146, 146, 146, 146, 149, 149, 136, 136,
	136, 136, 136, 136, 136, 139, 139, 137, 137, 137,
	137, 138, 138, 98, 98, 98, 98, 98, 18, 18,
	18, 99, 99, 311, 311, 261, 261, 261, 396, 396,
	262, 262, 386, 386, 386, 386, 257, 257, 258, 258,
	259, 260, 260, 100, 100, 731, 731, 731, 674, 674,
	674, 675, 675, 675, 675, 675, 675, 380, 380, 381,
	381, 497, 497, 497, 497, 497, 384, 384, 384, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 394, 395,
	395, 387, 387, 393, 392, 392, 391, 391, 390, 390,
	388, 389, 389, 389, 398, 398, 397, 400, 400, 399,
	496, 618, 618, 620, 620, 620, 620, 620, 620, 620,
	622, 622, 622, 622, 622, 622, 622, 622, 622, 622,
	622, 622, 622, 622, 622, 622, 622, 473, 473, 732,
	732, 733, 734, 616, 616, 616, 617, 612, 612, 613,
	613, 613, 613, 613, 382, 382, 383, 383, 383, 383,
	614, 615, 415, 415, 537, 619, 619, 621, 621, 623,
	735, 735, 735, 735, 735, 735, 736, 736, 736, 495,
	495, 494, 494, 493, 493, 406, 406, 624, 624, 624,
	624, 625, 625, 625, 625, 625, 628, 627, 626, 626,
	626, 626, 626, 102, 102, 102, 452, 452, 451, 451,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 223, 223,
	323, 323, 323, 95, 95, 95, 15, 15, 15, 15,
	15, 15, 15, 338, 338, 16, 16, 16, 16, 676,
	676, 676, 101, 101, 101, 101, 101, 101, 404, 404,
	404, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 667, 667, 666,
	666, 324, 324, 738, 738, 108, 108, 108, 108, 108,
	108, 108, 108, 556, 556, 557, 557, 94, 94, 94,
	94, 94, 474, 474, 471, 471, 470, 470, 414, 414,
	535, 535, 535, 536, 328, 328, 329, 329, 280, 280,
	280, 475, 475, 475, 36, 35, 26, 26, 30, 30,
	31, 31, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 32, 32, 60, 60, 60, 60, 61, 61, 61,
	61, 64, 64, 65, 65, 59, 59, 59, 59, 62,
	62, 55, 55, 66, 66, 66, 66, 66, 683, 685,
	685, 684, 684, 688, 688, 688, 688, 688, 688, 686,
	686, 359, 359, 687, 687, 718, 718, 719, 719, 142,
	142, 147, 147, 147, 147, 147, 148, 148, 148, 148,
	150, 150, 150, 150, 159, 159, 219, 219, 219, 219,
	219, 219, 219, 73, 73, 86, 86, 157, 740, 740,
	740, 158, 158, 158, 220, 220, 220, 220, 221, 221,
	222, 222, 739, 739, 321, 321, 490, 490, 491, 491,
	741, 741, 492, 492, 492, 492, 492, 314, 313, 315,
	315, 316, 316, 91, 91, 91, 302, 302, 301, 304,
	304, 303, 305, 305, 306, 306, 299, 299, 599, 599,
	308, 308, 308, 309, 309, 295, 295, 296, 296, 297,
	297, 298, 298, 312, 312, 594, 594, 742, 742, 133,
	133, 133, 225, 225, 370, 370, 370, 483, 483, 483,
	407, 407, 335, 335, 489, 489, 489, 489, 489, 448,
	448, 448, 224, 224, 422, 422, 438, 438, 439, 439,
	549, 549, 440, 140, 140, 141, 141, 156, 156, 265,
	265, 263, 263, 263, 263, 263, 263, 263, 263, 270,
	270, 271, 271, 272, 272, 273, 274, 274, 274, 274,
	428, 428, 275, 275, 275, 264, 264, 264, 266, 266,
	266, 266, 266, 266, 266, 269, 269, 269, 269, 276,
	276, 276, 268, 268, 635, 635, 635, 637, 637, 639,
	639, 638, 638, 634, 634, 636, 636, 737, 737, 454,
	454, 454, 403, 405, 401, 401, 402, 402, 412, 412,
	410, 411, 411, 413, 413, 534, 534, 534, 281, 281,
	281, 445, 445, 445, 445, 446, 446, 479, 479, 477,
	477, 477, 477, 478, 478, 480, 480, 480, 481, 481,
	482, 482, 442, 442, 443, 443, 444, 444, 444, 444,
	513, 513, 267, 267, 267, 419, 419, 419, 420, 420,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 504, 504, 502, 502, 502, 502, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 539, 540, 540, 421,
	421, 541, 486, 486, 487, 487, 484, 484, 485, 485,
	488, 488, 653, 653, 653, 654, 654, 532, 532, 542,
	542, 542, 542, 542, 542, 528, 528, 529, 529, 530,
	530, 531, 531, 550, 551, 551, 458, 458, 458, 458,
	456, 456, 459, 459, 459, 459, 459, 457, 457, 543,
	543, 543, 543, 447, 447, 544, 544, 544, 544, 545,
	546, 546, 547, 547, 498, 499, 499, 558, 558, 558,
	558, 560, 418, 418, 418, 418, 418, 611, 610, 610,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 575, 575, 575, 575, 575, 575, 575, 561, 561,
	561, 561, 561, 565, 565, 565, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 566, 566, 571,
	571, 572, 572, 572, 567, 568, 573, 573, 573, 573,
	743, 743, 577, 577, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 563, 563, 563, 570, 570, 570, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 466, 466, 468, 468, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 507, 507, 507,
	507, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 629, 629, 629, 629,
	629, 629, 629, 629, 509, 509, 632, 632, 633, 633,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 640, 640, 641, 641, 643, 643, 644, 644, 645,
	646, 646, 646, 647, 648, 648, 642, 642, 649, 649,
	649, 649, 650, 650, 651, 651, 651, 651, 651, 652,
	652, 652, 652, 652, 519, 519, 520, 520, 526, 526,
	526, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 377, 377, 376, 325,
	325, 325, 325, 325, 325, 433, 433, 431, 431, 431,
	434, 434, 432, 432, 430, 430, 429, 429, 516, 516,
	514, 514, 518, 518, 460, 460, 576, 576, 576, 576,
	576, 576, 576, 576, 461, 461, 461, 469, 462, 462,
	463, 463, 463, 463, 463, 510, 511, 464, 464, 464,
	512, 512, 521, 525, 525, 524, 523, 523, 522, 522,
	500, 500, 501, 501, 441, 441, 744, 744, 437, 437,
	548, 548, 548, 548, 605, 605, 374, 374, 423, 423,
	373, 373, 365, 365, 366, 366, 366, 366, 416, 416,
	527, 527, 578, 578, 579, 579, 580, 580, 581, 581,
	582, 583, 584, 515, 515, 346, 345, 332, 333, 344,
	343, 342, 331, 334, 339, 340, 341, 336, 337, 353,
	352, 351, 300, 307, 358, 360, 360, 363, 363, 364,
	362, 361, 361, 348, 349, 350, 554, 330, 367, 367,
	368, 368, 368, 369, 369, 369, 369, 326, 326, 327,
	327, 354, 354, 355, 356, 356, 347, 347, 347, 317,
	317, 317, 318, 318, 319, 319, 592, 592, 589, 589,
	589, 590, 590, 590, 693, 591, 591, 591, 591, 588,
	588, 588, 588, 588, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 601, 601, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 603, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 608, 608,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 3,
	4, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 9, 7, 9, 5, 6, 8,
	7, 7, 9, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 6, 2,
	1, 4, 8, 7, 10, 9, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 8, 4, 2, 3, 10,
	3, 6, 4, 3, 1, 3, 4, 4, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 1, 3, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 3, 3, 3, 12, 3, 5,
	4, 1, 3, 3, 3, 3, 2, 4, 4, 4,
	1, 1, 2, 1, 4, 1, 0, 3, 3, 0,
	4, 6, 0, 6, 4, 4, 4, 5, 7, 6,
	8, 7, 9, 8, 2, 1, 3, 1, 3, 3,
	3, 0, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 1, 1, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 6, 3, 8, 5, 3, 12, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 6, 1, 3,
	2, 1, 3, 2, 1, 3, 5, 1, 2, 1,
	0, 6, 6, 6, 8, 1, 0, 4, 3, 3,
	4, 3, 4, 4, 4, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 10,
	5, 1, 3, 3, 1, 1, 0, 2, 0, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 4,
	3, 1, 2, 3, 2, 2, 2, 4, 6, 3,
	1, 2, 2, 7, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 7,
	4, 7, 8, 8, 9, 11, 11, 11, 6, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 10,
	13, 10, 13, 5, 8, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 4, 4, 3,
	4, 1, 1, 1, 1, 5, 4, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 3, 6, 8, 3,
	3, 3, 4, 8, 6, 4, 5, 5, 5, 5,
	3, 0, 1, 1, 1, 1, 4, 4, 3, 4,
	4, 3, 4, 4, 1, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 5, 7, 4, 2,
	6, 4, 3, 2, 3, 4, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 5, 6, 5, 5, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 6,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 3, 2, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 1, 1, 1, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 3, 6, 4, 2, 3, 5,
	5, 5, 2, 5, 5, 2, 2, 2, 0, 1,
	1, 3, 4, 11, 12, 10, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 6, 1, 3, 1, 2, 0, 1, 2, 3,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 3, 0, 4, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 2, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 1, 2, 3,
	0, 3, 0, 3, 0, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 2, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 15, 17, 3, 1, 0, 4, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 3, 0, 1, 3, 0, 3, 1, 3,
	1, 2, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 663, -3, -220, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -219, -227, -228, -229, -230, -239, -221, -222,
	-4, -72, -74, -88, -109, -111, -124, -134, -133, -135,
	-143, -151, -146, -129, -79, -156, -160, -172, -223, -224,
	-225, 33, 32, 107, 85, 166, 138, 148, 219, 418,
	470, 482, 435, 153, 458, 440, -166, -167, 504, -73,
	-86, -158, -157, 78, 139, 183, 322, 450, 53, 158,
	-7, -15, -33, -19, 30, 49, -75, -76, -77, -78,
	67, -95, -90, -104, -96, -89, -92, -93, -722, 110,
	-636, -112, -116, -150, -114, -726, 174, 240, -136, -137,
	-138, 400, -144, -145, 461, -147, -148, -149, 464, 175,
	-81, -80, 168, -263, -265, -163, -162, -164, -226, -173,
	-174, -175, -176, -177, -178, -180, -181, -183, -210, -184,
	-185, -186, -187, -188, -189, -193, -213, -190, -191, -192,
	-195, -194, -196, -201, -197, -198, -199, -200, -202, -203,
	-205, -206, -207, -208, -209, -211, -212, 510, -204, -214,
	-182, -215, 578, 527, 87, 474, 21, -8, -9, -10,
	-11, -12, -13, -14, -18, -17, -66, -5, -6, -20,
	-97, -91, -94, -98, -99, -100, -108, -101, -102, -103,
	-635, -113, -115, -118, -120, -121, -117, -119, -122, 459,
	634, -266, -264, 660, 639, 594, -179, -23, -28, -24,
	-25, -27, -29, -26, -30, -31, -32, -51, -56, -53,
	-54, -52, -55, -57, -58, -59, -60, -61, -62, -63,
	-64, -65, -35, -41, -42, -36, -37, -38, -39, -40,
	-43, -44, -45, -46, -47, -48, -49, -50, -21, -22,
	-34, -67, -68, -70, -69, -71, 621, 630, -269, -267,
	-268, -276, 496, 602, 550, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, -372, 2, -348, -354, -355, -356, -347,
	-317, -603, -608, 4, -600, -606, 182, 250, 360, 21,
	22, 24, 23, 25, 26, 27, 28, 30, 31, 41,
	43, 44, 45, 47, 48, 49, 50, 51, 52, 53,
	57, 59, 63, 64, 65, 66, 67, 68, 69, 73,
	78, 79, 84, 85, 86, 87, 88, 89, 90, 91,
	97, 94, 95, 96, 98, 99, 101, 103, 104, 105,
	106, 107, 108, 109, 111, 112, 113, 115, 116, 117,
	125, 126, 127, 128, 129, 131, 138, 132, 139, 142,
	136, 141, 137, 143, 144, 146, 147, 148, 151, 152,
	153, 155, 156, 157, 159, 160, 161, 163, 164, 166,
	167, 168, 171, 169, 172, 170, 173, 174, 175, 176,
	177, 180, 188, 189, 190, 195, 197, 198, 199, 201,
	202, 205, 206, 207, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 220, 224, 226, 227, 228, 229, 230,
	231, 232, 238, 239, 240, 242, 243, 244, 245, 246,
	251, 252, 253, 257, 259, 265, 266, 271, 267, 272,
	273, 275, 279, 280, 281, 282, 283, 284, 285, 287,
	289, 288, 293, 291, 295, 296, 299, 300, 301, 302,
	303, 304, 308, 309, 305, 310, 311, 313, 314, 317,
	315, 318, 319, 316, 320, 323, 324, 325, 326, 327,
	328, 329, 330, 331, 332, 333, 334, 321, 322, 337,
	335, 339, 340, 341, 342, 343, 358, 353, 354, 355,
	347, 348, 344, 349, 345, 346, 350, 351, 357, 352,
	362, 363, 364, 365, 368, 236, 258, 370, 371, 374,
	376, 393, 379, 380, 381, 384, 385, 388, 391, 392,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	405, 406, 408, 409, 410, 412, 413, 414, 416, 418,
	419, 421, 422, 423, 425, 426, 427, 428, 429, 430,
	431, 432, 434, 435, 437, 436, 438, 440, 442, 443,
	444, 450, 451, 458, 452, 454, 455, 456, 457, 459,
	460, 461, 462, 463, 464, 468, 466, 467, 469, 470,
	472, 473, 474, 475, 476, 478, 480, 481, 485, 486,
	489, 487, 507, 508, 530, 482, 483, 484, 488, 490,
	491, 492, 493, 495, 494, 499, 497, 498, 500, 501,
	502, 504, 506, 509, 510, 512, 513, 514, 515, 516,
	517, 518, 521, 523, 524, 525, 526, 527, 528, 549,
	529, 531, 535, 536, 537, 538, 532, 533, 548, 540,
	541, 542, 543, 545, 546, 551, 552, 553, 554, 555,
	556, 558, 559, 561, 569, 582, 570, 571, 572, 573,
	575, 578, 579, 580, 581, 567, 583, 584, 587, 588,
	592, 589, 593, 590, 591, 594, 596, 599, 600, 601,
	608, 606, 607, 609, 610, 612, 613, 611, 615, 616,
	617, 622, 623, 625, 626, 627, 37, 54, 55, 58,
	60, 62, 74, 75, 76, 80, 133, 134, 165, 178,
	179, 191, 208, 209, 221, 223, 233, 234, 235, 256,
	260, 261, 263, 269, 292, 367, 369, 386, 390, 407,
	411, 415, 417, 433, 477, 505, 519, 534, 539, 562,
	563, 564, 565, 574, 576, 602, 603, 604, 614, 624,
	-372, 2, -348, 377, -341, 2, -317, -317, 418, 29,
	2, 29, 406, 498, 553, 555, 2, -665, -417, 546,
	2, 29, -320, -317, 110, 219, 496, -341, 2, -665,
	219, -417, 26, 546, 2, -317, 2, 391, 177, 205,
	23, 28, 71, 82, 105, 151, 176, 200, -725, 393,
	426, 480, 500, 548, 559, 575, 2, 607, 314, 497,
	550, 250, 128, 580, 488, -676, 485, 486, 391, 424,
	472, 222, 595, -321, 2, 482, -317, 314, 2, 663,
	101, 79, 477, 501, -169, 2, 304, 570, -170, -171,
	-168, 562, -587, 488, 472, 337, -317, 663, 663, 663,
	29, -330, 2, -317, -330, 2, -231, 2, -330, -728,
	-238, -237, -236, 22, 451, 190, 285, 203, 241, 342,
	421, 201, 51, -231, 2, 550, 250, 488, 128, 546,
	-739, 2, 570, -739, 2, 663, 663, 2, 550, 397,
	607, 497, 128, 430, 250, 580, 49, 151, 28, 205,
	73, 556, 638, 488, -676, 635, 636, 314, 135, -658,
	2, -657, 4, -606, -600, -366, -365, 550, 556, 128,
	-356, -347, 652, -355, 663, 663, 663, 663, 2, 272,
	273, 428, 427, 501, 502, 29, 663, 663, 663, 663,
	663, 485, 177, 2, 176, -690, 23, 28, 71, 100,
	105, 135, 200, 393, 426, 500, 548, 552, 559, 575,
	-675, 529, 73, 488, -674, -676, 382, 314, 580, 151,
	-470, 128, 304, 217, 588, 555, 553, 586, 142, 259,
	591, 590, 663, 663, 663, -127, 2, 660, 33, 32,
	-126, -130, 153, 504, -256, 550, 264, 2, -317, 663,
	663, 663, 2, 272, 273, 485, 486, 29, 663, 663,
	203, -657, 546, 2, 663, 663, 663, 2, 29, 272,
	273, 485, 486, 264, 2, 73, 491, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 2, -217, 501, 529, 229,
	50, 49, 79, 29, 425, 84, 398, 129, 135, 160,
	581, 220, 546, 250, 251, 280, 100, 101, -472, 47,
	273, 73, 272, 486, -681, 485, -533, 551, 490, 498,
	545, 91, 285, 482, 570, 572, 110, 596, 473, 627,
	430, 431, 543, 444, 540, 305, 169, 204, 4, 128,
	337, 472, 503, 289, 288, 582, 562, 304, 481, 401,
	89, 663, -737, 2, 550, 570, 2, -739, 2, -739,
	2, -740, 570, 624, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, -264, -266, -265, 663, 663,
	663, 663, 663, 663, 663, -217, 501, 2, 79, 29,
	29, -410, -412, 585, 262, 162, 383, -263, -265, 2,
	-635, 582, 501, -585, 2, -505, -609, -507, 650, 651,
	643, 547, 72, -376, 359, 628, -519, 135, 586, 377,
	-608, -508, -521, 165, 393, 477, -434, 8, 9, 5,
	6, 7, -326, -509, -515, 577, 181, 366, -369, 664,
	10, 660, -632, -265, -520, 38, 223, 70, -589, -368,
	-327, -561, 263, -367, -347, -629, -630, 4, -600, -601,
	-590, -564, -572, -568, -569, -575, -317, -603, 82, 119,
	120, 118, 123, 122, 307, 306, 124, 121, 503, 595,
	71, 37, 233, 234, 269, 367, 235, 80, -631, 152,
	-602, 260, 261, 519, 55, 433, 191, 134, 133, 369,
	60, 58, 603, -573, 130, 562, 563, 564, 565, 208,
	209, 62, 178, 179, 390, 415, 539, 574, 576, 221,
	292, 46, 114, 204, 255, 237, 268, 270, 274, 294,
	297, 338, 356, 361, 387, 389, 471, 511, -743, 604,
	534, 74, 75, 196, -637, 436, -638, -341, -637, 663,
	663, 665, 663, -401, -403, -405, 2, 29, 149, 660,
	2, -538, 2, -539, -543, -265, 286, -542, 660, -540,
	658, -348, 378, -633, 478, -629, -630, -326, -347, -368,
	4, -600, -602, 662, -406, 660, 128, 488, 550, 83,
	250, 100, 176, 205, -465, 660, -317, 29, 377, 566,
	665, -665, -417, -402, 423, -517, 660, 377, 380, 203,
	380, -665, 64, 98, -715, 233, 2, -714, -354, 318,
	2, 2, 2, 2, 2, 233, -317, 550, 127, 284,
	2, 2, 2, 2, 2, 2, 2, -426, 233, 2,
	-424, -354, 607, -427, 233, 2, -424, -425, 233, 2,
	-424, -471, 2, 93, -331, 233, 2, -317, -357, 233,
	2, -352, -354, -363, 233, 2, -360, -317, -595, 233,
	2, -593, 4, -600, 124, 503, -505, 2, -156, 2,
	64, -317, 607, 2, 507, 2, 660, -169, 2, 76,
	570, 46, 501, -170, 2, -491, 2, -492, -313, -314,
	-315, -550, -316, 271, 422, 432, 631, 140, 359, 627,
	-717, 203, 642, 566, -585, -585, -585, -435, 662, -233,
	57, -330, -729, -728, -729, -583, 29, -578, 8, -579,
	650, 651, -583, -583, -729, -729, 2, 2, 2, 2,
	2, -490, -491, 2, -543, 233, -348, 2, -345, -588,
	4, -600, -606, -601, -607, -603, 29, 32, 33, 34,
	36, 38, 39, 40, 42, 61, 70, 71, 77, 81,
	83, 93, 100, 110, 118, 119, 121, 120, 122, 123,
	124, 135, 140, 145, 149, 150, 154, 158, 162, 181,
	183, 196, 200, 203, 219, 222, 225, 241, 254, 262,
	264, 286, 290, 298, 306, 307, 359, 366, 372, 377,
	378, 382, 383, 404, 420, 439, 465, 496, 503, 522,
	544, 550, 560, 566, 568, 577, 585, 586, 595, 597,
	605, 618, 619, 620, 621, -608, 82, 2, -543, 233,
	2, -351, 233, -543, -354, 2, -331, 2, -505, -669,
	558, 172, 452, 2, -373, 233, -348, -350, -354, -352,
	2, 485, -597, 2, -592, 10, -591, 5, 4, -600,
	-606, -601, 2, 2, -714, -505, 2, -508, 2, -519,
	29, -360, 2, -593, 233, 2, 29, 29, 607, 423,
	264, 566, 665, -423, -365, -366, -584, 4, 8, -416,
	-317, 662, -505, 2, -156, -139, 2, 196, -505, 233,
	2, -156, 233, 2, -505, 233, 2, -156, 233, 2,
	-317, 2, -677, 2, -716, -597, 233, 98, 233, -317,
	2, 205, -724, 480, 579, 318, 2, 2, 575, 2,
	105, 550, 127, 2, 2, 2, 2, 2, 2, 2,
	550, -336, 2, -317, 196, -552, 264, -360, 233, -361,
	2, 497, -738, 436, -593, 233, 2, 456, 607, -352,
	233, 2, -352, 250, 266, -331, 233, 2, 555, 553,
	555, 553, 203, 2, 264, 2, 264, 2, -544, 2,
	-545, -539, -546, 658, 378, -555, 2, -554, -591, 602,
	-127, 660, -127, 660, 501, 660, -597, -348, -348, -505,
	2, -156, -139, 2, -505, 2, -156, 2, -317, 2,
	-153, -597, -152, 660, 203, 596, -317, 2, -505, 2,
	-156, -139, 2, -505, 2, -156, 2, -256, 196, 2,
	128, 550, -217, 2, 196, 597, 2, 8, 2, 241,
	-252, -597, 490, 188, 431, 600, 2, 507, 2, 508,
	79, -472, 627, 79, 203, 2, 203, 2, -455, 2,
	621, 423, 203, 2, 2, -663, 2, 377, 220, 203,
	2, 203, 2, 203, 2, 203, 2, 203, 2, -216,
	502, 571, 549, 427, 273, 2, -156, 618, -139, 273,
	272, -505, 618, 2, -682, 196, 486, -505, 2, 569,
	282, 170, 203, -455, 2, 203, 2, 203, 2, 5,
	2, 43, 428, 530, 2, 271, 422, 530, 2, 528,
	2, -348, 550, 607, 497, 128, 205, 29, 2, 485,
	177, 2, 2, 94, 95, 203, 2, 203, 2, 218,
	203, 2, 444, 203, 550, -436, 662, -436, 627, 2,
	-447, -543, -490, 566, -410, -412, -217, 507, 2, -270,
	-445, -272, 196, -477, -478, -273, 298, 183, 372, -274,
	-454, 29, 149, -454, -454, 64, 661, 661, -717, 582,
	11, 12, 81, 43, 650, 651, 652, 653, 194, 654,
	655, 648, 649, 647, 640, 641, 645, 277, 278, 102,
	644, 642, 92, 312, 479, 184, 185, 186, 187, 453,
	248, 35, 249, 14, 15, 16, -376, 34, 382, 297,
	628, 237, 511, 643, 17, 18, 19, 268, 270, 361,
	54, 241, -325, 393, -375, 547, 72, -505, -505, -505,
	-505, -505, -505, -505, -505, 389, 660, -441, -500, 658,
	-265, 660, 660, 660, 660, -584, -265, -505, -519, 661,
	-432, 660, -265, -519, -514, 660, 477, 658, 660, -522,
	-505, 5, 5, 5, 660, 662, -640, 622, 196, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 660, 660, 660, 417, -566, 660, -565, 660,
	-565, -565, 608, -563, 660, 630, 623, 660, -563, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 608, 556, 665, -637, -486, 660, 660, -437,
	-548, -505, 652, -437, -437, 377, -429, -505, 114, -458,
	274, 338, 204, 294, 471, 255, -502, 664, -502, -532,
	630, -265, -540, -347, -265, -542, 660, -538, -532, -128,
	-584, -109, -124, -133, -156, -172, -224, -225, 652, -348,
	660, 203, 660, 662, -588, 203, -416, -331, -360, -348,
	-367, -368, -373, -342, -317, 2, 2, 148, -429, -659,
	580, 488, 29, 4, -606, -600, -366, 497, -365, 550,
	128, 177, 205, -595, -320, 566, 39, -516, -558, -559,
	-611, 664, -610, -561, -571, -567, -570, 407, 411, -590,
	58, 603, -573, 263, 4, -600, -602, 260, 261, 519,
	55, 433, 191, 134, 133, 369, 60, 562, 563, 564,
	565, 208, 209, 62, 604, 534, 74, 75, -659, 580,
	488, 29, 497, 196, -595, 196, 203, -595, 2, -597,
	2, -293, 665, 69, 462, 165, -697, 660, 2, 165,
	2, 2, 2, -317, -293, 165, 665, -426, 233, -293,
	165, -293, 165, -374, 233, -373, -293, 165, -293, 665,
	165, -293, 665, 165, 662, 665, 165, -595, 2, -471,
	-587, -429, 39, -491, 2, 135, 4, 5, -741, 665,
	296, -379, 311, 358, 228, 378, 625, 370, 140, -596,
	5, 4, -515, -527, 135, 304, 263, -578, -580, 9,
	-581, 650, 651, -586, -585, 117, 662, -588, -234, 258,
	41, -330, -330, -729, -729, 8, 8, -729, -729, -330,
	-330, -290, 454, 504, 392, -289, 25, 30, 153, 252,
	343, 600, 171, -391, 253, 459, -388, 397, 165, 523,
	589, -669, -672, 484, 558, 172, 452, 96, 370, 504,
	392, 454, 165, -451, -453, 39, 126, 343, 391, 65,
	244, 316, 317, 527, 460, 614, 165, 504, 392, 454,
	392, -16, -306, 25, 153, -308, -301, 504, 30, -672,
	106, 454, 639, 634, 459, 403, 542, 420, -672, -669,
	291, -671, 617, 357, -292, 523, 589, -669, -476, -672,
	484, 454, -291, 359, 615, -393, -388, 397, 165, 664,
	25, 153, 454, 504, 392, -720, -721, 30, -584, 2,
	-288, 241, -287, 25, -705, 454, 504, 392, -692, -707,
	343, 66, 467, 533, 239, 526, 616, 177, 495, 293,
	359, 108, 478, 541, 394, -283, -282, 25, 153, 504,
	592, -165, -145, -164, 459, 504, -165, 2, 454, 392,
	-666, -338, -634, 241, 621, 165, -338, -338, -543, 233,
	-686, 196, 2, -679, -152, 287, 5, 10, -597, -152,
	-423, 665, 665, -588, 652, 486, 485, 165, 165, 165,
	165, 273, 196, 359, -716, 2, 359, 621, -709, -354,
	-725, 2, 2, 2, 2, 2, 2, 2, -348, 233,
	-408, 377, -655, -656, -727, 550, -243, 621, -597, 359,
	46, -351, 233, 2, -354, 607, -666, 359, -674, -353,
	233, -348, 39, 660, 359, 2, -471, 2, 250, -634,
	359, -544, -370, -348, -539, -370, 504, -341, 39, -502,
	-348, 661, 665, -555, -555, -597, -243, 203, 660, -256,
	621, 621, 273, -551, 665, -550, 241, -598, -597, -153,
	-597, 457, 203, 273, -597, -655, -331, 2, -348, 2,
	550, 275, -152, 203, 241, -243, -597, -597, -597, -597,
	-587, 29, 508, 2, -216, 502, 571, 95, 508, 2,
	-348, 550, 128, 250, 85, -686, 196, 2, -317, -664,
	196, -660, 472, 488, 580, -659, -664, -348, 128, -348,
	128, -348, 128, -348, -348, 2, 2, 2, 2, 2,
	90, 2, -156, -505, 2, 90, 2, 49, 524, -682,
	196, 2, 569, 2, 569, 2, -317, -317, -317, 372,
	529, 296, 621, -348, -348, -351, -349, -354, -354, 490,
	551, 581, 486, 177, -505, 2, 98, -730, 2, 203,
	196, 2, 550, 250, 550, 250, 128, 203, 79, 128,
	29, 203, 550, 483, 662, 4, -293, 665, -321, -270,
	-445, -587, -446, -445, -271, -270, -273, 196, 432, 590,
	343, 509, 279, -478, -477, 29, -505, -482, 190, 342,
	-505, -480, -507, 650, 651, -579, -581, -428, 370, -264,
	-264, -264, -413, -534, -505, 420, 250, -586, -717, -560,
	-558, -558, -346, -588, 562, -505, -505, -505, -505, -505,
	-505, -505, -505, -505, -505, -505, -505, -505, -505, -505,
	-505, -505, -505, -505, -505, -505, -505, -505, -505, -505,
	-505, -505, -505, -505, -505, -505, -505, -505, -505, -505,
	-505, 297, 237, 511, 54, 241, -505, 566, -505, -505,
	-505, -505, 335, 359, 366, 577, 181, 587, 149, 370,
	-744, 544, 42, -512, -265, -433, 660, -526, 36, 522,
	29, -519, 660, 2, -500, -505, -501, -377, -375, -317,
	650, 651, 652, 653, 654, 655, 640, 641, 642, 14,
	15, 16, 645, 649, 647, 648, 194, 102, 644, 312,
	479, 92, 184, 185, 186, 187, 277, 278, 17, 18,
	19, 35, 643, -430, -429, -429, 661, 605, 29, 149,
	652, 2, 661, 665, 39, 661, -505, -430, -518, -514,
	-429, -525, -524, 618, -466, -467, 626, 321, 131, 231,
	319, -468, 493, -582, 8, -588, 652, -641, 189, 222,
	660, 661, 2, 661, 2, 661, -505, 2, 661, -505,
	2, 661, -505, 2, 661, -505, 2, 661, 2, 661,
	2, -505, -505, -505, -505, -505, -505, -505, -429, 8,
	-582, -582, 562, 562, -582, -582, -582, -574, 407, 408,
	409, 410, 299, 300, 301, 302, 411, 412, 413, 414,
	327, 328, 329, 330, 323, 324, 325, 326, 331, 332,
	333, 334, 213, 214, 215, 216, 209, 210, 211, 212,
	-574, -460, 2, -576, -429, 4, 626, 321, 131, 231,
	319, 493, 5, -460, 2, -461, 2, -505, -429, -462,
	-506, -507, 650, 651, 643, -376, -463, 2, -505, -430,
	-505, 61, 290, 568, -464, -505, 203, -429, -429, 2,
	-429, 2, -508, 2, -638, 39, -487, -317, -429, -419,
	665, 203, 39, -605, 4, -604, 44, 66, 108, 137,
	144, 177, 239, 257, 267, 293, 394, 466, 467, 495,
	526, 541, 573, 616, 505, -419, -419, 660, 661, 665,
	-459, 226, 315, 310, 266, -459, -538, -458, 274, -456,
	387, -456, -456, -532, -332, 658, 667, -588, -532, -529,
	-528, 39, -341, 384, -532, -532, 662, 661, -531, -530,
	39, -341, 659, -653, 660, 663, 663, 663, 663, 663,
	-348, 660, -429, -588, 662, 531, 2, 661, 268, 268,
	268, 268, 268, 377, 478, 661, 566, -661, -357, -363,
	498, 551, 206, -423, 665, -423, -416, 98, -715, 621,
	-595, -126, 379, 661, 665, -418, 38, 658, 662, -582,
	2, 2, -577, 608, 660, 660, -467, 660, 203, -661,
	-363, 551, 498, 206, 2, -665, 546, -417, -595, 566,
	-714, -715, -698, 661, -700, -708, -693, -702, 241, 386,
	256, 605, -589, -558, 4, -600, -317, 2, -426, -354,
	-293, 165, -427, -425, -293, 665, 165, -331, -352, -357,
	-360, -363, -317, -593, -595, -293, -353, -717, 661, 570,
	-492, -378, 432, 521, 455, 499, 546, 9, 9, 665,
	-588, -235, 487, 343, -330, -330, -330, -330, 665, -718,
	100, 566, 83, 660, 488, -310, 305, 566, -496, 233,
	83, -612, 100, -334, -613, -317, 77, 586, 420, 200,
	163, -718, 100, 420, -718, 100, 2, 252, 100, 504,
	529, 660, 29, 64, -543, 43, 43, 29, -670, -671,
	291, 203, 627, 550, 250, 488, 566, 566, -543, -453,
	-558, 126, 316, 317, 64, -583, -583, 64, -583, -583,
	-583, 621, -583, 621, -351, -543, 488, 566, 566, 566,
	442, 540, 442, 540, 494, -301, -303, -170, 494, 540,
	305, 566, 566, -170, 29, -217, 463, 135, -742, 642,
	442, 291, -671, 566, 203, 665, 43, 43, 29, -670,
	203, 566, 615, -373, -332, 601, 45, 601, 45, 601,
	566, 45, 488, 566, 665, 45, -285, -284, 504, -287,
	-597, -286, 341, -723, -707, 462, 504, 566, 488, 566,
	144, 377, 366, 495, 137, 267, 293, -527, -527, -317,
	-282, -655, -655, -242, -241, -317, 5, -416, 79, 566,
	566, -16, 504, -667, -322, 113, 349, 309, 350, 104,
	346, 103, 345, 111, 347, 112, 348, 609, 362, 610,
	363, 68, 344, 320, 351, 525, 352, 613, 364, -323,
	-324, 156, 399, 599, 128, -593, -16, -16, 504, 392,
	454, 165, -687, 241, 29, -676, 241, -551, 241, -551,
	-365, -317, 662, -156, -505, -505, -156, -505, -156, 49,
	165, 39, 165, 2, 660, 284, 660, -382, 359, 203,
	-416, -552, 665, -348, 39, -242, 381, 165, -593, -452,
	-451, 359, -353, 233, 2, 165, -738, -406, 359, 159,
	660, 430, 2, 165, -333, 233, -318, -317, -471, -295,
	554, 165, -449, 597, -483, -156, 660, 135, 39, -483,
	-438, -439, -549, -440, -334, 660, -341, -502, -127, -554,
	661, 661, 661, -256, -407, -335, -334, 127, 434, 434,
	-249, 621, -152, -153, 661, 665, -551, 241, 532, -153,
	-597, -243, -243, -551, -551, -348, 196, -597, -152, -243,
	-243, -243, -243, 2, 2, 2, 2, -455, -348, -331,
	-373, -348, -359, 241, 29, 662, -595, -595, -363, -364,
	-362, -317, -357, -455, -331, -455, -331, -455, -331, -455,
	-455, -156, -505, 529, 2, 501, 196, 196, 662, -455,
	8, -409, 465, 5, 2, 99, -597, 2, 430, 128,
	550, 397, 250, -348, -373, -348, -373, -331, 128, -331,
	129, 128, -348, 4, -543, -446, -271, 378, 279, 509,
	-480, -481, -507, 477, 478, -481, 477, 478, 8, 9,
	8, 9, -275, 513, 365, -425, 665, -280, 40, 145,
	279, -348, -586, 627, 161, -505, -505, 566, -744, 544,
	-512, 161, -505, 335, 366, 577, 181, 587, 149, 370,
	203, 660, -506, -506, 661, -431, -505, -505, 659, 669,
	661, 662, 661, -412, 665, -410, -505, -429, -429, 661,
	662, -429, -416, 659, 659, 665, 661, -523, -524, 154,
	-505, 566, 566, 566, 566, 660, 661, 662, -646, 388,
	660, 660, -505, 661, 661, 661, 661, 39, 665, 665,
	665, 661, 665, 665, 665, 661, 661, 661, 665, 661,
	627, 627, 661, 661, 661, 661, 665, 661, 665, 661,
	203, 661, 661, -469, 404, 661, 11, 12, 650, 651,
	652, 653, 194, 654, 655, 648, 649, 647, 640, 641,
	642, 92, 312, 479, 14, 15, 16, -376, 268, 241,
	-506, -506, -506, -506, 661, -510, -511, 203, 196, 39,
	-464, -464, -464, 661, 203, -429, 661, 661, 660, -639,
	314, 359, 661, 665, 661, -499, -498, 619, -548, -420,
	2, -538, -343, -588, -499, -499, -429, -505, 274, 274,
	-457, 597, 377, -459, -538, -529, -584, -504, -503, 198,
	40, 145, 353, 354, 355, 236, 199, -529, -341, -486,
	-529, -529, -588, -532, -341, -484, 660, -532, -528, 661,
	-654, -584, 661, -421, -541, -633, -412, 662, -588, -253,
	-634, -218, 5, 366, -218, -218, -218, -218, -348, -595,
	566, 566, 241, 241, 241, -423, -416, 26, -685, 621,
	405, -558, 658, 659, 8, -588, 660, -582, -582, -582,
	-595, 203, 203, 241, 241, 241, 377, -665, 203, -593,
	-293, 661, 665, -693, -702, -708, -702, 386, 2, -293,
	-426, -293, -293, -373, -374, -293, -293, -293, -450, 621,
	-585, -491, 584, 88, 432, 562, -585, 125, 487, -289,
	454, 504, -334, -334, -348, -260, -259, -257, -317, 5,
	-358, -317, 217, 443, -593, 359, -496, 233, -294, 359,
	233, -342, -558, 660, -473, 623, 279, 279, 597, -334,
	-342, 279, 233, -334, 233, -342, 2, -342, -668, 432,
	371, -505, -258, -257, 64, -389, 303, 430, 360, -290,
	454, 504, 392, -156, -156, -156, 660, -717, 597, 148,
	-348, -373, -348, -358, -593, -353, 504, 392, 454, 356,
	-367, -583, -583, -583, -451, 504, 392, 454, -358, -593,
	-351, -593, -300, 233, -317, 442, -300, 233, 442, 442,
	442, 442, 217, 443, 488, -331, 442, 627, 48, -742,
	566, 203, -505, -505, -291, -156, -156, -156, 660, -332,
	-292, -476, 454, 5, 233, -334, 5, -334, 233, 5,
	-317, -334, -358, -593, -721, 25, 153, -334, 665, 283,
	264, 621, -678, 204, 485, 437, -288, 642, -317, -358,
	-593, 377, 366, 377, 137, 267, -243, 665, 642, 642,
	-358, -593, -322, 399, -679, 366, 5, 10, 593, -331,
	-666, -338, 488, 566, 566, -543, -683, -684, 219, 470,
	488, 473, -595, -152, -246, 621, -152, -240, 245, 652,
	-658, -597, -597, -317, -695, -696, -699, -700, -317, -380,
	-383, -381, -334, -497, -496, -616, -617, -612, 297, 250,
	586, 266, 182, 100, -261, -262, 623, 621, 165, -371,
	-348, 658, -243, -656, -553, 182, 496, 660, -360, -361,
	165, -406, 359, -593, 607, 39, 165, 660, 2, 2,
	-352, 377, 359, -333, 233, -296, 155, -742, -331, -499,
	-420, -448, -489, 465, 377, -407, 602, -341, -448, -422,
	665, 203, 642, 662, -407, -547, 652, -127, -127, -243,
	660, -597, 661, 665, 662, 660, 642, 642, -251, 381,
	-250, 157, 281, 265, 515, 516, 517, 518, 147, 514,
	132, 340, 246, 556, 489, 606, -551, -597, -249, -153,
	203, -551, 241, 203, -82, 621, -243, 550, 241, -243,
	664, 488, 473, -317, 662, -455, -455, -455, 501, 501,
	-317, 196, -416, 2, -344, -588, -331, -348, -345, -373,
	196, 196, -331, -331, 590, -481, 378, 308, -534, -281,
	629, -348, 664, -505, -505, 161, 161, -505, -506, -506,
	-505, 161, 203, 660, -505, -516, 34, 34, 661, 665,
	-501, -505, -375, 661, 605, -412, -412, 661, 652, -588,
	664, 661, -514, 158, -505, 560, 321, 231, 319, -468,
	319, -468, -468, -582, 5, -588, 652, -647, -337, 660,
	-317, 619, -411, 383, 661, -560, -558, -505, -505, -505,
	-505, -505, -582, -563, -563, -578, -578, -505, -510, -505,
	-560, -558, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, 149, 359, 370, -506, -511, -510, -505, -505,
	-558, 661, 661, 661, -429, -126, 660, 314, -317, -442,
	222, -505, -551, 665, -442, -442, 661, -538, -538, 660,
	-505, 274, 659, 665, 668, 642, 642, -486, 662, -528,
	-484, -485, -488, -317, -529, 659, 661, 665, 661, 665,
	-531, 661, -588, -499, -255, -254, 146, 57, 115, 143,
	366, 374, 202, 227, 429, 161, 197, 155, 268, -685,
	-595, -595, 488, 488, 488, 380, 219, 5, 8, 658,
	659, 662, -582, 661, 661, 661, -595, -595, 488, 488,
	488, -659, 580, 488, 29, 203, -595, -700, -702, -702,
	-293, -293, 127, 343, -505, -232, 621, 623, 566, 566,
	661, 665, 642, 64, 241, 165, 359, 599, 359, -613,
	163, -618, -505, 660, 250, 660, 660, 2, -277, -278,
	-279, 153, 504, 25, -719, 2, 597, 165, -293, 165,
	-293, 625, 661, 665, -389, 660, 660, 566, 488, -310,
	566, 621, -429, -505, -244, 135, -587, -672, 664, -672,
	664, 488, 566, 566, 488, 566, 566, 359, -317, 165,
	-317, 233, -742, -317, -672, -672, 241, 621, 180, 180,
	627, -300, -505, -505, 196, 566, 621, -429, 566, -562,
	52, 27, 359, -352, -293, 165, 566, 566, 580, 504,
	-284, -597, -152, -247, 157, 469, 147, 281, 246, 49,
	380, -679, -152, 176, 257, 366, -241, -597, -597, -679,
	-597, 366, -16, -358, -593, -353, 504, 392, 454, -665,
	-665, 219, -363, -687, -551, -248, 381, -247, -551, -246,
	203, 264, 621, 661, 665, 135, 642, 2, 661, 661,
	665, 665, -619, -294, -348, -333, 250, 250, -340, -318,
	39, 374, 374, 660, -348, -105, 621, -550, -584, -339,
	-317, -437, -242, 46, -351, 39, 165, -666, -353, -156,
	-353, -556, -557, 5, 39, -348, 165, 377, 359, -297,
	289, -742, -592, -634, -412, -448, -437, 360, 97, 661,
	-499, -439, -420, -505, 2, 661, -597, -243, -256, -335,
	2, -598, -597, -597, 665, 660, 642, 642, 642, 642,
	642, 642, 642, -249, -551, -152, -249, -153, -156, 381,
	-348, -152, 652, -358, -359, 652, -455, 5, -395, -394,
	397, 370, -395, 477, 477, 378, 190, 285, -280, -332,
	-505, -505, 161, 34, 34, -505, -505, -516, 661, -505,
	-505, -429, 659, 5, -505, 661, 661, 8, -505, 661,
	662, -648, -317, -505, 661, 64, 661, 661, 665, 665,
	661, 661, 661, 661, 661, 661, 661, -511, 203, 149,
	370, 660, 661, 661, -126, -513, 225, 64, -538, -513,
	-513, -457, -416, -538, -503, -332, 658, -332, 658, -588,
	661, 665, -558, -584, -541, 662, -254, 642, -597, -597,
	2, 2, 5, 5, 429, 359, 366, 5, -218, -685,
	-685, 621, -363, -363, -363, 380, 659, 2, 658, -588,
	661, -363, -363, -363, 203, -661, -363, 551, 206, -595,
	127, 196, 230, 230, -334, -334, -259, -585, 550, 477,
	-300, 420, -496, 165, 165, -620, 100, -622, 81, 182,
	110, 359, 366, 586, 420, 77, 135, 377, 439, -732,
	-733, -734, 39, 632, 633, 661, -414, -535, -633, 660,
	-317, -414, -416, 359, 537, 135, 377, 359, 135, 377,
	615, 127, 2, 580, 84, -334, -342, -257, -416, -416,
	-348, -358, -593, 173, 661, 665, 642, 2, 652, 652,
	-358, -593, -353, -358, -593, -351, 165, 602, -300, 165,
	-300, 602, -300, 395, 180, 566, -156, -505, 173, 661,
	-332, 5, 5, 165, -329, 81, -334, 5, -334, -352,
	127, 642, 642, 642, 642, 642, 31, -679, -241, 621,
	-317, 257, 488, 566, 566, 377, 377, 380, -683, -684,
	-246, 665, 660, -246, -598, -152, 2, 467, -699, -505,
	-505, -396, 252, -334, -617, -614, -615, 420, -497, -621,
	-623, 182, 420, -384, 660, -333, -318, 660, -156, 2,
	-260, 660, -382, 381, 659, 203, 661, -593, -452, -156,
	-353, -406, -404, 621, -406, 661, 665, 159, -474, 597,
	-332, -348, 165, -298, 288, -742, -592, -295, -479, -477,
	150, 660, 377, -156, -412, 642, 661, 127, 661, -250,
	-251, -597, -152, -597, -597, -597, -152, -597, -249, -689,
	39, -551, -83, -84, 250, 100, 402, -243, -243, -345,
	550, 250, 660, 660, -280, -505, -505, -505, 661, -412,
	-588, 652, -642, 397, 661, -534, -505, -505, -506, 203,
	660, -516, 661, -643, 620, -505, -443, -444, -505, 475,
	116, 223, -643, -643, 661, -584, -584, -488, -597, 2,
	2, 366, 2, 2, 2, 566, 566, 566, 658, 2,
	203, 203, 203, -595, 203, 203, 241, 241, -156, 241,
	39, 442, -496, -342, -342, -346, -339, 182, 233, 366,
	615, -473, 279, 660, -506, 590, -348, 660, 2, 232,
	232, 31, 64, -735, 140, 254, 661, 665, -536, -328,
	-317, -505, -536, 661, 661, 366, 590, 366, 615, -505,
	590, -558, 660, -293, -293, 661, 661, -505, 566, -587,
	107, -585, 2, -672, -300, -416, -416, -672, -331, -505,
	196, -505, 566, 5, -293, -346, -293, -293, -329, 580,
	-597, -505, 577, 181, -152, -152, 376, -358, -593, -353,
	-688, 551, 498, 581, 490, 206, 476, -688, 196, -247,
	-248, -246, -691, 505, -390, -391, 2, -619, 279, -339,
	279, 243, 164, -414, 660, 660, -416, -731, 621, 661,
	-380, -261, -106, -107, 567, -550, -662, -370, -406, 39,
	343, 127, 39, 5, 660, 660, -317, 377, 660, -332,
	-312, 98, -742, -592, -296, -448, 360, -416, 100, -479,
	-512, -243, 660, -243, 661, 556, -249, 665, 29, 660,
	29, 660, -348, -373, -429, -429, 661, -412, 64, 665,
	661, 661, -506, -516, 661, -644, -645, -337, 665, 660,
	660, 506, 659, 659, 2, -595, -595, -595, 2, -595,
	-595, -595, -595, -595, 488, 488, -300, 420, -317, -613,
	-622, -339, 359, -262, 597, 621, -505, -506, -319, 660,
	-505, 660, 660, 39, 135, 254, 141, 238, -495, -736,
	109, 538, 242, -535, -280, 661, -494, 597, 439, -506,
	-329, -414, 660, 660, 660, 642, 203, -156, 660, -562,
	-293, -352, 642, 566, 2, 203, -665, 661, -678, -701,
	-702, -261, 660, -262, -385, 86, 101, 136, 232, 207,
	251, 529, 535, 29, -385, 661, -414, -414, 661, -386,
	377, 127, 343, 661, 39, -107, 9, -499, 39, -156,
	127, -156, -556, -414, -348, -414, 377, -302, -301, 298,
	-592, -297, 661, -342, -448, -598, -584, 4, -84, -416,
	-416, 661, 661, -649, 430, 478, 224, -429, -413, 661,
	665, 39, -444, 2, 2, 2, -685, -685, -685, -363,
	-363, 442, -294, 165, 226, 661, -624, 313, -317, 661,
	-452, -452, 39, 141, 238, -392, -388, 660, -281, -536,
	-262, 226, -348, -673, 597, 661, -398, -397, -394, -400,
	-399, -394, -429, -585, 107, 395, -429, -329, -152, -595,
	-595, 377, -680, 204, -703, -704, -706, 39, 284, 573,
	620, -707, -386, -415, -537, -334, -494, 661, 661, 87,
	127, -396, -156, -156, 2, -404, 661, 661, -474, 661,
	-348, -299, -599, 442, 444, -742, -298, -499, 150, 661,
	661, 661, 661, -650, -651, 54, 583, 117, -505, -650,
	-650, -645, -647, 203, 203, 182, -493, 630, -625, -628,
	-627, 637, 512, 204, 396, 661, 537, 614, 661, 661,
	-735, -416, -493, -406, -505, -494, 661, 665, 602, 661,
	665, 602, 661, 203, 661, -293, -685, -293, -688, -245,
	621, 49, -713, -710, 53, 466, -706, -694, 5, -592,
	-311, -310, 661, 665, -495, -494, -392, 419, 142, 153,
	-390, -731, -494, 660, -495, 660, -309, -308, -742, -578,
	-312, 150, 360, 590, -243, -652, 163, -651, 416, 195,
	477, 416, 195, -652, -652, -595, -595, -339, -262, 59,
	-627, 637, -628, 637, 590, 142, -499, 661, -624, -262,
	-397, 241, -399, 203, 395, 203, 485, -679, 31, 44,
	-505, -262, -537, -392, -495, -262, 478, 478, 2, -261,
	-386, -495, -414, -392, -414, -305, -306, -307, -416, -302,
	360, 590, 504, 117, 222, 561, 343, 34, 642, -626,
	343, 462, 69, 504, -626, -625, 660, 660, -595, 381,
	-712, -262, -392, -499, 2, -386, -392, 661, -262, 661,
	-594, 392, -299, 504, -438, 477, 385, -651, -505, 24,
	366, 135, -735, -429, -429, -293, -242, 660, -711, 158,
	-3, -710, -499, -262, -475, 359, 615, -311, -262, -494,
	-499, -495, -304, -303, 494, -742, -309, -438, -499, 661,
	661, -242, 666, -475, -499, 615, -499, -495, -475, -392,
	-593, -305, -499, -387, -388, 566, 661, -475, -475, -392,
	-262, -304, 660, -262, -499, -429, -499, -475, 661, -475,
	-387,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1744, 1746,
	724, 725, 727, 728, 729, 731, 732, 734, 736, 738,
	739, 740, 742, 743, 745, 746, 747, 748, 749, 751,
	753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 847, 849, 0, 1726,
	1728, 1730, 1732, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 419, 421, 423, 425,
	0, 457, 459, 460, 462, 464, 465, 467, 469, -2,
	0, 651, 652, 654, 656, 658, -2, 0, 1302, 1304,
	1306, 0, 835, 837, 0, 1309, 1311, 1313, 0, 0,
	859, 860, 0, 1847, -2, 851, 853, 855, 857, 936,
	938, 940, 942, 944, 946, 948, 950, 952, 954, 956,
	957, 959, 961, 963, 965, 967, 968, 970, 972, 974,
	975, 977, 978, 980, 982, 984, 986, 988, 990, 992,
	994, 996, 998, 1000, 1002, 1004, 1006, -2, 1009, 1010,
	1011, 1013, -2, 0, -2, -2, 1740, 51, 53, 55,
	57, 59, 61, 63, 65, 67, 69, 71, 73, 75,
	76, 597, 599, 601, 603, 605, 608, 610, 612, 614,
	1905, 660, 662, 664, 666, 668, 670, 672, 674, 0,
	0, -2, 1919, 0, 0, 0, 1104, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 146, 147, 148,
	149, 150, 151, 152, 153, 91, 92, 93, 95, 96,
	97, 98, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 143, 144,
	89, 118, 119, 120, 121, 122, 0, 0, 1878, 1880,
	1882, 1884, -2, 0, 0, 8, 12, 14, 16, 18,
	20, 22, 24, 26, 28, 30, 32, 36, 38, 40,
	42, 1745, 1747, 726, 730, 733, 735, 737, 741, 744,
	750, 752, 754, 709, 710, 713, 2633, 2651, 2652, 2653,
	2656, 2657, 2658, 2659, 2660, 2661, 3194, 3275, 3276, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894,
	2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904,
	2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914,
	2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944,
	2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954,
	2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964,
	2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974,
	2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,
	2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
	2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004,
	3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014,
	3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024,
	3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034,
	3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044,
	3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054,
	3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064,
	3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074,
	3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084,
	3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094,
	3095, 3096, 3097, 3098, 3099, 3100, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133,
	3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143,
	3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153,
	3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163,
	3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173,
	711, 712, 1496, 0, 793, 791, 2616, 794, 2944, 796,
	798, 645, 646, 647, 648, 649, 650, 0, 828, 3049,
	809, 1917, 829, 831, 832, 833, 834, 788, 786, 0,
	833, 828, 2689, 3049, 826, 1724, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 576,
	1559, 1560, 1561, 1709, 1710, 3000, 1755, 0, 283, 848,
	-2, -2, 3158, -2, 890, 891, -2, -2, 905, 909,
	900, 3163, 0, 3003, 2985, -2, 912, 1727, 1729, 1731,
	1014, 1015, 1016, 2637, 1020, 1018, 1030, 1031, 1034, 0,
	1051, -2, 0, 2685, 2967, -2, -2, 1052, 1053, -2,
	-2, -2, -2, 1032, 1033, 0, 0, 0, 0, 0,
	1757, 1749, 1752, 1750, 1751, 46, 48, 50, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 293, -2, -2, -2, -2, 0, 0, 3055, 2748,
	2584, 2653, 2587, 2582, 420, 422, 424, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 458, 461, 463, 466,
	468, -2, 0, 470, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1376, 1368, 1369, 1626, 0, 0,
	0, -2, 653, 655, 657, 714, 715, 0, 1906, 1906,
	722, 723, -2, 0, 0, 0, 0, 381, 372, 1303,
	1305, 1307, 1308, 0, 0, 0, 0, 0, 836, 838,
	0, 0, 3049, 344, 1310, 1312, 1314, 1315, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 852, 854, 856,
	858, 937, 939, 941, 943, 945, 947, 949, 951, 953,
	955, 958, 960, 962, 964, 966, 969, 971, 973, 976,
	979, 981, 983, 985, 987, 989, 991, 993, 995, 997,
	999, 1001, 1003, 1005, 1007, 1008, 1059, 0, 0, 0,
	0, -2, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 1174, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 0, 1271, 0, 0, 1062, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 0, 1147, 1172, 1173,
	1183, 1012, 0, 1539, 1907, 1757, 1734, 1735, 1736, 1741,
	1743, 1737, 1738, 1739, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 70, 72, 74, 77, 598, 600, 602,
	604, 606, 609, 611, 613, -2, 1876, 1877, 661, 663,
	665, 667, 669, 671, 673, 839, 0, 842, 0, 1064,
	841, -2, 0, 1911, 1911, 1911, 0, 0, 1877, 1875,
	0, 0, 0, 845, 846, 916, 917, 2196, 0, 0,
	0, 0, 0, 0, 0, 0, 2456, 2284, 0, 918,
	-2, 2317, 2319, 3132, 2916, 3158, 2455, 2321, 2322, 2323,
	2324, 2325, 0, 2327, 2328, 2329, 2330, 2331, 2332, 0,
	2334, 0, 2339, 2340, 2341, 0, 3139, 2559, 2647, -2,
	0, 0, 3146, 2643, 0, 2422, 2357, -2, -2, 2670,
	2649, 2128, 2129, 2130, 2131, 2132, -2, -2, 3177, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	0, 3120, 3140, 3141, 3147, 3149, 3142, 3129, 2382, 2764,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2155, 2164, -2, -2, -2, -2, -2,
	-2, -2, 3133, 3134, 3152, 3155, 3162, 3167, 3168, 3138,
	3148, 3176, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185,
	3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 2156, -2,
	-2, -2, -2, 0, 1894, 2960, 1897, 2003, 1895, 1879,
	1881, 0, 1883, 0, 0, 0, 1888, 1914, 1912, 0,
	1963, 1892, 1893, 1986, 1986, 2018, 0, 1991, 0, 2018,
	1906, 2049, 0, 1997, 2990, 2358, 2359, 0, 2653, 2648,
	-2, -2, 3174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 789, 0, 795, 797, 0, 0,
	0, 0, 828, 827, 1916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 3140, 588, 538, 541, 0,
	579, 580, 581, 582, 583, 3140, 0, 0, 0, 0,
	590, 591, 592, 593, 594, 595, 596, 253, 3140, 679,
	708, 704, 0, 253, 3140, 682, 707, 253, 3140, 685,
	706, 0, 688, 1624, 253, 3140, 691, 2612, 253, 3140,
	694, 696, 2620, 253, 3140, 700, 2627, 2625, 701, 0,
	703, 273, 269, 270, 271, 272, 1720, 1721, 1722, 1723,
	0, 1754, 1625, 850, 0, 876, 0, 888, 889, 3128,
	-2, 0, 3014, 893, 894, -2, 896, 1758, 1762, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 883, 884, 903, 904, 910, 913, 0, 1023,
	1019, 1035, 0, 1050, 0, 1051, 1051, 2601, 2592, 2593,
	0, 0, 1051, 1051, 0, 0, 1054, 1055, 1056, 1057,
	1058, 1748, -2, 88, 0, 3140, 2049, 90, 0, 2606,
	2679, 2680, 2681, 2682, 2683, 3175, 3195, 3196, 3197, 3198,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218,
	3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
	3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238,
	3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248,
	3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258,
	3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268,
	3269, 3270, 3271, 3272, 3273, 3274, 3177, 94, 0, 3140,
	99, 0, 3140, 0, -2, 123, 0, 145, 0, 173,
	-2, -2, -2, 154, 0, 3140, 0, 2581, -2, 0,
	265, -2, 0, 779, 384, 385, 2666, 2667, 2675, 2676,
	2677, 2678, 373, 374, 556, 0, 770, 0, 879, 2456,
	0, 0, 1340, -2, 0, 1552, 1554, 1554, 0, -2,
	0, 0, 0, 1291, 2578, 2583, 1292, 1293, 2602, 1294,
	2588, 0, 428, 429, 430, 431, 432, 0, 433, 3140,
	435, 436, 0, 438, 439, 3140, 441, 442, 0, 444,
	0, 446, 0, 308, 325, 323, 3140, 0, 3140, 472,
	475, 0, 577, 0, 574, 0, 558, 559, 0, 561,
	0, 0, 0, 566, 567, 569, 570, 571, 572, 573,
	0, 618, 616, 2617, 636, 398, 0, -2, 3140, 0,
	1337, 0, 0, 1604, -2, 0, 1545, -2, 0, 1611,
	3140, 1607, 0, -2, 0, 1904, 3140, 1775, 1372, 1373,
	1374, 1375, 2061, 642, 0, 1811, 0, 1813, 0, 1833,
	2055, 1986, 0, 0, 2060, 0, -2, 767, 2636, -2,
	717, 0, 718, 0, -2, 0, 398, 0, 0, 1318,
	1320, 1321, 1323, 1324, 1327, 1328, 1329, 1330, 0, 1332,
	2035, 345, 347, 0, 0, 0, 0, 1317, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 0, 636, 861,
	0, 0, 1060, 1061, 0, 0, 1079, 1080, 1081, 0,
	0, 398, -2, -2, -2, -2, 1090, 0, 1098, 1101,
	-2, 0, 0, 0, 0, 1108, 0, 1113, 1114, 1115,
	0, -2, 0, 1122, 1124, 1301, 1127, 0, 1301, 0,
	1129, 0, 1133, 0, 1136, 0, 1138, 0, 1140, -2,
	-2, -2, 1148, 1149, -2, 1154, -2, 0, 1158, -2,
	0, 1161, 0, 1164, -2, 0, 1174, 1170, 1171, 0,
	0, 0, 0, 1191, 1192, 0, 1201, 0, 1204, 1205,
	1206, 0, 0, 1211, 1212, 0, 1214, 1215, 1216, 1218,
	1219, 1220, 0, 3087, 3011, 2748, 2796, 0, 1229, -2,
	2785, 1239, 1241, 0, -2, 0, 1257, 0, 1261, 0,
	0, 1270, 0, 0, 0, 1063, 0, 1072, 1073, 1074,
	253, 2053, 1733, 0, -2, 0, 840, 0, 844, 1936,
	1862, 1859, 0, 1933, 1934, 1863, 0, 0, 0, 1870,
	0, 1909, 1910, 0, 0, 0, 1849, 1850, 0, 0,
	0, 0, 0, 0, 2461, 2462, 2463, 2464, 2477, 2465,
	2466, 2476, 2474, 2475, 2467, 2468, 2473, 2487, 2488, 2478,
	2479, 2469, 2482, 2480, 2481, 2483, 2484, 2485, 2486, 0,
	0, 2492, 0, 2470, 2471, 2472, 2500, 0, 0, 2501,
	0, 2503, 0, 2493, 2489, 2490, 2491, 0, 2263, 2265,
	2567, 0, 0, 0, 2499, 2494, 2495, 2201, 2202, 2203,
	2204, 2205, 2238, 2242, 2243, 0, 0, 2318, 2564, 2563,
	2320, 0, 0, 2515, 0, 2333, -2, 0, 2456, 2510,
	0, 0, 2342, 2343, 2344, 0, 0, 2515, 0, 0,
	2558, 2354, 2355, 2193, 0, 0, 2424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2142, 2141, 0, 2143, 0,
	2144, 2145, 2152, 2165, 0, 0, 0, 0, 2169, 0,
	0, 0, 0, 0, 0, 0, 2539, -2, 0, 0,
	0, 0, 2157, 0, 0, 1896, 0, 0, 0, 1967,
	2568, 2572, 2573, 1967, 1967, 0, 0, 2516, 2046, 2046,
	0, 0, 2041, 2041, 2041, 2039, 2018, 0, 2018, 2028,
	0, 2018, 2018, 0, -2, 1991, 0, 0, 2032, 0,
	2012, 755, 757, 759, 761, 762, 763, 765, 2050, 2051,
	0, 0, 0, 0, 2654, 0, 0, 0, 0, 0,
	0, 2639, 0, 0, 2611, 453, 454, 0, 0, 0,
	3068, 3003, 0, -2, -2, -2, -2, 3011, 0, 0,
	2748, 2785, 2796, 800, 830, 0, 1906, 0, 2518, 2076,
	2080, 0, 2082, 2083, 2084, 2085, 2086, 0, 0, 2077,
	-2, 2153, 2155, 2176, 2671, 2672, 2673, 2136, 2137, 2138,
	2139, 2140, 2148, 2135, 2135, 2135, 2146, 2175, 2167, 2175,
	2171, 2121, 2122, 2123, 2158, 2159, 2160, 2161, 0, 3068,
	3003, 0, -2, 0, 812, 0, 0, 0, 1844, 335,
	336, 536, 0, 251, 252, 0, 540, 0, 578, 0,
	585, 586, 587, 0, 675, 0, 0, 253, 3140, 680,
	0, 683, 0, 253, 3140, 2576, 689, 0, 692, 0,
	0, 698, 0, 0, 0, 0, 0, 253, 1846, 0,
	0, 0, 0, -2, 898, 906, 907, 908, 0, 1760,
	0, 1767, 927, 928, 929, 1769, 1770, 0, 1772, 901,
	930, 931, 932, 933, 934, 935, 0, 2590, 2591, 2596,
	2597, 0, 0, 899, 920, 902, 0, 914, 1026, 1021,
	1022, 1036, 1037, 0, 0, 2594, 2595, 0, 0, 1042,
	1043, 155, 1706, 0, 0, 206, 0, 1706, 1706, 0,
	0, 0, 0, 234, 0, 0, 1406, 0, 0, 0,
	0, 173, 191, 202, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 100, 1518, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 1534, 1537, 0, 0, 0, 0,
	0, 125, 126, 0, 0, 131, 132, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 1808, 0, 181, 173,
	0, 0, 172, 174, 157, 0, 0, 173, 177, 192,
	204, 0, 240, 0, 180, 242, 1403, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 275, 0, 0, 310,
	777, 0, 780, 0, 550, 0, 525, 0, 0, 547,
	555, 0, 0, 512, 513, 514, 515, 0, 0, 520,
	0, 0, 0, 0, 526, 769, 771, 636, 636, 0,
	0, 877, 881, 882, 0, 0, 878, 880, 0, 0,
	1546, 0, 0, 0, 1903, 0, 0, 0, 0, 3140,
	1704, 0, 1687, 0, 2035, 2844, -2, -2, 345, 2035,
	1290, 0, 0, 2654, 2586, 0, 0, 0, 0, 0,
	0, 445, 0, 0, 0, 334, 0, 0, 0, 481,
	0, 568, 557, 560, 562, 563, 564, 607, 1465, 3140,
	0, 0, 640, 631, 0, 635, 0, 0, 639, 0,
	0, 1517, 3140, 1515, 2621, 0, 1543, 0, 1603, 1496,
	3140, 2619, 0, 0, 0, 1612, 2663, 1621, 1625, 1796,
	0, 644, 0, 1814, 1816, 0, 0, 2056, 0, 2058,
	1986, 1906, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 1331, 354, 0, 2034, 0, 0, 386, 2035,
	345, 2973, 0, 1316, 398, 398, 2035, 863, 2035, 865,
	0, 0, 1082, 0, 0, 1085, 398, 398, 398, 398,
	1096, 1097, 1099, 1100, -2, -2, -2, -2, 1102, 1103,
	1198, 0, 0, 0, 1197, 1702, 0, 1118, 1121, 1125,
	0, 1274, 2985, 3003, 3068, 1299, 1126, 1198, 2748, 1198,
	2748, 1198, 2748, 1198, 1198, 1142, 1186, 1194, 1153, 1160,
	0, 1155, 1159, 1162, 1165, 0, 1167, 1175, 0, -2,
	0, 1178, 0, 1180, 0, 1182, 1198, 1199, 1202, 0,
	1210, 1213, 0, 1221, 1222, 1223, 1224, 2634, 1225, 1226,
	1227, 1228, -2, 0, 1232, 1233, 0, 0, 1248, 1253,
	1254, 1250, 0, 0, 0, 0, 0, 0, 1264, 1265,
	0, 0, 0, 1273, 0, 1075, 1538, 0, 1742, 1936,
	1862, 843, 1853, 1935, 1854, 1861, 1864, 0, 0, 1866,
	0, 1868, 0, 1931, 1932, 1939, 1940, 0, 1950, 1951,
	1943, 0, -2, 0, 0, 1946, 1947, 1872, 0, 1889,
	1890, 1891, 1920, 1923, 1640, 0, 3275, 886, 0, 2197,
	2071, 2198, 2199, 2605, 0, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, -2, -2, -2, -2, -2,
	-2, -2, -2, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, -2, -2, -2, 2239, 2240, 2241,
	-2, 2502, 2504, 0, 2567, 0, -2, 0, -2, -2,
	-2, -2, 2260, 0, 2262, 2267, 2269, 2271, 0, 0,
	0, 0, 2566, 2281, 2550, 2551, 0, 0, 2458, 2459,
	2460, 2266, 0, 2285, 2565, 2562, 0, 0, 2496, 0,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 0, 2514, 1919, 2346, 0, 0, 0,
	0, 2353, 2338, 2512, 0, 2511, 0, 0, 0, 2522,
	0, 2557, 2553, 0, 2603, 2192, 2179, 2180, 2181, 2182,
	2183, 2184, 2194, 0, 2600, 2640, 2646, 2432, 0, 0,
	0, 2383, 2384, 2385, 2386, 2387, 0, 2389, 2390, 0,
	2392, 2393, 0, 2395, 2396, 0, 2398, 2399, 2400, 2401,
	2402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	0, 0, 2404, 0, 2525, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2406, 0, 2408, 2516, 2536, 0,
	0, 2286, 0, 0, 0, 0, 0, 2411, 2516, 2544,
	0, 0, 0, 0, 0, 2516, 0, 2549, 0, 2418,
	0, 2420, 1105, 1106, 1898, 0, 0, 2004, 0, 2066,
	0, 0, 0, 2571, 2574, 2575, 3101, 3102, 3103, 3104,
	3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114,
	3115, 3116, 3117, 3118, 3119, 2066, 2066, 0, 1962, 0,
	0, 2042, 2043, 2044, 2045, 0, 0, 2046, 0, 2036,
	2040, 2037, 2038, 2028, 1983, 0, 0, 2607, 2028, 1989,
	2027, 0, 2003, 2017, 2028, 2028, 0, -2, 1993, 2031,
	0, 2006, 2018, 0, 0, 756, 758, 760, 764, 766,
	0, 0, 1919, -2, 0, -2, 400, 1495, 0, 0,
	0, 0, 0, 0, 790, 792, 0, 0, 695, 0,
	0, 0, 0, 1280, 0, 1282, 1283, 0, 1285, 0,
	1690, 784, 0, 787, 0, 2067, 2070, 0, 0, 2081,
	2087, 2088, 0, -2, 0, 0, 2177, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 3049, 0, 823, 0,
	539, 253, 0, 543, 544, 0, 0, 493, 494, 495,
	496, 498, 2674, 499, -2, -2, 0, 589, 253, 705,
	677, 0, 253, 253, 686, 0, 0, 253, 697, 253,
	2628, 253, 2626, 274, 702, 1845, 286, 0, 885, 0,
	1759, 1768, 0, 924, 0, 926, 0, 2598, 2599, 0,
	915, 0, 1024, 0, 1038, 1039, 1040, 1041, 0, 0,
	0, 0, 1705, 0, 0, 1650, 0, 0, 210, 3140,
	0, 255, 0, 0, 1458, 2613, 0, 1448, 0, 0,
	2772, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 170,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	1520, 1522, 1529, 1531, 0, 1525, 1526, 0, 1528, 1530,
	1532, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 137, 1555, 3009, 0,
	0, 0, 0, 1556, 1557, 1558, 1784, 1785, 0, 1807,
	1808, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 179, 0, 2580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 311, 0, 781,
	0, 782, 0, 546, 548, 549, 525, 0, 0, 0,
	0, 0, 0, 0, 518, 519, 521, 522, 523, 524,
	772, 398, 774, 775, 394, 391, 393, 776, 0, 0,
	0, 1548, 0, 1599, 1597, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 0, 0, 0, 0, -2, 1550, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 389,
	2579, 2589, 0, 1325, 1326, 434, 437, 440, 443, 292,
	0, 0, 0, 474, 483, 0, 1378, 1350, 0, 0,
	617, 398, 636, 638, 0, 396, 2919, 2632, 1335, 1513,
	1516, 0, 1496, 3140, 1567, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 3140, 2608, 2662, 2663, 1798,
	1808, 0, 2066, 0, 1831, 1817, 0, 0, 0, 1831,
	1835, 1836, 1838, 1839, 0, 0, 2057, 2063, 716, 768,
	1906, 1906, 398, 0, 0, 1820, 1822, 0, 0, 0,
	337, 0, 348, 2035, 346, 0, 354, 0, 0, 2035,
	345, 0, 630, 862, 867, 398, 0, 0, 398, 1086,
	1087, 1088, 1089, 1144, 1188, 1196, 1252, 1107, 1109, 1110,
	1111, 0, 1116, 0, 0, 0, 1300, 1295, 1296, 1297,
	2629, 2625, 1298, 1128, 1198, 1131, 1198, 1134, 1198, 1137,
	1139, 1157, 1163, 1176, 1169, 1177, 0, 0, 0, 1190,
	0, 1208, 0, 1217, 1231, -2, 1236, 1237, 0, 0,
	0, 0, 0, 0, 0, 1258, 1259, 1260, 1262, 1267,
	1266, 0, 1272, 1076, 2054, 1857, 1858, 1860, 0, 1869,
	0, 0, 1945, -2, -2, 1944, 1948, 1949, -2, -2,
	-2, -2, 1865, 0, 1874, 1871, 0, 1930, 1638, 1639,
	0, 0, 887, 0, 0, -2, -2, 0, 0, 0,
	2282, 0, -2, 2261, 2264, 2268, 2270, 2272, 0, 0,
	0, 0, 0, 0, 2505, 0, 2507, 2283, 2560, 2563,
	2498, 0, 2454, 0, 0, 1918, 1919, 1919, 0, 2352,
	0, 2513, 0, 2520, 2521, 0, 2345, 0, 2554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2356, 0,
	0, 0, 0, 2388, 2391, 2394, 2397, 0, 0, 0,
	0, 2377, 0, 0, 0, 2381, 2147, 2133, 0, 2175,
	2173, 2174, 2168, 2175, 2172, 2125, 0, 2124, 0, 2403,
	0, 2405, 2407, 0, 0, 2409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2289, 2290, 2291, 2311, 2410, 2542, 2543, 0, 0, 0,
	0, 0, 0, 2416, 0, 2548, 2417, 2419, 1906, 0,
	1899, 0, 2002, 0, 1964, 1953, 2065, 0, 2569, 2035,
	1966, 1968, 2570, 2610, 1953, 1953, 0, 2517, 0, 0,
	2022, 0, 0, 0, 2024, 1987, 0, 0, 1981, 0,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1988, 2003, 2026,
	1990, 1994, 2640, 0, 2006, 2030, 0, 2028, 0, 2013,
	0, 2015, 2052, 0, 1999, 2032, 0, 0, 2655, 2066,
	0, 447, 455, 456, 448, 449, 450, 451, 0, 1690,
	0, 0, 0, 0, 0, 1281, 1284, 0, 808, 0,
	0, 2519, 0, 2072, 0, 2078, 0, 0, 0, 0,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	537, 542, 0, 0, 492, 0, 491, 497, 584, 676,
	253, 681, 684, 2577, 253, 690, 693, 699, 282, 0,
	875, -2, 922, 923, 925, 0, 921, 1029, 1025, 207,
	1706, 0, 0, 0, 1646, 0, 1361, 0, 1356, 1357,
	1648, 2624, 1652, 1658, 1661, 0, 212, 3140, 224, 0,
	3140, 0, 1422, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 3140, 253, 3140, 253, 228, 230, 233, 0,
	239, 235, 0, 1358, 0, 1410, 0, 0, 1413, 156,
	1706, 0, 0, 159, 163, 175, 0, 0, 0, 189,
	0, 0, 0, 1663, 1667, 1675, 0, 0, 0, 1523,
	1524, 1527, 1533, 1536, 101, 0, 0, 0, 1671, 1673,
	1679, 124, 127, 3140, 2622, 0, 129, 3140, 0, 138,
	1808, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 161, 165, 176, 0, 1681,
	158, 178, 0, 268, 0, 0, 258, 253, 3140, 0,
	260, 0, 261, 262, 276, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 778, 0, 551, 552,
	553, 0, 0, 0, 516, 517, 773, 0, 0, 0,
	1338, 1339, 1598, 0, 1541, 1542, 320, 321, 0, 1553,
	1547, 0, 0, 0, 0, 0, 1683, 1684, 0, 0,
	0, 1704, 1699, 2035, 288, 0, 2035, 296, 0, 2585,
	0, 324, 333, 471, 0, 482, 484, 486, 0, 0,
	0, 1377, 1476, 1379, 1381, 1382, 1383, 255, 0, 2663,
	1448, 2831, 2663, 0, 0, 1345, 0, 0, 0, 623,
	619, 0, 628, 632, 633, 0, 0, 0, -2, 0,
	0, 0, 0, -2, 0, 0, 0, 1614, 1608, 1609,
	0, 0, 0, 0, 3140, 1800, 1808, 0, 1904, 1919,
	643, 1809, 1831, 0, 0, 0, 1819, 1815, 1812, 2066,
	0, 0, 0, 0, 0, 2059, 2062, 719, 720, 375,
	0, 398, 0, 0, 0, 0, 0, 0, 352, 0,
	355, 0, 0, 0, 360, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 370, 371, 354, 387, 339, 2035,
	0, 354, 0, 0, 864, 0, 1077, 0, 0, 1084,
	0, 0, 1702, 1120, 0, 1130, 1132, 1135, 1179, 1181,
	1198, 0, 1209, 1235, 1242, 2609, 1243, 1400, 0, 1400,
	0, 0, 1263, 1269, 1867, 0, 1942, 1873, 1924, 1925,
	0, 1640, 0, 2200, 2245, 0, 0, -2, 0, 0,
	2249, 0, 0, 0, -2, 0, 0, 0, 2506, 2508,
	0, 2562, 2497, 2347, 0, 0, 0, 2351, 2335, 2336,
	0, 2457, 2523, 2552, 2556, 0, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 0, 2604, 2641, 2645, 2430, 2431, 2435,
	2618, 0, 0, 0, 2360, 0, 0, 0, 0, 0,
	0, 0, 0, 2166, 2170, 0, 0, 2524, 2535, 2537,
	2287, 2288, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, -2, -2, -2, 2305, 2306, 2307, -2, -2,
	-2, 2312, 0, 0, 0, 2538, 2540, 2541, 2545, 2546,
	0, 2413, 2414, 2415, 2547, 0, 1906, 1900, 2005, 1961,
	0, 2064, 1965, 0, 1961, 1961, 1913, 2020, 0, 0,
	2048, 0, 1984, 0, 1985, 0, 0, 2025, 0, 1992,
	2029, 0, 2008, 2010, 1995, 1996, 2014, 0, 1998, 0,
	2001, 2347, -2, 399, 401, 403, 0, 406, 407, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 799,
	1690, 1690, 0, 0, 0, 801, 0, 785, 0, 0,
	2074, 0, 0, 2150, 2154, 2178, 814, 816, 0, 0,
	0, 0, 3068, 3003, 0, 0, 813, 545, 489, 490,
	678, 687, 284, 0, 2033, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 254, 0, 1457,
	0, 1420, 0, 0, 1447, 0, 0, 1463, 214, 215,
	216, 0, 0, 0, 0, 226, 0, 0, 222, 0,
	232, 238, 237, 0, 1407, 0, 0, 0, 0, 1651,
	0, 0, 0, 186, 187, 188, 0, 193, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 140, 141, 0, 0, 1790, 1791,
	0, 1778, 183, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 1637, 278, 0, 0, 0, 0, 0,
	312, 313, 314, 315, 0, 300, 302, 0, 0, 0,
	0, 322, 0, 0, 510, 0, 395, 390, 392, 1540,
	1601, 1602, 1549, 1664, 1668, 1676, 0, 0, 0, 0,
	0, 833, 1703, 0, 296, 294, 0, 297, 296, 290,
	0, 0, 0, 0, 0, 0, 0, 565, 1348, 1464,
	0, 0, 1466, 1384, 1388, 0, 2663, 2663, 0, 2615,
	0, 1346, 0, 0, 1465, 615, 0, 622, 0, 637,
	2614, 0, 0, 0, 1517, 0, 0, 1544, 1496, 1570,
	1496, 0, 1613, 1615, 0, 1623, 0, 0, 0, 1802,
	1808, 0, 1795, 1796, 1938, 1810, 1829, -2, 0, 0,
	1919, 1837, 1834, 1840, 1841, 0, 0, 378, 0, 1821,
	1823, 0, 1319, 1322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 354, 351, 341, 2035, 382, 0,
	398, 398, 1112, 1701, 1117, 2630, 1189, 1207, 1244, 1399,
	0, 0, 1246, 0, 0, 1941, 1928, 1929, 1926, 1640,
	2247, 2251, 0, 0, 0, 2253, -2, 0, 2275, -2,
	-2, 2509, 2561, 2326, 1919, 2348, 2350, 2337, 2555, 2195,
	0, 2437, 2434, 0, 2421, 0, 2372, 2373, 0, 0,
	2376, 2378, 2379, 2380, 2134, 2127, 2126, 2534, 0, 0,
	0, 0, 2412, 1901, 0, 2426, 0, 0, 1969, 2426,
	2426, 2021, 0, 2023, 1982, 1970, 0, 1979, 0, 2641,
	2007, 0, 2011, 2016, 2000, 0, 404, 0, 408, 409,
	410, 411, 413, 0, 0, 0, 0, 0, 452, 802,
	803, 0, 0, 0, 0, 1689, 2068, 2073, 0, 2079,
	2149, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	285, 0, 1027, 1028, 208, 209, 1362, 1360, 1655, 1659,
	1656, 0, 211, 0, 0, 1421, 0, 1424, 0, 0,
	0, 0, 1431, 1448, 0, 0, 0, 0, 0, 0,
	1450, 0, 1449, 0, 0, 1480, 0, 1628, 1635, 0,
	-2, 0, 0, 0, 218, 244, 0, 0, 0, 0,
	247, 1707, 220, 0, 0, 253, 253, 1359, 0, 0,
	1647, 1649, 1662, 0, 0, 0, 0, 196, 0, 0,
	1665, 1669, 1677, 1672, 1674, 1680, 0, 0, 130, 139,
	1781, 0, 0, 0, 1792, 0, 182, 0, 0, 0,
	1682, 266, 267, 0, 253, 0, 253, 259, 253, 1637,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 0,
	554, 511, 0, 0, 0, 0, 0, 0, 1685, 1686,
	287, 0, 0, 289, 388, 296, 473, 480, 485, 487,
	488, 1409, 0, 1476, 1468, 1469, 1470, 0, 1380, 1475,
	1477, 0, 0, 1385, 0, 0, 0, 0, 1365, 1347,
	0, 1378, 1350, 0, 620, 0, 397, 1336, 1514, 1562,
	1496, 0, 1565, 0, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 1804, 1808, 0, 1797, 1798, 1831, 1937,
	0, 0, 0, 1818, 1938, 0, 398, 0, 398, 356,
	0, 357, 358, 359, 366, 367, 368, 369, 340, 343,
	0, 354, 866, 868, 0, 0, 874, 1078, 1083, 1398,
	0, 0, 0, 0, 1927, 2255, -2, -2, 2276, 0,
	2642, 2644, 1919, 0, 2423, 1921, 0, 0, -2, 0,
	0, 0, 1902, 1885, 0, 1960, 1952, 1954, 1956, 2988,
	2743, 3139, 1886, 1887, 2047, 0, 0, 2009, 405, 414,
	415, 0, 417, 418, 804, 0, 0, 0, 0, 2075,
	0, 0, 0, 811, 0, 0, 0, 0, 1017, 0,
	0, 1657, 213, 0, 0, 1425, 1426, 1428, 0, 1430,
	1432, 1433, 1350, 0, 1437, 0, 2665, 0, 1442, 1445,
	1446, 0, 0, 1459, 1481, 0, 1490, 0, 1630, 1640,
	1634, 0, 1632, 1492, 0, 217, 246, 219, 248, 243,
	0, 1637, 0, 221, 231, 0, 0, 160, 0, 0,
	2736, 199, 197, 195, 128, 134, 136, 142, 1644, 185,
	0, 162, 0, 268, 277, 1636, 279, 263, 253, 0,
	299, 301, 303, 304, 305, 306, 0, 1666, 1670, 1678,
	0, 1693, 1694, 1695, 1696, 1697, 0, 0, 0, 298,
	0, 0, 0, 479, 1350, 1408, 1349, 1467, 0, 1478,
	1350, 0, 0, 0, 0, 0, 0, 1352, 0, 1351,
	0, 0, 621, 624, 0, 627, 2066, 634, 0, 0,
	0, 1569, 0, 1616, 1614, 0, 1622, 0, 0, 0,
	1777, 0, 0, 1799, 1800, 641, 1824, 0, 0, 1831,
	1842, 377, 0, 380, 353, 0, 342, 0, 870, 0,
	872, 0, 1245, 1247, 0, 0, 2349, 2441, 0, 0,
	2374, 2375, -2, 0, 2315, 2425, 2427, 0, 0, 0,
	0, 0, 1971, 1980, 416, 1690, 1690, 1690, 2069, 818,
	819, 821, 815, 817, 0, 0, 1653, 0, 1660, 255,
	1423, 1427, 0, 1434, 0, 0, 0, 1438, 1500, 0,
	0, 1517, 1517, 1451, 0, 0, 1484, 1485, 1405, 0,
	1486, 1487, 1488, 1629, 1930, 1635, 1350, 0, 0, 245,
	250, 0, 0, 0, 0, 0, 0, 184, 0, 257,
	280, 1637, 0, 0, 1698, 0, 0, 295, 329, 502,
	500, 1352, 0, 1479, 1386, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1387, 1492, 0, 0, 1456, 1363,
	0, 1366, 0, 1348, 0, 625, 626, 629, 0, 1563,
	0, 1570, 0, 0, 1623, 0, 0, 1787, 1776, 1808,
	1801, 1802, 2066, 0, 1832, 0, 349, 350, 869, 0,
	0, 1255, 1256, 0, 0, 0, 0, 2436, 1922, 2316,
	0, 0, 1955, 1957, 1958, 1959, 805, 806, 807, 0,
	0, 1654, 225, 0, 1494, 1436, 1505, 0, 0, 0,
	0, 0, 1452, 1482, 1483, 1480, 1404, 0, 1633, 1631,
	1461, 1494, 1496, 223, 0, 1492, 0, 1414, 0, 0,
	1417, 0, 0, 200, 2736, 198, 0, 253, 783, 1690,
	253, 0, 332, 0, 535, 501, 503, 0, 0, 507,
	508, 509, 1344, 0, 1472, 1474, 1490, 1492, 1405, 0,
	1367, 1409, 1365, 1564, 1568, 1566, 1606, 1492, 0, 1490,
	0, 1794, 1808, 1788, 1789, 0, 1804, 0, 0, 398,
	871, 873, 2433, 2453, 2442, -2, 3071, 2744, 0, 2453,
	2453, 2428, 2429, 0, 0, 0, 1350, 0, 1439, 1501,
	1502, 0, 1497, 1498, 1499, 2664, 1440, 1441, 1443, 1444,
	2066, 0, 1491, 1500, 249, 1350, 1411, 0, 0, 1412,
	0, 0, 203, 0, 205, 281, 1688, 1691, 0, 307,
	0, 0, 476, 533, 0, 0, 504, 505, 527, 506,
	1341, 1343, 1350, 0, 1405, 1490, 1350, 0, 0, 0,
	1350, 1352, 1490, 0, 1405, 0, 1783, 1793, 0, 1803,
	1777, 0, 1827, 0, 379, 2438, 0, 0, 2444, 2445,
	2446, 2447, 2448, 2439, 2440, 820, 822, 1429, 1435, 0,
	1503, 0, 1504, 0, 0, 0, 1460, 1489, 1505, 229,
	1415, 0, 1418, 0, 201, 0, 0, 327, 328, 532,
	528, 1471, 1473, 1350, 1405, 2066, 1353, 0, 1355, 1352,
	1364, 1405, 0, 1350, 0, 1806, 1782, 1786, 2623, 1787,
	1825, 0, 0, 0, 2450, 2451, 0, 0, 0, 1506,
	0, 1509, 1510, 0, 1507, 1480, 0, 0, 253, 0,
	1906, 2066, 1350, 1643, 1354, 1344, 1350, 1492, 2066, 1490,
	1780, 1808, 1794, 0, 2066, 2449, 2452, 2443, 1493, 1508,
	1511, 1512, 1462, 0, 0, 1692, 330, 0, 0, 534,
	529, 530, 1643, 2066, 1455, 0, 1642, 1342, 2066, 1490,
	1643, 1405, 1773, 1779, 0, 0, 1783, 2066, 1828, 1402,
	0, 0, 531, 1453, 1643, 1641, 1643, 1405, 1619, 1350,
	1805, 1780, 1826, 1416, 1401, 0, 331, 1454, 1617, 1350,
	2066, 1774, 0, 2066, 1643, 0, 1643, 1620, 1402, 1618,
	1419,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 648, 3, 654, 649, 3,
	660, 661, 652, 650, 665, 651, 662, 653, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 669, 666,
	640, 642, 641, 645, 664, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 658, 3, 659, 655, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 667, 647, 668, 643,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 644, 57983, 646, 57984, 656,
	57985, 657, 57986, 663, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1664
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1781
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1807
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1821
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1908
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1920
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2044
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2057
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2070
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2106
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2164
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2173
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2238
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2249
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2261
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = true
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = false
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2364
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2381
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2408
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2419
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2429
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2439
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2448
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2459
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2465
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2491
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2587
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2631
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2641
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2644
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = true
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = false
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = nil
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3424
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3712
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3721
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3732
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3737
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3769
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3845
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3859
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4103
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4108
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "CREATE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4142
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4145
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4153
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = true
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = false
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = true
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = false
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4249
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4283
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			return unimplemented(sqllex, "create window function")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4354
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4355
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
		}
	case 550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4483
		{
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = true
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = false
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			return unimplemented(sqllex, "create access method")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return unimplemented(sqllex, "create cast")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4541
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			return unimplemented(sqllex, "create publication")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4544
		{
			return unimplemented(sqllex, "create rule")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return unimplemented(sqllex, "create server")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4552
		{
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4553
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4556
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4557
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4560
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4566
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4567
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4569
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4571
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			return unimplemented(sqllex, "drop server")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4706
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4724
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4755
		{
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4757
		{
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.str = ""
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4775
		{

			sqlVAL.union.val = nil
		}
	case 641:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "DELETE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4803
		{
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4833
		{
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "DROP")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5034
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5109
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5133
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5141
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "DELETE")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "INSERT")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "DELETE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "INSERT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5364
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5455
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "GRANT")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5655
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "RESET")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "RESET")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "USE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5746
		{
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "USE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5878
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5886
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5924
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5930
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			return unimplemented(sqllex, "set from current")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = tree.Low
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.Normal
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.High
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6225
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = true
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = false
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = true
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = false
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = int64(1)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = int64(1)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = int64(1)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6446
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6451
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.str = "client_encoding"
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.str = "timezone"
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6542
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6550
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6687
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6702
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6716
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6750
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6832
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6907
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = true
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = false
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6948
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6950
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6967
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6994
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7010
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7018
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7062
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7067
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7069
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = true
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = false
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7093
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7134
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7139
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = true
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = false
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7171
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7182
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7186
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7196
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7207
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7234
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7273
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7283
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7288
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7293
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7313
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7326
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7331
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7343
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7370
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7388
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7396
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7417
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7440
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7463
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7475
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7551
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7564
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7699
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7933
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7965
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7973
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8048
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8084
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8099
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8127
		{

			sqlVAL.union.val = nil
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8133
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.str = ""
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8143
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = nil
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8166
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8170
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8206
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8219
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8233
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8234
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8290
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.str = ""
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8579
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{

			sqlVAL.union.val = true
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = false
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8641
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8741
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8779
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8862
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8866
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9034
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9043
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9051
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9080
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9123
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.str = ""
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = true
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{

			sqlVAL.union.val = true
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = false
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9248
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9262
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9274
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9286
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9297
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9308
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = false
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = true
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = true
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = nil
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9455
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9483
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9485
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9487
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9491
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9526
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9544
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9563
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9580
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = false
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = true
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = false
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = true
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = false
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9667
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.str = ""
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.str = ""
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = true
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = false
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = false
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9742
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9748
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9973
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9979
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9991
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9997
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10011
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10017
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10076
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = true
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = false
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10140
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.str = ""
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10176
		{
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10180
		{
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10291
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10312
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10325
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10336
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10359
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10374
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10379
		{
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10422
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.str = ""
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.str = ""
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10553
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{

		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10590
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.str = ""
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.str = ""
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.str = ""
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.str = ""
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10645
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10671
		{
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10700
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10722
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10731
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10916
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10931
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11112
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = true
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = false
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11286
		{
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11287
		{
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = nil
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11301
		{
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = true
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = false
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = false
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = true
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11331
		{
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11335
		{
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11388
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11393
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11419
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11548
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11580
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11595
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11617
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11622
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11664
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11676
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11695
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11737
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11793
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11823
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = nil
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = true
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = false
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.str = tree.AstFull
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.str = tree.AstRight
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.str = tree.AstInner
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12038
		{
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.str = tree.AstHash
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.str = ""
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12130
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12136
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12142
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12152
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = true
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = false
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = true
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = false
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12201
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12214
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12222
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12223
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12241
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12243
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12251
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12264
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12271
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12320
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12332
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = types.Geography
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12382
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12390
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12416
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12424
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = nil
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = types.Int2
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = types.Int
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = types.Float4
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = types.Float
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12467
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12475
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12483
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = types.Bool
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12497
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = types.Float
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12516
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12522
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12544
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = types.String
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = true
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = false
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = types.Date
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12593
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12601
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12615
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12624
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12632
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = true
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = false
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = false
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = types.Interval
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12673
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12757
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12772
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = nil
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12802
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12862
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12907
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12915
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13011
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13019
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13186
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13190
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13218
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13240
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13348
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13356
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13374
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13436
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13440
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13452
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13457
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13479
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13483
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13492
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13499
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13503
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13507
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13522
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13541
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13552
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13553
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13568
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13577
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13643
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13655
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13726
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13730
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13734
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13750
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13768
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13773
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13782
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13791
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13800
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13809
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13819
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13824
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13834
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13843
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13844
		{
			return unimplemented(sqllex, "treat")
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13865
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13870
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13886
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13897
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13907
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13917
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13925
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13929
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13933
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.str = ""
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13966
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13970
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13976
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13984
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13992
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14000
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14006
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14019
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14047
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14051
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14055
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14059
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14066
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14075
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14079
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14083
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14087
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14105
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14109
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14116
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14128
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14132
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14136
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14152
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14153
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14154
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14155
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14156
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14157
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14158
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14159
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14160
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14161
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14162
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14163
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14165
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14166
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14168
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14169
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14170
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14171
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14172
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14173
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14175
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14176
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14177
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14179
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14181
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14183
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14184
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14185
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14187
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14192
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14208
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14215
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14216
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14218
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14241
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14245
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14251
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14255
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14259
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14280
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14284
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14291
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14327
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14337
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14341
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14364
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14389
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14406
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14410
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14414
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14418
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14422
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14428
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14434
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14440
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14444
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14448
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14454
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14473
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14483
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14489
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14493
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14500
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14506
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14510
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14517
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14532
		{
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14533
		{
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14547
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14556
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14560
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14564
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14576
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14586
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14609
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14617
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14640
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14649
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14653
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14657
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14661
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14667
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14686
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14690
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14702
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14706
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14715
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14726
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14735
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14743
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14760
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14845
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14853
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14857
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14863
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14873
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14879
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14886
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14913
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14920
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14924
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14928
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14942
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14946
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14950
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14963
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14972
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14990
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15003
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15010
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15035
		{
			sqlVAL.str = ""
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15041
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15045
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
