// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:693
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12033

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1363,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	233, 204,
	486, 204,
	-2, 0,
	-1, 80,
	221, 1158,
	235, 1158,
	251, 348,
	375, 348,
	384, 940,
	416, 348,
	428, 940,
	470, 940,
	497, 348,
	523, 940,
	-2, 0,
	-1, 86,
	251, 352,
	-2, 0,
	-1, 87,
	129, 1363,
	228, 1363,
	508, 1363,
	509, 1363,
	-2, 0,
	-1, 103,
	146, 1334,
	164, 1334,
	177, 1334,
	231, 1334,
	264, 1334,
	328, 1334,
	338, 1334,
	503, 1334,
	-2, 1305,
	-1, 139,
	154, 815,
	250, 815,
	378, 784,
	433, 784,
	489, 815,
	491, 784,
	-2, 0,
	-1, 141,
	4, 1365,
	21, 1365,
	22, 1365,
	23, 1365,
	24, 1365,
	25, 1365,
	26, 1365,
	27, 1365,
	29, 1365,
	30, 1365,
	36, 1365,
	41, 1365,
	42, 1365,
	44, 1365,
	45, 1365,
	46, 1365,
	47, 1365,
	48, 1365,
	49, 1365,
	50, 1365,
	52, 1365,
	53, 1365,
	54, 1365,
	55, 1365,
	57, 1365,
	58, 1365,
	59, 1365,
	60, 1365,
	61, 1365,
	62, 1365,
	63, 1365,
	67, 1365,
	68, 1365,
	69, 1365,
	70, 1365,
	72, 1365,
	73, 1365,
	74, 1365,
	78, 1365,
	79, 1365,
	80, 1365,
	81, 1365,
	82, 1365,
	83, 1365,
	84, 1365,
	87, 1365,
	88, 1365,
	89, 1365,
	90, 1365,
	91, 1365,
	93, 1365,
	95, 1365,
	96, 1365,
	97, 1365,
	98, 1365,
	99, 1365,
	100, 1365,
	102, 1365,
	103, 1365,
	104, 1365,
	106, 1365,
	107, 1365,
	115, 1365,
	116, 1365,
	117, 1365,
	118, 1365,
	120, 1365,
	121, 1365,
	122, 1365,
	124, 1365,
	125, 1365,
	126, 1365,
	128, 1365,
	129, 1365,
	131, 1365,
	132, 1365,
	133, 1365,
	136, 1365,
	137, 1365,
	138, 1365,
	140, 1365,
	141, 1365,
	143, 1365,
	144, 1365,
	145, 1365,
	147, 1365,
	148, 1365,
	149, 1365,
	150, 1365,
	151, 1365,
	152, 1365,
	153, 1365,
	154, 1365,
	155, 1365,
	156, 1365,
	157, 1365,
	158, 1365,
	159, 1365,
	160, 1365,
	161, 1365,
	163, 1365,
	169, 1365,
	170, 1365,
	171, 1365,
	172, 1365,
	176, 1365,
	178, 1365,
	182, 1365,
	183, 1365,
	184, 1365,
	185, 1365,
	186, 1365,
	187, 1365,
	188, 1365,
	189, 1365,
	190, 1365,
	191, 1365,
	192, 1365,
	193, 1365,
	195, 1365,
	196, 1365,
	198, 1365,
	199, 1365,
	201, 1365,
	202, 1365,
	203, 1365,
	204, 1365,
	205, 1365,
	206, 1365,
	207, 1365,
	208, 1365,
	209, 1365,
	211, 1365,
	212, 1365,
	214, 1365,
	215, 1365,
	216, 1365,
	217, 1365,
	221, 1365,
	222, 1365,
	223, 1365,
	224, 1365,
	225, 1365,
	228, 1365,
	229, 1365,
	230, 1365,
	232, 1365,
	234, 1365,
	235, 1365,
	237, 1365,
	239, 1365,
	240, 1365,
	241, 1365,
	243, 1365,
	247, 1365,
	248, 1365,
	249, 1365,
	250, 1365,
	251, 1365,
	252, 1365,
	254, 1365,
	255, 1365,
	256, 1365,
	258, 1365,
	259, 1365,
	261, 1365,
	262, 1365,
	265, 1365,
	269, 1365,
	270, 1365,
	273, 1365,
	274, 1365,
	275, 1365,
	276, 1365,
	278, 1365,
	279, 1365,
	280, 1365,
	281, 1365,
	282, 1365,
	283, 1365,
	284, 1365,
	285, 1365,
	286, 1365,
	287, 1365,
	288, 1365,
	289, 1365,
	290, 1365,
	291, 1365,
	292, 1365,
	293, 1365,
	294, 1365,
	295, 1365,
	296, 1365,
	297, 1365,
	298, 1365,
	299, 1365,
	301, 1365,
	303, 1365,
	304, 1365,
	305, 1365,
	306, 1365,
	307, 1365,
	308, 1365,
	309, 1365,
	310, 1365,
	311, 1365,
	312, 1365,
	313, 1365,
	314, 1365,
	316, 1365,
	318, 1365,
	320, 1365,
	321, 1365,
	323, 1365,
	324, 1365,
	325, 1365,
	326, 1365,
	327, 1365,
	330, 1365,
	333, 1365,
	334, 1365,
	335, 1365,
	336, 1365,
	339, 1365,
	340, 1365,
	341, 1365,
	343, 1365,
	345, 1365,
	346, 1365,
	347, 1365,
	348, 1365,
	349, 1365,
	350, 1365,
	351, 1365,
	352, 1365,
	353, 1365,
	354, 1365,
	355, 1365,
	356, 1365,
	358, 1365,
	359, 1365,
	360, 1365,
	361, 1365,
	362, 1365,
	363, 1365,
	364, 1365,
	365, 1365,
	366, 1365,
	367, 1365,
	368, 1365,
	369, 1365,
	370, 1365,
	371, 1365,
	372, 1365,
	374, 1365,
	376, 1365,
	377, 1365,
	378, 1365,
	379, 1365,
	380, 1365,
	381, 1365,
	382, 1365,
	383, 1365,
	384, 1365,
	385, 1365,
	386, 1365,
	388, 1365,
	394, 1365,
	396, 1365,
	397, 1365,
	398, 1365,
	399, 1365,
	400, 1365,
	401, 1365,
	402, 1365,
	403, 1365,
	405, 1365,
	406, 1365,
	407, 1365,
	409, 1365,
	410, 1365,
	411, 1365,
	412, 1365,
	413, 1365,
	414, 1365,
	416, 1365,
	417, 1365,
	418, 1365,
	419, 1365,
	420, 1365,
	421, 1365,
	422, 1365,
	423, 1365,
	424, 1365,
	425, 1365,
	426, 1365,
	428, 1365,
	429, 1365,
	430, 1365,
	431, 1365,
	432, 1365,
	433, 1365,
	435, 1365,
	436, 1365,
	437, 1365,
	438, 1365,
	439, 1365,
	440, 1365,
	442, 1365,
	443, 1365,
	444, 1365,
	445, 1365,
	446, 1365,
	447, 1365,
	448, 1365,
	450, 1365,
	452, 1365,
	453, 1365,
	454, 1365,
	455, 1365,
	456, 1365,
	457, 1365,
	458, 1365,
	459, 1365,
	460, 1365,
	461, 1365,
	462, 1365,
	463, 1365,
	464, 1365,
	466, 1365,
	467, 1365,
	469, 1365,
	471, 1365,
	472, 1365,
	473, 1365,
	474, 1365,
	475, 1365,
	476, 1365,
	477, 1365,
	478, 1365,
	479, 1365,
	481, 1365,
	482, 1365,
	483, 1365,
	484, 1365,
	485, 1365,
	487, 1365,
	489, 1365,
	490, 1365,
	491, 1365,
	492, 1365,
	493, 1365,
	494, 1365,
	496, 1365,
	497, 1365,
	498, 1365,
	499, 1365,
	501, 1365,
	502, 1365,
	505, 1365,
	506, 1365,
	507, 1365,
	508, 1365,
	509, 1365,
	510, 1365,
	511, 1365,
	513, 1365,
	516, 1365,
	517, 1365,
	518, 1365,
	519, 1365,
	520, 1365,
	521, 1365,
	523, 1365,
	524, 1365,
	525, 1365,
	526, 1365,
	531, 1365,
	532, 1365,
	533, 1365,
	534, 1365,
	535, 1365,
	536, 1365,
	-2, 0,
	-1, 142,
	1, 1236,
	127, 1236,
	239, 1236,
	317, 1236,
	374, 1236,
	382, 1236,
	540, 1236,
	564, 1236,
	-2, 0,
	-1, 144,
	1, 1236,
	564, 1236,
	-2, 0,
	-1, 145,
	1, 1236,
	564, 1236,
	-2, 0,
	-1, 146,
	1, 1236,
	486, 1236,
	564, 1236,
	-2, 0,
	-1, 175,
	146, 1333,
	164, 1333,
	177, 1333,
	231, 1333,
	264, 1333,
	328, 1333,
	338, 1333,
	503, 1333,
	-2, 1308,
	-1, 213,
	4, 1372,
	5, 1372,
	6, 1372,
	7, 1372,
	8, 1372,
	9, 1372,
	10, 1372,
	21, 1372,
	22, 1372,
	23, 1372,
	24, 1372,
	25, 1372,
	26, 1372,
	27, 1372,
	29, 1372,
	30, 1372,
	36, 1372,
	37, 1372,
	41, 1372,
	42, 1372,
	43, 1372,
	44, 1372,
	45, 1372,
	46, 1372,
	47, 1372,
	48, 1372,
	49, 1372,
	50, 1372,
	52, 1372,
	53, 1372,
	54, 1372,
	55, 1372,
	57, 1372,
	58, 1372,
	59, 1372,
	60, 1372,
	61, 1372,
	62, 1372,
	63, 1372,
	64, 1372,
	65, 1372,
	66, 1372,
	67, 1372,
	68, 1372,
	69, 1372,
	70, 1372,
	72, 1372,
	73, 1372,
	74, 1372,
	76, 1372,
	78, 1372,
	79, 1372,
	80, 1372,
	81, 1372,
	82, 1372,
	83, 1372,
	84, 1372,
	87, 1372,
	88, 1372,
	89, 1372,
	90, 1372,
	91, 1372,
	93, 1372,
	95, 1372,
	96, 1372,
	97, 1372,
	98, 1372,
	99, 1372,
	100, 1372,
	102, 1372,
	103, 1372,
	104, 1372,
	105, 1372,
	106, 1372,
	107, 1372,
	108, 1372,
	109, 1372,
	110, 1372,
	111, 1372,
	112, 1372,
	113, 1372,
	114, 1372,
	115, 1372,
	116, 1372,
	117, 1372,
	118, 1372,
	119, 1372,
	120, 1372,
	121, 1372,
	122, 1372,
	123, 1372,
	124, 1372,
	125, 1372,
	126, 1372,
	128, 1372,
	129, 1372,
	131, 1372,
	132, 1372,
	133, 1372,
	136, 1372,
	137, 1372,
	138, 1372,
	140, 1372,
	141, 1372,
	143, 1372,
	144, 1372,
	145, 1372,
	147, 1372,
	148, 1372,
	149, 1372,
	150, 1372,
	151, 1372,
	152, 1372,
	153, 1372,
	154, 1372,
	155, 1372,
	156, 1372,
	157, 1372,
	158, 1372,
	159, 1372,
	160, 1372,
	161, 1372,
	162, 1372,
	163, 1372,
	169, 1372,
	170, 1372,
	171, 1372,
	172, 1372,
	176, 1372,
	178, 1372,
	181, 1372,
	182, 1372,
	183, 1372,
	184, 1372,
	185, 1372,
	186, 1372,
	187, 1372,
	188, 1372,
	189, 1372,
	190, 1372,
	191, 1372,
	192, 1372,
	193, 1372,
	195, 1372,
	196, 1372,
	198, 1372,
	199, 1372,
	201, 1372,
	202, 1372,
	203, 1372,
	204, 1372,
	205, 1372,
	206, 1372,
	207, 1372,
	208, 1372,
	209, 1372,
	210, 1372,
	211, 1372,
	212, 1372,
	214, 1372,
	215, 1372,
	216, 1372,
	217, 1372,
	221, 1372,
	222, 1372,
	223, 1372,
	224, 1372,
	225, 1372,
	227, 1372,
	228, 1372,
	229, 1372,
	230, 1372,
	232, 1372,
	234, 1372,
	235, 1372,
	236, 1372,
	237, 1372,
	238, 1372,
	239, 1372,
	240, 1372,
	241, 1372,
	242, 1372,
	243, 1372,
	247, 1372,
	248, 1372,
	249, 1372,
	250, 1372,
	251, 1372,
	252, 1372,
	254, 1372,
	255, 1372,
	256, 1372,
	258, 1372,
	259, 1372,
	260, 1372,
	261, 1372,
	262, 1372,
	263, 1372,
	265, 1372,
	269, 1372,
	270, 1372,
	271, 1372,
	272, 1372,
	273, 1372,
	274, 1372,
	275, 1372,
	276, 1372,
	278, 1372,
	279, 1372,
	280, 1372,
	281, 1372,
	282, 1372,
	283, 1372,
	284, 1372,
	285, 1372,
	286, 1372,
	287, 1372,
	288, 1372,
	289, 1372,
	290, 1372,
	291, 1372,
	292, 1372,
	293, 1372,
	294, 1372,
	295, 1372,
	296, 1372,
	297, 1372,
	298, 1372,
	299, 1372,
	301, 1372,
	302, 1372,
	303, 1372,
	304, 1372,
	305, 1372,
	306, 1372,
	307, 1372,
	308, 1372,
	309, 1372,
	310, 1372,
	311, 1372,
	312, 1372,
	313, 1372,
	314, 1372,
	315, 1372,
	316, 1372,
	317, 1372,
	318, 1372,
	319, 1372,
	320, 1372,
	321, 1372,
	322, 1372,
	323, 1372,
	324, 1372,
	325, 1372,
	326, 1372,
	327, 1372,
	330, 1372,
	334, 1372,
	335, 1372,
	336, 1372,
	339, 1372,
	340, 1372,
	341, 1372,
	342, 1372,
	343, 1372,
	344, 1372,
	345, 1372,
	346, 1372,
	347, 1372,
	348, 1372,
	349, 1372,
	350, 1372,
	351, 1372,
	352, 1372,
	353, 1372,
	354, 1372,
	355, 1372,
	356, 1372,
	358, 1372,
	359, 1372,
	360, 1372,
	361, 1372,
	362, 1372,
	363, 1372,
	364, 1372,
	365, 1372,
	366, 1372,
	367, 1372,
	368, 1372,
	369, 1372,
	370, 1372,
	371, 1372,
	372, 1372,
	374, 1372,
	376, 1372,
	377, 1372,
	378, 1372,
	379, 1372,
	380, 1372,
	381, 1372,
	382, 1372,
	383, 1372,
	384, 1372,
	385, 1372,
	386, 1372,
	388, 1372,
	394, 1372,
	396, 1372,
	397, 1372,
	398, 1372,
	399, 1372,
	400, 1372,
	401, 1372,
	402, 1372,
	403, 1372,
	405, 1372,
	406, 1372,
	407, 1372,
	408, 1372,
	409, 1372,
	410, 1372,
	411, 1372,
	412, 1372,
	413, 1372,
	414, 1372,
	416, 1372,
	417, 1372,
	418, 1372,
	419, 1372,
	420, 1372,
	421, 1372,
	422, 1372,
	423, 1372,
	424, 1372,
	425, 1372,
	426, 1372,
	428, 1372,
	429, 1372,
	430, 1372,
	431, 1372,
	432, 1372,
	433, 1372,
	434, 1372,
	435, 1372,
	436, 1372,
	437, 1372,
	438, 1372,
	439, 1372,
	440, 1372,
	441, 1372,
	442, 1372,
	443, 1372,
	444, 1372,
	445, 1372,
	446, 1372,
	447, 1372,
	448, 1372,
	450, 1372,
	452, 1372,
	453, 1372,
	454, 1372,
	455, 1372,
	456, 1372,
	457, 1372,
	458, 1372,
	459, 1372,
	460, 1372,
	461, 1372,
	462, 1372,
	463, 1372,
	464, 1372,
	466, 1372,
	467, 1372,
	468, 1372,
	469, 1372,
	471, 1372,
	472, 1372,
	473, 1372,
	474, 1372,
	475, 1372,
	476, 1372,
	477, 1372,
	478, 1372,
	479, 1372,
	481, 1372,
	482, 1372,
	483, 1372,
	484, 1372,
	485, 1372,
	487, 1372,
	489, 1372,
	490, 1372,
	491, 1372,
	492, 1372,
	493, 1372,
	494, 1372,
	495, 1372,
	496, 1372,
	497, 1372,
	498, 1372,
	499, 1372,
	501, 1372,
	502, 1372,
	504, 1372,
	505, 1372,
	506, 1372,
	507, 1372,
	508, 1372,
	509, 1372,
	510, 1372,
	511, 1372,
	512, 1372,
	513, 1372,
	516, 1372,
	517, 1372,
	518, 1372,
	519, 1372,
	520, 1372,
	521, 1372,
	523, 1372,
	524, 1372,
	525, 1372,
	526, 1372,
	531, 1372,
	532, 1372,
	533, 1372,
	534, 1372,
	535, 1372,
	536, 1372,
	537, 1372,
	545, 1372,
	552, 1372,
	553, 1372,
	554, 1372,
	561, 1372,
	565, 1372,
	-2, 0,
	-1, 671,
	180, 2118,
	486, 2118,
	544, 2118,
	563, 2118,
	-2, 0,
	-1, 672,
	180, 2217,
	486, 2217,
	544, 2217,
	563, 2217,
	-2, 0,
	-1, 673,
	180, 2105,
	486, 2105,
	544, 2105,
	563, 2105,
	-2, 0,
	-1, 675,
	180, 2340,
	486, 2340,
	544, 2340,
	563, 2340,
	-2, 0,
	-1, 677,
	180, 2376,
	486, 2376,
	544, 2376,
	563, 2376,
	-2, 0,
	-1, 684,
	180, 2243,
	486, 2243,
	544, 2243,
	563, 2243,
	-2, 626,
	-1, 716,
	563, 2055,
	566, 2055,
	-2, 873,
	-1, 717,
	563, 2057,
	566, 2057,
	-2, 874,
	-1, 718,
	563, 2056,
	566, 2056,
	-2, 875,
	-1, 719,
	566, 1989,
	-2, 876,
	-1, 742,
	177, 218,
	-2, 0,
	-1, 765,
	43, 2059,
	-2, 0,
	-1, 766,
	523, 1135,
	-2, 941,
	-1, 782,
	4, 1498,
	21, 1498,
	22, 1498,
	23, 1498,
	24, 1498,
	25, 1498,
	26, 1498,
	27, 1498,
	29, 1498,
	30, 1498,
	36, 1498,
	41, 1498,
	42, 1498,
	44, 1498,
	45, 1498,
	46, 1498,
	47, 1498,
	48, 1498,
	49, 1498,
	50, 1498,
	52, 1498,
	53, 1498,
	54, 1498,
	55, 1498,
	57, 1498,
	58, 1498,
	59, 1498,
	60, 1498,
	61, 1498,
	62, 1498,
	63, 1498,
	67, 1498,
	68, 1498,
	69, 1498,
	70, 1498,
	72, 1498,
	73, 1498,
	74, 1498,
	78, 1498,
	79, 1498,
	80, 1498,
	81, 1498,
	82, 1498,
	83, 1498,
	84, 1498,
	87, 1498,
	88, 1498,
	89, 1498,
	90, 1498,
	91, 1498,
	93, 1498,
	95, 1498,
	96, 1498,
	97, 1498,
	98, 1498,
	99, 1498,
	100, 1498,
	102, 1498,
	103, 1498,
	104, 1498,
	106, 1498,
	107, 1498,
	115, 1498,
	116, 1498,
	117, 1498,
	118, 1498,
	120, 1498,
	121, 1498,
	122, 1498,
	124, 1498,
	125, 1498,
	126, 1498,
	128, 1498,
	129, 1498,
	131, 1498,
	132, 1498,
	133, 1498,
	136, 1498,
	137, 1498,
	138, 1498,
	140, 1498,
	141, 1498,
	143, 1498,
	144, 1498,
	145, 1498,
	147, 1498,
	148, 1498,
	149, 1498,
	150, 1498,
	151, 1498,
	152, 1498,
	153, 1498,
	154, 1498,
	155, 1498,
	156, 1498,
	157, 1498,
	158, 1498,
	159, 1498,
	160, 1498,
	161, 1498,
	163, 1498,
	169, 1498,
	170, 1498,
	171, 1498,
	172, 1498,
	176, 1498,
	178, 1498,
	182, 1498,
	183, 1498,
	184, 1498,
	185, 1498,
	186, 1498,
	187, 1498,
	188, 1498,
	189, 1498,
	190, 1498,
	191, 1498,
	192, 1498,
	193, 1498,
	195, 1498,
	196, 1498,
	198, 1498,
	199, 1498,
	201, 1498,
	202, 1498,
	203, 1498,
	204, 1498,
	205, 1498,
	206, 1498,
	207, 1498,
	208, 1498,
	209, 1498,
	211, 1498,
	212, 1498,
	214, 1498,
	215, 1498,
	216, 1498,
	217, 1498,
	221, 1498,
	222, 1498,
	223, 1498,
	224, 1498,
	225, 1498,
	228, 1498,
	229, 1498,
	230, 1498,
	232, 1498,
	234, 1498,
	235, 1498,
	237, 1498,
	239, 1498,
	240, 1498,
	241, 1498,
	243, 1498,
	247, 1498,
	248, 1498,
	249, 1498,
	250, 1498,
	251, 1498,
	252, 1498,
	254, 1498,
	255, 1498,
	256, 1498,
	258, 1498,
	259, 1498,
	261, 1498,
	262, 1498,
	265, 1498,
	269, 1498,
	270, 1498,
	273, 1498,
	274, 1498,
	275, 1498,
	276, 1498,
	278, 1498,
	279, 1498,
	280, 1498,
	281, 1498,
	282, 1498,
	283, 1498,
	284, 1498,
	285, 1498,
	286, 1498,
	287, 1498,
	288, 1498,
	289, 1498,
	290, 1498,
	291, 1498,
	292, 1498,
	293, 1498,
	294, 1498,
	295, 1498,
	296, 1498,
	297, 1498,
	298, 1498,
	299, 1498,
	301, 1498,
	303, 1498,
	304, 1498,
	305, 1498,
	306, 1498,
	307, 1498,
	308, 1498,
	309, 1498,
	310, 1498,
	311, 1498,
	312, 1498,
	313, 1498,
	314, 1498,
	316, 1498,
	318, 1498,
	320, 1498,
	321, 1498,
	323, 1498,
	324, 1498,
	325, 1498,
	326, 1498,
	327, 1498,
	330, 1498,
	334, 1498,
	335, 1498,
	336, 1498,
	339, 1498,
	340, 1498,
	341, 1498,
	343, 1498,
	345, 1498,
	346, 1498,
	347, 1498,
	348, 1498,
	349, 1498,
	350, 1498,
	351, 1498,
	352, 1498,
	353, 1498,
	354, 1498,
	355, 1498,
	356, 1498,
	358, 1498,
	359, 1498,
	360, 1498,
	361, 1498,
	362, 1498,
	363, 1498,
	364, 1498,
	365, 1498,
	366, 1498,
	367, 1498,
	368, 1498,
	369, 1498,
	370, 1498,
	371, 1498,
	372, 1498,
	374, 1498,
	376, 1498,
	377, 1498,
	378, 1498,
	379, 1498,
	380, 1498,
	381, 1498,
	382, 1498,
	383, 1498,
	384, 1498,
	385, 1498,
	386, 1498,
	388, 1498,
	394, 1498,
	396, 1498,
	397, 1498,
	398, 1498,
	399, 1498,
	400, 1498,
	401, 1498,
	402, 1498,
	403, 1498,
	405, 1498,
	406, 1498,
	407, 1498,
	409, 1498,
	410, 1498,
	411, 1498,
	412, 1498,
	413, 1498,
	414, 1498,
	416, 1498,
	417, 1498,
	418, 1498,
	419, 1498,
	420, 1498,
	421, 1498,
	422, 1498,
	423, 1498,
	424, 1498,
	425, 1498,
	426, 1498,
	428, 1498,
	429, 1498,
	430, 1498,
	431, 1498,
	432, 1498,
	433, 1498,
	435, 1498,
	436, 1498,
	437, 1498,
	438, 1498,
	439, 1498,
	440, 1498,
	442, 1498,
	443, 1498,
	444, 1498,
	445, 1498,
	446, 1498,
	447, 1498,
	448, 1498,
	450, 1498,
	452, 1498,
	453, 1498,
	454, 1498,
	455, 1498,
	456, 1498,
	457, 1498,
	458, 1498,
	459, 1498,
	460, 1498,
	461, 1498,
	462, 1498,
	463, 1498,
	464, 1498,
	466, 1498,
	467, 1498,
	469, 1498,
	471, 1498,
	472, 1498,
	473, 1498,
	474, 1498,
	475, 1498,
	476, 1498,
	477, 1498,
	478, 1498,
	479, 1498,
	481, 1498,
	482, 1498,
	483, 1498,
	484, 1498,
	485, 1498,
	487, 1498,
	489, 1498,
	490, 1498,
	491, 1498,
	492, 1498,
	493, 1498,
	494, 1498,
	496, 1498,
	497, 1498,
	498, 1498,
	499, 1498,
	501, 1498,
	502, 1498,
	505, 1498,
	506, 1498,
	507, 1498,
	508, 1498,
	509, 1498,
	510, 1498,
	511, 1498,
	513, 1498,
	516, 1498,
	517, 1498,
	518, 1498,
	519, 1498,
	520, 1498,
	521, 1498,
	523, 1498,
	524, 1498,
	525, 1498,
	526, 1498,
	531, 1498,
	532, 1498,
	533, 1498,
	534, 1498,
	535, 1498,
	536, 1498,
	-2, 0,
	-1, 807,
	4, 1156,
	21, 1156,
	22, 1156,
	23, 1156,
	24, 1156,
	25, 1156,
	26, 1156,
	27, 1156,
	29, 1156,
	30, 1156,
	36, 1156,
	41, 1156,
	42, 1156,
	44, 1156,
	45, 1156,
	46, 1156,
	47, 1156,
	48, 1156,
	49, 1156,
	50, 1156,
	52, 1156,
	53, 1156,
	54, 1156,
	55, 1156,
	57, 1156,
	58, 1156,
	59, 1156,
	60, 1156,
	61, 1156,
	62, 1156,
	63, 1156,
	67, 1156,
	68, 1156,
	69, 1156,
	70, 1156,
	72, 1156,
	73, 1156,
	74, 1156,
	78, 1156,
	79, 1156,
	80, 1156,
	81, 1156,
	82, 1156,
	83, 1156,
	84, 1156,
	87, 1156,
	88, 1156,
	89, 1156,
	90, 1156,
	91, 1156,
	93, 1156,
	95, 1156,
	96, 1156,
	97, 1156,
	98, 1156,
	99, 1156,
	100, 1156,
	102, 1156,
	103, 1156,
	104, 1156,
	106, 1156,
	107, 1156,
	115, 1156,
	116, 1156,
	117, 1156,
	118, 1156,
	120, 1156,
	121, 1156,
	122, 1156,
	124, 1156,
	125, 1156,
	126, 1156,
	128, 1156,
	129, 1156,
	131, 1156,
	132, 1156,
	133, 1156,
	136, 1156,
	137, 1156,
	138, 1156,
	140, 1156,
	141, 1156,
	143, 1156,
	144, 1156,
	145, 1156,
	147, 1156,
	148, 1156,
	149, 1156,
	150, 1156,
	151, 1156,
	152, 1156,
	153, 1156,
	154, 1156,
	155, 1156,
	156, 1156,
	157, 1156,
	158, 1156,
	159, 1156,
	160, 1156,
	161, 1156,
	163, 1156,
	169, 1156,
	170, 1156,
	171, 1156,
	172, 1156,
	176, 1156,
	178, 1156,
	182, 1156,
	183, 1156,
	184, 1156,
	185, 1156,
	186, 1156,
	187, 1156,
	188, 1156,
	189, 1156,
	190, 1156,
	191, 1156,
	192, 1156,
	193, 1156,
	195, 1156,
	196, 1156,
	198, 1156,
	199, 1156,
	201, 1156,
	202, 1156,
	203, 1156,
	204, 1156,
	205, 1156,
	206, 1156,
	207, 1156,
	208, 1156,
	209, 1156,
	211, 1156,
	212, 1156,
	214, 1156,
	215, 1156,
	216, 1156,
	217, 1156,
	221, 1156,
	222, 1156,
	223, 1156,
	224, 1156,
	225, 1156,
	228, 1156,
	229, 1156,
	230, 1156,
	232, 1156,
	234, 1156,
	235, 1156,
	237, 1156,
	239, 1156,
	240, 1156,
	241, 1156,
	243, 1156,
	247, 1156,
	248, 1156,
	249, 1156,
	250, 1156,
	251, 1156,
	252, 1156,
	254, 1156,
	255, 1156,
	256, 1156,
	258, 1156,
	259, 1156,
	261, 1156,
	262, 1156,
	265, 1156,
	269, 1156,
	270, 1156,
	273, 1156,
	274, 1156,
	275, 1156,
	276, 1156,
	278, 1156,
	279, 1156,
	280, 1156,
	281, 1156,
	282, 1156,
	283, 1156,
	284, 1156,
	285, 1156,
	286, 1156,
	287, 1156,
	288, 1156,
	289, 1156,
	290, 1156,
	291, 1156,
	292, 1156,
	293, 1156,
	294, 1156,
	295, 1156,
	296, 1156,
	297, 1156,
	298, 1156,
	299, 1156,
	301, 1156,
	303, 1156,
	304, 1156,
	305, 1156,
	306, 1156,
	307, 1156,
	308, 1156,
	309, 1156,
	310, 1156,
	311, 1156,
	312, 1156,
	313, 1156,
	314, 1156,
	316, 1156,
	318, 1156,
	320, 1156,
	321, 1156,
	323, 1156,
	324, 1156,
	325, 1156,
	326, 1156,
	327, 1156,
	330, 1156,
	334, 1156,
	335, 1156,
	336, 1156,
	339, 1156,
	340, 1156,
	341, 1156,
	343, 1156,
	345, 1156,
	346, 1156,
	347, 1156,
	348, 1156,
	349, 1156,
	350, 1156,
	351, 1156,
	352, 1156,
	353, 1156,
	354, 1156,
	355, 1156,
	356, 1156,
	358, 1156,
	359, 1156,
	360, 1156,
	361, 1156,
	362, 1156,
	363, 1156,
	364, 1156,
	365, 1156,
	366, 1156,
	367, 1156,
	368, 1156,
	369, 1156,
	370, 1156,
	371, 1156,
	372, 1156,
	374, 1156,
	376, 1156,
	377, 1156,
	378, 1156,
	379, 1156,
	380, 1156,
	381, 1156,
	382, 1156,
	383, 1156,
	384, 1156,
	385, 1156,
	386, 1156,
	388, 1156,
	394, 1156,
	396, 1156,
	397, 1156,
	398, 1156,
	399, 1156,
	400, 1156,
	401, 1156,
	402, 1156,
	403, 1156,
	405, 1156,
	406, 1156,
	407, 1156,
	409, 1156,
	410, 1156,
	411, 1156,
	412, 1156,
	413, 1156,
	414, 1156,
	416, 1156,
	417, 1156,
	418, 1156,
	419, 1156,
	420, 1156,
	421, 1156,
	422, 1156,
	423, 1156,
	424, 1156,
	425, 1156,
	426, 1156,
	428, 1156,
	429, 1156,
	430, 1156,
	431, 1156,
	432, 1156,
	433, 1156,
	435, 1156,
	436, 1156,
	437, 1156,
	438, 1156,
	439, 1156,
	440, 1156,
	442, 1156,
	443, 1156,
	444, 1156,
	445, 1156,
	446, 1156,
	447, 1156,
	448, 1156,
	450, 1156,
	452, 1156,
	453, 1156,
	454, 1156,
	455, 1156,
	456, 1156,
	457, 1156,
	458, 1156,
	459, 1156,
	460, 1156,
	461, 1156,
	462, 1156,
	463, 1156,
	464, 1156,
	466, 1156,
	467, 1156,
	469, 1156,
	471, 1156,
	472, 1156,
	473, 1156,
	474, 1156,
	475, 1156,
	476, 1156,
	477, 1156,
	478, 1156,
	479, 1156,
	481, 1156,
	482, 1156,
	483, 1156,
	484, 1156,
	485, 1156,
	487, 1156,
	489, 1156,
	490, 1156,
	491, 1156,
	492, 1156,
	493, 1156,
	494, 1156,
	496, 1156,
	497, 1156,
	498, 1156,
	499, 1156,
	501, 1156,
	502, 1156,
	505, 1156,
	506, 1156,
	507, 1156,
	508, 1156,
	509, 1156,
	510, 1156,
	511, 1156,
	513, 1156,
	516, 1156,
	517, 1156,
	518, 1156,
	519, 1156,
	520, 1156,
	521, 1156,
	523, 1156,
	524, 1156,
	525, 1156,
	526, 1156,
	531, 1156,
	532, 1156,
	533, 1156,
	534, 1156,
	535, 1156,
	536, 1156,
	-2, 0,
	-1, 888,
	378, 785,
	433, 785,
	491, 785,
	-2, 0,
	-1, 889,
	378, 784,
	433, 784,
	491, 784,
	-2, 726,
	-1, 893,
	1, 829,
	560, 829,
	562, 829,
	564, 829,
	-2, 0,
	-1, 894,
	1, 761,
	560, 761,
	562, 761,
	564, 761,
	-2, 0,
	-1, 895,
	1, 763,
	560, 763,
	562, 763,
	564, 763,
	-2, 0,
	-1, 896,
	1, 872,
	177, 872,
	560, 872,
	562, 872,
	564, 872,
	-2, 0,
	-1, 904,
	1, 788,
	560, 788,
	562, 788,
	564, 788,
	-2, 0,
	-1, 910,
	1, 829,
	560, 829,
	562, 829,
	564, 829,
	-2, 0,
	-1, 911,
	1, 831,
	560, 831,
	562, 831,
	564, 831,
	-2, 0,
	-1, 912,
	1, 834,
	560, 834,
	562, 834,
	564, 834,
	-2, 0,
	-1, 918,
	1, 851,
	560, 851,
	562, 851,
	564, 851,
	-2, 0,
	-1, 919,
	1, 853,
	560, 853,
	562, 853,
	564, 853,
	-2, 0,
	-1, 967,
	164, 1374,
	177, 1374,
	264, 1374,
	328, 1374,
	-2, 1312,
	-1, 982,
	164, 1373,
	177, 1373,
	264, 1373,
	328, 1373,
	-2, 1309,
	-1, 1008,
	563, 2054,
	-2, 634,
	-1, 1036,
	5, 2046,
	561, 2044,
	-2, 2035,
	-1, 1044,
	5, 2067,
	561, 2064,
	-2, 2055,
	-1, 1045,
	5, 2068,
	561, 2065,
	-2, 2056,
	-1, 1053,
	563, 2052,
	-2, 2034,
	-1, 1054,
	561, 2458,
	-2, 2053,
	-1, 1077,
	561, 2457,
	-2, 2069,
	-1, 1078,
	5, 1573,
	-2, 2428,
	-1, 1079,
	5, 1574,
	-2, 2429,
	-1, 1080,
	5, 1575,
	-2, 2443,
	-1, 1081,
	5, 1576,
	-2, 2407,
	-1, 1082,
	5, 1577,
	-2, 2441,
	-1, 1083,
	5, 1585,
	-2, 2420,
	-1, 1084,
	5, 1572,
	-2, 2416,
	-1, 1085,
	5, 1572,
	-2, 2415,
	-1, 1086,
	5, 1572,
	-2, 2434,
	-1, 1087,
	5, 1583,
	-2, 2409,
	-1, 1088,
	5, 1588,
	-2, 2408,
	-1, 1089,
	5, 1590,
	-2, 2453,
	-1, 1092,
	5, 1612,
	-2, 2446,
	-1, 1093,
	5, 1604,
	-2, 2447,
	-1, 1094,
	5, 1612,
	-2, 2448,
	-1, 1095,
	5, 1608,
	-2, 2449,
	-1, 1096,
	5, 1558,
	-2, 2421,
	-1, 1097,
	5, 1559,
	-2, 2422,
	-1, 1098,
	5, 1560,
	-2, 2410,
	-1, 1126,
	5, 1595,
	-2, 2454,
	-1, 1127,
	5, 1596,
	-2, 2444,
	-1, 1128,
	5, 1597,
	524, 1597,
	-2, 2411,
	-1, 1129,
	5, 1598,
	524, 1598,
	-2, 2412,
	-1, 1166,
	561, 2064,
	-2, 2055,
	-1, 1167,
	561, 2065,
	-2, 2056,
	-1, 1197,
	180, 2376,
	486, 2376,
	544, 2376,
	563, 2376,
	-2, 0,
	-1, 1200,
	1, 612,
	564, 612,
	-2, 1244,
	-1, 1329,
	396, 2030,
	435, 2030,
	554, 2030,
	-2, 2027,
	-1, 1341,
	565, 2030,
	-2, 2031,
	-1, 1348,
	1, 1132,
	560, 1132,
	562, 1132,
	564, 1132,
	-2, 1361,
	-1, 1404,
	384, 940,
	523, 940,
	-2, 347,
	-1, 1424,
	43, 2058,
	-2, 2028,
	-1, 1429,
	1, 1132,
	560, 1132,
	562, 1132,
	564, 1132,
	-2, 1361,
	-1, 1436,
	4, 1156,
	21, 1156,
	22, 1156,
	23, 1156,
	24, 1156,
	25, 1156,
	26, 1156,
	27, 1156,
	29, 1156,
	30, 1156,
	36, 1156,
	41, 1156,
	42, 1156,
	44, 1156,
	45, 1156,
	46, 1156,
	47, 1156,
	48, 1156,
	49, 1156,
	50, 1156,
	52, 1156,
	53, 1156,
	54, 1156,
	55, 1156,
	57, 1156,
	58, 1156,
	59, 1156,
	60, 1156,
	61, 1156,
	62, 1156,
	63, 1156,
	67, 1156,
	68, 1156,
	69, 1156,
	70, 1156,
	72, 1156,
	73, 1156,
	74, 1156,
	78, 1156,
	79, 1156,
	80, 1156,
	81, 1156,
	82, 1156,
	83, 1156,
	84, 1156,
	87, 1156,
	88, 1156,
	89, 1156,
	90, 1156,
	91, 1156,
	93, 1156,
	95, 1156,
	96, 1156,
	97, 1156,
	98, 1156,
	99, 1156,
	100, 1156,
	102, 1156,
	103, 1156,
	104, 1156,
	106, 1156,
	107, 1156,
	115, 1156,
	116, 1156,
	117, 1156,
	118, 1156,
	120, 1156,
	121, 1156,
	122, 1156,
	124, 1156,
	125, 1156,
	126, 1156,
	128, 1156,
	129, 1156,
	131, 1156,
	132, 1156,
	133, 1156,
	136, 1156,
	137, 1156,
	138, 1156,
	140, 1156,
	141, 1156,
	143, 1156,
	144, 1156,
	145, 1156,
	147, 1156,
	148, 1156,
	149, 1156,
	150, 1156,
	151, 1156,
	152, 1156,
	153, 1156,
	154, 1156,
	155, 1156,
	156, 1156,
	157, 1156,
	158, 1156,
	159, 1156,
	160, 1156,
	161, 1156,
	169, 1156,
	170, 1156,
	171, 1156,
	172, 1156,
	176, 1156,
	178, 1156,
	182, 1156,
	183, 1156,
	184, 1156,
	185, 1156,
	186, 1156,
	187, 1156,
	188, 1156,
	189, 1156,
	190, 1156,
	191, 1156,
	192, 1156,
	193, 1156,
	195, 1156,
	196, 1156,
	198, 1156,
	199, 1156,
	201, 1156,
	202, 1156,
	203, 1156,
	204, 1156,
	205, 1156,
	206, 1156,
	207, 1156,
	208, 1156,
	209, 1156,
	211, 1156,
	212, 1156,
	214, 1156,
	215, 1156,
	216, 1156,
	217, 1156,
	222, 1156,
	223, 1156,
	224, 1156,
	225, 1156,
	228, 1156,
	229, 1156,
	230, 1156,
	232, 1156,
	234, 1156,
	235, 1156,
	237, 1156,
	239, 1156,
	240, 1156,
	241, 1156,
	243, 1156,
	247, 1156,
	248, 1156,
	249, 1156,
	250, 1156,
	251, 1156,
	252, 1156,
	254, 1156,
	255, 1156,
	256, 1156,
	258, 1156,
	259, 1156,
	261, 1156,
	262, 1156,
	265, 1156,
	269, 1156,
	270, 1156,
	273, 1156,
	274, 1156,
	275, 1156,
	276, 1156,
	278, 1156,
	279, 1156,
	280, 1156,
	281, 1156,
	282, 1156,
	283, 1156,
	284, 1156,
	285, 1156,
	286, 1156,
	287, 1156,
	288, 1156,
	289, 1156,
	290, 1156,
	291, 1156,
	292, 1156,
	293, 1156,
	294, 1156,
	295, 1156,
	296, 1156,
	297, 1156,
	298, 1156,
	299, 1156,
	301, 1156,
	303, 1156,
	304, 1156,
	305, 1156,
	306, 1156,
	307, 1156,
	308, 1156,
	309, 1156,
	310, 1156,
	311, 1156,
	312, 1156,
	313, 1156,
	314, 1156,
	316, 1156,
	320, 1156,
	321, 1156,
	323, 1156,
	324, 1156,
	325, 1156,
	326, 1156,
	327, 1156,
	330, 1156,
	332, 1156,
	334, 1156,
	335, 1156,
	336, 1156,
	339, 1156,
	340, 1156,
	341, 1156,
	343, 1156,
	345, 1156,
	346, 1156,
	347, 1156,
	348, 1156,
	349, 1156,
	350, 1156,
	351, 1156,
	352, 1156,
	353, 1156,
	354, 1156,
	355, 1156,
	356, 1156,
	358, 1156,
	359, 1156,
	360, 1156,
	361, 1156,
	362, 1156,
	363, 1156,
	364, 1156,
	365, 1156,
	366, 1156,
	367, 1156,
	368, 1156,
	369, 1156,
	370, 1156,
	371, 1156,
	372, 1156,
	374, 1156,
	376, 1156,
	377, 1156,
	378, 1156,
	379, 1156,
	380, 1156,
	381, 1156,
	382, 1156,
	383, 1156,
	384, 1156,
	385, 1156,
	386, 1156,
	388, 1156,
	394, 1156,
	396, 1156,
	397, 1156,
	398, 1156,
	399, 1156,
	400, 1156,
	401, 1156,
	402, 1156,
	403, 1156,
	405, 1156,
	406, 1156,
	407, 1156,
	409, 1156,
	410, 1156,
	411, 1156,
	412, 1156,
	413, 1156,
	414, 1156,
	416, 1156,
	417, 1156,
	418, 1156,
	419, 1156,
	420, 1156,
	421, 1156,
	422, 1156,
	423, 1156,
	424, 1156,
	425, 1156,
	426, 1156,
	428, 1156,
	429, 1156,
	430, 1156,
	431, 1156,
	432, 1156,
	433, 1156,
	435, 1156,
	436, 1156,
	437, 1156,
	438, 1156,
	439, 1156,
	440, 1156,
	442, 1156,
	443, 1156,
	444, 1156,
	445, 1156,
	446, 1156,
	447, 1156,
	448, 1156,
	450, 1156,
	452, 1156,
	453, 1156,
	454, 1156,
	455, 1156,
	456, 1156,
	457, 1156,
	458, 1156,
	459, 1156,
	460, 1156,
	461, 1156,
	462, 1156,
	463, 1156,
	464, 1156,
	466, 1156,
	467, 1156,
	469, 1156,
	471, 1156,
	472, 1156,
	473, 1156,
	474, 1156,
	475, 1156,
	476, 1156,
	477, 1156,
	478, 1156,
	479, 1156,
	481, 1156,
	482, 1156,
	483, 1156,
	484, 1156,
	485, 1156,
	487, 1156,
	489, 1156,
	490, 1156,
	491, 1156,
	492, 1156,
	493, 1156,
	494, 1156,
	496, 1156,
	497, 1156,
	498, 1156,
	499, 1156,
	501, 1156,
	502, 1156,
	505, 1156,
	506, 1156,
	507, 1156,
	508, 1156,
	509, 1156,
	510, 1156,
	511, 1156,
	513, 1156,
	516, 1156,
	517, 1156,
	518, 1156,
	519, 1156,
	520, 1156,
	521, 1156,
	523, 1156,
	524, 1156,
	525, 1156,
	526, 1156,
	531, 1156,
	532, 1156,
	533, 1156,
	534, 1156,
	535, 1156,
	536, 1156,
	-2, 0,
	-1, 1510,
	1, 485,
	560, 485,
	562, 485,
	564, 485,
	-2, 1332,
	-1, 1513,
	4, 2452,
	11, 2452,
	12, 2452,
	14, 2452,
	15, 2452,
	16, 2452,
	17, 2452,
	18, 2452,
	19, 2452,
	21, 2452,
	22, 2452,
	23, 2452,
	24, 2452,
	25, 2452,
	26, 2452,
	27, 2452,
	29, 2452,
	30, 2452,
	33, 2452,
	34, 2452,
	36, 2452,
	38, 2452,
	41, 2452,
	42, 2452,
	44, 2452,
	45, 2452,
	46, 2452,
	47, 2452,
	48, 2452,
	49, 2452,
	50, 2452,
	52, 2452,
	53, 2452,
	54, 2452,
	55, 2452,
	57, 2452,
	58, 2452,
	59, 2452,
	60, 2452,
	61, 2452,
	62, 2452,
	63, 2452,
	67, 2452,
	68, 2452,
	69, 2452,
	70, 2452,
	72, 2452,
	73, 2452,
	74, 2452,
	75, 2452,
	78, 2452,
	79, 2452,
	80, 2452,
	81, 2452,
	82, 2452,
	83, 2452,
	84, 2452,
	85, 2452,
	87, 2452,
	88, 2452,
	89, 2452,
	90, 2452,
	91, 2452,
	93, 2452,
	94, 2452,
	95, 2452,
	96, 2452,
	97, 2452,
	98, 2452,
	99, 2452,
	100, 2452,
	102, 2452,
	103, 2452,
	104, 2452,
	105, 2452,
	106, 2452,
	107, 2452,
	115, 2452,
	116, 2452,
	117, 2452,
	118, 2452,
	120, 2452,
	121, 2452,
	122, 2452,
	124, 2452,
	125, 2452,
	126, 2452,
	128, 2452,
	129, 2452,
	131, 2452,
	132, 2452,
	133, 2452,
	136, 2452,
	137, 2452,
	138, 2452,
	140, 2452,
	141, 2452,
	143, 2452,
	144, 2452,
	145, 2452,
	147, 2452,
	148, 2452,
	149, 2452,
	150, 2452,
	151, 2452,
	152, 2452,
	153, 2452,
	154, 2452,
	155, 2452,
	156, 2452,
	157, 2452,
	158, 2452,
	159, 2452,
	160, 2452,
	161, 2452,
	165, 2452,
	166, 2452,
	167, 2452,
	168, 2452,
	169, 2452,
	170, 2452,
	171, 2452,
	172, 2452,
	175, 2452,
	176, 2452,
	178, 2452,
	181, 2452,
	182, 2452,
	183, 2452,
	184, 2452,
	185, 2452,
	186, 2452,
	187, 2452,
	188, 2452,
	189, 2452,
	190, 2452,
	191, 2452,
	192, 2452,
	193, 2452,
	195, 2452,
	196, 2452,
	198, 2452,
	199, 2452,
	201, 2452,
	202, 2452,
	203, 2452,
	204, 2452,
	205, 2452,
	206, 2452,
	207, 2452,
	208, 2452,
	209, 2452,
	210, 2452,
	211, 2452,
	212, 2452,
	213, 2452,
	214, 2452,
	215, 2452,
	216, 2452,
	217, 2452,
	219, 2452,
	220, 2452,
	222, 2452,
	223, 2452,
	224, 2452,
	225, 2452,
	227, 2452,
	228, 2452,
	229, 2452,
	230, 2452,
	232, 2452,
	234, 2452,
	235, 2452,
	236, 2452,
	237, 2452,
	238, 2452,
	239, 2452,
	240, 2452,
	241, 2452,
	242, 2452,
	243, 2452,
	245, 2452,
	246, 2452,
	247, 2452,
	248, 2452,
	249, 2452,
	250, 2452,
	251, 2452,
	252, 2452,
	254, 2452,
	255, 2452,
	256, 2452,
	258, 2452,
	259, 2452,
	260, 2452,
	261, 2452,
	262, 2452,
	263, 2452,
	265, 2452,
	269, 2452,
	270, 2452,
	273, 2452,
	274, 2452,
	275, 2452,
	276, 2452,
	277, 2452,
	278, 2452,
	279, 2452,
	280, 2452,
	281, 2452,
	282, 2452,
	283, 2452,
	284, 2452,
	285, 2452,
	286, 2452,
	287, 2452,
	288, 2452,
	289, 2452,
	290, 2452,
	291, 2452,
	292, 2452,
	293, 2452,
	294, 2452,
	295, 2452,
	296, 2452,
	297, 2452,
	298, 2452,
	299, 2452,
	301, 2452,
	302, 2452,
	303, 2452,
	304, 2452,
	305, 2452,
	306, 2452,
	307, 2452,
	308, 2452,
	309, 2452,
	310, 2452,
	311, 2452,
	312, 2452,
	313, 2452,
	314, 2452,
	316, 2452,
	319, 2452,
	320, 2452,
	321, 2452,
	323, 2452,
	324, 2452,
	325, 2452,
	326, 2452,
	327, 2452,
	330, 2452,
	334, 2452,
	335, 2452,
	336, 2452,
	337, 2452,
	339, 2452,
	340, 2452,
	341, 2452,
	343, 2452,
	345, 2452,
	346, 2452,
	347, 2452,
	348, 2452,
	349, 2452,
	350, 2452,
	351, 2452,
	352, 2452,
	353, 2452,
	354, 2452,
	355, 2452,
	356, 2452,
	358, 2452,
	359, 2452,
	360, 2452,
	361, 2452,
	362, 2452,
	363, 2452,
	364, 2452,
	365, 2452,
	366, 2452,
	367, 2452,
	368, 2452,
	369, 2452,
	370, 2452,
	371, 2452,
	372, 2452,
	374, 2452,
	376, 2452,
	377, 2452,
	378, 2452,
	379, 2452,
	380, 2452,
	381, 2452,
	382, 2452,
	383, 2452,
	384, 2452,
	385, 2452,
	386, 2452,
	388, 2452,
	394, 2452,
	395, 2452,
	396, 2452,
	397, 2452,
	398, 2452,
	399, 2452,
	400, 2452,
	401, 2452,
	402, 2452,
	403, 2452,
	405, 2452,
	406, 2452,
	407, 2452,
	408, 2452,
	409, 2452,
	410, 2452,
	411, 2452,
	412, 2452,
	413, 2452,
	414, 2452,
	415, 2452,
	416, 2452,
	417, 2452,
	418, 2452,
	419, 2452,
	420, 2452,
	421, 2452,
	422, 2452,
	423, 2452,
	424, 2452,
	425, 2452,
	426, 2452,
	428, 2452,
	429, 2452,
	430, 2452,
	431, 2452,
	432, 2452,
	433, 2452,
	435, 2452,
	436, 2452,
	437, 2452,
	438, 2452,
	439, 2452,
	440, 2452,
	441, 2452,
	442, 2452,
	443, 2452,
	444, 2452,
	445, 2452,
	446, 2452,
	447, 2452,
	448, 2452,
	450, 2452,
	452, 2452,
	453, 2452,
	454, 2452,
	455, 2452,
	456, 2452,
	457, 2452,
	458, 2452,
	459, 2452,
	460, 2452,
	461, 2452,
	462, 2452,
	463, 2452,
	464, 2452,
	466, 2452,
	467, 2452,
	469, 2452,
	471, 2452,
	472, 2452,
	473, 2452,
	474, 2452,
	475, 2452,
	476, 2452,
	477, 2452,
	478, 2452,
	479, 2452,
	481, 2452,
	482, 2452,
	483, 2452,
	484, 2452,
	485, 2452,
	487, 2452,
	489, 2452,
	490, 2452,
	491, 2452,
	492, 2452,
	493, 2452,
	494, 2452,
	496, 2452,
	497, 2452,
	498, 2452,
	499, 2452,
	501, 2452,
	502, 2452,
	505, 2452,
	506, 2452,
	507, 2452,
	508, 2452,
	509, 2452,
	510, 2452,
	511, 2452,
	513, 2452,
	516, 2452,
	517, 2452,
	518, 2452,
	519, 2452,
	520, 2452,
	521, 2452,
	523, 2452,
	524, 2452,
	525, 2452,
	526, 2452,
	531, 2452,
	532, 2452,
	533, 2452,
	534, 2452,
	535, 2452,
	536, 2452,
	537, 2452,
	539, 2452,
	542, 2452,
	543, 2452,
	544, 2452,
	545, 2452,
	546, 2452,
	547, 2452,
	549, 2452,
	550, 2452,
	551, 2452,
	552, 2452,
	553, 2452,
	554, 2452,
	555, 2452,
	556, 2452,
	557, 2452,
	559, 2452,
	562, 2452,
	563, 2452,
	565, 2452,
	566, 2452,
	-2, 0,
	-1, 1518,
	180, 2340,
	486, 2340,
	544, 2340,
	563, 2340,
	-2, 0,
	-1, 1567,
	378, 785,
	433, 785,
	491, 785,
	-2, 0,
	-1, 1593,
	1, 780,
	560, 780,
	562, 780,
	564, 780,
	-2, 0,
	-1, 1594,
	1, 816,
	560, 816,
	562, 816,
	564, 816,
	-2, 0,
	-1, 1595,
	1, 824,
	560, 824,
	562, 824,
	564, 824,
	-2, 0,
	-1, 1596,
	1, 787,
	560, 787,
	562, 787,
	564, 787,
	-2, 0,
	-1, 1598,
	1, 791,
	560, 791,
	562, 791,
	564, 791,
	-2, 0,
	-1, 1604,
	1, 798,
	560, 798,
	562, 798,
	564, 798,
	-2, 0,
	-1, 1632,
	1, 2398,
	560, 2398,
	562, 2398,
	563, 2398,
	564, 2398,
	-2, 849,
	-1, 1633,
	1, 2337,
	560, 2337,
	562, 2337,
	563, 2337,
	564, 2337,
	-2, 850,
	-1, 1648,
	1, 1239,
	564, 1239,
	-2, 1244,
	-1, 1651,
	164, 1373,
	177, 1373,
	264, 1373,
	328, 1373,
	-2, 1313,
	-1, 1745,
	146, 1334,
	164, 1334,
	177, 1334,
	231, 1334,
	264, 1334,
	328, 1334,
	338, 1334,
	503, 1334,
	-2, 1773,
	-1, 1805,
	562, 1923,
	-2, 0,
	-1, 1840,
	146, 1334,
	164, 1334,
	177, 1334,
	231, 1334,
	264, 1334,
	328, 1334,
	338, 1334,
	503, 1334,
	-2, 1460,
	-1, 1889,
	561, 1600,
	-2, 1588,
	-1, 1926,
	1, 614,
	564, 614,
	-2, 1244,
	-1, 2040,
	213, 219,
	-2, 2063,
	-1, 2041,
	213, 220,
	-2, 263,
	-1, 2171,
	1, 782,
	560, 782,
	562, 782,
	564, 782,
	-2, 0,
	-1, 2172,
	1, 818,
	560, 818,
	562, 818,
	564, 818,
	-2, 0,
	-1, 2173,
	1, 826,
	560, 826,
	562, 826,
	564, 826,
	-2, 0,
	-1, 2206,
	1, 800,
	560, 800,
	562, 800,
	564, 800,
	-2, 0,
	-1, 2252,
	413, 1400,
	414, 1400,
	-2, 1633,
	-1, 2283,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1653,
	-1, 2284,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1654,
	-1, 2285,
	94, 0,
	245, 0,
	246, 0,
	546, 0,
	547, 0,
	-2, 1655,
	-1, 2286,
	94, 0,
	245, 0,
	246, 0,
	546, 0,
	547, 0,
	-2, 1656,
	-1, 2287,
	94, 0,
	245, 0,
	246, 0,
	546, 0,
	547, 0,
	-2, 1657,
	-1, 2288,
	94, 0,
	245, 0,
	246, 0,
	546, 0,
	547, 0,
	-2, 1658,
	-1, 2289,
	94, 0,
	245, 0,
	246, 0,
	546, 0,
	547, 0,
	-2, 1659,
	-1, 2290,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1660,
	-1, 2302,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1672,
	-1, 2303,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1673,
	-1, 2304,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1674,
	-1, 2307,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1679,
	-1, 2313,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1683,
	-1, 2315,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1691,
	-1, 2316,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1692,
	-1, 2317,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1693,
	-1, 2318,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1694,
	-1, 2454,
	5, 2067,
	180, 1934,
	561, 2064,
	-2, 2055,
	-1, 2455,
	180, 1935,
	-2, 2403,
	-1, 2456,
	180, 1936,
	-2, 2242,
	-1, 2457,
	180, 1937,
	-2, 2134,
	-1, 2458,
	180, 1938,
	-2, 2184,
	-1, 2459,
	180, 1939,
	-2, 2227,
	-1, 2460,
	180, 1940,
	-2, 2335,
	-1, 2461,
	180, 1941,
	-2, 1756,
	-1, 2530,
	1, 1461,
	2, 1461,
	105, 1461,
	146, 1461,
	164, 1461,
	177, 1461,
	181, 1461,
	197, 1461,
	200, 1461,
	227, 1461,
	231, 1461,
	242, 1461,
	260, 1461,
	264, 1461,
	302, 1461,
	328, 1461,
	332, 1461,
	338, 1461,
	404, 1461,
	408, 1461,
	503, 1461,
	514, 1461,
	528, 1461,
	529, 1461,
	530, 1461,
	540, 1461,
	560, 1461,
	562, 1461,
	564, 1461,
	566, 1461,
	-2, 1460,
	-1, 2543,
	561, 2036,
	-2, 2050,
	-1, 2545,
	52, 1361,
	131, 1361,
	-2, 279,
	-1, 2570,
	561, 1599,
	-2, 1589,
	-1, 2709,
	1, 1132,
	560, 1132,
	562, 1132,
	564, 1132,
	-2, 1361,
	-1, 2889,
	333, 1403,
	-2, 2442,
	-1, 2890,
	333, 1404,
	-2, 2321,
	-1, 2894,
	413, 2000,
	414, 2000,
	-2, 1754,
	-1, 2895,
	413, 2004,
	414, 2004,
	-2, 1755,
	-1, 2896,
	413, 2001,
	414, 2001,
	-2, 1754,
	-1, 2897,
	413, 2005,
	414, 2005,
	-2, 1755,
	-1, 2910,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1681,
	-1, 2911,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1685,
	-1, 2917,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1687,
	-1, 3145,
	1, 611,
	560, 611,
	562, 611,
	564, 611,
	-2, 1244,
	-1, 3278,
	1, 1132,
	560, 1132,
	562, 1132,
	564, 1132,
	-2, 1361,
	-1, 3389,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1689,
	-1, 3396,
	236, 0,
	238, 0,
	319, 0,
	-2, 1708,
	-1, 3463,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1737,
	-1, 3464,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1738,
	-1, 3465,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1739,
	-1, 3469,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1743,
	-1, 3470,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1744,
	-1, 3471,
	14, 0,
	15, 0,
	16, 0,
	542, 0,
	543, 0,
	544, 0,
	-2, 1745,
	-1, 3517,
	561, 2037,
	-2, 2051,
	-1, 3554,
	563, 2052,
	-2, 1166,
	-1, 3657,
	563, 2559,
	-2, 1291,
	-1, 3716,
	236, 0,
	238, 0,
	319, 0,
	-2, 1709,
	-1, 3719,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1712,
	-1, 3720,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1714,
	-1, 3936,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1713,
	-1, 3937,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 1715,
	-1, 3948,
	236, 0,
	-2, 1746,
	-1, 4106,
	236, 0,
	-2, 1747,
	-1, 4266,
	49, 0,
	210, 0,
	263, 0,
	441, 0,
	537, 0,
	545, 0,
	-2, 2406,
}

const sqlPrivate = 57344

const sqlLast = 113637

var sqlAct = [...]int{

	247, 4134, 3263, 3985, 2804, 3068, 3262, 4152, 4276, 2774,
	4156, 4224, 4378, 4265, 4240, 4221, 4206, 4277, 3988, 4278,
	3973, 4059, 2037, 4039, 3428, 3893, 3888, 4327, 4110, 3550,
	2262, 2647, 3860, 4032, 3957, 1170, 4264, 992, 3699, 3925,
	3842, 3649, 4048, 1159, 1497, 2148, 3591, 3803, 3874, 3295,
	4073, 2606, 3381, 1876, 3290, 3163, 3786, 2330, 983, 2124,
	3898, 1660, 3288, 3609, 1501, 3611, 1534, 3258, 3625, 2903,
	718, 1345, 2270, 2486, 2672, 3551, 2263, 682, 3953, 2813,
	3343, 2763, 3345, 3248, 2826, 1233, 2745, 2732, 3083, 3520,
	3051, 3111, 2815, 1877, 1846, 718, 3698, 1036, 3091, 2823,
	2758, 1981, 2812, 1043, 2806, 2741, 2775, 2139, 1575, 3072,
	821, 1326, 2608, 2522, 1991, 4111, 2374, 3050, 1815, 3755,
	2523, 3488, 2031, 2267, 1753, 3074, 2887, 2760, 2343, 2122,
	2032, 2372, 1334, 1422, 991, 166, 1791, 1477, 2026, 1368,
	2686, 1040, 1532, 2010, 2746, 713, 1962, 1965, 241, 1648,
	2822, 240, 4, 2017, 1216, 1351, 3118, 2504, 2363, 2327,
	1816, 2251, 1952, 1150, 4153, 2232, 2234, 2525, 3260, 2646,
	2483, 2555, 1511, 1832, 1488, 2768, 2072, 1427, 2597, 1045,
	2146, 719, 720, 2554, 2816, 1202, 1153, 1786, 648, 2366,
	1825, 1132, 2512, 2494, 2344, 2450, 1738, 175, 2416, 176,
	1661, 664, 715, 1662, 2233, 1604, 1353, 676, 2071, 2084,
	2235, 1509, 102, 1149, 1451, 634, 1167, 794, 724, 656,
	2096, 727, 166, 1363, 766, 2256, 1980, 1021, 651, 42,
	41, 1155, 39, 1130, 1835, 30, 28, 2938, 26, 1331,
	815, 659, 1667, 724, 1647, 882, 727, 1374, 902, 3502,
	2934, 3503, 1675, 1676, 2113, 1708, 1709, 1710, 1718, 1719,
	1720, 4445, 3070, 2113, 987, 2503, 2113, 2113, 2113, 4435,
	1211, 3305, 4422, 3324, 1711, 1706, 2503, 4421, 1367, 4412,
	4395, 2503, 1678, 2046, 3802, 4393, 1211, 4307, 4300, 3802,
	1724, 4308, 2503, 3141, 4298, 4295, 2147, 836, 2503, 4296,
	3304, 4292, 4287, 4262, 3140, 4293, 2046, 2046, 1675, 1676,
	4261, 4260, 3492, 1165, 2046, 2132, 1677, 4255, 4254, 1162,
	4249, 2132, 2132, 4247, 3802, 4219, 1697, 3802, 4196, 3802,
	4189, 1706, 2561, 4188, 2503, 1694, 4183, 2503, 1678, 4182,
	3802, 1147, 4176, 3802, 4148, 4108, 2046, 4090, 3852, 2561,
	1047, 3686, 987, 4087, 4084, 3023, 3024, 2046, 3802, 4041,
	2496, 4006, 2947, 4042, 968, 2046, 967, 4005, 2948, 3997,
	3996, 2046, 1677, 2046, 3802, 1133, 1133, 3964, 3126, 3938,
	3917, 2046, 1697, 2561, 2132, 3906, 3324, 3837, 1090, 3324,
	988, 2503, 1136, 3825, 1137, 1675, 1676, 2503, 1708, 1709,
	1710, 1718, 1719, 1720, 2902, 2503, 1700, 1701, 1702, 1703,
	4197, 3801, 4112, 4103, 982, 3802, 1683, 1711, 1706, 3718,
	977, 4091, 3665, 2561, 3659, 1678, 3340, 87, 3340, 2132,
	3623, 3512, 3510, 1724, 3624, 3513, 3511, 3495, 2557, 3412,
	3408, 2503, 1134, 2046, 2503, 1181, 3339, 3492, 3331, 1597,
	3340, 1715, 3332, 3067, 1725, 1186, 2495, 2503, 2046, 1677,
	1705, 1707, 1700, 1701, 1702, 1703, 3062, 3061, 3887, 1697,
	2503, 2503, 1683, 3852, 2046, 3826, 3014, 1721, 1694, 1722,
	3015, 2988, 2046, 3686, 2980, 2989, 1692, 1693, 2981, 2978,
	2949, 2830, 2503, 2503, 2503, 2132, 2802, 2801, 1675, 1676,
	2135, 2135, 2581, 2560, 1713, 3332, 2503, 2561, 1675, 1676,
	2552, 2546, 2663, 1985, 2503, 2046, 1705, 1707, 1698, 3029,
	2502, 1706, 2134, 2596, 2503, 1182, 2135, 2369, 1678, 1931,
	2112, 1706, 2128, 2738, 2045, 2680, 213, 2594, 1678, 1811,
	1362, 3582, 3384, 3362, 1833, 2020, 3306, 2539, 1577, 1700,
	1701, 1702, 1703, 2538, 2537, 2536, 2535, 1138, 1135, 1683,
	1723, 976, 1677, 3023, 3024, 3307, 3041, 3042, 3043, 975,
	974, 973, 1677, 972, 1698, 971, 970, 966, 1712, 215,
	2937, 2867, 4094, 965, 964, 963, 962, 961, 960, 959,
	958, 3023, 3024, 2114, 1715, 213, 957, 1725, 956, 955,
	954, 953, 2114, 1705, 1707, 2114, 2114, 2114, 952, 951,
	950, 2370, 880, 879, 878, 877, 1675, 1676, 876, 875,
	1721, 3039, 1722, 874, 1376, 873, 872, 871, 214, 1692,
	1693, 870, 869, 868, 867, 866, 1704, 3038, 215, 207,
	865, 864, 863, 862, 861, 860, 1678, 1713, 208, 859,
	858, 857, 856, 855, 854, 3771, 1699, 3304, 853, 852,
	851, 1698, 1683, 850, 849, 839, 838, 834, 833, 827,
	177, 826, 1683, 1367, 784, 783, 741, 4283, 740, 1182,
	1677, 1045, 1716, 739, 738, 1045, 730, 214, 3900, 729,
	2046, 2371, 1704, 2368, 728, 697, 688, 213, 687, 686,
	670, 1236, 235, 1723, 234, 1236, 1705, 1707, 233, 1356,
	139, 232, 1699, 231, 230, 229, 1705, 1707, 1215, 228,
	227, 1712, 1220, 1206, 226, 225, 224, 3029, 223, 177,
	222, 221, 3730, 1045, 220, 1045, 219, 1045, 1541, 218,
	215, 3023, 3024, 1356, 1042, 217, 2495, 216, 3530, 3506,
	3341, 1342, 3114, 2960, 4263, 3029, 2943, 2791, 2719, 3040,
	2565, 2544, 2529, 3065, 1698, 1337, 2112, 4115, 1356, 2046,
	2128, 2227, 1527, 2399, 1698, 1794, 1388, 1375, 1714, 1704,
	1683, 1960, 1793, 1689, 1690, 1696, 1717, 1695, 1691, 214,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 1699,
	207, 3066, 2142, 3740, 1797, 1675, 1676, 3739, 1859, 208,
	2385, 1836, 1356, 1045, 1433, 1435, 1794, 1366, 1356, 2754,
	1019, 1764, 1356, 1793, 1370, 1716, 1222, 1200, 1169, 3039,
	1045, 177, 1045, 2373, 1674, 1678, 1356, 1420, 4163, 4100,
	4092, 1182, 1045, 3952, 1045, 1792, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 3983, 2383, 3039, 3907, 1675,
	1676, 3886, 3778, 1229, 3753, 1323, 1328, 1755, 3752, 1677,
	724, 3746, 3745, 727, 213, 3744, 3737, 2111, 3736, 3734,
	3729, 2141, 1706, 1195, 3726, 3902, 3725, 3628, 1356, 1678,
	3622, 3534, 1757, 1425, 3032, 3033, 3025, 3026, 3027, 3028,
	3030, 3031, 1699, 1365, 1364, 3029, 1045, 3533, 3532, 1045,
	3516, 3483, 1699, 1376, 3482, 3481, 3404, 215, 3400, 3109,
	3058, 1714, 3049, 1677, 3023, 3024, 1689, 1690, 1696, 1717,
	1695, 1691, 3022, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 2367, 1482, 1485, 3019, 4209, 1376, 3335, 3018,
	1498, 3016, 1376, 166, 166, 2987, 1546, 2986, 2985, 2982,
	1161, 2979, 2959, 2942, 1675, 1676, 214, 3040, 2574, 1683,
	2935, 1514, 1516, 2803, 1599, 1762, 2530, 207, 2356, 1674,
	1387, 1494, 1206, 1146, 2053, 1206, 208, 1706, 1673, 3580,
	2087, 1755, 4439, 4387, 1678, 3040, 1454, 4386, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 2051, 4357, 3039, 177, 3629,
	3023, 3024, 1438, 1756, 4317, 1754, 4315, 1171, 3430, 1613,
	4155, 4144, 4141, 1683, 1512, 4140, 1652, 4139, 1677, 1045,
	988, 4131, 4124, 4114, 2771, 1045, 1163, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 3063, 4113, 4088, 1491, 1679,
	1680, 1681, 1682, 1684, 1685, 4072, 2756, 816, 3132, 1545,
	4071, 1382, 2333, 4057, 4054, 4002, 3979, 1705, 1707, 3950,
	3933, 1531, 3932, 3914, 3913, 1508, 3877, 3853, 1526, 3770,
	3751, 3687, 3681, 3678, 68, 3570, 819, 818, 3029, 3569,
	1540, 3556, 3555, 3498, 3035, 3036, 3037, 1646, 3486, 3395,
	69, 3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030, 3031,
	1742, 3342, 3023, 3024, 3901, 4095, 73, 3325, 3629, 3281,
	3220, 1744, 3193, 3166, 3165, 1698, 3134, 2964, 1683, 1551,
	2963, 3033, 3025, 3026, 3027, 3028, 3030, 3031, 1568, 2339,
	1045, 1045, 1045, 2958, 2926, 3040, 1045, 2731, 1800, 1799,
	1798, 1795, 1600, 1167, 2668, 1167, 80, 1679, 1680, 1681,
	1682, 1684, 1685, 213, 1787, 1785, 3310, 2572, 2571, 1813,
	1236, 2541, 1705, 1707, 3029, 2534, 2501, 2381, 1045, 1858,
	1814, 718, 1809, 1808, 1649, 1894, 718, 1807, 1657, 968,
	3039, 967, 1806, 86, 1656, 1045, 1805, 213, 1804, 1356,
	1803, 213, 213, 1802, 1801, 1651, 215, 101, 1782, 1781,
	1780, 1779, 87, 98, 1778, 1777, 1776, 1045, 1775, 1822,
	1774, 1773, 1772, 1236, 1653, 1771, 4116, 3106, 1670, 1671,
	1698, 1796, 1770, 1769, 1768, 1867, 1757, 2755, 1743, 1741,
	215, 988, 1736, 1206, 215, 215, 1949, 1194, 1675, 1676,
	1165, 1869, 1165, 1184, 1958, 214, 1162, 1177, 1162, 1819,
	1820, 1457, 2143, 1699, 1452, 1381, 207, 88, 1924, 2632,
	1923, 3880, 1866, 1788, 1789, 208, 3029, 3774, 1678, 3722,
	1843, 3529, 3025, 3026, 3027, 3028, 3030, 3031, 3166, 214,
	3968, 166, 3509, 214, 214, 3501, 2563, 177, 2946, 1133,
	207, 2532, 3776, 3528, 207, 207, 1756, 3023, 3024, 208,
	3130, 1862, 1677, 208, 208, 1739, 1865, 1854, 1219, 1211,
	4384, 1873, 3828, 213, 1834, 4377, 1920, 990, 3040, 724,
	3291, 177, 727, 2398, 724, 177, 177, 727, 213, 4142,
	1951, 1841, 4044, 4043, 3905, 1951, 3855, 1926, 1681, 1682,
	1684, 1685, 3382, 3854, 1929, 3827, 1836, 3773, 1951, 3690,
	3689, 1356, 1356, 3688, 1922, 1812, 215, 988, 1699, 3504,
	2384, 1236, 3327, 4093, 3326, 1794, 1218, 1644, 4049, 1937,
	3196, 215, 1793, 1870, 1838, 1212, 1853, 1852, 1917, 1851,
	1844, 2651, 1849, 1848, 1973, 1847, 1777, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 2984, 2983, 3632, 91,
	2908, 1874, 1863, 2634, 3982, 214, 2382, 1777, 1211, 1214,
	3568, 1766, 3265, 4259, 3264, 2163, 207, 2038, 2043, 1567,
	214, 1211, 1217, 2006, 948, 208, 2009, 1614, 213, 2014,
	1954, 207, 1944, 1576, 2140, 4040, 4303, 4288, 4275, 3249,
	208, 2827, 1577, 2033, 3588, 174, 94, 177, 97, 3587,
	1985, 3573, 3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030,
	3031, 1990, 2770, 3359, 3070, 3143, 3954, 949, 3432, 2570,
	3256, 215, 213, 2364, 213, 2952, 213, 1456, 1810, 1790,
	820, 2081, 1481, 4284, 1432, 139, 213, 1208, 1359, 1189,
	213, 4297, 2018, 4294, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 724, 2677, 2088, 727, 3300, 1356, 3545, 1356, 4135,
	1356, 3889, 4218, 2035, 4121, 215, 2674, 215, 3169, 215,
	214, 1763, 3563, 2810, 2767, 1888, 1356, 1356, 2077, 215,
	3242, 207, 1145, 215, 1365, 1364, 4368, 1356, 4343, 4344,
	208, 141, 2082, 3027, 3028, 3030, 3031, 4285, 3147, 1356,
	3376, 1356, 1356, 1356, 2013, 4023, 178, 1398, 3601, 2093,
	3816, 1555, 177, 1891, 214, 1213, 214, 2582, 214, 2212,
	1938, 2369, 1360, 718, 2210, 207, 2044, 207, 214, 207,
	1406, 4434, 214, 4016, 208, 1457, 208, 946, 208, 207,
	2150, 944, 942, 207, 4008, 3850, 940, 3597, 208, 3596,
	3131, 2090, 208, 937, 3590, 1612, 817, 3586, 177, 2116,
	177, 2101, 3584, 2064, 2600, 3542, 929, 3541, 2103, 2063,
	177, 3600, 1209, 2145, 177, 3245, 779, 3125, 2957, 2598,
	1210, 2610, 2167, 2956, 1943, 1942, 2955, 2954, 1951, 1953,
	2912, 2684, 1611, 3025, 3026, 3027, 3028, 3030, 3031, 1454,
	2095, 2098, 2683, 2098, 1045, 2370, 1045, 2162, 2679, 2670,
	2099, 1407, 2662, 1045, 2661, 2660, 1894, 1894, 1236, 2151,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 2659, 1045, 3548, 1045, 1045,
	1045, 1045, 1512, 2244, 1512, 2638, 1195, 2136, 988, 2137,
	988, 724, 2231, 1219, 727, 780, 4369, 2625, 1219, 2553,
	1045, 2314, 2140, 1045, 1045, 2371, 1553, 2368, 1610, 2613,
	1650, 1045, 213, 2600, 3149, 1045, 2154, 1045, 1045, 2412,
	3798, 3195, 2411, 1946, 4372, 1236, 2272, 2062, 2598, 2268,
	2269, 1045, 1045, 1045, 1045, 2764, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1444, 2188, 1443, 2171, 934, 2155,
	1982, 1218, 2242, 3794, 1685, 215, 1218, 1442, 1211, 1441,
	2242, 3931, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1467, 2206, 2636, 2221, 1045, 2345, 2346, 2564, 2589,
	1548, 1456, 1824, 1978, 3360, 2224, 1402, 1167, 2255, 2225,
	2345, 2361, 2159, 2179, 1236, 1361, 1593, 1415, 986, 2329,
	2329, 2545, 2172, 1167, 214, 3795, 3990, 2624, 1983, 1984,
	2240, 1623, 2228, 3031, 4373, 207, 2407, 2230, 2240, 1045,
	1236, 2243, 2236, 2229, 208, 968, 2216, 2259, 968, 968,
	2260, 2261, 1948, 2364, 3829, 2453, 2453, 2467, 1979, 2345,
	2655, 2360, 2487, 2489, 2648, 2649, 177, 2373, 2493, 2648,
	2649, 1594, 1569, 2885, 2337, 2900, 1174, 1161, 1828, 1161,
	2173, 2335, 2648, 2649, 2409, 2325, 3812, 4396, 2517, 2410,
	1947, 1643, 2413, 1655, 2414, 2415, 2176, 3023, 3024, 2923,
	3041, 3042, 3043, 985, 1165, 1854, 1193, 2238, 4343, 2223,
	1162, 1038, 2542, 2323, 2341, 1549, 1172, 2180, 2623, 3714,
	1165, 3559, 3607, 2612, 1831, 2100, 1162, 2921, 1565, 1595,
	3210, 2358, 2509, 3367, 988, 4281, 2676, 2170, 2531, 1826,
	3992, 1236, 4375, 988, 3366, 1577, 2864, 988, 1843, 3203,
	3421, 1577, 2711, 1163, 2373, 1163, 1206, 1829, 3146, 1133,
	646, 3606, 847, 2508, 2241, 3849, 2004, 1609, 2675, 3209,
	1428, 3038, 2241, 1894, 3023, 3024, 2367, 2566, 2462, 2449,
	2478, 2469, 2673, 2491, 1988, 1927, 641, 1606, 3202, 3585,
	166, 2710, 2556, 2499, 2500, 782, 781, 2899, 2510, 1827,
	3583, 1236, 2514, 2515, 37, 2003, 1888, 1888, 2558, 1841,
	987, 1201, 3572, 3571, 1426, 1356, 695, 996, 3244, 3790,
	1175, 3214, 2678, 1987, 3791, 1796, 2602, 2658, 2637, 3085,
	3930, 1045, 1045, 2239, 1045, 988, 2601, 4354, 777, 2577,
	776, 2239, 2635, 2220, 1891, 1891, 2211, 2516, 3038, 2521,
	2319, 2209, 2527, 2528, 2611, 2050, 2049, 1356, 2580, 2671,
	4360, 3029, 2573, 1554, 2918, 938, 2641, 698, 2320, 938,
	938, 1788, 1789, 2321, 939, 3793, 3418, 2326, 4359, 2870,
	3810, 938, 2576, 2551, 4193, 2640, 840, 2919, 2021, 3796,
	2578, 2924, 2373, 2028, 2656, 4399, 2583, 2892, 2893, 979,
	2752, 924, 4332, 3297, 4282, 1830, 3704, 3703, 3298, 4381,
	1212, 4425, 2579, 1356, 1356, 1404, 1356, 1627, 4374, 4136,
	693, 2627, 3044, 1976, 4150, 981, 2615, 2618, 1356, 828,
	1356, 2605, 2778, 2639, 3798, 1621, 1212, 1428, 3029, 3148,
	2113, 1783, 2599, 2030, 1356, 1466, 2657, 2650, 2652, 2653,
	2654, 3128, 1828, 2794, 4331, 3181, 3419, 814, 2222, 1552,
	1401, 924, 924, 3039, 1985, 1976, 2178, 3794, 3223, 3700,
	980, 3787, 1955, 1956, 724, 984, 2824, 727, 2798, 1735,
	3297, 3943, 703, 2873, 1045, 981, 981, 4353, 3785, 3991,
	2735, 1985, 2029, 4238, 2828, 2513, 4280, 3789, 1831, 2714,
	2007, 4229, 2027, 3835, 2716, 2355, 3792, 1365, 2717, 2585,
	3180, 3084, 2742, 2511, 925, 3869, 2962, 4400, 3560, 3795,
	2849, 2729, 1208, 2526, 2587, 3811, 987, 3434, 1045, 4310,
	2739, 1829, 2809, 2785, 1045, 1045, 935, 2788, 4311, 2789,
	3039, 2833, 2834, 3799, 2914, 2328, 2322, 2762, 1208, 166,
	2780, 2796, 2840, 2841, 2842, 2773, 2324, 2588, 2781, 3788,
	2920, 2875, 711, 2877, 3614, 4191, 2846, 2799, 1550, 1173,
	2922, 2748, 2829, 3612, 925, 925, 4388, 2586, 2855, 3879,
	2857, 2795, 2859, 3694, 3525, 1622, 705, 1187, 2800, 1045,
	1045, 1966, 2811, 3705, 3378, 1045, 1967, 2336, 2373, 4192,
	1213, 3040, 2868, 2851, 3184, 2852, 2853, 2883, 1045, 1045,
	3627, 4157, 2831, 2872, 1045, 1045, 2835, 642, 2836, 848,
	1045, 694, 1512, 1888, 841, 842, 1213, 4279, 1654, 1045,
	1045, 1045, 2175, 3023, 3024, 1045, 3041, 3042, 3043, 2854,
	2118, 1192, 2869, 2120, 709, 1045, 2793, 4330, 4342, 2125,
	2915, 4379, 2127, 3186, 1624, 3713, 2130, 1209, 2891, 4340,
	1581, 1891, 1045, 1564, 1566, 1210, 696, 829, 830, 692,
	4172, 2880, 4056, 2169, 3647, 2881, 2901, 2882, 3040, 1830,
	3927, 3615, 2600, 1209, 3749, 2936, 3284, 643, 2070, 2886,
	2255, 1210, 1821, 1185, 1180, 633, 1664, 2616, 926, 2848,
	1665, 3999, 1664, 2940, 2941, 1968, 3701, 3038, 2944, 1659,
	2856, 2024, 2858, 3790, 2860, 3185, 700, 2258, 3791, 3472,
	1986, 1939, 1972, 3998, 4405, 3870, 1976, 3119, 3035, 3036,
	3037, 644, 2871, 645, 3977, 3034, 3032, 3033, 3025, 3026,
	3027, 3028, 3030, 3031, 2878, 704, 4065, 3614, 4380, 2005,
	4426, 2913, 1045, 1045, 1045, 4120, 3612, 3648, 926, 926,
	2022, 1045, 1045, 1045, 3594, 3544, 1045, 3285, 3610, 3793,
	3277, 2016, 4309, 3815, 710, 2945, 1045, 1167, 1236, 2114,
	3814, 4382, 1045, 3796, 1045, 3077, 3078, 707, 3161, 1625,
	1969, 1974, 1167, 702, 2015, 3157, 1663, 3029, 2008, 2023,
	2753, 2951, 1663, 2226, 843, 844, 1992, 2747, 2733, 3926,
	1236, 1735, 3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030,
	3031, 2094, 1167, 1211, 2083, 1236, 988, 2011, 1996, 978,
	2075, 927, 2056, 4158, 2248, 699, 1458, 3417, 3613, 3060,
	3538, 3099, 1894, 1395, 2311, 669, 1236, 831, 832, 1211,
	3487, 1161, 1983, 1984, 4207, 3079, 3379, 4173, 3044, 1664,
	1665, 1045, 2217, 706, 3615, 3112, 1665, 1161, 1936, 1932,
	3650, 1626, 1970, 3894, 1165, 1045, 3750, 712, 2730, 928,
	1162, 3113, 2012, 1993, 1469, 4038, 4036, 1894, 701, 1165,
	2642, 927, 927, 3089, 3978, 1162, 3706, 3172, 3144, 3039,
	3792, 3168, 3473, 3167, 2160, 1045, 1356, 2906, 1206, 3108,
	3088, 3474, 3150, 3500, 1975, 3097, 2884, 3087, 1976, 1165,
	3082, 3100, 3101, 4404, 2505, 1162, 3081, 1163, 1596, 3153,
	3154, 3055, 3056, 3057, 3105, 3129, 3071, 3799, 2550, 928,
	928, 1356, 1934, 1163, 3928, 2549, 2548, 3170, 3086, 2547,
	3174, 1236, 3171, 3156, 1450, 3176, 3117, 3353, 3178, 1663,
	1356, 3619, 2737, 3188, 3158, 1356, 3346, 2249, 3135, 3136,
	985, 3137, 3098, 3124, 3813, 1004, 3198, 3707, 2617, 1436,
	3162, 1448, 1935, 846, 1997, 3121, 3122, 3123, 1356, 3200,
	1582, 4127, 4033, 1437, 1356, 3138, 1356, 3861, 2507, 2621,
	1236, 3986, 3189, 2506, 3336, 2309, 3226, 718, 2312, 3229,
	3211, 3183, 3145, 3234, 3236, 2092, 3252, 3353, 1356, 4350,
	4154, 3613, 4159, 1866, 3151, 3221, 3346, 3911, 2832, 3539,
	3230, 2715, 1356, 2713, 1053, 3237, 2149, 3040, 1373, 1558,
	1380, 1973, 1386, 4210, 3120, 3103, 3213, 3104, 1167, 1998,
	1999, 3212, 3293, 4128, 3187, 4215, 2643, 2644, 2308, 3348,
	3247, 2742, 3250, 3261, 3276, 3231, 3224, 3205, 4204, 3194,
	3238, 3756, 1973, 1994, 3347, 3489, 4233, 2380, 243, 243,
	243, 3208, 636, 637, 1971, 652, 636, 652, 662, 667,
	1356, 1356, 3273, 685, 3910, 3222, 2742, 3216, 691, 3232,
	3987, 3206, 2824, 3302, 243, 3207, 3239, 3093, 2018, 731,
	1641, 2824, 3243, 1356, 1995, 2742, 2018, 3975, 1507, 3348,
	2742, 1639, 668, 825, 3270, 1618, 4211, 4352, 3201, 243,
	4299, 3316, 3053, 4143, 3347, 1525, 4129, 1530, 3949, 3748,
	3618, 2640, 3052, 3286, 3394, 1165, 3357, 1539, 1425, 1544,
	1236, 1162, 3254, 1236, 3274, 724, 3246, 3294, 727, 1616,
	3976, 3344, 3139, 3017, 3035, 3036, 3037, 2925, 1592, 2734,
	2669, 3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030, 3031,
	2633, 1590, 3215, 1045, 2575, 1449, 1588, 1586, 1861, 1045,
	1045, 3323, 1888, 1045, 1045, 1045, 3355, 1045, 3094, 3334,
	1857, 3299, 3317, 1584, 1642, 3313, 1045, 1894, 1574, 1598,
	3308, 1572, 1447, 3373, 845, 1045, 166, 166, 1045, 1536,
	3301, 3375, 2000, 1446, 1236, 2208, 3374, 3361, 1659, 3338,
	1891, 2866, 4082, 1045, 3321, 3322, 2310, 1888, 3372, 2042,
	2865, 1236, 636, 636, 2838, 3363, 3092, 3364, 2237, 3365,
	243, 1894, 1894, 1045, 1045, 3356, 1045, 1045, 1045, 3380,
	3397, 2219, 1605, 988, 2183, 2055, 1921, 3225, 1767, 3349,
	3350, 3351, 3352, 1547, 2786, 1891, 1419, 3096, 3406, 3407,
	2790, 2379, 3369, 4274, 4074, 3292, 3836, 3824, 1640, 4203,
	3354, 3892, 3841, 3377, 2001, 1824, 3783, 4075, 1045, 1638,
	3646, 3446, 1045, 1617, 1894, 1894, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 1045, 1045, 1045, 1045, 3638, 1045, 3447, 4076, 3349,
	3350, 3351, 3352, 1045, 1045, 1894, 3599, 1615, 3566, 4328,
	1045, 2520, 3564, 3402, 2268, 3437, 1591, 732, 733, 3543,
	3289, 1045, 3280, 3413, 3275, 3424, 3266, 2792, 3429, 1589,
	2787, 2765, 1167, 1167, 1587, 1585, 1045, 3420, 3422, 3423,
	936, 1828, 4320, 2751, 3436, 2740, 2727, 2712, 3443, 2133,
	2131, 1583, 3095, 2129, 2126, 2121, 1573, 4078, 2119, 1571,
	3370, 2115, 2106, 2054, 2052, 1236, 1882, 2268, 3452, 3444,
	2207, 1445, 3518, 3445, 2034, 2019, 2002, 1989, 1977, 4077,
	3414, 3233, 1668, 3484, 3505, 1868, 2028, 1831, 3449, 2904,
	3522, 3476, 1142, 4344, 1940, 4243, 4079, 3451, 3480, 3916,
	1045, 3909, 1826, 3908, 3848, 3779, 2825, 1959, 1400, 2600,
	2600, 4067, 2622, 4060, 3658, 1985, 1045, 1167, 1143, 3477,
	1829, 1966, 1636, 1637, 2598, 2619, 1967, 2174, 1490, 1165,
	1165, 1850, 708, 2203, 2091, 1162, 1162, 2202, 1489, 4242,
	2181, 3817, 3843, 1570, 1045, 1045, 4102, 3757, 166, 3493,
	3494, 3735, 2645, 2626, 1672, 735, 734, 3496, 3497, 4346,
	3552, 4338, 1827, 3593, 1675, 1676, 3485, 4304, 3508, 3521,
	2726, 1045, 647, 2205, 3507, 1675, 1676, 3635, 2076, 2666,
	2905, 1198, 2674, 2682, 3592, 941, 943, 945, 1669, 236,
	2681, 1161, 2665, 1356, 1678, 2027, 2664, 2628, 2630, 4198,
	4167, 3531, 3984, 3491, 4164, 4126, 1161, 4052, 4376, 736,
	737, 2629, 1894, 767, 1165, 3523, 3524, 3574, 1490, 811,
	1162, 3595, 1490, 3578, 1144, 658, 3547, 1888, 1677, 3535,
	3536, 3537, 4031, 3637, 630, 1968, 1161, 3626, 3515, 1677,
	3279, 1356, 2772, 2492, 3589, 1925, 1875, 3127, 1045, 3579,
	3581, 4403, 1972, 3023, 3024, 4166, 1167, 1045, 1367, 3660,
	1675, 1676, 3727, 3633, 4235, 1891, 3604, 1163, 1830, 4236,
	4235, 1888, 1888, 2640, 2375, 4236, 3527, 1356, 1356, 1356,
	3669, 2592, 1163, 2592, 2593, 3617, 2590, 2591, 2590, 4356,
	2408, 1557, 1620, 1356, 3651, 1619, 3655, 1556, 4053, 4017,
	3844, 3840, 3654, 3839, 3723, 3162, 2778, 3644, 3526, 1891,
	1891, 3425, 1163, 1236, 3634, 3227, 1761, 1760, 4390, 4361,
	1969, 1974, 4202, 4201, 1888, 1888, 4200, 4117, 4034, 4080,
	4012, 3969, 3966, 3872, 4081, 1236, 3775, 3636, 1045, 1045,
	3684, 3664, 2824, 1178, 1045, 1045, 1894, 3621, 3562, 1045,
	1045, 3639, 1045, 1165, 3557, 1888, 1045, 3685, 3311, 1162,
	3283, 3661, 1891, 1891, 3282, 3662, 3656, 1045, 3177, 3013,
	3012, 1188, 3011, 3653, 3010, 3009, 3008, 3007, 3608, 3668,
	685, 3616, 3006, 1045, 3005, 3676, 3679, 3673, 3004, 3691,
	3683, 3674, 3675, 1891, 3003, 3002, 3652, 3001, 3000, 3717,
	3682, 2999, 1970, 3708, 243, 3605, 243, 243, 1332, 3709,
	243, 243, 1347, 2998, 3680, 2997, 3620, 2996, 2995, 2994,
	3702, 2993, 2992, 2991, 2990, 3721, 243, 3697, 1369, 2863,
	2845, 2844, 2843, 2783, 2757, 2728, 2620, 2568, 2567, 2340,
	3641, 2204, 2201, 1167, 1975, 2200, 2199, 2198, 1976, 1393,
	2197, 1167, 2109, 2108, 2107, 1236, 2105, 1236, 2089, 2065,
	2061, 2060, 1161, 2059, 1167, 2058, 2057, 1635, 1418, 1634,
	1424, 1579, 1578, 1476, 243, 243, 1475, 1332, 1474, 1473,
	1472, 1236, 1471, 1470, 1468, 1463, 1462, 3692, 1461, 1460,
	3747, 1459, 1414, 1963, 1413, 1412, 1465, 1411, 1410, 1409,
	1408, 1403, 1399, 1397, 1045, 1396, 1167, 3112, 243, 1227,
	243, 243, 1226, 1332, 243, 1369, 1225, 1224, 1223, 1191,
	1190, 1125, 1930, 947, 933, 685, 3989, 243, 243, 3765,
	3797, 1629, 1964, 1236, 85, 3808, 3761, 1405, 1163, 754,
	1165, 1236, 79, 3780, 3781, 2025, 1162, 3561, 1165, 3552,
	825, 3764, 3807, 907, 1162, 3769, 3768, 1882, 1882, 3772,
	4232, 1165, 1888, 3759, 3760, 1389, 3818, 1162, 3758, 1356,
	1356, 166, 3819, 3782, 4149, 762, 3763, 4217, 3179, 2685,
	2182, 1580, 2184, 3107, 2533, 4190, 1356, 3731, 3762, 3754,
	2961, 4109, 3942, 2378, 3823, 3847, 1765, 1236, 3064, 3845,
	1891, 3846, 1356, 1165, 81, 3831, 3859, 3833, 1029, 1162,
	1075, 3868, 3867, 3312, 1971, 3838, 3314, 3315, 1348, 3784,
	3546, 3318, 243, 3319, 3320, 2814, 3862, 3885, 3865, 1167,
	3864, 1879, 1881, 3857, 995, 1239, 3858, 1941, 243, 1356,
	1356, 1356, 3851, 1035, 1957, 1950, 3809, 2569, 3834, 2452,
	3856, 1236, 1391, 2252, 1052, 3895, 1049, 1883, 3912, 3820,
	3821, 1885, 1051, 1045, 1045, 1045, 3899, 3863, 3878, 3904,
	1050, 3890, 3552, 3882, 1747, 1884, 1784, 1429, 1752, 1048,
	1878, 1236, 3643, 3642, 2736, 3897, 1045, 2776, 3309, 1045,
	1045, 3881, 1455, 1453, 909, 1945, 1888, 2334, 2362, 1045,
	2950, 1758, 1894, 1010, 1031, 2359, 3921, 1045, 1045, 1183,
	239, 1020, 1234, 1009, 3090, 3069, 1335, 3296, 3919, 3918,
	3514, 1504, 1236, 2247, 1356, 771, 1165, 3923, 3020, 3934,
	2365, 1520, 1162, 3939, 1891, 1176, 3929, 2475, 1236, 2468,
	2464, 2742, 3142, 2766, 3832, 1533, 1045, 1645, 3956, 1737,
	2777, 1221, 1013, 1167, 2332, 3951, 1749, 3896, 2930, 2257,
	3303, 3110, 3945, 2562, 4239, 1045, 3433, 1894, 2069, 1141,
	1140, 3915, 1139, 4223, 4220, 1045, 1161, 1161, 1045, 3677,
	3259, 1933, 2584, 1727, 3267, 1025, 1340, 1045, 3962, 3963,
	3075, 3971, 2470, 3337, 1236, 1416, 3552, 1559, 3884, 690,
	3804, 1037, 1726, 2706, 2705, 1356, 1356, 4123, 1207, 1205,
	3972, 3965, 1204, 3970, 1203, 4011, 3160, 4424, 3558, 212,
	2898, 1666, 1658, 209, 3994, 211, 210, 3873, 3993, 3519,
	3116, 4302, 3576, 3251, 21, 4046, 636, 20, 4022, 19,
	4037, 106, 40, 1236, 18, 121, 1356, 138, 137, 114,
	1165, 136, 1163, 1163, 4009, 135, 1162, 243, 134, 243,
	4001, 1161, 133, 243, 1167, 1167, 4019, 4027, 4026, 140,
	4051, 4024, 4029, 132, 1882, 4050, 1369, 1332, 243, 3261,
	243, 4035, 4013, 1045, 1045, 243, 1369, 652, 131, 126,
	243, 1369, 4030, 4085, 4086, 4045, 130, 685, 4064, 4061,
	1045, 1894, 129, 128, 127, 125, 124, 3552, 3552, 123,
	4063, 122, 4083, 4069, 120, 4068, 3899, 4058, 119, 118,
	117, 116, 115, 113, 112, 111, 110, 109, 108, 107,
	1045, 681, 678, 1045, 57, 56, 105, 1163, 104, 17,
	38, 4097, 14, 61, 62, 16, 4119, 13, 33, 84,
	96, 4101, 95, 1167, 4107, 2631, 4098, 4099, 34, 93,
	92, 1165, 1165, 32, 15, 4070, 90, 1162, 1162, 89,
	31, 29, 4130, 11, 9, 4089, 8, 35, 4118, 1845,
	12, 5, 4138, 171, 170, 173, 169, 172, 2667, 83,
	168, 4066, 4137, 4133, 1045, 1045, 3552, 4132, 167, 82,
	1161, 4062, 3565, 27, 3567, 1167, 10, 163, 1167, 4047,
	4025, 3631, 1356, 76, 4145, 165, 164, 162, 4147, 161,
	160, 77, 1356, 1356, 2720, 4014, 74, 2723, 159, 2725,
	78, 4161, 4162, 158, 4169, 75, 4181, 4171, 157, 1356,
	4165, 4160, 25, 4050, 6, 60, 7, 3924, 3552, 3358,
	1165, 3552, 1888, 1045, 1045, 4175, 1162, 99, 100, 36,
	72, 71, 3598, 1045, 243, 70, 24, 243, 4178, 59,
	23, 2769, 200, 4177, 2769, 199, 1163, 198, 197, 196,
	195, 4185, 190, 189, 4195, 194, 4179, 4180, 4212, 192,
	1891, 191, 1045, 1045, 193, 1045, 188, 4199, 203, 202,
	204, 201, 1165, 4184, 206, 1165, 187, 185, 1162, 4237,
	181, 1162, 180, 184, 186, 183, 182, 1888, 4214, 179,
	243, 205, 155, 4234, 243, 156, 4194, 67, 4222, 4225,
	4227, 243, 4253, 154, 4257, 153, 4258, 243, 4231, 152,
	151, 3666, 1045, 1045, 1045, 3667, 4244, 4248, 150, 149,
	4256, 4252, 243, 148, 243, 1891, 66, 4241, 636, 22,
	243, 2, 1, 0, 0, 4226, 4286, 4174, 4230, 1045,
	0, 4291, 0, 4273, 2110, 0, 4272, 2861, 4251, 4270,
	4271, 1860, 0, 4186, 0, 4187, 243, 1161, 0, 0,
	0, 0, 0, 243, 0, 1161, 0, 0, 4305, 4314,
	0, 0, 4289, 0, 0, 0, 0, 0, 1161, 0,
	0, 0, 0, 0, 4325, 0, 0, 1045, 4316, 4313,
	0, 4213, 0, 685, 4319, 0, 4324, 825, 4312, 0,
	4329, 0, 0, 4318, 1961, 2888, 0, 0, 0, 0,
	4323, 0, 4345, 0, 0, 4337, 4341, 4339, 4335, 4336,
	1161, 1888, 243, 0, 1332, 243, 4347, 0, 4351, 4349,
	0, 0, 0, 1163, 0, 0, 1167, 0, 1167, 685,
	4362, 1163, 0, 4358, 4363, 4348, 243, 4355, 0, 2927,
	2928, 4370, 4222, 4364, 1163, 4225, 0, 243, 243, 1891,
	243, 0, 243, 0, 243, 4365, 243, 4367, 0, 0,
	4366, 0, 0, 0, 0, 0, 4385, 4383, 4371, 3552,
	4241, 3552, 4321, 4322, 0, 2470, 2470, 2213, 4326, 4391,
	2214, 0, 2215, 4397, 4394, 0, 1163, 1045, 1045, 4398,
	0, 0, 0, 0, 243, 1045, 0, 1045, 1045, 4407,
	4401, 0, 0, 4410, 0, 4415, 0, 4416, 4392, 0,
	4414, 4420, 4413, 4419, 0, 667, 4418, 0, 0, 685,
	0, 0, 0, 1165, 4417, 1165, 4423, 4427, 0, 1162,
	0, 1162, 4429, 1161, 4431, 0, 4432, 0, 0, 4433,
	0, 2338, 2047, 4436, 4428, 0, 0, 0, 4438, 0,
	1045, 4441, 0, 4443, 0, 4440, 1747, 4444, 2778, 4446,
	0, 4430, 0, 4447, 0, 0, 0, 0, 0, 1823,
	4408, 4409, 4437, 1329, 0, 0, 1341, 1344, 0, 0,
	0, 0, 0, 3046, 3047, 3048, 0, 0, 0, 2138,
	0, 1966, 0, 0, 0, 0, 1967, 0, 0, 0,
	0, 0, 0, 1882, 0, 1504, 2152, 4389, 0, 1163,
	2474, 0, 0, 0, 0, 0, 2153, 0, 0, 2470,
	2470, 2470, 0, 4442, 0, 0, 0, 0, 2161, 0,
	2164, 2165, 2166, 0, 0, 0, 0, 0, 0, 0,
	1344, 1344, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 1675, 1676, 0, 0,
	636, 0, 1718, 1719, 1720, 1968, 0, 243, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 243, 1972, 0, 3023, 3024, 1678, 3041, 3042, 3043,
	0, 0, 0, 1163, 1724, 0, 243, 1369, 0, 0,
	0, 0, 0, 0, 0, 0, 3399, 0, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 3190, 3191, 0, 0, 3192, 1161, 1161,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 243, 1369, 0, 652, 243, 0, 0,
	1969, 1974, 0, 0, 0, 0, 0, 0, 3038, 3217,
	3218, 0, 0, 3219, 0, 0, 4003, 4004, 0, 0,
	0, 0, 3023, 3024, 0, 3041, 3042, 3043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4018, 2609, 0, 4020, 4021, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 1163, 1163, 0, 0, 0, 2271,
	1700, 1701, 1702, 1703, 243, 0, 0, 1161, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 3038, 0, 3029, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 1725, 0,
	0, 0, 0, 0, 1705, 1707, 0, 0, 0, 1161,
	243, 2718, 1161, 0, 1975, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 1693, 0, 1163, 0, 1369, 2376, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 1713, 3044,
	0, 0, 0, 0, 0, 2761, 0, 0, 0, 0,
	0, 0, 1698, 3152, 0, 2609, 0, 636, 1882, 0,
	0, 2782, 0, 0, 0, 0, 3029, 243, 0, 0,
	243, 0, 0, 0, 243, 1163, 243, 0, 1163, 0,
	3039, 1332, 0, 243, 243, 0, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 2807, 825, 0, 2609, 2609,
	4146, 0, 1882, 1882, 3045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 3390, 3391, 0, 0, 0,
	0, 2543, 0, 0, 0, 0, 0, 3044, 0, 0,
	0, 0, 0, 243, 1332, 243, 1341, 0, 1369, 0,
	1369, 1369, 243, 2474, 0, 1332, 0, 1332, 0, 1332,
	0, 2470, 2470, 0, 0, 1882, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3039, 0,
	1704, 0, 0, 0, 1971, 243, 243, 243, 243, 1332,
	243, 0, 243, 0, 0, 0, 1882, 0, 0, 0,
	1699, 0, 0, 0, 2709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 1716, 0, 3040, 0,
	0, 243, 2595, 2474, 2474, 0, 0, 3453, 3454, 3455,
	3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465,
	3466, 3467, 3468, 3469, 3470, 3471, 0, 3475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1161, 0, 1161, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
	2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
	2470, 2470, 0, 2470, 0, 0, 0, 0, 0, 0,
	0, 0, 2797, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 3040, 0, 0, 4301,
	1369, 0, 1714, 0, 0, 0, 0, 0, 69, 0,
	1717, 1695, 1691, 2839, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 73, 0, 1163, 0, 1163, 0,
	994, 0, 0, 0, 994, 3035, 3036, 3037, 0, 0,
	0, 0, 3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030,
	3031, 0, 0, 0, 0, 0, 0, 2474, 2474, 2474,
	0, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 1371, 1882, 1377, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 0, 0, 0, 0,
	87, 98, 0, 3035, 3036, 3037, 0, 0, 0, 0,
	3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030, 3031, 1341,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 636, 1505, 0, 0, 0, 636, 0, 0, 636,
	0, 0, 636, 636, 0, 88, 0, 0, 636, 1523,
	0, 1528, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 1537, 0, 1542, 3640, 0, 0, 0, 1369, 0,
	0, 3023, 3024, 0, 3041, 3042, 3043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	1369, 0, 0, 3398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2609, 2609, 243, 0, 1347, 0, 0, 2609,
	0, 0, 3164, 0, 0, 1601, 0, 0, 1607, 0,
	2609, 3164, 0, 2609, 3164, 0, 0, 3164, 0, 0,
	0, 0, 3693, 0, 0, 3038, 0, 0, 0, 0,
	243, 243, 1347, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2559, 2701, 0,
	0, 0, 0, 1347, 243, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 0, 2609,
	0, 3228, 2609, 1347, 0, 0, 2609, 2609, 1347, 0,
	0, 2693, 2691, 0, 0, 0, 0, 0, 2695, 2697,
	2687, 0, 0, 0, 0, 0, 0, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 174, 94, 3029, 97, 0, 0, 0,
	0, 243, 3255, 0, 0, 3257, 2609, 0, 1746, 243,
	0, 0, 0, 243, 1759, 1424, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 820, 0,
	0, 0, 0, 139, 0, 0, 0, 2761, 0, 0,
	1332, 0, 243, 0, 0, 2609, 0, 636, 0, 0,
	0, 0, 0, 0, 2609, 0, 3044, 0, 0, 0,
	0, 0, 243, 215, 0, 0, 243, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 243, 2761, 0, 0, 2761, 3039, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 3102, 214, 0, 0, 0, 0, 0, 0, 1817,
	1817, 1817, 0, 207, 0, 0, 3115, 0, 0, 2474,
	2474, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	2689, 0, 3368, 0, 0, 1332, 243, 3133, 243, 0,
	0, 2703, 1344, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3871, 2702, 2694, 2692, 2696, 2698, 2688, 2690, 2704,
	0, 243, 3883, 0, 0, 0, 2700, 3240, 0, 0,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 1344,
	0, 0, 0, 1882, 3903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3271, 0, 2707,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	0, 3278, 0, 0, 0, 3040, 0, 3431, 0, 0,
	0, 2474, 2474, 2474, 2474, 2474, 2474, 2474, 2474, 2474,
	2474, 2474, 2474, 2474, 2474, 2474, 2474, 2474, 2474, 2474,
	0, 2474, 0, 0, 0, 0, 0, 0, 1882, 0,
	3948, 0, 242, 242, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 1329, 0, 0, 0, 0, 0, 3329,
	3330, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	1341, 3115, 0, 0, 0, 0, 2470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3980, 0, 0,
	0, 0, 0, 725, 3023, 3024, 0, 3041, 3042, 3043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2470, 0, 0, 243, 243, 0, 0,
	0, 0, 3035, 3036, 3037, 0, 0, 0, 0, 3034,
	3032, 3033, 3025, 3026, 3027, 3028, 3030, 3031, 636, 636,
	0, 0, 2708, 0, 0, 0, 0, 0, 0, 0,
	0, 2699, 0, 0, 0, 0, 0, 0, 3038, 0,
	1369, 1369, 1882, 0, 0, 0, 0, 0, 0, 1344,
	1344, 0, 0, 0, 1369, 1369, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3554, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 1344, 0,
	685, 4106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 1341, 0, 1341, 0, 0, 2470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	243, 0, 0, 0, 0, 3410, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 3426, 0, 0, 0, 0, 0, 0, 3044,
	243, 0, 0, 0, 0, 243, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4151, 0, 0, 2609,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3039, 0, 0, 0, 0, 0, 0, 4168, 0, 2807,
	2807, 0, 0, 0, 0, 825, 825, 2609, 0, 0,
	2761, 2761, 0, 0, 825, 2609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 2246, 0, 2250, 0, 0, 0, 0,
	0, 0, 2264, 0, 0, 0, 0, 0, 0, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 0, 2313, 3517, 2315, 2316, 2317,
	2318, 0, 0, 0, 0, 3732, 0, 0, 0, 4245,
	0, 0, 4246, 0, 0, 0, 0, 0, 0, 2342,
	0, 0, 3602, 0, 0, 0, 0, 0, 3040, 0,
	1746, 0, 0, 0, 2357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2387, 2390, 2393, 2396, 0, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 1369, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 2466, 0, 2477, 2479, 2484, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 3670, 3671, 3672, 0,
	0, 0, 0, 0, 0, 0, 2609, 2609, 2609, 0,
	68, 245, 1504, 0, 0, 0, 0, 3805, 0, 3805,
	3554, 1369, 0, 0, 0, 0, 69, 0, 0, 2609,
	0, 3164, 0, 0, 1369, 1369, 243, 1347, 0, 238,
	238, 632, 73, 0, 0, 3035, 3036, 3037, 1347, 243,
	1347, 243, 3034, 3032, 3033, 3025, 3026, 3027, 3028, 3030,
	3031, 0, 2609, 0, 2609, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 2609,
	0, 0, 0, 0, 3875, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 1341, 0, 0,
	0, 1077, 243, 0, 0, 0, 0, 0, 242, 86,
	242, 242, 0, 0, 242, 242, 0, 0, 0, 0,
	2080, 0, 0, 101, 0, 0, 0, 0, 87, 98,
	725, 0, 0, 3554, 0, 0, 1369, 0, 0, 0,
	0, 0, 0, 0, 2474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 1676, 0, 0, 0, 242, 242,
	1008, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 2474, 0, 0, 0, 0, 1706, 0, 0, 0,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 0,
	2721, 2722, 242, 2724, 242, 242, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 242, 0, 0, 0, 0, 1677, 2609, 0,
	3164, 0, 0, 3974, 0, 0, 0, 1697, 0, 0,
	0, 243, 1341, 1341, 0, 0, 1694, 3554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 3777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 243, 0, 3712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 3974, 91, 242, 1700, 1701, 1702,
	1703, 0, 2609, 0, 1341, 0, 0, 1683, 0, 0,
	0, 0, 242, 0, 4055, 2474, 0, 0, 3920, 0,
	3922, 0, 0, 0, 0, 0, 1369, 0, 0, 0,
	0, 0, 0, 2862, 0, 0, 0, 0, 3554, 3554,
	0, 174, 94, 0, 97, 0, 0, 0, 0, 0,
	0, 1705, 1707, 0, 0, 243, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 820, 1692, 1693, 3431,
	0, 139, 0, 1728, 1729, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3974, 0, 69, 3967, 0, 0, 0, 0, 0, 1698,
	0, 215, 0, 0, 0, 0, 0, 0, 73, 0,
	3805, 0, 0, 0, 0, 0, 0, 3554, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 141, 2910, 2911,
	0, 0, 0, 0, 2917, 0, 0, 0, 243, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 80, 0,
	214, 0, 3940, 2931, 2932, 0, 0, 3875, 0, 2357,
	0, 207, 0, 0, 0, 0, 0, 0, 2939, 3554,
	208, 243, 3554, 0, 4028, 0, 0, 0, 0, 0,
	0, 0, 3164, 0, 2953, 86, 0, 0, 0, 0,
	0, 0, 177, 3940, 0, 0, 0, 0, 0, 101,
	0, 2965, 0, 0, 87, 98, 0, 0, 1369, 2271,
	1369, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 1839, 0, 1164, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 4208,
	0, 0, 242, 1839, 242, 0, 1369, 0, 0, 725,
	0, 243, 0, 0, 725, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 2271, 0, 0, 0, 0,
	2609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2484, 2484, 2484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3431, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 3080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1008, 0, 0, 1231, 1008, 1344, 0, 0,
	0, 1339, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 1320, 0, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3974,
	0, 1504, 1504, 0, 0, 0, 2080, 0, 0, 0,
	994, 91, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 2609, 0, 0, 0, 0, 242, 0,
	3554, 725, 3554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3182, 0, 0, 174, 94, 1480,
	97, 1480, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 1168, 0, 1521, 1522,
	1168, 0, 1369, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 820, 0, 242, 0, 0, 139, 242, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 242, 0, 2807, 1168, 0, 0, 0, 0, 0,
	0, 2609, 0, 0, 0, 0, 242, 215, 242, 0,
	0, 0, 0, 0, 242, 0, 2807, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 1628, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 207, 0, 1168,
	0, 0, 0, 1168, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 242,
	0, 0, 0, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 1711, 1706, 1168,
	0, 725, 242, 0, 242, 1678, 242, 0, 242, 0,
	242, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 1697,
	0, 0, 0, 0, 0, 0, 0, 2080, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 2264, 0, 0, 0, 0, 0, 3385, 3386,
	0, 0, 3389, 0, 0, 0, 3392, 0, 0, 0,
	0, 0, 0, 0, 0, 3396, 0, 0, 0, 0,
	0, 0, 0, 0, 3403, 0, 0, 3080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3415, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 3438, 3439, 0, 3440, 3441, 3442, 0, 0,
	0, 0, 1675, 1676, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 1339, 0, 0, 1715, 1706, 0, 1725, 0, 0,
	0, 1320, 1678, 1705, 1707, 0, 0, 3448, 0, 1675,
	1676, 3450, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 1706, 0, 0, 0, 1677, 0, 0, 1678,
	0, 0, 3478, 3479, 0, 0, 1697, 1713, 1008, 0,
	0, 0, 0, 0, 1320, 1694, 0, 0, 0, 0,
	3490, 1698, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 3499, 0, 0, 0, 0,
	0, 1164, 0, 1697, 1168, 0, 1168, 0, 0, 0,
	0, 0, 1694, 0, 0, 242, 0, 0, 0, 0,
	0, 1168, 0, 1723, 0, 0, 3393, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 1700, 1701, 1702, 1703,
	1168, 0, 0, 0, 0, 0, 1683, 0, 0, 3540,
	0, 0, 0, 3388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1168, 3549, 0, 242, 0, 0,
	68, 242, 0, 1700, 1701, 1702, 1703, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 69, 0, 0, 1704,
	1705, 1707, 0, 0, 3575, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 1320, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 1705, 1707, 0,
	0, 0, 1341, 0, 0, 1716, 0, 0, 242, 0,
	0, 2067, 80, 0, 0, 2074, 0, 0, 1698, 0,
	0, 242, 0, 1692, 1693, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 2097, 0, 2097, 0, 0, 0, 86,
	0, 2104, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 101, 725, 0, 0, 1817, 87, 98,
	0, 0, 1168, 1168, 0, 0, 3663, 1480, 0, 0,
	0, 0, 1168, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 1344, 0, 0, 0, 0, 0,
	242, 1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 88, 0, 0, 2974, 0, 0, 0,
	2975, 242, 0, 0, 242, 0, 1704, 0, 242, 0,
	242, 0, 0, 2074, 0, 0, 2157, 242, 242, 0,
	0, 0, 0, 0, 0, 0, 1699, 3710, 3711, 0,
	0, 0, 0, 3715, 3716, 0, 0, 2177, 3719, 3720,
	0, 0, 0, 1704, 0, 3724, 0, 0, 242, 2189,
	0, 2191, 0, 2193, 0, 2195, 3728, 2196, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 242, 0, 242,
	0, 0, 3733, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2218, 0, 1168, 0, 1168,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 242,
	242, 242, 242, 0, 242, 0, 242, 1168, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 0,
	1168, 0, 1168, 1168, 1168, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 1695, 1691, 1320,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 94, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 3806, 1695, 1691, 0, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 1895, 1895, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 1320, 0, 0, 0, 0,
	208, 0, 2540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1320, 1515, 0, 0, 0, 1168, 0, 0, 0,
	0, 0, 3935, 3936, 3937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2264, 0, 0, 3946, 3947,
	0, 0, 0, 0, 0, 1164, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 3955, 3958, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4000, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 4007, 0, 0, 994, 0, 0,
	0, 68, 0, 44, 43, 0, 4015, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 69, 242, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	0, 46, 0, 144, 242, 242, 0, 242, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 2074,
	0, 45, 1168, 80, 0, 0, 0, 2086, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 64, 0,
	0, 0, 0, 0, 1895, 49, 0, 0, 2784, 0,
	86, 1480, 0, 0, 145, 1480, 0, 1480, 0, 0,
	0, 0, 47, 0, 101, 0, 0, 0, 0, 87,
	98, 242, 1168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 1168, 0, 0, 4122,
	0, 0, 4125, 242, 0, 2837, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 2847, 0, 2850, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 1164, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 1676, 0, 0, 0, 0, 242, 0, 0, 0,
	242, 242, 0, 994, 994, 0, 2874, 1339, 2876, 1339,
	0, 2879, 0, 1706, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 1168, 1168, 0, 1168, 0, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 1168,
	0, 1168, 2907, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 1697, 1168, 0, 0, 0, 0,
	0, 0, 3958, 1694, 0, 0, 0, 0, 0, 0,
	242, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 91, 0, 0, 0,
	0, 0, 0, 0, 3387, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	55, 4269, 4269, 4269, 1683, 0, 65, 0, 0, 0,
	0, 54, 174, 94, 0, 97, 0, 0, 0, 52,
	0, 0, 0, 146, 0, 0, 0, 0, 4290, 0,
	53, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 58, 1705, 1707,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 0,
	1030, 103, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 1692, 1693, 4269, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 1164, 207, 0, 0, 0, 0, 0, 103, 1320,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 3, 0, 0, 0,
	0, 1320, 0, 0, 0, 0, 4269, 4402, 0, 0,
	1675, 1676, 0, 0, 4406, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1320, 0, 0,
	1678, 0, 0, 0, 1704, 1839, 0, 969, 0, 0,
	0, 0, 1008, 0, 0, 3155, 0, 0, 989, 0,
	0, 0, 0, 0, 1699, 0, 1008, 0, 1168, 1168,
	0, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 1697, 0, 0, 0, 0, 0,
	0, 3197, 3199, 1694, 2086, 0, 1151, 0, 0, 0,
	0, 1168, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 242, 0, 1168, 0, 0,
	0, 0, 1320, 0, 2916, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 242,
	0, 0, 0, 242, 1700, 1701, 1702, 1703, 0, 0,
	0, 0, 0, 0, 1683, 0, 0, 0, 1895, 0,
	0, 0, 1054, 0, 1164, 0, 0, 0, 0, 0,
	3268, 1320, 0, 0, 3272, 1695, 1691, 1168, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 0, 0, 244, 244, 244, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 1168, 1480, 1692, 1693, 0, 1339, 1339, 0,
	0, 1168, 244, 0, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3333, 0, 0, 1698, 244, 0, 1168,
	0, 0, 0, 0, 0, 1168, 0, 1168, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 1676, 0, 0, 0, 0, 1168,
	0, 0, 0, 0, 0, 2445, 2446, 2447, 2448, 2441,
	2442, 2443, 2444, 1168, 0, 0, 1706, 3371, 0, 1339,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 1168,
	0, 1320, 0, 0, 1320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3383, 0, 0, 0, 0, 1677, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 1697, 0, 1164,
	0, 1168, 1168, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 1839, 0, 1704, 2421, 2422, 2423, 2424, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 1320, 0, 2433, 2434, 2435,
	2436, 2429, 2430, 2431, 2432, 2437, 2438, 2439, 2440, 0,
	0, 0, 1320, 0, 1839, 0, 0, 2909, 0, 0,
	0, 1168, 0, 0, 1168, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 1700, 1701, 1702,
	1703, 0, 0, 242, 0, 242, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2417, 2418, 2419, 2420, 2425, 2426, 2427, 2428, 1895, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 1707, 0, 0, 1168, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 1692, 1693, 0,
	0, 0, 1895, 1895, 0, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 1895, 1675, 1676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 103, 0, 103, 0,
	1706, 0, 0, 0, 0, 0, 1895, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 1168, 0, 0, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 0, 0, 0, 242, 0, 0, 0, 0,
	1694, 1839, 0, 0, 0, 0, 1168, 1704, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 989, 103,
	103, 2086, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 103, 2086, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 3630, 103, 0, 103, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 2086, 0, 1168, 0,
	3645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 1701, 1702, 1703, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 1839, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 1707, 0, 0, 242,
	242, 0, 0, 0, 1168, 0, 3695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 1693, 1895, 1320, 0, 0, 0, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	0, 0, 1168, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 0, 0, 1168, 0, 0,
	0, 1839, 244, 1240, 244, 244, 0, 1240, 244, 244,
	0, 1240, 1740, 0, 0, 0, 0, 0, 1168, 1168,
	1168, 0, 242, 0, 244, 0, 0, 0, 0, 1745,
	0, 0, 0, 1751, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 1839, 1168, 242, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 0, 244, 244, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 1320, 0,
	0, 1704, 0, 0, 0, 0, 244, 0, 244, 244,
	0, 0, 244, 0, 1240, 0, 0, 0, 0, 0,
	1240, 1699, 1320, 0, 1240, 244, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 3822, 0, 0,
	0, 0, 0, 1837, 0, 1840, 802, 103, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 1320, 0, 785, 0, 0, 0,
	0, 786, 1320, 0, 1168, 0, 0, 0, 0, 0,
	1240, 0, 1168, 0, 0, 0, 1168, 0, 1168, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 787,
	244, 0, 1168, 3891, 0, 0, 0, 0, 0, 0,
	788, 0, 0, 0, 0, 0, 244, 242, 1320, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 0,
	0, 789, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 1168, 0, 791, 1839, 0, 1839, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 792, 248, 0, 793, 0, 1168, 0,
	0, 0, 0, 1168, 0, 0, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1320, 0, 0, 0, 0, 0, 0,
	1168, 0, 3981, 0, 0, 807, 0, 0, 0, 1320,
	1168, 1168, 1168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1008,
	0, 0, 1168, 0, 0, 0, 2086, 0, 0, 717,
	0, 0, 0, 804, 0, 1320, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 1168, 0, 1168, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 244, 244, 244, 1168,
	0, 0, 0, 244, 1320, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 1240, 795, 0, 0, 0, 4096, 1339, 1895, 0,
	0, 0, 0, 0, 0, 0, 989, 0, 989, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 814,
	0, 796, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	797, 0, 0, 0, 812, 813, 810, 0, 0, 0,
	0, 0, 805, 0, 1168, 798, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 799, 806, 0, 0, 0, 0, 0,
	0, 0, 4170, 800, 0, 1008, 1008, 0, 0, 0,
	0, 0, 1895, 0, 0, 0, 0, 801, 0, 0,
	0, 0, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 1240, 1240, 244, 712, 0, 969, 0,
	0, 969, 969, 1240, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719,
	1720, 0, 4216, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 244, 0, 1711, 1706, 2331, 0, 0, 244,
	0, 0, 1678, 0, 1008, 244, 0, 0, 0, 0,
	1724, 0, 989, 0, 0, 0, 1168, 0, 4250, 1168,
	244, 1745, 244, 1168, 0, 1745, 0, 0, 244, 0,
	0, 0, 0, 1168, 1168, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	1168, 0, 0, 0, 244, 1694, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4306, 0, 0, 0, 1240, 0,
	1240, 0, 1240, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 1240, 1240,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 1240,
	244, 0, 0, 244, 0, 0, 1700, 1701, 1702, 1703,
	0, 1240, 0, 1240, 1240, 1240, 1683, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 244, 0, 244, 0,
	244, 0, 244, 0, 244, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 1725, 0, 0, 0, 0, 0,
	1705, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	0, 0, 244, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 1168,
	1723, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 0, 1237,
	0, 0, 0, 1357, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 103, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 1675, 1676, 1357, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 1706, 0,
	103, 0, 1357, 0, 0, 1678, 1699, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 103, 1240, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 1357, 0, 0, 1697,
	0, 0, 1357, 0, 0, 0, 1357, 0, 1694, 244,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	1357, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 1357, 0, 0, 244, 0, 0, 1714, 1700,
	1701, 1702, 1703, 1689, 1690, 1696, 1717, 1695, 1691, 1683,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 0, 2353, 0, 0, 0, 2354, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 1725, 0, 0,
	244, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 0, 244, 0, 0, 0, 1692,
	1693, 0, 0, 2331, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 1240, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 1240, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 1240,
	0, 0, 0, 1723, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 244, 0,
	0, 0, 244, 0, 244, 0, 0, 0, 0, 0,
	0, 244, 244, 0, 0, 1240, 1240, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 0, 1240, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 244, 0, 0, 0, 1240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 244, 0, 244, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 0, 0, 1237, 1716, 0, 743, 0, 0,
	0, 0, 1151, 0, 0, 717, 0, 0, 0, 0,
	717, 0, 0, 244, 244, 244, 244, 745, 244, 0,
	244, 0, 746, 1357, 0, 0, 0, 1238, 0, 0,
	0, 1238, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1237, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 244,
	747, 0, 764, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 0,
	0, 1714, 749, 0, 1358, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 772, 0, 0, 0, 0, 0, 750, 103,
	103, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 744, 103, 103, 0, 0, 103,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 751, 0, 0, 752, 0, 0,
	0, 0, 0, 0, 0, 1357, 1357, 0, 774, 0,
	0, 0, 711, 0, 0, 1237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	0, 989, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 0, 103, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 0, 0, 0, 0, 1240, 0, 0,
	1357, 0, 1357, 755, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1240, 0,
	1357, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1357, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1357, 0, 1357, 1357, 1357, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 765, 1240, 0,
	0, 0, 0, 0, 0, 0, 757, 0, 244, 244,
	0, 244, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 244, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 758, 0, 0, 759, 777, 0,
	776, 0, 1240, 0, 760, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 769, 0, 0, 1238, 0, 0, 778,
	1240, 775, 1237, 0, 0, 244, 1240, 712, 1240, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 1358, 0, 244, 0, 0,
	1240, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 1151, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 244, 244, 0, 0, 0, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 1240, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 1240, 0, 244, 1240, 244, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0,
	0, 0, 0, 0, 1237, 0, 0, 1358, 1358, 0,
	1711, 1706, 0, 0, 0, 0, 0, 1238, 1678, 244,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 1240, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 1701, 1702, 1703, 0, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 1358, 1237, 1358, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	0, 0, 1358, 1358, 0, 0, 0, 1715, 0, 0,
	1725, 0, 0, 1358, 0, 0, 1705, 1707, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 1358, 1358, 1358,
	0, 0, 0, 1721, 0, 1722, 0, 0, 0, 0,
	0, 1357, 1692, 1693, 0, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1357, 1357, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1357, 0, 1357, 0, 1723, 103, 0, 0,
	0, 0, 0, 1151, 0, 0, 0, 0, 1357, 0,
	0, 1151, 0, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 1699, 244, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 1240,
	1240, 1240, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 244, 0, 1240, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 1689,
	1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 3738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 1706, 0, 1238, 0, 0,
	0, 0, 1678, 0, 0, 0, 0, 1240, 0, 1240,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 1240, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 1238, 0, 0,
	0, 0, 0, 0, 1237, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 244, 0, 0, 0, 0, 1237,
	0, 0, 0, 0, 0, 1240, 0, 244, 0, 244,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	1237, 0, 0, 244, 0, 0, 2331, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 1240, 1240, 0, 0, 0, 1700, 1701, 1702, 1703,
	0, 0, 0, 0, 0, 0, 1683, 0, 1240, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 1240,
	244, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	1358, 1715, 1358, 0, 1725, 0, 0, 0, 0, 0,
	1705, 1707, 0, 0, 1358, 0, 1358, 0, 0, 0,
	0, 1240, 1240, 1240, 0, 1357, 0, 1721, 0, 1722,
	1358, 0, 0, 1240, 0, 1237, 1692, 1693, 0, 0,
	0, 0, 0, 0, 1357, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 103, 1240, 0, 0, 0, 0, 1698, 0,
	0, 0, 1357, 0, 0, 0, 0, 0, 1357, 0,
	1357, 0, 0, 103, 1237, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1357, 0, 1240, 0, 1240, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 1357, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 0, 1712, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 1357, 1240, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 1704, 1240, 1240, 0,
	0, 0, 0, 0, 0, 103, 0, 1357, 103, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 0, 1240, 0,
	0, 0, 1716, 0, 1237, 0, 0, 1237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 1714, 0,
	0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0,
	0, 0, 0, 0, 0, 0, 244, 3401, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 1240, 0, 1238, 0, 1711, 1706,
	0, 0, 0, 0, 1240, 1240, 1678, 0, 0, 0,
	0, 1238, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 1706,
	0, 0, 0, 0, 0, 0, 1678, 1358, 0, 0,
	1700, 1701, 1702, 1703, 1724, 0, 0, 1238, 0, 0,
	1683, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 244, 0, 0, 1358, 1715, 0, 0, 1725, 1694,
	1358, 0, 1358, 0, 1705, 1707, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 1722, 1358, 0, 0, 1357, 0, 0,
	1692, 1693, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	1700, 1701, 1702, 1703, 0, 1357, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 1358, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 0,
	0, 1357, 1357, 1357, 0, 1715, 0, 0, 1725, 1358,
	0, 0, 1712, 0, 1705, 1707, 0, 1357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 1722, 0, 0, 0, 1237, 0, 0,
	1692, 1693, 0, 0, 0, 0, 1238, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 1716, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1712, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1237,
	0, 1237, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 0, 0,
	1699, 0, 1714, 0, 0, 0, 0, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 0, 0, 1716, 0, 0, 0,
	0, 2977, 0, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 1237, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 1711, 1706, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 1357, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 1237, 0, 0, 0, 0, 1357, 0, 1694, 0,
	0, 0, 1714, 0, 0, 0, 0, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 2976, 0, 1357, 1357, 1357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 1237, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 1237, 1725, 1357, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 1237, 0, 0, 0, 0, 1358, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 1358, 1358, 1358, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 1237, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 1237, 0, 0,
	1357, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1706, 0, 0, 0, 0, 0, 0, 1678, 1699,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 1238, 1677, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1357, 1357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 1357, 0, 0, 0, 1238, 0, 0,
	0, 1714, 1700, 1701, 1702, 1703, 1689, 1690, 1696, 1717,
	1695, 1691, 1683, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 1358, 1358, 0, 0, 0,
	2973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 1715, 0, 0,
	1725, 0, 0, 1238, 0, 0, 1705, 1707, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1722, 0, 0, 0, 0,
	0, 0, 1692, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 1358, 1358, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 0, 0, 1238, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 1689,
	1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 2972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 1358,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 1241,
	259, 260, 1242, 1243, 1244, 1358, 1245, 578, 1246, 1247,
	1248, 1249, 261, 262, 1108, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 1250, 583, 270,
	271, 272, 273, 274, 275, 1251, 1252, 0, 276, 584,
	585, 586, 1253, 277, 278, 587, 1254, 1321, 1255, 279,
	280, 281, 282, 283, 284, 285, 0, 1256, 287, 288,
	289, 286, 290, 1257, 291, 0, 292, 293, 294, 295,
	296, 297, 1258, 298, 299, 300, 1109, 301, 302, 1259,
	1260, 1262, 1261, 1263, 1264, 1265, 303, 304, 305, 306,
	0, 307, 588, 589, 1266, 311, 308, 309, 1267, 312,
	310, 1268, 313, 314, 315, 1269, 1270, 316, 317, 318,
	1271, 319, 320, 1272, 321, 322, 323, 1273, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 1274, 249, 1275, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 1276, 341,
	1277, 1278, 1110, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 1279, 352, 596, 1280, 597,
	353, 1281, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 1112, 359, 360, 1282, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 367, 369, 1283, 1111, 368,
	601, 602, 1284, 603, 1285, 370, 371, 1113, 604, 1114,
	372, 373, 374, 1115, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 1286, 382, 384, 383, 1287, 385,
	605, 1116, 386, 387, 1117, 1288, 388, 0, 0, 0,
	389, 390, 1289, 1290, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 1118, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 1119, 421, 1291, 251,
	1120, 431, 432, 1292, 606, 433, 607, 435, 436, 1293,
	0, 437, 0, 1294, 1295, 439, 440, 441, 1296, 1297,
	442, 443, 608, 1121, 444, 1122, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 1298, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 1299, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 1300, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 1301, 487, 488, 489, 1123,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 1302, 510,
	511, 509, 512, 513, 514, 1303, 515, 516, 499, 500,
	517, 518, 1124, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 1304, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 1305, 537, 538, 0,
	536, 1306, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 1307, 547, 619, 620, 621, 622, 1308, 556, 1309,
	548, 549, 550, 623, 551, 624, 1310, 552, 553, 554,
	555, 0, 557, 558, 1311, 1312, 559, 560, 561, 563,
	564, 562, 565, 1313, 566, 1314, 0, 567, 568, 569,
	625, 626, 627, 1315, 571, 570, 572, 628, 1316, 1317,
	1318, 1319, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	2518, 0, 0, 0, 0, 0, 0, 0, 2519, 252,
	254, 253, 255, 256, 257, 258, 1241, 259, 260, 1242,
	1243, 1244, 0, 1245, 578, 1246, 1247, 1248, 1249, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 1250, 583, 270, 271, 272, 273,
	274, 275, 1251, 1252, 0, 276, 584, 585, 586, 1253,
	277, 278, 587, 1254, 1321, 1255, 279, 280, 281, 282,
	283, 284, 285, 0, 1256, 287, 288, 289, 286, 290,
	1257, 291, 0, 292, 293, 294, 295, 296, 297, 1258,
	298, 299, 300, 1109, 301, 302, 1259, 1260, 1262, 1261,
	1263, 1264, 1265, 303, 304, 305, 306, 0, 307, 588,
	589, 1266, 311, 308, 309, 1267, 312, 310, 1268, 313,
	314, 315, 1269, 1270, 316, 317, 318, 1271, 319, 320,
	1272, 321, 322, 323, 1273, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	1274, 249, 1275, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 1276, 341, 1277, 1278, 1110,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 1279, 352, 596, 1280, 597, 353, 1281, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 1112, 359,
	360, 1282, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 1283, 1111, 368, 601, 602, 1284,
	603, 1285, 370, 371, 1113, 604, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 1286, 382, 384, 383, 1287, 385, 605, 1116, 386,
	387, 1117, 1288, 388, 0, 0, 0, 389, 390, 1289,
	1290, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1291, 251, 1120, 431, 432,
	1292, 606, 433, 607, 435, 436, 1293, 0, 437, 0,
	1294, 1295, 439, 440, 441, 1296, 1297, 442, 443, 608,
	1121, 444, 1122, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 1298, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 1299, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 1300, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 1301, 487, 488, 489, 1123, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 1302, 510, 511, 509, 512,
	513, 514, 1303, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 1304,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 1305, 537, 538, 0, 536, 1306, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 1307, 547,
	619, 620, 621, 622, 1308, 556, 1309, 548, 549, 550,
	623, 551, 624, 1310, 552, 553, 554, 555, 0, 557,
	558, 1311, 1312, 559, 560, 561, 563, 564, 562, 565,
	1313, 566, 1314, 0, 567, 568, 569, 625, 626, 627,
	1315, 571, 570, 572, 628, 1316, 1317, 1318, 1319, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 3409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3411, 252, 254, 253, 255, 256, 257,
	258, 1241, 259, 260, 1242, 1243, 1244, 0, 1245, 578,
	1246, 1247, 1248, 1249, 261, 262, 1108, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 1250,
	583, 270, 271, 272, 273, 274, 275, 1251, 1252, 0,
	276, 584, 585, 586, 1253, 277, 278, 587, 1254, 1321,
	1255, 279, 280, 281, 282, 283, 284, 285, 0, 1256,
	287, 288, 289, 286, 290, 1257, 291, 0, 292, 293,
	294, 295, 296, 297, 1258, 298, 299, 300, 1109, 301,
	302, 1259, 1260, 1262, 1261, 1263, 1264, 1265, 303, 304,
	305, 306, 0, 307, 588, 589, 1266, 311, 308, 309,
	1267, 312, 310, 1268, 313, 314, 315, 1269, 1270, 316,
	317, 318, 1271, 319, 320, 1272, 321, 322, 323, 1273,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 1274, 249, 1275, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	1276, 341, 1277, 1278, 1110, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 1279, 352, 596,
	1280, 597, 353, 1281, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 1112, 359, 360, 1282, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 367, 369, 1283,
	1111, 368, 601, 602, 1284, 603, 1285, 370, 371, 1113,
	604, 1114, 372, 373, 374, 1115, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 1286, 382, 384, 383,
	1287, 385, 605, 1116, 386, 387, 1117, 1288, 388, 0,
	0, 0, 389, 390, 1289, 1290, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 1118, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 1119, 421,
	1291, 251, 1120, 431, 432, 1292, 606, 433, 607, 435,
	436, 1293, 0, 437, 0, 1294, 1295, 439, 440, 441,
	1296, 1297, 442, 443, 608, 1121, 444, 1122, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	1298, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 1299, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	1300, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 1301, 487, 488,
	489, 1123, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	1302, 510, 511, 509, 512, 513, 514, 1303, 515, 516,
	499, 500, 517, 518, 1124, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 1304, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 1305, 537,
	538, 0, 536, 1306, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 1307, 547, 619, 620, 621, 622, 1308,
	556, 1309, 548, 549, 550, 623, 551, 624, 1310, 552,
	553, 554, 555, 0, 557, 558, 1311, 1312, 559, 560,
	561, 563, 564, 562, 565, 1313, 566, 1314, 0, 567,
	568, 569, 625, 626, 627, 1315, 571, 570, 572, 628,
	1316, 1317, 1318, 1319, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3766, 252, 254, 253, 255, 256, 257, 258,
	1241, 259, 260, 1242, 1243, 1244, 0, 1245, 578, 1246,
	1247, 1248, 1249, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 1250, 583,
	270, 271, 272, 273, 274, 275, 1251, 1252, 0, 276,
	584, 585, 586, 1253, 277, 278, 587, 1254, 1321, 1255,
	279, 280, 281, 282, 283, 284, 285, 0, 1256, 287,
	288, 289, 286, 290, 1257, 291, 0, 292, 293, 294,
	295, 296, 297, 1258, 298, 299, 300, 1109, 301, 302,
	1259, 1260, 1262, 1261, 1263, 1264, 1265, 303, 304, 305,
	306, 0, 307, 588, 589, 1266, 311, 308, 309, 1267,
	312, 310, 1268, 313, 314, 315, 1269, 1270, 316, 317,
	318, 1271, 319, 320, 1272, 321, 322, 323, 1273, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 1274, 249, 1275, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 1276,
	341, 1277, 1278, 1110, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 1279, 352, 596, 1280,
	597, 353, 1281, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 1112, 359, 360, 1282, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 1283, 1111,
	368, 601, 602, 1284, 603, 1285, 370, 371, 1113, 604,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 1286, 382, 384, 383, 1287,
	385, 605, 1116, 386, 387, 1117, 1288, 388, 0, 0,
	0, 389, 390, 1289, 1290, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1291,
	251, 1120, 431, 432, 1292, 606, 433, 607, 435, 436,
	1293, 0, 437, 0, 1294, 1295, 439, 440, 441, 1296,
	1297, 442, 443, 608, 1121, 444, 1122, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 1298,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 1299, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 1300,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 1301, 487, 488, 489,
	1123, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 1302,
	510, 511, 509, 512, 513, 514, 1303, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 1304, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 1305, 537, 538,
	0, 536, 1306, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 1307, 547, 619, 620, 621, 622, 1308, 556,
	1309, 548, 549, 550, 623, 551, 624, 1310, 552, 553,
	554, 555, 0, 557, 558, 1311, 1312, 559, 560, 561,
	563, 564, 562, 565, 1313, 566, 1314, 0, 567, 568,
	569, 625, 626, 627, 1315, 571, 570, 572, 628, 1316,
	1317, 1318, 1319, 573, 574, 629, 575, 576, 577, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3941, 252, 254, 253,
	255, 256, 257, 258, 1241, 259, 260, 1242, 1243, 1244,
	0, 1245, 578, 1246, 1247, 1248, 1249, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 1250, 583, 270, 271, 272, 273, 274, 275,
	1251, 1252, 0, 276, 584, 585, 586, 1253, 277, 278,
	587, 1254, 1321, 1255, 279, 280, 281, 282, 283, 284,
	285, 0, 1256, 287, 288, 289, 286, 290, 1257, 291,
	0, 292, 293, 294, 295, 296, 297, 1258, 298, 299,
	300, 1109, 301, 302, 1259, 1260, 1262, 1261, 1263, 1264,
	1265, 303, 304, 305, 306, 0, 307, 588, 589, 1266,
	311, 308, 309, 1267, 312, 310, 1268, 313, 314, 315,
	1269, 1270, 316, 317, 318, 1271, 319, 320, 1272, 321,
	322, 323, 1273, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 1274, 249,
	1275, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 1276, 341, 1277, 1278, 1110, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	1279, 352, 596, 1280, 597, 353, 1281, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 1112, 359, 360, 1282,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 1283, 1111, 368, 601, 602, 1284, 603, 1285,
	370, 371, 1113, 604, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 1286,
	382, 384, 383, 1287, 385, 605, 1116, 386, 387, 1117,
	1288, 388, 0, 0, 0, 389, 390, 1289, 1290, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1291, 251, 1120, 431, 432, 1292, 606,
	433, 607, 435, 436, 1293, 0, 437, 0, 1294, 1295,
	439, 440, 441, 1296, 1297, 442, 443, 608, 1121, 444,
	1122, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 1298, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 1299,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 1300, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	1301, 487, 488, 489, 1123, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 1302, 510, 511, 509, 512, 513, 514,
	1303, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 1304, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 1305, 537, 538, 0, 536, 1306, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 1307, 547, 619, 620,
	621, 622, 1308, 556, 1309, 548, 549, 550, 623, 551,
	624, 1310, 552, 553, 554, 555, 0, 557, 558, 1311,
	1312, 559, 560, 561, 563, 564, 562, 565, 1313, 566,
	1314, 0, 567, 568, 569, 625, 626, 627, 1315, 571,
	570, 572, 628, 1316, 1317, 1318, 1319, 573, 574, 629,
	575, 576, 577, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3830, 252, 254, 253, 255, 256, 257, 258, 1241, 259,
	260, 1242, 1243, 1244, 0, 1245, 578, 1246, 1247, 1248,
	1249, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 1250, 583, 270, 271,
	272, 273, 274, 275, 1251, 1252, 0, 276, 584, 585,
	586, 1253, 277, 278, 587, 1254, 1321, 1255, 279, 280,
	281, 282, 283, 284, 285, 0, 1256, 287, 288, 289,
	286, 290, 1257, 291, 0, 292, 293, 294, 295, 296,
	297, 1258, 298, 299, 300, 1109, 301, 302, 1259, 1260,
	1262, 1261, 1263, 1264, 1265, 303, 304, 305, 306, 0,
	307, 588, 589, 1266, 311, 308, 309, 1267, 312, 310,
	1268, 313, 314, 315, 1269, 1270, 316, 317, 318, 1271,
	319, 320, 1272, 321, 322, 323, 1273, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 1274, 249, 1275, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 1276, 341, 1277,
	1278, 1110, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 1279, 352, 596, 1280, 597, 353,
	1281, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	1112, 359, 360, 1282, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 1283, 1111, 368, 601,
	602, 1284, 603, 1285, 370, 371, 1113, 604, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 1286, 382, 384, 383, 1287, 385, 605,
	1116, 386, 387, 1117, 1288, 388, 0, 0, 0, 389,
	390, 1289, 1290, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1291, 251, 1120,
	431, 432, 1292, 606, 433, 607, 435, 436, 1293, 0,
	437, 0, 1294, 1295, 439, 440, 441, 1296, 1297, 442,
	443, 608, 1121, 444, 1122, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 1298, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 1299, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 1300, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 1301, 487, 488, 489, 1123, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 1302, 510, 511,
	509, 512, 513, 514, 1303, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 1304, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 1305, 537, 538, 0, 536,
	1306, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	1307, 547, 619, 620, 621, 622, 1308, 556, 1309, 548,
	549, 550, 623, 551, 624, 1310, 552, 553, 554, 555,
	0, 557, 558, 1311, 1312, 559, 560, 561, 563, 564,
	562, 565, 1313, 566, 1314, 0, 567, 568, 569, 625,
	626, 627, 1315, 571, 570, 572, 628, 1316, 1317, 1318,
	1319, 573, 574, 629, 575, 576, 577, 0, 1235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3696, 252, 254, 253, 255, 256,
	257, 258, 1241, 259, 260, 1242, 1243, 1244, 0, 1245,
	578, 1246, 1247, 1248, 1249, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	1250, 583, 270, 271, 272, 273, 274, 275, 1251, 1252,
	0, 276, 584, 585, 586, 1253, 277, 278, 587, 1254,
	1321, 1255, 279, 280, 281, 282, 283, 284, 285, 0,
	1256, 287, 288, 289, 286, 290, 1257, 291, 0, 292,
	293, 294, 295, 296, 297, 1258, 298, 299, 300, 1109,
	301, 302, 1259, 1260, 1262, 1261, 1263, 1264, 1265, 303,
	304, 305, 306, 0, 307, 588, 589, 1266, 311, 308,
	309, 1267, 312, 310, 1268, 313, 314, 315, 1269, 1270,
	316, 317, 318, 1271, 319, 320, 1272, 321, 322, 323,
	1273, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 1274, 249, 1275, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 1276, 341, 1277, 1278, 1110, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 1279, 352,
	596, 1280, 597, 353, 1281, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 1112, 359, 360, 1282, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	1283, 1111, 368, 601, 602, 1284, 603, 1285, 370, 371,
	1113, 604, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 1286, 382, 384,
	383, 1287, 385, 605, 1116, 386, 387, 1117, 1288, 388,
	0, 0, 0, 389, 390, 1289, 1290, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1291, 251, 1120, 431, 432, 1292, 606, 433, 607,
	435, 436, 1293, 0, 437, 0, 1294, 1295, 439, 440,
	441, 1296, 1297, 442, 443, 608, 1121, 444, 1122, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 1298, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 1299, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 1300, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 1301, 487,
	488, 489, 1123, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 1302, 510, 511, 509, 512, 513, 514, 1303, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 1304, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 1305,
	537, 538, 0, 536, 1306, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 1307, 547, 619, 620, 621, 622,
	1308, 556, 1309, 548, 549, 550, 623, 551, 624, 1310,
	552, 553, 554, 555, 0, 557, 558, 1311, 1312, 559,
	560, 561, 563, 564, 562, 565, 1313, 566, 1314, 0,
	567, 568, 569, 625, 626, 627, 1315, 571, 570, 572,
	628, 1316, 1317, 1318, 1319, 573, 574, 629, 575, 576,
	577, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3427, 252,
	254, 253, 255, 256, 257, 258, 1241, 259, 260, 1242,
	1243, 1244, 0, 1245, 578, 1246, 1247, 1248, 1249, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 1250, 583, 270, 271, 272, 273,
	274, 275, 1251, 1252, 0, 276, 584, 585, 586, 1253,
	277, 278, 587, 1254, 1321, 1255, 279, 280, 281, 282,
	283, 284, 285, 0, 1256, 287, 288, 289, 286, 290,
	1257, 291, 0, 292, 293, 294, 295, 296, 297, 1258,
	298, 299, 300, 1109, 301, 302, 1259, 1260, 1262, 1261,
	1263, 1264, 1265, 303, 304, 305, 306, 0, 307, 588,
	589, 1266, 311, 308, 309, 1267, 312, 310, 1268, 313,
	314, 315, 1269, 1270, 316, 317, 318, 1271, 319, 320,
	1272, 321, 322, 323, 1273, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	1274, 249, 1275, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 1276, 341, 1277, 1278, 1110,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 1279, 352, 596, 1280, 597, 353, 1281, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 1112, 359,
	360, 1282, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 1283, 1111, 368, 601, 602, 1284,
	603, 1285, 370, 371, 1113, 604, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 1286, 382, 384, 383, 1287, 385, 605, 1116, 386,
	387, 1117, 1288, 388, 0, 0, 0, 389, 390, 1289,
	1290, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1291, 251, 1120, 431, 432,
	1292, 606, 433, 607, 435, 436, 1293, 0, 437, 0,
	1294, 1295, 439, 440, 441, 1296, 1297, 442, 443, 608,
	1121, 444, 1122, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 1298, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 1299, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 1300, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 1301, 487, 488, 489, 1123, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 1302, 510, 511, 509, 512,
	513, 514, 1303, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 1304,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 1305, 537, 538, 0, 536, 1306, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 1307, 547,
	619, 620, 621, 622, 1308, 556, 1309, 548, 549, 550,
	623, 551, 624, 1310, 552, 553, 554, 555, 0, 557,
	558, 1311, 1312, 559, 560, 561, 563, 564, 562, 565,
	1313, 566, 1314, 0, 567, 568, 569, 625, 626, 627,
	1315, 571, 570, 572, 628, 1316, 1317, 1318, 1319, 573,
	574, 629, 575, 576, 577, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3253, 252, 254, 253, 255, 256, 257, 258,
	1241, 259, 260, 1242, 1243, 1244, 0, 1245, 578, 1246,
	1247, 1248, 1249, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 1250, 583,
	270, 271, 272, 273, 274, 275, 1251, 1252, 0, 276,
	584, 585, 586, 1253, 277, 278, 587, 1254, 1321, 1255,
	279, 280, 281, 282, 283, 284, 285, 0, 1256, 287,
	288, 289, 286, 290, 1257, 291, 0, 292, 293, 294,
	295, 296, 297, 1258, 298, 299, 300, 1109, 301, 302,
	1259, 1260, 1262, 1261, 1263, 1264, 1265, 303, 304, 305,
	306, 0, 307, 588, 589, 1266, 311, 308, 309, 1267,
	312, 310, 1268, 313, 314, 315, 1269, 1270, 316, 317,
	318, 1271, 319, 320, 1272, 321, 322, 323, 1273, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 1274, 249, 1275, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 1276,
	341, 1277, 1278, 1110, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 1279, 352, 596, 1280,
	597, 353, 1281, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 1112, 359, 360, 1282, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 1283, 1111,
	368, 601, 602, 1284, 603, 1285, 370, 371, 1113, 604,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 1286, 382, 384, 383, 1287,
	385, 605, 1116, 386, 387, 1117, 1288, 388, 0, 0,
	0, 389, 390, 1289, 1290, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1291,
	251, 1120, 431, 432, 1292, 606, 433, 607, 435, 436,
	1293, 0, 437, 0, 1294, 1295, 439, 440, 441, 1296,
	1297, 442, 443, 608, 1121, 444, 1122, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 1298,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 1299, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 1300,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 1301, 487, 488, 489,
	1123, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 1302,
	510, 511, 509, 512, 513, 514, 1303, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 1304, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 1305, 537, 538,
	0, 536, 1306, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 1307, 547, 619, 620, 621, 622, 1308, 556,
	1309, 548, 549, 550, 623, 551, 624, 1310, 552, 553,
	554, 555, 0, 557, 558, 1311, 1312, 559, 560, 561,
	563, 564, 562, 565, 1313, 566, 1314, 0, 567, 568,
	569, 625, 626, 627, 1315, 571, 570, 572, 628, 1316,
	1317, 1318, 1319, 573, 574, 629, 575, 576, 577, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2377, 252, 254, 253,
	255, 256, 257, 258, 1241, 259, 260, 1242, 1243, 1244,
	0, 1245, 578, 1246, 1247, 1248, 1249, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 1250, 583, 270, 271, 272, 273, 274, 275,
	1251, 1252, 0, 276, 584, 585, 586, 1253, 277, 278,
	587, 1254, 1321, 1255, 279, 280, 281, 282, 283, 284,
	285, 0, 1256, 287, 288, 289, 286, 290, 1257, 291,
	0, 292, 293, 294, 295, 296, 297, 1258, 298, 299,
	300, 1109, 301, 302, 1259, 1260, 1262, 1261, 1263, 1264,
	1265, 303, 304, 305, 306, 0, 307, 588, 589, 1266,
	311, 308, 309, 1267, 312, 310, 1268, 313, 314, 315,
	1269, 1270, 316, 317, 318, 1271, 319, 320, 1272, 321,
	322, 323, 1273, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 1274, 249,
	1275, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 1276, 341, 1277, 1278, 1110, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	1279, 352, 596, 1280, 597, 353, 1281, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 1112, 359, 360, 1282,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 1283, 1111, 368, 601, 602, 1284, 603, 1285,
	370, 371, 1113, 604, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 1286,
	382, 384, 383, 1287, 385, 605, 1116, 386, 387, 1117,
	1288, 388, 0, 0, 0, 389, 390, 1289, 1290, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1291, 251, 1120, 431, 432, 1292, 606,
	433, 607, 435, 436, 1293, 0, 437, 0, 1294, 1295,
	439, 440, 441, 1296, 1297, 442, 443, 608, 1121, 444,
	1122, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 1298, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 1299,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 1300, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	1301, 487, 488, 489, 1123, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 1302, 510, 511, 509, 512, 513, 514,
	1303, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 1304, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 1305, 537, 538, 0, 536, 1306, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 1307, 547, 619, 620,
	621, 622, 1308, 556, 1309, 548, 549, 550, 623, 551,
	624, 1310, 552, 553, 554, 555, 0, 557, 558, 1311,
	1312, 559, 560, 561, 563, 564, 562, 565, 1313, 566,
	1314, 0, 567, 568, 569, 625, 626, 627, 1315, 571,
	570, 572, 628, 1316, 1317, 1318, 1319, 573, 574, 629,
	575, 576, 577, 1333, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 252, 254, 253, 255, 256, 257, 258, 1241,
	259, 260, 1242, 1243, 1244, 0, 1245, 578, 1246, 1247,
	1248, 1249, 261, 262, 1108, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 1250, 583, 270,
	271, 272, 273, 274, 275, 1251, 1252, 0, 276, 584,
	585, 586, 1253, 277, 278, 587, 1254, 1321, 1255, 279,
	280, 281, 282, 283, 284, 285, 0, 1256, 287, 288,
	289, 286, 290, 1257, 291, 0, 292, 293, 294, 295,
	296, 297, 1258, 298, 299, 300, 1109, 301, 302, 1259,
	1260, 1262, 1261, 1263, 1264, 1265, 303, 304, 305, 306,
	0, 307, 588, 589, 1266, 311, 308, 309, 1267, 312,
	310, 1268, 313, 314, 315, 1269, 1270, 316, 317, 318,
	1271, 319, 320, 1272, 321, 322, 323, 1273, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 1274, 249, 1275, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 1276, 341,
	1277, 1278, 1110, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 1279, 352, 596, 1280, 597,
	353, 1281, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 1112, 359, 360, 1282, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 367, 369, 1283, 1111, 368,
	601, 602, 1284, 603, 1285, 370, 371, 1113, 604, 1114,
	372, 373, 374, 1115, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 1286, 382, 384, 383, 1287, 385,
	605, 1116, 386, 387, 1117, 1288, 388, 0, 0, 0,
	389, 390, 1289, 1290, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 1118, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 1119, 421, 1291, 251,
	1120, 431, 432, 1292, 606, 433, 607, 435, 436, 1293,
	0, 437, 0, 1294, 1295, 439, 440, 441, 1296, 1297,
	442, 443, 608, 1121, 444, 1122, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 1298, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 1299, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 1300, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 1301, 487, 488, 489, 1123,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 1302, 510,
	511, 509, 512, 513, 514, 1303, 515, 516, 499, 500,
	517, 518, 1124, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 1304, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 1305, 537, 538, 0,
	536, 1306, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 1307, 547, 619, 620, 621, 622, 1308, 556, 1309,
	548, 549, 550, 623, 551, 624, 1310, 552, 553, 554,
	555, 0, 557, 558, 1311, 1312, 559, 560, 561, 563,
	564, 562, 565, 1313, 566, 1314, 0, 567, 568, 569,
	625, 626, 627, 1315, 571, 570, 572, 628, 1316, 1317,
	1318, 1319, 573, 574, 629, 575, 576, 577, 1232, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 1241, 259, 260, 1242, 1243, 1244,
	0, 1245, 578, 1246, 1247, 1248, 1249, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 1250, 583, 270, 271, 272, 273, 274, 275,
	1251, 1252, 0, 276, 584, 585, 586, 1253, 277, 278,
	587, 1254, 1321, 1255, 279, 280, 281, 282, 283, 284,
	285, 0, 1256, 287, 288, 289, 286, 290, 1257, 291,
	0, 292, 293, 294, 295, 296, 297, 1258, 298, 299,
	300, 1109, 301, 302, 1259, 1260, 1262, 1261, 1263, 1264,
	1265, 303, 304, 305, 306, 0, 307, 588, 589, 1266,
	311, 308, 309, 1267, 312, 310, 1268, 313, 314, 315,
	1269, 1270, 316, 317, 318, 1271, 319, 320, 1272, 321,
	322, 323, 1273, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 1274, 249,
	1275, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 1276, 341, 1277, 1278, 1110, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	1279, 352, 596, 1280, 597, 353, 1281, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 1112, 359, 360, 1282,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 1283, 1111, 368, 601, 602, 1284, 603, 1285,
	370, 371, 1113, 604, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 1286,
	382, 384, 383, 1287, 385, 605, 1116, 386, 387, 1117,
	1288, 388, 0, 0, 0, 389, 390, 1289, 1290, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1291, 251, 1120, 431, 432, 1292, 606,
	433, 607, 435, 436, 1293, 0, 437, 0, 1294, 1295,
	439, 440, 441, 1296, 1297, 442, 443, 608, 1121, 444,
	1122, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 1298, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 1299,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 1300, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	1301, 487, 488, 489, 1123, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 1302, 510, 511, 509, 512, 513, 514,
	1303, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 1304, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 1305, 537, 538, 0, 536, 1306, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 1307, 547, 619, 620,
	621, 622, 1308, 556, 1309, 548, 549, 550, 623, 551,
	624, 1310, 552, 553, 554, 555, 0, 557, 558, 1311,
	1312, 559, 560, 561, 563, 564, 562, 565, 1313, 566,
	1314, 0, 567, 568, 569, 625, 626, 627, 1315, 571,
	570, 572, 628, 1316, 1317, 1318, 1319, 573, 574, 629,
	575, 576, 577, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 1241, 259, 260,
	1242, 1243, 1244, 0, 1245, 578, 1246, 1247, 1248, 1249,
	261, 262, 1108, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 1250, 583, 270, 271, 272,
	273, 274, 275, 1251, 1252, 0, 276, 584, 585, 586,
	1253, 277, 278, 587, 1254, 1321, 1255, 279, 280, 281,
	282, 283, 284, 285, 0, 1256, 287, 288, 289, 286,
	290, 1257, 291, 0, 292, 293, 294, 295, 296, 297,
	1258, 298, 299, 300, 1109, 301, 302, 1259, 1260, 1262,
	1261, 1263, 1264, 1265, 303, 304, 305, 306, 0, 307,
	588, 589, 1266, 311, 308, 309, 1267, 312, 310, 1268,
	313, 314, 315, 1269, 1270, 316, 317, 318, 1271, 319,
	320, 1272, 321, 322, 323, 1273, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 1274, 249, 1275, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 1276, 341, 1277, 1278,
	1110, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 1279, 352, 596, 1280, 597, 353, 1281,
	354, 355, 356, 357, 358, 598, 599, 600, 434, 1112,
	359, 360, 1282, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 367, 369, 1283, 1111, 368, 601, 602,
	1284, 603, 1285, 370, 371, 1113, 604, 1114, 372, 373,
	374, 1115, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 1286, 382, 384, 383, 1287, 385, 605, 1116,
	386, 387, 1117, 1288, 388, 0, 0, 0, 389, 390,
	1289, 1290, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 1118, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 1119, 421, 1291, 251, 1120, 431,
	432, 1292, 606, 433, 607, 435, 436, 1293, 0, 437,
	0, 1294, 1295, 439, 440, 441, 1296, 1297, 442, 443,
	608, 1121, 444, 1122, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 1298, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 1299, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 1300, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 1301, 487, 488, 489, 1123, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 1302, 510, 511, 509,
	512, 513, 514, 1303, 515, 516, 499, 500, 517, 518,
	1124, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	1304, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 1305, 537, 538, 0, 536, 1306,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 1307,
	547, 619, 620, 621, 622, 1308, 556, 1309, 548, 549,
	550, 623, 551, 624, 1310, 552, 553, 554, 555, 0,
	557, 558, 1311, 1312, 559, 560, 561, 563, 564, 562,
	565, 1313, 566, 1314, 0, 567, 568, 569, 625, 626,
	627, 1315, 571, 570, 572, 628, 1316, 1317, 1318, 1319,
	573, 574, 629, 575, 576, 577, 2352, 0, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 2349, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 2350, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 2348, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 2351, 0,
	0, 0, 0, 0, 0, 1028, 2347, 0, 990, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 213, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 215, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 1513, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 207, 573, 574, 629,
	575, 576, 577, 1003, 0, 208, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 1750, 1748, 0,
	0, 1026, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 213, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 215, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 1513, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 207, 573, 574, 629,
	575, 576, 577, 1003, 0, 208, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 1750, 2929, 0,
	0, 1026, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 213, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 215, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 1513, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 207, 573, 574, 629,
	575, 576, 577, 1003, 0, 208, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 1750, 1748, 0,
	0, 1026, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 2480, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 2485, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 2481, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 2482, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	2397, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	2395, 0, 2394, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 1120,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 2392, 0, 2391, 1026, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 1081, 0, 268, 1088, 269, 1087, 0, 1098,
	270, 271, 272, 273, 274, 275, 1034, 1067, 1001, 276,
	1128, 1129, 586, 0, 277, 278, 1074, 0, 1055, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 303, 304, 305,
	306, 1091, 307, 1085, 1084, 1005, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1011, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1099, 1100, 1023, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1083, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 1096, 1097, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1106, 0,
	1033, 353, 0, 354, 355, 356, 357, 358, 1069, 1070,
	1073, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 1111,
	368, 1078, 1079, 0, 1039, 0, 370, 371, 1113, 1071,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1107, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 1062, 1061, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1002,
	251, 1120, 431, 432, 1024, 1072, 433, 1086, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 1101, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	1102, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1082, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 1012, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1065, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1080, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1127, 531, 532, 533, 534, 1103, 0, 537, 538,
	1000, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 1028, 2389, 0, 2388, 1026, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 0, 0, 1028, 2386, 0, 1603, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 1602, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	993, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	1007, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 4228, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	1007, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 2266,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 2265, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	1007, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 4010, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	1007, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 1028,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 3657, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 1818, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 0, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 1120,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 3405, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 1028, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 1120,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 1818, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 0, 1026, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 1081, 0, 268, 1088, 269, 1087, 0, 1098,
	270, 271, 272, 273, 274, 275, 1034, 1067, 1001, 276,
	1128, 1129, 586, 0, 277, 278, 1074, 0, 1055, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 303, 304, 305,
	306, 1091, 307, 1085, 1084, 1005, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1011, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1099, 1100, 1023, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1083, 0, 0, 0, 340, 0,
	341, 0, 2485, 1110, 342, 343, 1096, 1097, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1106, 0,
	1033, 353, 0, 354, 355, 356, 357, 358, 1069, 1070,
	1073, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 1111,
	368, 1078, 1079, 0, 1039, 0, 370, 371, 1113, 1071,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1107, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 1062, 1061, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1002,
	251, 1120, 431, 432, 1024, 1072, 433, 1086, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 1101, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	1102, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1082, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 1012, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1065, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1080, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1127, 531, 532, 533, 534, 1103, 0, 537, 538,
	1000, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 1028, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 1081, 0, 268, 1088, 269, 1087, 0, 1098,
	270, 271, 272, 273, 274, 275, 1034, 1067, 1001, 276,
	1128, 1129, 586, 0, 277, 278, 1074, 0, 1055, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 303, 304, 305,
	306, 1091, 307, 1085, 1084, 1005, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1011, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1099, 1100, 1023, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1083, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 1096, 1097, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1106, 0,
	1033, 353, 0, 354, 355, 356, 357, 358, 1069, 1070,
	1073, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 1111,
	368, 1078, 1079, 0, 1039, 0, 370, 371, 1113, 1071,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1107, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 1062, 1061, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1002,
	251, 1120, 431, 432, 1024, 1072, 433, 1086, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 1101, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	1102, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1082, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 1012, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1065, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1080, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1127, 531, 532, 533, 534, 1103, 0, 537, 538,
	1000, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 1028, 1748, 0, 2490, 1026, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 2488, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	2476, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 2465, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 1120,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 2463, 1026, 2454, 2461, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 1081, 0, 268, 1088, 269, 1087, 0, 1098,
	270, 271, 272, 273, 274, 275, 1034, 1067, 1001, 276,
	1128, 1129, 586, 0, 277, 278, 1074, 0, 1055, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 303, 304, 305,
	306, 1091, 2457, 1085, 1084, 1005, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1011, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1099, 1100, 1023, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1083, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 1096, 1097, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1106, 0,
	1033, 353, 0, 354, 355, 356, 2458, 358, 1069, 1070,
	1073, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 1111,
	368, 1078, 1079, 0, 1039, 0, 370, 371, 1113, 1071,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1107, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 1062, 1061, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 2459, 402, 2456, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1002,
	251, 1120, 431, 432, 1024, 1072, 433, 1086, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 1101, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	1102, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1082, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 1012, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 2460, 0,
	510, 511, 509, 512, 513, 514, 1065, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1080, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1127, 531, 532, 533, 534, 1103, 0, 537, 538,
	1000, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 2455, 577, 1003,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 2451, 1026, 2454, 2461,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 2457, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 2458, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 2459, 402,
	2456, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	2460, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 2455,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 1756, 0, 1028, 0, 0, 0, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 2245, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	1608, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 1543, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 1120,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 1538, 1026, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 1081, 0, 268, 1088, 269, 1087, 0, 1098,
	270, 271, 272, 273, 274, 275, 1034, 1067, 1001, 276,
	1128, 1129, 586, 0, 277, 278, 1074, 0, 1055, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 303, 304, 305,
	306, 1091, 307, 1085, 1084, 1005, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1011, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1099, 1100, 1023, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1083, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 1096, 1097, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1106, 0,
	1033, 353, 0, 354, 355, 356, 357, 358, 1069, 1070,
	1073, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 1111,
	368, 1078, 1079, 0, 1039, 0, 370, 371, 1113, 1071,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1107, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 1062, 1061, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1002,
	251, 1120, 431, 432, 1024, 1072, 433, 1086, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 1101, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	1102, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1082, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 1012, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1065, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1080, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1127, 531, 532, 533, 534, 1103, 0, 537, 538,
	1000, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 1529, 1026, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 1524, 1026,
	1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1068, 1032, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 1081, 0, 268, 1088,
	269, 1087, 0, 1098, 270, 271, 272, 273, 274, 275,
	1034, 1067, 1001, 276, 1128, 1129, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 1091, 307, 1085, 1084, 1005,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1076, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1011, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 1023, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1083, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	1096, 1097, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 1033, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 1078, 1079, 0, 1039, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 1002, 251, 1120, 431, 432, 1024, 1072,
	433, 1086, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 1082,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 1012,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 1080, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 1127, 531, 532, 533, 534,
	1103, 0, 537, 538, 1000, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 1092, 1093,
	1094, 1095, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 1022, 552, 553, 554, 555, 0, 557, 558, 0,
	1006, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 1089, 1126, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1003, 0, 0, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 997, 998,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	1506, 1026, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1068, 1032, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 1081, 0,
	268, 1088, 269, 1087, 0, 1098, 270, 271, 272, 273,
	274, 275, 1034, 1067, 1001, 276, 1128, 1129, 586, 0,
	277, 278, 1074, 0, 1055, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064,
	1060, 1059, 1063, 303, 304, 305, 306, 1091, 307, 1085,
	1084, 1005, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1076, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1011, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1099, 1100,
	1023, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1083, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 1096, 1097, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1106, 0, 1033, 353, 0, 354,
	355, 356, 357, 358, 1069, 1070, 1073, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 1111, 368, 1078, 1079, 0,
	1039, 0, 370, 371, 1113, 1071, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1107, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 1062,
	1061, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 1002, 251, 1120, 431, 432,
	1024, 1072, 433, 1086, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 1101, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 1102, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 1082, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 1012, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1065, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 1080, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 1127, 531, 532,
	533, 534, 1103, 0, 537, 538, 1000, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	1092, 1093, 1094, 1095, 0, 556, 0, 548, 549, 550,
	1104, 551, 1105, 1022, 552, 553, 554, 555, 0, 557,
	558, 0, 1006, 559, 560, 561, 563, 564, 562, 565,
	1066, 566, 0, 0, 567, 568, 569, 625, 1089, 1126,
	0, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 1003, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	997, 998, 0, 0, 0, 0, 0, 0, 0, 1028,
	0, 0, 1385, 1026, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1384, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 1120,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 557, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1003, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 1379, 1026, 1044, 1016, 1017, 1018,
	1014, 1015, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1068, 1032,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 1081, 0, 268, 1088, 269, 1087, 0, 1098,
	270, 271, 272, 273, 274, 275, 1034, 1067, 1001, 276,
	1128, 1129, 586, 0, 277, 278, 1074, 0, 1055, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	1058, 1056, 1057, 1064, 1060, 1059, 1063, 303, 304, 305,
	306, 1091, 307, 1085, 1084, 1005, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1011, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1099, 1100, 1023, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1083, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 1096, 1097, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1106, 0,
	1033, 353, 0, 354, 355, 356, 357, 358, 1378, 1070,
	1073, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 1111,
	368, 1078, 1079, 0, 1039, 0, 370, 371, 1113, 1071,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1107, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 1062, 1061, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 1002,
	251, 1120, 431, 432, 1024, 1072, 433, 1086, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 1101, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	1102, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1082, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 1012, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1065, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1080, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1127, 531, 532, 533, 534, 1103, 0, 537, 538,
	1000, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1092, 1093, 1094, 1095, 0, 556,
	0, 548, 549, 550, 1104, 551, 1105, 1022, 552, 553,
	554, 555, 0, 557, 558, 0, 1006, 559, 560, 561,
	563, 564, 562, 565, 1066, 566, 0, 0, 567, 568,
	569, 625, 1089, 1126, 0, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 1003,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 1372, 1026, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 4268, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 4267, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 4266, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 4268, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 4267, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	3960, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 3961, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 3959, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 2896, 2897, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 2894, 2895, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 997, 998, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	1001, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 1005, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 1002, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 1000, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 1006, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1003, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 2253, 2254, 1044, 1016,
	1017, 1018, 1014, 1015, 1027, 1028, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1068, 1032, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 1081, 0, 268, 1088, 269, 1087,
	0, 1098, 270, 271, 272, 273, 274, 275, 1034, 1067,
	0, 276, 1128, 1129, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 1091, 307, 1085, 1084, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1076, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1011, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 1023, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1083, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 1096, 1097,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 1033, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 1078, 1079, 0, 1039, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 0, 251, 1120, 431, 432, 1024, 1072, 433, 1086,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 1082, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 1012, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 1080, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 1127, 531, 532, 533, 534, 1103, 0,
	537, 538, 0, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 1092, 1093, 1094, 1095,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 1022,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 1089, 1126, 0, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 1044, 1016, 1017, 1018, 1014, 1015, 1027, 0, 2473,
	0, 0, 0, 0, 0, 0, 2471, 2472, 252, 254,
	253, 255, 256, 257, 258, 1028, 259, 260, 0, 1026,
	0, 0, 0, 1068, 1032, 0, 0, 0, 261, 262,
	1108, 263, 264, 265, 266, 267, 579, 1081, 0, 268,
	1088, 269, 1087, 0, 1098, 270, 271, 272, 273, 274,
	275, 1034, 1067, 0, 276, 1128, 1129, 586, 0, 277,
	278, 1074, 0, 1055, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 303, 304, 305, 306, 1091, 307, 1085, 1084,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1076, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1011, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1099, 1100, 1023,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1083,
	0, 0, 0, 340, 0, 341, 0, 0, 1110, 342,
	343, 1096, 1097, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1106, 0, 1033, 353, 0, 354, 355,
	356, 357, 358, 1069, 1070, 1073, 434, 1112, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 367, 369, 0, 1111, 368, 1078, 1079, 0, 1039,
	0, 370, 371, 1113, 1071, 1114, 372, 373, 374, 1115,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 1107, 1116, 386, 387,
	1117, 0, 388, 0, 0, 0, 389, 390, 1062, 1061,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 1118,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 1119, 421, 0, 251, 1120, 431, 432, 1024,
	1072, 433, 1086, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 1121,
	444, 1122, 1101, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 1102, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	1082, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1123, 490, 491, 492, 493,
	2889, 2890, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 1065, 515, 516, 499, 500, 517, 518, 1124, 519,
	520, 521, 522, 523, 524, 1080, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 1127, 531, 532, 533,
	534, 1103, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 1092,
	1093, 1094, 1095, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 1022, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 625, 1089, 1126, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1044, 1016, 1017, 1018, 1014, 1015,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	1956, 252, 254, 253, 255, 256, 257, 258, 1028, 259,
	260, 0, 1026, 0, 0, 0, 1068, 1032, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 0,
	1081, 0, 268, 1088, 269, 1087, 0, 1098, 270, 271,
	272, 273, 274, 275, 1034, 1067, 1001, 276, 1128, 1129,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 4268, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 1091,
	307, 1085, 1084, 1005, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1076, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1011,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 1023, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1083, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 1096, 1097, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 1033, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 1078,
	1079, 0, 1039, 0, 370, 371, 0, 1071, 0, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 1002, 251, 0,
	431, 432, 1024, 1072, 433, 1086, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 1082, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 1012, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 1080, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 1127,
	531, 532, 533, 534, 1103, 0, 537, 538, 1000, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 1092, 1093, 1094, 1095, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 1022, 552, 553, 554, 555,
	0, 4267, 558, 0, 1006, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	1089, 1126, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 990, 0, 1166,
	0, 0, 997, 998, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 0, 1026, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1068, 0, 0, 0, 0, 261, 262, 1108, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	1067, 0, 276, 584, 585, 586, 0, 277, 278, 1074,
	0, 1055, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1099, 1100, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 1110, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1106, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1069, 1070, 1073, 434, 1112, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 1111, 368, 601, 602, 0, 603, 0, 370,
	371, 1113, 1071, 1114, 372, 373, 374, 1115, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 1152, 382,
	384, 383, 0, 385, 1107, 1116, 386, 387, 1117, 0,
	388, 0, 0, 0, 389, 390, 1062, 1061, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 1118, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	1119, 421, 0, 251, 1120, 431, 432, 0, 1072, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 1158, 439,
	440, 441, 0, 0, 442, 443, 608, 1121, 444, 1122,
	1101, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 1102, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1123, 490, 491, 492, 493, 615, 1160,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 213, 510, 511, 509, 512, 513, 514, 1065,
	515, 516, 499, 500, 517, 518, 1124, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 1103,
	0, 537, 538, 0, 536, 215, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 1104, 551, 1105,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 1066, 566, 0,
	0, 567, 568, 569, 1513, 626, 627, 0, 571, 570,
	572, 628, 0, 1166, 0, 207, 573, 574, 629, 575,
	576, 577, 0, 0, 208, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 1156, 1068, 1842, 0, 0, 0,
	261, 262, 1108, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 1067, 0, 276, 584, 585, 586,
	0, 277, 278, 1074, 0, 1055, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1109, 301, 302, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1099,
	1100, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	1110, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1106, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 1069, 1070, 1073, 434, 1112,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 367, 369, 0, 1111, 368, 601, 602,
	0, 603, 0, 370, 371, 1113, 1071, 1114, 372, 373,
	374, 1115, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 1152, 382, 384, 383, 0, 385, 1107, 1116,
	386, 387, 1117, 0, 388, 0, 0, 0, 389, 390,
	1062, 1061, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 1118, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 1119, 421, 0, 251, 1120, 431,
	432, 0, 1072, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 1158, 439, 440, 441, 0, 0, 442, 443,
	608, 1121, 444, 1122, 1101, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 1102, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1123, 490, 491,
	492, 493, 615, 1160, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 213, 510, 511, 509,
	512, 513, 514, 1065, 515, 516, 499, 500, 517, 518,
	1124, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 1103, 0, 537, 538, 0, 536, 215,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 1513, 626,
	627, 0, 571, 570, 572, 628, 0, 0, 0, 207,
	573, 574, 629, 575, 576, 577, 0, 0, 208, 0,
	0, 0, 3073, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1156, 0,
	1842, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1068, 0, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 1067, 0, 276, 584, 585,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 601,
	602, 0, 603, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 1152, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 0, 251, 1120,
	431, 432, 0, 1072, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 1158, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 615, 1160, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 1103, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 1148, 0,
	1166, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 1156,
	0, 1154, 1068, 0, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 1067, 0, 276, 584, 585, 586, 0, 277, 278,
	1074, 0, 1055, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060, 1059,
	1063, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1099, 1100, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1106, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 1069, 1070, 1073, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 1111, 368, 601, 602, 0, 603, 0,
	370, 371, 1113, 1071, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 1152,
	382, 384, 383, 0, 385, 1107, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 1062, 1061, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 0, 251, 1120, 431, 432, 0, 1072,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 1158,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 1101, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 1102, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 615,
	1160, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1065, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	1103, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 1104, 551,
	1105, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 1066, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 0, 1166, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 1156, 1068, 1154, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 1067, 0, 276, 584, 585,
	586, 0, 277, 278, 1074, 0, 1055, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 1058, 1056,
	1057, 1064, 1060, 1059, 1063, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1099, 1100, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1106, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1069, 1070, 1073, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 1111, 368, 601,
	602, 0, 603, 0, 370, 371, 1113, 1071, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 1152, 382, 384, 383, 0, 385, 1107,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 1062, 1061, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 0, 251, 1120,
	431, 432, 0, 1072, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 1158, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 1101, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 1102, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 615, 1160, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1065, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 1103, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 1104, 551, 1105, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 1066, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 1166, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 1156,
	1068, 1154, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 1067,
	0, 276, 584, 585, 586, 0, 277, 278, 1074, 0,
	1055, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 1058, 1056, 1057, 1064, 1060, 1059, 1063, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1099, 1100, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1106, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	1069, 1070, 1073, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 1111, 368, 601, 602, 0, 603, 0, 370, 371,
	1113, 1071, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1107, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 1062, 1061, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 0, 251, 1120, 431, 432, 0, 1072, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 1101,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 1102, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1065, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 1103, 0,
	537, 538, 0, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 1104, 551, 1105, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 1066, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 1166, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1068, 0, 3553, 0, 0, 261, 262,
	1108, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 1067, 0, 276, 584, 585, 586, 0, 277,
	278, 1074, 0, 1055, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1109, 301, 302, 1058, 1056, 1057, 1064, 1060,
	1059, 1063, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1099, 1100, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 1110, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1106, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 1069, 1070, 1073, 434, 1112, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 367, 369, 0, 1111, 368, 601, 602, 0, 603,
	0, 370, 371, 1113, 1071, 1114, 372, 373, 374, 1115,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 1107, 1116, 386, 387,
	1117, 0, 388, 0, 0, 0, 389, 390, 1062, 1061,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 1118,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 1119, 421, 0, 251, 1120, 431, 432, 0,
	1072, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 1121,
	444, 1122, 1101, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 1102, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1123, 490, 491, 492, 493,
	615, 1160, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 1065, 515, 516, 499, 500, 517, 518, 1124, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 1103, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 1104,
	551, 1105, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 1066,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 0, 990, 0, 1355, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 1741, 578,
	0, 0, 0, 0, 261, 262, 1108, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 1321,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1109, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 1110, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 1112, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 367, 369, 0,
	1111, 368, 601, 602, 0, 603, 0, 370, 371, 1113,
	604, 1114, 372, 373, 374, 1115, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 1116, 386, 387, 1117, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 1118, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 1119, 421,
	0, 0, 1120, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 1121, 444, 1122, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1123, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	213, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 1124, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 215, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 1513, 626, 627, 0, 571, 570, 572, 628,
	0, 0, 0, 207, 573, 574, 629, 575, 576, 577,
	0, 0, 208, 0, 0, 0, 1510, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	1321, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 367, 369,
	0, 1111, 368, 601, 602, 0, 603, 0, 370, 371,
	1113, 604, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 0, 0, 1120, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 213, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 215, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 1513, 626, 627, 0, 571, 570, 572,
	628, 0, 0, 0, 207, 573, 574, 629, 575, 576,
	577, 1355, 1354, 208, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 177, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	1108, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 1321, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1109, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 1110, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 1112, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 367, 369, 0, 1111, 368, 601, 602, 0, 603,
	0, 370, 371, 1113, 604, 1114, 372, 373, 374, 1115,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 1116, 386, 387,
	1117, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 1118,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 1119, 421, 0, 0, 1120, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 1121,
	444, 1122, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1123, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 1124, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1355, 1354, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 1535, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 1321, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 1111, 368, 601,
	602, 0, 603, 0, 370, 371, 1113, 604, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 0, 0, 1120,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1355, 2040, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 3328, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 1108, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 1321,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1109, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 1110, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 1112, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 367, 369, 0,
	1111, 368, 601, 602, 0, 603, 0, 370, 371, 1113,
	604, 1114, 372, 373, 374, 1115, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 2039, 384, 383,
	0, 385, 605, 1116, 386, 387, 1117, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 1118, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 1119, 421,
	0, 0, 1120, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 1121, 444, 1122, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1123, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 1124, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	1355, 1354, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 1535, 259, 260, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 1321, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	367, 369, 0, 1111, 368, 601, 602, 0, 603, 0,
	370, 371, 1113, 604, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 0, 0, 1120, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 1166, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1068, 0, 1519, 0, 0,
	261, 262, 1108, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 1067, 0, 276, 584, 585, 586,
	0, 277, 278, 1074, 0, 1055, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1109, 301, 302, 1058, 1056, 1057,
	1064, 1060, 1059, 1063, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1099,
	1100, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	1110, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1106, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 1069, 1070, 1073, 434, 1112,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 367, 369, 0, 1111, 368, 601, 602,
	0, 603, 0, 370, 371, 1113, 1071, 1114, 372, 373,
	374, 1115, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1107, 1116,
	386, 387, 1117, 0, 388, 0, 0, 0, 389, 390,
	1062, 1061, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 1118, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 1119, 421, 0, 251, 1120, 431,
	432, 0, 1072, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 1121, 444, 1122, 1101, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 1102, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1123, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1065, 515, 516, 499, 500, 517, 518,
	1124, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 1103, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 1104, 551, 1105, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 1066, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 990, 0, 246, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 0, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 0,
	421, 0, 0, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 213, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 215, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 1513, 626, 627, 0, 571, 570, 572,
	628, 246, 0, 0, 207, 573, 574, 629, 575, 576,
	577, 0, 0, 208, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 177, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 251, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 246, 2808, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 1856, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 246, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 4411, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 251, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 0, 246, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 3269, 578, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	251, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 0,
	246, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 1456, 578, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	367, 369, 0, 0, 368, 601, 602, 0, 603, 0,
	370, 371, 0, 604, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 0, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 0, 421, 0, 0, 0, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 0, 444,
	0, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 516, 499, 500, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 246, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 2779, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 0, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 0,
	421, 0, 0, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 246, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 3430, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	0, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 0,
	837, 0, 716, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 2144, 578, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 723, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 835, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 251, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 721, 539,
	540, 541, 542, 543, 722, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 0, 714, 0, 716, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 726, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 723, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 0, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 0,
	421, 0, 251, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 721, 539, 540, 541, 542, 543,
	722, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 1893, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 0, 1899, 0, 268, 1889, 269, 1905, 0, 1912,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	1915, 1916, 0, 0, 277, 278, 0, 0, 1321, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 1091, 307, 1903, 1902, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1076,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 0, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 1901, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 1910, 1911, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 0, 354, 355, 356, 357, 358, 0, 0,
	0, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 1111,
	368, 1896, 1897, 0, 1892, 0, 370, 371, 1113, 0,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 0, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 0,
	0, 1120, 431, 432, 0, 0, 433, 1904, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 0, 1121, 444, 1122, 0, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 1886, 457, 458, 459, 1887, 460, 461, 462,
	0, 463, 0, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 1900, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 0, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	1898, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 1914, 531, 532, 533, 534, 0, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 1906, 1907, 1908, 1909, 0, 556,
	0, 548, 549, 550, 0, 551, 0, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 0, 1890, 1913, 0, 571, 570, 572, 716, 0,
	0, 0, 0, 573, 574, 0, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 1880, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 723, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 0, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 0,
	421, 0, 251, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 721, 539, 540, 541, 542, 543,
	722, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 716, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 726, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 723, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 251, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 2185, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 2186,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 721, 539, 540,
	541, 542, 543, 722, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 2187, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 716, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 726, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 723, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 1919, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	721, 539, 540, 541, 542, 543, 722, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 1918, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 716, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 726, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	723, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 251, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 1872, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 721, 539, 540, 541, 542, 543, 722,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 1871, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	1355, 1354, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 726, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 261, 262, 1108,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 1321, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1109, 301, 302, 0, 0, 0, 0, 0, 0,
	2743, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 1110, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 1112, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	367, 369, 0, 1111, 368, 601, 602, 0, 603, 0,
	370, 371, 1113, 604, 1114, 372, 373, 374, 1115, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 1116, 386, 387, 1117,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 1118, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 1119, 421, 0, 0, 1120, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 1121, 444,
	1122, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1123, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	2744, 515, 516, 499, 500, 517, 518, 1124, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 1355, 1354, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 1108, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 1321, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1109, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	1110, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 598, 599, 600, 434, 1112,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 367, 369, 0, 1111, 368, 601, 602,
	0, 603, 0, 370, 371, 1113, 604, 1114, 372, 373,
	374, 1115, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 1116,
	386, 387, 1117, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 1118, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 1119, 421, 0, 0, 1120, 431,
	432, 3603, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 1121, 444, 1122, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1123, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	1124, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 1355, 1354, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 1321, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 1111,
	368, 601, 602, 0, 603, 0, 370, 371, 1113, 604,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 0,
	0, 1120, 431, 432, 3241, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 246, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1563, 0, 1355,
	1354, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 1108, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 1321, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1109, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 1562, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 1110, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 1112, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 1111, 368, 601, 602, 0, 603, 0, 370,
	371, 1113, 604, 1114, 372, 373, 374, 1115, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 1116, 386, 387, 1117, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 1118, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	1119, 421, 0, 0, 1120, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 1121, 444, 1122,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 1561, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1123, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 1560, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 1124, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1503, 0, 1355, 1354, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 1321, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1502, 599, 600, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 1111, 368, 601,
	602, 0, 603, 0, 370, 371, 1113, 604, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 0, 0, 1120,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1431, 0, 1355,
	1354, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 1108, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 1321, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1109, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 1110, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1430, 599, 600, 434, 1112, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 1111, 368, 601, 602, 0, 603, 0, 370,
	371, 1113, 604, 1114, 372, 373, 374, 1115, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 1116, 386, 387, 1117, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 1118, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	1119, 421, 0, 0, 1120, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 1121, 444, 1122,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1123, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 1124, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1390, 0, 1355, 1354, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 1108, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 1321, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1109, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 1110, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	1112, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 1111, 368, 601,
	602, 0, 603, 0, 370, 371, 1113, 604, 1114, 372,
	373, 374, 1115, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	1116, 386, 387, 1117, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 1118, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 1119, 421, 0, 0, 1120,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 1121, 444, 1122, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1123, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 1124, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 1350, 0, 1355,
	1354, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 1108, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 1321, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1109, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 1110, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1349, 599, 600, 434, 1112, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 1111, 368, 601, 602, 0, 603, 0, 370,
	371, 1113, 604, 1114, 372, 373, 374, 1115, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 1116, 386, 387, 1117, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 1118, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	1119, 421, 0, 0, 1120, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 1121, 444, 1122,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1123, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 1124, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 1355, 1354, 0, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 1108, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 1321, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1109, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 0, 1110,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 1112, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 367, 369, 0, 1111, 368, 601, 602, 0,
	603, 0, 370, 371, 1113, 604, 1114, 372, 373, 374,
	1115, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 1116, 386,
	387, 1117, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	1118, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 1119, 421, 0, 0, 1120, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	1121, 444, 1122, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1123, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 1124,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1355, 1354, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 1108, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 1321, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1109, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 1928, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 1110, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 1112, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 1111, 368,
	601, 602, 0, 603, 0, 370, 371, 1113, 604, 1114,
	372, 373, 374, 1115, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 1116, 386, 387, 1117, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 1118, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 1119, 421, 0, 0,
	1120, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 1121, 444, 1122, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 1123,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 1124, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 1355, 1354,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 1108, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	1321, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1109,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 1110, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 1112, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 367, 369,
	0, 1111, 368, 601, 602, 0, 603, 0, 370, 371,
	1113, 604, 1114, 372, 373, 374, 1115, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 1116, 386, 387, 1117, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 1118, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 1119,
	421, 0, 0, 1120, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 1121, 444, 1122, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1123, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 1124, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 1355, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 1108, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 1321, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1109, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 1110, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 1112, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 1111,
	368, 601, 602, 0, 603, 0, 370, 371, 1113, 604,
	1114, 372, 373, 374, 1115, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 1116, 386, 387, 1117, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 1118, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 1119, 421, 0,
	0, 1120, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 1121, 444, 1122, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1123, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 1124, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 246, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 2610, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 2607, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 2614, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 2821, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 2613,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 2818, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 2820, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 2817, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 2612, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 2819, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 246, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 2610,
	277, 278, 587, 0, 0, 2604, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	2607, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 2614, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 2613, 0, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 2603, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 0, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 2612, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 2611, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1630, 0, 246, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 251, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 1633, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 1631, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 1632, 570, 572, 628,
	1325, 0, 246, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 1327, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 251, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 1158, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 1322, 0, 246, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 1324,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 251, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 1158, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	1228, 0, 246, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 1230, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 251, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 1158, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	0, 571, 570, 572, 628, 661, 0, 246, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 660, 257,
	258, 650, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 653, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 654, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 0, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	655, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 0, 571, 570, 572, 628,
	649, 0, 246, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 650, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 653,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 654, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 0, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 655, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	246, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	367, 369, 0, 0, 368, 601, 602, 0, 603, 0,
	370, 371, 0, 604, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 0, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 0, 421, 0, 251, 0, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 1158,
	439, 440, 441, 0, 0, 442, 443, 608, 0, 444,
	0, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 516, 499, 500, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 246, 571,
	570, 572, 628, 0, 0, 0, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 0, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 3204,
	421, 0, 251, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 0, 571, 570, 572,
	628, 2750, 0, 246, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 2749, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 251, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 2158, 0, 246, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 0, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 0,
	421, 0, 251, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 0, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 246, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	251, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 2073, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 2079,
	0, 246, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 2078, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 251, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 2066, 0, 246, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 2068, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	251, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 246, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 2036, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 1158, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1496, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1495, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 251, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1487, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1486, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1484, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1483, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 251, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1479, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1478, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1434, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 251, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1343, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1336, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1338, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 251, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 631, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 251, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 237, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 251, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 246, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 251, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 246, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 653, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 654, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 655, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 246, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 2194, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 598, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 251, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 246, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 2192, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 251, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 246,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 2190, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 251, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 246, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 2123,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 251, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 246, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 2117, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 251,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 246, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 2085, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 251, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 824, 0, 246, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 579, 580, 0, 268, 581, 269, 582,
	0, 583, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 584, 585, 586, 0, 277, 278, 587, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 588, 589, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 590, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 591, 592, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 593, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 594, 595,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	596, 0, 597, 353, 0, 354, 355, 356, 357, 358,
	598, 599, 600, 434, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 367, 369,
	0, 0, 368, 601, 602, 0, 603, 823, 370, 371,
	0, 604, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 605, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 401, 397, 399, 400, 402,
	415, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 417, 0, 416, 0, 418, 419, 420,
	425, 427, 428, 423, 424, 426, 429, 430, 422, 0,
	421, 0, 0, 0, 431, 432, 0, 606, 433, 607,
	435, 436, 0, 0, 437, 0, 0, 0, 439, 440,
	441, 0, 0, 442, 443, 608, 0, 444, 0, 609,
	445, 446, 438, 447, 448, 449, 450, 451, 452, 453,
	454, 0, 455, 456, 610, 457, 458, 459, 611, 460,
	461, 462, 612, 463, 613, 464, 465, 0, 466, 0,
	467, 468, 469, 470, 471, 472, 473, 614, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 615, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	516, 499, 500, 517, 518, 0, 519, 520, 521, 522,
	523, 524, 616, 0, 525, 0, 526, 527, 528, 529,
	501, 530, 535, 617, 531, 532, 533, 534, 618, 0,
	537, 538, 0, 536, 822, 539, 540, 541, 542, 543,
	544, 545, 331, 546, 0, 547, 619, 620, 621, 622,
	0, 556, 0, 548, 549, 550, 623, 551, 624, 0,
	552, 553, 554, 555, 0, 557, 558, 0, 0, 559,
	560, 561, 563, 564, 562, 565, 0, 566, 0, 0,
	567, 568, 569, 625, 626, 627, 246, 571, 570, 572,
	628, 0, 0, 0, 0, 573, 574, 629, 575, 576,
	577, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 2821, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	0, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 3866, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 683,
	0, 246, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	1198, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 1196, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 684, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 0, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 680,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 1199,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 679,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 683, 0, 246, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 1198, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 1196, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 684, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	0, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 441, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 680, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 1199, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 679, 620, 621, 622, 0, 556,
	0, 548, 1197, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 0, 571, 570, 572, 628, 640,
	0, 246, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 639, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 0, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 638, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 246, 2808, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 246, 3876, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 0, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 246, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 3577, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 246, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 2524, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 598, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 0, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 0, 571, 570, 572, 628, 246, 2808, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 579, 580, 0, 268, 581, 269, 582, 0, 583,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	584, 585, 586, 0, 277, 278, 587, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 588, 589, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 590, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 591, 592, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 593, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 594, 595, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 596, 0,
	597, 353, 0, 354, 355, 356, 357, 358, 598, 599,
	600, 434, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 367, 369, 0, 0,
	368, 601, 602, 0, 603, 0, 370, 371, 0, 604,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 605, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 401, 397, 399, 400, 402, 415, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 417, 0, 416, 0, 418, 419, 420, 425, 427,
	428, 423, 424, 426, 429, 430, 422, 0, 421, 0,
	0, 0, 431, 432, 0, 606, 433, 607, 435, 436,
	0, 0, 437, 0, 0, 0, 439, 440, 2805, 0,
	0, 442, 443, 608, 0, 444, 0, 609, 445, 446,
	438, 447, 448, 449, 450, 451, 452, 453, 454, 0,
	455, 456, 610, 457, 458, 459, 611, 460, 461, 462,
	612, 463, 613, 464, 465, 0, 466, 0, 467, 468,
	469, 470, 471, 472, 473, 614, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 615, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 516, 499,
	500, 517, 518, 0, 519, 520, 521, 522, 523, 524,
	616, 0, 525, 0, 526, 527, 528, 529, 501, 530,
	535, 617, 531, 532, 533, 534, 618, 0, 537, 538,
	0, 536, 0, 539, 540, 541, 542, 543, 544, 545,
	331, 546, 0, 547, 619, 620, 621, 622, 0, 556,
	0, 548, 549, 550, 623, 551, 624, 0, 552, 553,
	554, 555, 0, 557, 558, 0, 0, 559, 560, 561,
	563, 564, 562, 565, 0, 566, 0, 0, 567, 568,
	569, 625, 626, 627, 246, 571, 570, 572, 628, 0,
	0, 0, 0, 573, 574, 629, 575, 576, 577, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 2168, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 2156, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 683, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 673, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 684, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 680, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 1518, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 679, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1500, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1499, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1493, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1492, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1440, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 1439, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1423, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1421, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1417, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1394, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 1392, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 0, 571, 570, 572, 628, 1346, 0, 246,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 0, 571, 570,
	572, 628, 1330, 0, 246, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 579,
	580, 0, 268, 581, 269, 582, 0, 583, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 584, 585,
	586, 0, 277, 278, 587, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 588, 589, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 590,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	591, 592, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 593, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 594, 595, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 596, 0, 597, 353,
	0, 354, 355, 356, 357, 358, 598, 599, 600, 434,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 367, 369, 0, 0, 368, 601,
	602, 0, 603, 0, 370, 371, 0, 604, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 605,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 401, 397, 399, 400, 402, 415, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 417,
	0, 416, 0, 418, 419, 420, 425, 427, 428, 423,
	424, 426, 429, 430, 422, 0, 421, 0, 0, 0,
	431, 432, 0, 606, 433, 607, 435, 436, 0, 0,
	437, 0, 0, 0, 439, 440, 441, 0, 0, 442,
	443, 608, 0, 444, 0, 609, 445, 446, 438, 447,
	448, 449, 450, 451, 452, 453, 454, 0, 455, 456,
	610, 457, 458, 459, 611, 460, 461, 462, 612, 463,
	613, 464, 465, 0, 466, 0, 467, 468, 469, 470,
	471, 472, 473, 614, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 615, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 516, 499, 500, 517,
	518, 0, 519, 520, 521, 522, 523, 524, 616, 0,
	525, 0, 526, 527, 528, 529, 501, 530, 535, 617,
	531, 532, 533, 534, 618, 0, 537, 538, 0, 536,
	0, 539, 540, 541, 542, 543, 544, 545, 331, 546,
	0, 547, 619, 620, 621, 622, 0, 556, 0, 548,
	549, 550, 623, 551, 624, 0, 552, 553, 554, 555,
	0, 557, 558, 0, 0, 559, 560, 561, 563, 564,
	562, 565, 0, 566, 0, 0, 567, 568, 569, 625,
	626, 627, 246, 571, 570, 572, 628, 0, 0, 0,
	0, 573, 574, 629, 575, 576, 577, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 1179, 259, 260, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 579, 580, 0,
	268, 581, 269, 582, 0, 583, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 584, 585, 586, 0,
	277, 278, 587, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 588,
	589, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 590, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 591, 592,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	593, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 594, 595, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 596, 0, 597, 353, 0, 354,
	355, 356, 357, 358, 598, 599, 600, 434, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 367, 369, 0, 0, 368, 601, 602, 0,
	603, 0, 370, 371, 0, 604, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 605, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 401,
	397, 399, 400, 402, 415, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 417, 0, 416,
	0, 418, 419, 420, 425, 427, 428, 423, 424, 426,
	429, 430, 422, 0, 421, 0, 0, 0, 431, 432,
	0, 606, 433, 607, 435, 436, 0, 0, 437, 0,
	0, 0, 439, 440, 441, 0, 0, 442, 443, 608,
	0, 444, 0, 609, 445, 446, 438, 447, 448, 449,
	450, 451, 452, 453, 454, 0, 455, 456, 610, 457,
	458, 459, 611, 460, 461, 462, 612, 463, 613, 464,
	465, 0, 466, 0, 467, 468, 469, 470, 471, 472,
	473, 614, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 615, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 516, 499, 500, 517, 518, 0,
	519, 520, 521, 522, 523, 524, 616, 0, 525, 0,
	526, 527, 528, 529, 501, 530, 535, 617, 531, 532,
	533, 534, 618, 0, 537, 538, 0, 536, 0, 539,
	540, 541, 542, 543, 544, 545, 331, 546, 0, 547,
	619, 620, 621, 622, 0, 556, 0, 548, 549, 550,
	623, 551, 624, 0, 552, 553, 554, 555, 0, 557,
	558, 0, 0, 559, 560, 561, 563, 564, 562, 565,
	0, 566, 0, 0, 567, 568, 569, 625, 626, 627,
	246, 571, 570, 572, 628, 0, 0, 0, 0, 573,
	574, 629, 575, 576, 577, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 689, 259, 260, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	367, 369, 0, 0, 368, 601, 602, 0, 603, 0,
	370, 371, 0, 604, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 0, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 0, 421, 0, 0, 0, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 0, 444,
	0, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 516, 499, 500, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 683, 0, 246, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 673, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 671, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 672, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 684, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 674, 494, 0, 495, 496, 502,
	503, 497, 498, 680, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 675, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 679, 620, 621, 622, 0, 556, 0,
	548, 677, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 665, 0,
	246, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	367, 369, 0, 0, 368, 601, 602, 0, 603, 0,
	370, 371, 0, 604, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 0, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 0, 421, 0, 0, 0, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 0, 444,
	0, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 666, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 516, 499, 500, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 663, 0, 246, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 0, 571, 570, 572, 628, 657, 0,
	246, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 578, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 579, 580, 0, 268, 581,
	269, 582, 0, 583, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 584, 585, 586, 0, 277, 278,
	587, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 588, 589, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 590, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 591, 592, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 593, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	594, 595, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 596, 0, 597, 353, 0, 354, 355, 356,
	357, 358, 598, 599, 600, 434, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	367, 369, 0, 0, 368, 601, 602, 0, 603, 0,
	370, 371, 0, 604, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 605, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 401, 397, 399,
	400, 402, 415, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 417, 0, 416, 0, 418,
	419, 420, 425, 427, 428, 423, 424, 426, 429, 430,
	422, 0, 421, 0, 0, 0, 431, 432, 0, 606,
	433, 607, 435, 436, 0, 0, 437, 0, 0, 0,
	439, 440, 441, 0, 0, 442, 443, 608, 0, 444,
	0, 609, 445, 446, 438, 447, 448, 449, 450, 451,
	452, 453, 454, 0, 455, 456, 610, 457, 458, 459,
	611, 460, 461, 462, 612, 463, 613, 464, 465, 0,
	466, 0, 467, 468, 469, 470, 471, 472, 473, 614,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 615,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 516, 499, 500, 517, 518, 0, 519, 520,
	521, 522, 523, 524, 616, 0, 525, 0, 526, 527,
	528, 529, 501, 530, 535, 617, 531, 532, 533, 534,
	618, 0, 537, 538, 0, 536, 0, 539, 540, 541,
	542, 543, 544, 545, 331, 546, 0, 547, 619, 620,
	621, 622, 0, 556, 0, 548, 549, 550, 623, 551,
	624, 0, 552, 553, 554, 555, 0, 557, 558, 0,
	0, 559, 560, 561, 563, 564, 562, 565, 0, 566,
	0, 0, 567, 568, 569, 625, 626, 627, 0, 571,
	570, 572, 628, 635, 0, 246, 0, 573, 574, 629,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 598, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 246, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 598, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 0, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 246, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 3287, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 0, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 246,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 3235, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 246, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 3175,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 0, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 246, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 3173, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 246, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 3159, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 0, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 246, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 353, 0, 354, 355,
	356, 357, 358, 2759, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 0, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 449, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 471, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 246,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 579, 580, 0, 268, 581, 269,
	582, 0, 583, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 584, 585, 586, 0, 277, 278, 587,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 588, 589, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 590, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 593, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 594,
	595, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 596, 0, 597, 353, 0, 354, 355, 356, 357,
	358, 598, 599, 600, 434, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 367,
	369, 0, 0, 368, 601, 602, 0, 603, 0, 370,
	371, 0, 604, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 605, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 401, 397, 399, 400,
	402, 415, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 417, 0, 416, 0, 418, 419,
	420, 425, 427, 428, 423, 424, 426, 429, 430, 422,
	0, 421, 0, 0, 0, 431, 432, 0, 606, 433,
	607, 435, 436, 0, 0, 437, 0, 0, 0, 439,
	440, 441, 0, 0, 442, 443, 608, 0, 444, 0,
	609, 445, 446, 438, 447, 448, 449, 450, 451, 452,
	453, 454, 0, 455, 456, 610, 457, 458, 459, 611,
	460, 461, 462, 612, 463, 613, 464, 465, 0, 466,
	0, 467, 468, 469, 470, 471, 472, 473, 614, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 615, 494,
	0, 495, 496, 666, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 516, 499, 500, 517, 518, 0, 519, 520, 521,
	522, 523, 524, 616, 0, 525, 0, 526, 527, 528,
	529, 501, 530, 535, 617, 531, 532, 533, 534, 618,
	0, 537, 538, 0, 536, 0, 539, 540, 541, 542,
	543, 544, 545, 331, 546, 0, 547, 619, 620, 621,
	622, 0, 556, 0, 548, 549, 550, 623, 551, 624,
	0, 552, 553, 554, 555, 0, 557, 558, 0, 0,
	559, 560, 561, 563, 564, 562, 565, 0, 566, 0,
	0, 567, 568, 569, 625, 626, 627, 246, 571, 570,
	572, 628, 0, 0, 0, 0, 573, 574, 629, 575,
	576, 577, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 578,
	0, 2102, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 579, 580, 0, 268, 581, 269, 582, 0,
	583, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 584, 585, 586, 0, 277, 278, 587, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 588, 589, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 590, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 591, 592, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 593, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 594, 595, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 596,
	0, 597, 353, 0, 354, 355, 356, 357, 358, 598,
	599, 600, 434, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 367, 369, 0,
	0, 368, 601, 602, 0, 603, 0, 370, 371, 0,
	604, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 605, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 401, 397, 399, 400, 402, 415,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 417, 0, 416, 0, 418, 419, 420, 425,
	427, 428, 423, 424, 426, 429, 430, 422, 0, 421,
	0, 0, 0, 431, 432, 0, 606, 433, 607, 435,
	436, 0, 0, 437, 0, 0, 0, 439, 440, 441,
	0, 0, 442, 443, 608, 0, 444, 0, 609, 445,
	446, 438, 447, 448, 449, 450, 451, 452, 453, 454,
	0, 455, 456, 610, 457, 458, 459, 611, 460, 461,
	462, 612, 463, 613, 464, 465, 0, 466, 0, 467,
	468, 469, 470, 471, 472, 473, 614, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 615, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 0, 516,
	499, 500, 517, 518, 0, 519, 520, 521, 522, 523,
	524, 616, 0, 525, 0, 526, 527, 528, 529, 501,
	530, 535, 617, 531, 532, 533, 534, 618, 0, 537,
	538, 0, 536, 0, 539, 540, 541, 542, 543, 544,
	545, 331, 546, 0, 547, 619, 620, 621, 622, 0,
	556, 0, 548, 549, 550, 623, 551, 624, 0, 552,
	553, 554, 555, 0, 557, 558, 0, 0, 559, 560,
	561, 563, 564, 562, 565, 0, 566, 0, 0, 567,
	568, 569, 625, 626, 627, 246, 571, 570, 572, 628,
	0, 0, 0, 0, 573, 574, 629, 575, 576, 577,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	579, 580, 0, 268, 581, 269, 582, 0, 583, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 584,
	585, 586, 0, 277, 278, 587, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 588, 589, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	590, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 591, 592, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 593, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 594, 595, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 596, 0, 597,
	353, 0, 354, 355, 356, 357, 358, 1464, 599, 600,
	434, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 367, 369, 0, 0, 368,
	601, 602, 0, 603, 0, 370, 371, 0, 604, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	605, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 401, 397, 399, 400, 402, 415, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	417, 0, 416, 0, 418, 419, 420, 425, 427, 428,
	423, 424, 426, 429, 430, 422, 0, 421, 0, 0,
	0, 431, 432, 0, 606, 433, 607, 435, 436, 0,
	0, 437, 0, 0, 0, 439, 440, 441, 0, 0,
	442, 443, 608, 0, 444, 0, 609, 445, 446, 438,
	447, 448, 449, 450, 451, 452, 453, 454, 0, 455,
	456, 610, 457, 458, 459, 611, 460, 461, 462, 612,
	463, 613, 464, 465, 0, 466, 0, 467, 468, 469,
	470, 471, 472, 473, 614, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 615, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 516, 499, 500,
	517, 518, 0, 519, 520, 521, 522, 523, 524, 616,
	0, 525, 0, 526, 527, 528, 529, 501, 530, 535,
	617, 531, 532, 533, 534, 618, 0, 537, 538, 0,
	536, 0, 539, 540, 541, 542, 543, 544, 545, 331,
	546, 0, 547, 619, 620, 621, 622, 0, 556, 0,
	548, 549, 550, 623, 551, 624, 0, 552, 553, 554,
	555, 0, 557, 558, 0, 0, 559, 560, 561, 563,
	564, 562, 565, 0, 566, 0, 0, 567, 568, 569,
	625, 626, 627, 246, 571, 570, 572, 628, 0, 0,
	0, 0, 573, 574, 629, 575, 576, 577, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 579, 580,
	0, 268, 581, 269, 582, 0, 583, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 584, 585, 586,
	0, 277, 278, 587, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	588, 589, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 590, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 591,
	592, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 593, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 594, 595, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 596, 0, 597, 353, 0,
	354, 355, 356, 357, 358, 598, 599, 600, 434, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 367, 369, 0, 0, 368, 601, 602,
	0, 603, 0, 370, 371, 0, 604, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 605, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	401, 397, 399, 400, 402, 415, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 417, 0,
	416, 0, 418, 419, 420, 425, 427, 428, 423, 424,
	426, 429, 430, 422, 0, 421, 0, 0, 0, 431,
	432, 0, 606, 433, 607, 435, 436, 0, 0, 437,
	0, 0, 0, 439, 440, 441, 0, 0, 442, 443,
	608, 0, 444, 0, 609, 445, 446, 438, 447, 448,
	449, 450, 451, 452, 453, 454, 0, 455, 456, 610,
	457, 458, 459, 611, 460, 461, 462, 612, 463, 613,
	464, 465, 0, 466, 0, 467, 468, 469, 470, 471,
	472, 473, 614, 1131, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 615, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 516, 499, 500, 517, 518,
	0, 519, 520, 521, 522, 523, 524, 616, 0, 525,
	0, 526, 527, 528, 529, 501, 530, 535, 617, 531,
	532, 533, 534, 618, 0, 537, 538, 0, 536, 0,
	539, 540, 541, 542, 543, 544, 545, 331, 546, 0,
	547, 619, 620, 621, 622, 0, 556, 0, 548, 549,
	550, 623, 551, 624, 0, 552, 553, 554, 555, 0,
	557, 558, 0, 0, 559, 560, 561, 563, 564, 562,
	565, 0, 566, 0, 0, 567, 568, 569, 625, 626,
	627, 246, 571, 570, 572, 628, 0, 0, 0, 0,
	573, 574, 629, 575, 576, 577, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 579, 580, 0, 268,
	581, 269, 582, 0, 583, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 584, 585, 586, 0, 277,
	278, 587, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 588, 589,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 590, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 591, 592, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 593,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 594, 595, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 596, 0, 597, 0, 0, 354, 355,
	356, 357, 358, 598, 599, 600, 434, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 367, 369, 0, 0, 368, 601, 602, 0, 603,
	0, 370, 371, 0, 604, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 605, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 401, 397,
	399, 400, 402, 415, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 417, 0, 416, 0,
	418, 419, 420, 425, 427, 428, 423, 424, 426, 429,
	430, 422, 0, 421, 0, 0, 0, 431, 432, 0,
	606, 433, 607, 435, 436, 0, 0, 437, 0, 0,
	0, 439, 440, 441, 0, 0, 442, 443, 608, 0,
	444, 0, 609, 445, 446, 438, 447, 448, 0, 450,
	451, 452, 453, 454, 0, 455, 456, 610, 457, 458,
	459, 611, 460, 461, 462, 612, 463, 613, 464, 465,
	0, 466, 0, 467, 468, 469, 470, 0, 472, 473,
	614, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	615, 0, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 516, 499, 500, 517, 518, 0, 519,
	520, 521, 522, 523, 524, 616, 0, 525, 0, 526,
	527, 528, 529, 501, 530, 535, 617, 531, 532, 533,
	534, 618, 0, 537, 538, 0, 536, 0, 539, 540,
	541, 542, 543, 544, 545, 331, 546, 0, 547, 619,
	620, 621, 622, 0, 556, 0, 548, 549, 550, 623,
	551, 624, 0, 552, 553, 554, 555, 0, 557, 558,
	0, 0, 559, 560, 561, 563, 564, 562, 565, 0,
	566, 0, 0, 567, 568, 569, 625, 626, 627, 0,
	571, 570, 572, 628, 0, 0, 0, 0, 573, 574,
	629, 575, 576, 577, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1706, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1706, 1677, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 1697, 0,
	0, 0, 1724, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710, 1718,
	1719, 1720, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 0, 1711, 1706, 0, 1697, 0,
	0, 0, 0, 1678, 0, 0, 0, 1694, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1677, 1700, 1701,
	1702, 1703, 0, 0, 0, 0, 0, 1697, 1683, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 1701,
	1702, 1703, 0, 1715, 0, 0, 1725, 0, 1683, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 0, 1715, 0, 0, 1725, 1700, 1701, 1702,
	1703, 0, 1705, 1707, 0, 0, 1713, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1698, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 1725, 1713, 0, 0, 0,
	0, 1705, 1707, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 1723, 0, 0, 0, 0, 0, 1721, 0,
	1722, 0, 0, 0, 0, 0, 0, 1692, 1693, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1675, 1676, 1699, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 1706,
	0, 0, 0, 0, 1716, 0, 1678, 1704, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 1716, 0, 0, 0, 0, 0, 1694,
	1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717, 1695,
	1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 2971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717, 1695,
	1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 2354,
	1700, 1701, 1702, 1703, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 1689, 1690, 1696, 1717, 1695, 1691,
	0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685,
	0, 0, 0, 0, 4205, 1715, 0, 0, 1725, 0,
	0, 0, 0, 0, 1705, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 1722, 0, 0, 0, 0, 0, 0,
	1692, 1693, 0, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 0, 1698, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 1712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	1704, 0, 0, 0, 0, 1678, 0, 0, 0, 1700,
	1701, 1702, 1703, 1724, 0, 0, 0, 0, 0, 1683,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 1697,
	0, 0, 0, 0, 1715, 0, 0, 1725, 1694, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 1714, 0, 0, 0, 0, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 1723, 0, 0, 0, 4105, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 1725, 0, 0,
	0, 1712, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1706, 0, 1704,
	0, 1698, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 1723, 0, 1716, 0, 0, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 1701,
	1702, 1703, 0, 0, 0, 0, 0, 0, 1683, 1699,
	0, 1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 1716, 4104, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 1725, 0, 0, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 1675, 1676, 0,
	1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1711,
	1706, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 1714, 0, 0, 0, 1724, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 1723, 0, 0, 0, 3995, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1706, 1704, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 1699, 0,
	0, 1700, 1701, 1702, 1703, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 1725,
	0, 0, 0, 0, 0, 1705, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 1701,
	1702, 1703, 0, 1698, 0, 0, 0, 0, 1683, 0,
	1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717, 1695,
	1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 0, 0, 0, 0, 3944, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 1723, 1725, 0, 0, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	1698, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 1704, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 1716, 1694, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 1699, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 1716, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 1715, 0, 0, 1725, 3800, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 0, 0, 0, 0, 0, 1675, 1676, 0,
	1708, 1709, 1710, 1718, 1719, 1720, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1711,
	1706, 1698, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717, 1695,
	1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 1677, 0, 1723, 0, 3743, 0, 0, 0, 0,
	0, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 1711, 1706, 0, 0, 0, 0, 0, 0,
	1678, 1700, 1701, 1702, 1703, 0, 0, 0, 1724, 1699,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 1715, 0, 0, 1725,
	0, 0, 0, 1694, 0, 1705, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	0, 1714, 0, 0, 1683, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 1723, 3742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 1712, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 1722, 0, 0,
	0, 0, 0, 0, 1692, 1693, 0, 0, 0, 0,
	0, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 1711, 1706, 0, 1698, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 1716, 1723, 0,
	0, 0, 0, 0, 0, 1697, 0, 0, 0, 0,
	0, 0, 0, 0, 1694, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 1701, 1702, 1703, 0,
	0, 0, 0, 1714, 1699, 1683, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 3741, 0,
	1716, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720,
	1715, 0, 0, 1725, 0, 0, 0, 0, 0, 1705,
	1707, 0, 0, 1711, 1706, 0, 0, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 1721, 0, 1722, 1724,
	0, 0, 0, 0, 0, 1692, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 1698, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 1723,
	0, 3435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 1701, 1702, 1703, 0,
	0, 0, 0, 0, 0, 1683, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 1706,
	0, 0, 0, 0, 0, 1704, 1678, 0, 0, 0,
	1715, 0, 0, 1725, 1724, 0, 0, 0, 0, 1705,
	1707, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 1722, 0,
	1677, 0, 0, 0, 0, 1692, 1693, 0, 0, 0,
	1697, 1716, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 1713, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	1700, 1701, 1702, 1703, 0, 0, 0, 1712, 0, 1697,
	1683, 0, 0, 0, 0, 0, 0, 1714, 1694, 0,
	0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688,
	1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0,
	0, 0, 2969, 0, 0, 1715, 0, 0, 1725, 0,
	0, 0, 0, 0, 1705, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 1721, 0, 1722, 0, 0, 0, 0, 0, 0,
	1692, 1693, 0, 0, 0, 1699, 0, 0, 0, 1700,
	1701, 1702, 1703, 0, 0, 0, 0, 0, 1713, 1683,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	0, 1716, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1706, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 1715, 0, 0, 1725, 1724, 0,
	0, 0, 0, 1705, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 1677, 0, 0, 0, 0, 1692,
	1693, 0, 1712, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688,
	1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0,
	1704, 0, 2968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	0, 1712, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720, 1715,
	0, 0, 1725, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 1711, 1706, 0, 0, 0, 0, 0, 1704,
	1678, 0, 0, 0, 0, 1721, 0, 1722, 1724, 0,
	0, 0, 0, 0, 1692, 1693, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1716, 1698, 0, 0, 0,
	0, 0, 1714, 1694, 0, 0, 0, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 0, 0, 0, 0, 2967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	0, 0, 0, 0, 1683, 4334, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 1704, 0, 2966, 0, 0, 1715,
	0, 0, 1725, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 1722, 0, 0,
	0, 0, 0, 0, 1692, 1693, 0, 0, 0, 0,
	1716, 1675, 1676, 0, 1708, 1709, 1710, 1718, 1719, 1720,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1711, 1706, 0, 1698, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 1723, 0,
	0, 0, 0, 0, 0, 1697, 0, 0, 0, 0,
	0, 0, 0, 0, 1694, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 4333, 2933,
	0, 0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 1711, 1706, 0, 0,
	0, 0, 2904, 0, 1678, 1700, 1701, 1702, 1703, 0,
	0, 0, 1724, 0, 1699, 1683, 0, 3053, 0, 0,
	3052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	1715, 0, 0, 1725, 0, 0, 0, 1694, 0, 1705,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 1722, 0,
	0, 0, 0, 0, 0, 1692, 1693, 0, 0, 0,
	0, 0, 0, 2905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 1701,
	1702, 1703, 0, 0, 0, 0, 1714, 0, 1683, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 1725, 1712, 0, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 2498, 0,
	1698, 0, 0, 0, 0, 1675, 1676, 0, 1708, 1709,
	1710, 1718, 1719, 1720, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1706, 0,
	0, 0, 2497, 0, 0, 1678, 0, 0, 0, 0,
	0, 1716, 1723, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 1675, 1676, 0, 1708, 1709, 1710,
	1718, 1719, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 1706, 1704, 0,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 1714, 1699, 0,
	0, 0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688,
	1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 1677, 1700,
	1701, 1702, 1703, 0, 1716, 0, 0, 0, 1697, 1683,
	0, 0, 0, 0, 0, 0, 0, 1694, 1675, 1676,
	0, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1706, 0, 0, 1715, 0, 0, 1725, 1678, 0,
	0, 0, 0, 1705, 1707, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 1722, 0, 0, 0, 0, 0, 0, 1692,
	1693, 0, 1677, 0, 0, 0, 0, 0, 1700, 1701,
	1702, 1703, 1697, 0, 0, 0, 0, 1713, 1683, 0,
	1714, 1694, 0, 0, 0, 1689, 1690, 1696, 1717, 1695,
	1691, 1698, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 1725, 0, 0, 0,
	0, 0, 1705, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 1721,
	0, 1722, 0, 0, 0, 0, 0, 0, 1692, 1693,
	0, 1712, 1700, 1701, 1702, 1703, 0, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	1725, 0, 0, 0, 0, 0, 1705, 1707, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 1721, 0, 1722, 0, 0, 0, 1699,
	0, 0, 1692, 1693, 0, 0, 0, 0, 0, 0,
	1712, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 1675, 1676, 1698, 1708, 1709, 1710, 1718, 1719,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 1706, 0, 0, 0, 0,
	0, 0, 1678, 0, 0, 0, 0, 0, 1704, 0,
	1724, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 1712, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 1716, 1694, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717,
	1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682,
	1684, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 1701, 1702, 1703,
	0, 0, 0, 0, 0, 0, 1683, 0, 1716, 0,
	0, 3059, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 1689, 1690, 1696, 1717, 1695,
	1691, 0, 1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684,
	1685, 1715, 0, 0, 1725, 0, 0, 3416, 0, 0,
	1705, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	0, 0, 0, 0, 0, 0, 1692, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 1698, 1689,
	1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679,
	1680, 1681, 1682, 1684, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 1676, 0,
	1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0,
	1723, 0, 0, 0, 0, 0, 0, 0, 0, 1711,
	1706, 0, 0, 0, 3054, 0, 0, 1678, 1712, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1675,
	1676, 1677, 1708, 1709, 1710, 1718, 1719, 1720, 0, 0,
	0, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 1711, 1706, 0, 0, 0, 1704, 0, 0, 1678,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 1701, 1702, 1703, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 1725,
	0, 0, 0, 0, 0, 1705, 1707, 0, 0, 0,
	0, 0, 0, 1700, 1701, 1702, 1703, 0, 0, 0,
	0, 0, 1721, 1683, 1722, 0, 0, 0, 1714, 0,
	0, 1692, 1693, 1689, 1690, 1696, 1717, 1695, 1691, 0,
	1688, 1686, 1687, 1679, 1680, 1681, 1682, 1684, 1685, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 1725, 0, 1698, 0, 0, 0, 1705, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1722, 0, 0, 0,
	0, 0, 0, 1692, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 3021, 0, 1675, 1676, 0,
	1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 1711,
	1706, 0, 0, 0, 2970, 0, 0, 1678, 0, 0,
	0, 0, 0, 1704, 0, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 0, 0, 0, 0, 0, 0, 0, 1716,
	1694, 0, 0, 0, 0, 0, 1675, 1676, 0, 1708,
	1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 1706,
	0, 0, 0, 1714, 0, 0, 1678, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 1724, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 1700, 1701, 1702, 1703, 0, 0, 0, 0, 0,
	1697, 1683, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686, 1687,
	1679, 1680, 1681, 1682, 1684, 1685, 1715, 0, 0, 1725,
	0, 0, 0, 0, 0, 1705, 1707, 1675, 1676, 0,
	1708, 1709, 1710, 1718, 1719, 1720, 0, 0, 0, 0,
	0, 0, 1721, 0, 1722, 881, 0, 924, 0, 1711,
	1706, 1692, 1693, 0, 0, 0, 0, 1678, 0, 0,
	1700, 1701, 1702, 1703, 0, 1724, 0, 0, 0, 1713,
	1683, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 903, 887, 886,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 0, 0, 0, 1715, 0, 0, 1725, 0,
	1694, 0, 0, 0, 1705, 1707, 888, 0, 0, 0,
	0, 891, 0, 0, 0, 1723, 932, 0, 0, 0,
	0, 1721, 0, 1722, 0, 900, 901, 0, 0, 0,
	1692, 1693, 0, 1712, 917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	925, 893, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 1676, 1698, 1708, 1709, 1710, 1718, 1719, 1720, 0,
	0, 1700, 1701, 1702, 1703, 0, 0, 894, 0, 0,
	0, 1683, 0, 1706, 0, 0, 923, 0, 0, 0,
	1678, 1704, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 1715, 0, 0, 1725,
	0, 0, 1712, 0, 1677, 1705, 1707, 0, 896, 0,
	0, 0, 0, 0, 1697, 0, 885, 1716, 0, 0,
	0, 0, 1721, 1694, 1722, 0, 0, 0, 0, 0,
	0, 1692, 1693, 0, 897, 898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 905, 904, 0, 0, 0, 0, 0,
	1704, 899, 0, 1698, 0, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 0, 0,
	0, 0, 0, 0, 1683, 1723, 1716, 0, 0, 0,
	0, 0, 0, 1714, 926, 0, 0, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 0, 0, 0, 0, 0, 1715,
	0, 0, 1725, 0, 0, 0, 0, 0, 1705, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 931, 0,
	0, 0, 0, 0, 1692, 1693, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 1713, 921, 922, 0, 0, 0, 0, 0,
	0, 1699, 1714, 0, 0, 0, 1698, 1689, 1690, 1696,
	1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680, 1681,
	1682, 1684, 1685, 919, 0, 0, 0, 1716, 0, 0,
	930, 915, 0, 908, 906, 0, 911, 0, 0, 0,
	0, 0, 912, 0, 0, 883, 0, 927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 916, 0, 0, 0, 0, 0, 0,
	0, 0, 895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 1704, 0, 918, 0, 1689, 1690,
	1696, 1717, 1695, 1691, 0, 1688, 1686, 1687, 1679, 1680,
	1681, 1682, 1684, 1685, 1699, 0, 0, 0, 0, 920,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	0, 1689, 1690, 1696, 1717, 1695, 1691, 0, 1688, 1686,
	1687, 1679, 1680, 1681, 1682, 1684, 1685,
}
var sqlPact = [...]int{

	8262, -1000, -1000, -1000, -1000, 183, -1000, -1000, 181, 175,
	172, 170, 167, 166, 164, 162, 161, -1000, -1000, -1000,
	-1000, -1000, -1000, 160, -1000, -1000, 156, -1000, 155, 151,
	150, -1000, -1000, 149, -1000, 147, -1000, -1000, -1000, -1000,
	144, 140, 138, 82365, 81840, 82883, 2083, 101161, 89127, 1978,
	73468, 100636, 72943, 100111, 99586, 2563, 136, -1000, 99061, 135,
	134, 132, -1000, 98536, -1000, 1919, -1000, 131, 2085, 59794,
	130, 125, 122, 2827, 120, -1000, 119, 114, 112, -1000,
	11215, 1507, -1000, 111, 110, -1000, 9864, 1055, 87034, 107,
	105, 2147, 104, 103, 59268, 102, 101, 2104, 2701, -1000,
	-1000, 1915, -1000, -1000, 100, 99, 96, 95, 94, 90,
	89, 88, 87, 86, 85, -1000, 81, 80, 79, 78,
	77, 76, 71, 70, -1000, 69, 68, 67, 63, 62,
	61, 59, 55, 54, 51, 50, 49, 48, -1000, 112963,
	-1000, 1786, 1611, 1604, 1600, 1599, 1595, 944, 46, 45,
	44, 37, 36, 35, 34, 32, 26, -1000, 25, 24,
	23, 22, 21, 20, 19, 13, 168, 12, 11, 9,
	7, 6, 5, -3, 2117, -1000, 1692, 1325, 27158, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 106859, 101679, -6,
	-172, -7, -1000, 3140, 981, 49276, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 265, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 456, 1819, 696, -1000, -1000, -1000, 98018, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2082, -41, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 692, -1000, 2081, 275,
	1972, -1000, -1000, -1000, -1000, -1000, 101679, -1000, 976, -1000,
	-1000, 3568, 3567, 1924, 686, 88602, -1000, 2029, -1000, 883,
	28808, -1000, 1252, -1000, 28808, 263, -1000, -1000, -1000, -1000,
	-1000, -1000, 3566, 3565, 3564, 3560, 3557, -1000, -1000, 72418,
	20506, 71893, 71368, 97500, 19971, 81315, 80790, 96975, 67185, 975,
	-1000, -1000, -1000, 1349, -1000, -1000, -1000, -1000, -1000, -1000,
	-26, 64510, 3300, 101679, -1000, 261, -1000, -1000, -1000, -1000,
	-1000, -1000, 41674, 775, 41112, 1059, 40550, 774, -1000, -1000,
	-1000, -1000, 66650, -1000, 96450, 2280, 3553, 3551, 1074, 3550,
	3061, 1710, 3549, 1737, 1174, 3548, 3547, 3546, 3545, 3543,
	3542, 3540, 1367, 95925, 2819, 95400, 1606, 66115, 971, 80265,
	82883, 2478, 94875, 1324, 1311, -1000, -1000, -1000, -1000, 2941,
	2699, 2672, 1262, -1000, -1000, 2273, 3539, 3537, 3536, 3534,
	3533, 106341, 1695, 3532, 2353, 3531, 3530, 3528, 3527, 3526,
	3524, 3521, -1000, 79740, 969, 79215, 78690, 3186, 94350, 78165,
	93825, 65580, 39988, 1073, -1000, -1000, -1000, 51914, 7601, 6687,
	93300, 54046, 82883, 82883, -1000, -1000, -1000, -1000, -1000, 39426,
	770, 38864, 1069, -1000, -1000, 52447, 2759, -1000, -1000, -1000,
	-1000, 38302, 736, 37740, 1057, 101679, -1000, 2816, 1818, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2177, 1569, 3339, 2546, 65045, 1946, 1356,
	3120, 2929, 2926, 1441, 3520, 3519, 2378, 2921, 2905, 2904,
	2899, 2886, 1458, 2407, 447, 26596, 2805, 1586, 37178, 1498,
	1435, 2877, 2843, 3340, 1776, 1849, 2135, 70843, 3517, 3515,
	3085, 2839, 2828, 2744, -1000, -1000, -1000, -1000, 1375, -1000,
	-1000, -1000, -1000, 73986, -1000, -1000, 1258, -1000, -1000, 1258,
	-1000, -1000, -1000, -1000, -1000, 1264, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1692, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2178, -1000,
	1911, -1000, -1000, 2252, 3104, 3104, 3104, 3145, 426, 417,
	-1000, 168, -1000, -1000, 112815, -1000, -1000, 42224, 42224, 42224,
	42224, 42224, 42224, 42224, 1855, -1000, 681, -1000, -1000, 756,
	-1000, 678, 549, -1000, -1000, -1000, -1000, -1000, -1000, 677,
	-1000, -1000, -1000, -1000, -1000, -1000, 3300, -1000, 23236, -1000,
	-1000, -1000, 454, 675, 42224, -1000, -1000, 3362, 3361, 970,
	-1000, 258, 890, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2811, 673, 672, -1000, 671,
	664, 661, 660, 659, -1000, -1000, -1000, 657, 655, 654,
	653, 650, 649, 648, 647, -1000, 1791, -1000, -1000, -1000,
	-1000, -1000, -1000, 604, 603, 603, 603, -1000, 965, -1000,
	-1000, -1000, 284, 590, 243, 589, 588, 587, -1000, 643,
	642, 639, 637, 635, 631, 626, 622, 621, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 964, -1000, -1000, -1000, -1000,
	-27, 101679, -1000, 456, -27, -1000, -1000, 619, -1000, 31020,
	31020, 31020, -1000, -1000, 2080, 42224, -1000, 2910, -1000, -21,
	-21, 817, 50847, -1000, 48209, 817, 270, 763, 55617, -1000,
	2740, -1000, -1000, 618, 245, -1000, -1000, -1000, -1000, 21039,
	2728, 101679, 101679, 82883, 82883, 82883, 3002, 42224, -1000, -1000,
	62403, 101679, 83401, 3258, 60312, 61880, 101679, 2809, -1000, 3092,
	-1000, -1000, 101679, -1000, 42224, -1000, 3257, 2003, 68241, 3188,
	-37, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2327, 2386,
	1046, 2115, -1000, 3017, 1640, -1000, 28808, 3050, -1000, -1000,
	-1000, 218, 21039, -1000, -1000, -1000, -1000, -1000, -1000, 3147,
	2979, 1371, -1000, 2114, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1608, 2978, -1000, 2488, 2977, 1590, -1000,
	-1000, 2122, -1000, -1000, 3076, -1000, -1000, 2095, 2976, -20,
	-1000, -1000, 2084, -1000, -1000, 1816, -1000, -1000, 923, 2975,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 77640,
	53513, 52447, 64510, -32, -1000, -1000, -1000, -1000, -84, -1000,
	19436, 112815, -1000, -1000, -1000, -1000, 1655, 112815, 856, -1000,
	-1000, 2965, -1000, 112815, 835, -1000, -1000, 2964, -1000, 2808,
	-1000, -1000, 2235, -1000, -1000, 3514, -1000, -1000, 3513, -1000,
	3511, 3509, 3508, -1000, 1585, 1802, 3507, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 77122, 2076, -1000, -1000, 76072,
	-1000, 2233, 3185, -1000, -1000, -1000, 76597, 968, -1000, 923,
	2227, -1000, 86509, 952, -1000, 3506, 3182, 2514, 923, 2224,
	-1000, -1000, -1000, -1000, -1000, 928, -1000, 57182, -1000, 57182,
	-1000, 1510, -1000, 105823, -21, 82883, 3300, -1000, 3504, -1000,
	-1000, -1000, -1000, -1000, 2963, 3502, 3501, 3500, -1000, 101679,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 200, 2962, -1000,
	-1000, 85991, 200, 2959, -1000, 200, 2956, -1000, 85473, -1000,
	-1000, 2097, 2955, -1000, 204, 2954, -1000, -1000, 203, 2951,
	-1000, -137, 2950, -1000, -1000, 112815, -1000, -1000, -1000, -40,
	-1000, -1000, -1000, 981, -1000, 51373, -1000, 51373, 88077, 67718,
	914, 701, 58742, 112815, -1000, -1000, -1000, -1000, 112815, -1000,
	-1000, -1000, -270, 2543, -1000, 67718, 52447, 112815, -1000, -1000,
	-1000, -1000, 112815, -1000, -1000, -1000, 67718, 76072, -1000, 92775,
	75554, -1000, -1000, 1362, 2381, -1000, -1000, -1000, 67718, 1212,
	67718, 67718, 67718, -1000, 92250, -1000, -1000, 1955, 1409, 3089,
	1914, 82883, -1000, 1716, -1000, -1000, -1000, 3111, -1000, -1000,
	2807, -1000, 61357, 84955, -1000, 84437, -1000, 83919, -1000, 82883,
	-1000, 82883, -1000, 3498, 3495, 3494, 3493, -1000, 3490, 3103,
	-1000, 112815, 3099, -1000, 3489, 3178, 2805, 112815, -1000, 2943,
	1582, 1577, 101679, -1000, -1000, 101679, -1000, 101679, -1000, -1000,
	-1000, 1411, -1000, -1000, 2320, -1000, -1000, -1000, -1000, 82883,
	-1000, -1000, -1000, -1000, -1000, -1000, 2804, -1000, 1593, -1000,
	1708, -1000, 1359, -1000, -1000, 205, -1000, -1000, -37, -1000,
	105305, -1000, 2252, -1000, 101679, -1000, 2258, 2771, 2791, 1545,
	2092, 2415, -1000, 36616, 2383, 45524, 2111, 168, -1000, -1000,
	168, 168, 28258, -1000, -1000, 60312, 60312, 21039, 1284, 42224,
	42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224,
	42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224,
	42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224, 42224,
	42224, 42224, 42224, 42224, 2515, 42224, 1255, 42224, 42224, 42224,
	42224, 1771, -1000, -1000, 1800, 501, 1866, -1000, 3299, 3299,
	3299, 605, 605, 10774, 10774, 578, 3487, 756, -1000, 42224,
	-1000, 109, 42224, 21574, -1000, 417, 10401, 2187, -1000, 416,
	22136, -1000, -1000, -1000, 23236, 549, 36054, 42224, 956, 112815,
	-1000, -1000, 1461, 3316, 18902, 2831, 2600, 616, 854, 808,
	26034, 25472, 24910, 24348, 771, 42224, 42224, 42224, 42224, 42224,
	42224, 42224, 42224, -1000, -1000, 3332, -1000, 3316, -1000, -1000,
	-1000, -1000, 3316, 1280, 1277, 3316, -1000, 3316, 3316, 8960,
	8960, 35504, 34942, 34380, 46074, 33818, 42224, 23786, 33256, 32694,
	-1000, 101679, -27, 3255, 42224, 180, -1000, 111584, -1000, 180,
	180, 615, -42, 112815, 2443, 2443, 49800, 1991, 1873, 1873,
	1873, -1000, 817, 14601, 817, 91209, 1904, 817, 817, 199,
	272, 414, 47685, 2910, 91209, 741, 614, -8, -9, -10,
	-1000, -1000, -11, -17, -1000, -1000, 82883, 610, 21574, 21039,
	198, 1384, -51, 2433, 2430, 2429, -1000, 2422, 1689, -52,
	1253, 82883, 101679, -92, -1000, 5073, -59, -1000, 1259, 197,
	3316, -1000, -1000, -1000, -1000, -1000, 3486, 3485, -1000, 955,
	607, 606, 407, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 604, 603, 603, 603, -1000, 284, 590, 243, 589,
	588, 587, -1000, -1000, -1000, -1000, -1000, 2724, 82883, 101679,
	-84, 83401, 82883, 832, -60, 1087, -37, -1000, -1000, -1000,
	1258, -1000, 1847, -1000, -1000, -1000, -1000, -1000, -1000, 1352,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 970, -1000,
	-1000, -1000, -1000, -1000, -1000, 3328, 3325, -29, -1000, -1000,
	21039, -1000, -43, 1676, 1634, -1000, 70318, 2325, 3083, 3484,
	2496, 3070, 1503, -1000, 1392, 1251, 3144, 73986, 3206, 3220,
	1011, -1000, 2720, -1000, -1000, 877, 1592, 1626, 1239, 73986,
	2488, -1000, 60312, -1000, 2495, 3143, 1337, 1332, 1337, 1337,
	1350, -1000, 73986, 1625, 1229, 1189, -1000, 1188, 1186, -1000,
	-54, 3205, 3201, 896, -1000, 2710, 1183, -1000, -1000, 82883,
	21039, 1484, 1470, 1620, 1182, -31, -1000, 3198, 3191, 1176,
	1165, -1000, 5346, -1000, 67718, 1576, 2948, 2540, 779, 2538,
	-1000, -1000, -1000, 779, -32, 64510, 101679, 195, -1000, 109,
	42224, 42224, 109, 42224, 109, 3175, 2947, -1000, -1000, -1000,
	-1000, -1000, 3483, 1773, 2347, -1000, -1000, 586, 2211, 2709,
	101679, 2449, -33, 82883, -1000, 2946, 62926, 2488, 2210, -1000,
	-1000, 75029, -1000, 2944, 456, 2203, -1000, 676, 3482, -1000,
	104787, -1000, 3092, 1301, 2932, 1020, 911, 3254, -1000, 911,
	57706, -1000, 101679, -1000, -21, -1000, 101679, -1000, -1000, -1000,
	3481, -1000, 82883, -1000, -1000, 82883, 200, 2931, -1000, 82883,
	-1000, 82883, 191, 2928, -1000, -1000, 101679, -1000, 82883, 82883,
	-1000, 101679, 67718, 67718, 6271, 69282, -65, -66, 411, -1000,
	91732, 101679, 1019, 69800, 101679, 3040, 921, 52447, -1000, 52447,
	-71, -270, 2535, 914, 914, 779, -1000, 779, -1000, 82883,
	2787, -1000, -1000, 67718, 914, 914, 914, -1000, -1000, -1000,
	-1000, 3480, 3479, 3478, -1000, -1000, -1000, 922, 82883, 101679,
	82883, -1000, -1000, 101679, -1000, 101679, 101679, 82883, -1000, 922,
	101679, 922, 101679, 922, 101679, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 109, 42224, -1000, -1000, 3477, 1534, -1000, 2783,
	-1000, 2774, -1000, 18, -1000, -1000, -1000, -1000, -1000, 1982,
	82883, 82883, 82883, 82883, 101679, 82883, -1000, 73986, -1000, 2258,
	2771, -1000, -1000, -1000, -1000, -1000, -1000, 1553, 1994, -1000,
	2389, -1000, 1454, -1000, -1000, -1000, 112815, 46607, -1000, -1000,
	112815, 1704, -1000, 44974, 44424, -1000, -1000, 1574, 82883, 2459,
	-1000, 2459, -162, -1000, 111313, 2380, 82883, -1000, -1000, -1000,
	-1000, -1000, 874, 794, 794, 1237, 1237, 1237, 1237, 3203,
	953, 497, 487, 4575, 4575, 297, 297, 297, 297, 297,
	4575, 848, 605, 605, 848, 848, 848, 848, 848, 605,
	605, 605, 4575, 4575, 4575, 10774, 112936, 9122, 42224, 42224,
	1164, 1799, 501, 8829, 42224, 9416, 9416, 9416, 9416, -1000,
	1785, -1000, -1000, -1000, -1000, 2707, 583, 46074, 46074, -1000,
	-1000, -1000, -1000, 22686, 42224, -1000, -1000, -1000, -1000, 32132,
	-1000, -1000, 110759, -319, 408, -161, 14, -1000, 42224, 42224,
	42224, 401, -1000, 193, 42224, 101679, -1000, 107943, 738, -198,
	-1000, -72, 1346, -1000, 42224, -1000, -1000, 1161, -1000, 1160,
	1157, 1152, -1000, 582, 400, -1000, 190, -1000, 1893, 569,
	566, 42224, -1000, -1000, -1000, -1000, -1000, 110594, -1000, -1000,
	110505, -1000, -1000, 110340, -1000, -1000, 110150, -1000, -1000, -1000,
	112726, 107903, 13977, 13604, 7254, 13165, 13045, -73, 399, -78,
	397, 871, 870, 396, 395, 393, -81, -1000, 3472, 3471,
	3470, -1000, 3469, 3467, 3466, -1000, 3465, 3463, 3461, -1000,
	3449, 3446, 3445, -1000, 3443, 3442, 3436, -1000, 3432, 3430,
	3425, -1000, 3424, 3423, 3422, -1000, 3420, 3418, 3417, -86,
	389, -1000, 2703, -161, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 387, -1000, 383, -1000, 112378, -161, 370, 4691,
	-1000, 46074, 46074, 46074, -1000, 360, -1000, 111190, -1000, 112316,
	31582, 31582, 31582, 358, 112021, 42224, -161, -95, -1000, -96,
	-1000, -1000, 484, -109, 946, 31020, 48750, 21039, -1000, 946,
	946, 42224, -1000, 42224, 2404, -1000, -1000, -1000, 2398, 1717,
	2443, 49800, -1000, -1000, -1000, -1000, 91209, -1000, 3300, 2788,
	-1000, 91209, -1000, -1000, 101679, 456, -1000, 91209, 91209, 21039,
	817, -1000, 817, 91209, 665, -1000, -1000, -1000, -1000, -1000,
	357, 54569, 14, 189, 21039, 923, -1000, 2442, 2442, 2442,
	2442, -1000, -1000, 101679, 1151, -34, -108, 3272, -1000, 1813,
	-1000, 60312, -1000, 751, 1050, 21039, -1000, -1000, -1000, 565,
	-1000, 3316, 3316, -1000, 3316, 101679, 2702, 124, 113, 945,
	28808, -1000, 1258, -1000, -1000, 1476, -1000, 1777, -1000, 1272,
	-1000, -1000, -1000, -1000, 28808, -1000, 4457, 101679, 101679, 82883,
	-1000, 101679, -1000, 2198, 104269, 2191, 60312, 101679, -1000, -1000,
	563, 562, 2376, 2374, 1014, 101679, 101679, 2370, 103751, 103233,
	-1000, 3416, 101679, 1848, 42224, 62926, 2055, 2287, 109, 109,
	-1000, -1000, 109, 561, 1247, 82883, 82883, 101679, 82883, 1573,
	-1000, -1000, -1000, -1000, -1000, 74504, -1000, -1000, 3330, 3323,
	-1000, 1337, -1000, -1000, -1000, 1337, 2488, 1554, 101679, 82883,
	62926, 1619, 101679, 1834, 109, 109, -1000, -1000, 109, 559,
	21039, 1792, -1000, 2781, 101679, 3360, 101679, 101679, 101679, 62926,
	3107, 102715, 101679, 101679, 62926, 5346, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 63992, 1030, 923,
	1616, 1149, 73986, 52447, 919, 52447, 2519, -1000, -1000, 18368,
	-1000, 112815, 112815, -1000, 112815, -1000, 60834, 101679, -1000, 957,
	101679, 69800, 892, 2927, 56658, -84, 914, 67718, 82883, -33,
	101679, -1000, -1000, -1000, -1000, -1000, 2488, 2925, 456, 2173,
	-1000, 67718, 3252, 2923, 558, 3412, 3408, -1000, 2074, 2170,
	-1000, -1000, 102197, 2930, 786, 101679, 946, 49800, 1796, -1000,
	55094, 996, 101679, 1719, 91, -1000, -1000, -1000, 2, 101679,
	-1000, 612, 3406, -1000, -1000, 200, -1000, 82883, 200, 200,
	-1000, 82883, 82883, 2097, -1000, 204, 203, -1000, -137, -1000,
	-1000, 6271, 6271, 914, -180, 556, -1000, 830, 828, 52980,
	67718, -114, -1000, -1000, -1000, -1000, -1000, 82883, 101679, 727,
	2503, 101679, -116, -1000, 187, 550, -1000, 2545, -1000, -270,
	-1000, 921, 52447, 2686, -1000, -1000, 943, -1000, 1354, 914,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-22, -84, -84, -84, -34, -1000, 922, -1000, 922, -1000,
	922, -1000, 112815, -1000, -1000, 1532, 1521, 101679, -1000, 21039,
	101679, 82883, 21039, 82883, 2769, 2764, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1052, -1000, 1704, 1981, -1000, 549,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2303,
	-1000, -36, 28258, 814, -1000, -1000, 82883, -23, 42224, 42224,
	8479, 7468, 42224, 46074, 46074, -1000, 42224, 7431, -1000, -1000,
	-1000, -1000, -1000, 2684, 538, 42224, 60312, 5300, 4603, -1000,
	356, 12471, 848, -1000, 42224, -1000, 354, 30470, -1000, 111673,
	-74, -122, -1000, 15148, -161, -123, -1000, -1000, 747, -1000,
	2988, -1000, 42224, 111757, 2271, 1892, 1686, 1548, 3316, 3356,
	17834, -1000, 58224, 950, 1909, 109909, -1000, -1000, -1000, -1000,
	60312, 60312, 42224, 42224, -1000, 42224, 42224, 42224, -1000, -1000,
	-1000, 3316, 843, -1000, -1000, -1000, 843, -1000, -1000, 1337,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1337, -1000, 42224, -1000, -1000,
	2682, 42224, -1000, 60312, 60312, 46074, 46074, 46074, 46074, 46074,
	46074, 46074, 46074, 46074, 46074, 46074, 46074, 46074, 46074, 46074,
	46074, 46074, 46074, 46074, 2305, 46074, 3292, 3292, 3292, -1000,
	2675, 2682, 42224, 42224, 60312, 353, 352, 349, -1000, 42224,
	-161, -1000, -1000, 6271, 537, -1000, 2291, -1000, 2598, -1000,
	42224, -1000, -254, -1000, 2910, -1000, -1000, 2598, 2598, -125,
	112815, 49800, 49800, -1000, 532, 42224, 2391, -1000, -1000, 735,
	-317, -1000, 825, -1000, -1000, -1000, -1000, -1000, 456, -1000,
	-1000, -1000, 186, 91209, 91209, 732, -1000, -130, -1000, -1000,
	-131, -1000, 3250, 348, 21039, -1000, 946, 3088, -1000, -1000,
	-1000, -1000, -1000, -1000, -84, 101679, 101679, 1969, 3353, -1000,
	3318, 744, 721, 185, 3316, 346, 345, 329, -84, 101679,
	101679, 101679, -1000, 2444, -1000, -37, -1000, -1000, -1000, 42224,
	-1000, -1000, 3082, 1141, 1139, -1000, -1000, 2920, -1000, 2168,
	-1000, 1001, -1000, 1570, -1000, 42224, 50324, 531, 530, 3402,
	1803, 3396, 1018, 2913, 2097, 2909, 2097, -1000, -1000, -1000,
	886, -1000, 112815, -1000, 528, 524, -1000, -43, 1547, 1610,
	931, -1000, -1000, 42224, 42224, 90691, -1000, 424, 3076, -24,
	-1000, -1000, 1598, 1136, -1000, -1000, -1000, -1000, 2488, 1587,
	1131, -1000, -1000, -1000, 929, -1000, -1000, 924, -1000, -1000,
	42224, -1000, -54, 1128, 3187, 2167, 82883, 1123, -1000, 1121,
	-1000, -1000, -1000, 3190, 2097, 2907, 1133, -1000, -1000, -1000,
	-1000, -1000, 63459, -1000, 101679, 82883, 1546, 779, -1000, 2152,
	779, 919, 2680, -1000, 2448, -1000, 82883, 3395, 328, -132,
	-61, 60312, 3249, -1000, 2000, 557, 82883, 878, -1000, 3300,
	-1000, -1000, -1000, -1000, 3184, 82883, 3245, 2896, 923, 109,
	82883, 3352, -1000, -1000, 82883, 2871, 2062, 2160, 2334, 786,
	68764, -1000, 923, 1908, -119, -1000, 1719, 29908, 3074, -138,
	-1000, -1000, -1000, 946, 57706, 49800, 42224, 3389, -140, -1000,
	-1000, -1000, -1000, 200, -1000, -1000, -1000, 191, -1000, -1000,
	-1000, -1000, -1000, -1000, 89650, 89650, 67718, 67718, 67718, 914,
	101679, 101679, 69800, -1000, 522, 101679, 101679, 521, -1000, 101679,
	101679, 3388, 67718, -83, 520, -1000, 819, 816, 815, -1000,
	-1000, -1000, -1000, -1000, 921, -1000, -270, 109, -1000, 1967,
	82883, -1000, 17300, -1000, -1000, -1000, -1000, -1000, 922, -1000,
	-1000, 1838, 2100, 1838, 1714, 1713, -1000, 1980, -1000, -1000,
	-1000, -1000, 2445, 3100, 21039, 3214, 9416, 42224, 42224, 6462,
	2342, 1906, 9416, 42224, 42224, 60312, 113079, -143, 42224, 42224,
	-1000, 42224, 719, 112815, 3349, 42224, 324, 322, -1000, -1000,
	-1000, 3304, -1000, -1000, -1000, 112815, 42224, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 318, -1000, 169, -1000, -1000, -1000,
	107377, -1000, 42224, 317, 3142, -1000, 316, 314, 11877, 241,
	109786, 109544, 109303, 313, -1000, -1000, 310, 309, 112815, 2675,
	112815, -1000, -1000, 999, 999, 1296, 1296, 1296, 1296, 3292,
	580, 730, 344, 1983, 1983, 1983, 913, 1101, 1101, 1983,
	1983, 1983, 2679, 2270, 519, 5793, -1000, -1000, 112815, 112815,
	306, -1000, -1000, -1000, -161, 302, 6271, -1000, 2591, 3138,
	112815, -1000, 49800, 2591, 2591, -1000, -1000, 1717, 101679, 112815,
	49800, -1000, 2788, -1000, 15693, -1000, 21039, -1000, -1000, -1000,
	-1000, 3300, -1000, 54569, -1000, 518, -1000, 92, -1000, 3088,
	-1000, 813, -1000, -84, -84, -1000, -1000, 717, 3384, 743,
	21039, 300, -1000, -1000, -1000, -84, -84, -84, -1000, 3039,
	112815, 101679, 101679, 101679, 2867, -1000, 2116, -1000, 1014, 109196,
	-151, -1000, 101679, 42224, 101679, 50324, 101679, -1000, -1000, 1783,
	2377, 1072, -1000, 3113, 101679, -1000, 101679, -1000, -1000, 101679,
	101679, 82883, 101679, 2851, -169, 112815, -91, -1000, 811, -1000,
	1320, -1000, 16766, 101679, 82883, 101679, 82883, 1874, 2850, -175,
	21039, -1000, 3348, 3346, 2863, 3117, 3345, 101679, -1000, 101679,
	82883, 3038, -1000, -1000, -1000, -1000, 1563, 1119, 919, -93,
	516, -1000, 809, -1000, -1000, 802, 919, -1000, 67718, 52447,
	456, -1000, 2494, -1000, 87552, 2072, 109, -1000, 3381, 90173,
	515, -1000, 1963, -1000, 711, 62926, 2488, 109, 82883, -1000,
	-1000, 456, 299, -98, -1000, 1007, 21039, 82883, 2862, 2338,
	786, 68764, -1000, 1301, 2415, -1000, -110, -1000, 553, 109,
	1908, -1000, -119, 112815, -1000, 800, -1000, -1000, -1000, -177,
	-1000, -1000, 296, -1000, 3037, 3035, -1000, 2599, 50324, 513,
	512, 101679, 3033, -1000, -1000, -182, 2605, 2605, 67718, 52447,
	67718, -1000, 921, -1000, 2308, -1000, -1000, -1000, -1000, -1000,
	21039, 1580, -1000, 511, 509, -1000, -1000, -1000, -1000, 3100,
	9416, 9416, 42224, 42224, 42224, 9416, 113079, -183, -1000, 9416,
	9416, -161, -1000, -1000, 111673, -1000, -1000, -1000, 112815, -1000,
	16232, 1850, -1000, 108943, -1000, 28258, -1000, -1000, 42224, 42224,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46074, 2678,
	508, 60312, -1000, -1000, 281, 947, 42224, 43874, 2910, 947,
	947, -1000, -185, -1000, -1000, -1000, 3300, 92, -1000, -1000,
	3380, 21039, -1000, 67718, 731, -1000, 3379, -1000, -1000, -1000,
	-1000, -1000, -1000, 101679, -1000, 101679, -1000, 21039, 101679, 2674,
	2132, -1000, -1000, 2367, 505, 46074, 82883, 853, -1000, 3222,
	2594, 1746, 50324, -1000, 3100, -1000, 108704, -1000, -192, -193,
	2121, -1000, -1000, 2099, 42224, -1000, 60312, 504, 2097, 2097,
	-195, -201, -1000, -1000, 42224, 1118, 101679, 29358, -1000, 3378,
	3076, -1000, -1000, -1000, -1000, 101679, 42224, 1107, -1000, -1000,
	-1000, 3344, 2097, 21039, -1000, 2097, 2097, 3117, 1067, 101679,
	82883, -1000, 2335, 2335, 67718, 52447, -1000, -137, 919, 3244,
	2487, 3376, -1000, -1000, -1000, -1000, 2359, -1000, -1000, 101679,
	2358, 915, -1000, -203, -1000, 799, 798, 69800, 892, 891,
	-1000, -1000, -1000, -1000, 456, 3219, -1000, 3343, 503, 101679,
	2060, 502, 21039, 3072, 786, 68764, -1000, 2930, 1719, -1000,
	2148, 101679, 3069, -1000, 2415, 501, -1000, 914, 499, 494,
	2924, 2924, -208, 50324, 50324, -209, 486, 914, -1000, -215,
	-1000, -1000, -1000, -1000, -145, -1000, 812, 554, -1000, -1000,
	82883, 82883, 42224, 42224, -1000, 9416, 9416, 9416, -1000, 277,
	-1000, -1000, 1908, 3137, -1000, -153, 108584, 108345, 552, 46074,
	60312, -217, -1000, -1000, 101679, 112815, -154, -1000, 112815, 485,
	472, 331, -1000, -1000, -1000, 666, -1000, -1000, 3375, -1000,
	-1000, 1722, -1000, -1000, -1000, 101679, 2158, -1000, 1010, 42224,
	5793, 471, 42224, -1000, 3217, -1000, 2485, 2645, 2487, 470,
	-1000, -1000, -1000, -1000, 814, 101679, 1005, 1752, -1000, -1000,
	112815, 3117, 50324, -1000, -1000, 466, 464, 112815, 461, 795,
	2673, -1000, -1000, -1000, -1000, 112815, 460, 3187, -1000, -1000,
	-1000, -1000, 2097, 82883, -1000, -1000, -1000, -218, -1000, -1000,
	1759, 109, 1834, 2527, -1000, 2072, 459, -1000, -1000, 1999,
	2437, -1000, 90173, 28808, 28808, 276, 3216, 891, -1000, 3296,
	-1000, 3212, 109, -1000, 50324, -1000, 82883, 50324, 2058, -1000,
	2313, 68764, -1000, 2334, -1000, -1000, -220, 101679, 1719, -1000,
	-1000, 67718, 67718, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1005, -223, -226, -1000, 67718, -1000,
	-1000, 2308, -1000, 101679, -1000, 101679, -1000, -1000, -229, -232,
	-1000, 1905, 42224, 28258, -1000, -1000, 552, -234, -1000, -156,
	-1000, 3211, 43874, 3374, 3371, 3370, -1000, -1000, -1000, -1000,
	2860, 2587, 107992, 2296, 101679, 384, -1000, 2635, -1000, -1000,
	1834, 101679, -1000, -1000, 2487, 2574, 82883, 1008, -237, 1838,
	1838, 42224, 27708, 1872, 42224, -1000, -1000, 3117, -1000, 2615,
	3315, -1000, 892, -1000, 1864, 101679, -1000, 3108, -1000, 3029,
	-1000, -1000, -1000, 2494, 109, -1000, -1000, 109, -1000, -239,
	1007, -242, 82883, 786, -1000, 2338, 946, -1000, -1000, -244,
	-245, 1746, 1005, 893, -251, -1000, -252, -259, -1000, -1000,
	192, 43324, 43324, 43324, -161, -162, -1000, 101679, 457, -1000,
	-1000, -1000, -1000, 2840, 918, -1000, 2015, 1774, 115, 1031,
	-1000, -1000, 2594, -260, -1000, 917, 456, -1000, 42224, 1005,
	-261, -1000, 984, -267, -1000, 982, -268, -1000, 2670, -1000,
	-274, 2097, 916, 3172, -1000, -1000, -1000, 1999, 82883, -275,
	-1000, -1000, 2120, -1000, 2487, 915, -1000, 1005, 455, 1746,
	453, 1337, 3072, 2957, 914, 914, 2487, 1746, 946, 448,
	914, -1000, -1000, -1000, 2912, -1000, 47140, 1998, 1709, 110949,
	2912, 2912, -1000, -1000, 101679, 3157, -1000, 2047, 2036, 1420,
	-1000, -1000, -1000, -1000, -1000, -1000, 946, -1000, 3155, 2296,
	112815, 2487, -1000, 1838, 2526, -1000, 1838, 2667, -1000, 1858,
	-1000, -1000, -1000, 1637, 3309, -1000, 445, -1000, 101679, 1684,
	1666, 3367, 1834, 1999, 1746, 50324, 2487, 50324, -1000, -1000,
	1228, -1000, -1000, 1834, 2487, -1000, -1000, -1000, 1657, 3225,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 781, -1000,
	3014, -1000, 1040, 2066, 2066, -1000, 776, 2015, -1000, -1000,
	436, -1000, 432, -1000, 1960, -1000, -1000, 101679, -1000, -1000,
	3366, -1000, 892, -1000, 2487, -277, 1834, -282, -1000, 1472,
	893, 1834, 1702, -1000, -1000, 1897, 42774, 42224, -1000, 3278,
	-1000, -1000, 2321, -1000, 42224, 2594, 42224, 42224, 56140, -283,
	-1000, 1999, 1834, 1005, 893, 1746, 57706, 946, 893, -1000,
	-1000, -1000, 112815, -1000, -1000, -1000, 112815, -1000, -285, -290,
	-180, 89650, 2068, -1000, 893, 1746, 946, 2487, -266, -1000,
	946, 1834, 1105, -293, -1000, -1000, -1000, 946, 2487, -1000,
	1834, -1000, -1000, -1000, 431, -1000, -1000, 1834, 893, 42224,
	893, 946, -301, 946, -1000, 1834, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4212, 4211, 4209, 4206, 4203, 4199, 4198, 4190, 4189,
	4185, 4183, 4177, 4175, 4172, 4171, 4169, 4166, 4165, 4164,
	4163, 4162, 4160, 4157, 4156, 4154, 4151, 4150, 4149, 4148,
	4146, 4144, 4141, 4139, 4135, 4133, 4132, 4130, 4129, 4128,
	4127, 4125, 4122, 4120, 4119, 4116, 4115, 4111, 4110, 4109,
	4108, 4107, 4099, 4097, 39, 4096, 4095, 4094, 4092, 4088,
	4085, 4083, 4080, 4078, 4076, 4071, 4070, 4069, 4067, 4066,
	4065, 4063, 4061, 4059, 42, 4057, 238, 4056, 4053, 4049,
	4048, 4040, 4039, 4037, 4036, 4035, 4034, 4033, 4031, 236,
	4030, 152, 4029, 4027, 4026, 4024, 4023, 235, 4021, 4020,
	4019, 4016, 247, 4014, 4013, 4010, 4009, 4008, 4002, 4000,
	3999, 3998, 66, 142, 3997, 3995, 2024, 3994, 3993, 3992,
	3990, 3989, 3988, 3986, 3985, 3984, 3982, 207, 3981, 232,
	3979, 3978, 3977, 3976, 3975, 3974, 3973, 3972, 3971, 3970,
	3969, 3968, 3964, 3961, 3959, 3956, 3955, 3954, 3953, 3952,
	3946, 3939, 3938, 3923, 3919, 3912, 3908, 3905, 3901, 3899,
	3898, 3897, 3895, 245, 156, 3894, 3892, 230, 229, 3891,
	3889, 3887, 3884, 3883, 104, 4, 107, 3882, 3881, 83,
	65, 63, 84, 82, 80, 3880, 89, 3879, 110, 48,
	3877, 6, 2, 212, 199, 8710, 197, 3876, 3875, 3873,
	210, 166, 3872, 203, 3871, 3870, 3869, 3868, 69, 52,
	147, 146, 153, 143, 877, 3867, 3866, 81, 62, 41,
	25, 21, 3864, 3862, 3859, 3858, 2754, 127, 3857, 228,
	201, 140, 3854, 3853, 3852, 820, 3851, 3850, 40, 3849,
	239, 74, 100, 51, 99, 3845, 115, 20, 3843, 167,
	55, 3840, 132, 85, 72, 5708, 6285, 3836, 111, 44,
	209, 3760, 151, 148, 171, 71, 133, 182, 181, 141,
	97, 3835, 220, 3834, 3239, 59, 129, 3833, 3832, 3831,
	67, 168, 87, 3830, 3829, 50, 10, 33, 7, 164,
	38, 96, 32, 15, 3824, 11, 3823, 3822, 3820, 3819,
	35, 150, 3818, 237, 3816, 58, 30, 29, 3814, 139,
	188, 3813, 193, 109, 3811, 3810, 223, 176, 137, 3809,
	73, 194, 3808, 3806, 3804, 3802, 3801, 118, 9, 106,
	3800, 3799, 121, 3798, 34, 204, 165, 3797, 49, 3793,
	3792, 144, 86, 114, 242, 108, 192, 88, 190, 157,
	195, 3790, 3789, 3787, 170, 3785, 3780, 189, 131, 3778,
	3775, 174, 248, 26, 61, 200, 60, 161, 126, 3773,
	175, 3770, 3767, 244, 149, 185, 1, 18, 79, 102,
	3765, 5, 196, 128, 173, 98, 3764, 4459, 2001, 2037,
	3763, 3761, 117, 90, 57, 119, 124, 227, 53, 3759,
	3755, 2695, 3754, 3753, 3751, 3750, 158, 3748, 3747, 3745,
	120, 113, 234, 3744, 76, 75, 47, 14, 125, 213,
	231, 91, 186, 163, 214, 3743, 3742, 3738, 160, 3737,
	45, 180, 3734, 172, 211, 3733, 3732, 93, 3730, 123,
	1931, 46, 136, 3729, 187, 3726, 3725, 3720, 3712, 3711,
	3707, 3706, 388, 198, 3704, 3699, 3697, 31, 162, 3695,
	225, 116, 169, 94, 37, 3694, 77, 3061, 3693, 350,
	206, 155, 105, 3687, 2959, 64, 0, 10546, 6401, 9012,
	10044, 3685, 6301, 3684, 3682, 3681, 184, 112, 3680, 3678,
	3675, 92, 3670, 68, 3669, 3662, 56, 3661, 16, 8,
	12, 19, 17, 744, 103, 3660, 3658, 43, 130, 134,
	3654, 233, 191, 3648, 3646, 3643, 3642, 78, 3641, 28,
	3640, 24, 3637, 3635, 36, 13, 27, 3634, 3633, 202,
	3632, 183, 208, 3631, 145, 3630, 3222, 122, 3629, 3628,
	226, 101, 3627, 224, 3625, 3182, 3624, 3615, 22, 3610,
	3603, 205, 154, 178, 3597, 3595, 138, 3592, 3589, 3587,
	217, 3584, 3581, 23, 3580, 3, 3576, 3574, 177, 3090,
	3573, 3572, 54, 3571, 159,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 540, 540, 21, 35, 22, 36,
	15, 541, 541, 541, 541, 28, 23, 37, 25, 25,
	25, 25, 25, 177, 177, 177, 177, 20, 20, 31,
	31, 211, 211, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 539, 539,
	213, 213, 212, 207, 207, 542, 542, 214, 214, 214,
	216, 216, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 441, 441, 441, 472, 472, 472, 555, 555, 556,
	556, 556, 556, 556, 115, 115, 340, 340, 340, 43,
	43, 43, 43, 43, 534, 534, 179, 179, 179, 181,
	181, 180, 180, 180, 180, 65, 65, 547, 547, 548,
	548, 546, 549, 549, 549, 178, 178, 178, 111, 111,
	111, 111, 111, 112, 112, 113, 113, 182, 182, 182,
	184, 184, 183, 183, 183, 183, 183, 183, 183, 183,
	188, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	93, 93, 474, 474, 475, 475, 173, 173, 174, 174,
	174, 174, 175, 175, 176, 176, 176, 57, 185, 185,
	187, 187, 186, 186, 45, 45, 45, 45, 45, 45,
	45, 46, 46, 46, 46, 46, 47, 47, 47, 47,
	47, 47, 48, 48, 48, 48, 48, 48, 55, 55,
	55, 55, 164, 164, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 62, 62, 62, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 558, 558, 559,
	559, 560, 560, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	71, 71, 302, 302, 273, 273, 72, 72, 72, 73,
	73, 74, 74, 59, 59, 532, 532, 317, 317, 432,
	432, 76, 76, 339, 339, 77, 77, 77, 77, 77,
	77, 78, 78, 78, 78, 78, 78, 78, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 86, 86, 86, 86, 86, 87, 87, 87,
	84, 84, 84, 81, 81, 81, 80, 80, 80, 85,
	85, 85, 531, 264, 264, 83, 83, 83, 82, 82,
	82, 318, 318, 88, 88, 88, 88, 274, 89, 89,
	89, 89, 89, 89, 89, 89, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 434,
	434, 90, 90, 90, 399, 399, 94, 94, 94, 355,
	355, 95, 95, 95, 95, 95, 96, 96, 96, 96,
	96, 96, 114, 114, 114, 114, 114, 114, 536, 536,
	310, 310, 229, 229, 229, 229, 104, 104, 104, 104,
	105, 105, 105, 106, 106, 169, 169, 121, 121, 121,
	121, 121, 120, 120, 120, 120, 120, 120, 49, 49,
	49, 50, 50, 51, 51, 52, 52, 53, 53, 54,
	54, 54, 54, 54, 123, 123, 552, 552, 125, 122,
	122, 122, 124, 124, 124, 124, 126, 127, 127, 127,
	127, 127, 127, 127, 127, 128, 128, 466, 466, 326,
	326, 464, 464, 483, 483, 465, 465, 278, 278, 278,
	278, 278, 279, 279, 279, 473, 473, 473, 473, 473,
	473, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 170, 170, 171, 172, 172, 172,
	172, 172, 149, 149, 149, 163, 163, 163, 163, 163,
	163, 163, 152, 152, 152, 139, 139, 130, 130, 130,
	130, 130, 130, 130, 134, 134, 134, 134, 134, 134,
	134, 134, 131, 131, 141, 141, 141, 141, 141, 135,
	135, 136, 136, 159, 159, 138, 138, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 132, 132, 132, 132,
	143, 143, 143, 143, 362, 362, 362, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 162, 162,
	162, 162, 162, 162, 550, 550, 551, 551, 156, 156,
	156, 156, 156, 156, 413, 413, 150, 150, 150, 150,
	155, 155, 155, 155, 158, 158, 158, 158, 345, 345,
	147, 147, 147, 148, 148, 148, 153, 153, 154, 151,
	151, 157, 157, 157, 157, 133, 133, 133, 562, 562,
	562, 160, 160, 146, 146, 161, 161, 161, 161, 161,
	161, 161, 161, 145, 145, 145, 144, 144, 144, 144,
	137, 533, 533, 529, 529, 529, 529, 529, 529, 529,
	529, 530, 530, 530, 530, 535, 535, 99, 99, 99,
	99, 99, 107, 107, 107, 107, 107, 100, 100, 100,
	100, 100, 102, 102, 101, 101, 101, 101, 66, 66,
	66, 66, 66, 14, 14, 14, 67, 67, 191, 191,
	191, 292, 292, 192, 192, 286, 286, 286, 286, 189,
	189, 190, 190, 68, 68, 563, 563, 563, 543, 543,
	543, 544, 544, 544, 544, 544, 544, 280, 280, 281,
	281, 379, 379, 379, 379, 379, 284, 284, 284, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 287, 287,
	215, 215, 215, 290, 291, 291, 288, 288, 289, 289,
	289, 294, 294, 293, 296, 296, 295, 378, 492, 492,
	494, 494, 494, 494, 494, 494, 494, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 564, 564,
	490, 490, 490, 491, 486, 486, 487, 487, 487, 487,
	487, 282, 282, 283, 283, 283, 283, 488, 489, 308,
	308, 417, 493, 493, 495, 495, 497, 565, 565, 565,
	565, 565, 565, 566, 566, 566, 377, 377, 376, 376,
	300, 300, 498, 498, 498, 498, 499, 499, 499, 499,
	499, 502, 501, 500, 500, 500, 500, 500, 70, 70,
	70, 342, 342, 341, 341, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	166, 166, 232, 232, 64, 64, 64, 12, 12, 12,
	545, 545, 545, 69, 69, 69, 69, 69, 69, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 538,
	538, 537, 537, 233, 233, 568, 568, 75, 75, 75,
	75, 75, 75, 75, 435, 435, 436, 436, 63, 63,
	63, 63, 63, 363, 363, 361, 361, 360, 360, 307,
	307, 415, 415, 415, 416, 237, 237, 238, 238, 208,
	208, 208, 27, 26, 19, 19, 24, 24, 39, 39,
	39, 39, 42, 42, 38, 38, 38, 38, 40, 40,
	34, 34, 553, 553, 554, 554, 103, 103, 108, 108,
	108, 108, 108, 109, 109, 109, 109, 110, 110, 110,
	110, 119, 119, 165, 165, 165, 165, 165, 165, 165,
	44, 44, 44, 44, 56, 56, 56, 56, 117, 570,
	570, 570, 118, 118, 118, 569, 569, 230, 230, 373,
	373, 374, 374, 571, 571, 375, 375, 375, 375, 375,
	223, 222, 224, 224, 225, 225, 61, 61, 61, 217,
	217, 218, 218, 219, 219, 220, 220, 221, 221, 572,
	572, 97, 97, 97, 168, 168, 272, 272, 272, 370,
	370, 370, 301, 301, 244, 244, 372, 372, 372, 372,
	338, 338, 338, 167, 167, 315, 315, 328, 328, 329,
	329, 429, 429, 330, 116, 116, 195, 195, 193, 193,
	193, 193, 193, 193, 193, 193, 200, 200, 201, 201,
	202, 202, 203, 204, 204, 204, 204, 319, 319, 205,
	205, 205, 194, 194, 194, 196, 196, 196, 196, 196,
	196, 196, 199, 199, 199, 199, 206, 206, 206, 198,
	198, 509, 509, 509, 511, 511, 513, 513, 512, 512,
	508, 508, 510, 510, 567, 567, 344, 344, 344, 298,
	299, 297, 297, 305, 305, 303, 304, 304, 306, 306,
	414, 414, 414, 209, 209, 209, 335, 335, 335, 335,
	336, 336, 366, 366, 364, 364, 364, 364, 365, 365,
	367, 367, 367, 368, 368, 369, 369, 332, 332, 333,
	333, 334, 334, 334, 334, 395, 395, 197, 197, 197,
	312, 312, 312, 313, 313, 385, 385, 385, 385, 385,
	385, 386, 386, 384, 384, 384, 384, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 419, 420, 420, 314,
	314, 421, 371, 371, 527, 527, 527, 528, 528, 412,
	412, 422, 422, 422, 422, 422, 422, 410, 410, 411,
	411, 430, 431, 431, 348, 348, 348, 348, 346, 346,
	349, 349, 349, 349, 347, 347, 423, 423, 423, 423,
	337, 337, 424, 424, 424, 424, 425, 426, 426, 427,
	427, 380, 381, 381, 437, 437, 437, 437, 439, 311,
	311, 311, 311, 311, 485, 484, 484, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 454, 454,
	454, 454, 454, 454, 454, 440, 440, 440, 440, 440,
	444, 444, 444, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 445, 445, 450, 450, 451, 451,
	451, 446, 447, 452, 452, 452, 452, 573, 573, 456,
	456, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	442, 442, 442, 449, 449, 449, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 356,
	356, 358, 358, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	389, 389, 389, 389, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 503,
	503, 503, 503, 503, 503, 503, 503, 391, 391, 506,
	506, 507, 507, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 514, 514, 515, 515, 517, 517, 518, 518,
	519, 520, 520, 520, 521, 522, 522, 516, 516, 523,
	523, 523, 523, 524, 524, 525, 525, 525, 525, 525,
	526, 526, 526, 526, 526, 401, 401, 402, 402, 408,
	408, 408, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 234, 234,
	234, 234, 234, 324, 324, 322, 322, 322, 325, 325,
	323, 323, 321, 321, 320, 320, 398, 398, 396, 396,
	400, 400, 350, 350, 455, 455, 455, 455, 455, 455,
	455, 455, 351, 351, 351, 359, 352, 352, 353, 353,
	353, 353, 353, 392, 393, 354, 354, 354, 394, 394,
	403, 407, 407, 406, 405, 405, 404, 404, 382, 382,
	383, 383, 331, 331, 574, 574, 327, 327, 428, 428,
	428, 428, 276, 276, 316, 316, 275, 275, 267, 267,
	268, 268, 268, 268, 309, 309, 409, 409, 457, 457,
	458, 458, 459, 459, 460, 460, 461, 462, 463, 397,
	397, 254, 253, 241, 242, 252, 251, 250, 240, 243,
	247, 248, 249, 245, 246, 260, 259, 258, 265, 266,
	256, 257, 433, 239, 269, 269, 270, 270, 270, 271,
	271, 271, 271, 235, 235, 236, 236, 261, 261, 262,
	263, 263, 255, 255, 255, 226, 226, 226, 227, 227,
	228, 228, 471, 471, 468, 468, 468, 469, 469, 469,
	470, 470, 470, 470, 467, 467, 467, 467, 467, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 477, 477, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 479, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 482, 482,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 2, 1, 3, 1, 3, 2, 5, 0,
	1, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 2, 0,
	1, 2, 3, 1, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 6, 6,
	6, 6, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 6, 3, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 2, 6, 4, 7, 7, 7, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 3, 4, 10, 10, 3, 5, 5, 5, 3,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 12, 15, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 9, 12, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 564, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -114, -119, -103, -115, -121, -165, -170,
	-171, -172, -3, -43, -45, -58, -76, -78, -89, -98,
	-97, -99, -104, -111, -107, -93, -49, -116, -120, -129,
	-166, -167, -168, 32, 31, 99, 79, 150, 125, 133,
	194, 371, 407, 418, 399, 388, -124, -125, 435, -44,
	-56, -118, -117, 72, 126, 394, -4, -12, 29, 45,
	-46, -47, -48, 61, -64, -60, -71, -65, -62, -557,
	101, -510, -79, -82, -110, -561, 138, 157, 212, -100,
	-101, 354, -105, -106, 401, -108, -109, 403, 158, -51,
	-50, 152, -193, -195, -122, -123, -169, -130, -131, -132,
	-133, -134, -135, -136, -159, -137, -138, -139, -140, -141,
	-142, -162, -143, -144, -145, -146, -151, -147, -148, -149,
	-150, -152, -153, -155, -156, -157, -158, -160, -161, 440,
	-154, 496, 48, 454, 81, 142, 411, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -59, -61, -63,
	-66, -67, -68, -75, -69, -70, -509, -80, -81, -84,
	-86, -87, -83, -85, 400, -196, -194, 561, 511, -16,
	-21, -22, -17, -18, -20, -23, -19, -24, -30, -35,
	-36, -32, -33, -31, -34, -37, -38, -39, -40, -41,
	-42, -26, -28, -29, -27, -15, -25, 530, 539, -199,
	-197, -198, -206, 427, 519, 470, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, -274, 2, -256, -261,
	-262, -263, -255, -226, -479, -482, 4, -476, -480, 163,
	221, 318, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 52, 54,
	58, 59, 60, 61, 62, 63, 67, 72, 73, 78,
	79, 80, 81, 82, 83, 84, 90, 87, 88, 89,
	91, 93, 95, 96, 97, 98, 99, 100, 102, 103,
	104, 106, 107, 115, 116, 117, 118, 120, 125, 126,
	129, 124, 128, 131, 132, 133, 136, 137, 138, 140,
	141, 143, 144, 145, 147, 148, 150, 151, 152, 155,
	153, 478, 154, 156, 157, 158, 159, 169, 170, 171,
	176, 178, 182, 183, 186, 187, 188, 189, 190, 191,
	192, 193, 195, 199, 201, 202, 203, 204, 205, 211,
	212, 214, 215, 216, 217, 222, 223, 224, 228, 225,
	234, 235, 239, 240, 241, 243, 247, 248, 249, 250,
	251, 252, 254, 256, 255, 258, 261, 262, 265, 269,
	270, 273, 274, 275, 276, 278, 279, 282, 280, 283,
	284, 281, 285, 287, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 298, 286, 301, 299, 303, 304,
	305, 316, 314, 309, 310, 306, 311, 307, 308, 312,
	313, 320, 321, 324, 209, 326, 327, 330, 348, 334,
	335, 336, 339, 340, 343, 346, 347, 349, 350, 351,
	352, 353, 354, 355, 356, 358, 359, 361, 362, 363,
	365, 366, 367, 369, 371, 372, 374, 376, 377, 378,
	379, 380, 381, 382, 385, 384, 386, 388, 394, 399,
	396, 397, 398, 400, 401, 402, 403, 405, 406, 407,
	409, 410, 411, 412, 414, 416, 417, 420, 421, 437,
	438, 456, 418, 419, 422, 423, 424, 425, 426, 430,
	428, 429, 431, 432, 433, 435, 436, 439, 440, 442,
	443, 444, 445, 446, 447, 450, 452, 453, 454, 455,
	457, 460, 461, 462, 463, 458, 469, 466, 467, 471,
	472, 473, 474, 475, 476, 477, 479, 481, 489, 490,
	491, 493, 496, 497, 498, 499, 487, 501, 502, 505,
	506, 507, 510, 508, 509, 511, 513, 516, 517, 518,
	524, 523, 525, 531, 532, 534, 535, 536, 36, 49,
	50, 53, 55, 57, 68, 69, 70, 74, 121, 122,
	149, 160, 161, 172, 184, 185, 196, 198, 206, 207,
	208, 229, 230, 232, 237, 259, 323, 325, 341, 345,
	360, 364, 368, 370, 383, 413, 448, 459, 464, 482,
	483, 484, 485, 492, 494, 519, 520, 521, 526, 533,
	-274, 2, -256, 332, -249, 2, -226, -226, 371, 28,
	2, 28, 359, 429, 473, 475, 2, -536, -310, 2,
	28, -229, -226, 101, 194, 427, -249, 2, -536, -310,
	25, 2, -226, 2, -230, 2, 418, -226, 279, 2,
	564, 93, 270, 73, 413, 432, -127, 490, -126, 482,
	422, -128, -466, 2, 301, -226, 564, 564, 564, 28,
	-239, -226, 470, 221, 422, 117, 467, 564, 2, 470,
	351, 523, 428, 117, 380, 221, 498, 422, -545, 279,
	409, 197, 512, -534, 2, -529, 4, -480, -476, -268,
	-267, 470, 476, 117, -263, -255, 554, -262, 564, 564,
	564, 2, 240, 241, 379, 378, 432, 433, 564, 564,
	564, 564, 420, 2, 159, 22, 27, 65, 92, 97,
	123, 179, 182, 337, -558, 348, 377, 431, 469, 472,
	479, 493, -544, 455, 67, 422, -543, -545, 279, 498,
	136, -360, 117, 270, 193, 506, 475, 473, 504, 129,
	228, 509, 508, 564, 564, 22, 27, 65, 76, 97,
	136, 159, 179, 182, -560, 348, 377, 416, 431, 469,
	479, 493, 2, 523, 279, 428, 470, 221, 117, 498,
	422, -545, 420, 421, 375, -91, 2, 561, 32, 31,
	435, -188, 470, 233, 2, -226, 564, 564, 2, 240,
	241, 420, 421, 564, 564, 180, -529, 2, 564, 564,
	2, 240, 241, 420, 421, 233, 2, 67, 424, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 2, -163, 432, 455, 203, 46, 45, 73, 28,
	376, 78, 352, 118, 144, 499, 195, 221, 222, 248,
	92, 93, -362, 44, 241, 240, 421, -550, 420, -413,
	471, 423, 429, 466, 252, 418, 490, 101, 513, 410,
	536, 380, 381, 153, 4, 117, 301, 434, 482, 270,
	417, 355, 83, -567, 2, 470, -569, 2, 490, 490,
	2, -569, 2, -569, 2, -569, 2, -570, 490, 533,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, -194, -196, -195,
	564, 564, 564, 564, 564, 564, 564, -163, 432, 2,
	73, 28, -303, -305, 503, 231, 146, 338, -193, -195,
	2, -509, -464, 2, -387, -483, -389, 552, 553, 545,
	468, 66, 317, 537, -401, 123, 504, 332, -482, -390,
	-403, 149, 413, -325, 8, 9, 5, 6, 7, -235,
	-391, -397, 495, 162, 322, -271, 565, 10, 561, -506,
	-195, -402, 37, 198, 64, -468, -270, -236, -440, 232,
	-269, -255, -503, -504, 4, -476, -477, -469, -443, -451,
	-447, -448, -454, -226, -479, 76, 109, 110, 108, 113,
	112, 272, 271, 114, 111, 434, 512, 65, 36, 206,
	207, 237, 323, 208, 74, -505, 137, -478, 229, 230,
	448, 50, 383, 172, 122, 121, 325, 55, 53, 520,
	-452, 119, 482, 483, 484, 485, 184, 185, 57, 160,
	161, 345, 368, 464, 492, 494, 196, 259, 43, 105,
	181, 227, 210, 236, 238, 242, 260, 263, 302, 315,
	319, 342, 344, 408, 441, -573, 521, 459, 68, 69,
	-511, 384, -512, -249, -511, 564, 564, 566, 564, -297,
	-298, -299, 2, 28, 134, 561, 2, -418, 2, -419,
	-423, -195, 253, -422, 561, -420, 559, -256, 333, -507,
	414, -503, -504, -235, -255, -270, 4, -476, -478, 563,
	-300, 561, 117, 470, 77, 221, -355, 561, -226, 28,
	332, 486, 566, -399, 561, 332, 180, 335, -226, 523,
	2, 2, 437, 2, 561, -127, 70, 490, 43, 432,
	-374, 2, -375, -222, -223, -224, -430, -225, 239, 374,
	382, 540, 127, 317, 536, -464, -552, 180, 544, 486,
	-464, -326, 563, 2, 2, 2, 2, 2, 2, -423,
	206, -256, 2, -253, -467, 4, -476, -480, -477, -481,
	-479, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	56, 64, 65, 71, 75, 77, 86, 92, 101, 108,
	109, 111, 110, 112, 113, 114, 123, 127, 130, 134,
	135, 139, 142, 146, 162, 164, 177, 179, 180, 194,
	197, 200, 213, 226, 231, 233, 253, 257, 264, 271,
	272, 317, 322, 328, 332, 333, 337, 338, 357, 373,
	387, 404, 427, 434, 451, 465, 470, 480, 486, 488,
	495, 503, 504, 512, 514, 522, 527, 528, 529, 530,
	-482, 76, 2, -423, 206, 2, -258, 206, -423, -261,
	2, -240, -226, 2, -252, -467, 2, -275, 206, -256,
	-257, -261, -259, 2, -261, -265, 2, -226, -474, 206,
	2, -471, 10, -470, 5, 4, -476, -480, -477, 523,
	233, 486, 566, -316, -267, -268, -463, 8, -309, -226,
	563, -387, 2, -116, -102, 2, 177, -387, 206, 2,
	-116, 206, 2, -387, 206, 2, -116, 206, 2, -547,
	2, -474, 206, -226, 2, 283, 2, 2, 493, 2,
	97, 470, 116, 2, 398, -559, 416, 497, 2, 2,
	2, 2, 2, 2, 2, 470, -245, 2, -226, 177,
	-265, 206, -266, 2, -226, -227, 428, -568, 384, -474,
	206, 2, 523, -259, 2, -259, 221, 235, -240, 206,
	2, 475, 473, 475, 473, 180, 2, 233, 2, 233,
	2, -424, 2, -425, -419, -426, 559, 333, 283, 2,
	2, 2, 2, 2, 206, -226, 470, 116, 2, 251,
	2, 2, 2, 2, 2, 2, 2, -318, 206, 2,
	-256, 523, -318, 206, 2, -318, 206, 2, -361, 2,
	86, -240, 206, 2, -264, 206, 2, -259, -309, 206,
	2, -475, 206, 2, -474, -387, 2, -116, 2, -434,
	2, -433, -470, 519, -91, 561, -91, 561, 432, 561,
	-474, -256, -256, -387, 2, -116, -102, 2, -387, 2,
	-116, 2, -113, -474, -112, 561, 180, -387, 2, -116,
	-102, 2, -387, 2, -116, 2, -188, 177, 2, 117,
	470, -163, 2, 177, 514, 2, 8, 2, 213, -474,
	423, 381, 169, 2, 437, 2, 438, 73, -362, 536,
	73, 180, 2, 180, 2, -345, 2, 530, 2, 2,
	-533, 2, 332, 180, 2, 180, 2, 180, 2, 180,
	2, 180, 2, 378, 433, 491, 241, 2, -116, 527,
	-102, -387, 527, 2, -551, 177, 421, -387, 2, 489,
	250, 154, 180, -345, 2, 180, 2, 180, 2, 5,
	2, 379, 456, 2, 239, 374, 456, 2, -256, -562,
	2, 470, 523, 428, 2, 2, 87, 88, 180, 2,
	180, 2, 180, 536, 2, -337, -423, -373, -374, -373,
	486, -303, -305, -163, 437, 2, -200, -335, -202, 177,
	-364, -365, -203, 264, 164, 328, -204, -344, 28, 134,
	-344, -344, 59, 562, 562, 11, 12, 75, 41, 552,
	553, 554, 555, 175, 556, 557, 550, 551, 549, 542,
	543, 547, 245, 246, 94, 546, 544, 85, 277, 415,
	165, 166, 167, 168, 395, 219, 34, 220, 14, 15,
	16, 33, 337, 263, 537, 210, 441, 545, 17, 18,
	19, 236, 238, 319, 49, 213, -234, -277, -387, -387,
	-387, -387, -387, -387, -387, 344, 561, -331, -382, 559,
	-195, 561, 561, 561, -463, -195, -387, -401, 562, -323,
	561, -195, -401, -396, 561, 413, 559, 561, -404, -387,
	5, 5, 5, 561, 563, -514, 531, 177, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 370, -445, 561, -444, 561, -444, -444,
	524, -442, 561, 539, 532, 561, -442, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	524, 566, -511, -300, 561, -327, -428, -387, 554, -327,
	-327, 332, -320, -387, 105, -348, 242, 302, 181, 260,
	408, 227, -384, 565, -384, -412, 539, -195, -420, -255,
	-195, -422, 561, -418, -412, -92, -463, -76, -89, -97,
	-116, -129, -167, -168, 554, -256, 561, 180, 561, 563,
	-467, 180, -309, -240, -256, -269, -270, -275, 133, -320,
	-529, 498, 422, -309, -229, 38, -398, -437, -438, -485,
	565, -484, -440, -450, -446, -449, 360, 364, -469, 53,
	520, -452, 232, 4, -476, -478, 229, 230, 448, 50,
	383, 172, 122, 121, 325, 55, 482, 483, 484, 485,
	184, 185, 57, 521, 459, 68, 69, -529, 498, 422,
	-309, 177, -361, -466, -320, 38, -374, 2, 123, -471,
	-571, 566, 262, -279, 276, 316, 202, 333, 534, 326,
	127, -473, 5, 4, -397, -409, 123, 270, 232, -457,
	-459, 8, -458, 9, -460, 552, 553, -465, -464, 107,
	563, -467, -211, 396, 435, -210, 24, 29, 138, 223,
	305, 517, 155, -289, 224, 347, 351, 149, 452, 507,
	-540, -541, 419, 477, 478, 89, 326, 435, 396, 149,
	-341, -343, 38, 115, 305, 346, 60, 216, 281, 282,
	454, 526, 149, 435, 396, 347, -541, 98, 396, -541,
	-213, 452, 507, -540, -541, 419, 396, -212, -289, 149,
	565, 24, 396, 435, 347, -555, -556, 138, 29, 396,
	347, -537, -508, 530, 149, -423, 206, -548, -112, 254,
	5, 10, -474, -112, -316, 566, 566, -467, 554, 421,
	420, 149, 149, 149, 149, 177, 317, 2, 2, 2,
	2, 2, 182, -543, -560, 2, 2, -256, 206, -302,
	332, -532, -317, 470, -256, 317, 43, -258, 206, 2,
	-261, 523, -537, 317, -260, 206, -256, 38, 561, 2,
	-361, 2, 221, -508, 317, -424, -272, -256, -419, -272,
	435, -249, 38, -384, -256, 2, 149, 2, 2, 2,
	-226, -214, 566, 63, 402, 149, -318, 206, -214, 149,
	-214, 149, -276, 206, -275, -214, 149, -214, 566, 149,
	-214, 149, 566, 149, 562, 566, -434, -434, -474, -176,
	530, 180, 101, 561, 561, -188, -431, 566, -430, 213,
	-475, -113, -474, -474, -532, -240, 2, -256, 2, 470,
	243, -474, -176, 213, -474, -474, -474, -466, 28, 438,
	2, 378, 433, 491, 88, 438, 2, -256, 470, 117,
	221, 79, -535, 177, -530, 409, 422, 498, -529, -256,
	117, -256, 117, -256, 117, -256, -256, 2, 2, 2,
	2, 2, 84, 84, 2, 45, -551, 177, 2, 489,
	2, 489, 2, -226, -226, -226, 455, 262, -256, 177,
	470, 221, 470, 221, 117, 470, -214, 566, -230, -200,
	-335, -466, -336, -335, -201, -200, -203, 177, 382, 508,
	305, 439, 247, -365, -364, 28, -387, -369, 171, 304,
	-387, -367, -389, 552, 553, -458, -460, -319, 326, -194,
	-194, -194, -306, -414, -387, 373, 221, -439, -437, -437,
	-254, -467, 482, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, 263, 210,
	441, 49, 213, -387, 486, -387, -387, -387, -387, 299,
	317, 322, 495, 162, 505, 134, 326, -574, 465, 40,
	-394, -195, -324, 561, -408, 35, 451, 28, -401, 561,
	2, -382, -387, -383, -321, -320, -320, 562, 522, 28,
	134, 554, 2, 562, 566, 38, 562, -387, -321, -400,
	-396, -320, -407, -406, 527, -356, -357, 535, 286, 120,
	204, 284, -358, 426, -461, 8, -467, 554, -515, 170,
	197, 561, 562, 2, 562, 2, 562, -387, 2, 562,
	-387, 2, 562, -387, 2, 562, -387, 2, 562, 2,
	-387, -387, -387, -387, -387, -387, -387, -320, 8, -461,
	-461, 482, 482, -461, -461, -461, -453, 360, 361, 362,
	363, 265, 266, 267, 268, 364, 365, 366, 367, 291,
	292, 293, 294, 287, 288, 289, 290, 295, 296, 297,
	298, 189, 190, 191, 192, 185, 186, 187, 188, -453,
	-350, 2, -455, -320, 4, 535, 286, 120, 204, 284,
	426, 5, -350, 2, -351, 2, -387, -320, -352, -388,
	-389, 552, 553, 545, -401, -353, 2, -387, -321, -387,
	56, 257, 488, -354, -387, 180, -320, -320, 2, -320,
	2, -512, 38, -320, -312, 566, 180, 38, 4, -312,
	-312, 561, 562, 566, -349, 201, 280, 275, -349, -418,
	-348, 242, -346, 342, -346, -346, -412, -241, 559, 567,
	-467, -412, -411, -410, 38, -249, 339, -412, -412, 563,
	562, -411, 560, -527, 561, 564, 564, 564, 564, 564,
	-256, 561, -320, -467, 563, 457, 562, 236, 236, 236,
	236, 414, 562, 486, -531, -264, -309, 530, -91, 334,
	562, 566, -311, 37, 559, 563, -461, 2, 2, -456,
	524, 561, 561, -357, 561, 180, -531, -309, -310, -260,
	-552, 562, 490, -375, -278, 382, 450, 397, 430, 467,
	8, 9, 8, 9, 566, -467, 566, -553, 92, 486,
	77, 422, -378, 206, 77, -486, -243, 92, -487, -226,
	71, 504, 373, 179, 147, -553, 92, 373, -553, 92,
	2, 223, 92, 435, 455, 486, 59, -423, 41, 41,
	28, -116, 258, 180, 536, 470, 221, 422, 486, -423,
	-343, -437, 115, 281, 282, 59, -462, -457, 552, 553,
	-462, 59, -462, -462, -462, 530, -258, -423, 422, 486,
	486, 486, 486, 566, 41, 41, 28, -116, 258, 180,
	486, -275, -241, 518, 42, 518, 486, 42, 422, 486,
	566, 42, 42, 486, 486, -538, -231, 104, 311, 274,
	312, 96, 308, 95, 307, 102, 309, 103, 310, 525,
	320, 62, 306, 285, 313, -232, -233, 353, 516, -474,
	435, 396, 149, 213, -431, 213, -431, -267, -226, 563,
	-116, -387, -387, -116, -387, -116, 45, 149, 2, -568,
	251, 561, -282, 317, 180, -309, -432, 233, 566, -317,
	149, -472, -471, 114, 434, -342, -341, 317, -260, 206,
	2, 149, -300, 317, 143, 561, 380, 2, -242, 206,
	-227, -226, -361, -217, 474, 149, -339, 514, -370, -116,
	561, 123, 38, -370, -328, -329, -429, -330, -243, 561,
	-249, -384, -226, 2, -256, -318, -214, 149, -318, -318,
	-214, 566, 149, -240, -259, -264, -309, -474, -475, -91,
	-433, 562, 562, 562, -175, 336, -174, -226, 5, -188,
	514, -281, -379, -378, -490, -491, -486, 263, 221, 504,
	235, 163, -301, -244, -243, 116, -182, 530, -112, -113,
	562, -431, 213, -176, -176, -431, -431, -256, 177, -474,
	-176, -176, -176, 2, 2, 2, -345, -256, -240, -275,
	-256, -309, -309, -309, -264, -345, -240, -345, -240, -345,
	-240, -116, -387, 2, 432, 177, 177, 563, -345, 380,
	117, 470, 351, 221, -256, -275, -256, -275, -240, -256,
	-423, -336, -201, 333, 247, 439, -367, -368, -389, 413,
	414, -368, 413, 414, 8, 9, 8, 9, -205, 443,
	321, -318, 566, -208, 39, 130, 247, -256, 536, 145,
	-387, -387, 486, -574, 465, -394, 145, -387, 299, 322,
	495, 162, 505, 134, 326, 180, 561, -388, -388, 562,
	-322, -387, -387, 560, 569, 562, -305, 566, -303, -387,
	-320, -320, 562, 563, -320, -309, 560, 560, 566, 562,
	-405, -406, 139, -387, 486, 486, 486, 486, 561, 562,
	563, -520, 343, 561, 561, -387, 562, 562, 562, 562,
	38, 566, 566, 566, 562, 566, 566, 566, 562, 562,
	562, 566, 562, 536, 536, 562, 562, 562, 562, 566,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 562, 566, 562, 180, 562, 562,
	-359, 357, 562, 11, 12, 552, 553, 554, 555, 175,
	556, 557, 550, 551, 549, 542, 543, 544, 85, 277,
	415, 14, 15, 16, 236, 213, -388, -388, -388, 562,
	-392, -393, 180, 177, 38, -354, -354, -354, 562, 180,
	-320, 562, 562, 561, -513, 279, 317, 562, -381, -380,
	528, -428, -313, 2, -418, -251, -467, -381, -381, -320,
	-387, 242, 242, -347, 514, 332, -349, -418, -411, -463,
	-386, -385, 178, 39, 130, 314, 209, -411, -249, -300,
	-411, -411, -467, -412, -412, -410, 562, -528, -463, 562,
	-314, -421, -507, -305, 563, -467, -185, -508, -164, 5,
	322, -164, -164, -164, -309, 486, 486, 25, 358, -437,
	559, 560, 8, -467, 561, -461, -461, -461, -309, 180,
	180, 180, -340, 530, -464, -374, 502, 82, 382, 482,
	-464, -210, 396, -243, -243, -256, -265, 317, -378, 206,
	-216, 317, -437, -250, -226, 561, 561, 247, 247, 514,
	-243, -250, 247, 206, -243, 206, -250, 2, -250, -539,
	382, 327, -387, -472, 269, 380, 318, -211, 396, 435,
	-116, -116, -116, 561, -552, 514, 133, -256, -275, -256,
	-265, -260, 435, 396, 315, -269, -462, -462, -341, 435,
	396, -265, -258, -472, 422, -240, -212, -116, -116, -116,
	561, -241, -213, 396, 5, 206, -243, 5, -226, -243,
	-265, -472, -556, 24, -243, 206, -243, -265, -472, -231,
	-474, 322, 510, -537, 422, 486, -423, -112, -179, 530,
	-112, -173, 217, 554, -534, -226, 523, -226, -280, -283,
	-281, -243, -191, -192, 532, 530, 149, -273, -256, 559,
	-176, -474, -256, -265, -266, 149, -300, 317, -474, 38,
	149, 561, 2, 2, 332, 317, -242, 206, -218, 140,
	-572, 544, -240, -381, -313, -338, -372, 404, 332, -301,
	519, -249, -338, -315, 566, 180, 544, 563, -301, -427,
	554, 2, -214, -318, -214, -214, -275, -276, -214, -214,
	-214, -91, -91, -176, 566, 561, 544, 544, 561, -474,
	-474, 562, 566, -256, -242, 221, 221, -248, -227, 562,
	566, 563, 561, -184, 336, -183, 141, 249, 234, 444,
	445, 446, 447, 132, -431, -182, -113, 180, -52, 530,
	470, -176, 565, -345, -345, -345, 432, 432, -226, -252,
	-240, -256, -253, -275, 177, 177, 508, -368, 333, 273,
	-414, -209, 538, -256, 565, -387, -387, 145, 145, -387,
	-388, -388, -387, 145, 180, 561, -387, -398, 33, 33,
	562, 566, -383, -387, 562, 522, -305, -305, 562, 554,
	-467, 565, 562, -396, 142, -387, 480, 286, 204, 284,
	-358, 284, -358, -358, -461, 5, -467, 554, -521, -246,
	561, -226, 528, -304, 338, 562, -439, -437, -387, -387,
	-387, -387, -387, -461, -442, -442, -457, -457, -387, -392,
	-387, -439, -437, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, 134, 317, 326, -388, -393, -392, -387, -387,
	-437, 562, 562, 562, -320, -91, 561, 279, -332, 197,
	-387, -431, 566, -332, -332, 562, -418, -418, 561, -387,
	242, 560, 566, 568, 544, -300, 563, -410, -411, 560,
	562, 566, 562, 566, -371, 38, 562, -467, -381, -187,
	-186, 131, 52, -309, -309, 335, 5, 8, 559, 560,
	563, -461, 562, 562, 562, -309, -309, -309, 116, 305,
	-387, 486, 486, 149, 317, 516, -492, -487, 147, -387,
	-307, -415, -507, 561, -226, 561, 561, 2, -207, 138,
	435, -554, 2, 514, 149, -214, 149, -214, 534, 561,
	561, 486, 422, 530, -320, -387, -177, 123, -466, -541,
	565, -541, 565, 422, 486, 422, 486, 530, 530, -320,
	486, -441, 47, 26, 317, -259, 486, 486, -214, 149,
	498, 435, -474, 322, -265, -260, 435, 396, -431, -181,
	336, -180, 141, 406, 132, 249, -431, -179, 180, 233,
	-260, 2, 562, 562, 566, -493, 38, 330, 330, 561,
	-256, -72, 530, -430, -463, 43, -258, 38, 149, -537,
	-116, -260, -435, -436, 5, -256, 149, 332, 317, -219,
	256, -572, -471, -508, -305, -338, -327, 318, 90, 562,
	-381, -329, -313, -387, 2, 562, -214, -214, -174, -175,
	-474, -474, -474, -176, -188, -188, -379, -284, 561, -242,
	-227, 561, -188, -244, 2, -475, 566, 561, 544, 544,
	544, -182, -431, -116, 336, -256, 554, -345, -291, -290,
	351, 326, -291, 413, 413, 333, 171, 252, -208, -241,
	-387, -387, 145, 33, 33, -387, -387, -398, 562, -387,
	-387, -320, 560, 5, -387, 562, 562, 8, -387, 562,
	563, -522, -226, -387, 562, 59, 562, 562, 566, 566,
	562, 562, 562, 562, 562, 562, 562, -393, 180, 134,
	326, 561, 562, 562, -91, -395, 200, 59, -418, -395,
	-395, -347, -309, -418, -385, -241, 559, -467, -463, -421,
	561, 563, -186, 544, 560, 2, 559, -467, 562, 116,
	-243, -243, -378, 149, -494, 92, -496, 75, 163, 101,
	317, 322, 504, 373, 71, 123, 387, -564, 38, 541,
	562, 562, 566, -416, -237, -226, -387, -416, -307, -309,
	317, 462, 123, 317, 123, 116, 498, 78, -243, -250,
	-309, -309, -256, -265, 156, 562, 566, 544, 2, 554,
	554, -265, -260, -265, -258, 349, 156, 562, -241, 5,
	5, 149, -238, 75, 5, -243, -243, -259, 116, 422,
	486, -179, 566, 561, 544, 544, -179, -475, -112, -300,
	-292, 223, -243, -491, -488, -489, 373, -495, -497, 163,
	373, -116, 2, -190, -189, -226, 5, 561, -282, 336,
	560, -472, -342, -116, -260, -300, 562, 566, -363, 514,
	-241, -256, 149, -220, 255, -572, -471, -217, -366, -364,
	135, 561, 332, -116, -305, 544, 562, 562, 116, 116,
	215, 148, -307, 561, 561, -309, 116, 562, -183, -184,
	-474, -112, -474, -182, -53, -54, 221, 92, 356, -253,
	470, 221, 561, 561, -208, -387, -387, -387, 562, -305,
	-467, 554, -516, 351, 562, -414, -387, -387, -388, 180,
	561, -398, 562, -517, 529, -387, -333, -334, -387, 412,
	106, 198, -517, -517, 562, -463, 2, -474, 559, 2,
	-378, -250, -254, -247, -226, 163, 206, 322, 247, 561,
	-388, -256, 561, 2, 30, -565, 127, 226, -377, -566,
	100, 463, 214, -415, -208, 562, 562, 562, 322, 322,
	-387, -437, 561, -214, -214, 562, 562, -387, 486, -466,
	99, -464, 2, -541, -240, -387, 486, 5, -214, -254,
	-214, -214, -238, 498, -265, -260, -180, -181, -474, -112,
	-179, 38, -287, 225, 2, -493, 247, -247, 247, -563,
	530, 562, 566, 544, 544, -280, -191, -73, -74, 487,
	-430, -300, 38, 5, 561, -226, 332, 561, -241, -221,
	91, -572, -471, -218, -338, 318, -309, 92, -366, -394,
	-176, 561, 561, -285, 80, 93, 124, 205, 183, 222,
	455, 460, 28, -285, 562, -307, -307, 562, 561, -176,
	562, 566, 28, 561, 28, 561, -256, -275, -320, -320,
	562, -305, 59, 566, 562, 562, -388, -398, 562, -518,
	-519, -246, 566, 561, 561, 436, 560, 2, -496, -247,
	317, 514, -387, -228, 561, -387, 38, 226, 128, 211,
	-287, 561, -209, -416, -376, 514, 387, -238, -307, 561,
	561, 561, 544, 180, 561, -441, -214, -259, 562, -546,
	385, -116, -288, -289, 213, 561, -286, 332, 116, 305,
	-189, -464, -464, 562, 38, -74, 9, 38, -116, -307,
	-256, -307, 332, 264, -471, -219, 562, -250, -338, -475,
	-475, -376, 562, 562, -475, -54, -309, -309, 562, 562,
	-523, 380, 414, 199, -320, -306, 562, 566, 38, -334,
	2, 2, 2, 149, 201, 562, -498, 278, -226, 562,
	128, 211, -288, -309, -287, 201, -256, -542, 514, 562,
	-294, -293, -290, -296, -295, -290, -320, -464, 99, 349,
	-320, -238, -549, 181, -548, 5, 10, -191, 349, -308,
	-417, -243, 81, 116, -292, -116, -116, 562, -363, 562,
	-256, -572, -220, -381, 562, 562, -377, -376, -192, 530,
	562, 562, 562, 562, -524, -525, 49, 501, 107, -387,
	-524, -524, -519, -521, 163, 530, -499, -502, -501, 332,
	442, 181, 350, 562, 462, 526, -565, 562, 530, -300,
	-387, -376, 562, 566, 519, 562, 566, 519, 562, 180,
	562, -214, -178, 530, 45, -286, -256, 562, 566, 372,
	129, 138, -287, -563, -376, 561, -377, 561, -457, -221,
	135, -176, -176, -287, -377, -381, -176, -526, 147, -525,
	369, 176, 413, 369, 176, -526, -526, -247, 54, -501,
	332, -502, 332, 508, 129, -381, 54, -498, -287, -293,
	213, -295, 180, 349, 420, -548, 30, 561, -417, 414,
	414, 2, -288, -286, -377, -307, -287, -307, 318, 508,
	-288, -287, 107, 197, 481, 305, 33, 544, -500, 305,
	402, 63, 435, -500, 544, -499, 561, 561, 336, -309,
	2, -191, -287, 562, -288, 562, 435, -192, -288, 413,
	340, -525, -387, 23, 322, 123, -387, -565, -320, -320,
	-175, 561, 562, -286, -288, -376, -192, -377, -328, -381,
	-192, 562, 562, -175, -215, 63, 402, -192, -377, -381,
	-287, -381, -381, -288, 486, 562, -381, -287, -288, 561,
	-288, -192, -320, -192, -381, 562, -381, -288,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 486, 487, 489, 490, 491, 493, 494, 496,
	498, 500, 501, 502, 504, 505, 507, 508, 509, 510,
	511, 513, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 579, 0, 1213,
	1215, 1217, 1219, 0, 716, 0, 32, 33, 0, -2,
	284, 286, 288, 0, 314, 316, 317, 319, 321, 323,
	-2, 0, 421, 422, 424, 426, -2, -2, 0, 887,
	889, 0, 566, 568, 0, 892, 894, 0, 0, 588,
	589, 0, 1304, -2, 582, 584, 586, 651, 653, 655,
	657, 659, 661, 663, 665, 667, 668, 670, 672, 674,
	676, 678, 680, 682, 684, 685, 687, 689, 691, 693,
	695, 697, 699, 701, 703, 705, 707, 709, 711, -2,
	713, -2, -2, 0, -2, -2, -2, 1231, 36, 38,
	40, 42, 44, 46, 48, 50, 52, 372, 373, 375,
	377, 379, 381, 384, 386, 388, 1362, 428, 430, 432,
	434, 436, 438, 440, 0, -2, 1374, 0, 0, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 83, 84,
	85, 86, 87, 88, 89, 90, 66, 67, 69, 70,
	71, 75, 76, 77, 78, 81, 64, 0, 0, 1335,
	1337, 1339, 1341, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 488, 492, 495, 497,
	499, 503, 506, 512, 514, 516, 473, 474, 477, 2030,
	2047, 2048, 2049, 2052, 2053, 2054, 2055, 2056, 2057, 2477,
	2558, 2559, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	475, 476, 1051, 0, 540, 538, 2022, 541, 2291, 543,
	545, 415, 416, 417, 418, 419, 420, 0, 559, 551,
	558, 560, 562, 563, 564, 565, 535, 533, 0, 559,
	2083, 557, 1211, 1212, 1196, 1197, 2329, 1238, 0, 195,
	578, -2, -2, -2, 2442, -2, 610, -2, 617, 2446,
	2331, 622, 0, 624, -2, 627, 1214, 1216, 1218, 714,
	715, 2033, 0, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 1101, 1102, 0, 203, 205, -2, -2, -2, -2,
	0, 0, 2371, 2132, 1990, 2049, 1993, 1988, 285, 287,
	289, 290, 0, 0, 0, 0, 0, 0, 315, 318,
	320, 322, -2, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 946, 938, 939, 1157, 0,
	0, 0, -2, 423, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 351, 478, 479, 0, 1363, 1363,
	0, 0, 0, 0, 259, 250, 888, 890, 891, 0,
	0, 0, 0, 567, 569, 0, 0, 232, 893, 895,
	896, 0, 0, 0, 0, 0, 261, 0, 0, 583,
	585, 587, 652, 654, 656, 658, 660, 662, 664, 666,
	669, 671, 673, 675, 677, 679, 681, 683, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, 706, 708,
	710, 712, 722, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 806, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 725, 727, 728, 729, 0, 786,
	804, 805, 814, 0, 1091, 1364, 1240, 1221, 1235, 1240,
	1223, 1224, 1225, 1226, 1227, 1232, 1234, 1228, 1229, 1230,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 374,
	376, 378, 380, 382, 385, 387, 389, -2, 1333, 1334,
	429, 431, 433, 435, 437, 439, 441, 570, 0, 572,
	0, 726, -2, 0, 1368, 1368, 1368, 0, 0, 1334,
	1332, 0, 575, 576, 631, 632, 1633, 0, 0, 0,
	0, 0, 0, 0, 1887, 1719, 0, 633, -2, 1750,
	1752, 2417, 2442, 1886, 1754, 1755, 1756, 1757, 1758, 0,
	1760, 1761, 1762, 1763, 1764, 1765, 0, 1767, 0, 1772,
	1773, 1774, 0, 2424, 1967, 2043, -2, 0, 0, 2430,
	2039, 0, 1853, 1790, -2, -2, 2066, 2045, 1565, 1566,
	1567, 1568, 1569, -2, -2, 2460, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 0, 2405, 2425,
	2426, 2431, 2433, 2427, 2414, 1815, 2144, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1592, 1601, -2, -2, -2, -2, -2, -2, -2, 2418,
	2419, 2436, 2439, 2445, 2450, 2451, 2423, 2432, 2459, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 1593, -2, -2, -2, -2,
	1351, 2302, 1354, 1051, 1352, 1336, 1338, 0, 1340, 0,
	0, 0, 1345, 1371, 1369, 0, 1418, 1349, 1350, 1436,
	1436, 1460, 0, 1441, 0, 1460, 1363, 1486, 0, 1447,
	2321, 1791, 1792, 0, 2049, 2044, -2, -2, 2457, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 542, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 1156,
	580, 581, 0, 605, 0, 609, 2413, -2, 0, 2340,
	-2, 613, 1241, 1245, 1246, 1247, 1248, 1249, 0, 0,
	0, 0, 1254, 0, 0, 619, 0, 0, 606, 607,
	625, 628, 0, 717, 718, 719, 720, 721, 63, 0,
	2425, 1486, 65, 0, 2012, 2074, 2075, 2076, 2077, 2078,
	2458, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2460, 68, 0, 2425, 72, 0, 2425, 0, -2,
	79, 0, 2018, 82, 0, 2015, 91, 0, 2425, 0,
	1987, -2, 0, 180, 2026, 0, 915, 2028, -2, 2425,
	1099, 262, 263, 2062, 2063, 2070, 2071, 2072, 2073, 0,
	0, 0, 0, 878, 1984, 1989, 879, 2008, 880, 1994,
	0, 291, 292, 293, 294, 295, 0, 296, 2425, 298,
	299, 0, 301, 302, 2425, 304, 305, 0, 307, 0,
	216, 217, 2425, 326, 327, 0, 329, 330, 0, 332,
	0, 0, 0, 336, -2, 352, 0, 349, 339, 340,
	342, 343, 344, 345, 346, 0, 393, 391, 2023, 0,
	908, 2425, 0, 912, -2, 2029, 0, 0, 1136, -2,
	2425, 1096, 0, 1142, 1138, 0, -2, 0, 1361, 2425,
	1258, 942, 943, 944, 945, 1498, 412, 0, 1273, 0,
	1275, 0, 1294, 1492, 1436, 0, 0, 1497, 0, 354,
	355, 356, 357, 358, 2425, 0, 0, 0, 363, 0,
	365, 366, 367, 368, 369, 370, 371, 169, 2425, 446,
	471, 0, 169, 2425, 449, 169, 2425, 452, 0, 455,
	1155, 169, 2425, 458, 169, 2425, 461, 463, 169, 2425,
	467, 468, 2425, 470, 264, 1207, 1208, 1209, 1210, 0,
	-2, 529, 2032, -2, 481, 0, 482, 0, -2, 0,
	276, 0, 0, 897, 898, 899, 900, 901, 904, 905,
	906, 907, 1473, 233, 235, 0, 0, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 0, 0, 590, 0,
	0, 723, 724, 0, 0, 734, 735, 736, 0, 276,
	2332, 2299, 2164, 743, 0, 746, 749, -2, 0, 0,
	0, 0, 753, 0, 758, 759, 760, 0, 762, 764,
	886, 766, 0, 0, 768, 0, 772, 0, 775, 0,
	777, 0, 779, -2, -2, -2, -2, 790, -2, 0,
	793, 795, 0, 797, -2, 0, 806, 802, 803, 0,
	0, 0, 0, 822, 823, 0, 832, 0, 835, 836,
	837, 0, 839, 840, 0, 842, 843, 844, 845, 0,
	847, 848, -2, -2, 852, 854, 0, 861, 0, 865,
	0, 869, 0, 730, 731, 169, 1490, 1220, -2, 1222,
	0, -2, 0, 571, 0, 574, 1391, 1319, 1316, 0,
	1388, 1389, 1320, 0, 0, 0, 1327, 0, 1366, 1367,
	0, 0, 0, 1306, 1307, 0, 0, 0, 0, 1892,
	1893, 1894, 1895, 1896, 1897, 1900, 1901, 1898, 1899, 1902,
	1903, 0, 0, 0, 0, 0, 1904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 1906,
	1907, 0, 0, 1909, 0, 1911, 0, 0, 0, 0,
	0, 0, 1698, 1700, 1975, 0, 0, 1908, 1638, 1639,
	1640, 1641, 1642, 1677, 1678, 0, 0, 1751, 1972, 1971,
	1753, 0, 1923, 0, 1766, -2, 0, 1887, 1918, 0,
	0, 1775, 1776, 1777, 0, 0, 1923, 0, 0, 1966,
	1787, 1788, 1630, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 1578, 0, 1580, 0, 1581, 1582,
	1589, 1602, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 0, 1947, -2, 0, 0, 0, 0,
	1594, 0, 1353, 0, 0, 1422, 1976, 1980, 1981, 1422,
	1422, 0, 0, 1924, 1483, 1483, 0, 0, 1479, 1479,
	1479, 1477, 1460, 0, 1460, 1470, 0, 1460, 1460, 0,
	-2, 1441, 0, 0, 1470, 0, 1454, 517, 519, 521,
	523, 524, 525, 527, 1487, 1488, 0, 0, 0, 0,
	2050, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	0, 2381, 2331, 547, 561, 1363, 0, 1926, 1513, 1517,
	0, 1519, 1520, 1521, 1522, 1523, 0, 0, 1514, -2,
	1590, 1592, 1613, 2067, 2068, 2069, 1573, 1574, 1575, 1576,
	1577, 1585, 1572, 1572, 1572, 1583, 1612, 1604, 1612, 1608,
	1558, 1559, 1560, 1595, 1596, 1597, 1598, 0, 2381, 2331,
	553, 0, 0, 0, 0, 0, -2, 615, 620, 621,
	0, 1243, 0, 1250, 642, 643, 644, 1252, 1253, 0,
	1255, 618, 645, 646, 647, 648, 649, 650, 0, 1996,
	1997, 1998, 1999, 2002, 2003, 0, 0, 616, 635, 623,
	0, 629, 92, 1193, 0, 131, 0, 1193, 1193, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 116, 127, 104, 105, 0, 0, 0, 0, 0,
	73, 1073, 0, 1076, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 115, 0, 0, 110,
	94, 0, 0, 0, 117, 129, 0, 160, 162, 0,
	0, 0, 0, 0, 0, 179, 187, 0, 0, 0,
	0, 1097, 0, 1360, 0, 0, 2425, 0, 1473, 2209,
	-2, -2, 233, 1473, 877, 0, 0, 2050, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 331, 333,
	334, 335, 0, 1135, 0, 341, 383, 1022, 2425, 0,
	0, 410, 405, 0, 407, 0, 0, 1072, 2425, 1070,
	2027, 0, 1094, 0, 1051, 2425, 2025, 0, 0, 1143,
	2059, 1152, 1156, 1260, 0, 414, 0, 1276, 1278, 0,
	0, 1493, 0, 1495, 1436, 353, 0, 360, 361, 362,
	0, 442, 0, 167, 168, 0, 169, 2425, 447, 0,
	450, 0, 169, 2425, 1982, 456, 0, 459, 0, 0,
	465, 0, 0, 0, 1363, 0, 0, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 239, 0, 1472, 0,
	0, 1473, 233, 276, 276, 1473, 592, 1473, 594, 0,
	0, 737, 738, 0, 276, 276, 276, 744, 745, 747,
	748, -2, -2, -2, 862, 750, 751, 829, 0, 0,
	0, 828, 765, 0, 871, 2317, 2331, 2381, 884, 829,
	2132, 829, 2132, 829, 2132, 776, 778, 781, 817, 825,
	789, 794, 0, 0, 799, 807, -2, 0, 809, 0,
	811, 0, 813, 829, 830, 833, 838, 841, 846, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 1233, 1391,
	1319, 573, 1310, 1390, 1311, 1318, 1321, 0, 0, 1323,
	0, 1325, 0, 1386, 1387, 1394, 1395, 0, 1405, 1406,
	1398, 0, -2, 0, 0, 1401, 1402, 1329, 0, 1346,
	1347, 1348, 1375, 1378, 1171, 0, 2558, 1634, 1508, 1635,
	1636, 2011, 0, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, -2, -2, -2, -2, -2, -2, -2,
	-2, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, -2, -2, -2, 1675, 1676, -2, 1910, 1912,
	0, 1975, 0, -2, 0, -2, -2, -2, -2, 1695,
	0, 1697, 1702, 1704, 1706, 0, 0, 0, 0, 1974,
	1716, 1958, 1959, 0, 0, 1889, 1890, 1891, 1701, 0,
	1720, 1973, 1970, 0, 0, 1922, 1374, 1779, 0, 0,
	0, 0, 1786, 1771, 1920, 0, 1919, 0, 0, 0,
	1930, 0, 1965, 1961, 0, 2009, 1629, 1616, 1617, 1618,
	1619, 1620, 1621, 1631, 0, 2006, 2036, 2042, 1863, 0,
	0, 0, 1816, 1817, 1818, 1819, 1820, 0, 1822, 1823,
	0, 1825, 1826, 0, 1828, 1829, 0, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 0, 0,
	0, 1530, 0, 0, 0, 1534, 0, 0, 0, 1538,
	0, 0, 0, 1542, 0, 0, 0, 1546, 0, 0,
	0, 1550, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 1835, 0, 1933, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1837, 0, 1839, 1924, 1944, 0, 0,
	1721, 0, 0, 0, 1887, 0, 1842, 1924, 1952, 0,
	0, 0, 0, 0, 1924, 0, 1957, 0, 1849, 0,
	1851, 1355, 0, 0, 1503, 0, 0, 0, 1979, 1503,
	1503, 0, 1417, 0, 0, 1480, 1481, 1482, 0, 0,
	1483, 0, 1474, 1478, 1475, 1476, 1470, 1433, 0, 0,
	2013, 1470, 1439, 1469, 0, 1051, 1459, 1470, 1470, 0,
	-2, 1443, 1460, 0, 0, 518, 520, 522, 526, 528,
	0, 0, 1374, -2, 0, -2, 1050, 0, 0, 0,
	0, 537, 539, 0, 0, 462, 0, 0, 531, 0,
	534, 0, 1504, 1507, 0, 0, 1518, 1524, 1525, 0,
	-2, 0, 0, 1614, 0, 0, 0, 0, 0, 198,
	0, 608, 0, 1242, 1251, 0, 639, 0, 641, 0,
	2000, 2004, 2001, 2005, 0, 630, 0, 0, 0, 0,
	1192, 0, 135, 2425, 0, 171, 0, 0, 1015, 2019,
	0, 0, 0, 0, 2151, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 1075, 1077, 1084, 1086, 0, 1080, 2007, 0, 0,
	1081, 0, 1083, 1085, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 107, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 1129, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 0, 0, -2,
	0, 0, 0, 0, 208, 0, 267, 1985, 1995, 0,
	902, 903, 297, 300, 303, 306, 204, 0, 337, 0,
	0, 948, 923, 0, 0, 392, 276, 0, 0, 406,
	2059, 910, 184, 185, 186, 1068, 1071, 0, 1051, 2425,
	1108, 0, 0, 0, 0, 0, 0, 1141, 0, 2425,
	2014, 2058, 2059, 1262, 1270, 0, 1503, 0, 1292, 1279,
	0, 0, 0, 1292, 1296, 1297, 1299, 1300, 0, 0,
	1494, 1500, 0, 364, 472, 169, 444, 0, 169, 169,
	453, 0, 0, 169, 464, 169, 169, 265, 469, 480,
	530, 1363, 1363, 276, 274, 2268, 272, 269, 271, 0,
	0, 0, 949, 951, 952, 953, 954, 0, 2059, 0,
	2198, 2059, 0, 1282, 1284, 0, 228, 0, 236, 1473,
	234, 239, 0, 0, 404, 591, 596, 732, 0, 276,
	740, 741, 742, 783, 819, 827, 752, 754, 755, 756,
	0, 885, 881, 882, 883, 767, 829, 770, 829, 773,
	829, 792, 796, 801, 808, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 866, 867, 868, 870,
	1491, 1314, 1315, 1317, 0, 1326, 0, 0, 1400, -2,
	-2, 1399, 1403, 1404, -2, -2, -2, -2, 1322, 0,
	1331, 1328, 0, 1385, 1169, 1170, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1717, 0, -2, 1696, 1699,
	1703, 1705, 1707, 0, 0, 0, 0, 0, 0, 1913,
	0, 1915, 1718, 1968, 1971, 1885, 0, 0, 1373, 1374,
	1374, 0, 1785, 0, 1921, 0, 1928, 1929, 0, 1778,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 1821, 1824, 1827, 1830,
	0, 0, 0, 0, 1810, 0, 0, 0, 1814, 1584,
	1570, 0, 1612, 1610, 1611, 1605, 1612, 1609, 1562, 0,
	1527, 1528, 1529, 1531, 1532, 1533, 1535, 1536, 1537, 1539,
	1540, 1541, 1543, 1544, 1545, 1547, 1548, 1549, 1551, 1552,
	1553, 1555, 1556, 1557, 1561, 0, 1834, 0, 1836, 1838,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1725, 1726, 1841,
	1950, 1951, 0, 0, 0, 0, 0, 0, 1847, 0,
	1956, 1848, 1850, 1363, 0, 1356, 0, 1419, 1408, 1502,
	0, 1977, 1473, 1421, 1423, 1978, 2016, 1408, 1408, 0,
	1925, 0, 0, 1464, 0, 0, 0, 1466, 1437, 0,
	0, 1431, 0, 1427, 1428, 1429, 1430, 1438, 1051, 1468,
	1440, 1444, 2036, 0, 1470, 0, 1455, 0, 1457, 1489,
	0, 1449, 1452, 0, 0, 2051, 1503, 0, 308, 312,
	313, 309, 310, 311, 546, 0, 0, 0, 0, 1927,
	0, 1509, 0, 1515, 0, 0, 0, 0, 552, 0,
	0, 0, 194, 0, 604, -2, 637, 638, 640, 0,
	636, 132, 1193, 0, 0, 1174, 1176, 0, 137, 2425,
	146, 0, 989, 0, 2017, 0, 0, 0, 0, 0,
	1195, 0, 0, 2425, 169, 2425, 169, 149, 151, 154,
	0, 159, 156, 157, 0, 0, 980, 93, 1193, 0,
	96, 100, 108, 0, 0, 0, 114, 0, 0, 0,
	1178, 1184, 0, 0, 1078, 1079, 1082, 1088, 74, 0,
	0, 1182, 1188, 80, 0, 1173, 161, 98, 102, 109,
	0, 1190, 95, 0, 183, 0, 0, 0, 175, 0,
	176, 177, 188, 0, 169, 2425, 0, 913, 914, 1130,
	1092, 1093, 0, 1098, 0, 0, 0, 1473, 200, 0,
	1473, 208, 0, 1991, 0, 325, 0, 0, 0, 0,
	947, 1033, 0, 918, 0, 0, 0, 398, 394, 0,
	403, 409, 408, 909, 0, 0, 0, 0, -2, 0,
	0, 1145, 1139, 1140, 0, 0, 0, 2425, 1264, 1270,
	0, 1269, 1361, 1374, 413, 1271, 1292, 0, 0, 0,
	1281, 1277, 1274, 1503, 0, 0, 0, 0, 0, 1496,
	1499, 359, 443, 169, 448, 451, 1983, 169, 457, 460,
	466, 483, 484, 251, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 958, 0, 2059, 2059, 0, 2021, 0,
	0, 0, 0, 237, 0, 240, 0, 0, 0, 245,
	246, 247, 248, 249, 239, 230, 1473, 0, 593, 0,
	0, 739, 0, 769, 771, 774, 810, 812, 829, 855,
	856, 975, 0, 975, 0, 0, 1324, 0, 1397, 1330,
	1379, 1380, 0, 1171, 0, 1637, 1680, 0, 0, -2,
	0, 0, 1684, 0, 0, 0, -2, 0, 0, 0,
	1914, 1916, 0, 1970, 1780, 0, 0, 0, 1784, 1768,
	1769, 0, 1888, 1931, 1960, 1964, 0, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 0, 2010, 2037, 2041, 1861, 1862,
	1866, 2024, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 1607, 0, 0, 1932, 1943,
	1945, 1722, 1723, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, -2, -2, -2, 1740, 1741, 1742, -2,
	-2, -2, 0, 0, 0, 1946, 1948, 1949, 1953, 1954,
	0, 1844, 1845, 1846, 1955, 0, 1363, 1357, 1416, 0,
	1501, 1420, 0, 1416, 1416, 1370, 1462, 0, 0, 1485,
	0, 1434, 0, 1435, 0, 1467, 0, 1442, 1445, 1446,
	1456, 0, 1448, 0, 1451, 0, 1780, -2, 277, 278,
	280, 0, 283, 549, 550, 548, 532, 0, 0, 1511,
	0, 0, 1587, 1591, 1615, 555, 556, 554, 196, 0,
	1471, 0, 0, 0, 0, 170, 987, 1014, 0, 0,
	0, 1159, 1166, 0, -2, 0, 0, 1020, 139, 0,
	0, 0, 147, 0, 0, 144, 0, 153, 158, 0,
	0, 0, 0, 0, 0, 111, 112, 113, 0, 118,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 1168, 0, 0, 190, 0,
	0, 0, 1133, 1134, 1179, 1185, 0, 0, 208, 206,
	0, 209, 0, 212, 213, 0, 208, 202, 0, 0,
	1051, 338, 921, 1021, 0, 1023, 0, 919, 0, 0,
	1022, 390, 0, 397, 0, 0, 1072, 0, 0, 1095,
	1106, 1051, 0, 1144, 1146, 1154, 0, 0, 0, 1266,
	1270, 0, 1259, 1260, 1393, 1272, 1290, -2, 0, 0,
	1374, 1298, 1295, 1301, 1302, 0, 445, 454, 273, 0,
	268, 270, 0, 254, 0, 0, 950, 955, 0, 0,
	0, 0, 0, 1283, 1285, 0, 0, 0, 0, 0,
	0, 229, 239, 260, 0, 733, 757, 820, 857, 974,
	0, 0, 859, 0, 0, 1396, 1383, 1384, 1381, 1171,
	1682, 1686, 0, 0, 0, 1688, -2, 0, 1710, -2,
	-2, 1917, 1969, 1759, 1374, 1781, 1783, 1770, 1963, 1632,
	0, 1868, 1865, 0, 1852, 0, 1805, 1806, 0, 0,
	1809, 1811, 1812, 1813, 1571, 1564, 1563, 1942, 0, 0,
	0, 0, 1843, 1358, 0, 1857, 0, 0, 1424, 1857,
	1857, 1463, 0, 1465, 1432, 1425, 0, 2037, 1458, 1450,
	0, 0, 281, 0, 1505, 1510, 0, 1516, 1586, 197,
	133, 134, 136, 0, 988, 0, 991, 0, 0, 0,
	0, 998, 999, 0, 0, 0, 0, 0, 1008, 0,
	1037, 1047, 0, 1161, 1171, 1165, 0, 1163, 0, 0,
	0, 141, 164, 0, 0, 1194, 0, 0, 169, 169,
	0, 0, 1175, 1177, 0, 0, 0, 0, 121, 0,
	0, 1180, 1186, 1183, 1189, 0, 0, 0, 1191, 181,
	182, 0, 169, 0, 174, 169, 169, 1168, 0, 0,
	0, 199, 0, 0, 0, 0, 201, 266, 208, 0,
	969, 0, 1033, 1025, 1026, 1027, 0, 1032, 1034, 0,
	0, 935, 920, 0, 931, 0, 0, 948, 923, 0,
	395, 911, 1069, 1103, 1051, 0, 1137, 0, 0, 0,
	0, 0, 0, 1268, 1270, 0, 1261, 1262, 1292, 1392,
	0, 0, 0, 1280, 1393, 0, 275, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 241, 0,
	242, 243, 244, 231, 595, 597, 0, 0, 603, 973,
	0, 0, 0, 0, 1382, 1690, -2, -2, 1711, 0,
	2038, 2040, 1374, 0, 1854, 1376, 0, 0, -2, 0,
	0, 0, 1359, 1342, 0, 1415, 1407, 1409, 1411, 2320,
	2128, 2424, 1343, 1344, 1484, 0, 1453, 282, 0, 1512,
	138, 0, 992, 993, 2020, 995, 0, 997, 1000, 0,
	1003, 2061, 0, 1007, 0, 1016, 1038, 0, 969, 0,
	1043, 1044, 1045, 1160, 1385, 1166, 1049, 0, 140, 142,
	163, 1168, 0, 143, 152, 0, 0, 97, 0, 0,
	2123, 124, 122, 120, 1172, 99, 0, 183, 189, 1167,
	178, 191, 169, 0, 1181, 1187, 210, 0, 211, 214,
	0, 0, 977, 0, 922, 1024, 0, 1035, 1036, 925,
	0, 924, 0, 0, 0, 0, 0, 396, 399, 0,
	402, 0, 0, 1147, 0, 1153, 0, 0, 0, 1256,
	0, 0, 1263, 1264, 411, 1286, 0, 0, 1292, 1303,
	253, 0, 0, 956, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 957, 1049, 0, 0, 1013, 0, 258,
	238, 0, 599, 0, 601, 0, 858, 860, 0, 0,
	1782, 1872, 0, 0, 1807, 1808, -2, 0, 1748, 1856,
	1858, 0, 0, 0, 0, 0, 1426, 1506, 990, 994,
	0, 0, 0, 1055, 0, 0, 1009, 0, 1041, 1042,
	977, 0, 1164, 1162, 969, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 173, 192, 1168, 207, 224,
	0, 1104, 923, 976, 0, 0, 933, 0, 936, 0,
	932, 929, 930, 921, 0, 400, 401, 0, 1107, 0,
	1154, 0, 0, 1270, 1265, 1266, 1503, 1289, 1293, 0,
	0, 1047, 1049, 923, 0, 598, 0, 0, 863, 864,
	0, 0, 0, 0, 1867, 1377, 1749, 0, 0, 1410,
	1412, 1413, 1414, 0, 0, 1002, 1060, 0, 0, 0,
	1039, 1040, 1037, 0, 1018, 0, 1051, 145, 0, 1049,
	0, 981, 0, 0, 984, 0, 0, 125, 2123, 123,
	0, 169, 227, 0, 221, 219, 220, 925, 0, 0,
	1029, 1031, 0, 937, 969, 935, 1105, 1049, 0, 1047,
	0, 0, 1268, 0, 276, 276, 969, 1047, 1503, 0,
	276, 600, 602, 1864, 1884, 1873, -2, 2384, 2129, 0,
	1884, 1884, 1859, 1860, 0, 0, 1004, 1056, 1057, 0,
	1052, 1053, 1054, 2060, 1005, 1006, 1503, 1046, 0, 1055,
	165, 969, 978, 0, 0, 979, 0, 0, 128, 0,
	130, 193, 215, 0, 0, 916, 0, 1028, 0, 0,
	0, 0, 977, 925, 1047, 0, 969, 0, 1267, 1257,
	0, 255, 256, 977, 969, 1012, 257, 1869, 0, 0,
	1875, 1876, 1877, 1878, 1879, 1870, 1871, 996, 0, 1058,
	0, 1059, 0, 0, 0, 1017, 0, 1060, 150, 982,
	0, 985, 0, 126, 0, 222, 223, 0, 1030, 926,
	0, 928, 923, 934, 969, 0, 977, 0, 1287, 0,
	923, 977, 0, 1881, 1882, 0, 0, 0, 1061, 0,
	1064, 1065, 0, 1062, 0, 1037, 0, 0, 0, 0,
	927, 925, 977, 1049, 923, 1047, 0, 1503, 923, 1880,
	1883, 1874, 1001, 1063, 1066, 1067, 1048, 1019, 0, 0,
	225, 0, 972, 917, 923, 1047, 1503, 969, 1503, 1010,
	1503, 977, 0, 0, 968, 970, 971, 1503, 969, 1150,
	977, 1288, 1011, 983, 0, 226, 1148, 977, 923, 0,
	923, 1503, 0, 1503, 1151, 977, 1149, 986,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 550, 3, 556, 551, 3,
	561, 562, 554, 552, 566, 553, 563, 555, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 569, 3,
	542, 544, 543, 547, 565, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 559, 3, 560, 557, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 567, 549, 568, 545,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 546,
	57885, 548, 57886, 558, 57887, 564, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1238
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1263
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1400
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1421
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1425
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1446
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1522
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1526
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1540
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1550
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1554
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1564
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1575
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1582
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1618
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1629
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1658
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1668
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1677
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1694
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1848
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1854
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1906
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2067
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2074
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2125
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2208
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2216
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2354
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = nil
		}
	case 228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2479
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2612
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2618
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2628
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2633
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2638
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2642
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2661
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = nil
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2745
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2795
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2796
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2852
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2933
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "create access method")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "create cast")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "create operator")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplemented(sqllex, "create publication")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "create rule")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "create server")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2989
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2992
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2993
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2996
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2997
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3000
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3006
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3009
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return unimplemented(sqllex, "drop server")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3138
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3173
		{

			sqlVAL.union.val = nil
		}
	case 411:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "DELETE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3201
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3225
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "DROP")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3233
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3492
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3516
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "DELETE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "INSERT")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "DELETE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "INSERT")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3601
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3634
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "GRANT")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3778
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "RESET")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "RESET")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "USE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3852
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3854
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "USE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3894
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4040
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4059
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4071
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			return unimplemented(sqllex, "set from current")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4095
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.Low
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = tree.Normal
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = tree.High
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SHOW")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4268
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4277
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4287
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4292
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.str = "client_encoding"
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.str = "timezone"
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4337
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4400
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4409
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4526
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = true
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = true
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = false
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4673
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4721
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4726
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4728
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = true
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = false
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4752
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = true
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = false
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4858
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4866
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4892
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4935
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4943
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4980
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5003
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5019
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5159
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "RESUME")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5443
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5458
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{

			sqlVAL.union.val = nil
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.str = ""
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = nil
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5503
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5519
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5551
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5565
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5580
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5581
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5582
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5665
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5671
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5678
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5694
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5699
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.str = ""
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5888
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5902
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5913
		{
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6012
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6040
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6050
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6130
		{
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6132
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6291
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6300
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6347
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = true
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{

			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = false
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6427
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6441
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6453
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6465
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6475
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6485
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = nil
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6612
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6614
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6616
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6618
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6620
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6622
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6660
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6678
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6697
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6714
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6731
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = false
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = true
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = false
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = true
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = false
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6794
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6799
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.str = ""
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.str = ""
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6866
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6872
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6948
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6960
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6966
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6980
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6986
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7003
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7004
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7007
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7008
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7115
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7120
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7140
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7163
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7174
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7195
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7238
		{
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.str = ""
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.str = ""
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7367
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7517
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7591
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7741
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7777
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7839
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = true
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = false
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = nil
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7966
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7967
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = true
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = false
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = false
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7997
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8059
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8064
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8254
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8291
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8343
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8382
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8392
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8427
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8438
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8468
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8501
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = nil
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = true
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = false
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.str = tree.AstFull
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.str = tree.AstRight
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.str = tree.AstInner
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8621
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.str = tree.AstHash
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.str = ""
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8728
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = false
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = true
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8777
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8790
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8798
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8817
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8827
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8847
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8896
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8934
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = types.Geography
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8958
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8966
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9000
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = nil
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = types.Int2
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = types.Int
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = types.Float4
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = types.Float
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = types.Bool
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9073
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = types.Float
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9092
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9098
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = types.String
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = true
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = types.Date
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9177
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9191
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9208
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9225
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = true
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = false
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = false
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = types.Interval
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9249
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9348
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = nil
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9378
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9756
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9977
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10003
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10027
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10068
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10069
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10093
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10355
		{
			return unimplemented(sqllex, "treat")
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10428
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.str = ""
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10530
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10627
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = tree.Any
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = tree.Some
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = tree.All
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = tree.Div
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.LT
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.GT
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.LE
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.GE
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.NE
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.Like
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10989
		{
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11142
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11158
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11207
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11407
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.str = ""
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
