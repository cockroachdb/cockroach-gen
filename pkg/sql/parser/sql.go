// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14560

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1725,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 452,
	-2, 0,
	-1, 71,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 72,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 93,
	242, 1458,
	256, 1458,
	272, 448,
	410, 448,
	422, 1205,
	463, 448,
	477, 1205,
	527, 1205,
	555, 448,
	582, 1205,
	-2, 0,
	-1, 99,
	137, 1725,
	249, 1725,
	566, 1725,
	567, 1725,
	-2, 0,
	-1, 117,
	156, 1696,
	176, 1696,
	189, 1696,
	252, 1696,
	285, 1696,
	359, 1696,
	370, 1696,
	561, 1696,
	-2, 1667,
	-1, 159,
	164, 1036,
	271, 1036,
	413, 997,
	482, 997,
	526, 997,
	546, 1036,
	548, 997,
	-2, 0,
	-1, 164,
	4, 1727,
	21, 1727,
	22, 1727,
	23, 1727,
	24, 1727,
	25, 1727,
	26, 1727,
	27, 1727,
	28, 1727,
	30, 1727,
	31, 1727,
	37, 1727,
	41, 1727,
	43, 1727,
	44, 1727,
	46, 1727,
	47, 1727,
	48, 1727,
	49, 1727,
	50, 1727,
	51, 1727,
	52, 1727,
	53, 1727,
	54, 1727,
	56, 1727,
	57, 1727,
	58, 1727,
	59, 1727,
	61, 1727,
	62, 1727,
	63, 1727,
	64, 1727,
	65, 1727,
	66, 1727,
	67, 1727,
	71, 1727,
	72, 1727,
	73, 1727,
	74, 1727,
	76, 1727,
	77, 1727,
	78, 1727,
	82, 1727,
	83, 1727,
	84, 1727,
	85, 1727,
	86, 1727,
	87, 1727,
	88, 1727,
	89, 1727,
	92, 1727,
	93, 1727,
	94, 1727,
	95, 1727,
	96, 1727,
	98, 1727,
	100, 1727,
	101, 1727,
	102, 1727,
	103, 1727,
	104, 1727,
	105, 1727,
	107, 1727,
	108, 1727,
	109, 1727,
	111, 1727,
	112, 1727,
	113, 1727,
	121, 1727,
	122, 1727,
	123, 1727,
	124, 1727,
	125, 1727,
	127, 1727,
	128, 1727,
	129, 1727,
	130, 1727,
	132, 1727,
	133, 1727,
	134, 1727,
	136, 1727,
	137, 1727,
	138, 1727,
	140, 1727,
	141, 1727,
	142, 1727,
	145, 1727,
	146, 1727,
	147, 1727,
	149, 1727,
	150, 1727,
	151, 1727,
	153, 1727,
	154, 1727,
	155, 1727,
	157, 1727,
	158, 1727,
	159, 1727,
	160, 1727,
	161, 1727,
	162, 1727,
	163, 1727,
	164, 1727,
	165, 1727,
	166, 1727,
	167, 1727,
	168, 1727,
	169, 1727,
	170, 1727,
	171, 1727,
	172, 1727,
	173, 1727,
	175, 1727,
	181, 1727,
	182, 1727,
	183, 1727,
	184, 1727,
	188, 1727,
	190, 1727,
	191, 1727,
	192, 1727,
	194, 1727,
	195, 1727,
	198, 1727,
	199, 1727,
	200, 1727,
	201, 1727,
	202, 1727,
	203, 1727,
	204, 1727,
	205, 1727,
	206, 1727,
	207, 1727,
	208, 1727,
	209, 1727,
	210, 1727,
	211, 1727,
	213, 1727,
	214, 1727,
	216, 1727,
	217, 1727,
	219, 1727,
	220, 1727,
	221, 1727,
	222, 1727,
	223, 1727,
	224, 1727,
	225, 1727,
	226, 1727,
	227, 1727,
	228, 1727,
	229, 1727,
	231, 1727,
	232, 1727,
	234, 1727,
	235, 1727,
	236, 1727,
	237, 1727,
	238, 1727,
	242, 1727,
	243, 1727,
	244, 1727,
	245, 1727,
	248, 1727,
	249, 1727,
	250, 1727,
	251, 1727,
	253, 1727,
	255, 1727,
	256, 1727,
	258, 1727,
	260, 1727,
	261, 1727,
	262, 1727,
	264, 1727,
	268, 1727,
	269, 1727,
	270, 1727,
	271, 1727,
	272, 1727,
	273, 1727,
	275, 1727,
	276, 1727,
	277, 1727,
	279, 1727,
	280, 1727,
	282, 1727,
	283, 1727,
	286, 1727,
	287, 1727,
	288, 1727,
	289, 1727,
	290, 1727,
	291, 1727,
	292, 1727,
	295, 1727,
	296, 1727,
	297, 1727,
	298, 1727,
	300, 1727,
	301, 1727,
	302, 1727,
	303, 1727,
	304, 1727,
	305, 1727,
	306, 1727,
	307, 1727,
	308, 1727,
	309, 1727,
	310, 1727,
	311, 1727,
	312, 1727,
	313, 1727,
	314, 1727,
	315, 1727,
	316, 1727,
	317, 1727,
	318, 1727,
	319, 1727,
	320, 1727,
	321, 1727,
	322, 1727,
	324, 1727,
	326, 1727,
	327, 1727,
	328, 1727,
	329, 1727,
	330, 1727,
	331, 1727,
	332, 1727,
	333, 1727,
	334, 1727,
	335, 1727,
	336, 1727,
	337, 1727,
	338, 1727,
	339, 1727,
	340, 1727,
	341, 1727,
	342, 1727,
	344, 1727,
	345, 1727,
	347, 1727,
	349, 1727,
	350, 1727,
	351, 1727,
	352, 1727,
	354, 1727,
	355, 1727,
	356, 1727,
	357, 1727,
	358, 1727,
	361, 1727,
	363, 1727,
	365, 1727,
	366, 1727,
	367, 1727,
	368, 1727,
	371, 1727,
	372, 1727,
	373, 1727,
	375, 1727,
	377, 1727,
	378, 1727,
	379, 1727,
	380, 1727,
	381, 1727,
	382, 1727,
	383, 1727,
	384, 1727,
	385, 1727,
	386, 1727,
	387, 1727,
	388, 1727,
	389, 1727,
	391, 1727,
	392, 1727,
	393, 1727,
	394, 1727,
	395, 1727,
	396, 1727,
	397, 1727,
	398, 1727,
	399, 1727,
	400, 1727,
	401, 1727,
	402, 1727,
	403, 1727,
	404, 1727,
	405, 1727,
	407, 1727,
	408, 1727,
	409, 1727,
	411, 1727,
	412, 1727,
	413, 1727,
	414, 1727,
	415, 1727,
	416, 1727,
	417, 1727,
	418, 1727,
	419, 1727,
	420, 1727,
	421, 1727,
	422, 1727,
	423, 1727,
	424, 1727,
	426, 1727,
	428, 1727,
	429, 1727,
	430, 1727,
	436, 1727,
	437, 1727,
	438, 1727,
	440, 1727,
	441, 1727,
	442, 1727,
	443, 1727,
	444, 1727,
	445, 1727,
	446, 1727,
	447, 1727,
	448, 1727,
	449, 1727,
	451, 1727,
	452, 1727,
	453, 1727,
	455, 1727,
	456, 1727,
	457, 1727,
	458, 1727,
	459, 1727,
	460, 1727,
	461, 1727,
	463, 1727,
	464, 1727,
	465, 1727,
	466, 1727,
	467, 1727,
	468, 1727,
	469, 1727,
	470, 1727,
	471, 1727,
	472, 1727,
	473, 1727,
	474, 1727,
	475, 1727,
	477, 1727,
	478, 1727,
	479, 1727,
	480, 1727,
	481, 1727,
	482, 1727,
	484, 1727,
	485, 1727,
	486, 1727,
	487, 1727,
	488, 1727,
	489, 1727,
	491, 1727,
	492, 1727,
	493, 1727,
	494, 1727,
	495, 1727,
	496, 1727,
	497, 1727,
	498, 1727,
	500, 1727,
	502, 1727,
	503, 1727,
	504, 1727,
	505, 1727,
	506, 1727,
	507, 1727,
	508, 1727,
	509, 1727,
	510, 1727,
	511, 1727,
	512, 1727,
	513, 1727,
	514, 1727,
	515, 1727,
	516, 1727,
	517, 1727,
	518, 1727,
	519, 1727,
	520, 1727,
	522, 1727,
	523, 1727,
	525, 1727,
	526, 1727,
	528, 1727,
	529, 1727,
	530, 1727,
	531, 1727,
	532, 1727,
	533, 1727,
	535, 1727,
	536, 1727,
	538, 1727,
	539, 1727,
	540, 1727,
	541, 1727,
	542, 1727,
	544, 1727,
	546, 1727,
	547, 1727,
	548, 1727,
	549, 1727,
	550, 1727,
	551, 1727,
	552, 1727,
	554, 1727,
	555, 1727,
	556, 1727,
	557, 1727,
	559, 1727,
	560, 1727,
	563, 1727,
	564, 1727,
	565, 1727,
	566, 1727,
	567, 1727,
	568, 1727,
	569, 1727,
	570, 1727,
	572, 1727,
	575, 1727,
	576, 1727,
	577, 1727,
	578, 1727,
	579, 1727,
	580, 1727,
	582, 1727,
	583, 1727,
	584, 1727,
	585, 1727,
	586, 1727,
	587, 1727,
	588, 1727,
	589, 1727,
	594, 1727,
	595, 1727,
	596, 1727,
	597, 1727,
	598, 1727,
	599, 1727,
	-2, 0,
	-1, 165,
	1, 1575,
	135, 1575,
	260, 1575,
	346, 1575,
	408, 1575,
	418, 1575,
	603, 1575,
	634, 1575,
	-2, 0,
	-1, 167,
	1, 1575,
	634, 1575,
	-2, 0,
	-1, 168,
	1, 1575,
	634, 1575,
	-2, 0,
	-1, 169,
	1, 1575,
	543, 1575,
	634, 1575,
	-2, 0,
	-1, 201,
	156, 1695,
	176, 1695,
	189, 1695,
	252, 1695,
	285, 1695,
	359, 1695,
	370, 1695,
	561, 1695,
	-2, 1670,
	-1, 252,
	4, 1734,
	5, 1734,
	6, 1734,
	7, 1734,
	8, 1734,
	9, 1734,
	10, 1734,
	21, 1734,
	22, 1734,
	23, 1734,
	24, 1734,
	25, 1734,
	26, 1734,
	27, 1734,
	28, 1734,
	30, 1734,
	31, 1734,
	37, 1734,
	38, 1734,
	41, 1734,
	43, 1734,
	44, 1734,
	45, 1734,
	46, 1734,
	47, 1734,
	48, 1734,
	49, 1734,
	50, 1734,
	51, 1734,
	52, 1734,
	53, 1734,
	54, 1734,
	56, 1734,
	57, 1734,
	58, 1734,
	59, 1734,
	61, 1734,
	62, 1734,
	63, 1734,
	64, 1734,
	65, 1734,
	66, 1734,
	67, 1734,
	68, 1734,
	69, 1734,
	70, 1734,
	71, 1734,
	72, 1734,
	73, 1734,
	74, 1734,
	76, 1734,
	77, 1734,
	78, 1734,
	80, 1734,
	82, 1734,
	83, 1734,
	84, 1734,
	85, 1734,
	86, 1734,
	87, 1734,
	88, 1734,
	89, 1734,
	92, 1734,
	93, 1734,
	94, 1734,
	95, 1734,
	96, 1734,
	98, 1734,
	100, 1734,
	101, 1734,
	102, 1734,
	103, 1734,
	104, 1734,
	105, 1734,
	107, 1734,
	108, 1734,
	109, 1734,
	110, 1734,
	111, 1734,
	112, 1734,
	113, 1734,
	114, 1734,
	115, 1734,
	116, 1734,
	117, 1734,
	118, 1734,
	119, 1734,
	120, 1734,
	121, 1734,
	122, 1734,
	123, 1734,
	124, 1734,
	125, 1734,
	126, 1734,
	127, 1734,
	128, 1734,
	129, 1734,
	130, 1734,
	131, 1734,
	132, 1734,
	133, 1734,
	134, 1734,
	136, 1734,
	137, 1734,
	138, 1734,
	140, 1734,
	141, 1734,
	142, 1734,
	145, 1734,
	146, 1734,
	147, 1734,
	149, 1734,
	150, 1734,
	151, 1734,
	153, 1734,
	154, 1734,
	155, 1734,
	157, 1734,
	158, 1734,
	159, 1734,
	160, 1734,
	161, 1734,
	162, 1734,
	163, 1734,
	164, 1734,
	165, 1734,
	166, 1734,
	167, 1734,
	168, 1734,
	169, 1734,
	170, 1734,
	171, 1734,
	172, 1734,
	173, 1734,
	174, 1734,
	175, 1734,
	181, 1734,
	182, 1734,
	183, 1734,
	184, 1734,
	188, 1734,
	190, 1734,
	191, 1734,
	192, 1734,
	194, 1734,
	195, 1734,
	197, 1734,
	198, 1734,
	199, 1734,
	200, 1734,
	201, 1734,
	202, 1734,
	203, 1734,
	204, 1734,
	205, 1734,
	206, 1734,
	207, 1734,
	208, 1734,
	209, 1734,
	210, 1734,
	211, 1734,
	213, 1734,
	214, 1734,
	216, 1734,
	217, 1734,
	219, 1734,
	220, 1734,
	221, 1734,
	222, 1734,
	223, 1734,
	224, 1734,
	225, 1734,
	226, 1734,
	227, 1734,
	228, 1734,
	229, 1734,
	230, 1734,
	231, 1734,
	232, 1734,
	234, 1734,
	235, 1734,
	236, 1734,
	237, 1734,
	238, 1734,
	242, 1734,
	243, 1734,
	244, 1734,
	245, 1734,
	247, 1734,
	248, 1734,
	249, 1734,
	250, 1734,
	251, 1734,
	253, 1734,
	255, 1734,
	256, 1734,
	257, 1734,
	258, 1734,
	259, 1734,
	260, 1734,
	261, 1734,
	262, 1734,
	263, 1734,
	264, 1734,
	268, 1734,
	269, 1734,
	270, 1734,
	271, 1734,
	272, 1734,
	273, 1734,
	275, 1734,
	276, 1734,
	277, 1734,
	279, 1734,
	280, 1734,
	281, 1734,
	282, 1734,
	283, 1734,
	284, 1734,
	286, 1734,
	287, 1734,
	288, 1734,
	289, 1734,
	290, 1734,
	291, 1734,
	292, 1734,
	293, 1734,
	294, 1734,
	295, 1734,
	296, 1734,
	297, 1734,
	298, 1734,
	300, 1734,
	301, 1734,
	302, 1734,
	303, 1734,
	304, 1734,
	305, 1734,
	306, 1734,
	307, 1734,
	308, 1734,
	309, 1734,
	310, 1734,
	311, 1734,
	312, 1734,
	313, 1734,
	314, 1734,
	315, 1734,
	316, 1734,
	317, 1734,
	318, 1734,
	319, 1734,
	320, 1734,
	321, 1734,
	322, 1734,
	324, 1734,
	325, 1734,
	326, 1734,
	327, 1734,
	328, 1734,
	329, 1734,
	330, 1734,
	331, 1734,
	332, 1734,
	333, 1734,
	334, 1734,
	335, 1734,
	336, 1734,
	337, 1734,
	338, 1734,
	339, 1734,
	340, 1734,
	341, 1734,
	342, 1734,
	343, 1734,
	344, 1734,
	345, 1734,
	346, 1734,
	347, 1734,
	348, 1734,
	349, 1734,
	350, 1734,
	351, 1734,
	352, 1734,
	353, 1734,
	354, 1734,
	355, 1734,
	356, 1734,
	357, 1734,
	358, 1734,
	361, 1734,
	363, 1734,
	366, 1734,
	367, 1734,
	368, 1734,
	371, 1734,
	372, 1734,
	373, 1734,
	374, 1734,
	375, 1734,
	376, 1734,
	377, 1734,
	378, 1734,
	379, 1734,
	380, 1734,
	381, 1734,
	382, 1734,
	383, 1734,
	384, 1734,
	385, 1734,
	386, 1734,
	387, 1734,
	388, 1734,
	389, 1734,
	391, 1734,
	392, 1734,
	393, 1734,
	394, 1734,
	395, 1734,
	396, 1734,
	397, 1734,
	398, 1734,
	399, 1734,
	400, 1734,
	401, 1734,
	402, 1734,
	403, 1734,
	404, 1734,
	405, 1734,
	407, 1734,
	408, 1734,
	409, 1734,
	411, 1734,
	412, 1734,
	413, 1734,
	414, 1734,
	415, 1734,
	416, 1734,
	417, 1734,
	418, 1734,
	419, 1734,
	420, 1734,
	421, 1734,
	422, 1734,
	423, 1734,
	424, 1734,
	426, 1734,
	428, 1734,
	429, 1734,
	430, 1734,
	436, 1734,
	437, 1734,
	438, 1734,
	440, 1734,
	441, 1734,
	442, 1734,
	443, 1734,
	444, 1734,
	445, 1734,
	446, 1734,
	447, 1734,
	448, 1734,
	449, 1734,
	451, 1734,
	452, 1734,
	453, 1734,
	454, 1734,
	455, 1734,
	456, 1734,
	457, 1734,
	458, 1734,
	459, 1734,
	460, 1734,
	461, 1734,
	463, 1734,
	464, 1734,
	465, 1734,
	466, 1734,
	467, 1734,
	468, 1734,
	469, 1734,
	470, 1734,
	471, 1734,
	472, 1734,
	473, 1734,
	474, 1734,
	475, 1734,
	477, 1734,
	478, 1734,
	479, 1734,
	480, 1734,
	481, 1734,
	482, 1734,
	483, 1734,
	484, 1734,
	485, 1734,
	486, 1734,
	487, 1734,
	488, 1734,
	489, 1734,
	490, 1734,
	491, 1734,
	492, 1734,
	493, 1734,
	494, 1734,
	495, 1734,
	496, 1734,
	497, 1734,
	498, 1734,
	500, 1734,
	502, 1734,
	503, 1734,
	504, 1734,
	505, 1734,
	506, 1734,
	507, 1734,
	508, 1734,
	509, 1734,
	510, 1734,
	511, 1734,
	512, 1734,
	513, 1734,
	514, 1734,
	515, 1734,
	516, 1734,
	517, 1734,
	518, 1734,
	519, 1734,
	520, 1734,
	522, 1734,
	523, 1734,
	524, 1734,
	525, 1734,
	526, 1734,
	528, 1734,
	529, 1734,
	530, 1734,
	531, 1734,
	532, 1734,
	533, 1734,
	535, 1734,
	536, 1734,
	538, 1734,
	539, 1734,
	540, 1734,
	541, 1734,
	542, 1734,
	544, 1734,
	546, 1734,
	547, 1734,
	548, 1734,
	549, 1734,
	550, 1734,
	551, 1734,
	552, 1734,
	553, 1734,
	554, 1734,
	555, 1734,
	556, 1734,
	557, 1734,
	559, 1734,
	560, 1734,
	562, 1734,
	563, 1734,
	564, 1734,
	565, 1734,
	566, 1734,
	567, 1734,
	568, 1734,
	569, 1734,
	570, 1734,
	571, 1734,
	572, 1734,
	575, 1734,
	576, 1734,
	577, 1734,
	578, 1734,
	579, 1734,
	580, 1734,
	582, 1734,
	583, 1734,
	584, 1734,
	585, 1734,
	586, 1734,
	587, 1734,
	588, 1734,
	589, 1734,
	594, 1734,
	595, 1734,
	596, 1734,
	597, 1734,
	598, 1734,
	599, 1734,
	600, 1734,
	614, 1734,
	621, 1734,
	622, 1734,
	623, 1734,
	631, 1734,
	635, 1734,
	-2, 0,
	-1, 797,
	4, 1456,
	21, 1456,
	22, 1456,
	23, 1456,
	24, 1456,
	25, 1456,
	26, 1456,
	27, 1456,
	28, 1456,
	30, 1456,
	31, 1456,
	37, 1456,
	41, 1456,
	43, 1456,
	44, 1456,
	46, 1456,
	47, 1456,
	48, 1456,
	49, 1456,
	50, 1456,
	51, 1456,
	52, 1456,
	53, 1456,
	54, 1456,
	56, 1456,
	57, 1456,
	58, 1456,
	59, 1456,
	61, 1456,
	62, 1456,
	63, 1456,
	64, 1456,
	65, 1456,
	66, 1456,
	67, 1456,
	71, 1456,
	72, 1456,
	73, 1456,
	74, 1456,
	76, 1456,
	77, 1456,
	78, 1456,
	82, 1456,
	83, 1456,
	84, 1456,
	85, 1456,
	86, 1456,
	87, 1456,
	88, 1456,
	89, 1456,
	92, 1456,
	93, 1456,
	94, 1456,
	95, 1456,
	96, 1456,
	98, 1456,
	100, 1456,
	101, 1456,
	102, 1456,
	103, 1456,
	104, 1456,
	105, 1456,
	107, 1456,
	108, 1456,
	109, 1456,
	111, 1456,
	112, 1456,
	113, 1456,
	121, 1456,
	122, 1456,
	123, 1456,
	124, 1456,
	125, 1456,
	127, 1456,
	128, 1456,
	129, 1456,
	130, 1456,
	132, 1456,
	133, 1456,
	134, 1456,
	136, 1456,
	137, 1456,
	138, 1456,
	140, 1456,
	141, 1456,
	142, 1456,
	145, 1456,
	146, 1456,
	147, 1456,
	149, 1456,
	150, 1456,
	151, 1456,
	153, 1456,
	154, 1456,
	155, 1456,
	157, 1456,
	158, 1456,
	159, 1456,
	160, 1456,
	161, 1456,
	162, 1456,
	163, 1456,
	164, 1456,
	165, 1456,
	166, 1456,
	167, 1456,
	168, 1456,
	169, 1456,
	170, 1456,
	171, 1456,
	172, 1456,
	173, 1456,
	175, 1456,
	181, 1456,
	182, 1456,
	183, 1456,
	184, 1456,
	188, 1456,
	190, 1456,
	191, 1456,
	192, 1456,
	194, 1456,
	195, 1456,
	198, 1456,
	199, 1456,
	200, 1456,
	201, 1456,
	202, 1456,
	203, 1456,
	204, 1456,
	205, 1456,
	206, 1456,
	207, 1456,
	208, 1456,
	209, 1456,
	210, 1456,
	211, 1456,
	213, 1456,
	214, 1456,
	216, 1456,
	217, 1456,
	219, 1456,
	220, 1456,
	221, 1456,
	222, 1456,
	223, 1456,
	224, 1456,
	225, 1456,
	226, 1456,
	227, 1456,
	228, 1456,
	229, 1456,
	231, 1456,
	232, 1456,
	234, 1456,
	235, 1456,
	236, 1456,
	237, 1456,
	238, 1456,
	242, 1456,
	243, 1456,
	244, 1456,
	245, 1456,
	248, 1456,
	249, 1456,
	250, 1456,
	251, 1456,
	253, 1456,
	255, 1456,
	256, 1456,
	258, 1456,
	260, 1456,
	261, 1456,
	262, 1456,
	264, 1456,
	268, 1456,
	269, 1456,
	270, 1456,
	271, 1456,
	272, 1456,
	273, 1456,
	275, 1456,
	276, 1456,
	277, 1456,
	279, 1456,
	280, 1456,
	282, 1456,
	283, 1456,
	286, 1456,
	287, 1456,
	288, 1456,
	289, 1456,
	290, 1456,
	291, 1456,
	292, 1456,
	295, 1456,
	296, 1456,
	297, 1456,
	298, 1456,
	300, 1456,
	301, 1456,
	302, 1456,
	303, 1456,
	304, 1456,
	305, 1456,
	306, 1456,
	307, 1456,
	308, 1456,
	309, 1456,
	310, 1456,
	311, 1456,
	312, 1456,
	313, 1456,
	314, 1456,
	315, 1456,
	316, 1456,
	317, 1456,
	318, 1456,
	319, 1456,
	320, 1456,
	321, 1456,
	322, 1456,
	324, 1456,
	326, 1456,
	327, 1456,
	328, 1456,
	329, 1456,
	330, 1456,
	331, 1456,
	332, 1456,
	333, 1456,
	334, 1456,
	335, 1456,
	336, 1456,
	337, 1456,
	338, 1456,
	339, 1456,
	340, 1456,
	341, 1456,
	342, 1456,
	344, 1456,
	345, 1456,
	347, 1456,
	349, 1456,
	350, 1456,
	351, 1456,
	352, 1456,
	354, 1456,
	355, 1456,
	356, 1456,
	357, 1456,
	358, 1456,
	361, 1456,
	363, 1456,
	366, 1456,
	367, 1456,
	368, 1456,
	371, 1456,
	372, 1456,
	373, 1456,
	375, 1456,
	377, 1456,
	378, 1456,
	379, 1456,
	380, 1456,
	381, 1456,
	382, 1456,
	383, 1456,
	384, 1456,
	385, 1456,
	386, 1456,
	387, 1456,
	388, 1456,
	389, 1456,
	391, 1456,
	392, 1456,
	393, 1456,
	394, 1456,
	395, 1456,
	396, 1456,
	397, 1456,
	398, 1456,
	399, 1456,
	400, 1456,
	401, 1456,
	402, 1456,
	403, 1456,
	404, 1456,
	405, 1456,
	407, 1456,
	408, 1456,
	409, 1456,
	411, 1456,
	412, 1456,
	413, 1456,
	414, 1456,
	415, 1456,
	416, 1456,
	417, 1456,
	418, 1456,
	419, 1456,
	420, 1456,
	421, 1456,
	422, 1456,
	423, 1456,
	424, 1456,
	426, 1456,
	428, 1456,
	429, 1456,
	430, 1456,
	436, 1456,
	437, 1456,
	438, 1456,
	440, 1456,
	441, 1456,
	442, 1456,
	443, 1456,
	444, 1456,
	445, 1456,
	446, 1456,
	447, 1456,
	448, 1456,
	449, 1456,
	451, 1456,
	452, 1456,
	453, 1456,
	455, 1456,
	456, 1456,
	457, 1456,
	458, 1456,
	459, 1456,
	460, 1456,
	461, 1456,
	463, 1456,
	464, 1456,
	465, 1456,
	466, 1456,
	467, 1456,
	468, 1456,
	469, 1456,
	470, 1456,
	471, 1456,
	472, 1456,
	473, 1456,
	474, 1456,
	475, 1456,
	477, 1456,
	478, 1456,
	479, 1456,
	480, 1456,
	481, 1456,
	482, 1456,
	484, 1456,
	485, 1456,
	486, 1456,
	487, 1456,
	488, 1456,
	489, 1456,
	491, 1456,
	492, 1456,
	493, 1456,
	494, 1456,
	495, 1456,
	496, 1456,
	497, 1456,
	498, 1456,
	500, 1456,
	502, 1456,
	503, 1456,
	504, 1456,
	505, 1456,
	506, 1456,
	507, 1456,
	508, 1456,
	509, 1456,
	510, 1456,
	511, 1456,
	512, 1456,
	513, 1456,
	514, 1456,
	515, 1456,
	516, 1456,
	517, 1456,
	518, 1456,
	519, 1456,
	520, 1456,
	522, 1456,
	523, 1456,
	525, 1456,
	526, 1456,
	528, 1456,
	529, 1456,
	530, 1456,
	531, 1456,
	532, 1456,
	533, 1456,
	535, 1456,
	536, 1456,
	538, 1456,
	539, 1456,
	540, 1456,
	541, 1456,
	542, 1456,
	544, 1456,
	546, 1456,
	547, 1456,
	548, 1456,
	549, 1456,
	550, 1456,
	551, 1456,
	552, 1456,
	554, 1456,
	555, 1456,
	556, 1456,
	557, 1456,
	559, 1456,
	560, 1456,
	563, 1456,
	564, 1456,
	565, 1456,
	566, 1456,
	567, 1456,
	568, 1456,
	569, 1456,
	570, 1456,
	572, 1456,
	575, 1456,
	576, 1456,
	577, 1456,
	578, 1456,
	579, 1456,
	580, 1456,
	582, 1456,
	583, 1456,
	584, 1456,
	585, 1456,
	586, 1456,
	587, 1456,
	588, 1456,
	589, 1456,
	594, 1456,
	595, 1456,
	596, 1456,
	597, 1456,
	598, 1456,
	599, 1456,
	-2, 0,
	-1, 816,
	196, 2530,
	543, 2530,
	613, 2530,
	633, 2530,
	-2, 0,
	-1, 817,
	196, 2516,
	543, 2516,
	613, 2516,
	633, 2516,
	-2, 0,
	-1, 819,
	196, 2797,
	543, 2797,
	613, 2797,
	633, 2797,
	-2, 0,
	-1, 822,
	196, 2646,
	543, 2646,
	613, 2646,
	633, 2646,
	-2, 0,
	-1, 823,
	196, 2841,
	543, 2841,
	613, 2841,
	633, 2841,
	-2, 0,
	-1, 831,
	196, 2674,
	543, 2674,
	613, 2674,
	633, 2674,
	-2, 775,
	-1, 847,
	8, 908,
	29, 908,
	621, 908,
	622, 908,
	-2, 913,
	-1, 851,
	1, 2584,
	634, 2584,
	-2, 913,
	-1, 852,
	1, 2634,
	634, 2634,
	-2, 913,
	-1, 855,
	1, 2679,
	634, 2679,
	-2, 906,
	-1, 856,
	1, 2735,
	634, 2735,
	-2, 907,
	-1, 857,
	1, 2589,
	634, 2589,
	-2, 910,
	-1, 858,
	1, 2503,
	634, 2503,
	-2, 911,
	-1, 893,
	633, 2462,
	636, 2462,
	-2, 1122,
	-1, 894,
	633, 2464,
	636, 2464,
	-2, 1123,
	-1, 895,
	633, 2463,
	636, 2463,
	-2, 1124,
	-1, 896,
	636, 2388,
	-2, 1125,
	-1, 921,
	189, 287,
	-2, 0,
	-1, 945,
	45, 2435,
	-2, 0,
	-1, 946,
	582, 1434,
	-2, 1206,
	-1, 962,
	4, 1868,
	21, 1868,
	22, 1868,
	23, 1868,
	24, 1868,
	25, 1868,
	26, 1868,
	27, 1868,
	28, 1868,
	30, 1868,
	31, 1868,
	37, 1868,
	41, 1868,
	43, 1868,
	44, 1868,
	46, 1868,
	47, 1868,
	48, 1868,
	49, 1868,
	50, 1868,
	51, 1868,
	52, 1868,
	53, 1868,
	54, 1868,
	56, 1868,
	57, 1868,
	58, 1868,
	59, 1868,
	61, 1868,
	62, 1868,
	63, 1868,
	64, 1868,
	65, 1868,
	66, 1868,
	67, 1868,
	71, 1868,
	72, 1868,
	73, 1868,
	74, 1868,
	76, 1868,
	77, 1868,
	78, 1868,
	82, 1868,
	83, 1868,
	84, 1868,
	85, 1868,
	86, 1868,
	87, 1868,
	88, 1868,
	89, 1868,
	92, 1868,
	93, 1868,
	94, 1868,
	95, 1868,
	96, 1868,
	98, 1868,
	100, 1868,
	101, 1868,
	102, 1868,
	103, 1868,
	104, 1868,
	105, 1868,
	107, 1868,
	108, 1868,
	109, 1868,
	111, 1868,
	112, 1868,
	113, 1868,
	121, 1868,
	122, 1868,
	123, 1868,
	124, 1868,
	125, 1868,
	127, 1868,
	128, 1868,
	129, 1868,
	130, 1868,
	132, 1868,
	133, 1868,
	134, 1868,
	136, 1868,
	137, 1868,
	138, 1868,
	140, 1868,
	141, 1868,
	142, 1868,
	145, 1868,
	146, 1868,
	147, 1868,
	149, 1868,
	150, 1868,
	151, 1868,
	153, 1868,
	154, 1868,
	155, 1868,
	157, 1868,
	158, 1868,
	159, 1868,
	160, 1868,
	161, 1868,
	162, 1868,
	163, 1868,
	164, 1868,
	165, 1868,
	166, 1868,
	167, 1868,
	168, 1868,
	169, 1868,
	170, 1868,
	171, 1868,
	172, 1868,
	173, 1868,
	175, 1868,
	181, 1868,
	182, 1868,
	183, 1868,
	184, 1868,
	188, 1868,
	190, 1868,
	191, 1868,
	192, 1868,
	194, 1868,
	195, 1868,
	198, 1868,
	199, 1868,
	200, 1868,
	201, 1868,
	202, 1868,
	203, 1868,
	204, 1868,
	205, 1868,
	206, 1868,
	207, 1868,
	208, 1868,
	209, 1868,
	210, 1868,
	211, 1868,
	213, 1868,
	214, 1868,
	216, 1868,
	217, 1868,
	219, 1868,
	220, 1868,
	221, 1868,
	222, 1868,
	223, 1868,
	224, 1868,
	225, 1868,
	226, 1868,
	227, 1868,
	228, 1868,
	229, 1868,
	231, 1868,
	232, 1868,
	234, 1868,
	235, 1868,
	236, 1868,
	237, 1868,
	238, 1868,
	242, 1868,
	243, 1868,
	244, 1868,
	245, 1868,
	248, 1868,
	249, 1868,
	250, 1868,
	251, 1868,
	253, 1868,
	255, 1868,
	256, 1868,
	258, 1868,
	260, 1868,
	261, 1868,
	262, 1868,
	264, 1868,
	268, 1868,
	269, 1868,
	270, 1868,
	271, 1868,
	272, 1868,
	273, 1868,
	275, 1868,
	276, 1868,
	277, 1868,
	279, 1868,
	280, 1868,
	282, 1868,
	283, 1868,
	286, 1868,
	287, 1868,
	288, 1868,
	289, 1868,
	290, 1868,
	291, 1868,
	292, 1868,
	295, 1868,
	296, 1868,
	297, 1868,
	298, 1868,
	300, 1868,
	301, 1868,
	302, 1868,
	303, 1868,
	304, 1868,
	305, 1868,
	306, 1868,
	307, 1868,
	308, 1868,
	309, 1868,
	310, 1868,
	311, 1868,
	312, 1868,
	313, 1868,
	314, 1868,
	315, 1868,
	316, 1868,
	317, 1868,
	318, 1868,
	319, 1868,
	320, 1868,
	321, 1868,
	322, 1868,
	324, 1868,
	326, 1868,
	327, 1868,
	328, 1868,
	329, 1868,
	330, 1868,
	331, 1868,
	332, 1868,
	333, 1868,
	334, 1868,
	335, 1868,
	336, 1868,
	337, 1868,
	338, 1868,
	339, 1868,
	340, 1868,
	341, 1868,
	342, 1868,
	344, 1868,
	345, 1868,
	347, 1868,
	349, 1868,
	350, 1868,
	351, 1868,
	352, 1868,
	354, 1868,
	355, 1868,
	356, 1868,
	357, 1868,
	358, 1868,
	361, 1868,
	363, 1868,
	366, 1868,
	367, 1868,
	368, 1868,
	371, 1868,
	372, 1868,
	373, 1868,
	375, 1868,
	377, 1868,
	378, 1868,
	379, 1868,
	380, 1868,
	381, 1868,
	382, 1868,
	383, 1868,
	384, 1868,
	385, 1868,
	386, 1868,
	387, 1868,
	388, 1868,
	389, 1868,
	391, 1868,
	392, 1868,
	393, 1868,
	394, 1868,
	395, 1868,
	396, 1868,
	397, 1868,
	398, 1868,
	399, 1868,
	400, 1868,
	401, 1868,
	402, 1868,
	403, 1868,
	404, 1868,
	405, 1868,
	407, 1868,
	408, 1868,
	409, 1868,
	411, 1868,
	412, 1868,
	413, 1868,
	414, 1868,
	415, 1868,
	416, 1868,
	417, 1868,
	418, 1868,
	419, 1868,
	420, 1868,
	421, 1868,
	422, 1868,
	423, 1868,
	424, 1868,
	426, 1868,
	428, 1868,
	429, 1868,
	430, 1868,
	436, 1868,
	437, 1868,
	438, 1868,
	440, 1868,
	441, 1868,
	442, 1868,
	443, 1868,
	444, 1868,
	445, 1868,
	446, 1868,
	447, 1868,
	448, 1868,
	449, 1868,
	451, 1868,
	452, 1868,
	453, 1868,
	455, 1868,
	456, 1868,
	457, 1868,
	458, 1868,
	459, 1868,
	460, 1868,
	461, 1868,
	463, 1868,
	464, 1868,
	465, 1868,
	466, 1868,
	467, 1868,
	468, 1868,
	469, 1868,
	470, 1868,
	471, 1868,
	472, 1868,
	473, 1868,
	474, 1868,
	475, 1868,
	477, 1868,
	478, 1868,
	479, 1868,
	480, 1868,
	481, 1868,
	482, 1868,
	484, 1868,
	485, 1868,
	486, 1868,
	487, 1868,
	488, 1868,
	489, 1868,
	491, 1868,
	492, 1868,
	493, 1868,
	494, 1868,
	495, 1868,
	496, 1868,
	497, 1868,
	498, 1868,
	500, 1868,
	502, 1868,
	503, 1868,
	504, 1868,
	505, 1868,
	506, 1868,
	507, 1868,
	508, 1868,
	509, 1868,
	510, 1868,
	511, 1868,
	512, 1868,
	513, 1868,
	514, 1868,
	515, 1868,
	516, 1868,
	517, 1868,
	518, 1868,
	519, 1868,
	520, 1868,
	522, 1868,
	523, 1868,
	525, 1868,
	526, 1868,
	528, 1868,
	529, 1868,
	530, 1868,
	531, 1868,
	532, 1868,
	533, 1868,
	535, 1868,
	536, 1868,
	538, 1868,
	539, 1868,
	540, 1868,
	541, 1868,
	542, 1868,
	544, 1868,
	546, 1868,
	547, 1868,
	548, 1868,
	549, 1868,
	550, 1868,
	551, 1868,
	552, 1868,
	554, 1868,
	555, 1868,
	556, 1868,
	557, 1868,
	559, 1868,
	560, 1868,
	563, 1868,
	564, 1868,
	565, 1868,
	566, 1868,
	567, 1868,
	568, 1868,
	569, 1868,
	570, 1868,
	572, 1868,
	575, 1868,
	576, 1868,
	577, 1868,
	578, 1868,
	579, 1868,
	580, 1868,
	582, 1868,
	583, 1868,
	584, 1868,
	585, 1868,
	586, 1868,
	587, 1868,
	588, 1868,
	589, 1868,
	594, 1868,
	595, 1868,
	596, 1868,
	597, 1868,
	598, 1868,
	599, 1868,
	-2, 0,
	-1, 972,
	272, 452,
	-2, 0,
	-1, 1051,
	413, 998,
	482, 998,
	526, 998,
	548, 998,
	-2, 0,
	-1, 1052,
	413, 997,
	482, 997,
	526, 997,
	548, 997,
	-2, 926,
	-1, 1056,
	1, 1050,
	630, 1050,
	632, 1050,
	634, 1050,
	-2, 0,
	-1, 1058,
	1, 972,
	630, 972,
	632, 972,
	634, 972,
	-2, 0,
	-1, 1059,
	1, 976,
	630, 976,
	632, 976,
	634, 976,
	-2, 0,
	-1, 1060,
	1, 1121,
	189, 1121,
	630, 1121,
	632, 1121,
	634, 1121,
	-2, 0,
	-1, 1068,
	1, 1003,
	630, 1003,
	632, 1003,
	634, 1003,
	-2, 0,
	-1, 1075,
	1, 1050,
	630, 1050,
	632, 1050,
	634, 1050,
	-2, 0,
	-1, 1076,
	1, 1052,
	630, 1052,
	632, 1052,
	634, 1052,
	-2, 0,
	-1, 1077,
	1, 1055,
	630, 1055,
	632, 1055,
	634, 1055,
	-2, 0,
	-1, 1085,
	1, 1085,
	630, 1085,
	632, 1085,
	634, 1085,
	-2, 0,
	-1, 1086,
	1, 1087,
	630, 1087,
	632, 1087,
	634, 1087,
	-2, 0,
	-1, 1091,
	1, 1115,
	630, 1115,
	632, 1115,
	634, 1115,
	-2, 0,
	-1, 1145,
	176, 1738,
	189, 1738,
	285, 1738,
	359, 1738,
	-2, 1674,
	-1, 1161,
	176, 1737,
	189, 1737,
	285, 1737,
	359, 1737,
	-2, 1671,
	-1, 1188,
	633, 2461,
	-2, 783,
	-1, 1217,
	5, 2453,
	631, 2451,
	-2, 2442,
	-1, 1225,
	5, 2474,
	631, 2471,
	-2, 2462,
	-1, 1226,
	5, 2475,
	631, 2472,
	-2, 2463,
	-1, 1234,
	633, 2459,
	-2, 2441,
	-1, 1235,
	631, 2929,
	-2, 2460,
	-1, 1258,
	631, 2928,
	-2, 2476,
	-1, 1259,
	5, 1943,
	-2, 2899,
	-1, 1260,
	5, 1944,
	-2, 2900,
	-1, 1261,
	5, 1945,
	-2, 2914,
	-1, 1262,
	5, 1946,
	-2, 2878,
	-1, 1263,
	5, 1947,
	-2, 2912,
	-1, 1264,
	5, 1955,
	-2, 2891,
	-1, 1265,
	5, 1942,
	-2, 2887,
	-1, 1266,
	5, 1942,
	-2, 2886,
	-1, 1267,
	5, 1942,
	-2, 2905,
	-1, 1268,
	5, 1953,
	-2, 2880,
	-1, 1269,
	5, 1958,
	-2, 2879,
	-1, 1270,
	5, 1960,
	-2, 2924,
	-1, 1273,
	5, 1982,
	-2, 2917,
	-1, 1274,
	5, 1974,
	-2, 2918,
	-1, 1275,
	5, 1982,
	-2, 2919,
	-1, 1276,
	5, 1978,
	-2, 2920,
	-1, 1277,
	5, 1928,
	-2, 2892,
	-1, 1278,
	5, 1929,
	-2, 2893,
	-1, 1279,
	5, 1930,
	-2, 2881,
	-1, 1307,
	5, 1965,
	-2, 2925,
	-1, 1308,
	5, 1966,
	-2, 2915,
	-1, 1309,
	5, 1967,
	583, 1967,
	-2, 2882,
	-1, 1310,
	5, 1968,
	583, 1968,
	-2, 2883,
	-1, 1348,
	631, 2471,
	-2, 2462,
	-1, 1349,
	631, 2472,
	-2, 2463,
	-1, 1447,
	196, 2841,
	543, 2841,
	613, 2841,
	633, 2841,
	-2, 0,
	-1, 1452,
	1, 759,
	634, 759,
	-2, 1583,
	-1, 1599,
	379, 2436,
	440, 2436,
	484, 2436,
	623, 2436,
	-2, 2426,
	-1, 1605,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2837,
	-1, 1606,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2575,
	-1, 1607,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2758,
	-1, 1613,
	635, 2436,
	-2, 2438,
	-1, 1637,
	1, 1431,
	445, 1386,
	484, 1386,
	606, 1386,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1723,
	-1, 1643,
	212, 1528,
	233, 1528,
	453, 1528,
	-2, 0,
	-1, 1692,
	422, 1205,
	582, 1205,
	-2, 447,
	-1, 1709,
	45, 2434,
	-2, 1168,
	-1, 1716,
	1, 1431,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1723,
	-1, 1724,
	4, 1456,
	21, 1456,
	22, 1456,
	23, 1456,
	24, 1456,
	25, 1456,
	26, 1456,
	27, 1456,
	28, 1456,
	30, 1456,
	31, 1456,
	37, 1456,
	41, 1456,
	43, 1456,
	44, 1456,
	46, 1456,
	47, 1456,
	48, 1456,
	49, 1456,
	50, 1456,
	51, 1456,
	52, 1456,
	53, 1456,
	54, 1456,
	56, 1456,
	57, 1456,
	58, 1456,
	59, 1456,
	61, 1456,
	62, 1456,
	63, 1456,
	64, 1456,
	65, 1456,
	66, 1456,
	67, 1456,
	71, 1456,
	72, 1456,
	73, 1456,
	74, 1456,
	76, 1456,
	77, 1456,
	78, 1456,
	82, 1456,
	83, 1456,
	84, 1456,
	85, 1456,
	86, 1456,
	87, 1456,
	88, 1456,
	89, 1456,
	92, 1456,
	93, 1456,
	94, 1456,
	95, 1456,
	96, 1456,
	98, 1456,
	100, 1456,
	101, 1456,
	102, 1456,
	103, 1456,
	104, 1456,
	105, 1456,
	107, 1456,
	108, 1456,
	109, 1456,
	111, 1456,
	112, 1456,
	113, 1456,
	121, 1456,
	122, 1456,
	123, 1456,
	124, 1456,
	125, 1456,
	127, 1456,
	128, 1456,
	129, 1456,
	130, 1456,
	132, 1456,
	133, 1456,
	134, 1456,
	136, 1456,
	137, 1456,
	138, 1456,
	140, 1456,
	141, 1456,
	142, 1456,
	145, 1456,
	146, 1456,
	147, 1456,
	149, 1456,
	150, 1456,
	151, 1456,
	153, 1456,
	154, 1456,
	155, 1456,
	157, 1456,
	158, 1456,
	159, 1456,
	160, 1456,
	161, 1456,
	162, 1456,
	163, 1456,
	164, 1456,
	165, 1456,
	166, 1456,
	167, 1456,
	168, 1456,
	169, 1456,
	170, 1456,
	171, 1456,
	172, 1456,
	173, 1456,
	181, 1456,
	182, 1456,
	183, 1456,
	184, 1456,
	188, 1456,
	190, 1456,
	191, 1456,
	192, 1456,
	194, 1456,
	195, 1456,
	198, 1456,
	199, 1456,
	200, 1456,
	201, 1456,
	202, 1456,
	203, 1456,
	204, 1456,
	205, 1456,
	206, 1456,
	207, 1456,
	208, 1456,
	209, 1456,
	210, 1456,
	211, 1456,
	213, 1456,
	214, 1456,
	216, 1456,
	217, 1456,
	219, 1456,
	220, 1456,
	221, 1456,
	222, 1456,
	223, 1456,
	224, 1456,
	225, 1456,
	226, 1456,
	227, 1456,
	228, 1456,
	229, 1456,
	231, 1456,
	232, 1456,
	234, 1456,
	235, 1456,
	236, 1456,
	237, 1456,
	238, 1456,
	243, 1456,
	244, 1456,
	245, 1456,
	248, 1456,
	249, 1456,
	250, 1456,
	251, 1456,
	253, 1456,
	255, 1456,
	256, 1456,
	258, 1456,
	260, 1456,
	261, 1456,
	262, 1456,
	264, 1456,
	268, 1456,
	269, 1456,
	270, 1456,
	271, 1456,
	272, 1456,
	273, 1456,
	275, 1456,
	276, 1456,
	277, 1456,
	279, 1456,
	280, 1456,
	282, 1456,
	283, 1456,
	286, 1456,
	287, 1456,
	288, 1456,
	289, 1456,
	290, 1456,
	291, 1456,
	292, 1456,
	295, 1456,
	296, 1456,
	297, 1456,
	298, 1456,
	300, 1456,
	301, 1456,
	302, 1456,
	303, 1456,
	304, 1456,
	305, 1456,
	306, 1456,
	307, 1456,
	308, 1456,
	309, 1456,
	310, 1456,
	311, 1456,
	312, 1456,
	313, 1456,
	314, 1456,
	315, 1456,
	316, 1456,
	317, 1456,
	318, 1456,
	319, 1456,
	320, 1456,
	321, 1456,
	322, 1456,
	324, 1456,
	326, 1456,
	327, 1456,
	328, 1456,
	329, 1456,
	330, 1456,
	331, 1456,
	332, 1456,
	333, 1456,
	334, 1456,
	335, 1456,
	336, 1456,
	337, 1456,
	338, 1456,
	339, 1456,
	340, 1456,
	341, 1456,
	342, 1456,
	344, 1456,
	345, 1456,
	349, 1456,
	350, 1456,
	351, 1456,
	352, 1456,
	354, 1456,
	355, 1456,
	356, 1456,
	357, 1456,
	358, 1456,
	361, 1456,
	363, 1456,
	364, 1456,
	366, 1456,
	367, 1456,
	368, 1456,
	371, 1456,
	372, 1456,
	373, 1456,
	375, 1456,
	377, 1456,
	378, 1456,
	379, 1456,
	380, 1456,
	381, 1456,
	382, 1456,
	383, 1456,
	384, 1456,
	385, 1456,
	386, 1456,
	387, 1456,
	388, 1456,
	389, 1456,
	391, 1456,
	392, 1456,
	393, 1456,
	394, 1456,
	395, 1456,
	396, 1456,
	397, 1456,
	398, 1456,
	399, 1456,
	400, 1456,
	401, 1456,
	402, 1456,
	403, 1456,
	404, 1456,
	405, 1456,
	407, 1456,
	408, 1456,
	409, 1456,
	411, 1456,
	412, 1456,
	413, 1456,
	414, 1456,
	415, 1456,
	416, 1456,
	417, 1456,
	418, 1456,
	419, 1456,
	420, 1456,
	421, 1456,
	422, 1456,
	423, 1456,
	424, 1456,
	426, 1456,
	428, 1456,
	429, 1456,
	430, 1456,
	436, 1456,
	437, 1456,
	438, 1456,
	440, 1456,
	441, 1456,
	442, 1456,
	443, 1456,
	444, 1456,
	445, 1456,
	446, 1456,
	447, 1456,
	448, 1456,
	449, 1456,
	451, 1456,
	452, 1456,
	453, 1456,
	455, 1456,
	456, 1456,
	457, 1456,
	458, 1456,
	459, 1456,
	460, 1456,
	461, 1456,
	463, 1456,
	464, 1456,
	465, 1456,
	466, 1456,
	467, 1456,
	468, 1456,
	469, 1456,
	470, 1456,
	471, 1456,
	472, 1456,
	473, 1456,
	474, 1456,
	475, 1456,
	477, 1456,
	478, 1456,
	479, 1456,
	480, 1456,
	481, 1456,
	482, 1456,
	484, 1456,
	485, 1456,
	486, 1456,
	487, 1456,
	488, 1456,
	489, 1456,
	491, 1456,
	492, 1456,
	493, 1456,
	494, 1456,
	495, 1456,
	496, 1456,
	497, 1456,
	498, 1456,
	500, 1456,
	502, 1456,
	503, 1456,
	504, 1456,
	505, 1456,
	506, 1456,
	507, 1456,
	508, 1456,
	509, 1456,
	510, 1456,
	511, 1456,
	512, 1456,
	513, 1456,
	514, 1456,
	515, 1456,
	516, 1456,
	517, 1456,
	518, 1456,
	519, 1456,
	520, 1456,
	522, 1456,
	523, 1456,
	525, 1456,
	526, 1456,
	528, 1456,
	529, 1456,
	530, 1456,
	531, 1456,
	532, 1456,
	533, 1456,
	535, 1456,
	536, 1456,
	538, 1456,
	539, 1456,
	540, 1456,
	541, 1456,
	542, 1456,
	544, 1456,
	546, 1456,
	547, 1456,
	548, 1456,
	549, 1456,
	550, 1456,
	551, 1456,
	552, 1456,
	554, 1456,
	555, 1456,
	556, 1456,
	557, 1456,
	559, 1456,
	560, 1456,
	563, 1456,
	564, 1456,
	565, 1456,
	566, 1456,
	567, 1456,
	568, 1456,
	569, 1456,
	570, 1456,
	572, 1456,
	575, 1456,
	576, 1456,
	577, 1456,
	578, 1456,
	579, 1456,
	580, 1456,
	582, 1456,
	583, 1456,
	584, 1456,
	585, 1456,
	586, 1456,
	587, 1456,
	588, 1456,
	589, 1456,
	594, 1456,
	595, 1456,
	596, 1456,
	597, 1456,
	598, 1456,
	599, 1456,
	-2, 0,
	-1, 1747,
	1, 594,
	630, 594,
	632, 594,
	634, 594,
	-2, 1694,
	-1, 1750,
	4, 2923,
	11, 2923,
	12, 2923,
	14, 2923,
	15, 2923,
	16, 2923,
	17, 2923,
	18, 2923,
	19, 2923,
	21, 2923,
	22, 2923,
	23, 2923,
	24, 2923,
	25, 2923,
	26, 2923,
	27, 2923,
	28, 2923,
	30, 2923,
	31, 2923,
	34, 2923,
	35, 2923,
	37, 2923,
	39, 2923,
	41, 2923,
	43, 2923,
	44, 2923,
	46, 2923,
	47, 2923,
	48, 2923,
	49, 2923,
	50, 2923,
	51, 2923,
	52, 2923,
	53, 2923,
	54, 2923,
	56, 2923,
	57, 2923,
	58, 2923,
	59, 2923,
	61, 2923,
	62, 2923,
	63, 2923,
	64, 2923,
	65, 2923,
	66, 2923,
	67, 2923,
	70, 2923,
	71, 2923,
	72, 2923,
	73, 2923,
	74, 2923,
	76, 2923,
	77, 2923,
	78, 2923,
	79, 2923,
	82, 2923,
	83, 2923,
	84, 2923,
	85, 2923,
	86, 2923,
	87, 2923,
	88, 2923,
	89, 2923,
	90, 2923,
	92, 2923,
	93, 2923,
	94, 2923,
	95, 2923,
	96, 2923,
	98, 2923,
	99, 2923,
	100, 2923,
	101, 2923,
	102, 2923,
	103, 2923,
	104, 2923,
	105, 2923,
	107, 2923,
	108, 2923,
	109, 2923,
	110, 2923,
	111, 2923,
	112, 2923,
	113, 2923,
	121, 2923,
	122, 2923,
	123, 2923,
	124, 2923,
	125, 2923,
	127, 2923,
	128, 2923,
	129, 2923,
	130, 2923,
	132, 2923,
	133, 2923,
	134, 2923,
	136, 2923,
	137, 2923,
	138, 2923,
	140, 2923,
	141, 2923,
	142, 2923,
	145, 2923,
	146, 2923,
	147, 2923,
	149, 2923,
	150, 2923,
	151, 2923,
	153, 2923,
	154, 2923,
	155, 2923,
	157, 2923,
	158, 2923,
	159, 2923,
	160, 2923,
	161, 2923,
	162, 2923,
	163, 2923,
	164, 2923,
	165, 2923,
	166, 2923,
	167, 2923,
	168, 2923,
	169, 2923,
	170, 2923,
	171, 2923,
	172, 2923,
	173, 2923,
	177, 2923,
	178, 2923,
	179, 2923,
	180, 2923,
	181, 2923,
	182, 2923,
	183, 2923,
	184, 2923,
	187, 2923,
	188, 2923,
	190, 2923,
	191, 2923,
	192, 2923,
	194, 2923,
	195, 2923,
	197, 2923,
	198, 2923,
	199, 2923,
	200, 2923,
	201, 2923,
	202, 2923,
	203, 2923,
	204, 2923,
	205, 2923,
	206, 2923,
	207, 2923,
	208, 2923,
	209, 2923,
	210, 2923,
	211, 2923,
	213, 2923,
	214, 2923,
	216, 2923,
	217, 2923,
	219, 2923,
	220, 2923,
	221, 2923,
	222, 2923,
	223, 2923,
	224, 2923,
	225, 2923,
	226, 2923,
	227, 2923,
	228, 2923,
	229, 2923,
	230, 2923,
	231, 2923,
	232, 2923,
	233, 2923,
	234, 2923,
	235, 2923,
	236, 2923,
	237, 2923,
	238, 2923,
	240, 2923,
	241, 2923,
	243, 2923,
	244, 2923,
	245, 2923,
	247, 2923,
	248, 2923,
	249, 2923,
	250, 2923,
	251, 2923,
	253, 2923,
	255, 2923,
	256, 2923,
	257, 2923,
	258, 2923,
	259, 2923,
	260, 2923,
	261, 2923,
	262, 2923,
	263, 2923,
	264, 2923,
	266, 2923,
	267, 2923,
	268, 2923,
	269, 2923,
	270, 2923,
	271, 2923,
	272, 2923,
	273, 2923,
	275, 2923,
	276, 2923,
	277, 2923,
	279, 2923,
	280, 2923,
	281, 2923,
	282, 2923,
	283, 2923,
	284, 2923,
	286, 2923,
	287, 2923,
	288, 2923,
	289, 2923,
	290, 2923,
	291, 2923,
	292, 2923,
	295, 2923,
	296, 2923,
	297, 2923,
	298, 2923,
	299, 2923,
	300, 2923,
	301, 2923,
	302, 2923,
	303, 2923,
	304, 2923,
	305, 2923,
	306, 2923,
	307, 2923,
	308, 2923,
	309, 2923,
	310, 2923,
	311, 2923,
	312, 2923,
	313, 2923,
	314, 2923,
	315, 2923,
	316, 2923,
	317, 2923,
	318, 2923,
	319, 2923,
	320, 2923,
	321, 2923,
	322, 2923,
	324, 2923,
	325, 2923,
	326, 2923,
	327, 2923,
	328, 2923,
	329, 2923,
	330, 2923,
	331, 2923,
	332, 2923,
	333, 2923,
	334, 2923,
	335, 2923,
	336, 2923,
	337, 2923,
	338, 2923,
	339, 2923,
	340, 2923,
	341, 2923,
	342, 2923,
	344, 2923,
	345, 2923,
	348, 2923,
	349, 2923,
	350, 2923,
	351, 2923,
	352, 2923,
	354, 2923,
	355, 2923,
	356, 2923,
	357, 2923,
	358, 2923,
	361, 2923,
	363, 2923,
	366, 2923,
	367, 2923,
	368, 2923,
	369, 2923,
	371, 2923,
	372, 2923,
	373, 2923,
	375, 2923,
	377, 2923,
	378, 2923,
	379, 2923,
	380, 2923,
	381, 2923,
	382, 2923,
	383, 2923,
	384, 2923,
	385, 2923,
	386, 2923,
	387, 2923,
	388, 2923,
	389, 2923,
	391, 2923,
	392, 2923,
	393, 2923,
	394, 2923,
	395, 2923,
	396, 2923,
	397, 2923,
	398, 2923,
	399, 2923,
	400, 2923,
	401, 2923,
	402, 2923,
	403, 2923,
	404, 2923,
	405, 2923,
	407, 2923,
	408, 2923,
	409, 2923,
	411, 2923,
	412, 2923,
	413, 2923,
	414, 2923,
	415, 2923,
	416, 2923,
	417, 2923,
	418, 2923,
	419, 2923,
	420, 2923,
	421, 2923,
	422, 2923,
	423, 2923,
	424, 2923,
	426, 2923,
	428, 2923,
	429, 2923,
	430, 2923,
	436, 2923,
	437, 2923,
	438, 2923,
	439, 2923,
	440, 2923,
	441, 2923,
	442, 2923,
	443, 2923,
	444, 2923,
	445, 2923,
	446, 2923,
	447, 2923,
	448, 2923,
	449, 2923,
	451, 2923,
	452, 2923,
	453, 2923,
	454, 2923,
	455, 2923,
	456, 2923,
	457, 2923,
	458, 2923,
	459, 2923,
	460, 2923,
	461, 2923,
	462, 2923,
	463, 2923,
	464, 2923,
	465, 2923,
	466, 2923,
	467, 2923,
	468, 2923,
	469, 2923,
	470, 2923,
	471, 2923,
	472, 2923,
	473, 2923,
	474, 2923,
	475, 2923,
	477, 2923,
	478, 2923,
	479, 2923,
	480, 2923,
	481, 2923,
	482, 2923,
	484, 2923,
	485, 2923,
	486, 2923,
	487, 2923,
	488, 2923,
	489, 2923,
	490, 2923,
	491, 2923,
	492, 2923,
	493, 2923,
	494, 2923,
	495, 2923,
	496, 2923,
	497, 2923,
	498, 2923,
	500, 2923,
	502, 2923,
	503, 2923,
	504, 2923,
	505, 2923,
	506, 2923,
	507, 2923,
	508, 2923,
	509, 2923,
	510, 2923,
	511, 2923,
	512, 2923,
	513, 2923,
	514, 2923,
	515, 2923,
	516, 2923,
	517, 2923,
	518, 2923,
	519, 2923,
	520, 2923,
	522, 2923,
	523, 2923,
	524, 2923,
	525, 2923,
	526, 2923,
	528, 2923,
	529, 2923,
	530, 2923,
	531, 2923,
	532, 2923,
	533, 2923,
	535, 2923,
	536, 2923,
	538, 2923,
	539, 2923,
	540, 2923,
	541, 2923,
	542, 2923,
	544, 2923,
	546, 2923,
	547, 2923,
	548, 2923,
	549, 2923,
	550, 2923,
	551, 2923,
	552, 2923,
	554, 2923,
	555, 2923,
	556, 2923,
	557, 2923,
	559, 2923,
	560, 2923,
	563, 2923,
	564, 2923,
	565, 2923,
	566, 2923,
	567, 2923,
	568, 2923,
	569, 2923,
	570, 2923,
	572, 2923,
	575, 2923,
	576, 2923,
	577, 2923,
	578, 2923,
	579, 2923,
	580, 2923,
	582, 2923,
	583, 2923,
	584, 2923,
	585, 2923,
	586, 2923,
	587, 2923,
	588, 2923,
	589, 2923,
	594, 2923,
	595, 2923,
	596, 2923,
	597, 2923,
	598, 2923,
	599, 2923,
	600, 2923,
	602, 2923,
	611, 2923,
	612, 2923,
	613, 2923,
	614, 2923,
	615, 2923,
	616, 2923,
	618, 2923,
	619, 2923,
	620, 2923,
	621, 2923,
	622, 2923,
	623, 2923,
	624, 2923,
	625, 2923,
	626, 2923,
	629, 2923,
	632, 2923,
	633, 2923,
	635, 2923,
	636, 2923,
	-2, 0,
	-1, 1755,
	196, 2797,
	543, 2797,
	613, 2797,
	633, 2797,
	-2, 0,
	-1, 1809,
	413, 998,
	482, 998,
	526, 998,
	548, 998,
	-2, 0,
	-1, 1820,
	1, 1528,
	630, 1528,
	632, 1528,
	634, 1528,
	-2, 0,
	-1, 1837,
	1, 993,
	630, 993,
	632, 993,
	634, 993,
	-2, 0,
	-1, 1838,
	1, 1037,
	630, 1037,
	632, 1037,
	634, 1037,
	-2, 0,
	-1, 1839,
	1, 1045,
	630, 1045,
	632, 1045,
	634, 1045,
	-2, 0,
	-1, 1842,
	1, 1002,
	630, 1002,
	632, 1002,
	634, 1002,
	-2, 0,
	-1, 1844,
	1, 1008,
	630, 1008,
	632, 1008,
	634, 1008,
	-2, 0,
	-1, 1847,
	1, 1004,
	630, 1004,
	632, 1004,
	634, 1004,
	-2, 0,
	-1, 1852,
	1, 1018,
	630, 1018,
	632, 1018,
	634, 1018,
	-2, 0,
	-1, 1886,
	1, 2779,
	630, 2779,
	632, 2779,
	633, 2779,
	634, 2779,
	-2, 0,
	-1, 1890,
	1, 1096,
	630, 1096,
	632, 1096,
	634, 1096,
	-2, 0,
	-1, 1907,
	1, 1578,
	634, 1578,
	-2, 1583,
	-1, 1910,
	176, 1737,
	189, 1737,
	285, 1737,
	359, 1737,
	-2, 1675,
	-1, 2010,
	156, 1696,
	176, 1696,
	189, 1696,
	252, 1696,
	285, 1696,
	359, 1696,
	370, 1696,
	561, 1696,
	-2, 2147,
	-1, 2071,
	632, 2322,
	-2, 0,
	-1, 2107,
	156, 1696,
	176, 1696,
	189, 1696,
	252, 1696,
	285, 1696,
	359, 1696,
	370, 1696,
	561, 1696,
	-2, 1829,
	-1, 2147,
	543, 2794,
	633, 2794,
	636, 2794,
	-2, 0,
	-1, 2164,
	631, 1970,
	-2, 1958,
	-1, 2196,
	196, 2794,
	633, 2794,
	636, 2794,
	-2, 0,
	-1, 2239,
	1, 761,
	634, 761,
	-2, 1583,
	-1, 2414,
	233, 282,
	-2, 2470,
	-1, 2415,
	233, 283,
	-2, 338,
	-1, 2526,
	1, 995,
	630, 995,
	632, 995,
	634, 995,
	-2, 0,
	-1, 2527,
	1, 1039,
	630, 1039,
	632, 1039,
	634, 1039,
	-2, 0,
	-1, 2528,
	1, 1047,
	630, 1047,
	632, 1047,
	634, 1047,
	-2, 0,
	-1, 2529,
	1, 1098,
	630, 1098,
	632, 1098,
	634, 1098,
	-2, 0,
	-1, 2570,
	1, 1020,
	630, 1020,
	632, 1020,
	634, 1020,
	-2, 0,
	-1, 2592,
	1, 1081,
	630, 1081,
	632, 1081,
	634, 1081,
	-2, 0,
	-1, 2639,
	460, 1764,
	461, 1764,
	-2, 2003,
	-1, 2670,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2023,
	-1, 2671,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2024,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2025,
	-1, 2673,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2026,
	-1, 2674,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2027,
	-1, 2675,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2028,
	-1, 2676,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2029,
	-1, 2677,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2030,
	-1, 2689,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2042,
	-1, 2690,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2043,
	-1, 2691,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2044,
	-1, 2695,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2051,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2055,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2063,
	-1, 2704,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2064,
	-1, 2705,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2065,
	-1, 2706,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2066,
	-1, 2880,
	5, 2474,
	196, 2333,
	631, 2471,
	-2, 2462,
	-1, 2881,
	196, 2334,
	-2, 2874,
	-1, 2882,
	196, 2335,
	-2, 2672,
	-1, 2883,
	196, 2336,
	-2, 2548,
	-1, 2884,
	196, 2337,
	-2, 2610,
	-1, 2885,
	196, 2338,
	-2, 2657,
	-1, 2886,
	196, 2339,
	-2, 2792,
	-1, 2887,
	196, 2340,
	-2, 2130,
	-1, 2959,
	1, 1830,
	2, 1830,
	110, 1830,
	156, 1830,
	176, 1830,
	189, 1830,
	197, 1830,
	215, 1830,
	218, 1830,
	247, 1830,
	252, 1830,
	263, 1830,
	281, 1830,
	285, 1830,
	325, 1830,
	359, 1830,
	364, 1830,
	370, 1830,
	450, 1830,
	454, 1830,
	561, 1830,
	573, 1830,
	591, 1830,
	592, 1830,
	593, 1830,
	603, 1830,
	630, 1830,
	632, 1830,
	634, 1830,
	636, 1830,
	-2, 1829,
	-1, 2972,
	631, 2443,
	-2, 2457,
	-1, 2974,
	1, 355,
	591, 355,
	-2, 1723,
	-1, 3004,
	631, 1969,
	-2, 1959,
	-1, 3219,
	1, 1431,
	445, 1386,
	484, 1386,
	606, 1386,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1723,
	-1, 3397,
	365, 1767,
	-2, 2913,
	-1, 3398,
	365, 1768,
	-2, 2776,
	-1, 3402,
	460, 2399,
	461, 2399,
	-2, 2128,
	-1, 3403,
	460, 2403,
	461, 2403,
	-2, 2129,
	-1, 3404,
	460, 2400,
	461, 2400,
	-2, 2128,
	-1, 3405,
	460, 2404,
	461, 2404,
	-2, 2129,
	-1, 3418,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2053,
	-1, 3419,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2057,
	-1, 3425,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2059,
	-1, 3652,
	1, 756,
	630, 756,
	632, 756,
	634, 756,
	-2, 1583,
	-1, 3851,
	45, 2434,
	-2, 1169,
	-1, 3856,
	1, 1431,
	630, 1431,
	632, 1431,
	634, 1431,
	-2, 1723,
	-1, 3962,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2061,
	-1, 3969,
	257, 0,
	259, 0,
	348, 0,
	-2, 2080,
	-1, 4037,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2109,
	-1, 4038,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2110,
	-1, 4039,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2111,
	-1, 4043,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2115,
	-1, 4044,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2116,
	-1, 4045,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2117,
	-1, 4093,
	631, 2444,
	-2, 2458,
	-1, 4310,
	633, 3030,
	-2, 1649,
	-1, 4366,
	257, 0,
	259, 0,
	348, 0,
	-2, 2081,
	-1, 4369,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2084,
	-1, 4370,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2086,
	-1, 4493,
	633, 2459,
	-2, 1466,
	-1, 4656,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2085,
	-1, 4657,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2087,
	-1, 4668,
	257, 0,
	-2, 2120,
	-1, 4862,
	257, 0,
	-2, 2121,
	-1, 5083,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2877,
}

const sqlPrivate = 57344

const sqlLast = 147495

var sqlAct = [...]int{
	292, 5201, 5018, 5274, 1428, 3556, 4903, 5129, 3293, 3143,
	5145, 4911, 5017, 4729, 5082, 5095, 5215, 3173, 4974, 5069,
	3075, 3836, 3837, 5029, 5051, 5008, 5032, 5096, 4831, 1425,
	4955, 5097, 1484, 2411, 5154, 4808, 1341, 4349, 3848, 4779,
	4795, 2299, 4866, 5093, 4002, 1653, 4615, 4110, 2489, 4610,
	4604, 5081, 4571, 1352, 4544, 3954, 3263, 4677, 3678, 2649,
	4645, 4489, 1171, 4734, 4302, 4595, 2501, 1623, 4294, 4814,
	3873, 4597, 4940, 4470, 1418, 3411, 4217, 3076, 4490, 2499,
	895, 2718, 2912, 4620, 756, 3867, 3315, 3821, 2221, 1919,
	4267, 1420, 3741, 3158, 2308, 1773, 4248, 2657, 3901, 3282,
	828, 4250, 3684, 2151, 3826, 3810, 3666, 3903, 895, 2113,
	3825, 4673, 1503, 3828, 3251, 2986, 2152, 3668, 3667, 2497,
	3803, 3802, 1228, 3602, 3277, 4096, 1162, 3539, 2650, 3579,
	1271, 3681, 4405, 4348, 2082, 974, 3279, 1771, 2398, 1596,
	3310, 767, 3571, 3560, 2336, 5130, 3294, 970, 4, 3226,
	3174, 3705, 2400, 2387, 2952, 3562, 3609, 892, 2057, 2018,
	1988, 286, 2320, 4063, 2731, 2654, 4867, 3538, 3395, 285,
	1423, 1711, 1170, 191, 965, 3309, 3255, 3188, 2208, 2449,
	890, 1217, 2399, 824, 2385, 1411, 2796, 2377, 2358, 2365,
	3264, 2287, 1817, 1332, 1482, 1221, 1467, 2787, 2219, 2291,
	2131, 2083, 1397, 2932, 2715, 1226, 1907, 1486, 2638, 2621,
	2987, 801, 2619, 2951, 1748, 3287, 896, 1714, 2380, 897,
	3061, 2448, 3100, 3101, 1045, 2462, 2052, 1454, 1335, 3015,
	1189, 2102, 2909, 4975, 3829, 2790, 1314, 2876, 1625, 2768,
	2798, 901, 2099, 2842, 2092, 201, 2002, 202, 2954, 904,
	844, 2941, 1921, 1920, 2620, 1349, 2622, 1408, 2922, 809,
	1219, 1852, 820, 2408, 1746, 991, 1739, 1331, 2475, 901,
	1837, 1647, 191, 120, 106, 2389, 1604, 904, 1479, 5146,
	1224, 784, 5202, 2643, 757, 1202, 769, 46, 760, 45,
	885, 43, 34, 946, 1337, 32, 30, 1312, 1926, 3448,
	743, 1066, 1659, 3442, 765, 947, 1906, 4077, 2210, 4078,
	2210, 2210, 5285, 5277, 3558, 2210, 2931, 3783, 2210, 2210,
	837, 840, 4111, 5265, 116, 1934, 1935, 2931, 1967, 1968,
	1969, 1978, 1979, 1980, 5264, 5234, 5232, 5175, 2931, 4733,
	4733, 2420, 5131, 5121, 5091, 4702, 5132, 2931, 1971, 1965,
	5119, 5116, 5113, 4696, 2931, 5117, 5114, 1937, 5079, 3882,
	5078, 1166, 2420, 4441, 2420, 2231, 5077, 1984, 5067, 5065,
	3320, 5060, 4733, 4733, 5055, 4817, 5054, 1166, 4733, 4699,
	4733, 1223, 5027, 1843, 1990, 4994, 4733, 4987, 4986, 2995,
	4979, 2931, 2931, 1936, 2420, 4954, 4951, 4933, 4864, 2420,
	4733, 4561, 2995, 4845, 1956, 3883, 2231, 4328, 1934, 1935,
	1329, 4810, 4752, 1953, 4751, 4144, 2420, 4740, 2420, 4739,
	1463, 2420, 4732, 4733, 1155, 4684, 4733, 4658, 2490, 2420,
	4631, 2995, 1965, 3637, 3320, 1783, 1347, 1146, 1764, 1145,
	1937, 4628, 1463, 4539, 4517, 3783, 2228, 2931, 2931, 3634,
	4368, 4318, 4312, 2498, 2995, 3896, 3896, 4264, 4175, 3257,
	4143, 4265, 4176, 1652, 4144, 4088, 4086, 1990, 4070, 4089,
	4087, 3256, 2931, 3986, 3982, 4067, 1936, 2420, 2931, 3895,
	3555, 3619, 3550, 3896, 2931, 1200, 2931, 2991, 3783, 3017,
	1367, 1959, 1960, 1961, 1962, 1315, 1315, 2420, 2231, 3549,
	3500, 1942, 1161, 2931, 3501, 3498, 3490, 3488, 3459, 3499,
	3491, 2931, 2931, 3457, 3319, 2924, 3304, 3303, 3320, 3458,
	2485, 2485, 3040, 2994, 3410, 2984, 2931, 2995, 1167, 2931,
	2231, 2931, 2976, 2930, 2484, 1344, 2420, 2931, 2485, 4995,
	1318, 1375, 1319, 4868, 1975, 1316, 252, 1985, 2744, 2745,
	2746, 2763, 2764, 2765, 1964, 1966, 4859, 4847, 4817, 3320,
	4067, 2923, 4608, 4561, 2228, 4518, 4328, 4266, 3150, 2766,
	1661, 1981, 3060, 1982, 2228, 1673, 2313, 2245, 2209, 2225,
	1951, 1952, 2231, 1368, 1942, 3256, 1368, 2419, 1934, 1935,
	3168, 3051, 2078, 1646, 4193, 3957, 3929, 254, 1973, 2100,
	2370, 3884, 2968, 2967, 1990, 1819, 2966, 2965, 2964, 1320,
	1934, 1935, 1965, 1957, 252, 1317, 1154, 1153, 1152, 1151,
	1937, 3885, 1661, 99, 2756, 1661, 1150, 2931, 1149, 1148,
	1144, 1143, 1142, 2752, 1965, 1141, 1343, 1964, 1966, 1934,
	1935, 4423, 1937, 3447, 1140, 3366, 4380, 1990, 253, 1139,
	1138, 1137, 1136, 1135, 1134, 1133, 1936, 1132, 1131, 1130,
	1129, 1128, 1983, 246, 1127, 254, 1126, 1956, 1125, 1990,
	1107, 1937, 247, 1043, 1042, 1041, 1953, 1040, 1936, 1039,
	1038, 1037, 1036, 1972, 1035, 1034, 1033, 1032, 2211, 966,
	2211, 2211, 1031, 1030, 1987, 2211, 1957, 1029, 2211, 2211,
	1028, 203, 1027, 1026, 4724, 1025, 1024, 1936, 1023, 1022,
	1021, 2757, 2758, 2759, 2760, 1660, 253, 78, 1020, 969,
	968, 2751, 1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012,
	1011, 1010, 4362, 1009, 1667, 79, 1008, 1007, 996, 995,
	1345, 994, 989, 988, 981, 980, 979, 964, 963, 920,
	919, 918, 84, 1963, 1959, 1960, 1961, 1962, 917, 908,
	2562, 907, 906, 905, 1942, 867, 866, 835, 834, 203,
	833, 815, 2825, 280, 279, 278, 1958, 1987, 1934, 1935,
	277, 276, 1652, 3068, 2228, 2228, 1942, 275, 274, 273,
	272, 271, 270, 93, 269, 268, 1787, 267, 266, 1672,
	2761, 2762, 1430, 1226, 1976, 265, 264, 263, 262, 261,
	1937, 260, 259, 258, 257, 1942, 256, 1964, 1966, 2228,
	255, 4622, 4120, 4082, 3897, 3605, 2793, 3470, 3453, 3444,
	1226, 1226, 1226, 2754, 972, 3346, 3272, 3236, 1989, 1964,
	1966, 3256, 2103, 1951, 1952, 3882, 1936, 51, 3068, 115,
	2999, 2973, 1768, 2958, 2823, 99, 112, 252, 2809, 1958,
	3553, 2060, 2611, 2060, 2272, 2230, 2807, 2126, 2059, 2029,
	2059, 1506, 1933, 1368, 5106, 1226, 1957, 2231, 1901, 3027,
	2209, 1226, 1628, 1226, 2228, 4871, 1430, 2225, 2614, 2228,
	1637, 1655, 1471, 1472, 1473, 1475, 1351, 2063, 1957, 2058,
	1328, 2020, 1661, 1458, 5105, 3554, 5102, 5080, 254, 252,
	5064, 1226, 252, 1226, 1974, 1226, 4959, 4856, 4672, 100,
	4850, 1989, 1628, 2794, 4629, 1948, 1949, 1955, 1977, 1954,
	1950, 252, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 4607, 4848, 4447, 159, 4403, 4390, 4402, 1430, 4396,
	4389, 1614, 1716, 3290, 1942, 2923, 4395, 1987, 1666, 253,
	254, 4394, 4181, 254, 1609, 4387, 4386, 4384, 1628, 4379,
	4376, 1845, 4375, 4277, 246, 1628, 4263, 2027, 4124, 1987,
	1436, 1368, 254, 247, 1226, 4123, 1226, 1169, 4122, 4092,
	4058, 1628, 4057, 4056, 3978, 3973, 2755, 3600, 1402, 1405,
	1226, 3546, 1226, 3537, 3508, 2795, 1450, 2792, 1987, 1650,
	1415, 253, 203, 2465, 253, 3505, 1963, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 1720, 1723, 246, 3066, 3504, 246,
	1452, 2022, 5280, 253, 3502, 247, 3509, 3510, 247, 1958,
	3497, 4624, 3496, 3495, 1489, 1490, 3492, 3489, 246, 252,
	3469, 1628, 3452, 1934, 1935, 1635, 3445, 247, 1989, 1601,
	901, 1958, 3443, 1499, 203, 1593, 1598, 203, 904, 3305,
	2021, 1226, 2019, 104, 1226, 2959, 2780, 1965, 1933, 2427,
	2425, 1932, 1444, 5223, 5222, 1937, 203, 2020, 5144, 5142,
	1353, 4004, 5019, 4278, 4938, 4923, 1478, 3509, 3510, 3274,
	254, 1989, 4919, 4918, 4917, 4897, 4896, 4894, 4870, 4869,
	3509, 3510, 1990, 1631, 4843, 1649, 1709, 4191, 1648, 2721,
	4829, 1936, 3065, 1989, 4826, 4825, 1481, 4818, 4806, 4805,
	1491, 1492, 199, 107, 4748, 4719, 111, 4670, 1726, 1788,
	4653, 191, 191, 1751, 1753, 2741, 2742, 2743, 2767, 2753,
	2747, 253, 2749, 2750, 2748, 2735, 2736, 2737, 2738, 2739,
	2740, 4652, 4591, 252, 4587, 4873, 246, 4584, 4562, 3509,
	3510, 973, 4422, 4401, 2797, 247, 159, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 3509, 3510, 3065, 4329, 252,
	3551, 1458, 1954, 1950, 1458, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 203, 4179, 1749, 4178, 252, 4159,
	1226, 4158, 3515, 4156, 254, 3065, 1226, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 4073, 4061, 3968, 1942,
	1742, 2007, 3509, 3510, 252, 3527, 3528, 3529, 3898, 3892,
	254, 164, 3859, 4278, 3763, 3716, 3683, 3628, 3626, 1938,
	1939, 1940, 1941, 1943, 1944, 4364, 3474, 204, 2727, 254,
	3473, 3468, 3434, 3250, 3524, 253, 3093, 2066, 1861, 2065,
	252, 1793, 1911, 3515, 2064, 2061, 2053, 2051, 3006, 3005,
	246, 2970, 1964, 1966, 2963, 254, 3515, 1763, 2929, 247,
	2805, 253, 1167, 200, 2006, 2125, 2081, 2791, 252, 2075,
	2074, 2073, 1905, 1782, 2072, 2071, 246, 2070, 4623, 2069,
	253, 3524, 2068, 2067, 3273, 247, 2048, 2009, 967, 2047,
	2046, 254, 1226, 1226, 1226, 246, 252, 2045, 1226, 2044,
	3008, 41, 2043, 4723, 247, 1349, 253, 1349, 2042, 2041,
	2040, 1957, 2039, 2038, 203, 3515, 2037, 2036, 2035, 254,
	2034, 246, 1506, 2033, 1810, 2022, 2008, 2005, 2000, 1443,
	247, 3515, 1372, 203, 1226, 1740, 1363, 895, 1430, 2080,
	4872, 1846, 253, 2169, 895, 4594, 1430, 254, 1430, 4443,
	4372, 1912, 4119, 4085, 4076, 3525, 3456, 246, 1745, 203,
	1940, 1941, 1943, 1944, 2961, 4697, 247, 2148, 3525, 2129,
	253, 4445, 2824, 2997, 4118, 2198, 3597, 2200, 3515, 2021,
	2089, 3624, 2003, 3509, 3510, 246, 1146, 1916, 1145, 1915,
	3888, 1908, 1987, 2121, 247, 203, 3144, 1485, 253, 5214,
	3719, 1470, 4520, 4927, 2062, 5098, 4920, 4819, 1430, 1934,
	1935, 1468, 1485, 246, 1226, 1910, 2142, 2136, 4627, 3509,
	3510, 4565, 247, 3289, 252, 4564, 4563, 2086, 2087, 4519,
	4425, 252, 4336, 1929, 1930, 5094, 1987, 2233, 1226, 5171,
	4335, 1937, 4334, 3525, 1485, 4333, 1506, 5169, 3531, 1987,
	4332, 203, 4331, 4330, 2822, 1485, 4145, 4080, 2808, 4079,
	3900, 2137, 2110, 2054, 2055, 2163, 2806, 3119, 3899, 2263,
	3787, 1469, 2302, 2166, 1958, 254, 1483, 1936, 3785, 3784,
	2348, 191, 254, 1463, 2060, 4815, 1347, 2103, 1347, 3955,
	3525, 2059, 4851, 4281, 2143, 1903, 2237, 1458, 901, 1327,
	2270, 2192, 4208, 1463, 1167, 901, 904, 3494, 1987, 2135,
	2130, 3493, 2236, 904, 4849, 3753, 3416, 3104, 3526, 3186,
	1466, 2043, 2043, 2134, 1987, 4174, 253, 1123, 1809, 2251,
	3685, 3526, 1315, 253, 4271, 2108, 1989, 2031, 3839, 2111,
	3838, 246, 2257, 2256, 1463, 2101, 1485, 2265, 246, 4890,
	247, 2215, 4889, 4139, 2217, 4140, 2490, 247, 1818, 4809,
	2222, 1862, 5127, 4605, 2224, 3316, 2416, 3811, 4551, 2227,
	1819, 1987, 4890, 2028, 2213, 2466, 1124, 2402, 4286, 203,
	4260, 2079, 2367, 4214, 4205, 1344, 203, 1344, 5103, 4184,
	3926, 3650, 2583, 2495, 2433, 3515, 2120, 2401, 2119, 2105,
	2118, 2116, 4674, 2157, 2115, 2114, 3526, 2518, 3558, 4006,
	2788, 1464, 4743, 4715, 3004, 1628, 1628, 3462, 3513, 3514,
	3516, 3517, 1744, 2076, 2239, 2056, 1506, 2149, 3819, 2459,
	1719, 1167, 1642, 1938, 1939, 1940, 1941, 1943, 1944, 1439,
	1401, 2347, 5118, 5115, 4504, 4532, 4530, 2313, 3878, 3102,
	2240, 4150, 4501, 3526, 3165, 3162, 1797, 3160, 4912, 3146,
	5104, 4611, 5026, 3688, 4169, 3286, 2344, 2235, 2352, 2260,
	1776, 3794, 3345, 5172, 2362, 3518, 3519, 3511, 3512, 3513,
	3514, 3516, 3517, 5173, 5206, 5151, 1343, 3228, 1343, 3519,
	3511, 3512, 3513, 3514, 3516, 3517, 2381, 4746, 1745, 4742,
	2277, 4721, 2278, 3949, 4227, 4774, 4506, 3525, 1694, 1686,
	2412, 2417, 2285, 2286, 2357, 1121, 3509, 3510, 1119, 2311,
	2266, 3654, 2258, 1628, 2357, 1628, 3041, 1628, 1859, 5276,
	4928, 2279, 2280, 2576, 3656, 4767, 1460, 1117, 2283, 2284,
	959, 4754, 1103, 2574, 1115, 1628, 1628, 4554, 2307, 3511,
	3512, 3513, 3514, 3516, 3517, 1860, 4553, 2319, 1470, 1628,
	4225, 2252, 3520, 3518, 3519, 3511, 3512, 3513, 3514, 3516,
	3517, 1628, 1112, 1628, 1628, 1628, 4226, 2338, 901, 2354,
	3064, 1644, 2343, 1464, 4224, 4216, 904, 4199, 1987, 4198,
	1345, 2262, 1345, 2404, 2405, 4196, 3062, 895, 2355, 4195,
	1695, 1470, 3521, 3522, 3523, 2341, 2406, 4183, 4142, 3520,
	3518, 3519, 3511, 3512, 3513, 3514, 3516, 3517, 2382, 1226,
	2517, 3064, 1465, 2455, 4141, 2460, 3800, 3799, 1469, 2261,
	3755, 3718, 3618, 1649, 3467, 1858, 1648, 3062, 3466, 3465,
	3625, 3464, 3420, 1795, 2357, 3184, 2313, 4744, 4716, 2472,
	2353, 2340, 960, 3183, 2337, 2345, 2361, 1226, 807, 3167,
	3156, 4485, 3148, 3138, 3137, 2493, 3129, 4500, 3128, 3127,
	3526, 1469, 3109, 807, 3108, 2391, 2390, 2522, 2391, 2390,
	2394, 2838, 3069, 2503, 1461, 4502, 2985, 3685, 2418, 2702,
	1909, 2837, 3515, 1226, 1462, 1226, 3751, 4478, 2659, 2339,
	1165, 2077, 1226, 5207, 5152, 2169, 2169, 1506, 1460, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 2441, 1226, 2510, 1226, 1226,
	1226, 1226, 2469, 4479, 2547, 2482, 2440, 2402, 901, 2356,
	2480, 1749, 1744, 1749, 2998, 3283, 904, 2490, 1841, 2356,
	2474, 1742, 4651, 2477, 1226, 2477, 2478, 4452, 1226, 1226,
	2631, 2509, 3123, 1732, 2618, 1731, 1226, 2486, 1444, 2487,
	1226, 2312, 1226, 1226, 1465, 1730, 1164, 1729, 3517, 3106,
	1506, 2629, 3012, 2989, 3525, 2439, 1226, 1226, 1226, 1226,
	1487, 1488, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	2309, 2655, 2656, 4521, 1944, 1487, 1488, 2163, 2163, 3511,
	3512, 3513, 3514, 3516, 3517, 2166, 2166, 2527, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1167, 1226, 1167,
	1811, 2526, 1226, 2613, 2537, 2305, 1461, 1487, 1488, 2788,
	2769, 2770, 2601, 2627, 1349, 2793, 1462, 3752, 1487, 1488,
	1645, 1506, 1690, 2592, 2769, 2785, 2589, 3927, 2604, 1463,
	1349, 1840, 2350, 4462, 2609, 1987, 2570, 1841, 2310, 2356,
	755, 2313, 1902, 2514, 1790, 1899, 1226, 1506, 806, 1703,
	1109, 2833, 2642, 2528, 1387, 1435, 3048, 864, 2717, 4503,
	1857, 2717, 5172, 806, 1166, 3132, 3136, 750, 2306, 2534,
	2879, 2879, 2893, 2629, 2769, 3323, 2975, 2913, 2915, 1453,
	1708, 2335, 2590, 3361, 2921, 1872, 2617, 2733, 2616, 2615,
	2623, 2349, 1146, 2630, 2646, 1146, 1146, 2647, 2648, 1819,
	4461, 2784, 1819, 3164, 3092, 2383, 1838, 2581, 2351, 2267,
	2268, 2591, 2794, 2311, 2946, 2157, 2157, 3526, 4474, 962,
	961, 1878, 3078, 3408, 3393, 4475, 2121, 3130, 2971, 3509,
	3510, 1442, 3527, 3528, 3529, 2627, 4480, 3163, 3161, 2895,
	3159, 2568, 2346, 5238, 2531, 3653, 2603, 2348, 5208, 2525,
	1840, 4498, 1430, 1430, 1914, 3133, 3035, 2988, 3091, 2395,
	2392, 4905, 2479, 1658, 808, 1665, 1791, 1671, 2729, 2938,
	3374, 2628, 1839, 2797, 5100, 862, 4166, 1796, 4477, 808,
	4880, 2782, 3036, 5209, 2725, 2110, 2342, 2535, 3659, 2384,
	1807, 2723, 4180, 1506, 2795, 1347, 2792, 4481, 3936, 2393,
	3935, 1463, 3014, 3363, 4153, 4552, 3011, 4650, 3524, 4240,
	1113, 1347, 1464, 1113, 2835, 4197, 2937, 3131, 2992, 2836,
	3030, 2350, 2839, 2625, 2840, 2841, 2888, 2575, 2917, 3010,
	2875, 2904, 1113, 3063, 3105, 2919, 1762, 2573, 1767, 1114,
	3081, 3033, 2169, 191, 1458, 2960, 4485, 1315, 4194, 2626,
	1167, 2945, 1781, 2950, 1786, 1163, 2956, 2957, 2108, 2939,
	1167, 4127, 2062, 3407, 1167, 2927, 2928, 1113, 2943, 2944,
	4241, 1005, 4114, 3520, 3518, 3519, 3511, 3512, 3513, 3514,
	3516, 3517, 4478, 3044, 3806, 5210, 4471, 957, 3377, 956,
	4907, 1506, 1715, 2628, 1344, 3798, 3431, 2600, 4164, 3749,
	3166, 1854, 3126, 2949, 4469, 3515, 3046, 1628, 2347, 3107,
	1344, 3995, 3022, 4473, 4239, 3992, 3000, 3070, 3026, 3032,
	1844, 2424, 2423, 3007, 1430, 2054, 2055, 3429, 3219, 3029,
	2368, 5184, 3037, 3055, 4476, 3021, 5193, 1460, 4479, 3024,
	2610, 3025, 2321, 4784, 3047, 1226, 1226, 1713, 1226, 3016,
	3177, 2699, 5192, 3039, 1167, 3067, 2983, 3031, 3112, 5101,
	5240, 1876, 5159, 2797, 2163, 3045, 4496, 2325, 3400, 3401,
	4354, 2626, 2166, 895, 2091, 1430, 4486, 4487, 3157, 3262,
	1095, 3038, 4472, 4353, 4499, 2312, 3930, 2364, 3807, 3875,
	3804, 3124, 3042, 3370, 2210, 1343, 1692, 3993, 1621, 5071,
	5212, 5072, 3111, 3142, 863, 1159, 1628, 2371, 5003, 2368,
	4707, 1343, 2378, 3254, 2363, 3735, 3748, 3525, 3096, 1628,
	3297, 1628, 5218, 1465, 3747, 2322, 1689, 1628, 3306, 3376,
	751, 2602, 3110, 3311, 3083, 3086, 3270, 3744, 1678, 1628,
	3117, 3118, 3120, 3121, 3122, 3125, 3135, 3073, 2713, 2359,
	3056, 3057, 3231, 3080, 3058, 3059, 865, 3233, 1386, 3178,
	861, 2095, 3373, 1430, 3185, 1430, 3766, 4991, 5099, 3220,
	3221, 3727, 2533, 3054, 4913, 3426, 3736, 3326, 3327, 2711,
	2797, 3145, 2310, 4935, 1715, 1461, 2791, 1226, 3333, 3334,
	3335, 1757, 3347, 3140, 3348, 1462, 3134, 3147, 1987, 1345,
	1096, 901, 2157, 3672, 3154, 3314, 3427, 1772, 3313, 904,
	3432, 2098, 2360, 3655, 3317, 1345, 752, 1870, 3170, 4434,
	3734, 805, 1357, 3171, 3172, 3223, 4435, 2093, 2697, 2372,
	3260, 2700, 3728, 1820, 901, 4497, 1643, 3422, 1359, 2326,
	2716, 3229, 904, 3321, 3343, 2096, 1370, 3308, 4581, 2351,
	3328, 5158, 3329, 4474, 3622, 1226, 1649, 3349, 3318, 3234,
	4475, 1226, 1226, 2397, 3324, 1354, 2797, 1801, 753, 1792,
	754, 4480, 4906, 3375, 4253, 1110, 3726, 191, 3248, 3301,
	3526, 3913, 2696, 2974, 4251, 4253, 3224, 3700, 4433, 2094,
	2117, 1871, 3876, 2333, 3911, 4251, 2569, 2049, 2349, 2316,
	3791, 2368, 2392, 4785, 3904, 3266, 2327, 2328, 5211, 3079,
	3379, 1360, 3381, 4477, 3292, 1441, 4783, 1226, 1226, 1873,
	3302, 1184, 4781, 1226, 2396, 1877, 4350, 2707, 3573, 2530,
	3222, 3805, 4481, 2323, 2524, 4165, 1226, 1226, 1913, 1361,
	3342, 2393, 1226, 1226, 1749, 3340, 3300, 3699, 1226, 3281,
	3299, 2708, 1101, 1100, 2334, 3352, 2724, 3354, 2709, 3356,
	2317, 3351, 2714, 3353, 2303, 3355, 4989, 3357, 3358, 5137,
	3229, 4255, 4780, 1006, 1806, 1808, 5182, 3350, 3875, 5138,
	1463, 2324, 4255, 1358, 4663, 5216, 774, 5037, 4533, 3706,
	3367, 3915, 997, 1226, 1226, 1226, 3064, 4647, 2332, 1226,
	1097, 4782, 3423, 4254, 2315, 909, 3428, 5236, 3906, 1226,
	3382, 4990, 3084, 3384, 4254, 1999, 3430, 3472, 2097, 998,
	3141, 2095, 3673, 3905, 2942, 2779, 1226, 3399, 3388, 3521,
	3522, 3523, 916, 5241, 4598, 2955, 3520, 3518, 3519, 3511,
	3512, 3513, 3514, 3516, 3517, 3455, 3708, 3390, 284, 3389,
	1166, 4008, 5225, 4593, 4599, 4343, 1794, 4694, 1095, 4557,
	2091, 2375, 2642, 3394, 4115, 5157, 4355, 1874, 3409, 4476,
	1376, 2098, 1374, 3951, 2211, 3391, 3450, 3451, 4956, 4582,
	3914, 3454, 1825, 1159, 5043, 4973, 4949, 2940, 2698, 4828,
	4556, 4555, 4300, 3863, 1175, 3636, 2982, 1924, 2447, 2088,
	1373, 4249, 5217, 1366, 742, 2096, 4775, 4276, 2329, 1923,
	2580, 4486, 4487, 4351, 4047, 3707, 2645, 3446, 1226, 1226,
	1226, 1226, 2373, 2314, 3421, 1923, 4399, 1226, 1226, 1226,
	2253, 1098, 1226, 1157, 3610, 1095, 982, 3572, 1918, 5219,
	4741, 4941, 4646, 5246, 1226, 1349, 1506, 2095, 4691, 4837,
	1226, 3679, 1226, 3565, 3566, 4942, 2250, 4887, 2710, 1099,
	1159, 1349, 4301, 987, 4220, 4200, 2374, 1875, 2712, 4151,
	3181, 4149, 3864, 3855, 3675, 3271, 3265, 3252, 1096, 1506,
	2473, 2467, 2461, 2453, 2432, 4252, 2431, 4957, 3991, 4943,
	2330, 1349, 1683, 4822, 1506, 4135, 4252, 2098, 2635, 1378,
	3113, 814, 4062, 5009, 3461, 3952, 1430, 4976, 1158, 3068,
	2582, 1923, 1355, 2093, 3548, 1102, 2169, 2246, 1922, 4303,
	1506, 2933, 4616, 3249, 4356, 1389, 4801, 3603, 3590, 4799,
	1430, 2096, 3567, 2248, 1922, 3617, 4718, 5136, 1430, 4109,
	3691, 3687, 3638, 3686, 3414, 3392, 3912, 3907, 3908, 3909,
	3910, 999, 1000, 2515, 4075, 1096, 3570, 4945, 2936, 3632,
	1226, 3569, 1848, 1847, 910, 911, 1167, 2507, 1356, 2496,
	2429, 1842, 1226, 2981, 2980, 2094, 2979, 3577, 2097, 2978,
	2249, 4596, 4944, 2302, 2977, 4259, 3916, 1724, 4648, 2276,
	1430, 3257, 1924, 3599, 3674, 1164, 2169, 1738, 1736, 2935,
	4946, 1725, 3663, 3664, 2934, 1004, 4900, 4572, 1924, 3089,
	4730, 4272, 3814, 1226, 4357, 4157, 3575, 4048, 3604, 2302,
	1922, 3085, 3651, 2471, 3689, 4146, 1347, 3693, 4049, 1430,
	1101, 1100, 3623, 3724, 3657, 5179, 3644, 3596, 2163, 853,
	4400, 1458, 1347, 2388, 2636, 3559, 2166, 3608, 1430, 4705,
	1430, 4703, 3738, 3227, 3740, 3612, 3613, 3614, 3615, 3543,
	3544, 3545, 1999, 3574, 4726, 5245, 4803, 5015, 3923, 1226,
	1226, 3635, 1347, 2367, 3620, 3754, 854, 1506, 1097, 3576,
	2367, 3114, 3115, 3322, 3588, 3232, 3230, 2500, 1430, 2401,
	3591, 3592, 3777, 1800, 4958, 983, 984, 3676, 4713, 2563,
	4821, 3769, 4136, 3771, 2097, 1430, 3775, 1101, 1100, 3789,
	3781, 3594, 3682, 3595, 3767, 3721, 913, 912, 2163, 4901,
	3640, 4731, 3589, 3642, 3643, 1344, 2166, 4725, 3646, 4456,
	3647, 3703, 3648, 4455, 5023, 5006, 3690, 1628, 4406, 3695,
	3782, 1344, 3697, 4802, 1826, 3745, 3641, 3645, 4064, 4714,
	1430, 1628, 2804, 1628, 4438, 1097, 4695, 1506, 1001, 1002,
	1895, 5045, 5016, 5183, 895, 1628, 3629, 3630, 3652, 3631,
	3764, 1344, 5181, 2596, 1504, 1897, 2157, 1894, 1628, 3808,
	3660, 1892, 3611, 1866, 914, 915, 5120, 3671, 3739, 4931,
	1430, 3824, 2572, 1864, 3856, 4147, 2275, 4921, 1836, 4787,
	813, 1834, 4701, 4669, 4449, 4398, 1832, 1349, 3709, 1098,
	4258, 3871, 3540, 3869, 4902, 3967, 1830, 1828, 2135, 1822,
	1816, 3717, 1814, 1734, 3844, 3924, 1343, 3921, 3723, 1628,
	3311, 3756, 3730, 3633, 3731, 3733, 3503, 1099, 3732, 3311,
	3854, 1628, 1343, 1628, 3750, 3433, 3809, 3737, 3812, 1737,
	1735, 2386, 3253, 3155, 3149, 3725, 2157, 1003, 3103, 3009,
	3759, 2605, 2506, 2491, 4947, 2128, 3765, 2124, 1898, 1775,
	4948, 3862, 1343, 2488, 3891, 4454, 3778, 2539, 3796, 2410,
	3541, 3947, 3946, 3880, 3786, 3790, 1098, 3776, 3938, 1918,
	3135, 2502, 2504, 1102, 1506, 3365, 3364, 1506, 2803, 3331,
	2624, 3928, 985, 986, 3788, 2508, 1853, 2542, 2452, 2430,
	2199, 2197, 1156, 2032, 1099, 1789, 1707, 2516, 1311, 2519,
	2520, 2521, 3797, 5092, 3795, 901, 3865, 3847, 3919, 4534,
	1345, 1226, 3259, 904, 4207, 3768, 3939, 1226, 1226, 3801,
	4206, 1226, 1226, 1226, 3816, 1226, 1345, 3111, 5005, 4538,
	3872, 1111, 3851, 3852, 1226, 2169, 3845, 3850, 3917, 4516,
	2598, 4614, 4543, 1226, 3922, 4529, 4438, 2597, 1226, 1896,
	1102, 1893, 4467, 5155, 1506, 1891, 1345, 1865, 4466, 2571,
	3920, 4299, 4290, 1226, 4223, 3877, 3945, 1863, 1347, 4202,
	3870, 1506, 1835, 3581, 3886, 1833, 191, 191, 3889, 3890,
	1831, 2169, 2169, 1226, 1226, 4172, 1226, 1226, 1226, 3944,
	1829, 1827, 4170, 1821, 1815, 4148, 1813, 1733, 3858, 3853,
	3840, 3284, 3276, 3269, 1226, 3261, 3245, 3244, 1226, 3225,
	2169, 2169, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 4020, 1226, 4021, 3028, 3023, 2428, 3970, 3953,
	3879, 1226, 1226, 2169, 2538, 3932, 2409, 3933, 1226, 3934,
	2426, 2403, 2369, 2331, 2318, 2304, 2232, 2163, 2229, 1226,
	3942, 2226, 2223, 3950, 2218, 2166, 2216, 1344, 2212, 3948,
	1349, 1349, 3582, 2203, 1226, 4609, 3980, 3981, 3988, 3868,
	3779, 1324, 5150, 5076, 1633, 2378, 1927, 2141, 3412, 4598,
	5173, 2254, 2242, 2243, 4899, 3385, 2608, 2655, 4011, 1116,
	1118, 1120, 3383, 2163, 2163, 3977, 1506, 3975, 1325, 4599,
	3218, 2166, 2166, 4094, 1167, 5057, 4967, 4630, 3987, 1430,
	1430, 4550, 4453, 3312, 3580, 3587, 2655, 4026, 1419, 3658,
	4059, 2271, 2163, 2163, 1430, 1430, 1688, 895, 1430, 4003,
	2166, 2166, 3064, 4081, 2606, 3064, 4010, 4839, 4112, 4113,
	3090, 4018, 3994, 3996, 3997, 4019, 4832, 1226, 3062, 4055,
	4311, 3087, 3586, 4125, 4126, 2163, 4051, 4132, 1343, 2313,
	1889, 1890, 2470, 2166, 4023, 4025, 2529, 1409, 1410, 2566,
	4066, 2561, 5056, 2536, 1226, 4507, 4545, 3413, 3182, 1158,
	1812, 2607, 4858, 3094, 842, 2157, 1480, 1934, 1935, 4060,
	1928, 1599, 3780, 4728, 1613, 1419, 4407, 4052, 4385, 3998,
	3704, 3095, 1934, 1935, 3116, 1931, 1437, 1226, 1226, 2241,
	1377, 5167, 1326, 1477, 191, 4071, 4072, 3095, 281, 4068,
	4069, 5128, 4017, 3243, 4287, 2127, 2454, 1448, 4219, 3162,
	3160, 2157, 2157, 3169, 1937, 3151, 3097, 1869, 5014, 4083,
	5213, 1347, 1347, 4996, 4966, 3237, 1226, 1226, 3240, 4152,
	3242, 1410, 4218, 4960, 1226, 1936, 1410, 859, 845, 845,
	2157, 2157, 1345, 3583, 3584, 3585, 3153, 739, 1419, 1419,
	1936, 4898, 3099, 4823, 4794, 1628, 1628, 4706, 1628, 4297,
	3152, 4289, 1628, 4275, 4128, 1628, 3098, 4091, 901, 4185,
	1430, 3857, 3291, 2157, 4237, 2920, 904, 3288, 2238, 4084,
	3288, 2150, 5047, 4727, 3139, 4190, 4192, 5048, 1641, 4189,
	4133, 1640, 1634, 1160, 4134, 2169, 3621, 2388, 5244, 3509,
	3510, 1934, 1935, 4962, 5047, 2282, 3050, 1799, 5186, 5048,
	2281, 3049, 1652, 1798, 4221, 1651, 4215, 4209, 4377, 1652,
	1344, 1344, 2799, 4117, 3368, 2834, 4177, 4182, 2282, 2273,
	2281, 1868, 4296, 4824, 1867, 4768, 4547, 4542, 4541, 4121,
	1628, 4436, 4171, 4432, 4173, 4431, 1226, 4373, 4304, 4347,
	4116, 3999, 3773, 4231, 1349, 1226, 4284, 4313, 4268, 4242,
	4243, 3770, 3371, 3359, 1628, 2026, 3111, 2025, 4245, 1628,
	1628, 1628, 3387, 3297, 2612, 5229, 5194, 5062, 5000, 4999,
	4319, 2012, 4998, 4930, 4929, 2017, 1306, 3311, 4876, 4257,
	4874, 4282, 1628, 4797, 1628, 4758, 4698, 4693, 4692, 4247,
	1506, 4690, 4256, 4689, 4228, 4687, 4589, 4305, 4569, 4505,
	3178, 3682, 4235, 4321, 4444, 4308, 4430, 2163, 4429, 4428,
	4222, 1343, 1343, 4283, 4324, 2166, 4270, 4246, 1506, 4317,
	4262, 1226, 1226, 1234, 4168, 4325, 4160, 1226, 1226, 2169,
	4098, 4274, 1226, 1226, 3861, 1226, 3860, 3696, 3639, 3372,
	1226, 3362, 3339, 3179, 3338, 3337, 3336, 3275, 3247, 3246,
	3088, 1226, 3019, 4288, 3013, 4291, 3002, 3001, 4307, 4236,
	2990, 2728, 2599, 2567, 4337, 2560, 2559, 1226, 2558, 4340,
	4309, 288, 288, 288, 2557, 745, 746, 4339, 761, 745,
	761, 772, 2556, 4306, 812, 4099, 4238, 4315, 832, 4314,
	2468, 4322, 4358, 839, 839, 839, 839, 4323, 2442, 2421,
	4338, 2438, 2437, 288, 2436, 4261, 2435, 2434, 2206, 2205,
	2204, 4359, 4100, 2202, 4097, 1345, 1345, 4371, 2140, 2139,
	1888, 4341, 1887, 4108, 978, 1347, 1823, 1702, 1349, 4106,
	1701, 288, 4367, 1700, 1699, 1698, 1349, 1697, 1696, 4352,
	1506, 1506, 1691, 1506, 4293, 2157, 1687, 1685, 1684, 1618,
	1349, 2163, 1617, 1616, 1497, 1496, 1495, 1494, 1493, 2166,
	1440, 1628, 1628, 3325, 4107, 1396, 1395, 1394, 1393, 4103,
	1392, 1391, 1390, 1388, 1383, 3332, 1382, 1381, 1380, 4412,
	1379, 1506, 971, 8, 2244, 1122, 3603, 1108, 4904, 4484,
	4346, 4483, 4482, 2595, 4104, 98, 1693, 933, 92, 2376,
	4167, 1072, 5044, 4934, 1676, 941, 1226, 5025, 4285, 3698,
	3187, 4397, 2541, 1824, 2543, 3598, 2962, 1349, 4988, 1349,
	4439, 4440, 4457, 4458, 1344, 4381, 3471, 4865, 4662, 2802,
	2030, 3552, 94, 4415, 4417, 1210, 1256, 4580, 4579, 4468,
	4154, 3827, 4576, 4575, 1430, 2154, 2156, 1613, 4515, 1174,
	1509, 4508, 5070, 4491, 1506, 4491, 1430, 4420, 2255, 1430,
	4524, 4409, 4410, 4527, 5235, 4495, 4442, 4414, 4460, 4404,
	745, 745, 1216, 4421, 1226, 4411, 2269, 1506, 288, 4448,
	4494, 4424, 4451, 4408, 4511, 4512, 2264, 3003, 2878, 2157,
	1233, 4413, 1230, 2158, 191, 2160, 1232, 1613, 1231, 2159,
	4463, 2050, 1229, 2153, 4546, 4450, 4548, 4295, 3295, 1347,
	3887, 1743, 1741, 4465, 1074, 2259, 2722, 1347, 2786, 1628,
	1628, 3460, 2023, 4459, 1190, 1343, 4437, 4101, 1212, 2783,
	1371, 1347, 1201, 3578, 3557, 4102, 3874, 4090, 2292, 2634,
	951, 3506, 2789, 2293, 1362, 2901, 4573, 2894, 1430, 2890,
	3649, 3285, 4600, 1904, 4510, 4531, 4676, 2001, 3296, 1900,
	1506, 4549, 1474, 1194, 4509, 1628, 2720, 2014, 3438, 2644,
	4540, 3881, 3601, 4617, 2996, 4570, 5050, 4007, 3369, 2446,
	2658, 1323, 1322, 1369, 1321, 4567, 5031, 5028, 2366, 4105,
	4583, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1347, 4528,
	1347, 3822, 3823, 2247, 3043, 4601, 2732, 4606, 1344, 3841,
	1206, 1506, 1612, 4560, 2587, 4568, 1344, 3940, 3563, 4273,
	1704, 4735, 4566, 1226, 1226, 1226, 1218, 4559, 4558, 1345,
	1344, 1986, 4618, 3214, 3213, 4893, 1459, 4578, 1457, 4574,
	1456, 1506, 4514, 1455, 5203, 4590, 1226, 3180, 2379, 1226,
	1226, 4163, 4162, 4612, 4592, 4523, 4585, 4621, 4526, 1226,
	2294, 4161, 2169, 251, 3406, 1925, 4619, 1226, 1226, 4586,
	1917, 248, 250, 2800, 249, 3702, 4095, 3607, 2298, 5126,
	4187, 3813, 4525, 25, 1506, 4641, 1628, 4635, 4633, 3713,
	3714, 4639, 3715, 846, 847, 4654, 4632, 1344, 848, 1344,
	4626, 3053, 2274, 1476, 4138, 24, 23, 22, 21, 1343,
	1430, 121, 44, 20, 163, 161, 138, 1343, 158, 4642,
	157, 4643, 130, 4649, 156, 155, 154, 153, 152, 160,
	151, 1343, 1506, 150, 145, 149, 148, 147, 146, 4700,
	1226, 144, 142, 3760, 3761, 143, 3762, 137, 141, 140,
	139, 136, 135, 1226, 134, 133, 132, 2295, 2300, 131,
	129, 4659, 1226, 162, 128, 4671, 127, 2169, 205, 290,
	2972, 4712, 126, 125, 4665, 124, 4603, 1226, 123, 122,
	1226, 4682, 4683, 825, 2163, 826, 4685, 63, 4686, 62,
	118, 119, 2166, 19, 42, 14, 1226, 67, 1343, 1226,
	1343, 68, 2458, 18, 13, 37, 1506, 97, 110, 109,
	108, 38, 105, 1345, 1430, 36, 17, 4738, 4777, 16,
	15, 1345, 103, 102, 1628, 1628, 1628, 101, 35, 4711,
	33, 4708, 11, 9, 2302, 1345, 4761, 39, 4762, 4717,
	2112, 12, 4757, 2296, 5, 1349, 196, 195, 198, 194,
	197, 96, 193, 192, 95, 31, 4786, 10, 188, 4709,
	4813, 4710, 4280, 87, 4773, 190, 189, 187, 186, 185,
	88, 85, 3824, 4796, 4812, 1506, 184, 4759, 1628, 4755,
	4800, 4491, 4760, 4747, 91, 183, 4833, 86, 90, 2163,
	89, 29, 3712, 4807, 6, 66, 2303, 2166, 7, 4644,
	3925, 113, 1345, 4770, 1345, 114, 4804, 40, 83, 82,
	81, 80, 28, 1226, 1226, 65, 3052, 4820, 27, 4789,
	4791, 4792, 2157, 4788, 4798, 180, 229, 228, 227, 4838,
	1226, 2169, 226, 4816, 4793, 225, 224, 223, 4842, 4811,
	4844, 222, 217, 221, 219, 4834, 218, 4749, 4750, 220,
	216, 4836, 242, 3710, 241, 240, 239, 1430, 2301, 238,
	1430, 2726, 1430, 1430, 232, 4835, 231, 237, 4830, 4841,
	4840, 1364, 2588, 236, 1188, 235, 4621, 2012, 234, 4763,
	1226, 233, 1226, 4769, 1226, 4771, 4875, 4772, 230, 4877,
	4846, 4878, 4879, 245, 1349, 4854, 4855, 3711, 76, 215,
	4853, 4888, 214, 213, 211, 1385, 207, 1226, 210, 1349,
	212, 209, 4886, 4776, 208, 206, 244, 288, 243, 288,
	288, 77, 1414, 288, 1424, 178, 1347, 2157, 179, 75,
	4491, 177, 1633, 176, 4863, 1438, 175, 174, 173, 1633,
	4778, 172, 171, 832, 4885, 4491, 832, 4884, 74, 4857,
	182, 181, 26, 2163, 2, 1, 0, 0, 4881, 2639,
	0, 2166, 4915, 0, 0, 0, 1349, 1349, 0, 839,
	4916, 4909, 4908, 3792, 0, 0, 0, 4937, 0, 0,
	1226, 0, 0, 0, 4939, 0, 0, 1349, 0, 2297,
	1349, 0, 0, 288, 1628, 288, 288, 1414, 0, 288,
	288, 3817, 4491, 4491, 1628, 4924, 0, 0, 1424, 4926,
	0, 0, 0, 0, 3846, 0, 0, 0, 0, 1226,
	1226, 0, 288, 4491, 1654, 1344, 4491, 4952, 4953, 1226,
	0, 0, 4932, 0, 0, 0, 4950, 0, 0, 0,
	1674, 0, 0, 4961, 4964, 0, 0, 1681, 4970, 4963,
	0, 4972, 0, 4816, 4969, 4984, 0, 4985, 0, 0,
	4978, 4977, 0, 0, 0, 3894, 1706, 0, 4983, 1424,
	4982, 4981, 0, 288, 288, 1347, 1414, 3918, 0, 4993,
	1226, 1226, 0, 5001, 1226, 0, 4997, 0, 1628, 1430,
	1347, 2157, 1430, 0, 5022, 3435, 3436, 832, 0, 288,
	288, 4992, 0, 5004, 0, 2896, 0, 0, 0, 0,
	0, 1769, 4925, 5012, 5013, 5030, 5033, 0, 5041, 5052,
	0, 5042, 1777, 5053, 0, 5020, 1343, 978, 5049, 5046,
	0, 4980, 5002, 1419, 5021, 0, 0, 0, 0, 0,
	0, 5039, 0, 5035, 0, 5075, 5073, 1347, 1347, 0,
	1226, 1226, 1226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5034, 0, 0, 0, 5038, 0, 1347, 0,
	0, 1347, 5058, 0, 1344, 0, 0, 0, 0, 5063,
	0, 5066, 1419, 5040, 0, 5074, 0, 1226, 0, 1344,
	0, 5107, 0, 0, 0, 0, 0, 0, 5089, 5112,
	0, 5090, 5087, 5088, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 1419, 1419, 0, 0, 0, 0,
	5133, 2302, 0, 0, 0, 5108, 5134, 5109, 5135, 0,
	1345, 0, 288, 0, 5143, 0, 0, 5141, 5110, 0,
	5147, 0, 0, 5125, 1226, 0, 1344, 1344, 0, 5123,
	0, 0, 1430, 0, 0, 5140, 0, 0, 5156, 5139,
	4796, 0, 0, 5149, 0, 0, 5148, 1344, 0, 0,
	1344, 0, 0, 5174, 0, 1343, 5166, 3533, 3534, 3535,
	3536, 5164, 5162, 5163, 0, 5170, 5153, 0, 5168, 0,
	1343, 5165, 0, 0, 0, 5177, 5176, 0, 5178, 0,
	0, 5190, 0, 1349, 5180, 1349, 5189, 0, 5197, 0,
	0, 0, 5030, 5052, 5187, 5033, 5199, 5188, 5191, 0,
	1599, 5195, 5185, 0, 0, 0, 0, 0, 5205, 0,
	0, 5196, 0, 0, 0, 0, 0, 0, 0, 4491,
	0, 4491, 0, 0, 1430, 0, 0, 1343, 1343, 4292,
	5220, 0, 5221, 5204, 0, 0, 0, 5228, 1613, 0,
	0, 0, 0, 5227, 5198, 0, 5200, 0, 1343, 0,
	5231, 1343, 5226, 5224, 1226, 1226, 0, 5239, 5122, 1345,
	0, 5124, 5233, 1226, 1226, 5237, 5230, 0, 5242, 3297,
	0, 0, 5253, 0, 1345, 5247, 0, 0, 5255, 5258,
	0, 5259, 0, 5251, 5257, 5263, 5260, 5262, 5261, 0,
	5254, 0, 0, 0, 5256, 0, 4342, 0, 0, 3297,
	5267, 1430, 5268, 5272, 5269, 5271, 0, 5275, 5273, 0,
	5266, 0, 5270, 0, 0, 0, 0, 745, 0, 0,
	0, 1226, 5278, 0, 0, 5282, 0, 5284, 5275, 5286,
	0, 1345, 1345, 5279, 0, 0, 0, 0, 288, 0,
	288, 5281, 0, 0, 288, 5248, 5249, 0, 0, 3564,
	0, 0, 1345, 0, 0, 1345, 0, 1654, 1414, 2132,
	288, 0, 288, 2138, 1347, 0, 1347, 0, 0, 0,
	288, 0, 761, 0, 0, 0, 1633, 288, 0, 1188,
	1188, 1188, 3593, 0, 0, 0, 0, 0, 0, 0,
	0, 2292, 0, 2207, 0, 0, 2293, 3606, 0, 0,
	0, 0, 0, 5283, 1613, 288, 0, 3205, 0, 0,
	0, 0, 288, 0, 0, 1419, 0, 0, 0, 0,
	1590, 4229, 4230, 3627, 0, 0, 0, 0, 4232, 0,
	0, 4233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3195, 3193, 5250, 0, 832, 0, 0, 3197, 3199,
	3189, 0, 0, 0, 0, 0, 0, 1633, 1633, 0,
	0, 0, 0, 1344, 78, 1344, 0, 0, 0, 0,
	1613, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 79, 839, 78, 839, 0, 0, 0, 0,
	0, 3215, 0, 0, 0, 839, 839, 0, 0, 84,
	0, 0, 79, 0, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 2294, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4320, 2298, 0, 0, 0, 2502, 4326, 4327, 0, 1990,
	93, 0, 0, 0, 0, 0, 0, 0, 1936, 3396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 1343, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 972, 0, 0, 4536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 115, 0, 0, 0,
	0, 972, 99, 112, 0, 0, 0, 0, 0, 0,
	2295, 2300, 0, 0, 51, 0, 115, 0, 0, 0,
	0, 0, 99, 112, 0, 0, 0, 0, 0, 0,
	2896, 2896, 0, 0, 0, 0, 0, 3191, 0, 1633,
	1633, 1633, 1633, 0, 0, 0, 288, 4588, 3207, 0,
	288, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	3606, 4602, 0, 0, 0, 0, 100, 0, 1345, 0,
	1345, 1181, 3206, 3196, 3194, 3198, 3200, 3190, 3192, 3208,
	3210, 3963, 3964, 0, 4625, 0, 100, 0, 0, 0,
	3202, 3204, 3212, 0, 0, 0, 2296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 1964,
	1966, 288, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 288, 0, 0, 3216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4426, 4427, 288,
	0, 288, 0, 0, 0, 745, 0, 288, 0, 2303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 0, 978, 0, 0, 0, 0, 1957, 0,
	0, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035,
	4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045,
	4046, 0, 4050, 288, 0, 1414, 288, 3941, 0, 0,
	1504, 0, 0, 0, 0, 0, 3661, 0, 0, 0,
	832, 2301, 2896, 2896, 2896, 2896, 0, 288, 0, 0,
	104, 0, 0, 0, 0, 2540, 4704, 0, 0, 0,
	288, 288, 0, 288, 0, 288, 0, 288, 0, 288,
	104, 0, 0, 0, 0, 3209, 0, 0, 0, 1987,
	3662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2292, 0, 0, 0, 2577, 2293, 0, 2578, 0, 2579,
	0, 0, 0, 0, 0, 0, 0, 3984, 0, 199,
	107, 0, 0, 111, 288, 288, 288, 288, 0, 0,
	0, 0, 0, 0, 4000, 2502, 1613, 1613, 0, 199,
	107, 1590, 0, 111, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 812, 0, 0, 3217, 832, 973, 0,
	0, 0, 0, 159, 0, 3201, 3203, 3211, 0, 0,
	252, 1958, 0, 0, 3913, 0, 0, 0, 973, 0,
	0, 0, 2297, 159, 0, 0, 0, 3911, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 3904, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 4634, 0, 4636,
	4637, 4638, 0, 4640, 0, 1613, 0, 0, 1965, 0,
	0, 254, 2294, 0, 0, 0, 1937, 0, 164, 0,
	0, 0, 0, 1989, 0, 0, 0, 2458, 0, 0,
	2298, 0, 0, 0, 204, 0, 0, 0, 164, 0,
	2734, 0, 253, 1990, 0, 0, 0, 1188, 0, 0,
	0, 0, 1936, 0, 204, 1590, 0, 246, 0, 4093,
	0, 0, 253, 1956, 0, 0, 247, 0, 0, 0,
	200, 0, 1953, 0, 3915, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	200, 3906, 4688, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3905, 0, 0, 2295,
	2300, 0, 745, 0, 0, 1754, 0, 0, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 288, 3966, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 288, 0, 745, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 288, 0, 0,
	1942, 0, 0, 3914, 0, 0, 0, 4922, 0, 0,
	0, 0, 0, 0, 0, 1419, 0, 0, 288, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 1633, 2296, 4936, 0, 0, 0,
	0, 0, 0, 0, 3902, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4968, 0, 288, 1424, 0,
	4790, 761, 0, 761, 0, 1590, 0, 3018, 0, 1951,
	1952, 0, 0, 288, 2290, 0, 288, 0, 2303, 0,
	288, 0, 288, 0, 0, 0, 0, 1414, 0, 288,
	288, 0, 1424, 1424, 3034, 0, 0, 0, 0, 288,
	0, 0, 1957, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 0, 1633, 2288, 0, 0, 0, 0,
	2301, 0, 0, 839, 839, 0, 0, 839, 839, 0,
	0, 0, 1934, 1935, 0, 0, 3077, 0, 0, 3912,
	3907, 3908, 3909, 3910, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 2289,
	0, 0, 288, 1987, 1937, 0, 0, 0, 0, 0,
	0, 0, 5059, 0, 0, 288, 2896, 2896, 5061, 3916,
	0, 0, 0, 0, 0, 0, 832, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 288, 0, 0, 0, 0, 0, 0,
	1953, 0, 1963, 0, 0, 288, 288, 3175, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 2297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 3235, 0, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 2896, 0, 2896, 0, 0,
	0, 1654, 0, 0, 288, 0, 288, 0, 1959, 1960,
	1961, 1962, 0, 288, 0, 0, 0, 1989, 1942, 0,
	0, 0, 0, 3280, 0, 0, 0, 0, 0, 0,
	2502, 0, 0, 3077, 0, 745, 1590, 0, 0, 0,
	0, 0, 0, 0, 3175, 978, 3077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 1964, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 1414, 288,
	0, 0, 0, 0, 4446, 0, 0, 1951, 1952, 1424,
	288, 0, 0, 1414, 0, 1414, 0, 1414, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 48, 47, 0, 288, 288, 288, 288, 1414, 0,
	0, 1414, 0, 288, 0, 0, 0, 79, 288, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1934, 1935, 0, 84, 0, 0, 0, 1419, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 288,
	1590, 0, 50, 0, 167, 1965, 0, 288, 4668, 0,
	0, 1987, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 93, 1590, 2871, 2872, 2873,
	2874, 2867, 2868, 2869, 2870, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 52, 70, 0, 0, 0, 0, 0, 0,
	1956, 53, 0, 0, 0, 0, 59, 0, 0, 1953,
	1963, 168, 2458, 0, 0, 0, 0, 0, 0, 51,
	0, 115, 0, 0, 0, 0, 0, 99, 112, 4720,
	0, 0, 0, 1958, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2847, 2848, 2849, 2850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 3961, 0, 0, 0, 0,
	0, 54, 0, 1654, 0, 2859, 2860, 2861, 2862, 2855,
	2856, 2857, 2858, 2863, 2864, 2865, 2866, 1959, 1960, 1961,
	1962, 100, 0, 0, 4660, 1989, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3509, 3510, 0, 3527, 3528, 3529, 0,
	0, 0, 0, 0, 0, 1970, 0, 4660, 0, 0,
	0, 0, 0, 0, 0, 0, 4363, 0, 0, 0,
	1964, 1966, 0, 0, 0, 0, 0, 0, 2843, 2844,
	2845, 2846, 2851, 2852, 2853, 2854, 0, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 2658, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 3524, 0, 0, 0, 0, 0, 0, 1957,
	1590, 0, 0, 0, 0, 0, 0, 0, 288, 4862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 745, 104, 0, 745, 0, 0,
	745, 745, 0, 0, 0, 0, 745, 0, 0, 2658,
	0, 0, 0, 55, 288, 0, 0, 0, 0, 0,
	0, 4892, 0, 0, 0, 0, 288, 0, 0, 0,
	58, 0, 0, 0, 0, 61, 0, 0, 1419, 0,
	1987, 0, 0, 0, 0, 73, 4914, 0, 0, 3515,
	0, 0, 0, 60, 199, 107, 0, 0, 111, 0,
	0, 0, 56, 0, 0, 0, 169, 288, 0, 0,
	0, 288, 288, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 0, 0, 0, 159, 1963,
	0, 0, 0, 0, 0, 3077, 3077, 288, 2458, 3669,
	2132, 0, 0, 0, 166, 0, 3077, 0, 2138, 3531,
	0, 0, 1958, 0, 0, 0, 0, 3077, 2138, 0,
	3077, 2138, 0, 0, 2138, 1419, 254, 3669, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 288,
	288, 2132, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 3525, 0, 164, 0, 0, 0, 0, 0, 0,
	2132, 0, 288, 0, 3743, 0, 3743, 0, 0, 204,
	1633, 0, 1414, 0, 1989, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 3077, 0, 3077, 0, 3774, 3077,
	2132, 247, 0, 3077, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2132, 0, 0,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 1987, 3, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1414, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 288, 0, 3818,
	0, 0, 0, 3820, 3077, 0, 0, 288, 0, 0,
	288, 0, 0, 3849, 0, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	288, 0, 0, 0, 3526, 3280, 0, 0, 1414, 0,
	288, 1970, 0, 3077, 0, 745, 0, 0, 0, 0,
	0, 0, 3077, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 2896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 1970, 0,
	0, 0, 0, 0, 1970, 1937, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	3931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	3937, 1936, 0, 0, 1654, 0, 0, 0, 1414, 288,
	0, 288, 1956, 0, 0, 0, 0, 1414, 0, 0,
	0, 1953, 0, 0, 2896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 868, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 0,
	0, 0, 1970, 3521, 3522, 3523, 0, 1970, 0, 879,
	3520, 3518, 3519, 3511, 3512, 3513, 3514, 3516, 3517, 0,
	1965, 1970, 0, 0, 0, 0, 1970, 0, 1937, 881,
	0, 0, 0, 1633, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 1590, 4005, 0, 0, 1942,
	0, 0, 880, 0, 0, 1990, 0, 0, 1633, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 1590, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 792,
	1613, 1970, 1975, 1590, 0, 1985, 0, 1970, 0, 0,
	0, 0, 1964, 1966, 0, 873, 0, 0, 0, 0,
	775, 0, 889, 0, 0, 776, 0, 0, 0, 1590,
	0, 0, 0, 0, 0, 0, 878, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3960, 0, 0, 288, 288, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 2896, 0, 777, 0, 0, 1188,
	0, 1957, 1959, 1960, 1961, 1962, 0, 778, 745, 745,
	0, 1188, 1942, 0, 0, 0, 0, 3509, 3510, 877,
	3527, 3528, 3529, 0, 0, 0, 0, 0, 0, 779,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 0,
	3972, 0, 0, 0, 0, 0, 2896, 0, 0, 0,
	288, 798, 0, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 1964, 1966, 0, 0, 0,
	0, 2896, 780, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1970, 0, 0, 3524, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	782, 0, 888, 0, 1957, 783, 0, 0, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2900, 0, 0, 0, 0, 0, 4201, 0,
	0, 4203, 4204, 0, 1958, 0, 1970, 0, 3743, 797,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 3515, 0, 0, 1590, 3175, 0, 0,
	0, 0, 0, 0, 870, 1987, 0, 1934, 1935, 0,
	0, 0, 2132, 0, 288, 0, 0, 0, 761, 761,
	1424, 0, 0, 0, 0, 0, 1989, 0, 794, 0,
	0, 1965, 0, 288, 0, 0, 0, 874, 0, 1937,
	0, 0, 0, 0, 288, 3280, 0, 0, 3280, 2138,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 3849, 0, 3531, 1963, 0, 1990, 288, 0, 0,
	0, 0, 288, 0, 0, 1936, 806, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1958, 0, 0,
	0, 0, 884, 0, 0, 0, 3077, 288, 872, 0,
	0, 0, 1974, 0, 0, 3525, 3175, 785, 0, 978,
	3077, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 1590, 0, 0, 1590, 805, 0, 786,
	0, 288, 0, 0, 0, 0, 0, 0, 869, 1989,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 876, 0, 0,
	0, 0, 806, 1942, 0, 0, 1987, 0, 0, 0,
	787, 0, 808, 0, 0, 802, 803, 0, 800, 0,
	0, 0, 0, 871, 795, 0, 0, 788, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 4382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 887,
	1590, 883, 0, 0, 0, 0, 1964, 1966, 0, 0,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 789, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 0, 3526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 288, 0, 799, 0, 0, 0, 1654, 0, 288,
	0, 0, 0, 0, 0, 1957, 0, 0, 808, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 0, 288, 1424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3077, 3077, 0, 3669, 0,
	0, 3743, 3077, 0, 0, 1590, 0, 0, 0, 0,
	4493, 0, 4493, 1654, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 3077, 0, 2138, 0, 0, 0,
	3669, 0, 1654, 1654, 288, 2132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2132, 0,
	288, 2132, 0, 288, 0, 0, 3743, 3521, 3522, 3523,
	0, 0, 0, 0, 3520, 3518, 3519, 3511, 3512, 3513,
	3514, 3516, 3517, 0, 0, 1963, 0, 3077, 0, 3077,
	288, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 3077,
	3077, 79, 0, 0, 0, 3280, 3280, 0, 0, 0,
	0, 0, 3669, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 1970, 0, 0, 0, 1970,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 93,
	0, 0, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 0, 0,
	972, 0, 0, 1970, 0, 1970, 1970, 1970, 1970, 0,
	0, 0, 0, 0, 0, 115, 0, 2900, 2900, 0,
	0, 99, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 100, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	3077, 2138, 0, 2138, 0, 0, 3849, 0, 0, 1590,
	0, 0, 0, 1970, 0, 288, 1970, 0, 0, 1970,
	0, 0, 1970, 0, 0, 4736, 1990, 4736, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1936, 0, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 832, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 3743, 1654, 0, 1654, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 0, 2132, 0, 288, 0,
	0, 0, 0, 0, 1970, 0, 0, 3530, 0, 2900,
	2900, 2900, 2900, 0, 0, 1970, 0, 1970, 0, 0,
	0, 3424, 1970, 0, 0, 3849, 0, 0, 4493, 2993,
	0, 1654, 0, 0, 0, 3077, 0, 0, 0, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 104,
	0, 0, 0, 1942, 0, 4827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1654, 0, 1590,
	1590, 0, 1590, 0, 0, 0, 3509, 3510, 0, 3527,
	3528, 3529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 288, 0, 0, 0, 3971,
	0, 0, 0, 0, 0, 0, 1964, 1966, 199, 107,
	1590, 0, 111, 0, 0, 0, 0, 0, 4005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 1952, 0, 1188, 0, 0, 0, 252,
	0, 0, 0, 0, 1934, 1935, 0, 973, 0, 3743,
	4883, 0, 159, 0, 0, 3524, 0, 3849, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 4493, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	254, 0, 4493, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 1990, 0, 0, 1590, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 0, 164, 288, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 761, 1953, 204, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 1987, 0, 0, 4493,
	4493, 0, 3515, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 200,
	4493, 0, 288, 4493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2138, 0, 0, 0, 0, 3417, 1590,
	0, 0, 0, 1654, 203, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 78, 0, 0,
	1942, 0, 3531, 0, 1424, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 5010, 0,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 1970, 84, 1970, 4736, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 3525, 0, 0, 0, 0, 0,
	1590, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 3077, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 93, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 1222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 972, 0, 0, 0, 0, 4005,
	0, 0, 0, 0, 0, 1987, 0, 51, 0, 115,
	0, 287, 287, 287, 0, 99, 112, 0, 0, 0,
	0, 1590, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1950, 902, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 902, 0, 1987, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 3526, 0, 0,
	1970, 1970, 0, 2900, 2900, 1590, 3849, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3530, 3530, 0,
	0, 1970, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 1970, 3077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4493, 1970, 4493, 0,
	0, 1654, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	2900, 2900, 2900, 0, 2900, 3530, 3530, 3530, 3530, 0,
	0, 0, 3077, 0, 0, 0, 0, 1989, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3175,
	0, 0, 0, 104, 0, 0, 3521, 3522, 3523, 0,
	1970, 0, 3077, 3520, 3518, 3519, 3511, 3512, 3513, 3514,
	3516, 3517, 0, 0, 0, 0, 3175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 107, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 1934, 1935, 252, 1967, 1968, 1969, 1978, 1979, 1980,
	0, 973, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 1971, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 1433, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 254, 0, 0, 0, 0, 0,
	1990, 0, 1173, 1173, 1173, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 164, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 1603, 0, 1970,
	1970, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 1662, 0, 1668, 0, 0,
	1188, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 1960, 1961,
	1962, 0, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 1765, 0,
	1975, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	1964, 1966, 1779, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 1982,
	0, 0, 0, 0, 0, 0, 1951, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 1855, 0, 0, 0,
	1970, 1970, 0, 0, 1970, 3530, 3530, 1970, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 78, 1970, 3509,
	3510, 0, 3527, 3528, 3529, 0, 0, 0, 1983, 0,
	0, 1970, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 84, 0, 1970, 1970, 1970, 1970, 1970, 0,
	1987, 0, 0, 0, 1970, 0, 1970, 0, 0, 3530,
	3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530,
	3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530, 3530, 0,
	0, 0, 3530, 93, 0, 1970, 1970, 0, 3524, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 287,
	287, 0, 2011, 287, 972, 0, 0, 0, 2024, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 99, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3509,
	3510, 0, 3527, 3528, 3529, 3515, 0, 1970, 0, 0,
	0, 0, 0, 287, 1989, 287, 287, 0, 0, 287,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 902, 0, 0, 0, 0, 0, 0, 0,
	0, 3532, 0, 0, 2084, 2084, 2084, 0, 0, 0,
	0, 0, 1970, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3531, 0, 0, 3524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 0, 0, 287, 287, 0, 0, 0, 0, 0,
	0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 3525, 0, 287,
	287, 0, 3484, 0, 0, 0, 3485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 3515, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 0, 1970, 1970, 0, 0, 0, 1970, 1970, 0,
	0, 1970, 1970, 0, 0, 0, 1970, 0, 287, 0,
	1970, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 199, 107, 0, 3531, 111, 0, 0, 0,
	2900, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	3526, 973, 0, 0, 0, 0, 159, 3525, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 1965, 0,
	0, 0, 0, 0, 254, 0, 1937, 0, 0, 0,
	0, 2900, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 0, 204, 1987, 0,
	0, 0, 0, 1956, 0, 253, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 1970,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 3521,
	3522, 3523, 0, 0, 0, 0, 3520, 3518, 3519, 3511,
	3512, 3513, 3514, 3516, 3517, 0, 0, 0, 0, 0,
	3526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 1350, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 2106, 0,
	1346, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 2106, 287, 0, 0, 0, 0, 1970, 1970, 1970,
	902, 0, 0, 1975, 0, 0, 1985, 902, 1970, 1970,
	3530, 2900, 0, 1964, 1966, 0, 0, 1970, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 1982, 0, 0, 287, 0, 0, 0, 1951,
	1952, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 3530, 2900, 0, 0, 0, 0, 0, 0,
	0, 2564, 1957, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 1970, 2900, 3521,
	3522, 3523, 0, 0, 0, 1970, 3520, 3518, 3519, 3511,
	3512, 3513, 3514, 3516, 3517, 0, 1970, 0, 1970, 2593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 2633, 0, 2637, 0, 0,
	0, 0, 0, 1987, 2651, 0, 0, 0, 0, 0,
	0, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 0, 2701, 0,
	2703, 2704, 2705, 2706, 3530, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2730, 0, 0, 0,
	0, 0, 0, 1970, 3530, 1958, 0, 1970, 2011, 0,
	0, 0, 2781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3530, 0, 2811, 2814,
	2817, 2820, 0, 1976, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2892, 0, 2903, 2905, 2910, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 287, 0, 0, 922, 0, 0, 287, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 0, 0, 0, 287,
	925, 287, 0, 1974, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 2777, 0, 0, 0, 2778,
	0, 926, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 287, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 927,
	0, 0, 0, 0, 928, 0, 0, 287, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	902, 287, 0, 287, 0, 287, 952, 287, 0, 287,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 0, 0, 0,
	0, 0, 923, 0, 287, 287, 287, 287, 0, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 930, 0, 0, 1984, 0,
	931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 0, 1990, 0, 807, 0, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 1350, 0, 0, 1953, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 948, 0, 0, 0, 3238, 3239, 0,
	3241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 1350, 0, 0,
	0, 0, 1942, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 1934, 1935, 1975, 0, 0, 1985, 1978,
	1979, 1980, 934, 0, 0, 1964, 1966, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 1981, 1346, 1982, 1937, 0, 0, 0, 0,
	1350, 1951, 1952, 0, 935, 1984, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 1990, 0, 0, 0, 0, 0, 287, 0,
	0, 1936, 0, 0, 1957, 944, 0, 0, 0, 3360,
	0, 0, 1956, 0, 0, 0, 0, 806, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	921, 0, 0, 945, 0, 0, 0, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 287, 0, 0, 942,
	287, 0, 287, 0, 1972, 0, 0, 0, 0, 287,
	287, 0, 0, 1991, 1992, 1987, 0, 937, 0, 287,
	0, 938, 957, 0, 956, 0, 0, 0, 939, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 940, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 958, 0, 955, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 0, 0, 3418,
	3419, 0, 0, 0, 1963, 3425, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 1985, 0, 0, 287, 0,
	0, 0, 1964, 1966, 3439, 3440, 0, 1958, 0, 0,
	2781, 0, 287, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 287, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	775, 0, 0, 0, 0, 776, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 3449, 0, 0, 0, 0,
	0, 1957, 0, 287, 0, 0, 0, 0, 0, 1989,
	0, 3463, 0, 0, 0, 287, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 3475, 0,
	0, 0, 0, 0, 1350, 0, 1350, 778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 902, 0, 0, 0, 0, 0, 779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 1987, 0, 287, 1974, 902, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 780, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4388, 0, 0, 0, 0, 0, 781, 0, 2910,
	2910, 2910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 2084, 0, 287, 0,
	782, 0, 0, 0, 3568, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 287, 0, 287,
	0, 0, 807, 0, 0, 1350, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 287, 287, 287, 287, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 794, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3701, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 804, 0, 785, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 786,
	0, 3757, 3758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	787, 0, 0, 0, 0, 802, 803, 0, 800, 0,
	0, 0, 0, 0, 795, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1350, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 0,
	0, 0, 789, 0, 796, 0, 0, 0, 1350, 0,
	0, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	1350, 0, 1350, 1350, 1350, 0, 0, 0, 791, 0,
	0, 0, 0, 799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 1965, 1346, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 287, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 2651, 2170, 2170, 1350, 1953, 0, 3958,
	3959, 0, 0, 3962, 0, 0, 0, 3965, 0, 0,
	0, 0, 0, 0, 0, 0, 3969, 287, 0, 0,
	0, 287, 287, 0, 0, 3976, 0, 0, 0, 0,
	3568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 4012, 4013, 0, 4014, 4015,
	4016, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 0, 1942, 4022, 0, 0, 1350,
	4024, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	287, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 4053, 4054, 0, 0, 0, 1975, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 4065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 1981, 4074, 1982, 0, 0,
	1350, 0, 0, 0, 1951, 1952, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 902, 0, 4137,
	0, 0, 0, 0, 0, 0, 1983, 287, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4155, 1972, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 1963, 4210, 4211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2170, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 4316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 283, 283, 741, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3974, 0, 0, 0, 0, 0,
	0, 0, 0, 4360, 4361, 1350, 0, 0, 0, 4365,
	4366, 0, 0, 0, 4369, 4370, 0, 0, 1350, 0,
	1350, 0, 4374, 1346, 1346, 0, 1350, 0, 0, 0,
	0, 0, 0, 4378, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 1965, 0, 0, 0, 0, 0,
	902, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 4537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 1975,
	0, 0, 1985, 0, 287, 0, 1235, 0, 0, 1964,
	1966, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 287, 1982, 0,
	0, 0, 287, 0, 0, 1951, 1952, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 289, 289, 289, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 4655, 4656, 4657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2651, 1987,
	0, 4666, 4667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 4675,
	4678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	1350, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 2170, 0, 0, 0, 1350,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 4737, 0, 0, 0, 1976,
	0, 0, 0, 2106, 4745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4753,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 4764, 0,
	0, 4766, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 2106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	287, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 1350, 0, 0, 0,
	287, 0, 0, 0, 0, 3487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1400, 0,
	1400, 1400, 0, 0, 0, 0, 1211, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	1350, 0, 1350, 0, 287, 0, 1350, 0, 0, 0,
	0, 0, 4891, 0, 1350, 0, 4895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 1759, 0, 1350, 0, 0, 1350, 0, 0, 0,
	0, 0, 2651, 0, 0, 0, 0, 0, 1147, 0,
	0, 4678, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2170, 0, 0, 0, 0, 0,
	0, 0, 0, 1173, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	2170, 2170, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2170,
	2170, 0, 5086, 5086, 5086, 0, 0, 0, 2106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 5111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 289, 289, 0, 0, 289, 0, 0, 1350,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 5086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 1510, 289, 289,
	0, 0, 289, 289, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 289, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 2122, 5086, 5243, 0, 2106,
	2106, 1510, 289, 289, 0, 0, 0, 0, 0, 0,
	0, 2133, 0, 1611, 0, 0, 0, 1510, 0, 0,
	2106, 0, 287, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 1350, 1350, 0, 1350, 0, 0,
	0, 1350, 0, 0, 1350, 0, 1400, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 2170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 894, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 894, 0, 1350, 0, 0, 0, 0, 1350, 1350,
	1350, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 1350, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 1350, 2106, 0, 2106, 1350,
	1350, 0, 1350, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 2444, 0,
	1350, 1350, 2451, 0, 0, 0, 0, 289, 117, 0,
	117, 0, 117, 0, 2464, 0, 0, 0, 1510, 0,
	1350, 0, 0, 289, 289, 289, 0, 0, 0, 0,
	2476, 0, 2476, 289, 0, 0, 0, 0, 2483, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 1350, 0,
	0, 0, 0, 0, 1168, 117, 117, 0, 289, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 117, 0, 117, 2451, 0, 0, 2512, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 117, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 2532, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 2548, 0, 2550, 0, 2552, 0, 2554, 0,
	2555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 1350,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2584, 2585, 2586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 1350, 1350, 1350, 1350, 1350, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2170, 0, 0, 0, 0, 2010, 0, 0, 289,
	2016, 1510, 1510, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1350, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 1350, 0, 1227, 289, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 289, 0, 2170, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 2969, 1510,
	0, 1510, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 2104, 0, 2107, 0, 117, 0, 0, 0, 0,
	0, 1510, 1510, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 289, 0, 0, 289,
	0, 0, 0, 1350, 1350, 1350, 0, 1510, 0, 1510,
	1510, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 289, 0, 289, 0, 289, 0,
	289, 0, 289, 0, 3020, 0, 0, 1400, 0, 0,
	0, 1400, 0, 1400, 1350, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 289, 289,
	289, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 2451, 2451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 1350,
	0, 0, 0, 1350, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 3258, 0, 0, 0, 0,
	0, 0, 0, 0, 2464, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3330,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 3341, 0,
	3344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	0, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 289,
	0, 0, 0, 289, 0, 289, 0, 0, 0, 0,
	0, 0, 289, 289, 0, 3378, 1611, 3380, 1611, 0,
	0, 0, 289, 0, 3386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1510,
	1400, 0, 0, 0, 117, 0, 0, 0, 3415, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 1936, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1147, 0, 0, 1147, 1147, 0, 0,
	0, 0, 0, 0, 0, 1507, 289, 1510, 0, 0,
	0, 0, 1350, 0, 1350, 0, 0, 0, 289, 289,
	894, 0, 0, 1510, 0, 0, 0, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2719, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 1168, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 2010, 289, 0, 289,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	1985, 0, 1510, 0, 0, 0, 0, 1964, 1966, 1507,
	0, 0, 0, 0, 0, 1510, 0, 1510, 0, 0,
	0, 0, 0, 1510, 1981, 0, 1982, 0, 0, 0,
	0, 289, 0, 1951, 1952, 1510, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 1973, 289, 0, 0, 0, 2107, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 289, 289, 289,
	289, 0, 0, 0, 0, 0, 289, 3616, 0, 0,
	0, 289, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 1400, 0,
	289, 0, 1611, 1611, 0, 0, 0, 0, 1629, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 1630, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 3665, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3720, 3722, 0, 0, 2464, 0, 0, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 1629, 0,
	1629, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1629, 1629, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	117, 0, 0, 117, 0, 117, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 3842, 0,
	0, 2451, 0, 3486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 117, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	3943, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 289, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3956,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 289, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 289, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 2719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 1990,
	0, 0, 289, 0, 0, 0, 0, 1510, 1936, 1510,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 1956,
	289, 1510, 0, 0, 0, 0, 0, 0, 1953, 0,
	289, 0, 0, 289, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 1510,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 1630,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	1510, 0, 289, 1510, 289, 0, 0, 0, 0, 1975,
	0, 0, 1985, 0, 1507, 0, 0, 0, 0, 1964,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 1981, 0, 1982, 0,
	0, 289, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 2464, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2464, 0, 0, 0, 1957, 0,
	1510, 0, 0, 0, 0, 4269, 1630, 0, 1630, 0,
	1630, 0, 0, 0, 0, 4279, 894, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 1630,
	0, 0, 0, 2464, 0, 0, 0, 0, 4298, 0,
	0, 0, 1630, 0, 0, 0, 0, 1983, 0, 1629,
	0, 0, 0, 0, 1630, 0, 1630, 1630, 1630, 0,
	0, 0, 1629, 0, 1629, 0, 0, 0, 1972, 0,
	1629, 0, 0, 0, 117, 117, 0, 117, 0, 1987,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 117,
	0, 117, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 1976,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 117, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 289, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 1510, 1510, 0, 1510, 3483, 0, 0, 1510, 0,
	0, 1510, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 1508, 4513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 2464, 0, 0, 0, 0, 0, 289, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 1510, 1510, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2464, 0, 0, 1510, 0,
	1510, 0, 0, 0, 289, 4613, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 1508, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 1510, 1510, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 1510, 1510, 0,
	0, 0, 0, 0, 0, 0, 4722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 289, 0, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1510, 0, 0, 289, 0, 0, 289, 0, 0, 0,
	0, 0, 1630, 0, 1630, 0, 0, 0, 0, 0,
	1630, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 289, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1629, 0, 0, 0,
	1507, 0, 0, 0, 0, 1510, 1510, 894, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 4852, 1611, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 289, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 1510, 1510, 1510,
	1510, 1510, 1510, 1510, 1629, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5024, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1510, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1510, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 289, 289, 0,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 1629,
	0, 1629, 0, 0, 0, 1629, 0, 0, 1629, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	1510, 0, 1971, 1965, 0, 0, 0, 0, 0, 0,
	1510, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	0, 117, 0, 1629, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	289, 0, 1629, 1629, 1629, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1629, 1630, 1629, 0, 0,
	1508, 0, 0, 1507, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 1507, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 1630, 0, 1975, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2719, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	1508, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1507, 0, 1507, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 1629, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1508,
	0, 0, 0, 1507, 0, 0, 1984, 0, 1629, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 117, 1507, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3482, 0, 0, 1507, 0, 1629,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 1630, 1630,
	0, 1630, 0, 1975, 0, 1630, 1985, 0, 1630, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 1629, 1629, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 1630, 1630, 1630, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 1630, 1507, 0,
	0, 1629, 1972, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 1965, 0, 0,
	0, 0, 1963, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 1936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1976, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 1508, 0, 1508, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 1629, 0, 1942,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 1975, 0, 0, 1985, 0, 1508, 0, 3481,
	0, 0, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	1508, 1982, 1044, 0, 1095, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 1973, 0, 0, 1052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1630, 1630, 0, 0, 1067, 0, 1050, 1049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1069, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 1054, 1508, 0, 0, 0, 1106, 1630, 1079,
	1983, 0, 0, 0, 0, 0, 0, 1064, 1065, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 0,
	0, 1972, 0, 0, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 0, 1987, 0, 1096, 1056, 0, 0, 0, 0,
	0, 1057, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 1508, 0, 1630,
	0, 0, 0, 1060, 0, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1061, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 1070, 1068, 0, 0, 0, 1989, 0, 0, 1063,
	0, 0, 0, 1080, 0, 0, 1101, 1100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1103, 1092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 1630, 1630, 1630,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2778, 0,
	0, 0, 0, 0, 1055, 0, 0, 1105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 1088, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 1086, 0, 0, 0,
	0, 0, 0, 0, 1104, 1081, 0, 0, 1073, 1071,
	0, 0, 1076, 0, 0, 0, 0, 0, 1077, 0,
	0, 1046, 0, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 1078, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 1083,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687,
	1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 1520, 692, 319, 320, 321, 322, 323, 324,
	1521, 1522, 0, 325, 693, 694, 695, 1523, 326, 327,
	696, 1524, 1591, 1525, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1526, 337, 338, 339, 336, 340, 1527,
	341, 1630, 342, 343, 344, 345, 346, 347, 1528, 348,
	349, 350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531,
	1533, 1534, 1535, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 1536, 364, 360, 362, 1537, 365, 363,
	366, 1538, 367, 368, 369, 1539, 1540, 370, 371, 372,
	1541, 373, 374, 375, 1542, 376, 377, 378, 1543, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 1544, 294, 1545, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 1546, 397, 398, 399, 1547, 400, 401, 1548, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1549, 414, 705, 1550, 706, 415,
	1551, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 1552, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1553, 1292,
	512, 433, 710, 711, 1554, 712, 1555, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1556, 446, 448, 447,
	1557, 449, 714, 1297, 450, 451, 1298, 1558, 452, 453,
	454, 455, 456, 457, 460, 1559, 1560, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1561, 296,
	1301, 506, 507, 508, 509, 1562, 715, 510, 716, 513,
	514, 1563, 0, 515, 0, 516, 1564, 1565, 518, 519,
	520, 1566, 1567, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1568, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 1569, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 1570, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 1571, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 1572, 605,
	606, 604, 607, 608, 609, 1573, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 1574, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 1575, 640, 641, 0, 636, 627, 1576,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 1577,
	650, 728, 729, 730, 731, 1578, 660, 1579, 651, 652,
	653, 654, 732, 655, 733, 1580, 656, 657, 658, 659,
	0, 661, 662, 1581, 1582, 663, 664, 666, 668, 669,
	665, 667, 670, 1583, 671, 1584, 0, 672, 673, 674,
	734, 735, 736, 1585, 676, 675, 677, 678, 679, 737,
	680, 681, 1586, 1587, 1588, 1589, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 2947, 0, 0, 0, 0, 0, 0, 0, 2948,
	297, 298, 300, 299, 301, 302, 303, 304, 1511, 305,
	306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518,
	307, 1519, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 1520,
	692, 319, 320, 321, 322, 323, 324, 1521, 1522, 0,
	325, 693, 694, 695, 1523, 326, 327, 696, 1524, 1591,
	1525, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	1526, 337, 338, 339, 336, 340, 1527, 341, 0, 342,
	343, 344, 345, 346, 347, 1528, 348, 349, 350, 1290,
	351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	1536, 364, 360, 362, 1537, 365, 363, 366, 1538, 367,
	368, 369, 1539, 1540, 370, 371, 372, 1541, 373, 374,
	375, 1542, 376, 377, 378, 1543, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 1544, 294, 1545, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 1546, 397,
	398, 399, 1547, 400, 401, 1548, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 1549, 414, 705, 1550, 706, 415, 1551, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 1552, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 1553, 1292, 512, 433, 710,
	711, 1554, 712, 1555, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1556, 446, 448, 447, 1557, 449, 714,
	1297, 450, 451, 1298, 1558, 452, 453, 454, 455, 456,
	457, 460, 1559, 1560, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1561, 296, 1301, 506, 507,
	508, 509, 1562, 715, 510, 716, 513, 514, 1563, 0,
	515, 0, 516, 1564, 1565, 518, 519, 520, 1566, 1567,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 1568,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 1569, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 1570, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 3983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3985, 297, 298, 300, 299, 301,
	302, 303, 304, 1511, 305, 306, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1520, 692, 319, 320, 321, 322,
	323, 324, 1521, 1522, 0, 325, 693, 694, 695, 1523,
	326, 327, 696, 1524, 1591, 1525, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1526, 337, 338, 339, 336,
	340, 1527, 341, 0, 342, 343, 344, 345, 346, 347,
	1528, 348, 349, 350, 1290, 351, 352, 353, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1536, 364, 360, 362, 1537,
	365, 363, 366, 1538, 367, 368, 369, 1539, 1540, 370,
	371, 372, 1541, 373, 374, 375, 1542, 376, 377, 378,
	1543, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1544, 294,
	1545, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1546, 397, 398, 399, 1547, 400, 401,
	1548, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1549, 414, 705, 1550,
	706, 415, 1551, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 1552, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1553, 1292, 512, 433, 710, 711, 1554, 712, 1555, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1556, 446,
	448, 447, 1557, 449, 714, 1297, 450, 451, 1298, 1558,
	452, 453, 454, 455, 456, 457, 460, 1559, 1560, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1561, 296, 1301, 506, 507, 508, 509, 1562, 715, 510,
	716, 513, 514, 1563, 0, 515, 0, 516, 1564, 1565,
	518, 519, 520, 1566, 1567, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1568, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1569, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1570,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1571, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1572, 605, 606, 604, 607, 608, 609, 1573, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1574, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1575, 640, 641, 0, 636,
	627, 1576, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1577, 650, 728, 729, 730, 731, 1578, 660, 1579,
	651, 652, 653, 654, 732, 655, 733, 1580, 656, 657,
	658, 659, 0, 661, 662, 1581, 1582, 663, 664, 666,
	668, 669, 665, 667, 670, 1583, 671, 1584, 0, 672,
	673, 674, 734, 735, 736, 1585, 676, 675, 677, 678,
	679, 737, 680, 681, 1586, 1587, 1588, 1589, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4418, 297, 298, 300, 299, 301, 302,
	303, 304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515,
	687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 1520, 692, 319, 320, 321, 322, 323,
	324, 1521, 1522, 0, 325, 693, 694, 695, 1523, 326,
	327, 696, 1524, 1591, 1525, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1526, 337, 338, 339, 336, 340,
	1527, 341, 0, 342, 343, 344, 345, 346, 347, 1528,
	348, 349, 350, 1290, 351, 352, 353, 1529, 1530, 1532,
	1531, 1533, 1534, 1535, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 1536, 364, 360, 362, 1537, 365,
	363, 366, 1538, 367, 368, 369, 1539, 1540, 370, 371,
	372, 1541, 373, 374, 375, 1542, 376, 377, 378, 1543,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 1544, 294, 1545,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 1546, 397, 398, 399, 1547, 400, 401, 1548,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1549, 414, 705, 1550, 706,
	415, 1551, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 1552, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1553,
	1292, 512, 433, 710, 711, 1554, 712, 1555, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1556, 446, 448,
	447, 1557, 449, 714, 1297, 450, 451, 1298, 1558, 452,
	453, 454, 455, 456, 457, 460, 1559, 1560, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1561,
	296, 1301, 506, 507, 508, 509, 1562, 715, 510, 716,
	513, 514, 1563, 0, 515, 0, 516, 1564, 1565, 518,
	519, 520, 1566, 1567, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1568, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 1569,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 1570, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 1571, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 1572,
	605, 606, 604, 607, 608, 609, 1573, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 1574, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 1575, 640, 641, 0, 636, 627,
	1576, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	1577, 650, 728, 729, 730, 731, 1578, 660, 1579, 651,
	652, 653, 654, 732, 655, 733, 1580, 656, 657, 658,
	659, 0, 661, 662, 1581, 1582, 663, 664, 666, 668,
	669, 665, 667, 670, 1583, 671, 1584, 0, 672, 673,
	674, 734, 735, 736, 1585, 676, 675, 677, 678, 679,
	737, 680, 681, 1586, 1587, 1588, 1589, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4416, 297, 298, 300, 299, 301, 302, 303,
	304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687,
	1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 1520, 692, 319, 320, 321, 322, 323, 324,
	1521, 1522, 0, 325, 693, 694, 695, 1523, 326, 327,
	696, 1524, 1591, 1525, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1526, 337, 338, 339, 336, 340, 1527,
	341, 0, 342, 343, 344, 345, 346, 347, 1528, 348,
	349, 350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531,
	1533, 1534, 1535, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 1536, 364, 360, 362, 1537, 365, 363,
	366, 1538, 367, 368, 369, 1539, 1540, 370, 371, 372,
	1541, 373, 374, 375, 1542, 376, 377, 378, 1543, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 1544, 294, 1545, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 1546, 397, 398, 399, 1547, 400, 401, 1548, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1549, 414, 705, 1550, 706, 415,
	1551, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 1552, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1553, 1292,
	512, 433, 710, 711, 1554, 712, 1555, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1556, 446, 448, 447,
	1557, 449, 714, 1297, 450, 451, 1298, 1558, 452, 453,
	454, 455, 456, 457, 460, 1559, 1560, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1561, 296,
	1301, 506, 507, 508, 509, 1562, 715, 510, 716, 513,
	514, 1563, 0, 515, 0, 516, 1564, 1565, 518, 519,
	520, 1566, 1567, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1568, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 1569, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 1570, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 1571, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 1572, 605,
	606, 604, 607, 608, 609, 1573, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 1574, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 1575, 640, 641, 0, 636, 627, 1576,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 1577,
	650, 728, 729, 730, 731, 1578, 660, 1579, 651, 652,
	653, 654, 732, 655, 733, 1580, 656, 657, 658, 659,
	0, 661, 662, 1581, 1582, 663, 664, 666, 668, 669,
	665, 667, 670, 1583, 671, 1584, 0, 672, 673, 674,
	734, 735, 736, 1585, 676, 675, 677, 678, 679, 737,
	680, 681, 1586, 1587, 1588, 1589, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4661, 297, 298, 300, 299,
	301, 302, 303, 304, 1511, 305, 306, 1512, 1513, 1514,
	0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 1520, 692, 319, 320, 321,
	322, 323, 324, 1521, 1522, 0, 325, 693, 694, 695,
	1523, 326, 327, 696, 1524, 1591, 1525, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1526, 337, 338, 339,
	336, 340, 1527, 341, 0, 342, 343, 344, 345, 346,
	347, 1528, 348, 349, 350, 1290, 351, 352, 353, 1529,
	1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 1536, 364, 360, 362,
	1537, 365, 363, 366, 1538, 367, 368, 369, 1539, 1540,
	370, 371, 372, 1541, 373, 374, 375, 1542, 376, 377,
	378, 1543, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 1544,
	294, 1545, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 1546, 397, 398, 399, 1547, 400,
	401, 1548, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1549, 414, 705,
	1550, 706, 415, 1551, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 1552, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1553, 1292, 512, 433, 710, 711, 1554, 712, 1555,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1556,
	446, 448, 447, 1557, 449, 714, 1297, 450, 451, 1298,
	1558, 452, 453, 454, 455, 456, 457, 460, 1559, 1560,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1561, 296, 1301, 506, 507, 508, 509, 1562, 715,
	510, 716, 513, 514, 1563, 0, 515, 0, 516, 1564,
	1565, 518, 519, 520, 1566, 1567, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1568, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 1569, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	1570, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4522, 297,
	298, 300, 299, 301, 302, 303, 304, 1511, 305, 306,
	1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 307,
	1519, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 1520, 692,
	319, 320, 321, 322, 323, 324, 1521, 1522, 0, 325,
	693, 694, 695, 1523, 326, 327, 696, 1524, 1591, 1525,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1526,
	337, 338, 339, 336, 340, 1527, 341, 0, 342, 343,
	344, 345, 346, 347, 1528, 348, 349, 350, 1290, 351,
	352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 1536,
	364, 360, 362, 1537, 365, 363, 366, 1538, 367, 368,
	369, 1539, 1540, 370, 371, 372, 1541, 373, 374, 375,
	1542, 376, 377, 378, 1543, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 1544, 294, 1545, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 1546, 397, 398,
	399, 1547, 400, 401, 1548, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1549, 414, 705, 1550, 706, 415, 1551, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1293, 423,
	424, 1552, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1553, 1292, 512, 433, 710, 711,
	1554, 712, 1555, 434, 435, 1294, 713, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1556, 446, 448, 447, 1557, 449, 714, 1297,
	450, 451, 1298, 1558, 452, 453, 454, 455, 456, 457,
	460, 1559, 1560, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1561, 296, 1301, 506, 507, 508,
	509, 1562, 715, 510, 716, 513, 514, 1563, 0, 515,
	0, 516, 1564, 1565, 518, 519, 520, 1566, 1567, 521,
	522, 717, 1302, 523, 1303, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1568, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 1569, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 1570, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 1571, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 1572, 605, 606, 604, 607, 608,
	609, 1573, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 1574,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 1575,
	640, 641, 0, 636, 627, 1576, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 1577, 650, 728, 729, 730,
	731, 1578, 660, 1579, 651, 652, 653, 654, 732, 655,
	733, 1580, 656, 657, 658, 659, 0, 661, 662, 1581,
	1582, 663, 664, 666, 668, 669, 665, 667, 670, 1583,
	671, 1584, 0, 672, 673, 674, 734, 735, 736, 1585,
	676, 675, 677, 678, 679, 737, 680, 681, 1586, 1587,
	1588, 1589, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4345, 297, 298, 300, 299, 301, 302, 303, 304,
	1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516,
	1517, 1518, 307, 1519, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 1520, 692, 319, 320, 321, 322, 323, 324, 1521,
	1522, 0, 325, 693, 694, 695, 1523, 326, 327, 696,
	1524, 1591, 1525, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1526, 337, 338, 339, 336, 340, 1527, 341,
	0, 342, 343, 344, 345, 346, 347, 1528, 348, 349,
	350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533,
	1534, 1535, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 1536, 364, 360, 362, 1537, 365, 363, 366,
	1538, 367, 368, 369, 1539, 1540, 370, 371, 372, 1541,
	373, 374, 375, 1542, 376, 377, 378, 1543, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 1544, 294, 1545, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	1546, 397, 398, 399, 1547, 400, 401, 1548, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1549, 414, 705, 1550, 706, 415, 1551,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 1552, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1553, 1292, 512,
	433, 710, 711, 1554, 712, 1555, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1556, 446, 448, 447, 1557,
	449, 714, 1297, 450, 451, 1298, 1558, 452, 453, 454,
	455, 456, 457, 460, 1559, 1560, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1561, 296, 1301,
	506, 507, 508, 509, 1562, 715, 510, 716, 513, 514,
	1563, 0, 515, 0, 516, 1564, 1565, 518, 519, 520,
	1566, 1567, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1568, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 1569, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 1570, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4001, 297, 298, 300, 299, 301,
	302, 303, 304, 1511, 305, 306, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1520, 692, 319, 320, 321, 322,
	323, 324, 1521, 1522, 0, 325, 693, 694, 695, 1523,
	326, 327, 696, 1524, 1591, 1525, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1526, 337, 338, 339, 336,
	340, 1527, 341, 0, 342, 343, 344, 345, 346, 347,
	1528, 348, 349, 350, 1290, 351, 352, 353, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1536, 364, 360, 362, 1537,
	365, 363, 366, 1538, 367, 368, 369, 1539, 1540, 370,
	371, 372, 1541, 373, 374, 375, 1542, 376, 377, 378,
	1543, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1544, 294,
	1545, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1546, 397, 398, 399, 1547, 400, 401,
	1548, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1549, 414, 705, 1550,
	706, 415, 1551, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 1552, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1553, 1292, 512, 433, 710, 711, 1554, 712, 1555, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1556, 446,
	448, 447, 1557, 449, 714, 1297, 450, 451, 1298, 1558,
	452, 453, 454, 455, 456, 457, 460, 1559, 1560, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1561, 296, 1301, 506, 507, 508, 509, 1562, 715, 510,
	716, 513, 514, 1563, 0, 515, 0, 516, 1564, 1565,
	518, 519, 520, 1566, 1567, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1568, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1569, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1570,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1571, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1572, 605, 606, 604, 607, 608, 609, 1573, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1574, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1575, 640, 641, 0, 636,
	627, 1576, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1577, 650, 728, 729, 730, 731, 1578, 660, 1579,
	651, 652, 653, 654, 732, 655, 733, 1580, 656, 657,
	658, 659, 0, 661, 662, 1581, 1582, 663, 664, 666,
	668, 669, 665, 667, 670, 1583, 671, 1584, 0, 672,
	673, 674, 734, 735, 736, 1585, 676, 675, 677, 678,
	679, 737, 680, 681, 1586, 1587, 1588, 1589, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3815, 297, 298,
	300, 299, 301, 302, 303, 304, 1511, 305, 306, 1512,
	1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 1520, 692, 319,
	320, 321, 322, 323, 324, 1521, 1522, 0, 325, 693,
	694, 695, 1523, 326, 327, 696, 1524, 1591, 1525, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1526, 337,
	338, 339, 336, 340, 1527, 341, 0, 342, 343, 344,
	345, 346, 347, 1528, 348, 349, 350, 1290, 351, 352,
	353, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 1536, 364,
	360, 362, 1537, 365, 363, 366, 1538, 367, 368, 369,
	1539, 1540, 370, 371, 372, 1541, 373, 374, 375, 1542,
	376, 377, 378, 1543, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 1544, 294, 1545, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 1546, 397, 398, 399,
	1547, 400, 401, 1548, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1549,
	414, 705, 1550, 706, 415, 1551, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	1552, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1553, 1292, 512, 433, 710, 711, 1554,
	712, 1555, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1556, 446, 448, 447, 1557, 449, 714, 1297, 450,
	451, 1298, 1558, 452, 453, 454, 455, 456, 457, 460,
	1559, 1560, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1561, 296, 1301, 506, 507, 508, 509,
	1562, 715, 510, 716, 513, 514, 1563, 0, 515, 0,
	516, 1564, 1565, 518, 519, 520, 1566, 1567, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1568, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 1569, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 1570, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 1571, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 1572, 605, 606, 604, 607, 608, 609,
	1573, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 1574, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 1575, 640,
	641, 0, 636, 627, 1576, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 1577, 650, 728, 729, 730, 731,
	1578, 660, 1579, 651, 652, 653, 654, 732, 655, 733,
	1580, 656, 657, 658, 659, 0, 661, 662, 1581, 1582,
	663, 664, 666, 668, 669, 665, 667, 670, 1583, 671,
	1584, 0, 672, 673, 674, 734, 735, 736, 1585, 676,
	675, 677, 678, 679, 737, 680, 681, 1586, 1587, 1588,
	1589, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2801, 297, 298, 300, 299, 301, 302, 303, 304, 1511,
	305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 307, 1519, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	1520, 692, 319, 320, 321, 322, 323, 324, 1521, 1522,
	0, 325, 693, 694, 695, 1523, 326, 327, 696, 1524,
	1591, 1525, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1526, 337, 338, 339, 336, 340, 1527, 341, 0,
	342, 343, 344, 345, 346, 347, 1528, 348, 349, 350,
	1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 1536, 364, 360, 362, 1537, 365, 363, 366, 1538,
	367, 368, 369, 1539, 1540, 370, 371, 372, 1541, 373,
	374, 375, 1542, 376, 377, 378, 1543, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 1544, 294, 1545, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 1546,
	397, 398, 399, 1547, 400, 401, 1548, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1549, 414, 705, 1550, 706, 415, 1551, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 1552, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1553, 1292, 512, 433,
	710, 711, 1554, 712, 1555, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1556, 446, 448, 447, 1557, 449,
	714, 1297, 450, 451, 1298, 1558, 452, 453, 454, 455,
	456, 457, 460, 1559, 1560, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1561, 296, 1301, 506,
	507, 508, 509, 1562, 715, 510, 716, 513, 514, 1563,
	0, 515, 0, 516, 1564, 1565, 518, 519, 520, 1566,
	1567, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1568, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 1569, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 1570, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	1571, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 1572, 605, 606, 604,
	607, 608, 609, 1573, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 1574, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 1575, 640, 641, 0, 636, 627, 1576, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 1577, 650, 728,
	729, 730, 731, 1578, 660, 1579, 651, 652, 653, 654,
	732, 655, 733, 1580, 656, 657, 658, 659, 0, 661,
	662, 1581, 1582, 663, 664, 666, 668, 669, 665, 667,
	670, 1583, 671, 1584, 0, 672, 673, 674, 734, 735,
	736, 1585, 676, 675, 677, 678, 679, 737, 680, 681,
	1586, 1587, 1588, 1589, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 1502, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2422, 297, 298, 300, 299, 301, 302,
	303, 304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515,
	687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 1520, 692, 319, 320, 321, 322, 323,
	324, 1521, 1522, 0, 325, 693, 694, 695, 1523, 326,
	327, 696, 1524, 1591, 1525, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1526, 337, 338, 339, 336, 340,
	1527, 341, 0, 342, 343, 344, 345, 346, 347, 1528,
	348, 349, 350, 1290, 351, 352, 353, 1529, 1530, 1532,
	1531, 1533, 1534, 1535, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 1536, 364, 360, 362, 1537, 365,
	363, 366, 1538, 367, 368, 369, 1539, 1540, 370, 371,
	372, 1541, 373, 374, 375, 1542, 376, 377, 378, 1543,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 1544, 294, 1545,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 1546, 397, 398, 399, 1547, 400, 401, 1548,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1549, 414, 705, 1550, 706,
	415, 1551, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 1552, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1553,
	1292, 512, 433, 710, 711, 1554, 712, 1555, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1556, 446, 448,
	447, 1557, 449, 714, 1297, 450, 451, 1298, 1558, 452,
	453, 454, 455, 456, 457, 460, 1559, 1560, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1561,
	296, 1301, 506, 507, 508, 509, 1562, 715, 510, 716,
	513, 514, 1563, 0, 515, 0, 516, 1564, 1565, 518,
	519, 520, 1566, 1567, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1568, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 1569,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 1570, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 1571, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 1572,
	605, 606, 604, 607, 608, 609, 1573, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 1574, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 1575, 640, 641, 0, 636, 627,
	1576, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	1577, 650, 728, 729, 730, 731, 1578, 660, 1579, 651,
	652, 653, 654, 732, 655, 733, 1580, 656, 657, 658,
	659, 0, 661, 662, 1581, 1582, 663, 664, 666, 668,
	669, 665, 667, 670, 1583, 671, 1584, 0, 672, 673,
	674, 734, 735, 736, 1585, 676, 675, 677, 678, 679,
	737, 680, 681, 1586, 1587, 1588, 1589, 682, 683, 738,
	684, 685, 686, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 1511, 305,
	306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518,
	307, 1519, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 1520,
	692, 319, 320, 321, 322, 323, 324, 1521, 1522, 0,
	325, 693, 694, 695, 1523, 326, 327, 696, 1524, 1591,
	1525, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	1526, 337, 338, 339, 336, 340, 1527, 341, 0, 342,
	343, 344, 345, 346, 347, 1528, 348, 349, 350, 1290,
	351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	1536, 364, 360, 362, 1537, 365, 363, 366, 1538, 367,
	368, 369, 1539, 1540, 370, 371, 372, 1541, 373, 374,
	375, 1542, 376, 377, 378, 1543, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 1544, 294, 1545, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 1546, 397,
	398, 399, 1547, 400, 401, 1548, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 1549, 414, 705, 1550, 706, 415, 1551, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 1552, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 1553, 1292, 512, 433, 710,
	711, 1554, 712, 1555, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1556, 446, 448, 447, 1557, 449, 714,
	1297, 450, 451, 1298, 1558, 452, 453, 454, 455, 456,
	457, 460, 1559, 1560, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1561, 296, 1301, 506, 507,
	508, 509, 1562, 715, 510, 716, 513, 514, 1563, 0,
	515, 0, 516, 1564, 1565, 518, 519, 520, 1566, 1567,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 1568,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 1569, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 1570, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 2776,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 2773, 305, 306, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	2774, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 2772, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	2775, 0, 0, 0, 0, 0, 0, 0, 1209, 2771,
	0, 1169, 1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 252, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 254, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 1750, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 246, 682, 683, 738, 684, 685, 686, 1183,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	2015, 2013, 0, 0, 1207, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 252, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 254, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 1750, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 246, 682, 683, 738, 684, 685, 686, 1183, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 2015,
	3437, 0, 0, 1207, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 1215, 1248, 1180, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 1185, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1191, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1182, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 1192, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 252, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 254, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 1750, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	246, 682, 683, 738, 684, 685, 686, 1183, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 2015, 2013,
	0, 0, 1207, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 2906, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 2911, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 2907, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 2908, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	2821, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 0, 0, 0, 0, 0, 0, 0, 0, 1209,
	2819, 0, 2818, 1207, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 1209, 2816, 0, 2815, 1207, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 2813, 0, 2812, 1207, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 2810, 0, 1851, 1207,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1850, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	1172, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 1187, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 5036, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 1187, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 2653, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 2652, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 4756, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 1187, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	1187, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 4310, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 2085, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 1209,
	0, 0, 0, 1207, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 3979,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 2085, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 1209, 0, 0, 0, 1207, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 2911, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 2013, 0, 2916, 1207, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 2914, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	2902, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 2891, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 2889, 0, 2880, 2887, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 2883,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 2884, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 2885, 470,
	2882, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 2886, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	2881, 686, 1183, 0, 0, 0, 2877, 0, 2880, 2887,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 2883, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 2884, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	2885, 470, 2882, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 2886,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 2881, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 0,
	0, 0, 0, 0, 0, 2021, 0, 1209, 0, 0,
	0, 1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 2632, 305, 306,
	0, 0, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 2594, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 2565, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 1856, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 1785, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	1780, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 1766, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 1761, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 1670, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1669, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 1664, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1663, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	1657, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 1620, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 1602, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 1606, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	1607, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 1605, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 1434, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 5085, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 5084, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 5083, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 5085, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 5084,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 4680, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 4681, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	4679, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 3404, 3405, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 3402, 3403, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 2640,
	2641, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	0, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 2899, 0, 0, 0, 0, 0,
	0, 2897, 2898, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 0, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 3397, 3398, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 2267, 2268, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 0, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 5085, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 0, 1252, 0, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 0, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 5084, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 2918, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 0, 1248, 0, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 1632, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 1209, 0, 0,
	0, 1207, 1249, 1213, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 1262,
	0, 317, 1269, 318, 1268, 0, 1279, 319, 320, 321,
	322, 323, 324, 0, 1248, 0, 325, 1309, 1310, 695,
	0, 326, 327, 1255, 0, 1236, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357,
	358, 1272, 359, 361, 1266, 1265, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1280, 1281, 392, 1204,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1264,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 1277, 1278, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1287,
	0, 1214, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1250, 1251, 1254, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1292, 512, 433, 1259, 1260, 0, 1220, 0,
	434, 435, 1294, 1252, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1288, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 1243, 1242,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 296, 1301, 506, 507, 508, 509, 1205, 1253,
	510, 1267, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 1282, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1283, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1263, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 1169, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 1209, 0, 0, 0,
	1207, 1249, 0, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 1248, 0, 325, 693, 694, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1334, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 296, 1301, 506, 507, 508, 509, 0, 1253, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 1340,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 1342, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	252, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 254, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 1750, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 246, 682, 683,
	738, 684, 685, 686, 1348, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 1338, 0, 2109, 0, 1249, 0, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 1248,
	0, 325, 693, 694, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1334, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 296, 1301, 506,
	507, 508, 509, 0, 1253, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1340, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 1342, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 252, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 254, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 1750, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 246, 682, 683, 738, 684, 685, 686,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3561, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 2109, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	1248, 0, 325, 693, 694, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1334, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 296, 1301,
	506, 507, 508, 509, 0, 1253, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1340, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 1342, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 1330, 0, 1348, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 0, 0,
	1338, 307, 1336, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 1248,
	0, 325, 693, 694, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1334, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 296, 1301, 506,
	507, 508, 509, 0, 1253, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1340, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 1342, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 1348, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1249, 0, 0, 1338,
	307, 1336, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 1248, 0,
	325, 693, 694, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1334, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 296, 1301, 506, 507,
	508, 509, 0, 1253, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 1340, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	1342, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 1348, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 0, 0, 1338, 307,
	1336, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 1248, 0, 325,
	693, 694, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 296, 1301, 506, 507, 508,
	509, 0, 1253, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 1348, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 307, 4492,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 1248, 0, 325, 693,
	694, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 296, 1301, 506, 507, 508, 509,
	0, 1253, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 1342, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 2744, 2745, 2746,
	2763, 2764, 2765, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 2766, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 2005, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 1990, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 2756, 0, 337, 338, 339, 336, 340,
	0, 341, 2752, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	2757, 2758, 2759, 2760, 393, 394, 395, 702, 0, 0,
	2751, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 2761,
	2762, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 2754, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 2755, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 1989, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 0, 1627, 2741, 2742, 2743, 2767, 2753, 2747,
	0, 2749, 2750, 2748, 2735, 2736, 2737, 2738, 2739, 2740,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1591,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 0, 1301, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 252, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 254, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 1750, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 246, 682, 683, 738, 684, 685, 686, 0,
	1747, 247, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	203, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 1591, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 713, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 0, 1301, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 252, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 254, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 1750, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 246, 682, 683, 738, 684, 685, 686, 1627, 1626,
	247, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 203,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 1591, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1292, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 0, 1301, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1627, 1626, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 1774, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1591, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 0, 1301, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 3893, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 1591, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 0, 1301, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 2505,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1627, 2414, 0, 0,
	0, 0, 2415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 1774, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 1591, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1292,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 2413, 448, 447,
	0, 449, 714, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 0,
	1301, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1627, 1626, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 1774, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 1591, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 713, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 0, 1301, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 1169,
	0, 291, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 1756,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 252, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 254, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 1750, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	246, 682, 683, 738, 684, 685, 686, 0, 0, 247,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 203, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 3176, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 2123, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	5252, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 291, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 3843, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 291, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 1744, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 1348, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 307,
	3298, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 1248, 0, 325,
	693, 694, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 296, 1301, 506, 507, 508,
	509, 0, 1253, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 4004, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 993, 0, 893, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 2492, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 900, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 990, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 992, 0, 636, 627, 898, 642, 643, 644,
	645, 646, 899, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 2168,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 903, 0, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 0, 2174,
	0, 317, 2164, 318, 2180, 0, 2187, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 2190, 2191, 0,
	0, 326, 327, 0, 0, 1591, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 1272, 359, 361, 2178, 2177, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1257, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 0, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 2176,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 2185, 2186, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 0, 0, 0, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1292, 512, 433, 2171, 2172, 0, 2167, 0,
	434, 435, 1294, 0, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 0, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 0, 1301, 506, 507, 508, 509, 0, 0,
	510, 2179, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 0, 1302,
	523, 1303, 0, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 2161, 537,
	538, 539, 2162, 540, 541, 542, 0, 543, 0, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 2175, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 0, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 2173, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 2189, 630, 631,
	632, 633, 0, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 2181, 2182, 2183, 2184, 0, 660,
	0, 651, 652, 653, 654, 0, 655, 0, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 0, 2165, 2188, 0, 676, 675, 677,
	678, 679, 0, 680, 681, 0, 0, 0, 0, 682,
	683, 0, 684, 685, 686, 893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	4131, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	2155, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 900, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 4130, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 898, 642,
	643, 644, 645, 646, 899, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 4129, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 893, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 2195, 305, 306,
	0, 0, 0, 0, 903, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 900, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 2194,
	600, 601, 602, 603, 0, 2196, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 898, 642, 643, 644, 645,
	646, 899, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 2193, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 893,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 2146, 305, 306, 0, 0, 0,
	0, 903, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 900,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 2145, 600, 601, 602,
	603, 0, 2147, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 898, 642, 643, 644, 645, 646, 899, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 2144, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 891, 0, 893, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 903, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 900, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	898, 642, 643, 644, 645, 646, 899, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 893, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 903, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 900, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 898, 642, 643,
	644, 645, 646, 899, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 893, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 903, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 900, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 2544, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 2545, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 898, 642, 643, 644, 645, 646,
	899, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 2546, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 291, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	903, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 903, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 1591, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 0, 1301, 506, 507, 508, 509,
	4234, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1627, 1626, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 1591, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	1292, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 0,
	0, 1301, 506, 507, 508, 509, 3793, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1805, 0, 1627, 1626, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 1591, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 1804, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 0, 1301,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 1803, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 1802, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1677, 0, 1627, 1626, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1591,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1679, 708, 709, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 0, 1301, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1622,
	0, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 1591, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 0, 1301, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1627, 1626, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 1591, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	1292, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 0,
	0, 1301, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1627, 1626, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1591,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 0, 1301, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1627,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 1591, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 0, 1301, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 3078, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 3835, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 3082, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 3834, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 3081, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 3831, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 3833, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 3830, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 3080, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 3832, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 3078, 326, 327, 696, 0, 0, 3072, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 3074, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 3082, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	3081, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3071, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 3080, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 3079,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1885, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 1884, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 1883,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 1886, 591, 592, 599, 600, 601, 602,
	603, 0, 1882, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 1880, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 1881, 675, 677,
	678, 679, 737, 680, 681, 1595, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1597,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 1340, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1592, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1594, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1340, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1498, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1500, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 1340, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 771,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 770, 303, 304, 759, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 762, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 768,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 764, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 758, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 759, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 762, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 763, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 764, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	759, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 762, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 763, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 764, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 759, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 762, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 4244,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 764, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	2450, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 1340, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 3729, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 3268, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3267,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 2513, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 2457, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 2456, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 2443,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 2445, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 2407,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 1340, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1722, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1721, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1615, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1608,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1610, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1417, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1416, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1407, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1406,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1404, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1403, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1399, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1398, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 740,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 282, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 762, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 763,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 764, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 2553, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 2551, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 2549,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 2463, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 2220, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 2214,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 977, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 976, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 975, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 860, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 849, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 858,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 851, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 857, 401, 853, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 854, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 852, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 855, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 856, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 850, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 843,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 849,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 858, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	851, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 857, 401, 853, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	854, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	852, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 855, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 856, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 850, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 3834, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 4577,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1445, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1448, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 1446, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 831, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 830, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 829, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 1449, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	827, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1445, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1448, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 1446, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 831, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 830, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	829, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	1449, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 827, 729,
	730, 731, 0, 660, 0, 651, 1447, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 838,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 836, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 749, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 748, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 747,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 3176, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 4882, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 3670, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 4464, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 4188, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	2953, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 3176, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 3307, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 2351,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 830, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 829, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 827, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 2523, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 2511,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1778, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1770, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 821, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 817, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 822, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 831, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 830, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 829, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 1755, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	827, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1728, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1727, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1712,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1710, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1705, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1682, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1680,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1675, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1636, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1600,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1451, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	830, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 829, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 827, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1422, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1421,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1413, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1412, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 1365, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 841, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 821, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	817, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 816, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 822, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 831, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 830, 583,
	584, 585, 586, 818, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 829, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 819, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 827, 729, 730, 731, 0, 660, 0, 651,
	823, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 810, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 811, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 773, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 766,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 744, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3866, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 830, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 829, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 827, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3772, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3746, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3742, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3694, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3692,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3680, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3677, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3278, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 811, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 2481, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 0, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1384, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 1313, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 0, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 0, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 0, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 0, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1718, 0, 1429, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 0, 317, 0, 318, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 0, 0, 0, 0, 326, 327, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 1431,
	354, 355, 356, 357, 358, 0, 359, 361, 0, 0,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 0, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 0, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1717, 0, 0, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 0,
	0, 0, 0, 0, 434, 435, 0, 0, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 0,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 0, 510, 0, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 0, 0, 523, 0, 0, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 0, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 0, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 0,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1432, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 0, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 0, 630, 631, 632, 633, 0, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 0, 0,
	0, 0, 0, 660, 0, 651, 652, 653, 654, 0,
	655, 0, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 0, 0, 0,
	0, 676, 675, 677, 678, 679, 0, 680, 681, 1639,
	0, 1429, 0, 682, 683, 0, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 0, 318, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 0,
	0, 0, 0, 326, 327, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 1431, 354, 355,
	356, 357, 358, 0, 359, 361, 0, 0, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 0, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 0, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1638, 0, 0, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 0, 0, 0,
	0, 0, 434, 435, 0, 0, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 0, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 0, 510, 0, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	0, 0, 523, 0, 0, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	0, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 0, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 0, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1432, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 0, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 0,
	630, 631, 632, 633, 0, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 0, 0, 0, 0,
	0, 660, 0, 651, 652, 653, 654, 0, 655, 0,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 0, 0, 0, 0, 676,
	675, 677, 678, 679, 0, 680, 681, 1427, 0, 1429,
	0, 682, 683, 0, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 317, 0, 318, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 0, 0, 0,
	0, 326, 327, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 1431, 354, 355, 356, 357,
	358, 0, 359, 361, 0, 0, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 0, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 0,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1426, 0, 0, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 0, 0, 0, 0, 0,
	434, 435, 0, 0, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 0, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 0,
	510, 0, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 0, 0,
	523, 0, 0, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 0, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 0, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 0, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1432, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 0, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 0, 630, 631,
	632, 633, 0, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 0, 0, 0, 0, 0, 660,
	0, 651, 652, 653, 654, 0, 655, 0, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 0, 0, 0, 0, 676, 675, 677,
	678, 679, 0, 680, 681, 2234, 0, 1429, 0, 682,
	683, 0, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	0, 318, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 0, 0, 0, 326,
	327, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 1431, 354, 355, 356, 357, 358, 0,
	359, 361, 0, 0, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 0, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 0,
	0, 0, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 0, 0, 0, 0, 0, 434, 435,
	0, 0, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 0, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 0, 510, 0,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 0, 0, 523, 0,
	0, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 0, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 0, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 0, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1432, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 0, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 0, 630, 631, 632, 633,
	0, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 0, 0, 0, 0, 0, 660, 0, 651,
	652, 653, 654, 0, 655, 0, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 0, 0, 0, 0, 676, 675, 677, 678, 679,
	0, 680, 681, 2201, 0, 1429, 0, 682, 683, 0,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 0, 318,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 0, 0, 0, 0, 326, 327, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 1431, 354, 355, 356, 357, 358, 0, 359, 361,
	0, 0, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	0, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 0, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 0, 0, 0,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 0, 0, 0, 0, 0, 434, 435, 0, 0,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 0, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 0, 510, 0, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 0, 0, 523, 0, 0, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 0, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	0, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 0, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1432, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 0,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 0, 630, 631, 632, 633, 0, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	0, 0, 0, 0, 0, 660, 0, 651, 652, 653,
	654, 0, 655, 0, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 0,
	0, 0, 0, 676, 675, 677, 678, 679, 1429, 680,
	681, 0, 0, 0, 0, 682, 683, 0, 684, 685,
	686, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 0, 318, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 0, 0, 0, 0,
	326, 327, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 1431, 354, 355, 356, 357, 358,
	0, 359, 361, 0, 0, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 0, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 0, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	0, 0, 0, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 0, 0, 0, 0, 0, 434,
	435, 0, 0, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 0, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 0, 510,
	0, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 0, 0, 523,
	0, 0, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 0, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 0, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 0, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1432, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 0, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 0, 630, 631, 632,
	633, 0, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 0, 0, 0, 0, 0, 660, 0,
	651, 652, 653, 654, 0, 655, 0, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 0, 0, 0, 0, 676, 675, 677, 678,
	679, 0, 680, 681, 0, 0, 0, 0, 682, 683,
	0, 684, 685, 686, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 1965, 0,
	0, 0, 0, 0, 1934, 1935, 1937, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 1965, 0,
	0, 0, 0, 1990, 0, 0, 1937, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 1982, 1975, 0, 0, 1985, 0, 0, 1951,
	1952, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 1963, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 1958, 0, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 1989, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 1974, 0, 5011, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 1948, 1949, 1955, 1977, 1954, 1950,
	1942, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 5007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 4910, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 4861, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 4860, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4664,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 4488, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 4393, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 4392, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 4391, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4009,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 3479, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 3478, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 3477, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 1975, 1963, 0,
	1985, 0, 2381, 0, 0, 0, 0, 1964, 1966, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 1958, 0, 0, 1981, 0, 1982, 0, 0, 0,
	1984, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1976,
	0, 1973, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 2382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 1974,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 3476, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 1963, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 1958,
	0, 0, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 1976, 0, 0,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 2313,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 2311, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 1974, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 3441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 2383, 0, 0, 0, 0, 0, 1976, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 1957, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 2384, 0, 0, 0, 0,
	1936, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 1987, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2312, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 5161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 0, 0, 1985, 0, 0, 0, 0, 1989,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	2310, 0, 1937, 0, 0, 0, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 3541, 0,
	0, 0, 0, 5160, 0, 3540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 3412, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3413, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 2926,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 2925, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 4765, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 4212, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 1957, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 1936, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 1987, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 3547, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 1975,
	0, 0, 1985, 0, 0, 0, 0, 1989, 0, 1964,
	1966, 0, 0, 1971, 1965, 0, 0, 0, 3542, 0,
	3990, 0, 1937, 0, 0, 0, 1981, 0, 1982, 0,
	0, 0, 1984, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1973, 0, 0, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 1963, 1975,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 1958, 0, 0, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1976,
	0, 0, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 1974,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 3480, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 3507, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 1958, 0, 0, 1981, 0,
	1982, 0, 0, 0, 1984, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 1976, 0, 1973, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 2494, 0, 1959, 1960,
	1961, 1962, 0, 1974, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1963, 1975, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 1958, 0, 0, 0, 0, 1981, 0,
	1982, 1984, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 1976, 0, 0, 0, 1973, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	1957, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 1974, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	1963, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944,
}

var sqlPact = [...]int{
	6529, -1000, -1000, -1000, -1000, 186, -1000, -1000, 182, 180,
	179, 178, 177, 175, 174, 173, 172, 171, 164, -1000,
	-1000, 163, 161, 160, 158, -1000, -1000, 157, -1000, -1000,
	156, -1000, 155, 154, 153, -1000, -1000, 147, -1000, 146,
	-1000, -1000, -1000, -1000, 141, 140, 139, 98885, 98297, 99471,
	2520, 125895, 108275, 2118, 87725, 125307, 87137, 124719, 2388, 11247,
	124131, 2979, 137, -1000, 123543, 136, 134, 133, -1000, 107687,
	122955, 105337, 104749, 2013, -1000, 132, 131, -1000, 7371, 76503,
	129, 128, 127, 125, 2783, 124, -1000, 117, 116, -1000,
	-1000, 115, -1000, 10632, 1633, -1000, 114, 113, -1000, 687,
	104161, 112, 111, 110, 2914, 109, 108, 73559, 107, 105,
	104, 2770, 3083, -1000, -1000, 2280, -1000, -1000, 103, 102,
	99, 97, 96, 95, 94, 93, 92, 91, 90, 89,
	88, -1000, 84, 76, 75, 74, 72, -1000, 71, 69,
	68, -1000, 66, -1000, 63, 59, 58, 53, 52, 51,
	50, 48, 47, 46, 45, 43, 41, 40, 39, 18680,
	-1000, -1000, 36, -1000, 2128, 1800, 1772, 1765, 1746, 1743,
	1010, 34, 32, 30, 27, 26, 25, 24, 23, 21,
	20, 19, 18, 17, 16, 15, 10, 1, -2, -3,
	-4, 138, -5, -6, -8, -15, -16, -17, -18, 2911,
	3794, -1000, 1774, 985, 33378, 3209, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 134685, 126481, -19, -94,
	-25, -1000, 3579, 898, 61150, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 263, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 459, 2521, 735, -1000, -1000, -1000, 122367, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2519, -53, -1000, 2217,
	-1000, -1000, -1000, -1000, -1000, 731, -1000, 2516, 2485, 345,
	2483, -1000, -1000, -1000, 3657, 2674, 4118, 4116, 4115, 4114,
	4112, 134099, 2011, 4111, 2733, 4110, 4109, 4108, 4106, 4105,
	4104, 4103, -1000, 97709, 1088, 97121, 96533, 3675, 121781, 95945,
	121193, 137035, 51534, 978, 3653, -1000, -1000, -1000, -1000, -1000,
	-1000, 126481, -1000, 1087, -1000, -1000, 4098, 2209, 728, 107099,
	-1000, -1000, 120605, 2157, -1000, -1000, -1000, 951, 1245, 35786,
	35786, 35786, 262, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3667, -1000, -1000, -1000, -1000, 126481, 2923, 2923, 1477, 1466,
	1466, 2923, 2923, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4096, 4095, 4094, 4093, 4092, -1000, -1000, -1000, 86549,
	25963, 85961, 85373, 120017, 50932, 95357, 94769, 4091, 4090, 4087,
	50330, 81257, 58755, 3793, 119429, 136447, 3792, 3789, 1080, 2207,
	1557, -1000, -1000, -1000, -1000, -1000, -1000, -43, 78264, 3841,
	126481, -1000, 258, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49728, 713, 49126, 732, 48524, 573, 118841, -1000, -1000, -1000,
	-1000, 80659, -1000, 118253, 2667, 4086, 4085, 1188, 4084, 3534,
	1979, 4080, 2034, 1275, 4076, 4075, 4073, 4072, 4071, 4068,
	4065, 1602, 117665, 3207, 1650, 117077, 1950, 135859, 1078, 94181,
	99471, 2825, 116489, 1495, 1483, -1000, -1000, -1000, -1000, 3301,
	3076, 3075, 1363, -1000, -1000, -1000, -1000, 64708, 8807, 5414,
	-1000, -1000, 7477, 115901, 67688, 99471, 99471, -1000, -1000, -1000,
	-1000, -1000, -1000, 47922, 436, 47320, 850, 115313, -1000, -1000,
	65304, 3153, 1128, -1000, -1000, -1000, -1000, -1000, 114725, 46718,
	433, 46116, 794, 126481, -1000, 3206, 2122, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2834, 1684, 3835, 2940,
	80061, 2268, 1481, 3613, 3300, 3298, 1586, 2204, 3297, 4064,
	2860, 3295, 3294, 3284, 3279, 3276, 1704, 2789, 381, 2781,
	32776, 3197, 1912, 45514, 1594, 1589, 3271, 3261, 3859, 3704,
	2183, 2163, 2439, 2199, 84785, 4060, 4058, 3578, 3259, 3255,
	3029, 3253, -1000, 3152, 1598, 245, -1000, -1000, -1000, -1000,
	-1000, -1000, 1523, -1000, -1000, -1000, -1000, -1000, 90069, -1000,
	-1000, 1506, -1000, -1000, 1506, -1000, -1000, -1000, -1000, -1000,
	1377, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1774, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2456, -1000, 2232, -1000,
	-1000, -1000, 2729, 3557, 3557, 3557, 3652, 449, 446, -1000,
	138, -1000, -1000, 146451, -1000, -1000, 52136, 52136, 52136, 52136,
	52136, 52136, 52136, 52136, 2419, -1000, 727, -1000, -1000, 783,
	-1000, 726, 663, 600, -1000, -1000, -1000, -1000, -1000, -1000,
	725, -1000, -1000, -1000, -1000, -1000, -1000, 3834, -1000, 29027,
	-1000, -1000, -1000, 441, 724, 52136, -1000, -1000, 3892, 3890,
	972, -1000, 236, 973, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3204, 722, 719, -1000,
	717, 716, 715, 712, 711, -1000, 709, -1000, 708, 707,
	701, 698, 696, 689, 688, 685, -1000, 2274, -1000, -1000,
	-1000, -1000, -1000, -1000, 646, 645, 645, 645, -1000, 1072,
	-1000, -1000, -1000, 268, 644, 266, 643, 638, 636, -1000,
	682, 681, 678, 676, 674, 673, 670, 669, 668, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1070, -1000, -1000, -1000,
	-1000, 1398, -44, 126481, -1000, 459, -44, -1000, -1000, 665,
	-1000, 37610, 37610, 37610, -1000, -1000, 2515, 52136, -1000, 2730,
	-1000, -36, -36, 915, 62917, -1000, 59950, 915, 455, 800,
	68863, -1000, 3151, -1000, -1000, 664, 234, -1000, -1000, -1000,
	-1000, 26559, 3149, 126481, 126481, 126481, 99471, 99471, 99471, 126481,
	4057, 4056, 3445, 52136, -1000, -1000, 75915, 138794, 100057, -1000,
	-1000, 3772, 74145, 75328, 3202, 138794, 3201, 138211, 4051, -1000,
	-1000, -1000, -1000, -1000, 3414, 4048, 4047, 4046, -1000, 126481,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 244, 3409, -1000,
	-1000, 103573, 244, 3407, -1000, 244, 3405, -1000, 102987, -1000,
	-1000, 2407, 3403, -1000, -1000, 251, 3402, -1000, -1000, -1000,
	248, 3399, -1000, -1000, 232, -138, 3397, -1000, -1000, -1000,
	-1000, -1000, -1000, 146451, -1000, -1000, -1000, 137623, -1000, 3587,
	-1000, 126481, -1000, 52136, -1000, -1000, 3769, 1678, 3588, 3692,
	-1000, -1000, -59, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2714, 2715, 1194, 2553, -1000, 3456, 1568, 35786, 3518, -1000,
	-1000, -1000, -1000, -1000, 231, 26559, 3028, -1000, -1000, 126481,
	-1000, 126481, 2923, 2923, -1000, -1000, -1000, 3852, 3850, 2923,
	2923, 126481, 126481, -1000, -1000, -1000, -1000, -1000, -1000, 5795,
	3396, 1583, -1000, 2546, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2300, 3395, -1000, 2383, 3394, 2294, -1000,
	-1000, 1782, -1000, 142965, 1530, -1000, -1000, -1000, -1000, 2027,
	3393, -35, -1000, -1000, 2462, -1000, -1000, -1000, -1000, 142757,
	-1000, 3098, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1795, -1000, -1000, 2237, 2264, -1000, 1394, 3392, -1000,
	2936, 2936, 93593, 3357, 67092, 65304, 78264, -49, -1000, -1000,
	-1000, -1000, -1000, -139, -1000, 25360, 146451, -1000, -1000, -1000,
	-1000, 1933, 146451, 921, -1000, -1000, 3391, -1000, 146451, 920,
	-1000, -1000, 3378, -1000, 2788, -1000, 3200, -1000, -1000, 2620,
	2618, 1031, -1000, 4045, -1000, -1000, 4044, -1000, 4042, 4040,
	4039, -1000, 1837, 2191, 4036, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 93007, 2514, -1000, -1000, 89483, 3199, -1000,
	2617, 3691, -1000, 92419, 1077, -1000, 1014, 2616, -1000, 102401,
	974, 2615, -1000, 4028, 3670, 2861, 1014, 2614, -1000, -1000,
	-1000, -1000, -1000, 1023, -1000, 70622, -1000, 70622, -1000, 1758,
	-1000, 133513, -36, 99471, 3834, -1000, -98, -1000, -1000, -1000,
	898, -1000, 64109, -1000, 64109, 106511, 81853, 993, 3147, 72970,
	146243, -1000, 1030, -1000, -1000, 146451, -1000, -1000, -1000, 2787,
	-1000, -183, 2934, -1000, 81853, 66496, 3146, 2785, -1000, 146451,
	-1000, -1000, -1000, -1000, 146451, -1000, -1000, -1000, 81853, 89483,
	-1000, 114137, 91831, -1000, -1000, 1596, 2769, -1000, -1000, -1000,
	81853, 1404, 81853, 81853, 81853, -1000, 113549, -1000, -1000, 2227,
	1585, 3583, 2222, 99471, -1000, 2025, -1000, -1000, -1000, 3600,
	3355, 126481, -1000, -1000, 3198, -1000, 77677, 101815, -1000, 101229,
	-1000, 100643, -1000, 99471, -1000, 99471, -1000, 4020, 4012, 4006,
	-1000, -1000, 4004, -1000, 4003, 3593, -1000, 758, 44912, 146451,
	3591, -1000, 4001, 2173, 3197, 146451, -1000, 3270, 1771, 1761,
	126481, -1000, -1000, 126481, -1000, 126481, -1000, -1000, -1000, 2531,
	1680, -1000, -1000, 2707, -1000, -1000, -1000, 1029, -1000, -1000,
	99471, 99471, 99471, 99471, 1634, -1000, 44310, -1000, -1000, 3251,
	4000, 1850, -1000, 1984, -1000, 3145, 3567, -1000, 1587, 1954,
	229, 3900, -1000, -1000, 252, -1000, -1000, -59, -1000, 132927,
	-1000, 2729, -1000, 126481, -1000, 2713, 3180, 3191, 1885, 2518,
	2815, -1000, 43708, 2795, 55748, 2539, 138, -1000, -1000, 138,
	138, 34582, -1000, -1000, 74145, 74145, 26559, 1389, 52136, 52136,
	52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136,
	52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136,
	52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136,
	52136, 52136, 52136, 52136, 2378, 52136, 1376, 52136, 52136, 52136,
	52136, 2385, -1000, -1000, 2099, 488, 2235, 663, -1000, -1000,
	-1000, 3820, 3820, 3820, 628, 628, 628, 146868, 146868, 627,
	3999, 783, -1000, 52136, -1000, 70, 63503, 52136, 27157, -1000,
	446, 10063, 2766, -1000, 444, 27789, -1000, -1000, -1000, 29027,
	600, 43076, 52136, 1050, 146451, -1000, -1000, 1968, 3844, 24757,
	3196, 3017, 659, 864, 856, 32144, 31512, 30880, 30248, 852,
	770, 52136, 52136, 52136, 52136, 52136, 52136, 52136, 52136, -1000,
	-1000, 3847, -1000, 3844, -1000, -1000, -1000, -1000, 3844, 1382,
	1372, 3844, -1000, 3844, 3844, 6435, 6435, 42474, 41872, 41270,
	56350, 40668, 52136, 29646, 40066, 39464, -1000, 58156, 126481, -44,
	3766, 52136, 319, -1000, 143875, -1000, 319, 319, 657, -99,
	146451, 2782, 2782, 61739, 2604, 2430, 2430, 2430, -1000, 915,
	19292, 915, 111791, 2444, 915, 915, 220, 240, 443, 59354,
	2730, 111791, 764, 653, -26, -27, -28, -1000, -1000, -31,
	-32, -1000, -1000, 99471, 650, 27157, 26559, 218, 2154, -100,
	2807, 2802, -1000, 2799, 2797, -1000, 2796, 2512, -1000, -1000,
	-1000, 1975, -107, 1373, 99471, 126481, 1505, 3998, -106, -1000,
	8183, -109, -1000, 1365, 217, 3844, -1000, -1000, -1000, -1000,
	-1000, 3995, 3994, -1000, 1061, 648, 647, 699, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 646, 645, 645, 645,
	-1000, 268, 644, 266, 643, 638, 636, -1000, -1000, -1000,
	-1000, -1000, 3143, 99471, 126481, 1504, 3992, 88311, -138, 100057,
	-54, -1000, -1000, 126481, -1000, -1000, -1000, 3990, -1000, 99471,
	-1000, -1000, 99471, 244, 3377, -1000, 99471, -1000, 99471, 243,
	3376, -1000, -1000, 126481, -1000, 99471, 99471, -1000, 126481, 126481,
	126481, 138794, 138794, 241, -1000, 99471, 888, -110, 1209, -59,
	-1000, -1000, -1000, -1000, 1506, -1000, 1945, -1000, -1000, -1000,
	-1000, -1000, -1000, 1613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 972, -1000, -1000, -1000, -1000, 3832, 3827, -45,
	-1000, -1000, 26559, -1000, 2083, -1000, -1000, -1000, -1000, 126481,
	126481, -1000, -1000, 126481, 126481, -1000, -1000, -64, 1770, 556,
	1369, -1000, 84197, 2695, 3564, 3988, 2845, 3553, 1754, -1000,
	1677, 635, -1000, 3664, 90069, 3703, 3753, 1400, -1000, 3142,
	-1000, -1000, -1000, 948, 1787, 1918, 1361, 1359, 90069, 2383,
	-1000, 74145, -1000, 2858, 3651, 1466, 1434, 1466, 1466, 1419,
	-1000, 90069, 1911, 1356, 1355, 1353, -1000, -1000, 1779, 1717,
	-1000, -1000, 112963, 1628, -1000, 1351, 1350, 3785, 2456, 2352,
	813, 2133, -1000, 1410, 1349, 3138, -1000, -1000, -68, 3702,
	3747, 1400, -1000, 3137, 1347, -1000, -1000, -1000, 3648, 99471,
	26559, 1643, 1641, 1640, 1909, 1346, -46, -1000, 3699, 1701,
	-1000, 89483, 89483, 108861, 126481, 3802, 81853, -1000, 2622, -1000,
	-1000, -1000, 3612, 3611, -1000, -1000, 1340, 1332, -1000, 1065,
	5301, 3486, -1000, 138794, 1065, 1065, 2226, 3350, 2900, 1688,
	-1000, 2933, 910, 2932, -1000, -1000, -1000, 910, -49, 78264,
	126481, 204, -1000, 70, 52136, 52136, 70, 52136, 70, -1000,
	3685, 3348, 3347, 3987, -1000, -1000, -1000, -1000, -1000, 3986,
	2142, 2731, -1000, -1000, 632, 2611, 3136, 126481, 205, -1000,
	99471, 3237, 77090, 3346, 138794, 2383, 2610, -1000, -1000, 91243,
	-1000, 3344, 459, 2609, -1000, 683, 3985, 3343, -1000, 132341,
	-1000, 3587, 1464, 3342, 1122, 822, 3763, -1000, 822, 71209,
	-1000, 126481, -1000, -36, 5394, 83025, -115, -116, 437, -1000,
	112377, 126481, 126481, 3500, 2168, 2165, -1000, 1002, 65304, -1000,
	65304, -118, -1000, -183, 2930, 1645, 65304, -1000, 993, -165,
	910, -1000, 910, -1000, 99471, 3190, -1000, -1000, 81853, 993,
	993, 993, -1000, -1000, -1000, -1000, 3984, 3983, 3982, 3980,
	-1000, -1000, 1007, 99471, 126481, 99471, -1000, -1000, 1673, -1000,
	202, -1000, 138794, -1000, 138794, 126481, 99471, -1000, 1007, 126481,
	1007, 126481, 1007, 126481, 1007, 1007, -1000, -1000, -1000, -1000,
	-1000, 70, -1000, -1000, 146451, -1000, 52136, -1000, -1000, 1656,
	3979, 1802, -1000, 3187, -1000, 3186, -1000, 12, -1000, -1000,
	3846, 2023, -1000, 3887, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3977, 146451, -1000, 2126, -1000, -1000, -1000, -1000,
	99471, 99471, 99471, 99471, 126481, 3478, -1000, 126481, 3470, 99471,
	-1000, 3898, -1000, -1000, 90069, -1000, 2713, 3180, -1000, -1000,
	-1000, -1000, -1000, -1000, 1763, 2490, -1000, 2757, -1000, 1716,
	-1000, -1000, -1000, 146451, 56952, -1000, -1000, 146451, 1988, -1000,
	55146, 54544, -1000, -1000, 1851, 99471, 2823, -1000, 2823, -112,
	-1000, 143667, 2756, 99471, -1000, -1000, -1000, -1000, -1000, 947,
	767, 767, 1428, 1428, 1428, 1428, 3701, 397, 1042, 5429,
	10992, 10992, 7746, 7746, 7746, 7746, 7746, 10992, 599, 628,
	628, 599, 599, 599, 599, 599, 628, 628, 628, 10992,
	10992, 10992, 628, 146868, 146661, 8653, 52136, 52136, 1329, 2096,
	488, 8386, 52136, 6241, 6241, 6241, 6241, -1000, 2233, -1000,
	-1000, -1000, -1000, 3129, 631, 56350, 56350, -1000, -1000, -1000,
	-1000, 28408, 52136, -1000, -1000, -1000, -1000, 38832, -1000, -1000,
	142547, -336, 430, -1000, 196, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 424, -105,
	7, -1000, 52136, 52136, 52136, 420, -1000, 195, 52136, 126481,
	-1000, 18422, 756, -117, -1000, -124, 1499, -1000, 52136, -1000,
	-1000, 1328, -1000, 1326, 1325, 1321, -1000, 630, 418, -1000,
	194, -1000, 2422, 629, 625, 52136, -1000, -1000, -1000, -1000,
	-1000, 142339, -1000, -1000, 142131, -1000, -1000, 141923, -1000, -1000,
	141715, -1000, -1000, -1000, -1000, -1000, 146035, 18023, 17558, 15909,
	9270, 15007, 12519, -125, 415, -126, 414, 942, 938, 411,
	410, 408, -127, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -132, 402, -1000, 3120, -105,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 396, -1000,
	383, -1000, 145827, -105, 372, 9598, -1000, 56350, 56350, 56350,
	56350, 371, -1000, 143459, -1000, 145619, 38230, 38230, 38230, 369,
	145409, 52136, -105, -133, -1000, -150, -1000, -1000, -1000, -1000,
	559, -152, 1047, 37610, 60561, 26559, -1000, 1047, 1047, 52136,
	-1000, 52136, 2778, -1000, -1000, -1000, -1000, 2773, 2344, 2782,
	61739, -1000, -1000, -1000, -1000, 111791, -1000, 3834, 3433, -1000,
	111791, -1000, -1000, 126481, 459, -1000, 111791, 111791, 26559, 915,
	-1000, 915, 111791, 774, -1000, -1000, -1000, -1000, -1000, 365,
	71798, 7, 192, 26559, 1014, -1000, -1000, 2909, 2909, 2909,
	2909, 2909, 99471, -1000, -1000, 138794, 1319, -57, -62, 2921,
	-1000, 3800, -1000, 2243, -1000, 74145, -1000, 782, 1240, 26559,
	-1000, -1000, -1000, 616, -1000, 3844, 3844, -1000, 3844, 138794,
	3117, 253, 2918, -1000, 2511, -50, 237, 138794, 3976, -1000,
	-1000, 244, -1000, 99471, 244, 244, -1000, 99471, 99471, 2407,
	-1000, 251, -1000, 248, -1000, -1000, -138, -1000, 1028, 35786,
	-1000, 1506, -1000, -1000, 1665, -1000, 2175, -1000, 1225, -1000,
	-1000, 35786, -1000, 3508, -1000, 1798, -1000, -1000, -1000, -1000,
	5326, 126481, 126481, 99471, -1000, 110033, 126481, -1000, 2373, 138794,
	-1000, 2608, 131755, 2585, 131169, 74145, -1000, -1000, 615, 965,
	2755, 2753, 1120, 126481, 126481, 2752, 130583, 129997, -1000, 3975,
	126481, 2309, 52136, 110033, 3647, 2479, 4253, 70, 70, -1000,
	70, -1000, -1000, 614, 1288, 99471, 99471, 126481, 138794, 99471,
	2172, -1000, -1000, -1000, -1000, -1000, 90655, -1000, -1000, 1466,
	-1000, -1000, -1000, 1466, 2383, 2116, 126481, 138794, 99471, 138794,
	129411, 2089, 128825, 2076, -1000, -1000, 2068, 1908, 126481, -1000,
	-1000, -1000, -1000, 1498, -1000, 813, 1317, 3115, 52136, 52136,
	2298, 70, 70, -1000, 70, 613, 26559, 2106, -1000, 3189,
	126481, 3886, 128239, 3877, 126481, 126481, 126481, 138794, 3555, 126481,
	-1000, -165, -51, -148, -1000, 896, 895, -139, -1000, 3802,
	-1000, 887, 2209, 126481, 138794, -1000, 127653, 5301, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2295, 79463, 1132, 126481, 1394,
	-1000, -1000, 1904, 1314, 1313, 90069, 2258, 1893, 2012, 138794,
	65304, 1004, 65304, 2855, -1000, -1000, 24154, -1000, 146451, 146451,
	-1000, 146451, -1000, 77090, 81853, 126481, -1000, -1000, 1076, 126481,
	83611, 975, 3341, 70035, -139, 993, 89483, 81853, 3232, 126481,
	2817, 126481, -1000, -1000, 2383, 3340, 459, 2607, -1000, 138794,
	3762, 3339, 611, 3974, 3972, -1000, 99471, 2509, 2606, -1000,
	-1000, 127067, 3430, 813, 126481, 1047, 61739, 2308, -1000, 68277,
	1100, 126481, 2019, 209, -1000, -1000, -1000, -12, 126481, -1000,
	797, -1000, -1000, 5394, 5394, 993, -148, 608, 65900, -153,
	-1000, 191, 607, 885, 877, -1000, 5766, -1000, -183, -1000,
	81853, 1002, 65304, 3111, -183, 2915, 3109, -1000, -1000, 1027,
	-1000, 1580, 993, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -39, 2010, 126481, -138, -138, -72,
	-57, -1000, 1007, -1000, 1007, -1000, 1007, -1000, -1000, -1000,
	146451, -1000, -1000, -1000, 1799, 1797, 126481, -1000, 3179, -1000,
	126481, -1000, -1000, 26559, 126481, 99471, 26559, 99471, 3173, 3172,
	-1000, -1000, -1000, 126481, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1167, -1000, 1988, 2488, -1000, 600, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2690, -1000, -58,
	34582, 918, -1000, -1000, 99471, -40, 52136, 52136, 7375, 6580,
	52136, 56350, 56350, -1000, 52136, 5903, -1000, -1000, -1000, -1000,
	-1000, 3099, 597, 52136, 74145, 8585, 7556, -1000, 363, 11828,
	599, -1000, 52136, -1000, 534, -1000, 362, 37008, -1000, 144291,
	-9, -158, -1000, 19909, -105, -159, -1000, -1000, 780, -1000,
	3426, -1000, 52136, 145123, 2660, 2171, 2085, 1778, 3844, 3876,
	23551, -1000, 72384, 1048, 2461, 141507, -1000, -1000, -1000, -1000,
	74145, 74145, 52136, 52136, -1000, 52136, 52136, 52136, -1000, -1000,
	-1000, 3844, 919, -1000, -1000, -1000, 919, -1000, -1000, 1466,
	-1000, 1466, -1000, 52136, -1000, -1000, 3096, 52136, -1000, 74145,
	74145, 56350, 56350, 56350, 56350, 56350, 56350, 56350, 56350, 56350,
	56350, 56350, 56350, 56350, 56350, 56350, 56350, 56350, 56350, 56350,
	56350, 2751, 56350, 3818, 3818, 3818, 1158, -1000, 3171, 3096,
	52136, 52136, 74145, 361, 360, 358, -1000, 52136, -105, -1000,
	-1000, 9577, 596, -1000, 2681, -1000, 3013, -1000, 52136, -1000,
	-161, -1000, 2730, -1000, -1000, 3013, 3013, -164, 146451, 61739,
	61739, -1000, 595, 52136, 2771, -1000, -1000, 754, -329, -1000,
	876, -1000, -1000, -1000, -1000, -1000, -1000, 874, -1000, 459,
	-1000, -1000, -1000, 190, 111791, 111791, 753, -1000, -166, -1000,
	-1000, -167, -1000, 3758, 357, 26559, -1000, 1047, 3914, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2762, -271, 138794, 138794,
	1881, 2477, 3875, -1000, 3845, 775, 752, 189, 3844, 356,
	353, 346, -138, 138794, 138794, 1870, 74741, 138794, -1000, -1000,
	-1000, 244, -1000, -1000, -1000, 243, -1000, -1000, -1000, -1000,
	2852, -1000, -59, -1000, -1000, -1000, 52136, -1000, 990, -1000,
	-1000, 3561, 584, 1311, 1295, -1000, -172, -1000, 873, -1000,
	-1000, -1000, -1000, 3042, -1000, 3336, -1000, 2605, -1000, 1106,
	2603, 2127, -1000, 52136, 582, 2853, 580, 578, 3964, 2231,
	3962, 1121, 3333, 2407, 3326, 2407, -1000, -1000, -1000, 958,
	-1000, 146451, -174, -1000, 2479, -1000, 576, 574, -1000, -64,
	1729, 491, 1294, 1026, -1000, -1000, 52136, 52136, 111205, -1000,
	482, 3575, -41, -1000, -1000, -1000, 1857, 1286, 1282, -1000,
	-1000, -1000, -1000, 2383, 1824, 1276, 1274, -1000, -1000, -1000,
	-1000, -1000, 2599, -1000, 126481, -1000, 3310, 126481, 126481, 1021,
	-1000, 3247, 3241, 933, 126481, 52136, 52136, 144915, 144707, -1000,
	1020, -1000, -1000, 52136, -1000, -68, 1272, 3711, 2598, 99471,
	-1000, 2407, 3305, 1271, -1000, 1247, -1000, -1000, -1000, 3696,
	3695, 1250, -1000, 108861, 81853, 81853, 3802, 65304, -1000, -1000,
	-1000, 81853, -1000, -1000, 78867, -1000, -1000, 1065, 126481, 138794,
	99471, 1910, -1000, -1000, 88311, 88897, 126481, 2900, -138, 910,
	-1000, 2513, 910, 1004, 3094, -1000, 2811, -1000, 1017, 99471,
	3958, 344, -175, -69, 74145, -1000, -1000, -1000, -1000, 2585,
	99471, 126481, 1322, 2849, 126481, 126481, 3754, -1000, 2526, 612,
	99471, 930, -1000, 3834, -1000, -1000, -1000, 126481, -1000, -1000,
	1015, -1000, 3689, 99471, 3752, 3303, 1014, 70, 99471, 3857,
	-1000, -1000, 3750, 99471, 3302, 2508, 2596, 2722, 813, 82439,
	1014, 2460, -76, -1000, 2019, 36388, 3565, -180, -1000, -1000,
	-1000, 1047, 71209, 61739, 52136, 3957, -181, -1000, -1000, -1000,
	-1000, -1000, 108861, 81853, 993, 126481, 126481, 3952, 81853, 81853,
	81853, -70, 557, -1000, 870, 869, 867, -1000, -1000, -1000,
	-1000, -1000, -1000, 862, 859, 857, 849, 1002, -1000, -1000,
	-183, 65304, 1002, 65304, 70, -1000, 2467, 99471, -1000, 22948,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1007, 3874, -139,
	-1000, -1000, -1000, 2323, 2536, 2323, 2003, 1990, -1000, -1000,
	2481, -1000, -1000, -1000, -1000, 2821, 3548, 26559, 3686, 6241,
	52136, 52136, 577, 6782, 1221, 6241, 52136, 52136, 74145, 7252,
	-182, 52136, 52136, -1000, 52136, 750, 146451, -1000, 3872, 52136,
	340, 338, -1000, -1000, -1000, 3840, -1000, -1000, -1000, 146451,
	52136, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, -1000,
	13, -1000, -1000, -1000, 135271, -1000, 52136, 335, 3645, -1000,
	334, 333, 10775, 314, 141299, 141091, 140883, 329, -1000, -1000,
	324, 317, 146451, 3171, 146451, -1000, -1000, 1025, 1025, 1402,
	1402, 1402, 1402, 3818, 1099, 1438, 1086, 1174, 1174, 1174,
	1735, 1158, 1158, 1174, 1174, 1174, 1158, 3089, 2763, 542,
	9768, -1000, -1000, 146451, 146451, 315, -1000, -1000, -1000, -105,
	313, 9577, -1000, 3000, 3643, 146451, -1000, 61739, 3000, 3000,
	-1000, -1000, 2344, 126481, 146451, 61739, -1000, 3433, -1000, 21133,
	20524, -1000, 26559, -1000, -1000, -1000, -1000, 3834, -1000, 71798,
	-1000, 541, -1000, 8, -1000, 3914, -1000, 847, -1000, -1000,
	81853, 81853, 3947, 3946, 3944, 3870, 3868, 2253, 3866, 2909,
	-1000, 3022, -271, -230, 126481, -1000, -1000, 749, 3942, 772,
	26559, 311, -1000, -1000, -1000, -138, -138, 126481, 3088, 99471,
	126481, 1479, -138, -1000, -1000, -1000, 3499, 146451, 3166, 2990,
	2986, 126481, 126481, -1000, 110033, 35786, 1653, 110619, 126481, 3299,
	-1000, 3293, -1000, 1120, 2287, 140675, 62328, -1000, 62328, 126481,
	-1000, -1000, -1000, -1000, 2100, 1551, 3937, 1180, -1000, 3603,
	126481, -1000, 126481, -1000, -1000, -1000, 110033, -1000, 126481, 126481,
	99471, 126481, -1000, 138794, 3272, -188, 146451, -71, -1000, 846,
	-1000, 1430, -1000, 22345, 126481, 138794, 99471, 126481, 138794, 99471,
	3286, 1098, 126481, -1000, 1097, 2387, -1000, -1000, 3236, -1000,
	146451, 144499, 70, 52136, 3262, -189, 26559, -1000, 3863, 3862,
	3283, 3607, -1000, 126481, 3861, 126481, 99471, 3498, -1000, -1000,
	-1000, 1005, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1814,
	1243, 1234, 2507, 2506, 2472, -72, 2258, 1004, -73, 537,
	-1000, 843, -1000, -1000, 842, 838, 1004, -1000, 81853, 65304,
	3936, 459, -1000, 2843, -1000, 105923, 83611, 2453, -1000, -1000,
	536, 126481, 126481, 533, -1000, 70, -1000, 3934, 110033, 531,
	-1000, 2465, -1000, 745, -1000, -1000, 2693, 138794, 2383, 70,
	99471, -1000, 1000, 459, 309, -74, -1000, 3422, 1118, 26559,
	99471, 3282, 2726, 813, 82439, -1000, 1464, 2815, -1000, -75,
	-1000, 677, 70, 2460, -1000, -76, 146451, -1000, 835, -191,
	292, -1000, 3494, -1000, -1000, -202, -1000, -1000, 2533, 2533,
	81853, 65304, 81853, 81853, 81853, 65304, 81853, -1000, 1002, 910,
	-1000, -183, -1000, 2680, -1000, -1000, -1000, -1000, -1000, -1000,
	26559, 1760, -1000, 530, 509, -1000, -1000, -1000, -1000, 3548,
	6241, 6241, 52136, 52136, 52136, 6241, 7252, -205, -1000, 6241,
	6241, -105, -1000, -1000, 144291, -1000, -1000, -1000, 146451, -1000,
	21742, 2381, -1000, 140467, -1000, 34582, -1000, -1000, 52136, 52136,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56350, 3087,
	506, 74145, -1000, -1000, 286, 1040, 52136, 53942, 2730, 1040,
	1040, -1000, -207, -1000, -1000, -1000, 3834, -1000, 3834, 8,
	-1000, -1000, 3933, 26559, -1000, 81853, -1000, -1000, -1000, -1000,
	-1000, -1000, 3931, 3929, 2575, 3926, 3925, -1000, 2470, -1000,
	-1000, 3234, -190, 766, -1000, 3924, -1000, -1000, 183, 138794,
	3086, 149, 2898, -1000, 70, -1000, -1000, -1000, -1000, -1000,
	-1000, 2896, 3748, -1000, 2062, -1000, 126481, 126481, -1000, 126481,
	-1000, 26559, 126481, 3003, 1290, -1000, 965, 2748, 504, 56350,
	1165, 99471, 702, 2982, 2919, -1000, 3782, 3640, 2955, -210,
	-1000, 126481, 52136, 126481, -213, -215, 2567, -1000, -1000, 1163,
	1289, 52136, 1161, -1000, -1000, -1000, 74145, 503, 2407, 2407,
	-1000, -218, -220, -1000, -1000, -1000, 52136, 1228, 126481, 35184,
	-1000, 3923, 3575, -1000, -1000, -1000, -1000, -1000, -1000, 126481,
	126481, -1000, 126481, 126481, -1000, 52136, -1000, 144083, 52136, 1222,
	-1000, -1000, -1000, 3860, 2407, 26559, 2407, -1000, 2407, 3607,
	1179, 2523, 126481, 138794, 99471, 2224, 2224, 3090, -1000, -1000,
	-1000, 2524, 2524, 81853, 65304, 65304, -1000, -77, 1004, -1000,
	3745, 2361, 3921, -1000, -1000, -1000, -1000, 2741, -1000, -1000,
	-1000, 126481, 2738, 2988, 62328, 498, 497, 126481, 996, -1000,
	-221, 83611, 975, 971, -1000, -78, 496, -1000, 824, -1000,
	-1000, -1000, -1000, 459, -1000, 2850, 3744, -1000, 3858, 494,
	493, 126481, 2505, 489, 26559, 3560, 813, 82439, -1000, 3430,
	2019, -1000, 2582, 126481, 3550, -1000, 2815, 488, -1000, 993,
	483, 993, -1000, -229, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1002, -79, -1000, 913, 891, -1000, -1000,
	99471, 99471, 52136, 52136, -1000, 6241, 6241, 6241, -1000, 285,
	-1000, -1000, 2460, 3629, -1000, -80, 140259, 140051, 2198, 56350,
	74145, -234, -1000, -1000, 126481, 146451, -93, -1000, 146451, 478,
	477, 400, -1000, -1000, -1000, 740, 535, -1000, -1000, -1000,
	-1000, 3918, -1000, -1000, -1000, -1000, 138794, 3916, -1000, 138794,
	-138, 138794, 138794, 1789, -1000, 109447, 126481, -1000, -1000, 2127,
	1852, -1000, -1000, 126481, 2591, -1000, -1000, -1000, 1009, 52136,
	9768, 56350, 476, 52136, -1000, 475, 474, 3742, 3463, -1000,
	2840, 3063, 2136, 62328, -1000, 3548, -1000, 139843, -1000, 1115,
	2129, -1000, -1000, -1000, -1000, 146451, 56350, 3607, 62328, -1000,
	-1000, 473, 472, 146451, 471, 823, 3081, -1000, -1000, -1000,
	-1000, -139, -139, -1000, 146451, 70, 146451, 464, 3711, -1000,
	-1000, -1000, -1000, 2407, 99471, 820, -1000, -1000, -1000, 1217,
	-1000, -1000, -1000, -1000, 3912, 3911, 3073, 88311, -1000, -235,
	-1000, -1000, -1000, 2140, 70, 975, -1000, -1000, 2453, 463,
	-1000, 986, 2837, 2837, -236, 62328, 62328, -237, 2494, 2844,
	-1000, 284, 3724, 971, -1000, 3824, -1000, 3468, 3468, 52136,
	3715, 3493, -1000, 70, -1000, 3857, 62328, -1000, 99471, 62328,
	2501, 2223, 2702, 82439, -1000, 2722, -1000, -1000, -242, 126481,
	2019, -1000, -1000, 81853, -1000, -1000, -1000, 2680, -1000, 126481,
	-1000, 126481, -1000, -1000, -244, -245, -1000, 2330, 52136, 34582,
	-1000, -1000, 2198, -247, -1000, -97, -1000, 3714, 53942, 3910,
	3907, 3906, -1000, -1000, -1000, -271, -1000, -138, -138, -138,
	126481, -1000, 2060, -1000, 2585, -1000, -1000, 3269, -1000, 2996,
	462, 139413, 9768, 2683, 126481, 139383, 2383, 2383, -1000, 3709,
	3011, -1000, -1000, 2298, 461, -1000, -1000, -1000, -1000, 918,
	126481, 986, 2995, 99471, 9768, 1119, -250, 2323, 2323, 52136,
	33980, 2386, -1000, 52136, -1000, -1000, 3607, 65304, 138794, -1000,
	-1000, 138794, 2500, -1000, 3044, 3829, -1000, 2494, 126481, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1115, -256, -258, -1000, -1000, 3597, -1000, 3492, 2843,
	70, -1000, -1000, -1000, -261, 146451, 70, 3905, 1000, 278,
	-263, 1118, -264, 99471, 2051, -1000, 813, -1000, 2726, 1047,
	3439, -1000, -266, -1000, -272, -274, -1000, -1000, 275, 53340,
	53340, 53340, -105, -112, -1000, 126481, 460, -1000, -1000, -1000,
	-1000, -1000, 148, -1000, -1000, 3228, 863, -1000, 826, 2057,
	274, 1103, 272, 242, -1000, -1000, -1000, 2955, -1000, 126481,
	-1000, -1000, -1000, 863, 459, -1000, 52136, 1115, -280, -1000,
	1095, -281, -1000, 1094, -282, -1000, 3070, -1000, -289, 2407,
	-1000, -271, 241, 2224, 999, 3683, -1000, -1000, -1000, 2697,
	-290, -1000, -1000, 2136, 1115, 2298, 2612, -1000, 2361, 996,
	-1000, -1000, -1000, -1000, -1000, 1115, 458, 2136, 457, 1593,
	813, -1000, -1000, 1466, 3560, 3438, 1368, 993, -1000, -1000,
	-1000, 3296, -1000, 57554, 2443, 1982, 143251, 3296, 3296, -1000,
	-1000, 138794, 126481, 986, 3663, -1000, 868, 860, 1576, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1047, -295, -1000,
	2683, 146451, 986, -1000, 2323, 2882, -1000, 2323, 3056, -1000,
	2375, -1000, -1000, -1000, -1000, 3047, -1000, 1943, 3807, -1000,
	-1000, 986, 126481, 2298, 2136, 986, 1971, 1955, 3904, 975,
	2494, 2136, 62328, 2298, 62328, 2289, -1000, 126481, -1000, 2223,
	1367, -1000, 1744, -1000, -1000, 2150, 3716, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -138, -1000, -1000, 816, -1000, 3453,
	-1000, 1137, 2435, 2435, -1000, -1000, 826, -1000, -1000, 453,
	-1000, 452, -1000, 138794, 2464, -1000, -1000, -1000, -1000, 986,
	2298, 1047, -1000, 3903, -1000, 2494, -1000, 2298, -296, 986,
	-297, 2408, -1000, -1000, -139, 2051, -1000, 1739, 71209, 1980,
	-1000, -1000, 2441, 52738, 52136, -1000, 3804, -1000, -1000, 2792,
	-1000, 2955, 52136, 52136, 241, 69449, 1047, 986, -1000, -1000,
	2697, 986, 1115, 1047, 2136, -1000, 813, 1593, 71209, -277,
	-1000, -1000, -1000, 146451, -1000, -1000, -1000, -1000, -298, -309,
	-1000, -148, 108861, -1000, 1047, -1000, 1047, 2136, -1000, 2298,
	138794, 2289, -277, -1000, 2298, 1216, -319, -1000, -1000, 2298,
	986, -1000, -1000, -1000, -1000, -1000, 401, -1000, 986, 1047,
	52136, 1047, -1000, -320, -1000, 2298, -1000,
}

var sqlPgo = [...]int{
	0, 4795, 4794, 4792, 4791, 4790, 4788, 4782, 4781, 4778,
	4777, 4776, 4773, 4771, 4769, 144, 4768, 4765, 4761, 4758,
	4756, 4755, 4754, 4751, 4750, 4748, 4746, 4744, 4743, 4742,
	4739, 4738, 4733, 4728, 4721, 4718, 4715, 4713, 4707, 4706,
	4704, 4699, 4696, 4695, 4694, 4692, 4690, 4689, 4686, 4684,
	4683, 4682, 4681, 4677, 4676, 4675, 4672, 4668, 4667, 4666,
	4665, 4658, 4655, 4652, 4651, 4650, 4649, 4648, 4647, 4645,
	4641, 4640, 4639, 60, 4638, 4635, 4634, 4631, 4630, 4628,
	4627, 4625, 4624, 4616, 4611, 4610, 4609, 4608, 4607, 4606,
	4605, 4603, 4602, 4600, 69, 4598, 296, 4597, 4595, 4594,
	4593, 4592, 4591, 4590, 4589, 4588, 4587, 4586, 4584, 295,
	4581, 147, 174, 4580, 4577, 4122, 4573, 4572, 292, 4570,
	4568, 4567, 4563, 4562, 302, 4560, 4559, 4556, 4555, 4552,
	274, 4551, 4550, 4549, 4548, 4547, 4545, 95, 137, 4544,
	4543, 1331, 4541, 4537, 4535, 4534, 4533, 4531, 4530, 273,
	275, 4529, 4527, 4525, 262, 183, 4523, 291, 4519, 4518,
	4515, 4513, 4512, 4508, 4506, 4504, 4503, 4500, 4499, 4496,
	4495, 4494, 4492, 4491, 4490, 4489, 4488, 4487, 4485, 4482,
	4481, 4478, 4477, 4476, 4475, 4474, 4473, 4470, 4469, 4468,
	4467, 4466, 4465, 4464, 4462, 4460, 4458, 4456, 4455, 4454,
	270, 224, 156, 4453, 4452, 289, 287, 4451, 4448, 4447,
	4446, 4445, 3694, 4444, 4443, 4442, 4441, 4438, 4434, 4433,
	4423, 4421, 150, 17, 48, 4420, 4419, 105, 101, 96,
	86, 107, 98, 4417, 125, 4416, 135, 117, 4415, 118,
	106, 21, 22, 324, 247, 13186, 245, 4414, 4412, 4411,
	256, 209, 4410, 252, 4405, 4404, 4403, 4401, 4392, 4391,
	75, 55, 218, 4388, 4387, 153, 184, 199, 191, 189,
	188, 178, 58, 99, 85, 64, 46, 19, 92, 233,
	18, 1, 282, 4384, 279, 10, 145, 7, 28, 4383,
	4380, 4378, 4376, 3963, 136, 4375, 288, 259, 177, 4374,
	4373, 4371, 485, 4366, 4361, 54, 250, 185, 93, 124,
	20, 140, 4360, 166, 182, 38, 4359, 248, 131, 4358,
	4357, 112, 97, 8923, 12384, 4354, 4352, 139, 74, 225,
	2828, 169, 161, 210, 200, 170, 171, 91, 219, 216,
	195, 181, 4350, 268, 4349, 3728, 88, 198, 160, 5631,
	4346, 4344, 4343, 87, 4342, 114, 4341, 4330, 72, 30,
	3, 2, 151, 40, 41, 12, 4328, 37, 133, 52,
	23, 4327, 26, 4326, 4324, 4323, 4322, 50, 4321, 53,
	175, 4319, 4318, 299, 4317, 126, 59, 61, 4316, 45,
	229, 4314, 258, 143, 4312, 4311, 271, 202, 4309, 82,
	239, 4308, 4307, 4306, 4303, 4302, 4299, 134, 8, 146,
	4298, 4297, 163, 4296, 57, 254, 212, 4293, 70, 4291,
	4290, 190, 56, 162, 298, 192, 251, 142, 244, 203,
	237, 4289, 4287, 4285, 232, 4284, 4282, 235, 186, 4281,
	4280, 257, 301, 102, 49, 89, 253, 83, 208, 168,
	4279, 215, 4277, 4276, 306, 206, 227, 43, 11, 6,
	104, 110, 4274, 5, 246, 164, 242, 129, 4273, 8512,
	2219, 2874, 230, 4272, 167, 127, 81, 132, 159, 285,
	103, 4270, 4269, 2701, 4268, 4264, 4262, 4261, 197, 4258,
	4256, 4255, 154, 213, 231, 4254, 128, 78, 63, 24,
	155, 267, 294, 123, 228, 193, 266, 4252, 4251, 4250,
	201, 4248, 79, 119, 176, 214, 264, 68, 4247, 116,
	4243, 165, 260, 76, 158, 4242, 226, 4241, 4239, 4238,
	4236, 4235, 4233, 4232, 130, 243, 4230, 4228, 4227, 32,
	207, 4226, 283, 240, 194, 109, 62, 4216, 100, 2383,
	4212, 122, 238, 67, 4, 4204, 29, 4198, 1596, 66,
	4192, 0, 14463, 9989, 12756, 13773, 4190, 4509, 4189, 4186,
	4185, 234, 77, 4183, 4182, 4181, 113, 4180, 90, 4179,
	4178, 73, 4177, 25, 15, 16, 31, 27, 381, 280,
	4176, 4175, 36, 152, 172, 4172, 297, 236, 4171, 4170,
	4169, 4168, 111, 4167, 42, 4166, 44, 4165, 4158, 51,
	14, 34, 4156, 4155, 157, 4154, 115, 221, 179, 4153,
	180, 4152, 84, 138, 4150, 4149, 4148, 71, 65, 276,
	222, 223, 94, 4147, 293, 4145, 211, 4144, 4143, 33,
	4142, 4141, 261, 121, 120, 47, 263, 149, 39, 196,
	220, 4140, 4139, 187, 4138, 4137, 4136, 281, 4135, 3696,
	278, 4133, 35, 4132, 4131, 4129, 13, 4128, 4127, 217,
	3431, 4125, 4124, 9, 3916, 204,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 225, 225, 225, 225, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 625, 625, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 523, 523, 523, 554, 554, 554, 554, 556,
	556, 652, 652, 653, 653, 653, 653, 653, 140, 140,
	420, 420, 420, 61, 61, 61, 61, 61, 620, 620,
	227, 227, 227, 229, 229, 228, 228, 228, 228, 228,
	85, 85, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 226, 226, 226, 136, 136, 136, 136, 136, 136,
	136, 136, 137, 137, 138, 138, 230, 230, 230, 232,
	232, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 236, 18, 18, 18, 119, 119,
	119, 119, 119, 119, 119, 114, 114, 558, 558, 559,
	559, 221, 221, 222, 222, 222, 222, 223, 223, 224,
	224, 224, 76, 76, 233, 233, 235, 235, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 202, 202,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 82, 82, 82, 82, 82, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 655, 655, 656,
	656, 657, 657, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 91,
	91, 381, 381, 344, 344, 92, 92, 92, 93, 93,
	94, 94, 78, 78, 617, 617, 618, 618, 618, 618,
	514, 514, 79, 626, 626, 626, 628, 628, 627, 627,
	96, 96, 419, 419, 97, 97, 97, 97, 97, 97,
	98, 98, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 106, 106, 106, 106, 106, 107, 107, 107, 104,
	104, 104, 101, 101, 101, 100, 100, 100, 105, 105,
	105, 616, 333, 333, 103, 103, 103, 102, 102, 102,
	397, 397, 108, 108, 108, 108, 345, 109, 109, 109,
	109, 109, 109, 109, 109, 112, 112, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	516, 516, 4, 4, 263, 263, 262, 262, 262, 262,
	5, 5, 5, 266, 266, 265, 264, 110, 110, 110,
	481, 481, 115, 115, 115, 435, 435, 116, 116, 116,
	116, 116, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 622, 622, 390, 390, 296, 296, 296,
	296, 128, 128, 128, 128, 129, 129, 129, 129, 130,
	130, 207, 207, 146, 146, 146, 146, 145, 145, 145,
	145, 145, 145, 145, 145, 68, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 73, 73,
	73, 149, 149, 31, 31, 31, 31, 150, 150, 649,
	649, 152, 148, 148, 148, 148, 148, 147, 147, 151,
	151, 151, 151, 153, 155, 155, 155, 155, 155, 154,
	154, 154, 154, 154, 156, 156, 548, 548, 405, 405,
	546, 546, 568, 568, 547, 547, 351, 351, 351, 351,
	351, 352, 352, 352, 557, 557, 557, 557, 557, 557,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 208, 208, 208, 209,
	209, 214, 214, 215, 215, 215, 216, 216, 216, 213,
	213, 213, 210, 210, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 219, 219, 217, 217,
	218, 218, 660, 660, 659, 659, 220, 220, 220, 220,
	220, 183, 183, 183, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 406, 406, 186, 186, 186,
	170, 170, 158, 158, 158, 158, 158, 158, 158, 163,
	163, 163, 163, 163, 163, 163, 163, 164, 164, 164,
	159, 159, 172, 172, 172, 172, 172, 165, 165, 166,
	166, 166, 167, 167, 167, 167, 194, 194, 169, 169,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 160,
	160, 160, 160, 174, 174, 174, 174, 442, 442, 442,
	200, 200, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 197, 197,
	197, 197, 197, 197, 641, 641, 642, 642, 642, 190,
	190, 190, 190, 190, 190, 495, 495, 184, 184, 184,
	184, 189, 189, 189, 189, 192, 192, 192, 192, 425,
	425, 181, 181, 181, 182, 182, 182, 187, 187, 199,
	188, 382, 382, 185, 185, 191, 191, 191, 191, 193,
	193, 193, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 162, 162, 162, 162, 195, 195, 180, 180, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	661, 661, 176, 176, 176, 175, 175, 175, 175, 178,
	178, 179, 179, 179, 179, 179, 179, 177, 168, 198,
	619, 619, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 615, 615, 615, 615, 621, 621, 120, 120, 120,
	120, 120, 120, 120, 131, 131, 131, 131, 131, 131,
	131, 134, 134, 121, 121, 121, 121, 121, 121, 121,
	124, 124, 122, 122, 122, 122, 123, 123, 86, 86,
	86, 86, 86, 17, 17, 17, 87, 87, 287, 287,
	241, 241, 241, 369, 369, 242, 242, 359, 359, 359,
	359, 237, 237, 238, 238, 239, 240, 240, 88, 88,
	662, 662, 662, 634, 634, 634, 635, 635, 635, 635,
	635, 635, 353, 353, 354, 354, 461, 461, 461, 461,
	461, 357, 357, 357, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 367, 368, 368, 360, 360, 366, 365,
	365, 364, 364, 363, 363, 361, 362, 362, 362, 371,
	371, 370, 373, 373, 372, 460, 577, 577, 579, 579,
	579, 579, 579, 579, 579, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 443, 443, 663, 663, 664, 665, 575, 575,
	575, 576, 571, 571, 572, 572, 572, 572, 572, 355,
	355, 356, 356, 356, 356, 573, 574, 388, 388, 499,
	578, 578, 580, 580, 582, 666, 666, 666, 666, 666,
	666, 667, 667, 667, 459, 459, 458, 458, 457, 457,
	379, 379, 583, 583, 583, 583, 584, 584, 584, 584,
	584, 587, 586, 585, 585, 585, 585, 585, 90, 90,
	90, 422, 422, 421, 421, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	204, 204, 299, 299, 299, 84, 84, 84, 14, 14,
	14, 14, 14, 14, 14, 314, 314, 15, 15, 15,
	636, 636, 636, 89, 89, 89, 89, 89, 89, 377,
	377, 377, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 624, 624,
	623, 623, 300, 300, 669, 669, 95, 95, 95, 95,
	95, 95, 95, 95, 517, 517, 518, 518, 83, 83,
	83, 83, 83, 444, 444, 441, 441, 440, 440, 387,
	387, 497, 497, 497, 498, 304, 304, 305, 305, 260,
	260, 260, 34, 33, 24, 24, 28, 28, 29, 29,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 30,
	30, 54, 54, 54, 54, 55, 55, 55, 55, 58,
	58, 59, 59, 53, 53, 53, 53, 56, 56, 50,
	50, 60, 60, 60, 60, 60, 643, 645, 645, 644,
	644, 648, 648, 648, 648, 648, 648, 646, 646, 647,
	647, 650, 650, 651, 651, 127, 127, 132, 132, 132,
	132, 132, 133, 133, 133, 133, 135, 135, 135, 135,
	144, 144, 203, 203, 203, 203, 203, 203, 203, 62,
	62, 62, 62, 75, 75, 75, 75, 142, 671, 671,
	671, 143, 143, 143, 670, 670, 297, 297, 454, 454,
	455, 455, 672, 672, 456, 456, 456, 456, 456, 290,
	289, 291, 291, 292, 292, 81, 81, 81, 280, 280,
	279, 281, 281, 282, 282, 277, 277, 560, 560, 284,
	284, 284, 285, 285, 273, 273, 274, 274, 275, 275,
	276, 276, 288, 288, 555, 555, 673, 673, 118, 118,
	118, 206, 206, 343, 343, 343, 451, 451, 451, 380,
	380, 311, 311, 453, 453, 453, 453, 453, 418, 418,
	418, 205, 205, 395, 395, 408, 408, 409, 409, 511,
	511, 410, 125, 125, 126, 126, 141, 141, 245, 245,
	243, 243, 243, 243, 243, 243, 243, 243, 250, 250,
	251, 251, 252, 252, 253, 254, 254, 254, 254, 398,
	398, 255, 255, 255, 244, 244, 244, 246, 246, 246,
	246, 246, 246, 246, 249, 249, 249, 249, 256, 256,
	256, 248, 248, 594, 594, 594, 596, 596, 598, 598,
	597, 597, 593, 593, 595, 595, 668, 668, 424, 424,
	424, 376, 378, 374, 374, 375, 375, 385, 385, 383,
	384, 384, 386, 386, 496, 496, 496, 261, 261, 261,
	415, 415, 415, 415, 416, 416, 447, 447, 445, 445,
	445, 445, 446, 446, 448, 448, 448, 449, 449, 450,
	450, 412, 412, 413, 413, 414, 414, 414, 414, 477,
	477, 247, 247, 247, 392, 392, 392, 393, 393, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	468, 468, 466, 466, 466, 466, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 501, 502, 502, 394, 394,
	503, 452, 452, 612, 612, 612, 613, 613, 494, 494,
	504, 504, 504, 504, 504, 504, 492, 492, 493, 493,
	512, 513, 513, 428, 428, 428, 428, 426, 426, 429,
	429, 429, 429, 429, 427, 427, 505, 505, 505, 505,
	417, 417, 506, 506, 506, 506, 507, 508, 508, 509,
	509, 462, 463, 463, 519, 519, 519, 519, 521, 391,
	391, 391, 391, 391, 570, 569, 569, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 536, 536,
	536, 536, 536, 536, 536, 522, 522, 522, 522, 522,
	526, 526, 526, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 527, 527, 532, 532, 533, 533,
	533, 528, 529, 534, 534, 534, 534, 674, 674, 538,
	538, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	524, 524, 524, 531, 531, 531, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 436,
	436, 438, 438, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 471, 471, 471, 471, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 588, 588, 588, 588, 588, 588, 588,
	588, 473, 473, 591, 591, 592, 592, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 599, 599,
	600, 600, 602, 602, 603, 603, 604, 605, 605, 605,
	606, 607, 607, 601, 601, 608, 608, 608, 608, 609,
	609, 610, 610, 610, 610, 610, 611, 611, 611, 611,
	611, 483, 483, 484, 484, 490, 490, 490, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 350, 350, 349, 301, 301, 301, 301,
	301, 301, 403, 403, 401, 401, 401, 404, 404, 402,
	402, 400, 400, 399, 399, 480, 480, 478, 478, 482,
	482, 430, 430, 537, 537, 537, 537, 537, 537, 537,
	537, 431, 431, 431, 439, 432, 432, 433, 433, 433,
	433, 433, 474, 475, 434, 434, 434, 476, 476, 485,
	489, 489, 488, 487, 487, 486, 486, 464, 464, 465,
	465, 411, 411, 675, 675, 407, 407, 510, 510, 510,
	510, 347, 347, 396, 396, 346, 346, 338, 338, 339,
	339, 339, 339, 389, 389, 491, 491, 539, 539, 540,
	540, 541, 541, 542, 542, 543, 544, 545, 479, 479,
	322, 321, 308, 309, 320, 319, 318, 307, 310, 315,
	316, 317, 312, 313, 329, 328, 327, 278, 283, 334,
	335, 335, 337, 337, 336, 336, 324, 325, 326, 515,
	306, 340, 340, 341, 341, 341, 342, 342, 342, 342,
	302, 302, 303, 303, 330, 330, 331, 332, 332, 323,
	323, 323, 293, 293, 293, 294, 294, 295, 295, 553,
	553, 550, 550, 550, 551, 551, 551, 552, 552, 552,
	552, 549, 549, 549, 549, 549, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 562, 562,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 564, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 567,
	567,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 3, 2, 1, 4, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 3, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 1, 2, 2, 2, 9,
	2, 1, 0, 1, 1, 0, 1, 2, 0, 2,
	2, 0, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 1, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 7,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 5,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 12, 15, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 1, 1, 1, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 3,
	6, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 10, 11,
	9, 5, 3, 1, 5, 9, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 6, 1, 3, 1,
	2, 0, 1, 2, 3, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 3, 0, 4, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 14, 16, 3, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 7, 10, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -111, -108, -76, -74, -115, -116,
	-97, -117, -110, -139, -144, -125, -126, -127, -140, -146,
	-203, -208, -209, -210, -211, -220, -3, -61, -63, -77,
	-96, -98, -109, -119, -118, -120, -128, -136, -131, -114,
	-68, -141, -145, -157, -204, -205, -206, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -151, -152, 484, -62, -75, -143, -142, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -84, -80, -91, -85, -78,
	-79, -82, -654, 106, -595, -99, -102, -135, -658, 168,
	232, -121, -122, -123, 386, -129, -130, 446, -132, -133,
	-134, 449, 169, -70, -69, 162, -243, -245, -148, -147,
	-149, -207, -158, -159, -160, -161, -162, -164, -165, -167,
	-194, -168, -169, -170, -171, -172, -173, -177, -197, -174,
	-175, -176, -179, -178, -180, -185, -181, -182, -183, -184,
	-186, -187, -189, -190, -191, -192, -193, -195, -196, 489,
	-188, -198, -166, -199, 554, 52, 505, 85, 152, 457,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-60, -4, -5, -81, -83, -86, -87, -88, -95, -89,
	-90, -594, -100, -101, -104, -106, -107, -103, -105, 445,
	606, -246, -244, 631, 570, -163, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 593, 602, -249, -247,
	-248, -256, 476, 578, 527, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, -345, 2, -324, -330, -331, -332, -323, -293, -564,
	-567, 4, -561, -565, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 451,
	452, 453, 455, 456, 457, 458, 459, 461, 463, 464,
	468, 469, 470, 486, 487, 508, 465, 466, 467, 471,
	472, 473, 474, 475, 479, 477, 478, 480, 481, 482,
	484, 485, 488, 489, 491, 492, 493, 494, 495, 496,
	497, 500, 502, 503, 504, 505, 506, 526, 507, 509,
	513, 514, 515, 516, 510, 511, 525, 518, 519, 520,
	522, 523, 528, 529, 530, 531, 532, 533, 535, 536,
	538, 546, 547, 548, 549, 551, 554, 555, 556, 557,
	544, 559, 560, 563, 564, 568, 565, 569, 566, 567,
	570, 572, 575, 576, 577, 583, 582, 584, 585, 586,
	588, 589, 594, 595, 597, 598, 599, 37, 53, 54,
	57, 59, 61, 72, 73, 74, 78, 129, 130, 159,
	171, 172, 184, 201, 202, 214, 216, 226, 227, 228,
	250, 251, 253, 258, 280, 354, 356, 373, 377, 393,
	397, 401, 403, 419, 460, 498, 512, 517, 539, 540,
	541, 542, 550, 552, 578, 579, 580, 587, 596, -345,
	2, -324, 364, -317, 2, -293, -293, 404, 29, 2,
	29, 392, 478, 530, 532, 2, -622, -390, 2, 29,
	-296, -293, 106, 212, 476, -317, 2, -622, 212, -390,
	26, 2, -293, 2, 378, 23, 28, 69, 80, 102,
	145, 170, 193, 198, -657, 380, 412, 463, 480, 525,
	536, 551, 2, 582, 301, 477, 527, 242, 124, 556,
	471, -636, 468, 469, 378, 410, 455, 215, 571, -297,
	2, 465, -293, 301, 2, 634, 98, 77, 460, 481,
	-154, 2, 291, 547, -155, -156, -153, 539, -548, 471,
	455, 324, -293, 634, 634, 634, 29, -306, 2, -293,
	-306, 2, -212, 2, -306, -659, -219, -218, -217, 22,
	437, 183, 273, 196, 233, 329, 407, 194, 50, -212,
	2, 527, 242, 471, 124, 523, 634, 634, 2, 527,
	383, 582, 477, 124, 416, 242, 556, 198, 145, 28,
	71, 48, 533, 610, 471, -636, 607, 608, 301, 131,
	-620, 2, -614, 4, -565, -561, -339, -338, 527, 533,
	124, -332, -323, 623, -331, 634, 634, 634, 634, 2,
	261, 262, 414, 413, 481, 482, 29, 634, 634, 634,
	634, 468, 2, 170, 23, 28, 69, 97, 102, 131,
	193, 198, 369, -655, 380, 412, 480, 525, 529, 536,
	551, -635, 507, 71, 443, 471, -634, -636, 301, 556,
	145, -440, 124, 291, 210, 564, 532, 530, 562, 137,
	249, 567, 566, 634, 634, -112, 2, 631, 33, 32,
	-111, -115, 147, 484, -236, 527, 254, 2, -293, 634,
	634, 634, 2, 261, 262, 468, 469, 29, 634, 634,
	196, -614, 523, 2, 634, 634, 634, 2, 29, 261,
	262, 468, 469, 254, 2, 71, 473, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 2, -201, 481, 507, 222, 49,
	48, 77, 29, 411, 82, 384, 125, 131, 154, 557,
	213, 242, 243, 269, 97, 98, -442, 46, 262, 71,
	261, 469, -641, 468, -495, 528, 472, 478, 522, 89,
	273, 465, 547, 549, 106, 572, 456, 599, 416, 417,
	520, 430, 292, 163, 197, 4, 124, 324, 455, 483,
	277, 276, 539, 291, 464, 387, 87, 634, -668, 2,
	527, -670, 2, 547, 547, 2, -670, 2, -670, 2,
	-670, 2, -671, 547, 596, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, -244, -246, -245, 634, 634,
	634, 634, 634, 634, 634, -201, 481, 2, 77, 29,
	29, -383, -385, 561, 252, 156, 370, -243, -245, 2,
	-594, -546, 2, -469, -568, -471, 621, 622, 614, 524,
	70, -349, 346, 600, -483, 131, 562, 364, -567, -472,
	-485, 159, 380, 460, -404, 8, 9, 5, 6, 7,
	-302, -473, -479, 553, 174, 353, -342, 635, 10, 631,
	-591, -245, -484, 38, 216, 68, -550, -341, -303, -522,
	253, -340, -323, -588, -589, 4, -561, -562, -551, -525,
	-533, -529, -530, -536, -293, -564, 80, 115, 116, 114,
	119, 118, 294, 293, 120, 117, 483, 571, 69, 37,
	226, 227, 258, 354, 228, 78, -590, 146, -563, 250,
	251, 498, 54, 419, 184, 130, 129, 356, 59, 57,
	579, -534, 126, 539, 540, 541, 542, 201, 202, 61,
	171, 172, 377, 401, 517, 550, 552, 214, 280, 45,
	110, 197, 247, 230, 257, 259, 263, 281, 284, 325,
	343, 348, 374, 376, 454, 490, -674, 580, 512, 72,
	73, 189, -596, 422, -597, -317, -596, 634, 634, 636,
	634, -374, -376, -378, 2, 29, 143, 631, 2, -500,
	2, -501, -505, -245, 274, -504, 631, -502, 629, -324,
	365, -592, 461, -588, -589, -302, -323, -341, 4, -561,
	-563, 633, -379, 631, 124, 471, 527, 81, 242, 97,
	170, 198, -435, 631, -293, 29, 364, 543, 636, -375,
	409, -481, 631, 364, 367, 196, 367, 63, 305, 2,
	2, 2, 2, 2, 226, -293, 527, 123, 2, 272,
	2, 2, 2, 2, 2, 2, 2, -397, 226, 2,
	-324, 582, -397, 226, 2, -397, 226, 2, -441, 2,
	91, -307, 226, 2, -293, -333, 226, 2, -328, -330,
	-337, 226, 2, -335, -293, -556, 226, 2, -554, 4,
	-561, 120, 483, -469, 2, -141, 2, 63, -293, 582,
	2, 486, 2, 631, -154, 2, 74, 547, 45, 481,
	-155, 2, -455, 2, -456, -289, -290, -291, -512, -292,
	260, 408, 418, 603, 135, 346, 599, -649, 196, 613,
	543, -546, -546, -546, -405, 633, -214, 56, -306, -660,
	-659, -660, -544, 29, -539, 8, -540, 621, 622, -544,
	-544, -660, -660, 2, 2, 2, 2, 2, 2, -505,
	226, -324, 2, -321, -549, 4, -561, -565, -562, -566,
	-564, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	60, 68, 69, 75, 79, 81, 91, 97, 106, 114,
	115, 117, 116, 118, 119, 120, 131, 135, 139, 143,
	144, 148, 152, 156, 174, 176, 189, 193, 196, 212,
	215, 218, 233, 246, 252, 254, 274, 278, 285, 293,
	294, 346, 353, 359, 364, 365, 369, 370, 390, 406,
	425, 450, 476, 483, 501, 521, 527, 537, 543, 545,
	553, 561, 562, 571, 573, 581, 590, 591, 592, 593,
	-567, 80, 2, -505, 226, 2, -327, 226, -505, -330,
	2, -307, 2, -469, -629, 535, 166, 438, 2, -346,
	226, -324, -326, -330, -328, 2, 2, 2, 2, -469,
	2, -558, 2, -553, 10, -552, 5, 4, -561, -565,
	-562, -472, 2, -483, 29, -335, 2, -554, 226, 2,
	29, 29, 582, 409, 254, 543, 636, -396, -338, -339,
	-545, 4, 8, -389, -293, 633, -469, 2, -141, -124,
	2, 189, -469, 226, 2, -141, 226, 2, -469, 226,
	2, -141, 226, 2, -293, 2, -637, 2, -558, 226,
	226, -293, 2, 305, 2, 2, 551, 2, 102, 527,
	123, 2, 442, -656, 463, 555, 2, 2, 2, 2,
	2, 2, 2, 527, -312, 2, -293, 189, 510, -335,
	226, -336, 2, 477, -669, 422, -554, 226, 2, 582,
	-328, 226, 2, -328, 242, 256, -307, 226, 2, 532,
	530, 532, 530, 196, 2, 254, 2, 254, 2, -506,
	2, -507, -501, -508, 629, 365, -516, 2, -515, -552,
	578, -112, 631, -112, 631, 481, 631, -558, -324, -324,
	-469, 2, -141, -124, 2, -469, 2, -141, 2, -293,
	2, -138, -558, -137, 631, 196, 572, -293, 2, -469,
	2, -141, -124, 2, -469, 2, -141, 2, -236, 189,
	2, 124, 527, -201, 2, 189, 573, 2, 8, 2,
	233, -558, 472, 417, 181, 2, 486, 2, 487, 77,
	-442, 599, 77, 196, 2, 196, 2, -425, 2, 593,
	409, 196, 2, 2, -619, 2, 364, 196, 2, 196,
	2, 196, 2, 196, 2, 196, 2, -200, 482, 548,
	526, 413, 262, 2, -141, 590, -124, 262, 261, -469,
	590, 2, -642, 189, 469, -469, 2, 546, 271, 164,
	196, -425, 2, 196, 2, 196, 2, 5, 2, 43,
	414, 508, 2, 260, 408, 508, 2, 506, 2, -324,
	527, 582, 477, 124, 29, 2, 468, 2, 2, 92,
	93, 196, 2, 196, 2, 211, 196, 2, 196, 527,
	-406, 633, 599, 2, -417, -505, -454, -455, -454, 543,
	-383, -385, -201, 486, 2, -250, -415, -252, 189, -445,
	-446, -253, 285, 176, 359, -254, -424, 29, 143, -424,
	-424, 63, 632, 632, 11, 12, 79, 43, 621, 622,
	623, 624, 187, 625, 626, 619, 620, 618, 611, 612,
	616, 266, 267, 99, 615, 613, 90, 299, 462, 177,
	178, 179, 180, 439, 240, 35, 241, 14, 15, 16,
	-349, 34, 369, 284, 600, 230, 490, 614, 17, 18,
	19, 257, 259, 348, 53, 233, -301, 380, -348, 524,
	70, -469, -469, -469, -469, -469, -469, -469, -469, 376,
	631, -411, -464, 629, -245, 631, 631, 631, 631, -545,
	-245, -469, -483, 632, -402, 631, -245, -483, -478, 631,
	460, 629, 631, -486, -469, 5, 5, 5, 631, 633,
	-599, 594, 189, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 403,
	-527, 631, -526, 631, -526, -526, 583, -524, 631, 602,
	595, 631, -524, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 583, 533, 636, -596,
	-379, 631, -407, -510, -469, 623, -407, -407, 364, -399,
	-469, 110, -428, 263, 325, 197, 281, 454, 247, -466,
	635, -466, -494, 602, -245, -502, -323, -245, -504, 631,
	-500, -494, -113, -545, -96, -109, -118, -141, -157, -205,
	-206, 623, -324, 631, 196, 631, 633, -549, 196, -389,
	-307, -334, -293, -324, -340, -341, -346, -318, -293, 2,
	2, 142, -399, -614, 556, 471, 29, 477, -556, -296,
	39, -480, -519, -520, -570, 635, -569, -522, -532, -528,
	-531, 393, 397, -551, 57, 579, -534, 253, 4, -561,
	-563, 250, 251, 498, 54, 419, 184, 130, 129, 356,
	59, 539, 540, 541, 542, 201, 202, 61, 580, 512,
	72, 73, -614, 556, 471, 29, 477, 189, -556, 189,
	-556, 2, 2, 159, 2, 2, 2, -293, -271, 636,
	67, 447, 159, -397, 226, -271, 159, -271, 159, -347,
	226, -346, -271, 159, -271, 636, 159, -271, 636, 159,
	633, 636, 159, -556, 2, -441, -548, -399, 39, -455,
	2, 131, 4, 5, -672, 636, 283, -352, 298, 345,
	221, 365, 597, 357, 135, -557, 5, 4, -479, -491,
	131, 291, 253, -539, -541, 9, -542, 621, 622, -547,
	-546, 113, 633, -549, -215, 248, 41, -306, -306, -660,
	-660, 8, 8, -660, -660, -306, -306, -268, 440, 484,
	379, -267, 25, 30, 147, 244, 330, 576, 165, -364,
	245, 445, -361, 383, 159, 502, 565, -629, -632, 467,
	535, 166, 438, 94, 357, 484, 379, 440, 159, -421,
	-423, 39, 122, 330, 378, 64, 236, 303, 304, 505,
	587, 159, 484, 379, 440, 379, -15, -282, 25, 147,
	-284, -279, 484, 30, -632, 103, 440, 606, 445, 389,
	519, 406, -632, -629, 279, -631, 589, 344, -270, 502,
	565, -629, -632, 467, 440, -269, -366, -361, 383, 159,
	635, 25, 147, 440, 484, 379, -652, -653, 30, -263,
	-262, 25, 147, 484, 568, -266, 233, -265, 25, -150,
	-130, -149, 445, 484, -150, 2, 440, 379, -623, -314,
	-593, 233, 593, 159, -314, -314, -505, 226, -646, 189,
	2, -639, -137, 275, 5, 10, -558, -137, -396, 636,
	636, -549, 623, 469, 468, 159, 159, 159, 159, 262,
	189, 346, 346, 593, 2, 2, 2, 2, 2, 198,
	-634, -657, 2, 2, -324, 226, -381, 364, -617, -618,
	527, -324, 189, 346, 45, -327, 226, 2, -330, 582,
	-623, 346, -329, 226, -324, 39, 631, 346, 2, -441,
	2, 242, -593, 346, -506, -343, -324, -501, -343, 484,
	-317, 39, -466, -324, 632, 636, -516, -516, -558, -224,
	593, 196, 631, -236, 593, 593, 262, -513, 636, -512,
	233, -559, -558, -138, -558, 443, 196, 262, -558, -617,
	-307, 2, -324, 2, 527, 264, -558, -224, 233, -558,
	-558, -558, -548, 29, 487, 2, -200, 482, 548, 93,
	487, 2, -324, 527, 124, 242, 83, -646, 189, 2,
	-293, -621, 189, -615, 455, 471, 556, -614, -324, 124,
	-324, 124, -324, 124, -324, -324, 2, 2, 2, 2,
	2, 88, 2, -141, -469, 2, 88, 2, 48, 503,
	-642, 189, 2, 546, 2, 546, 2, -293, -293, -293,
	359, 507, 283, 593, -324, -324, -324, -325, -330, 472,
	528, 557, 469, -469, 2, -661, 2, 196, 189, 2,
	527, 242, 527, 242, 124, 196, 77, 124, 29, 527,
	466, 633, 4, -271, 636, -297, -250, -415, -548, -416,
	-415, -251, -250, -253, 189, 418, 566, 330, 488, 268,
	-446, -445, 29, -469, -450, 183, 329, -469, -448, -471,
	621, 622, -540, -542, -398, 357, -244, -244, -244, -386,
	-496, -469, 406, 242, -521, -519, -519, -322, -549, 539,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, 284, 230, 490, 53,
	233, -469, 543, -469, -469, -469, -469, 322, 346, 353,
	553, 174, 563, 143, 357, -675, 521, 42, -476, -245,
	-403, 631, -490, 36, 501, 29, -483, 631, 2, -464,
	-469, -465, -350, -348, -293, 621, 622, 623, 624, 625,
	626, 611, 612, 613, 14, 15, 16, 616, 620, 618,
	619, 187, 99, 615, 299, 462, 90, 177, 178, 179,
	180, 266, 267, 17, 18, 19, 35, 614, -400, -399,
	-399, 632, 581, 29, 143, 623, 2, 632, 636, 39,
	632, -469, -400, -482, -478, -399, -489, -488, 590, -436,
	-437, 598, 308, 127, 224, 306, -438, 475, -543, 8,
	-549, 623, -600, 182, 215, 631, 632, 2, 632, 2,
	632, -469, 2, 632, -469, 2, 632, -469, 2, 632,
	-469, 2, 632, 2, 632, 2, -469, -469, -469, -469,
	-469, -469, -469, -399, 8, -543, -543, 539, 539, -543,
	-543, -543, -535, 393, 394, 395, 396, 286, 287, 288,
	289, 397, 398, 399, 400, 314, 315, 316, 317, 310,
	311, 312, 313, 318, 319, 320, 321, 206, 207, 208,
	209, 202, 203, 204, 205, -535, -430, 2, -537, -399,
	4, 598, 308, 127, 224, 306, 475, 5, -430, 2,
	-431, 2, -469, -399, -432, -470, -471, 621, 622, 614,
	-349, -433, 2, -469, -400, -469, 60, 278, 545, -434,
	-469, 196, -399, -399, 2, -399, 2, -472, 2, -597,
	39, -399, -392, 636, 196, 39, 4, -392, -392, 631,
	632, 636, -429, 219, 302, 297, 256, -429, -500, -428,
	263, -426, 374, -426, -426, -494, -308, 629, 637, -549,
	-494, -493, -492, 39, -317, 371, -494, -494, 633, 632,
	-493, 630, -612, 631, 634, 634, 634, 634, 634, -324,
	631, -399, -549, 633, 509, 2, 632, 257, 257, 257,
	257, 257, 364, 461, 632, 543, -616, -333, -337, 528,
	2, 593, -111, 366, 632, 636, -391, 38, 629, 633,
	-543, 2, 2, -538, 583, 631, 631, -437, 631, 196,
	-616, -337, 528, 2, -622, -390, -390, 543, -293, 2,
	-324, -397, -271, 159, -397, -397, -271, 636, 159, -307,
	-328, -333, -335, -337, -293, -554, -556, -271, -329, -649,
	632, 547, -456, -351, 418, 500, 441, 479, 523, 9,
	9, 636, -549, -216, 470, 330, -306, -306, -306, -306,
	636, -650, 97, 543, 81, 631, 471, -286, 292, 543,
	-460, 226, 81, -571, 97, -310, -572, -293, 75, 562,
	406, 193, 157, -650, 97, 406, -650, 97, 2, 244,
	97, 484, 507, 631, 29, 63, -505, 43, 43, 29,
	-630, -631, 279, 196, 599, 527, 242, 471, 543, 543,
	-505, -423, -519, 122, 303, 304, 63, -544, -544, 63,
	-544, -544, -544, 593, -327, -505, 471, 543, 543, 543,
	428, 518, 428, 518, -279, -155, 518, 543, 543, 29,
	-201, 448, 131, -673, 613, 428, 279, -631, 543, 196,
	636, 43, 43, 29, -630, 196, 543, -346, -308, 577,
	44, 577, 44, 577, 543, 44, 471, 543, 636, 44,
	-262, -617, -617, -223, -222, -293, 5, -389, -265, -558,
	-264, 328, 77, 543, 543, -15, 484, -624, -298, 109,
	336, 296, 337, 101, 333, 100, 332, 107, 334, 108,
	335, 584, 349, 585, 350, 66, 331, 307, 338, 504,
	339, 586, 351, -299, -300, 150, 385, 575, 124, -554,
	-15, -15, 484, 379, 440, 159, -647, 233, 29, -636,
	233, -513, 233, -513, -338, -293, 633, -141, -469, -469,
	-141, -469, -141, 48, 159, 159, 2, 2, -669, 272,
	631, -355, 346, 196, -389, -514, 636, 254, -324, 175,
	-614, 159, -554, -422, -421, 346, -329, 226, 2, 159,
	-379, 346, 153, 631, 416, 2, 159, -309, 226, -294,
	-293, -441, -273, 531, 159, -419, 573, -451, -141, 631,
	131, 39, -451, -408, -409, -511, -410, -310, 631, -317,
	-466, -112, -515, 632, 632, 632, -223, 368, -236, -380,
	-311, -310, 123, 420, 420, -230, 593, -137, -138, 632,
	636, -513, 233, 510, -138, -558, -224, -224, -513, -513,
	-324, 189, -558, -224, -224, -224, 2, 2, 2, 2,
	-425, -324, -307, -346, -324, 29, 633, -556, -556, -337,
	-333, -425, -307, -425, -307, -425, -307, -425, -425, -141,
	-469, 507, 2, 481, 189, 189, 633, -425, 8, -382,
	450, 5, 2, 416, 124, 527, 383, 242, -324, -346,
	-324, -346, -307, 124, -307, 125, -324, 4, -505, -416,
	-251, 365, 268, 488, -448, -449, -471, 460, 461, -449,
	460, 461, 8, 9, 8, 9, -255, 492, 352, -397,
	636, -260, 40, 139, 268, -324, 599, 155, -469, -469,
	543, -675, 521, -476, 155, -469, 322, 353, 553, 174,
	563, 143, 357, 196, 631, -470, -470, 632, -401, -469,
	-469, 630, 639, 632, 633, 632, -385, 636, -383, -469,
	-399, -399, 632, 633, -399, -389, 630, 630, 636, 632,
	-487, -488, 148, -469, 543, 543, 543, 543, 631, 632,
	633, -605, 375, 631, 631, -469, 632, 632, 632, 632,
	39, 636, 636, 636, 632, 636, 636, 636, 632, 632,
	632, 636, 632, 599, 599, 632, 632, 632, 632, 636,
	632, 636, 632, 196, 632, 632, -439, 390, 632, 11,
	12, 621, 622, 623, 624, 187, 625, 626, 619, 620,
	618, 611, 612, 613, 90, 299, 462, 14, 15, 16,
	-349, 257, 233, -470, -470, -470, -470, 632, -474, -475,
	196, 189, 39, -434, -434, -434, 632, 196, -399, 632,
	632, 631, -598, 301, 346, 632, -463, -462, 591, -510,
	-393, 2, -500, -319, -549, -463, -463, -399, -469, 263,
	263, -427, 573, 364, -429, -500, -493, -545, -468, -467,
	191, 40, 139, 340, 341, 342, 229, 192, -493, -317,
	-379, -493, -493, -549, -494, -494, -492, 632, -613, -545,
	632, -394, -503, -592, -385, 633, -549, -233, -593, -202,
	5, 353, -202, -202, -202, -202, -324, -556, 543, 543,
	233, 26, 391, -519, 629, 630, 8, -549, 631, -543,
	-543, -543, -556, 196, 196, 233, 364, 196, -554, 2,
	-271, -397, -271, -271, -346, -347, -271, -271, -271, -420,
	593, -546, -455, 560, 86, 418, 539, -546, 121, 470,
	-267, 440, 484, -310, -310, -324, -240, -239, -237, -293,
	5, -334, 210, 429, -554, 346, -460, 226, -272, 346,
	226, -318, -519, 631, -443, 595, 268, 268, 573, -310,
	-318, 268, 226, -310, 226, -318, 2, -318, -625, 418,
	358, -469, -238, -237, 63, -362, 290, 416, 347, -268,
	440, 484, 379, -141, -141, -141, 631, -649, 573, 142,
	-324, -346, -324, -334, -554, -329, 484, 379, 440, 343,
	-340, -544, -544, -421, 484, 379, 440, -334, -554, -327,
	-554, -278, 226, -293, 428, -278, 226, 428, 428, 471,
	-307, 428, 599, 47, -673, 543, 196, -469, -469, -269,
	-141, -141, -141, 631, -308, -270, 440, 5, 226, -310,
	5, -310, 226, 5, -293, -310, -334, -554, -653, 25,
	147, -310, -224, 636, 613, 613, -266, 613, -334, -554,
	-298, 385, -558, 353, 569, -307, -623, -314, 471, 543,
	543, -505, -643, -644, 212, 453, 471, 456, -556, -137,
	-227, 593, -137, -221, 237, 623, -620, -558, -293, 582,
	-293, -353, -356, -354, -310, -461, -460, -575, -576, -571,
	284, 242, 562, 256, 175, 97, -241, -242, 595, 593,
	159, -344, -324, 629, -224, -618, -558, 175, -315, -293,
	-514, -335, -336, 159, -379, 346, -554, 39, 159, 631,
	2, 2, -328, 364, 346, -309, 226, -274, 149, -673,
	-307, -463, -393, -418, -453, 450, 364, -380, 578, -317,
	-418, -395, 636, 196, 613, 633, -380, -509, 623, -112,
	-112, -224, 631, 631, -558, 632, 636, 633, 631, 613,
	613, -232, 368, -231, 151, 270, 255, 494, 495, 496,
	497, 141, 493, 128, 327, 238, 533, -513, -558, -230,
	-138, 196, -513, 233, 196, -71, 593, 527, -224, 635,
	456, -293, -425, -425, -425, 481, 481, -293, 189, -389,
	-320, -549, -307, -324, -321, -346, 189, 189, -307, 566,
	-449, 365, 295, -496, -261, 601, -324, 635, -469, -469,
	155, 155, -469, -470, -470, -469, 155, 196, 631, -469,
	-480, 34, 34, 632, 636, -465, -469, -348, 632, 581,
	-385, -385, 632, 623, -549, 635, 632, -478, 152, -469,
	537, 308, 224, 306, -438, 306, -438, -438, -543, 5,
	-549, 623, -606, -313, 631, -293, 591, -384, 370, 632,
	-521, -519, -469, -469, -469, -469, -469, -543, -524, -524,
	-539, -539, -469, -474, -469, -521, -519, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, 143, 346, 357,
	-470, -475, -474, -469, -469, -519, 632, 632, 632, -399,
	-111, 631, 301, -412, 215, -469, -513, 636, -412, -412,
	632, -500, -500, 631, -469, 263, 630, 636, 638, 613,
	613, -379, 633, -492, -493, 630, 632, 636, 632, 636,
	-452, 39, 632, -549, -463, -235, -234, 140, 56, 111,
	138, 353, 361, 195, 220, 415, 155, 190, 149, 257,
	-645, 593, -556, -556, 471, 367, 5, 8, 629, 630,
	633, -543, 632, 632, 632, -556, -556, 471, -614, 556,
	471, 29, -556, -271, -271, 123, 330, -469, -213, 593,
	595, 543, 543, 632, 636, 613, 63, 233, 159, 346,
	575, 346, -572, 157, -577, -469, 631, 242, 631, 631,
	2, -257, -258, -259, 147, 484, 25, -651, 2, 573,
	159, -271, 159, -271, 597, 632, 636, -362, 631, 631,
	543, 471, -286, 543, 593, -399, -469, -225, 131, -548,
	-632, 635, -632, 635, 471, 543, 543, 471, 543, 543,
	346, -293, 159, -293, -293, 593, 173, 173, 599, -278,
	-469, -469, 189, 543, 593, -399, 543, -523, 51, 27,
	346, -328, -271, 159, 543, 543, 556, 484, -222, -558,
	-558, -137, -558, -558, 353, -15, -334, -554, -329, 484,
	379, 440, -622, -622, 212, -337, -647, -513, -229, 368,
	-228, 151, 452, 141, 270, 238, -513, -227, 196, 254,
	593, -329, 2, 632, 632, 636, 636, -578, -272, -324,
	-309, 242, 242, -316, -294, 39, 361, 361, 631, -324,
	-92, 593, -512, -545, -315, -626, 593, 45, -327, 39,
	159, -623, -141, -329, -517, -518, 5, 39, -324, 159,
	364, 346, -275, 277, -673, -553, -593, -385, -418, -407,
	347, 95, 632, -463, -409, -393, -469, 2, 632, -223,
	-558, -224, -236, -311, 2, -559, -558, -558, 636, 631,
	613, 613, 613, 613, 613, 613, 613, -230, -513, -137,
	-230, -138, -141, 368, -324, 623, -425, 5, -368, -367,
	383, 357, -368, 460, 460, 365, 183, 273, -260, -308,
	-469, -469, 155, 34, 34, -469, -469, -480, 632, -469,
	-469, -399, 630, 5, -469, 632, 632, 8, -469, 632,
	633, -607, -293, -469, 632, 63, 632, 632, 636, 636,
	632, 632, 632, 632, 632, 632, 632, -475, 196, 143,
	357, 631, 632, 632, -111, -477, 218, 63, -500, -477,
	-477, -427, -389, -500, -467, -308, 629, -308, 629, -549,
	-545, -503, 631, 633, -234, 613, -558, -558, 2, 2,
	2, 5, 5, 415, 346, 353, 5, -202, 212, -645,
	-645, 593, -337, 630, 2, 629, -549, 632, -337, 196,
	-616, -337, 528, 123, 189, 223, 223, -310, -310, -239,
	-546, 527, 460, -278, 406, -460, 159, 159, -579, 97,
	-581, 79, 175, 106, 346, 353, 562, 406, 75, 131,
	364, 425, -663, -664, -665, 39, 604, 605, 632, -387,
	-497, -592, 631, -293, -387, -389, 346, 515, 131, 364,
	346, 131, 364, 588, 123, 2, 556, 82, -310, -318,
	-237, -389, -389, -324, -334, -554, 167, 632, 636, 613,
	2, 623, 623, -334, -554, -329, -334, -554, -327, 159,
	578, -278, 578, 381, 173, 543, -141, -469, 167, 632,
	-308, 5, 5, 159, -305, 79, -310, 5, -310, -328,
	123, 593, 471, 543, 543, 364, 364, 367, -643, -644,
	-227, 636, 631, 613, 613, 613, -227, -559, -137, 2,
	-379, -369, 244, -310, -576, -573, -574, 406, -461, -580,
	-582, 175, 406, -357, 631, -309, -294, 631, -141, 2,
	-240, 631, -355, 368, 630, -628, 368, -627, 121, 141,
	-554, -422, -141, -329, -377, 593, -379, 632, 636, 153,
	-444, 573, -308, -324, 159, -276, 276, -673, -553, -273,
	-447, -445, 144, 631, 364, -141, -385, 613, 632, 632,
	123, 632, -231, -232, -558, -137, -558, -558, -558, -137,
	-558, -230, -513, -513, -72, -73, 242, 97, 388, -321,
	527, 242, 631, 631, -260, -469, -469, -469, 632, -385,
	-549, 623, -601, 383, 632, -496, -469, -469, -470, 196,
	631, -480, 632, -602, 592, -469, -413, -414, -469, 458,
	112, 216, -602, -602, 632, -545, -545, 2, -558, 2,
	2, 353, 2, 2, 367, 2, 543, 629, 2, 196,
	-556, 196, 196, 233, -141, 233, 39, 428, -460, -318,
	-318, -322, -315, 175, 226, 353, 588, -443, 268, 631,
	-470, 566, -324, 631, 2, 225, 225, 31, 63, -666,
	135, 246, 632, 636, -498, -304, -293, -469, -498, 632,
	632, 353, 566, 353, 588, -469, 566, -519, 631, -271,
	-271, 632, 632, -469, 543, -548, 104, -546, 2, -632,
	-278, -389, -389, -307, -469, 189, -469, 543, 5, -271,
	-322, -271, -271, -305, 556, 363, -334, -554, -329, -648,
	528, 478, 557, 472, 199, 459, -648, 189, -228, -229,
	-558, -137, -137, -227, 39, -363, -364, 2, -578, 268,
	-315, 268, 235, 158, -387, 631, 631, -389, -662, 593,
	632, -353, -241, -93, -94, 544, -512, 636, 631, 613,
	-379, 330, 123, 39, 5, 631, 631, -293, 364, 631,
	-308, -288, 96, -673, -553, -274, -418, 347, -389, 97,
	-447, -476, -224, 631, -224, 632, -230, 636, 29, 631,
	29, 631, -324, -346, -399, -399, 632, -385, 63, 636,
	632, 632, -470, -480, 632, -603, -604, -313, 636, 631,
	631, 485, 630, 630, 2, -556, 2, -556, -556, -556,
	471, -278, 406, -293, -572, -581, -315, 346, -242, 573,
	593, -469, -470, -295, 631, -469, 631, 631, 39, 131,
	246, 136, 231, -459, -667, 105, 516, 234, -497, -260,
	632, -458, 573, 425, -470, -305, -387, 631, 631, 631,
	613, 196, -141, 631, -523, -271, -328, 613, 543, 2,
	2, 196, -622, 632, -638, 423, -141, -241, 631, -242,
	-358, 84, 98, 132, 225, 200, 243, 507, 513, 29,
	-358, 632, -387, -387, 632, -359, 364, 123, 330, 632,
	39, -94, 9, -627, -628, -469, 39, 123, -141, -517,
	-387, -324, -387, 364, -280, -279, 285, -553, -275, 632,
	-318, -418, -559, -73, -389, -389, 632, 632, -608, 416,
	461, 217, -399, -386, 632, 636, 39, -414, 2, 2,
	2, -645, -337, 428, -272, 159, 219, 632, -583, 300,
	-293, 632, -422, -422, 39, 136, 231, -365, -361, 631,
	-261, -498, -242, 219, -324, -633, 573, 632, -371, -370,
	-367, -373, -372, -367, -399, -546, 104, 381, -399, -305,
	-137, -556, -556, 364, -640, 197, -639, 5, 10, -359,
	-388, -499, -310, -458, 632, 632, 85, 123, -369, -141,
	632, -141, 2, -377, 632, 632, -444, 632, -324, -277,
	-560, 428, 430, -673, -276, -463, 144, 632, 632, 632,
	632, -609, -610, 53, 559, 113, -469, -609, -609, -604,
	-606, 196, 175, -457, 602, -584, -587, -586, 609, 491,
	197, 382, 632, 515, 587, 632, 632, -666, -389, -457,
	-379, -469, -458, 632, 636, 578, 632, 636, 578, 632,
	196, 632, -271, -645, -271, -648, -226, 593, 48, -287,
	-286, 632, 636, -459, -458, -365, 405, 137, 147, -363,
	-662, -458, 631, -459, 631, -285, -284, -673, -539, -288,
	144, 347, 566, -224, -611, 157, -610, 402, 188, 460,
	402, 188, -611, -611, -556, -315, -242, 58, -586, 609,
	-587, 609, 566, 137, -463, 632, -583, -242, -370, 233,
	-372, 196, 381, 196, 468, -639, 31, -242, -499, -365,
	-459, -242, 461, 461, 2, -241, -359, -459, -387, -365,
	-387, -281, -282, -283, -389, -280, 347, 566, 484, 113,
	215, 538, 330, 34, 613, -585, 330, 447, 67, 484,
	-585, -584, 631, 631, -556, 368, -242, -365, -463, 2,
	-359, -365, 632, -242, 632, -555, 379, -277, 484, -408,
	460, 372, -610, -469, 24, 353, 131, -666, -399, -399,
	-271, -223, 631, -463, -242, -287, -242, -458, -463, -459,
	-673, -285, -408, -463, 632, 632, -223, -463, -463, -459,
	-365, -554, -281, -463, -360, -361, 543, 632, -365, -242,
	631, -242, -463, -399, -463, 632, -360,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 597, 598, 600, 601,
	602, 604, 605, 607, 609, 611, 612, 613, 615, 616,
	618, 619, 620, 621, 622, 624, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 713, 715, 0, 1552, 1554, 1556, 1558, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 419, 421, -2, 0, 530, 531, 533, 535, -2,
	0, 1137, 1139, 1141, 0, 701, 703, 0, 1144, 1146,
	1148, 0, 0, 725, 726, 0, 1666, -2, 717, 719,
	721, 723, 800, 802, 804, 806, 808, 810, 812, 814,
	816, 818, 819, 821, 823, 825, 827, 829, 830, 832,
	834, 836, 837, 839, 840, 842, 844, 846, 848, 850,
	852, 854, 856, 858, 860, 862, 864, 866, 868, -2,
	871, 872, 873, 875, -2, -2, 0, -2, -2, -2,
	1570, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 472, 474, 476, 478, 480, 483, 485,
	487, 1724, 537, 539, 541, 543, 545, 547, 549, 0,
	0, -2, 1738, 0, 0, 957, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1697, 1699,
	1701, 1703, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 599, 603, 606, 608, 610, 614, 617, 623, 625,
	627, 582, 583, 586, 2436, 2454, 2455, 2456, 2459, 2460,
	2461, 2462, 2463, 2464, 2948, 3029, 3030, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 584,
	585, 1331, 0, 666, 664, 2421, 667, 2733, 669, 671,
	524, 525, 526, 527, 528, 529, 0, 694, 680, 1736,
	695, 697, 698, 699, 700, 661, 659, 0, 699, 694,
	2491, 692, 1550, 1551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 451, 1390, 1391, 1392, 1535,
	1536, 2785, 1577, 0, 259, 714, -2, -2, 2913, -2,
	754, 755, -2, -2, 769, 773, 764, 2917, 0, 2788,
	2771, -2, 776, 1553, 1555, 1557, 876, 877, 878, 2440,
	882, 880, 892, 893, 896, 0, 913, -2, 0, 2487,
	2756, -2, -2, 914, 915, -2, -2, -2, -2, 894,
	895, 0, 0, 0, 0, 0, 44, 46, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 269, -2, -2, -2, -2, 0, 0, 2836,
	2546, 2389, 2456, 2392, 2387, 373, 375, 377, 379, 380,
	0, 0, 0, 0, 0, 0, 0, 411, 414, 416,
	420, -2, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 1203, 1204, 1457, 0,
	0, 0, -2, 532, 534, 587, 588, 0, 1725, 1725,
	595, 596, -2, 0, 0, 0, 0, 334, 324, 1138,
	1140, 1142, 1143, 0, 0, 0, 0, 0, 702, 704,
	0, 0, 2830, 301, 1145, 1147, 1149, 1150, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 718, 720, 722,
	724, 801, 803, 805, 807, 809, 811, 813, 815, 817,
	820, 822, 824, 826, 828, 831, 833, 835, 838, 841,
	843, 845, 847, 849, 851, 853, 855, 857, 859, 861,
	863, 865, 867, 869, 870, 921, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1026, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 1117, 0, 0, 924, 927, 928, 929, 930,
	931, 932, 0, 999, 1024, 1025, 1035, 874, 0, 1371,
	1726, 1579, 1560, 1574, 1579, 1562, 1563, 1564, 1565, 1566,
	1571, 1573, 1567, 1568, 1569, 50, 52, 54, 56, 58,
	60, 62, 64, 66, 68, 70, 72, 473, 475, 477,
	479, 481, 484, 486, 488, -2, 1695, 1696, 538, 540,
	542, 544, 546, 548, 550, 705, 0, 708, 0, 926,
	707, -2, 0, 1730, 1730, 1730, 0, 0, 1696, 1694,
	0, 711, 712, 780, 781, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 2263, 2091, 0, 782, -2, 2124,
	2126, 2888, 2706, 2913, 2262, 2128, 2129, 2130, 2131, 2132,
	0, 2134, 2135, 2136, 2137, 2138, 2139, 0, 2141, 0,
	2146, 2147, 2148, 0, 2895, 2366, 2450, -2, 0, 0,
	2901, 2446, 0, 2229, 2164, -2, -2, 2473, 2452, 1935,
	1936, 1937, 1938, 1939, -2, -2, 2931, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 0, 2876,
	2896, 2897, 2902, 2904, 2898, 2885, 2189, 2560, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1962, 1971, -2, -2, -2, -2, -2, -2, -2,
	2889, 2890, 2907, 2910, 2916, 2921, 2922, 2894, 2903, 2930,
	2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941,
	2942, 2943, 2944, 2945, 2946, 2947, 1963, -2, -2, -2,
	-2, 0, 1713, 2749, 1716, 1331, 1714, 1698, 1700, 0,
	1702, 0, 0, 0, 1707, 1733, 1731, 0, 1782, 1711,
	1712, 1805, 1805, 1829, 0, 1810, 0, 1829, 1725, 1856,
	0, 1816, 2776, 2165, 2166, 0, 2456, 2451, -2, -2,
	2928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 668, 670, 0, 0, 0, 693,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	455, 456, 457, 458, 2896, 0, 0, 0, 463, 0,
	465, 466, 467, 468, 469, 470, 471, 229, 2896, 555,
	580, 0, 229, 2896, 558, 229, 2896, 561, 0, 564,
	1455, 229, 2896, 567, 2417, 229, 2896, 570, 572, 2425,
	229, 2896, 576, 2432, 2430, 577, 0, 579, 249, 245,
	246, 247, 248, 1546, 1547, 1548, 1549, 0, 1576, 1456,
	716, 0, 742, 0, 752, 753, 2884, -2, 0, 2797,
	757, 758, -2, 760, 1580, 1584, 1585, 1586, 1587, 1588,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 749,
	750, 767, 768, 774, 777, 0, 885, 881, 897, 0,
	912, 0, 913, 913, 2406, 2397, 2398, 0, 0, 913,
	913, 0, 0, 916, 917, 918, 919, 920, 83, 0,
	2896, 1856, 85, 0, 2411, 2481, 2482, 2483, 2484, 2485,
	2929, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957,
	2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967,
	2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977,
	2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987,
	2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997,
	2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007,
	3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017,
	3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027,
	3028, 2931, 89, 0, 2896, 94, 0, 2896, 0, -2,
	110, 0, 126, 0, 153, -2, -2, -2, 134, 0,
	2896, 0, 2386, -2, 0, 241, 325, 326, 327, 0,
	643, 0, 652, 337, 338, 2469, 2470, 2477, 2478, 2479,
	2480, 0, 745, 2263, 0, 0, 1175, -2, 0, 1384,
	1386, 1386, 0, -2, 0, 0, 0, 1127, 2383, 2388,
	1128, 1129, 2407, 1130, 2393, 0, 381, 382, 383, 384,
	385, 0, 386, 2896, 388, 389, 0, 391, 392, 2896,
	394, 395, 0, 397, 0, 399, 0, 281, 285, 2896,
	2896, 424, 427, 0, 429, 430, 0, 432, 0, 0,
	0, 436, -2, 452, 0, 449, 439, 440, 442, 443,
	444, 445, 446, 0, 492, 490, 2422, 0, 0, -2,
	2896, 0, 1172, 0, 0, 1435, -2, 0, 1377, 0,
	1442, 2896, 1438, 0, -2, 0, 1723, 2896, 1597, 1207,
	1208, 1209, 1210, 1868, 521, 0, 1630, 0, 1632, 0,
	1652, 1862, 1805, 0, 0, 1867, 0, -2, 640, 2439,
	-2, 590, 0, 591, 0, -2, 0, 351, 0, 0,
	1153, 1155, 1156, 1158, 1159, 1162, 1163, 1164, 1165, 0,
	1167, 1842, 302, 304, 0, 0, 0, 0, 1152, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 0, 0,
	727, 0, 0, 922, 923, 0, 0, 939, 940, 941,
	0, 351, 2789, 2744, 2582, 948, 0, 951, 954, -2,
	0, 0, 0, 0, 961, 0, 966, 967, 968, 0,
	-2, 0, 975, 977, 1136, 979, 0, 0, 981, 0,
	985, 0, 988, 0, 990, 0, 992, -2, -2, -2,
	1000, 1001, -2, 1006, -2, 0, 1010, -2, 0, 1013,
	0, 1016, -2, 0, 1026, 1022, 1023, 0, 0, 0,
	0, 1043, 1044, 0, 1053, 0, 1056, 1057, 1058, 0,
	0, 1063, 1064, 0, 1066, 1067, 1068, 1070, 1071, 1072,
	0, 2865, 2794, 2546, 0, 1080, -2, 1086, 1088, 0,
	-2, 0, 1104, 0, 1108, 0, 0, 1116, 0, 0,
	925, 0, 933, 934, 229, 1860, 1559, -2, 1561, 0,
	-2, 0, 706, 0, 710, 1755, 1681, 1678, 0, 1752,
	1753, 1682, 0, 0, 0, 1689, 0, 1728, 1729, 0,
	0, 0, 1668, 1669, 0, 0, 0, 0, 2268, 2269,
	2270, 2271, 2284, 2272, 2273, 2283, 2281, 2282, 2274, 2275,
	2280, 2294, 2295, 2285, 2286, 2276, 2289, 2287, 2288, 2290,
	2291, 2292, 2293, 0, 0, 2299, 0, 2277, 2278, 2279,
	2307, 0, 0, 2308, 0, 2310, 0, 2300, 2296, 2297,
	2298, 0, 2070, 2072, 2374, 0, 0, 0, 2306, 2301,
	2302, 2008, 2009, 2010, 2011, 2012, 2045, 2049, 2050, 0,
	0, 2125, 2371, 2370, 2127, 0, 0, 2322, 0, 2140,
	-2, 0, 2263, 2317, 0, 0, 2149, 2150, 2151, 0,
	0, 2322, 0, 0, 2365, 2161, 2162, 2000, 0, 0,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	1948, 0, 1950, 0, 1951, 1952, 1959, 1972, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	2346, -2, 0, 0, 0, 0, 1964, 0, 0, 1715,
	0, 0, 1786, 2375, 2379, 2380, 1786, 1786, 0, 0,
	2323, 1853, 1853, 0, 0, 1848, 1848, 1848, 1846, 1829,
	0, 1829, 1839, 0, 1829, 1829, 0, -2, 1810, 0,
	0, 1839, 0, 1823, 628, 630, 632, 634, 635, 636,
	638, 1857, 1858, 0, 0, 0, 0, 2457, 0, 0,
	0, 0, 2429, 0, 0, 2442, 0, 0, 2416, 406,
	407, 0, 0, 0, 2847, 2788, 0, -2, 673, 696,
	1725, 0, 2325, 1883, 1887, 0, 1889, 1890, 1891, 1892,
	1893, 0, 0, 1884, -2, 1960, 1962, 1983, 2474, 2475,
	2476, 1943, 1944, 1945, 1946, 1947, 1955, 1942, 1942, 1942,
	1953, 1982, 1974, 1982, 1978, 1928, 1929, 1930, 1965, 1966,
	1967, 1968, 0, 2847, 2788, 0, -2, 0, 683, 0,
	0, 1663, 453, 0, 460, 461, 462, 0, 551, 0,
	227, 228, 0, 229, 2896, 556, 0, 559, 0, 229,
	2896, 2381, 565, 0, 568, 0, 0, 574, 0, 0,
	0, 0, 0, 229, 1665, 0, 0, 0, 0, -2,
	762, 770, 771, 772, 0, 1582, 0, 1589, 791, 792,
	793, 1591, 1592, 0, 1594, 765, 794, 795, 796, 797,
	798, 799, 0, 2395, 2396, 2401, 2402, 0, 0, 763,
	784, 766, 0, 778, 888, 883, 884, 898, 899, 0,
	0, 2399, 2400, 0, 0, 904, 905, 135, 1532, 0,
	0, 182, 0, 1532, 1532, 0, 0, 0, 0, 210,
	0, 0, 1241, 0, 0, 0, 0, 153, 167, 178,
	147, 148, 149, 0, 0, 0, 0, 0, 0, 95,
	1353, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 112, 113, 0, 0,
	118, 119, 0, 0, 166, 0, 0, 0, 0, 0,
	1627, 0, 157, 153, 0, 0, 152, 154, 137, 0,
	0, 153, 168, 180, 0, 216, 218, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 251, 0, 642,
	644, 0, 0, 0, 0, 650, 0, 653, 0, 743,
	747, 748, 0, 0, 744, 746, 0, 0, 1378, 0,
	0, 0, 1722, 0, 0, 0, 0, 2896, 1530, 0,
	1515, 0, 1842, 2635, -2, -2, 302, 1842, 1126, 0,
	0, 2457, 2391, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 428, 431, 433, 434, 435, 0,
	1434, 0, 441, 482, 1300, 2896, 0, 0, 511, 504,
	0, 507, 0, 0, 0, 1352, 2896, 1350, 2426, 0,
	1375, 0, 1331, 2896, 2424, 0, 0, 0, 1443, 2466,
	1452, 1456, 1615, 0, 523, 0, 1633, 1635, 0, 0,
	1863, 0, 1865, 1805, 1725, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 1166, 308, 0, 1841,
	0, 0, 339, 1842, 302, 2762, 0, 1151, 351, 351,
	1842, 729, 1842, 731, 0, 0, 942, 943, 0, 351,
	351, 351, 949, 950, 952, 953, -2, -2, -2, -2,
	955, 956, 1050, 0, 0, 0, 1049, 969, 0, 971,
	974, 978, 0, 1120, 2771, 2788, 2847, 1134, 1050, 2546,
	1050, 2546, 1050, 2546, 1050, 1050, 994, 1038, 1046, 1005,
	1012, 0, 1007, 1011, 1014, 1017, 0, 1019, 1027, 0,
	-2, 0, 1030, 0, 1032, 0, 1034, 1050, 1051, 1054,
	0, 1062, 1065, 0, 1073, 1074, 1075, 1076, 2437, 1077,
	1078, 1079, -2, 1083, 1084, 0, 1095, 1100, 1101, 1097,
	0, 0, 0, 0, 0, 0, 1111, 1112, 0, 0,
	1119, 0, 935, 1370, 0, 1572, 1755, 1681, 709, 1672,
	1754, 1673, 1680, 1683, 0, 0, 1685, 0, 1687, 0,
	1750, 1751, 1758, 1759, 0, 1769, 1770, 1762, 0, -2,
	0, 0, 1765, 1766, 1691, 0, 1708, 1709, 1710, 1739,
	1742, 1471, 0, 3029, 2004, 1878, 2005, 2006, 2410, 0,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	-2, -2, -2, -2, -2, -2, -2, -2, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, -2,
	-2, -2, 2046, 2047, 2048, -2, 2309, 2311, 0, 2374,
	0, -2, 0, -2, -2, -2, -2, 2067, 0, 2069,
	2074, 2076, 2078, 0, 0, 0, 0, 2373, 2088, 2357,
	2358, 0, 0, 2265, 2266, 2267, 2073, 0, 2092, 2372,
	2369, 0, 0, 2303, 0, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 0, 2321,
	1738, 2153, 0, 0, 0, 0, 2160, 2145, 2319, 0,
	2318, 0, 0, 0, 2329, 0, 2364, 2360, 0, 2408,
	1999, 1986, 1987, 1988, 1989, 1990, 1991, 2001, 0, 2405,
	2443, 2449, 2239, 0, 0, 0, 2190, 2191, 2192, 2193,
	2194, 0, 2196, 2197, 0, 2199, 2200, 0, 2202, 2203,
	0, 2205, 2206, 2207, 2208, 2209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 0, 0, 2211, 0, 2332,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2213,
	0, 2215, 2323, 2343, 0, 0, 2093, 0, 0, 0,
	0, 0, 2218, 2323, 2351, 0, 0, 0, 0, 0,
	2323, 0, 2356, 0, 2225, 0, 2227, 958, 959, 1717,
	0, 0, 1873, 0, 0, 0, 2378, 1873, 1873, 0,
	1781, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 1853,
	0, 1843, 1847, 1844, 1845, 1839, 1802, 0, 0, 2412,
	1839, 1808, 1838, 0, 1331, 1828, 1839, 1839, 0, -2,
	1812, 1829, 0, 0, 629, 631, 633, 637, 639, 0,
	0, 1738, -2, 0, -2, 353, 1330, 0, 0, 0,
	0, 0, 0, 663, 665, 0, 0, 571, 0, 0,
	679, 0, 657, 0, 660, 0, 1874, 1877, 0, 0,
	1888, 1894, 1895, 0, -2, 0, 0, 1984, 0, 0,
	0, 0, 0, 691, 0, 694, 0, 0, 0, 464,
	581, 229, 553, 0, 229, 229, 562, 0, 0, 229,
	573, 229, 2433, 229, 2431, 250, 578, 1664, 262, 0,
	751, 0, 1581, 1590, 0, 788, 0, 790, 0, 2403,
	2404, 0, 779, 0, 886, 0, 900, 901, 902, 903,
	0, 0, 0, 0, 1531, 0, 0, 1478, 0, 0,
	186, 2896, 0, 231, 0, 0, 1293, 2418, 0, 1283,
	0, 0, 2568, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 150, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 1355, 1357, 1364, 1366, 0, 1360, 1361, 0,
	1363, 1365, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 1387, 0, 0, 0, 1388,
	1389, 1603, 1604, 0, 1626, 1627, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 2385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 351, 647, 648, 347, 344, 346, 649, 654, 0,
	655, 0, 0, 0, 0, 1380, 0, 1430, 1428, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 0, 0, 0, 0, -2,
	1382, 1383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 342, 2384, 2394, 0, 1160, 1161, 387,
	390, 393, 396, 268, 0, 0, 426, 437, 0, 0,
	1213, 1185, 0, 0, 491, 351, 0, 0, 506, 0,
	511, 2435, 1170, 1348, 1351, 0, 1331, 2896, 1398, 0,
	0, 0, 0, 0, 0, 1441, 0, 0, 2896, 2413,
	2465, 2466, 1617, 1627, 0, 1873, 0, 1650, 1636, 0,
	0, 0, 1650, 1654, 1655, 1657, 1658, 0, 0, 1864,
	1870, 589, 641, 1725, 1725, 351, 349, 2709, 0, 0,
	1639, 1641, 0, 0, 0, 294, 0, 305, 1842, 303,
	0, 308, 0, 0, 1842, 302, 0, 503, 728, 733,
	937, 0, 351, 945, 946, 947, 996, 1040, 1048, 1099,
	960, 962, 963, 964, 0, 0, 0, 1135, 1131, 1132,
	1133, 980, 1050, 983, 1050, 986, 1050, 989, 991, 1009,
	1015, 1028, 1021, 1029, 0, 0, 0, 1042, 0, 1060,
	0, 1069, 1082, 0, 0, 0, 0, 0, 0, 0,
	1105, 1106, 1107, 1109, 1114, 1113, 1118, 936, 1861, 1676,
	1677, 1679, 0, 1688, 0, 0, 1764, -2, -2, 1763,
	1767, 1768, -2, -2, -2, -2, 1684, 0, 1693, 1690,
	0, 1749, 1469, 1470, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 2089, 0, -2, 2068, 2071, 2075, 2077,
	2079, 0, 0, 0, 0, 0, 0, 2312, 0, 2314,
	2090, 2367, 2370, 2305, 0, 2261, 0, 0, 1737, 1738,
	1738, 0, 2159, 0, 2320, 0, 2327, 2328, 0, 2152,
	0, 2361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2163, 0, 0, 0, 0, 2195, 2198, 2201, 2204,
	0, 0, 0, 0, 2184, 0, 0, 0, 2188, 1954,
	1940, 0, 1982, 1980, 1981, 1975, 1982, 1979, 1932, 0,
	1931, 0, 2210, 0, 2212, 2214, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2096, 2097, 2098, 2118, 2217, 2349, 2350,
	0, 0, 0, 0, 0, 0, 2223, 0, 2355, 2224,
	2226, 1725, 0, 1718, 0, 1783, 1772, 1872, 0, 2376,
	1842, 1785, 1787, 2377, 2415, 1772, 1772, 0, 2324, 0,
	0, 1833, 0, 0, 0, 1835, 1806, 0, 0, 1800,
	0, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1807, 1331,
	1837, 1809, 1813, 2443, 0, 1839, 0, 1824, 0, 1826,
	1859, 0, 1818, 1821, 0, 0, 2458, 1873, 0, 400,
	408, 409, 401, 402, 403, 404, 0, 1518, 0, 0,
	0, 0, 0, 2326, 0, 1879, 0, 1885, 0, 0,
	0, 0, 681, 0, 0, 0, 0, 0, 1662, 459,
	552, 229, 557, 560, 2382, 229, 566, 569, 575, 258,
	0, 741, -2, 786, 787, 789, 0, 785, 891, 887,
	183, 1532, 0, 0, 0, 1474, 0, 1196, 0, 1191,
	1192, 1476, 1480, 1486, 1489, 0, 188, 2896, 200, 0,
	2896, 0, 1257, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 2896, 229, 2896, 229, 204, 206, 209, 0,
	215, 211, 0, 1193, 0, 1245, 0, 0, 1248, 136,
	1532, 0, 0, 139, 143, 155, 0, 0, 0, 165,
	0, 0, 0, 1491, 1495, 1503, 0, 0, 0, 1358,
	1359, 1362, 1368, 96, 0, 0, 0, 1499, 1501, 1507,
	111, 114, 2896, 2427, 0, 116, 2896, 0, 0, 0,
	1473, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	141, 145, 156, 0, 1509, 138, 0, 244, 0, 0,
	234, 229, 2896, 0, 236, 0, 237, 238, 252, 0,
	0, 0, 646, 0, 0, 0, 651, 0, 1173, 1174,
	1429, 0, 1373, 1374, 0, 1385, 1379, 0, 0, 0,
	0, 0, 1511, 1512, 0, 0, 0, 1530, 1527, 1842,
	264, 0, 1842, 272, 0, 2390, 0, 286, 423, 0,
	0, 0, 0, 1212, 1311, 1214, 1216, 1217, 1218, 231,
	0, 2466, 1283, 2624, 2466, 0, 0, 1180, 0, 0,
	0, 497, 493, 0, 502, 505, 510, 0, 509, 2419,
	515, -2, 0, 0, 0, 0, -2, 0, 0, 1445,
	1439, 1440, 0, 0, 0, 0, 2896, 1619, 1627, 0,
	1723, 1738, 522, 1628, 1650, 0, 0, 0, 1638, 1634,
	1631, 1873, 0, 0, 0, 0, 0, 1866, 1869, 592,
	593, 328, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 306, 0, 309, 0, 0, 0, 314, 315, 316,
	317, 318, 319, 0, 0, 0, 0, 308, 340, 296,
	1842, 0, 308, 0, 0, 730, 0, 0, 944, 0,
	970, 973, 982, 984, 987, 1031, 1033, 1050, 0, 1061,
	1089, 2414, 1090, 1235, 0, 1235, 0, 0, 1110, 1686,
	0, 1761, 1692, 1743, 1744, 0, 1471, 0, 2007, 2052,
	0, 0, -2, 0, 0, 2056, 0, 0, 0, -2,
	0, 0, 0, 2313, 2315, 0, 2369, 2304, 2154, 0,
	0, 0, 2158, 2142, 2143, 0, 2264, 2330, 2359, 2363,
	0, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 0, 2409,
	2444, 2448, 2237, 2238, 2242, 2423, 0, 0, 0, 2167,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 1977,
	0, 0, 2331, 2342, 2344, 2094, 2095, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, -2, -2, -2,
	2112, 2113, 2114, -2, -2, -2, 2119, 0, 0, 0,
	2345, 2347, 2348, 2352, 2353, 0, 2220, 2221, 2222, 2354,
	0, 1725, 1719, 1780, 0, 1871, 1784, 0, 1780, 1780,
	1732, 1831, 0, 0, 1855, 0, 1803, 0, 1804, 0,
	0, 1836, 0, 1811, 1814, 1815, 1825, 0, 1817, 0,
	1820, 0, 2154, -2, 352, 354, 356, 0, 359, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 1518, 1518, 0, 674, 658, 0, 0, 1881,
	0, 0, 1957, 1961, 1985, 685, 687, 0, 0, 2847,
	2788, 0, 684, 554, 563, 260, 0, 1840, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	230, 0, 1292, 0, 1255, 0, 0, 1282, 0, 0,
	1298, 190, 191, 192, 0, 0, 0, 0, 202, 0,
	0, 198, 0, 208, 214, 213, 0, 1242, 0, 0,
	0, 0, 1479, 0, 0, 0, 162, 163, 164, 0,
	169, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 1609, 1610, 0, 1600,
	159, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 1468, 254, 0, 0, 0, 0, 0, 348, 343,
	345, 0, 1372, 1432, 1433, 1381, 1492, 1496, 1504, 0,
	0, 0, 0, 0, 699, 1529, 0, 272, 270, 0,
	273, 0, 276, 277, 0, 0, 272, 266, 0, 0,
	0, 1331, 438, 1183, 1299, 0, 0, 1301, 1219, 1223,
	0, 2466, 2466, 0, 2420, 0, 1181, 0, 0, 1300,
	489, 0, 496, 0, 508, 512, 0, 0, 1352, 0,
	0, 1376, 1401, 1331, 0, 1444, 1446, 0, 1454, 0,
	0, 0, 1621, 1627, 0, 1614, 1615, 1757, 1629, 1648,
	-2, 0, 0, 1738, 1656, 1653, 1659, 1660, 0, 0,
	0, 331, 0, 1640, 1642, 0, 1154, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 308, 1842,
	298, 1842, 335, 0, 938, 965, 1041, 1059, 1091, 1234,
	0, 0, 1093, 0, 0, 1760, 1747, 1748, 1745, 1471,
	2054, 2058, 0, 0, 0, 2060, -2, 0, 2082, -2,
	-2, 2316, 2368, 2133, 1738, 2155, 2157, 2144, 2362, 2002,
	0, 2244, 2241, 0, 2228, 0, 2179, 2180, 0, 0,
	2183, 2185, 2186, 2187, 1941, 1934, 1933, 2341, 0, 0,
	0, 0, 2219, 1720, 0, 2233, 0, 0, 1788, 2233,
	2233, 1832, 0, 1834, 1801, 1789, 0, 1798, 0, 2444,
	1827, 1819, 0, 0, 357, 0, 361, 362, 363, 364,
	365, 366, 0, 0, 0, 0, 0, 405, 0, 675,
	676, 0, 0, 1875, 1880, 0, 1886, 1956, 0, 0,
	0, 0, 0, 261, 0, 889, 890, 184, 185, 1197,
	1195, 1483, 1487, 1484, 0, 187, 0, 0, 1256, 0,
	1259, 0, 0, 0, 0, 1266, 1283, 0, 0, 0,
	0, 0, 0, 1285, 0, 1284, 0, 0, 1315, 0,
	1459, 1466, 0, -2, 0, 0, 0, 194, 220, 0,
	0, 0, 0, 223, 1533, 196, 0, 0, 229, 229,
	1194, 0, 0, 1475, 1477, 1490, 0, 0, 0, 0,
	172, 0, 0, 1493, 1497, 1505, 1500, 1502, 1508, 0,
	0, 117, 0, 0, 1611, 0, 158, 0, 0, 0,
	1510, 242, 243, 0, 229, 0, 229, 235, 229, 1468,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 1514,
	263, 0, 0, 0, 0, 0, 265, 341, 272, 425,
	0, 1244, 0, 1311, 1303, 1304, 1305, 0, 1215, 1310,
	1312, 0, 0, 1220, 0, 0, 0, 0, 1200, 1182,
	0, 1213, 1185, 0, 494, 513, 0, 516, 0, 519,
	1171, 1349, 1393, 1331, 1396, 0, 0, 1436, 0, 0,
	0, 0, 0, 0, 0, 1623, 1627, 0, 1616, 1617,
	1650, 1756, 0, 0, 0, 1637, 1757, 0, 350, 351,
	0, 351, 310, 0, 311, 312, 313, 320, 321, 322,
	323, 297, 300, 308, 732, 734, 0, 0, 740, 1233,
	0, 0, 0, 0, 1746, 2062, -2, -2, 2083, 0,
	2445, 2447, 1738, 0, 2230, 1740, 0, 0, -2, 0,
	0, 0, 1721, 1704, 0, 1779, 1771, 1773, 1775, 2774,
	2541, 2895, 1705, 1706, 1854, 0, 0, 1822, 358, 367,
	368, 0, 370, 371, 1517, 677, 0, 0, 1882, 0,
	682, 0, 0, 0, 879, 0, 0, 1485, 189, 0,
	0, 1260, 1261, 1263, 0, 1265, 1267, 1268, 1185, 0,
	1272, 0, 2468, 0, 1277, 1280, 1281, 0, 0, 1294,
	1316, 0, 1325, 0, 1461, 1471, 1465, 0, 1463, 1327,
	0, 193, 222, 195, 224, 219, 0, 1468, 0, 197,
	207, 0, 0, 140, 0, 0, 2535, 175, 173, 171,
	115, 121, 123, 1472, 161, 0, 142, 0, 244, 253,
	1467, 255, 239, 229, 0, 0, 1494, 1498, 1506, 0,
	1521, 1522, 1523, 1524, 0, 0, 0, 0, 274, 0,
	275, 278, 279, 0, 0, 1185, 1243, 1184, 1302, 0,
	1313, 1185, 0, 0, 0, 0, 0, 0, 1187, 0,
	1186, 0, 0, 495, 498, 0, 501, 0, 0, 0,
	0, 0, 1400, 0, 1447, 1445, 0, 1453, 0, 0,
	0, 1599, 0, 0, 1618, 1619, 520, 1643, 0, 0,
	1650, 1661, 330, 0, 333, 307, 299, 0, 736, 0,
	738, 0, 1092, 1094, 0, 0, 2156, 2248, 0, 0,
	2181, 2182, -2, 0, 2122, 2232, 2234, 0, 0, 0,
	0, 0, 1790, 1799, 369, 1518, 1876, 689, 686, 688,
	0, 1481, 0, 1488, 231, 1258, 1262, 0, 1269, 0,
	0, 0, 1273, 1335, 0, 0, 1352, 1352, 1286, 0,
	0, 1319, 1320, 1240, 0, 1321, 1322, 1323, 1460, 1749,
	1466, 1185, 0, 0, 221, 226, 0, 0, 0, 0,
	0, 0, 160, 0, 233, 256, 1468, 0, 0, 1525,
	1526, 0, 0, 271, 290, 0, 1394, 1187, 0, 1314,
	1221, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1222, 1327, 0, 0, 1291, 1198, 0, 1201, 0, 1183,
	0, 499, 500, 517, 0, 518, 0, 0, 1401, 0,
	0, 1454, 0, 0, 1606, 1598, 1627, 1620, 1621, 1873,
	0, 1651, 0, 735, 0, 0, 1102, 1103, 0, 0,
	0, 0, 2243, 1741, 2123, 0, 0, 1774, 1776, 1777,
	1778, 678, 0, 1482, 201, 0, 1329, 1271, 1340, 0,
	0, 0, 0, 0, 1287, 1317, 1318, 1315, 1239, 0,
	1464, 1462, 1296, 1329, 1331, 199, 0, 1327, 0, 1249,
	0, 0, 1252, 0, 0, 176, 2535, 174, 0, 229,
	656, 1518, 229, 0, 293, 0, 284, 282, 283, 1179,
	0, 1307, 1309, 1325, 1327, 1240, 0, 1202, 1244, 1200,
	514, 1395, 1399, 1397, 1437, 1327, 0, 1325, 0, 1613,
	1627, 1607, 1608, 0, 1623, 0, 0, 351, 737, 739,
	2240, 2260, 2249, -2, 2850, 2542, 0, 2260, 2260, 2235,
	2236, 0, 0, 1185, 0, 1274, 1336, 1337, 0, 1332,
	1333, 1334, 2467, 1275, 1276, 1278, 1279, 1873, 0, 1326,
	1335, 225, 1185, 1246, 0, 0, 1247, 0, 0, 179,
	0, 181, 257, 1516, 1519, 0, 280, 0, 0, 1176,
	1178, 1185, 0, 1240, 1325, 1185, 0, 0, 0, 1185,
	1187, 1325, 0, 1240, 0, 1602, 1612, 0, 1622, 1599,
	0, 1646, 0, 332, 2245, 0, 0, 2251, 2252, 2253,
	2254, 2255, 2246, 2247, 690, 1264, 1270, 0, 1338, 0,
	1339, 0, 0, 0, 1295, 1324, 1340, 205, 1250, 0,
	1253, 0, 177, 0, 0, 288, 289, 1306, 1308, 1185,
	1240, 1873, 1188, 0, 1190, 1187, 1199, 1240, 0, 1185,
	0, 1625, 1601, 1605, 2428, 1606, 1644, 0, 0, 0,
	2257, 2258, 0, 0, 0, 1341, 0, 1344, 1345, 0,
	1342, 1315, 0, 0, 229, 0, 1873, 1185, 1290, 1189,
	1179, 1185, 1327, 1873, 1325, 1595, 1627, 1613, 0, 1873,
	2256, 2259, 2250, 1328, 1343, 1346, 1347, 1297, 0, 0,
	1520, 291, 0, 1288, 1873, 1177, 1873, 1325, 1450, 1240,
	0, 1602, 1873, 1647, 1237, 0, 0, 1289, 1448, 1240,
	1185, 1624, 1596, 1645, 1251, 1236, 0, 292, 1185, 1873,
	0, 1873, 1451, 0, 1449, 1237, 1254,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1953
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2074
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2095
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2216
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2225
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2236
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2242
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2408
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2418
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2421
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3329
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3338
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3344
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3349
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3354
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3462
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3694
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "create access method")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "create cast")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "create publication")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "create rule")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "create server")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3793
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3797
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3798
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "drop server")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3945
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4001
		{

			sqlVAL.union.val = nil
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4088
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "DROP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4319
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4380
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4404
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4412
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "DELETE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "INSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "DELETE")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "INSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4602
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4635
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4726
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4742
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "GRANT")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4838
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4851
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "RESET")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "RESET")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "USE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return unimplemented(sqllex, "set from current")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.Low
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = tree.Normal
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = tree.High
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = true
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = false
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "FETCH")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "MOVE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5562
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = int64(1)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = int64(-1)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = int64(1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = int64(1)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = int64(-1)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5618
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5622
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5631
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5636
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5646
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.str = "client_encoding"
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.str = "timezone"
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5708
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5780
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5825
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5900
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5940
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5953
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5985
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6021
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6026
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = true
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = true
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = false
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6063
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6081
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6108
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6124
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6176
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6181
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6183
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6187
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = true
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = false
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = true
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = false
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6292
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6300
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6310
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6321
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6343
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6357
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6392
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6397
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6431
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6436
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6458
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6476
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6484
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6510
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6515
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6528
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6542
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6551
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6622
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6632
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6904
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6906
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6958
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7109
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7124
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7152
		{

			sqlVAL.union.val = nil
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.str = ""
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = nil
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7191
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7195
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7231
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7244
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7258
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7260
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7352
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.str = ""
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7604
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{

			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7659
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7666
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7763
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7774
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7801
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7884
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7886
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7889
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8056
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8065
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8073
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8084
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8109
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8113
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8121
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8134
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.str = ""
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = true
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{

			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = false
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8248
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8262
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8274
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8286
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8296
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8306
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = true
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = true
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = nil
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8453
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8481
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8483
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8485
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8487
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8489
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8524
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8541
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8559
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8575
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = false
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = true
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = false
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = true
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = false
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8655
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.str = ""
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.str = ""
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8728
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8734
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8959
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8965
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8977
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8983
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8997
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9003
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9062
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = true
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = false
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.Types
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9122
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9150
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9155
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9262
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9321
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9341
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9342
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9370
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.str = ""
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9507
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{

		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9539
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.str = ""
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.str = ""
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.str = ""
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9594
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9880
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10024
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10059
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10061
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10166
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = true
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = false
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10236
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = nil
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10250
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = true
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = false
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = false
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10280
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10284
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10337
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10342
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10529
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10544
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10613
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10644
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10686
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10696
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10731
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10742
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10772
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10805
		{
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = nil
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = true
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = false
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.str = tree.AstFull
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.str = tree.AstRight
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.str = tree.AstInner
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10925
		{
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.str = tree.AstHash
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.str = ""
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11017
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11029
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11039
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = true
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = false
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = true
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = false
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11088
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11101
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11109
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11128
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11138
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11158
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11219
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11220
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = types.Geography
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11269
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11277
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11311
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = nil
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = types.Int2
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = types.Int
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = types.Float4
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = types.Float
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11354
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11370
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = types.Bool
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = types.Float
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11403
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11409
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11431
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = types.String
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = true
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = false
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = types.Date
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11480
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11488
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11511
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11519
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11536
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = true
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = false
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = false
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = types.Interval
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11560
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = nil
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11689
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11749
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11898
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12093
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12223
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12332
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12358
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12382
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12416
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12427
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12428
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12443
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12452
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12518
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12643
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12666
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12675
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12684
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12694
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12699
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12718
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12719
		{
			return unimplemented(sqllex, "treat")
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12740
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12792
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12804
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12808
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.str = ""
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12881
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12894
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12926
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12962
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12991
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13028
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13032
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13036
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13040
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13067
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13348
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13381
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13407
		{
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13408
		{
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13439
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13457
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13480
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13488
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13524
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13528
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13557
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13561
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13573
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13577
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13597
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13606
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13614
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13631
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13716
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13734
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13780
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13802
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13806
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13810
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13832
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13850
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13863
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13870
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13895
		{
			sqlVAL.str = ""
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13905
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
