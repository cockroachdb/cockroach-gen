// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12897

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1494,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 396,
	-2, 0,
	-1, 74,
	241, 234,
	507, 234,
	-2, 0,
	-1, 87,
	229, 1254,
	243, 1254,
	259, 392,
	386, 392,
	396, 1024,
	432, 392,
	445, 1024,
	491, 1024,
	518, 392,
	544, 1024,
	-2, 0,
	-1, 93,
	132, 1494,
	236, 1494,
	529, 1494,
	530, 1494,
	-2, 0,
	-1, 109,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	524, 1465,
	-2, 1436,
	-1, 148,
	158, 881,
	258, 881,
	389, 848,
	450, 848,
	490, 848,
	510, 881,
	512, 848,
	-2, 0,
	-1, 151,
	4, 1496,
	21, 1496,
	22, 1496,
	23, 1496,
	24, 1496,
	25, 1496,
	26, 1496,
	27, 1496,
	29, 1496,
	30, 1496,
	36, 1496,
	41, 1496,
	42, 1496,
	44, 1496,
	45, 1496,
	46, 1496,
	47, 1496,
	48, 1496,
	49, 1496,
	50, 1496,
	51, 1496,
	53, 1496,
	54, 1496,
	55, 1496,
	56, 1496,
	58, 1496,
	59, 1496,
	60, 1496,
	61, 1496,
	62, 1496,
	63, 1496,
	64, 1496,
	68, 1496,
	69, 1496,
	70, 1496,
	71, 1496,
	73, 1496,
	74, 1496,
	75, 1496,
	79, 1496,
	80, 1496,
	81, 1496,
	82, 1496,
	83, 1496,
	84, 1496,
	85, 1496,
	88, 1496,
	89, 1496,
	90, 1496,
	91, 1496,
	92, 1496,
	94, 1496,
	96, 1496,
	97, 1496,
	98, 1496,
	99, 1496,
	100, 1496,
	101, 1496,
	103, 1496,
	104, 1496,
	105, 1496,
	107, 1496,
	108, 1496,
	109, 1496,
	117, 1496,
	118, 1496,
	119, 1496,
	120, 1496,
	121, 1496,
	123, 1496,
	124, 1496,
	125, 1496,
	127, 1496,
	128, 1496,
	129, 1496,
	131, 1496,
	132, 1496,
	133, 1496,
	135, 1496,
	136, 1496,
	137, 1496,
	140, 1496,
	141, 1496,
	142, 1496,
	144, 1496,
	145, 1496,
	147, 1496,
	148, 1496,
	149, 1496,
	151, 1496,
	152, 1496,
	153, 1496,
	154, 1496,
	155, 1496,
	156, 1496,
	157, 1496,
	158, 1496,
	159, 1496,
	160, 1496,
	161, 1496,
	162, 1496,
	163, 1496,
	164, 1496,
	165, 1496,
	166, 1496,
	168, 1496,
	174, 1496,
	175, 1496,
	176, 1496,
	177, 1496,
	181, 1496,
	183, 1496,
	184, 1496,
	188, 1496,
	189, 1496,
	190, 1496,
	191, 1496,
	192, 1496,
	193, 1496,
	194, 1496,
	195, 1496,
	196, 1496,
	197, 1496,
	198, 1496,
	199, 1496,
	200, 1496,
	202, 1496,
	203, 1496,
	205, 1496,
	206, 1496,
	208, 1496,
	209, 1496,
	210, 1496,
	211, 1496,
	212, 1496,
	213, 1496,
	214, 1496,
	215, 1496,
	216, 1496,
	218, 1496,
	219, 1496,
	221, 1496,
	222, 1496,
	223, 1496,
	224, 1496,
	225, 1496,
	229, 1496,
	230, 1496,
	231, 1496,
	232, 1496,
	233, 1496,
	236, 1496,
	237, 1496,
	238, 1496,
	240, 1496,
	242, 1496,
	243, 1496,
	245, 1496,
	247, 1496,
	248, 1496,
	249, 1496,
	251, 1496,
	255, 1496,
	256, 1496,
	257, 1496,
	258, 1496,
	259, 1496,
	260, 1496,
	262, 1496,
	263, 1496,
	264, 1496,
	266, 1496,
	267, 1496,
	269, 1496,
	270, 1496,
	273, 1496,
	277, 1496,
	278, 1496,
	279, 1496,
	282, 1496,
	283, 1496,
	284, 1496,
	285, 1496,
	287, 1496,
	288, 1496,
	289, 1496,
	290, 1496,
	291, 1496,
	292, 1496,
	293, 1496,
	294, 1496,
	295, 1496,
	296, 1496,
	297, 1496,
	298, 1496,
	299, 1496,
	300, 1496,
	301, 1496,
	302, 1496,
	303, 1496,
	304, 1496,
	305, 1496,
	306, 1496,
	307, 1496,
	308, 1496,
	310, 1496,
	312, 1496,
	313, 1496,
	314, 1496,
	315, 1496,
	316, 1496,
	317, 1496,
	318, 1496,
	319, 1496,
	320, 1496,
	321, 1496,
	322, 1496,
	323, 1496,
	325, 1496,
	326, 1496,
	328, 1496,
	330, 1496,
	331, 1496,
	333, 1496,
	334, 1496,
	335, 1496,
	336, 1496,
	337, 1496,
	340, 1496,
	343, 1496,
	344, 1496,
	345, 1496,
	346, 1496,
	349, 1496,
	350, 1496,
	351, 1496,
	353, 1496,
	355, 1496,
	356, 1496,
	357, 1496,
	358, 1496,
	359, 1496,
	360, 1496,
	361, 1496,
	362, 1496,
	363, 1496,
	364, 1496,
	365, 1496,
	366, 1496,
	368, 1496,
	369, 1496,
	370, 1496,
	371, 1496,
	372, 1496,
	373, 1496,
	374, 1496,
	375, 1496,
	376, 1496,
	377, 1496,
	378, 1496,
	379, 1496,
	380, 1496,
	381, 1496,
	382, 1496,
	384, 1496,
	385, 1496,
	387, 1496,
	388, 1496,
	389, 1496,
	390, 1496,
	391, 1496,
	392, 1496,
	393, 1496,
	394, 1496,
	395, 1496,
	396, 1496,
	397, 1496,
	398, 1496,
	400, 1496,
	402, 1496,
	403, 1496,
	404, 1496,
	409, 1496,
	411, 1496,
	412, 1496,
	413, 1496,
	414, 1496,
	415, 1496,
	416, 1496,
	417, 1496,
	418, 1496,
	419, 1496,
	421, 1496,
	422, 1496,
	423, 1496,
	425, 1496,
	426, 1496,
	427, 1496,
	428, 1496,
	429, 1496,
	430, 1496,
	432, 1496,
	433, 1496,
	434, 1496,
	435, 1496,
	436, 1496,
	437, 1496,
	438, 1496,
	439, 1496,
	440, 1496,
	441, 1496,
	442, 1496,
	443, 1496,
	445, 1496,
	446, 1496,
	447, 1496,
	448, 1496,
	449, 1496,
	450, 1496,
	452, 1496,
	453, 1496,
	454, 1496,
	455, 1496,
	456, 1496,
	457, 1496,
	459, 1496,
	460, 1496,
	461, 1496,
	462, 1496,
	463, 1496,
	464, 1496,
	465, 1496,
	467, 1496,
	469, 1496,
	470, 1496,
	471, 1496,
	472, 1496,
	473, 1496,
	474, 1496,
	475, 1496,
	476, 1496,
	477, 1496,
	478, 1496,
	479, 1496,
	480, 1496,
	481, 1496,
	482, 1496,
	483, 1496,
	484, 1496,
	486, 1496,
	487, 1496,
	489, 1496,
	490, 1496,
	492, 1496,
	493, 1496,
	494, 1496,
	495, 1496,
	496, 1496,
	497, 1496,
	498, 1496,
	499, 1496,
	500, 1496,
	502, 1496,
	503, 1496,
	504, 1496,
	505, 1496,
	506, 1496,
	508, 1496,
	510, 1496,
	511, 1496,
	512, 1496,
	513, 1496,
	514, 1496,
	515, 1496,
	517, 1496,
	518, 1496,
	519, 1496,
	520, 1496,
	522, 1496,
	523, 1496,
	526, 1496,
	527, 1496,
	528, 1496,
	529, 1496,
	530, 1496,
	531, 1496,
	532, 1496,
	534, 1496,
	537, 1496,
	538, 1496,
	539, 1496,
	540, 1496,
	541, 1496,
	542, 1496,
	544, 1496,
	545, 1496,
	546, 1496,
	547, 1496,
	549, 1496,
	554, 1496,
	555, 1496,
	556, 1496,
	557, 1496,
	558, 1496,
	559, 1496,
	-2, 0,
	-1, 152,
	1, 1351,
	130, 1351,
	247, 1351,
	327, 1351,
	384, 1351,
	393, 1351,
	563, 1351,
	587, 1351,
	-2, 0,
	-1, 154,
	1, 1351,
	587, 1351,
	-2, 0,
	-1, 155,
	1, 1351,
	587, 1351,
	-2, 0,
	-1, 156,
	1, 1351,
	507, 1351,
	587, 1351,
	-2, 0,
	-1, 184,
	150, 1464,
	169, 1464,
	182, 1464,
	239, 1464,
	272, 1464,
	338, 1464,
	348, 1464,
	524, 1464,
	-2, 1439,
	-1, 230,
	4, 1503,
	5, 1503,
	6, 1503,
	7, 1503,
	8, 1503,
	9, 1503,
	10, 1503,
	21, 1503,
	22, 1503,
	23, 1503,
	24, 1503,
	25, 1503,
	26, 1503,
	27, 1503,
	29, 1503,
	30, 1503,
	36, 1503,
	37, 1503,
	41, 1503,
	42, 1503,
	43, 1503,
	44, 1503,
	45, 1503,
	46, 1503,
	47, 1503,
	48, 1503,
	49, 1503,
	50, 1503,
	51, 1503,
	53, 1503,
	54, 1503,
	55, 1503,
	56, 1503,
	58, 1503,
	59, 1503,
	60, 1503,
	61, 1503,
	62, 1503,
	63, 1503,
	64, 1503,
	65, 1503,
	66, 1503,
	67, 1503,
	68, 1503,
	69, 1503,
	70, 1503,
	71, 1503,
	73, 1503,
	74, 1503,
	75, 1503,
	77, 1503,
	79, 1503,
	80, 1503,
	81, 1503,
	82, 1503,
	83, 1503,
	84, 1503,
	85, 1503,
	88, 1503,
	89, 1503,
	90, 1503,
	91, 1503,
	92, 1503,
	94, 1503,
	96, 1503,
	97, 1503,
	98, 1503,
	99, 1503,
	100, 1503,
	101, 1503,
	103, 1503,
	104, 1503,
	105, 1503,
	106, 1503,
	107, 1503,
	108, 1503,
	109, 1503,
	110, 1503,
	111, 1503,
	112, 1503,
	113, 1503,
	114, 1503,
	115, 1503,
	116, 1503,
	117, 1503,
	118, 1503,
	119, 1503,
	120, 1503,
	121, 1503,
	122, 1503,
	123, 1503,
	124, 1503,
	125, 1503,
	126, 1503,
	127, 1503,
	128, 1503,
	129, 1503,
	131, 1503,
	132, 1503,
	133, 1503,
	135, 1503,
	136, 1503,
	137, 1503,
	140, 1503,
	141, 1503,
	142, 1503,
	144, 1503,
	145, 1503,
	147, 1503,
	148, 1503,
	149, 1503,
	151, 1503,
	152, 1503,
	153, 1503,
	154, 1503,
	155, 1503,
	156, 1503,
	157, 1503,
	158, 1503,
	159, 1503,
	160, 1503,
	161, 1503,
	162, 1503,
	163, 1503,
	164, 1503,
	165, 1503,
	166, 1503,
	167, 1503,
	168, 1503,
	174, 1503,
	175, 1503,
	176, 1503,
	177, 1503,
	181, 1503,
	183, 1503,
	184, 1503,
	187, 1503,
	188, 1503,
	189, 1503,
	190, 1503,
	191, 1503,
	192, 1503,
	193, 1503,
	194, 1503,
	195, 1503,
	196, 1503,
	197, 1503,
	198, 1503,
	199, 1503,
	200, 1503,
	202, 1503,
	203, 1503,
	205, 1503,
	206, 1503,
	208, 1503,
	209, 1503,
	210, 1503,
	211, 1503,
	212, 1503,
	213, 1503,
	214, 1503,
	215, 1503,
	216, 1503,
	217, 1503,
	218, 1503,
	219, 1503,
	221, 1503,
	222, 1503,
	223, 1503,
	224, 1503,
	225, 1503,
	229, 1503,
	230, 1503,
	231, 1503,
	232, 1503,
	233, 1503,
	235, 1503,
	236, 1503,
	237, 1503,
	238, 1503,
	240, 1503,
	242, 1503,
	243, 1503,
	244, 1503,
	245, 1503,
	246, 1503,
	247, 1503,
	248, 1503,
	249, 1503,
	250, 1503,
	251, 1503,
	255, 1503,
	256, 1503,
	257, 1503,
	258, 1503,
	259, 1503,
	260, 1503,
	262, 1503,
	263, 1503,
	264, 1503,
	266, 1503,
	267, 1503,
	268, 1503,
	269, 1503,
	270, 1503,
	271, 1503,
	273, 1503,
	277, 1503,
	278, 1503,
	279, 1503,
	280, 1503,
	281, 1503,
	282, 1503,
	283, 1503,
	284, 1503,
	285, 1503,
	287, 1503,
	288, 1503,
	289, 1503,
	290, 1503,
	291, 1503,
	292, 1503,
	293, 1503,
	294, 1503,
	295, 1503,
	296, 1503,
	297, 1503,
	298, 1503,
	299, 1503,
	300, 1503,
	301, 1503,
	302, 1503,
	303, 1503,
	304, 1503,
	305, 1503,
	306, 1503,
	307, 1503,
	308, 1503,
	310, 1503,
	311, 1503,
	312, 1503,
	313, 1503,
	314, 1503,
	315, 1503,
	316, 1503,
	317, 1503,
	318, 1503,
	319, 1503,
	320, 1503,
	321, 1503,
	322, 1503,
	323, 1503,
	324, 1503,
	325, 1503,
	326, 1503,
	327, 1503,
	328, 1503,
	329, 1503,
	330, 1503,
	331, 1503,
	332, 1503,
	333, 1503,
	334, 1503,
	335, 1503,
	336, 1503,
	337, 1503,
	340, 1503,
	344, 1503,
	345, 1503,
	346, 1503,
	349, 1503,
	350, 1503,
	351, 1503,
	352, 1503,
	353, 1503,
	354, 1503,
	355, 1503,
	356, 1503,
	357, 1503,
	358, 1503,
	359, 1503,
	360, 1503,
	361, 1503,
	362, 1503,
	363, 1503,
	364, 1503,
	365, 1503,
	366, 1503,
	368, 1503,
	369, 1503,
	370, 1503,
	371, 1503,
	372, 1503,
	373, 1503,
	374, 1503,
	375, 1503,
	376, 1503,
	377, 1503,
	378, 1503,
	379, 1503,
	380, 1503,
	381, 1503,
	382, 1503,
	384, 1503,
	385, 1503,
	387, 1503,
	388, 1503,
	389, 1503,
	390, 1503,
	391, 1503,
	392, 1503,
	393, 1503,
	394, 1503,
	395, 1503,
	396, 1503,
	397, 1503,
	398, 1503,
	400, 1503,
	402, 1503,
	403, 1503,
	404, 1503,
	409, 1503,
	411, 1503,
	412, 1503,
	413, 1503,
	414, 1503,
	415, 1503,
	416, 1503,
	417, 1503,
	418, 1503,
	419, 1503,
	421, 1503,
	422, 1503,
	423, 1503,
	424, 1503,
	425, 1503,
	426, 1503,
	427, 1503,
	428, 1503,
	429, 1503,
	430, 1503,
	432, 1503,
	433, 1503,
	434, 1503,
	435, 1503,
	436, 1503,
	437, 1503,
	438, 1503,
	439, 1503,
	440, 1503,
	441, 1503,
	442, 1503,
	443, 1503,
	445, 1503,
	446, 1503,
	447, 1503,
	448, 1503,
	449, 1503,
	450, 1503,
	451, 1503,
	452, 1503,
	453, 1503,
	454, 1503,
	455, 1503,
	456, 1503,
	457, 1503,
	458, 1503,
	459, 1503,
	460, 1503,
	461, 1503,
	462, 1503,
	463, 1503,
	464, 1503,
	465, 1503,
	467, 1503,
	469, 1503,
	470, 1503,
	471, 1503,
	472, 1503,
	473, 1503,
	474, 1503,
	475, 1503,
	476, 1503,
	477, 1503,
	478, 1503,
	479, 1503,
	480, 1503,
	481, 1503,
	482, 1503,
	483, 1503,
	484, 1503,
	486, 1503,
	487, 1503,
	488, 1503,
	489, 1503,
	490, 1503,
	492, 1503,
	493, 1503,
	494, 1503,
	495, 1503,
	496, 1503,
	497, 1503,
	498, 1503,
	499, 1503,
	500, 1503,
	502, 1503,
	503, 1503,
	504, 1503,
	505, 1503,
	506, 1503,
	508, 1503,
	510, 1503,
	511, 1503,
	512, 1503,
	513, 1503,
	514, 1503,
	515, 1503,
	516, 1503,
	517, 1503,
	518, 1503,
	519, 1503,
	520, 1503,
	522, 1503,
	523, 1503,
	525, 1503,
	526, 1503,
	527, 1503,
	528, 1503,
	529, 1503,
	530, 1503,
	531, 1503,
	532, 1503,
	533, 1503,
	534, 1503,
	537, 1503,
	538, 1503,
	539, 1503,
	540, 1503,
	541, 1503,
	542, 1503,
	544, 1503,
	545, 1503,
	546, 1503,
	547, 1503,
	549, 1503,
	554, 1503,
	555, 1503,
	556, 1503,
	557, 1503,
	558, 1503,
	559, 1503,
	560, 1503,
	568, 1503,
	575, 1503,
	576, 1503,
	577, 1503,
	584, 1503,
	588, 1503,
	-2, 0,
	-1, 728,
	4, 1252,
	21, 1252,
	22, 1252,
	23, 1252,
	24, 1252,
	25, 1252,
	26, 1252,
	27, 1252,
	29, 1252,
	30, 1252,
	36, 1252,
	41, 1252,
	42, 1252,
	44, 1252,
	45, 1252,
	46, 1252,
	47, 1252,
	48, 1252,
	49, 1252,
	50, 1252,
	51, 1252,
	53, 1252,
	54, 1252,
	55, 1252,
	56, 1252,
	58, 1252,
	59, 1252,
	60, 1252,
	61, 1252,
	62, 1252,
	63, 1252,
	64, 1252,
	68, 1252,
	69, 1252,
	70, 1252,
	71, 1252,
	73, 1252,
	74, 1252,
	75, 1252,
	79, 1252,
	80, 1252,
	81, 1252,
	82, 1252,
	83, 1252,
	84, 1252,
	85, 1252,
	88, 1252,
	89, 1252,
	90, 1252,
	91, 1252,
	92, 1252,
	94, 1252,
	96, 1252,
	97, 1252,
	98, 1252,
	99, 1252,
	100, 1252,
	101, 1252,
	103, 1252,
	104, 1252,
	105, 1252,
	107, 1252,
	108, 1252,
	109, 1252,
	117, 1252,
	118, 1252,
	119, 1252,
	120, 1252,
	121, 1252,
	123, 1252,
	124, 1252,
	125, 1252,
	127, 1252,
	128, 1252,
	129, 1252,
	131, 1252,
	132, 1252,
	133, 1252,
	135, 1252,
	136, 1252,
	137, 1252,
	140, 1252,
	141, 1252,
	142, 1252,
	144, 1252,
	145, 1252,
	147, 1252,
	148, 1252,
	149, 1252,
	151, 1252,
	152, 1252,
	153, 1252,
	154, 1252,
	155, 1252,
	156, 1252,
	157, 1252,
	158, 1252,
	159, 1252,
	160, 1252,
	161, 1252,
	162, 1252,
	163, 1252,
	164, 1252,
	165, 1252,
	166, 1252,
	168, 1252,
	174, 1252,
	175, 1252,
	176, 1252,
	177, 1252,
	181, 1252,
	183, 1252,
	184, 1252,
	188, 1252,
	189, 1252,
	190, 1252,
	191, 1252,
	192, 1252,
	193, 1252,
	194, 1252,
	195, 1252,
	196, 1252,
	197, 1252,
	198, 1252,
	199, 1252,
	200, 1252,
	202, 1252,
	203, 1252,
	205, 1252,
	206, 1252,
	208, 1252,
	209, 1252,
	210, 1252,
	211, 1252,
	212, 1252,
	213, 1252,
	214, 1252,
	215, 1252,
	216, 1252,
	218, 1252,
	219, 1252,
	221, 1252,
	222, 1252,
	223, 1252,
	224, 1252,
	225, 1252,
	229, 1252,
	230, 1252,
	231, 1252,
	232, 1252,
	233, 1252,
	236, 1252,
	237, 1252,
	238, 1252,
	240, 1252,
	242, 1252,
	243, 1252,
	245, 1252,
	247, 1252,
	248, 1252,
	249, 1252,
	251, 1252,
	255, 1252,
	256, 1252,
	257, 1252,
	258, 1252,
	259, 1252,
	260, 1252,
	262, 1252,
	263, 1252,
	264, 1252,
	266, 1252,
	267, 1252,
	269, 1252,
	270, 1252,
	273, 1252,
	277, 1252,
	278, 1252,
	279, 1252,
	282, 1252,
	283, 1252,
	284, 1252,
	285, 1252,
	287, 1252,
	288, 1252,
	289, 1252,
	290, 1252,
	291, 1252,
	292, 1252,
	293, 1252,
	294, 1252,
	295, 1252,
	296, 1252,
	297, 1252,
	298, 1252,
	299, 1252,
	300, 1252,
	301, 1252,
	302, 1252,
	303, 1252,
	304, 1252,
	305, 1252,
	306, 1252,
	307, 1252,
	308, 1252,
	310, 1252,
	312, 1252,
	313, 1252,
	314, 1252,
	315, 1252,
	316, 1252,
	317, 1252,
	318, 1252,
	319, 1252,
	320, 1252,
	321, 1252,
	322, 1252,
	323, 1252,
	325, 1252,
	326, 1252,
	328, 1252,
	330, 1252,
	331, 1252,
	333, 1252,
	334, 1252,
	335, 1252,
	336, 1252,
	337, 1252,
	340, 1252,
	344, 1252,
	345, 1252,
	346, 1252,
	349, 1252,
	350, 1252,
	351, 1252,
	353, 1252,
	355, 1252,
	356, 1252,
	357, 1252,
	358, 1252,
	359, 1252,
	360, 1252,
	361, 1252,
	362, 1252,
	363, 1252,
	364, 1252,
	365, 1252,
	366, 1252,
	368, 1252,
	369, 1252,
	370, 1252,
	371, 1252,
	372, 1252,
	373, 1252,
	374, 1252,
	375, 1252,
	376, 1252,
	377, 1252,
	378, 1252,
	379, 1252,
	380, 1252,
	381, 1252,
	382, 1252,
	384, 1252,
	385, 1252,
	387, 1252,
	388, 1252,
	389, 1252,
	390, 1252,
	391, 1252,
	392, 1252,
	393, 1252,
	394, 1252,
	395, 1252,
	396, 1252,
	397, 1252,
	398, 1252,
	400, 1252,
	402, 1252,
	403, 1252,
	404, 1252,
	409, 1252,
	411, 1252,
	412, 1252,
	413, 1252,
	414, 1252,
	415, 1252,
	416, 1252,
	417, 1252,
	418, 1252,
	419, 1252,
	421, 1252,
	422, 1252,
	423, 1252,
	425, 1252,
	426, 1252,
	427, 1252,
	428, 1252,
	429, 1252,
	430, 1252,
	432, 1252,
	433, 1252,
	434, 1252,
	435, 1252,
	436, 1252,
	437, 1252,
	438, 1252,
	439, 1252,
	440, 1252,
	441, 1252,
	442, 1252,
	443, 1252,
	445, 1252,
	446, 1252,
	447, 1252,
	448, 1252,
	449, 1252,
	450, 1252,
	452, 1252,
	453, 1252,
	454, 1252,
	455, 1252,
	456, 1252,
	457, 1252,
	459, 1252,
	460, 1252,
	461, 1252,
	462, 1252,
	463, 1252,
	464, 1252,
	465, 1252,
	467, 1252,
	469, 1252,
	470, 1252,
	471, 1252,
	472, 1252,
	473, 1252,
	474, 1252,
	475, 1252,
	476, 1252,
	477, 1252,
	478, 1252,
	479, 1252,
	480, 1252,
	481, 1252,
	482, 1252,
	483, 1252,
	484, 1252,
	486, 1252,
	487, 1252,
	489, 1252,
	490, 1252,
	492, 1252,
	493, 1252,
	494, 1252,
	495, 1252,
	496, 1252,
	497, 1252,
	498, 1252,
	499, 1252,
	500, 1252,
	502, 1252,
	503, 1252,
	504, 1252,
	505, 1252,
	506, 1252,
	508, 1252,
	510, 1252,
	511, 1252,
	512, 1252,
	513, 1252,
	514, 1252,
	515, 1252,
	517, 1252,
	518, 1252,
	519, 1252,
	520, 1252,
	522, 1252,
	523, 1252,
	526, 1252,
	527, 1252,
	528, 1252,
	529, 1252,
	530, 1252,
	531, 1252,
	532, 1252,
	534, 1252,
	537, 1252,
	538, 1252,
	539, 1252,
	540, 1252,
	541, 1252,
	542, 1252,
	544, 1252,
	545, 1252,
	546, 1252,
	547, 1252,
	549, 1252,
	554, 1252,
	555, 1252,
	556, 1252,
	557, 1252,
	558, 1252,
	559, 1252,
	-2, 0,
	-1, 747,
	186, 2260,
	507, 2260,
	567, 2260,
	586, 2260,
	-2, 0,
	-1, 748,
	186, 2366,
	507, 2366,
	567, 2366,
	586, 2366,
	-2, 0,
	-1, 749,
	186, 2247,
	507, 2247,
	567, 2247,
	586, 2247,
	-2, 0,
	-1, 751,
	186, 2498,
	507, 2498,
	567, 2498,
	586, 2498,
	-2, 0,
	-1, 753,
	186, 2538,
	507, 2538,
	567, 2538,
	586, 2538,
	-2, 0,
	-1, 760,
	186, 2393,
	507, 2393,
	567, 2393,
	586, 2393,
	-2, 682,
	-1, 793,
	586, 2196,
	589, 2196,
	-2, 955,
	-1, 794,
	586, 2198,
	589, 2198,
	-2, 956,
	-1, 795,
	586, 2197,
	589, 2197,
	-2, 957,
	-1, 796,
	589, 2123,
	-2, 958,
	-1, 819,
	182, 249,
	-2, 0,
	-1, 843,
	43, 2170,
	-2, 0,
	-1, 844,
	544, 1230,
	-2, 1025,
	-1, 860,
	4, 1632,
	21, 1632,
	22, 1632,
	23, 1632,
	24, 1632,
	25, 1632,
	26, 1632,
	27, 1632,
	29, 1632,
	30, 1632,
	36, 1632,
	41, 1632,
	42, 1632,
	44, 1632,
	45, 1632,
	46, 1632,
	47, 1632,
	48, 1632,
	49, 1632,
	50, 1632,
	51, 1632,
	53, 1632,
	54, 1632,
	55, 1632,
	56, 1632,
	58, 1632,
	59, 1632,
	60, 1632,
	61, 1632,
	62, 1632,
	63, 1632,
	64, 1632,
	68, 1632,
	69, 1632,
	70, 1632,
	71, 1632,
	73, 1632,
	74, 1632,
	75, 1632,
	79, 1632,
	80, 1632,
	81, 1632,
	82, 1632,
	83, 1632,
	84, 1632,
	85, 1632,
	88, 1632,
	89, 1632,
	90, 1632,
	91, 1632,
	92, 1632,
	94, 1632,
	96, 1632,
	97, 1632,
	98, 1632,
	99, 1632,
	100, 1632,
	101, 1632,
	103, 1632,
	104, 1632,
	105, 1632,
	107, 1632,
	108, 1632,
	109, 1632,
	117, 1632,
	118, 1632,
	119, 1632,
	120, 1632,
	121, 1632,
	123, 1632,
	124, 1632,
	125, 1632,
	127, 1632,
	128, 1632,
	129, 1632,
	131, 1632,
	132, 1632,
	133, 1632,
	135, 1632,
	136, 1632,
	137, 1632,
	140, 1632,
	141, 1632,
	142, 1632,
	144, 1632,
	145, 1632,
	147, 1632,
	148, 1632,
	149, 1632,
	151, 1632,
	152, 1632,
	153, 1632,
	154, 1632,
	155, 1632,
	156, 1632,
	157, 1632,
	158, 1632,
	159, 1632,
	160, 1632,
	161, 1632,
	162, 1632,
	163, 1632,
	164, 1632,
	165, 1632,
	166, 1632,
	168, 1632,
	174, 1632,
	175, 1632,
	176, 1632,
	177, 1632,
	181, 1632,
	183, 1632,
	184, 1632,
	188, 1632,
	189, 1632,
	190, 1632,
	191, 1632,
	192, 1632,
	193, 1632,
	194, 1632,
	195, 1632,
	196, 1632,
	197, 1632,
	198, 1632,
	199, 1632,
	200, 1632,
	202, 1632,
	203, 1632,
	205, 1632,
	206, 1632,
	208, 1632,
	209, 1632,
	210, 1632,
	211, 1632,
	212, 1632,
	213, 1632,
	214, 1632,
	215, 1632,
	216, 1632,
	218, 1632,
	219, 1632,
	221, 1632,
	222, 1632,
	223, 1632,
	224, 1632,
	225, 1632,
	229, 1632,
	230, 1632,
	231, 1632,
	232, 1632,
	233, 1632,
	236, 1632,
	237, 1632,
	238, 1632,
	240, 1632,
	242, 1632,
	243, 1632,
	245, 1632,
	247, 1632,
	248, 1632,
	249, 1632,
	251, 1632,
	255, 1632,
	256, 1632,
	257, 1632,
	258, 1632,
	259, 1632,
	260, 1632,
	262, 1632,
	263, 1632,
	264, 1632,
	266, 1632,
	267, 1632,
	269, 1632,
	270, 1632,
	273, 1632,
	277, 1632,
	278, 1632,
	279, 1632,
	282, 1632,
	283, 1632,
	284, 1632,
	285, 1632,
	287, 1632,
	288, 1632,
	289, 1632,
	290, 1632,
	291, 1632,
	292, 1632,
	293, 1632,
	294, 1632,
	295, 1632,
	296, 1632,
	297, 1632,
	298, 1632,
	299, 1632,
	300, 1632,
	301, 1632,
	302, 1632,
	303, 1632,
	304, 1632,
	305, 1632,
	306, 1632,
	307, 1632,
	308, 1632,
	310, 1632,
	312, 1632,
	313, 1632,
	314, 1632,
	315, 1632,
	316, 1632,
	317, 1632,
	318, 1632,
	319, 1632,
	320, 1632,
	321, 1632,
	322, 1632,
	323, 1632,
	325, 1632,
	326, 1632,
	328, 1632,
	330, 1632,
	331, 1632,
	333, 1632,
	334, 1632,
	335, 1632,
	336, 1632,
	337, 1632,
	340, 1632,
	344, 1632,
	345, 1632,
	346, 1632,
	349, 1632,
	350, 1632,
	351, 1632,
	353, 1632,
	355, 1632,
	356, 1632,
	357, 1632,
	358, 1632,
	359, 1632,
	360, 1632,
	361, 1632,
	362, 1632,
	363, 1632,
	364, 1632,
	365, 1632,
	366, 1632,
	368, 1632,
	369, 1632,
	370, 1632,
	371, 1632,
	372, 1632,
	373, 1632,
	374, 1632,
	375, 1632,
	376, 1632,
	377, 1632,
	378, 1632,
	379, 1632,
	380, 1632,
	381, 1632,
	382, 1632,
	384, 1632,
	385, 1632,
	387, 1632,
	388, 1632,
	389, 1632,
	390, 1632,
	391, 1632,
	392, 1632,
	393, 1632,
	394, 1632,
	395, 1632,
	396, 1632,
	397, 1632,
	398, 1632,
	400, 1632,
	402, 1632,
	403, 1632,
	404, 1632,
	409, 1632,
	411, 1632,
	412, 1632,
	413, 1632,
	414, 1632,
	415, 1632,
	416, 1632,
	417, 1632,
	418, 1632,
	419, 1632,
	421, 1632,
	422, 1632,
	423, 1632,
	425, 1632,
	426, 1632,
	427, 1632,
	428, 1632,
	429, 1632,
	430, 1632,
	432, 1632,
	433, 1632,
	434, 1632,
	435, 1632,
	436, 1632,
	437, 1632,
	438, 1632,
	439, 1632,
	440, 1632,
	441, 1632,
	442, 1632,
	443, 1632,
	445, 1632,
	446, 1632,
	447, 1632,
	448, 1632,
	449, 1632,
	450, 1632,
	452, 1632,
	453, 1632,
	454, 1632,
	455, 1632,
	456, 1632,
	457, 1632,
	459, 1632,
	460, 1632,
	461, 1632,
	462, 1632,
	463, 1632,
	464, 1632,
	465, 1632,
	467, 1632,
	469, 1632,
	470, 1632,
	471, 1632,
	472, 1632,
	473, 1632,
	474, 1632,
	475, 1632,
	476, 1632,
	477, 1632,
	478, 1632,
	479, 1632,
	480, 1632,
	481, 1632,
	482, 1632,
	483, 1632,
	484, 1632,
	486, 1632,
	487, 1632,
	489, 1632,
	490, 1632,
	492, 1632,
	493, 1632,
	494, 1632,
	495, 1632,
	496, 1632,
	497, 1632,
	498, 1632,
	499, 1632,
	500, 1632,
	502, 1632,
	503, 1632,
	504, 1632,
	505, 1632,
	506, 1632,
	508, 1632,
	510, 1632,
	511, 1632,
	512, 1632,
	513, 1632,
	514, 1632,
	515, 1632,
	517, 1632,
	518, 1632,
	519, 1632,
	520, 1632,
	522, 1632,
	523, 1632,
	526, 1632,
	527, 1632,
	528, 1632,
	529, 1632,
	530, 1632,
	531, 1632,
	532, 1632,
	534, 1632,
	537, 1632,
	538, 1632,
	539, 1632,
	540, 1632,
	541, 1632,
	542, 1632,
	544, 1632,
	545, 1632,
	546, 1632,
	547, 1632,
	549, 1632,
	554, 1632,
	555, 1632,
	556, 1632,
	557, 1632,
	558, 1632,
	559, 1632,
	-2, 0,
	-1, 870,
	259, 396,
	-2, 0,
	-1, 941,
	389, 849,
	450, 849,
	490, 849,
	512, 849,
	-2, 0,
	-1, 942,
	389, 848,
	450, 848,
	490, 848,
	512, 848,
	-2, 788,
	-1, 946,
	1, 895,
	583, 895,
	585, 895,
	587, 895,
	-2, 0,
	-1, 947,
	1, 823,
	583, 823,
	585, 823,
	587, 823,
	-2, 0,
	-1, 948,
	1, 827,
	583, 827,
	585, 827,
	587, 827,
	-2, 0,
	-1, 949,
	1, 954,
	182, 954,
	583, 954,
	585, 954,
	587, 954,
	-2, 0,
	-1, 957,
	1, 854,
	583, 854,
	585, 854,
	587, 854,
	-2, 0,
	-1, 963,
	1, 895,
	583, 895,
	585, 895,
	587, 895,
	-2, 0,
	-1, 964,
	1, 897,
	583, 897,
	585, 897,
	587, 897,
	-2, 0,
	-1, 965,
	1, 900,
	583, 900,
	585, 900,
	587, 900,
	-2, 0,
	-1, 971,
	1, 918,
	583, 918,
	585, 918,
	587, 918,
	-2, 0,
	-1, 972,
	1, 920,
	583, 920,
	585, 920,
	587, 920,
	-2, 0,
	-1, 977,
	1, 948,
	583, 948,
	585, 948,
	587, 948,
	-2, 0,
	-1, 1024,
	169, 1507,
	182, 1507,
	272, 1507,
	338, 1507,
	-2, 1443,
	-1, 1039,
	169, 1506,
	182, 1506,
	272, 1506,
	338, 1506,
	-2, 1440,
	-1, 1065,
	586, 2195,
	-2, 690,
	-1, 1093,
	5, 2187,
	584, 2185,
	-2, 2176,
	-1, 1101,
	5, 2208,
	584, 2205,
	-2, 2196,
	-1, 1102,
	5, 2209,
	584, 2206,
	-2, 2197,
	-1, 1110,
	586, 2193,
	-2, 2175,
	-1, 1111,
	584, 2621,
	-2, 2194,
	-1, 1134,
	584, 2620,
	-2, 2210,
	-1, 1135,
	5, 1707,
	-2, 2591,
	-1, 1136,
	5, 1708,
	-2, 2592,
	-1, 1137,
	5, 1709,
	-2, 2606,
	-1, 1138,
	5, 1710,
	-2, 2570,
	-1, 1139,
	5, 1711,
	-2, 2604,
	-1, 1140,
	5, 1719,
	-2, 2583,
	-1, 1141,
	5, 1706,
	-2, 2579,
	-1, 1142,
	5, 1706,
	-2, 2578,
	-1, 1143,
	5, 1706,
	-2, 2597,
	-1, 1144,
	5, 1717,
	-2, 2572,
	-1, 1145,
	5, 1722,
	-2, 2571,
	-1, 1146,
	5, 1724,
	-2, 2616,
	-1, 1149,
	5, 1746,
	-2, 2609,
	-1, 1150,
	5, 1738,
	-2, 2610,
	-1, 1151,
	5, 1746,
	-2, 2611,
	-1, 1152,
	5, 1742,
	-2, 2612,
	-1, 1153,
	5, 1692,
	-2, 2584,
	-1, 1154,
	5, 1693,
	-2, 2585,
	-1, 1155,
	5, 1694,
	-2, 2573,
	-1, 1183,
	5, 1729,
	-2, 2617,
	-1, 1184,
	5, 1730,
	-2, 2607,
	-1, 1185,
	5, 1731,
	545, 1731,
	-2, 2574,
	-1, 1186,
	5, 1732,
	545, 1732,
	-2, 2575,
	-1, 1223,
	584, 2205,
	-2, 2196,
	-1, 1224,
	584, 2206,
	-2, 2197,
	-1, 1324,
	186, 2538,
	507, 2538,
	567, 2538,
	586, 2538,
	-2, 0,
	-1, 1327,
	1, 668,
	587, 668,
	-2, 1359,
	-1, 1455,
	357, 2171,
	411, 2171,
	452, 2171,
	577, 2171,
	-2, 2161,
	-1, 1466,
	588, 2171,
	-2, 2172,
	-1, 1475,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 1523,
	396, 1024,
	544, 1024,
	-2, 391,
	-1, 1540,
	43, 2169,
	-2, 990,
	-1, 1547,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 1555,
	4, 1252,
	21, 1252,
	22, 1252,
	23, 1252,
	24, 1252,
	25, 1252,
	26, 1252,
	27, 1252,
	29, 1252,
	30, 1252,
	36, 1252,
	41, 1252,
	42, 1252,
	44, 1252,
	45, 1252,
	46, 1252,
	47, 1252,
	48, 1252,
	49, 1252,
	50, 1252,
	51, 1252,
	53, 1252,
	54, 1252,
	55, 1252,
	56, 1252,
	58, 1252,
	59, 1252,
	60, 1252,
	61, 1252,
	62, 1252,
	63, 1252,
	64, 1252,
	68, 1252,
	69, 1252,
	70, 1252,
	71, 1252,
	73, 1252,
	74, 1252,
	75, 1252,
	79, 1252,
	80, 1252,
	81, 1252,
	82, 1252,
	83, 1252,
	84, 1252,
	85, 1252,
	88, 1252,
	89, 1252,
	90, 1252,
	91, 1252,
	92, 1252,
	94, 1252,
	96, 1252,
	97, 1252,
	98, 1252,
	99, 1252,
	100, 1252,
	101, 1252,
	103, 1252,
	104, 1252,
	105, 1252,
	107, 1252,
	108, 1252,
	109, 1252,
	117, 1252,
	118, 1252,
	119, 1252,
	120, 1252,
	121, 1252,
	123, 1252,
	124, 1252,
	125, 1252,
	127, 1252,
	128, 1252,
	129, 1252,
	131, 1252,
	132, 1252,
	133, 1252,
	135, 1252,
	136, 1252,
	137, 1252,
	140, 1252,
	141, 1252,
	142, 1252,
	144, 1252,
	145, 1252,
	147, 1252,
	148, 1252,
	149, 1252,
	151, 1252,
	152, 1252,
	153, 1252,
	154, 1252,
	155, 1252,
	156, 1252,
	157, 1252,
	158, 1252,
	159, 1252,
	160, 1252,
	161, 1252,
	162, 1252,
	163, 1252,
	164, 1252,
	165, 1252,
	166, 1252,
	174, 1252,
	175, 1252,
	176, 1252,
	177, 1252,
	181, 1252,
	183, 1252,
	184, 1252,
	188, 1252,
	189, 1252,
	190, 1252,
	191, 1252,
	192, 1252,
	193, 1252,
	194, 1252,
	195, 1252,
	196, 1252,
	197, 1252,
	198, 1252,
	199, 1252,
	200, 1252,
	202, 1252,
	203, 1252,
	205, 1252,
	206, 1252,
	208, 1252,
	209, 1252,
	210, 1252,
	211, 1252,
	212, 1252,
	213, 1252,
	214, 1252,
	215, 1252,
	216, 1252,
	218, 1252,
	219, 1252,
	221, 1252,
	222, 1252,
	223, 1252,
	224, 1252,
	225, 1252,
	230, 1252,
	231, 1252,
	232, 1252,
	233, 1252,
	236, 1252,
	237, 1252,
	238, 1252,
	240, 1252,
	242, 1252,
	243, 1252,
	245, 1252,
	247, 1252,
	248, 1252,
	249, 1252,
	251, 1252,
	255, 1252,
	256, 1252,
	257, 1252,
	258, 1252,
	259, 1252,
	260, 1252,
	262, 1252,
	263, 1252,
	264, 1252,
	266, 1252,
	267, 1252,
	269, 1252,
	270, 1252,
	273, 1252,
	277, 1252,
	278, 1252,
	279, 1252,
	282, 1252,
	283, 1252,
	284, 1252,
	285, 1252,
	287, 1252,
	288, 1252,
	289, 1252,
	290, 1252,
	291, 1252,
	292, 1252,
	293, 1252,
	294, 1252,
	295, 1252,
	296, 1252,
	297, 1252,
	298, 1252,
	299, 1252,
	300, 1252,
	301, 1252,
	302, 1252,
	303, 1252,
	304, 1252,
	305, 1252,
	306, 1252,
	307, 1252,
	308, 1252,
	310, 1252,
	312, 1252,
	313, 1252,
	314, 1252,
	315, 1252,
	316, 1252,
	317, 1252,
	318, 1252,
	319, 1252,
	320, 1252,
	321, 1252,
	322, 1252,
	323, 1252,
	325, 1252,
	326, 1252,
	330, 1252,
	331, 1252,
	333, 1252,
	334, 1252,
	335, 1252,
	336, 1252,
	337, 1252,
	340, 1252,
	342, 1252,
	344, 1252,
	345, 1252,
	346, 1252,
	349, 1252,
	350, 1252,
	351, 1252,
	353, 1252,
	355, 1252,
	356, 1252,
	357, 1252,
	358, 1252,
	359, 1252,
	360, 1252,
	361, 1252,
	362, 1252,
	363, 1252,
	364, 1252,
	365, 1252,
	366, 1252,
	368, 1252,
	369, 1252,
	370, 1252,
	371, 1252,
	372, 1252,
	373, 1252,
	374, 1252,
	375, 1252,
	376, 1252,
	377, 1252,
	378, 1252,
	379, 1252,
	380, 1252,
	381, 1252,
	382, 1252,
	384, 1252,
	385, 1252,
	387, 1252,
	388, 1252,
	389, 1252,
	390, 1252,
	391, 1252,
	392, 1252,
	393, 1252,
	394, 1252,
	395, 1252,
	396, 1252,
	397, 1252,
	398, 1252,
	400, 1252,
	402, 1252,
	403, 1252,
	404, 1252,
	409, 1252,
	411, 1252,
	412, 1252,
	413, 1252,
	414, 1252,
	415, 1252,
	416, 1252,
	417, 1252,
	418, 1252,
	419, 1252,
	421, 1252,
	422, 1252,
	423, 1252,
	425, 1252,
	426, 1252,
	427, 1252,
	428, 1252,
	429, 1252,
	430, 1252,
	432, 1252,
	433, 1252,
	434, 1252,
	435, 1252,
	436, 1252,
	437, 1252,
	438, 1252,
	439, 1252,
	440, 1252,
	441, 1252,
	442, 1252,
	443, 1252,
	445, 1252,
	446, 1252,
	447, 1252,
	448, 1252,
	449, 1252,
	450, 1252,
	452, 1252,
	453, 1252,
	454, 1252,
	455, 1252,
	456, 1252,
	457, 1252,
	459, 1252,
	460, 1252,
	461, 1252,
	462, 1252,
	463, 1252,
	464, 1252,
	465, 1252,
	467, 1252,
	469, 1252,
	470, 1252,
	471, 1252,
	472, 1252,
	473, 1252,
	474, 1252,
	475, 1252,
	476, 1252,
	477, 1252,
	478, 1252,
	479, 1252,
	480, 1252,
	481, 1252,
	482, 1252,
	483, 1252,
	484, 1252,
	486, 1252,
	487, 1252,
	489, 1252,
	490, 1252,
	492, 1252,
	493, 1252,
	494, 1252,
	495, 1252,
	496, 1252,
	497, 1252,
	498, 1252,
	499, 1252,
	500, 1252,
	502, 1252,
	503, 1252,
	504, 1252,
	505, 1252,
	506, 1252,
	508, 1252,
	510, 1252,
	511, 1252,
	512, 1252,
	513, 1252,
	514, 1252,
	515, 1252,
	517, 1252,
	518, 1252,
	519, 1252,
	520, 1252,
	522, 1252,
	523, 1252,
	526, 1252,
	527, 1252,
	528, 1252,
	529, 1252,
	530, 1252,
	531, 1252,
	532, 1252,
	534, 1252,
	537, 1252,
	538, 1252,
	539, 1252,
	540, 1252,
	541, 1252,
	542, 1252,
	544, 1252,
	545, 1252,
	546, 1252,
	547, 1252,
	549, 1252,
	554, 1252,
	555, 1252,
	556, 1252,
	557, 1252,
	558, 1252,
	559, 1252,
	-2, 0,
	-1, 1578,
	1, 536,
	583, 536,
	585, 536,
	587, 536,
	-2, 1463,
	-1, 1581,
	4, 2615,
	11, 2615,
	12, 2615,
	14, 2615,
	15, 2615,
	16, 2615,
	17, 2615,
	18, 2615,
	19, 2615,
	21, 2615,
	22, 2615,
	23, 2615,
	24, 2615,
	25, 2615,
	26, 2615,
	27, 2615,
	29, 2615,
	30, 2615,
	33, 2615,
	34, 2615,
	36, 2615,
	38, 2615,
	41, 2615,
	42, 2615,
	44, 2615,
	45, 2615,
	46, 2615,
	47, 2615,
	48, 2615,
	49, 2615,
	50, 2615,
	51, 2615,
	53, 2615,
	54, 2615,
	55, 2615,
	56, 2615,
	58, 2615,
	59, 2615,
	60, 2615,
	61, 2615,
	62, 2615,
	63, 2615,
	64, 2615,
	68, 2615,
	69, 2615,
	70, 2615,
	71, 2615,
	73, 2615,
	74, 2615,
	75, 2615,
	76, 2615,
	79, 2615,
	80, 2615,
	81, 2615,
	82, 2615,
	83, 2615,
	84, 2615,
	85, 2615,
	86, 2615,
	88, 2615,
	89, 2615,
	90, 2615,
	91, 2615,
	92, 2615,
	94, 2615,
	95, 2615,
	96, 2615,
	97, 2615,
	98, 2615,
	99, 2615,
	100, 2615,
	101, 2615,
	103, 2615,
	104, 2615,
	105, 2615,
	106, 2615,
	107, 2615,
	108, 2615,
	109, 2615,
	117, 2615,
	118, 2615,
	119, 2615,
	120, 2615,
	121, 2615,
	123, 2615,
	124, 2615,
	125, 2615,
	127, 2615,
	128, 2615,
	129, 2615,
	131, 2615,
	132, 2615,
	133, 2615,
	135, 2615,
	136, 2615,
	137, 2615,
	140, 2615,
	141, 2615,
	142, 2615,
	144, 2615,
	145, 2615,
	147, 2615,
	148, 2615,
	149, 2615,
	151, 2615,
	152, 2615,
	153, 2615,
	154, 2615,
	155, 2615,
	156, 2615,
	157, 2615,
	158, 2615,
	159, 2615,
	160, 2615,
	161, 2615,
	162, 2615,
	163, 2615,
	164, 2615,
	165, 2615,
	166, 2615,
	170, 2615,
	171, 2615,
	172, 2615,
	173, 2615,
	174, 2615,
	175, 2615,
	176, 2615,
	177, 2615,
	180, 2615,
	181, 2615,
	183, 2615,
	184, 2615,
	187, 2615,
	188, 2615,
	189, 2615,
	190, 2615,
	191, 2615,
	192, 2615,
	193, 2615,
	194, 2615,
	195, 2615,
	196, 2615,
	197, 2615,
	198, 2615,
	199, 2615,
	200, 2615,
	202, 2615,
	203, 2615,
	205, 2615,
	206, 2615,
	208, 2615,
	209, 2615,
	210, 2615,
	211, 2615,
	212, 2615,
	213, 2615,
	214, 2615,
	215, 2615,
	216, 2615,
	217, 2615,
	218, 2615,
	219, 2615,
	220, 2615,
	221, 2615,
	222, 2615,
	223, 2615,
	224, 2615,
	225, 2615,
	227, 2615,
	228, 2615,
	230, 2615,
	231, 2615,
	232, 2615,
	233, 2615,
	235, 2615,
	236, 2615,
	237, 2615,
	238, 2615,
	240, 2615,
	242, 2615,
	243, 2615,
	244, 2615,
	245, 2615,
	246, 2615,
	247, 2615,
	248, 2615,
	249, 2615,
	250, 2615,
	251, 2615,
	253, 2615,
	254, 2615,
	255, 2615,
	256, 2615,
	257, 2615,
	258, 2615,
	259, 2615,
	260, 2615,
	262, 2615,
	263, 2615,
	264, 2615,
	266, 2615,
	267, 2615,
	268, 2615,
	269, 2615,
	270, 2615,
	271, 2615,
	273, 2615,
	277, 2615,
	278, 2615,
	279, 2615,
	282, 2615,
	283, 2615,
	284, 2615,
	285, 2615,
	286, 2615,
	287, 2615,
	288, 2615,
	289, 2615,
	290, 2615,
	291, 2615,
	292, 2615,
	293, 2615,
	294, 2615,
	295, 2615,
	296, 2615,
	297, 2615,
	298, 2615,
	299, 2615,
	300, 2615,
	301, 2615,
	302, 2615,
	303, 2615,
	304, 2615,
	305, 2615,
	306, 2615,
	307, 2615,
	308, 2615,
	310, 2615,
	311, 2615,
	312, 2615,
	313, 2615,
	314, 2615,
	315, 2615,
	316, 2615,
	317, 2615,
	318, 2615,
	319, 2615,
	320, 2615,
	321, 2615,
	322, 2615,
	323, 2615,
	325, 2615,
	326, 2615,
	329, 2615,
	330, 2615,
	331, 2615,
	333, 2615,
	334, 2615,
	335, 2615,
	336, 2615,
	337, 2615,
	340, 2615,
	344, 2615,
	345, 2615,
	346, 2615,
	347, 2615,
	349, 2615,
	350, 2615,
	351, 2615,
	353, 2615,
	355, 2615,
	356, 2615,
	357, 2615,
	358, 2615,
	359, 2615,
	360, 2615,
	361, 2615,
	362, 2615,
	363, 2615,
	364, 2615,
	365, 2615,
	366, 2615,
	368, 2615,
	369, 2615,
	370, 2615,
	371, 2615,
	372, 2615,
	373, 2615,
	374, 2615,
	375, 2615,
	376, 2615,
	377, 2615,
	378, 2615,
	379, 2615,
	380, 2615,
	381, 2615,
	382, 2615,
	384, 2615,
	385, 2615,
	387, 2615,
	388, 2615,
	389, 2615,
	390, 2615,
	391, 2615,
	392, 2615,
	393, 2615,
	394, 2615,
	395, 2615,
	396, 2615,
	397, 2615,
	398, 2615,
	400, 2615,
	402, 2615,
	403, 2615,
	404, 2615,
	409, 2615,
	410, 2615,
	411, 2615,
	412, 2615,
	413, 2615,
	414, 2615,
	415, 2615,
	416, 2615,
	417, 2615,
	418, 2615,
	419, 2615,
	421, 2615,
	422, 2615,
	423, 2615,
	424, 2615,
	425, 2615,
	426, 2615,
	427, 2615,
	428, 2615,
	429, 2615,
	430, 2615,
	431, 2615,
	432, 2615,
	433, 2615,
	434, 2615,
	435, 2615,
	436, 2615,
	437, 2615,
	438, 2615,
	439, 2615,
	440, 2615,
	441, 2615,
	442, 2615,
	443, 2615,
	445, 2615,
	446, 2615,
	447, 2615,
	448, 2615,
	449, 2615,
	450, 2615,
	452, 2615,
	453, 2615,
	454, 2615,
	455, 2615,
	456, 2615,
	457, 2615,
	458, 2615,
	459, 2615,
	460, 2615,
	461, 2615,
	462, 2615,
	463, 2615,
	464, 2615,
	465, 2615,
	467, 2615,
	469, 2615,
	470, 2615,
	471, 2615,
	472, 2615,
	473, 2615,
	474, 2615,
	475, 2615,
	476, 2615,
	477, 2615,
	478, 2615,
	479, 2615,
	480, 2615,
	481, 2615,
	482, 2615,
	483, 2615,
	484, 2615,
	486, 2615,
	487, 2615,
	489, 2615,
	490, 2615,
	492, 2615,
	493, 2615,
	494, 2615,
	495, 2615,
	496, 2615,
	497, 2615,
	498, 2615,
	499, 2615,
	500, 2615,
	502, 2615,
	503, 2615,
	504, 2615,
	505, 2615,
	506, 2615,
	508, 2615,
	510, 2615,
	511, 2615,
	512, 2615,
	513, 2615,
	514, 2615,
	515, 2615,
	517, 2615,
	518, 2615,
	519, 2615,
	520, 2615,
	522, 2615,
	523, 2615,
	526, 2615,
	527, 2615,
	528, 2615,
	529, 2615,
	530, 2615,
	531, 2615,
	532, 2615,
	534, 2615,
	537, 2615,
	538, 2615,
	539, 2615,
	540, 2615,
	541, 2615,
	542, 2615,
	544, 2615,
	545, 2615,
	546, 2615,
	547, 2615,
	549, 2615,
	554, 2615,
	555, 2615,
	556, 2615,
	557, 2615,
	558, 2615,
	559, 2615,
	560, 2615,
	562, 2615,
	565, 2615,
	566, 2615,
	567, 2615,
	568, 2615,
	569, 2615,
	570, 2615,
	572, 2615,
	573, 2615,
	574, 2615,
	575, 2615,
	576, 2615,
	577, 2615,
	578, 2615,
	579, 2615,
	580, 2615,
	582, 2615,
	585, 2615,
	586, 2615,
	588, 2615,
	589, 2615,
	-2, 0,
	-1, 1586,
	186, 2498,
	507, 2498,
	567, 2498,
	586, 2498,
	-2, 0,
	-1, 1635,
	389, 849,
	450, 849,
	490, 849,
	512, 849,
	-2, 0,
	-1, 1662,
	1, 844,
	583, 844,
	585, 844,
	587, 844,
	-2, 0,
	-1, 1663,
	1, 882,
	583, 882,
	585, 882,
	587, 882,
	-2, 0,
	-1, 1664,
	1, 890,
	583, 890,
	585, 890,
	587, 890,
	-2, 0,
	-1, 1667,
	1, 853,
	583, 853,
	585, 853,
	587, 853,
	-2, 0,
	-1, 1669,
	1, 857,
	583, 857,
	585, 857,
	587, 857,
	-2, 0,
	-1, 1675,
	1, 864,
	583, 864,
	585, 864,
	587, 864,
	-2, 0,
	-1, 1704,
	1, 2560,
	583, 2560,
	585, 2560,
	586, 2560,
	587, 2560,
	-2, 916,
	-1, 1705,
	1, 2495,
	583, 2495,
	585, 2495,
	586, 2495,
	587, 2495,
	-2, 917,
	-1, 1709,
	1, 929,
	583, 929,
	585, 929,
	587, 929,
	-2, 0,
	-1, 1724,
	1, 1354,
	587, 1354,
	-2, 1359,
	-1, 1727,
	169, 1506,
	182, 1506,
	272, 1506,
	338, 1506,
	-2, 1444,
	-1, 1821,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	524, 1465,
	-2, 1907,
	-1, 1881,
	585, 2057,
	-2, 0,
	-1, 1916,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	524, 1465,
	-2, 1593,
	-1, 1950,
	507, 2495,
	586, 2495,
	589, 2495,
	-2, 0,
	-1, 1967,
	584, 1734,
	-2, 1722,
	-1, 1998,
	186, 2495,
	586, 2495,
	589, 2495,
	-2, 0,
	-1, 2046,
	1, 670,
	587, 670,
	-2, 1359,
	-1, 2172,
	220, 250,
	-2, 2204,
	-1, 2173,
	220, 251,
	-2, 299,
	-1, 2277,
	1, 846,
	583, 846,
	585, 846,
	587, 846,
	-2, 0,
	-1, 2278,
	1, 884,
	583, 884,
	585, 884,
	587, 884,
	-2, 0,
	-1, 2279,
	1, 892,
	583, 892,
	585, 892,
	587, 892,
	-2, 0,
	-1, 2280,
	1, 931,
	583, 931,
	585, 931,
	587, 931,
	-2, 0,
	-1, 2313,
	1, 866,
	583, 866,
	585, 866,
	587, 866,
	-2, 0,
	-1, 2369,
	429, 1533,
	430, 1533,
	-2, 1767,
	-1, 2400,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1787,
	-1, 2401,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1788,
	-1, 2402,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1789,
	-1, 2403,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1790,
	-1, 2404,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1791,
	-1, 2405,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1792,
	-1, 2406,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1793,
	-1, 2407,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1794,
	-1, 2419,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1806,
	-1, 2420,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1807,
	-1, 2421,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1808,
	-1, 2424,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1813,
	-1, 2430,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1817,
	-1, 2432,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1825,
	-1, 2433,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1826,
	-1, 2434,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1827,
	-1, 2435,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1828,
	-1, 2571,
	5, 2208,
	186, 2068,
	584, 2205,
	-2, 2196,
	-1, 2572,
	186, 2069,
	-2, 2566,
	-1, 2573,
	186, 2070,
	-2, 2392,
	-1, 2574,
	186, 2071,
	-2, 2278,
	-1, 2575,
	186, 2072,
	-2, 2332,
	-1, 2576,
	186, 2073,
	-2, 2377,
	-1, 2577,
	186, 2074,
	-2, 2493,
	-1, 2578,
	186, 2075,
	-2, 1890,
	-1, 2648,
	1, 1594,
	2, 1594,
	106, 1594,
	150, 1594,
	169, 1594,
	182, 1594,
	187, 1594,
	204, 1594,
	207, 1594,
	235, 1594,
	239, 1594,
	250, 1594,
	268, 1594,
	272, 1594,
	311, 1594,
	338, 1594,
	342, 1594,
	348, 1594,
	420, 1594,
	424, 1594,
	524, 1594,
	535, 1594,
	551, 1594,
	552, 1594,
	553, 1594,
	563, 1594,
	583, 1594,
	585, 1594,
	587, 1594,
	589, 1594,
	-2, 1593,
	-1, 2661,
	584, 2177,
	-2, 2191,
	-1, 2663,
	1, 316,
	551, 316,
	-2, 1492,
	-1, 2690,
	584, 1733,
	-2, 1723,
	-1, 2867,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 3036,
	343, 1536,
	-2, 2605,
	-1, 3037,
	343, 1537,
	-2, 2478,
	-1, 3041,
	429, 2134,
	430, 2134,
	-2, 1888,
	-1, 3042,
	429, 2138,
	430, 2138,
	-2, 1889,
	-1, 3043,
	429, 2135,
	430, 2135,
	-2, 1888,
	-1, 3044,
	429, 2139,
	430, 2139,
	-2, 1889,
	-1, 3057,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1815,
	-1, 3058,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1819,
	-1, 3064,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1821,
	-1, 3280,
	1, 667,
	583, 667,
	585, 667,
	587, 667,
	-2, 1359,
	-1, 3434,
	43, 2169,
	-2, 991,
	-1, 3439,
	1, 1227,
	583, 1227,
	585, 1227,
	587, 1227,
	-2, 1492,
	-1, 3544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1823,
	-1, 3551,
	244, 0,
	246, 0,
	329, 0,
	-2, 1842,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1871,
	-1, 3619,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1872,
	-1, 3620,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1873,
	-1, 3624,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1877,
	-1, 3625,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1878,
	-1, 3626,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1879,
	-1, 3672,
	584, 2178,
	-2, 2192,
	-1, 3834,
	586, 2723,
	-2, 1418,
	-1, 3892,
	244, 0,
	246, 0,
	329, 0,
	-2, 1843,
	-1, 3895,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1846,
	-1, 3896,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1848,
	-1, 3988,
	586, 2193,
	-2, 1262,
	-1, 4132,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1847,
	-1, 4133,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1849,
	-1, 4144,
	244, 0,
	-2, 1880,
	-1, 4313,
	244, 0,
	-2, 1881,
	-1, 4495,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 2569,
}

const sqlPrivate = 57344

const sqlLast = 122365

var sqlAct = [...]int{
	266, 4591, 3423, 2932, 4677, 3191, 2945, 4488, 4547, 4476,
	4187, 4370, 4348, 4494, 4235, 3422, 4487, 4340, 4505, 4618,
	4366, 4391, 2094, 2169, 4447, 3875, 4506, 4463, 4173, 1216,
	1487, 2752, 4444, 4427, 4507, 3583, 4088, 4242, 4560, 4266,
	1227, 2816, 2796, 4317, 4493, 4029, 2244, 4083, 4049, 4153,
	2379, 3984, 4192, 4121, 3818, 4251, 3536, 1296, 4070, 3826,
	1049, 3761, 3456, 4072, 3969, 3362, 4063, 1289, 2603, 3050,
	4280, 2447, 3985, 4093, 3418, 795, 1736, 3450, 3408, 3302,
	1300, 2253, 3799, 1040, 3781, 2387, 3305, 3783, 1360, 2102,
	2954, 3495, 2921, 1602, 1954, 2829, 2380, 758, 3497, 3174,
	2902, 795, 2956, 3675, 2028, 2891, 2251, 3214, 3234, 1922,
	4149, 3197, 868, 4, 2964, 2967, 3206, 2918, 3874, 1452,
	2953, 1891, 258, 2916, 2933, 2164, 3324, 2113, 2163, 4592,
	2754, 2641, 3931, 3173, 1643, 2384, 872, 2947, 1867, 2640,
	3643, 1829, 1955, 3195, 4318, 2460, 3034, 2643, 3299, 863,
	1542, 1294, 2489, 1048, 175, 2895, 790, 2963, 1459, 260,
	2844, 108, 2147, 3291, 1207, 1343, 2159, 1097, 2140, 2491,
	2217, 2795, 2903, 259, 2086, 2621, 2480, 1724, 2026, 2082,
	1268, 1911, 1892, 2072, 2015, 3241, 2368, 2444, 1102, 2351,
	2674, 1093, 2349, 1291, 3420, 1579, 2926, 675, 2204, 1600,
	1545, 697, 2600, 2777, 796, 4392, 2740, 2630, 792, 797,
	2957, 1329, 1210, 1862, 689, 2003, 1901, 1104, 1282, 2483,
	2673, 2611, 2461, 1189, 1908, 2533, 2567, 1737, 1814, 184,
	1738, 2350, 2352, 1224, 801, 740, 185, 1147, 1675, 1662,
	1577, 1206, 752, 1279, 2230, 2203, 1482, 175, 804, 2101,
	4548, 2373, 1570, 1078, 2004, 2001, 692, 1187, 44, 43,
	801, 41, 1743, 32, 30, 28, 715, 935, 3085, 700,
	1723, 1493, 955, 1212, 804, 157, 844, 3657, 3081, 3658,
	2017, 3193, 1044, 73, 2017, 46, 45, 4690, 4680, 1044,
	2017, 2620, 3475, 3146, 3147, 3249, 3164, 3165, 3166, 2017,
	74, 3466, 2017, 152, 4665, 2017, 4664, 4654, 2620, 887,
	2620, 2178, 3264, 1100, 4636, 3890, 78, 4634, 4191, 3465,
	1099, 4191, 4579, 3263, 1076, 4536, 2178, 67, 4529, 4537,
	3475, 4527, 2620, 2613, 48, 2620, 154, 864, 4524, 4521,
	1246, 4491, 4525, 4522, 1204, 2178, 1486, 4490, 1045, 4489,
	2178, 2178, 1338, 2038, 47, 4484, 87, 4483, 4474, 2038,
	3049, 2038, 4191, 2620, 73, 4472, 867, 866, 3161, 4191,
	4469, 4442, 1190, 1190, 4254, 4191, 4416, 2035, 2252, 4417,
	2681, 74, 50, 68, 4409, 4408, 4403, 3094, 2620, 2620,
	4191, 51, 2701, 3095, 4402, 4396, 57, 78, 4191, 2178,
	155, 4319, 4362, 4315, 4310, 1025, 4040, 2681, 49, 4297,
	107, 3952, 1024, 3861, 4294, 93, 104, 4298, 2178, 4291,
	1751, 1752, 4244, 4191, 1222, 4208, 4245, 4207, 4198, 2178,
	4197, 2178, 2178, 4254, 4191, 4190, 4160, 87, 4134, 4191,
	2178, 4112, 2681, 1782, 4101, 2038, 2038, 2178, 3475, 4024,
	1754, 1034, 4009, 2620, 1039, 52, 2620, 3894, 1338, 3842,
	3836, 2681, 3152, 3492, 3492, 3797, 3667, 1239, 3665, 3798,
	3668, 1668, 3666, 94, 2700, 230, 3650, 870, 3146, 3147,
	2620, 3647, 3567, 1191, 3647, 1753, 2178, 2612, 3563, 49,
	3491, 107, 2620, 1193, 3492, 1194, 93, 104, 3482, 93,
	3190, 3185, 3483, 3184, 2620, 2620, 3137, 2620, 3135, 2677,
	3138, 3127, 3136, 1609, 3125, 3128, 3096, 2971, 2620, 4081,
	2620, 2038, 232, 2620, 2943, 2942, 3167, 2724, 2240, 2240,
	3084, 2620, 2680, 2671, 2665, 2619, 2681, 2620, 2178, 2620,
	2239, 4040, 4010, 3861, 2240, 2178, 1219, 3483, 2819, 1240,
	2106, 2739, 2051, 1218, 94, 2016, 2032, 1220, 1751, 1752,
	2035, 1784, 1785, 1786, 1794, 1795, 1796, 2897, 3162, 2177,
	2839, 231, 2737, 1887, 1481, 3746, 2486, 3539, 3515, 1909,
	1787, 1782, 2152, 3467, 224, 2657, 1645, 2656, 1754, 1759,
	2655, 2654, 2653, 225, 1195, 1192, 1033, 1800, 1032, 1031,
	1030, 1029, 3468, 1486, 1028, 1027, 1023, 1022, 1595, 3146,
	3147, 1021, 1020, 1019, 1018, 186, 1017, 1016, 97, 3011,
	230, 1015, 1014, 1753, 1013, 1012, 1011, 1010, 1009, 1008,
	1007, 933, 932, 1773, 2018, 53, 1781, 1783, 2018, 931,
	930, 929, 1770, 928, 2018, 927, 926, 3152, 925, 56,
	924, 1495, 923, 2018, 59, 1095, 2018, 922, 921, 2018,
	920, 919, 918, 69, 2487, 917, 916, 232, 915, 58,
	183, 100, 914, 103, 913, 912, 911, 54, 910, 909,
	908, 156, 907, 906, 3161, 905, 904, 903, 55, 902,
	901, 900, 1507, 1495, 890, 1774, 3146, 3147, 230, 97,
	889, 885, 4512, 884, 3465, 878, 62, 877, 862, 861,
	818, 148, 817, 3163, 816, 1240, 231, 1776, 1777, 1778,
	1779, 815, 807, 806, 3947, 153, 2035, 1759, 805, 773,
	764, 763, 762, 1305, 1102, 746, 2612, 254, 253, 252,
	251, 2516, 250, 1240, 249, 232, 2488, 248, 2485, 247,
	246, 183, 100, 3162, 103, 245, 244, 1102, 243, 242,
	186, 1102, 241, 4095, 1791, 2929, 240, 1801, 239, 238,
	237, 151, 236, 235, 1781, 1783, 234, 1363, 3152, 230,
	1501, 1363, 230, 233, 3906, 3688, 187, 871, 1495, 1305,
	3661, 1797, 148, 1798, 231, 148, 3493, 3237, 3188, 3107,
	1768, 1769, 1912, 3090, 2994, 2711, 2502, 224, 2878, 2016,
	1102, 2685, 1102, 2662, 1102, 2035, 225, 1342, 1789, 2911,
	1305, 1347, 2647, 2080, 2032, 1750, 232, 2700, 2500, 232,
	2344, 2037, 1935, 1774, 2247, 1333, 1840, 3189, 186, 1489,
	1775, 3, 1349, 1226, 4492, 4471, 1305, 3158, 3159, 3160,
	1467, 1831, 151, 1290, 3157, 3155, 3156, 3148, 3149, 3150,
	3151, 3153, 3154, 4377, 4307, 3152, 1305, 187, 4322, 1751,
	1752, 4301, 4299, 1305, 4185, 231, 1799, 4148, 231, 4102,
	4080, 1102, 1870, 1102, 3162, 1870, 1462, 1305, 224, 1869,
	3957, 224, 1869, 1102, 1788, 1102, 2490, 225, 3163, 1754,
	225, 1455, 3929, 1506, 1466, 1290, 3928, 1273, 1276, 1485,
	3922, 1873, 1831, 230, 1868, 1551, 1554, 3921, 2246, 865,
	3802, 1286, 186, 2220, 3920, 3913, 3912, 3910, 3905, 3902,
	3901, 1327, 3146, 3147, 1753, 3796, 3692, 3691, 3690, 1473,
	1356, 1305, 1449, 1454, 3671, 3638, 3637, 3636, 3559, 3146,
	3147, 3555, 3164, 3165, 3166, 230, 3232, 1780, 801, 1102,
	232, 3181, 1102, 3172, 3145, 3142, 4097, 3141, 1494, 3139,
	1290, 1290, 804, 3134, 3133, 3146, 3147, 3132, 1775, 3129,
	3126, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	3106, 1500, 3089, 3082, 1322, 1540, 2944, 1613, 1457, 1833,
	1751, 1752, 232, 1484, 1832, 1792, 1830, 4684, 1483, 231,
	1838, 2484, 2648, 2473, 1750, 1203, 1582, 1584, 2185, 1670,
	175, 175, 224, 1782, 3161, 1749, 4628, 1045, 2183, 3163,
	1754, 225, 4627, 1614, 3803, 4593, 4546, 2694, 1759, 3157,
	3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154, 3744, 4544,
	230, 231, 1228, 186, 3585, 1102, 1102, 1102, 1102, 1102,
	1102, 1102, 4434, 2913, 224, 1753, 4369, 2456, 4358, 1557,
	4355, 3146, 3147, 225, 4354, 1333, 4353, 4334, 1333, 4321,
	4320, 4295, 4279, 230, 4278, 2450, 1102, 4264, 4261, 4260,
	4255, 4204, 1102, 4181, 3186, 186, 4146, 232, 1684, 4129,
	4128, 3152, 1573, 4109, 4108, 4066, 4041, 1790, 1728, 3946,
	3927, 3862, 1765, 1766, 1772, 1793, 1771, 1767, 3152, 1764,
	1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 3856, 3853,
	232, 4323, 3916, 3732, 230, 3731, 3915, 3715, 3146, 3147,
	3714, 3164, 3165, 3166, 3152, 3712, 231, 3653, 1495, 3641,
	3550, 1818, 3494, 1594, 3476, 1722, 1751, 1752, 3168, 224,
	3889, 3442, 3377, 3337, 3803, 1608, 3304, 3257, 225, 1759,
	3157, 3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154, 231,
	3229, 232, 3167, 3111, 3110, 3105, 1754, 3073, 2890, 1876,
	186, 1875, 224, 1820, 1874, 1871, 1863, 1102, 1102, 1102,
	1861, 225, 2692, 1102, 1619, 2691, 2659, 2652, 4096, 2618,
	1224, 2498, 1224, 3161, 1934, 1636, 1781, 1783, 3255, 1890,
	1885, 1753, 230, 2928, 3162, 1884, 1883, 1363, 1882, 1671,
	231, 1889, 1881, 1880, 1879, 1878, 1102, 1877, 1858, 795,
	3152, 1857, 1856, 224, 1855, 1972, 795, 1045, 1854, 1305,
	3162, 1853, 225, 1852, 1851, 1850, 2912, 1849, 1848, 1938,
	3148, 3149, 3150, 3151, 3153, 3154, 1847, 1725, 1846, 232,
	1951, 1898, 1733, 1732, 186, 1774, 1845, 1999, 1025, 1844,
	1833, 1819, 1751, 1752, 1817, 1024, 1812, 1571, 1321, 1244,
	1872, 1235, 4069, 1727, 3953, 3898, 3687, 3664, 3656, 3093,
	2683, 2650, 4165, 1729, 1946, 1746, 1747, 3152, 3955, 3686,
	1832, 3253, 1754, 1815, 1576, 1305, 2248, 3471, 231, 1895,
	1896, 1930, 1102, 1919, 2515, 1759, 1305, 3146, 3147, 4012,
	1344, 224, 1346, 4625, 4617, 2817, 1190, 1943, 4356, 4256,
	225, 4247, 4246, 4100, 1102, 2071, 3162, 1753, 4043, 4042,
	1363, 4011, 3949, 2071, 3865, 1466, 1864, 1865, 3864, 3863,
	3659, 3478, 186, 2071, 2096, 3477, 3806, 175, 1338, 3163,
	4252, 3167, 1870, 1045, 1912, 3537, 1338, 1720, 3756, 1869,
	3131, 3130, 3055, 1635, 2069, 2057, 2782, 1341, 3729, 2501,
	2044, 3369, 1345, 3487, 1920, 3163, 3306, 4150, 801, 1941,
	1005, 1222, 1466, 1222, 2078, 801, 1333, 3425, 2269, 3424,
	230, 2499, 804, 3162, 1842, 2800, 1685, 2043, 3193, 804,
	1775, 4558, 2245, 1942, 1917, 1338, 4243, 4302, 4300, 4532,
	4517, 1644, 1910, 1755, 1756, 1757, 1758, 1760, 1761, 230,
	4504, 3409, 3146, 3147, 2968, 1006, 1888, 1947, 1939, 1853,
	1645, 2165, 3810, 2020, 1995, 3793, 4184, 232, 2022, 1853,
	3758, 2024, 1966, 3753, 3737, 3512, 1599, 2029, 3340, 2221,
	2149, 2031, 1929, 1928, 3587, 1927, 2034, 1925, 1924, 1923,
	1305, 1305, 1969, 1914, 2106, 3278, 232, 2481, 3997, 4513,
	1363, 3163, 3099, 4200, 4177, 3995, 1313, 1952, 3150, 3151,
	3153, 3154, 2046, 3158, 3159, 3160, 231, 1047, 2690, 3416,
	3157, 3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154, 224,
	1886, 1866, 2825, 1219, 2214, 1219, 2779, 1550, 225, 1478,
	1218, 1316, 1218, 4526, 1220, 231, 1220, 3155, 3156, 3148,
	3149, 3150, 3151, 3153, 3154, 1272, 4523, 2134, 224, 2139,
	186, 3461, 2144, 1575, 2836, 2833, 4514, 225, 3163, 3707,
	2042, 4349, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	2040, 4084, 4441, 2170, 2175, 2831, 4331, 3401, 3309, 186,
	2049, 2824, 3724, 3981, 1305, 2778, 1305, 986, 1305, 1839,
	2047, 2951, 2925, 2074, 4577, 2064, 4576, 1202, 3531, 2058,
	1683, 4607, 3771, 4225, 1305, 1305, 3282, 3999, 1517, 1525,
	2725, 3152, 1003, 1001, 1666, 1305, 2319, 3977, 999, 4679,
	1666, 1623, 2317, 1479, 1043, 2112, 1682, 1305, 1576, 1305,
	1305, 1305, 997, 4218, 3156, 3148, 3149, 3150, 3151, 3153,
	3154, 801, 4210, 2167, 2743, 2743, 4038, 4037, 994, 3769,
	3768, 1346, 795, 3760, 3752, 804, 3751, 3284, 3749, 2741,
	2741, 2255, 3748, 2132, 2210, 3736, 3702, 2213, 2326, 3770,
	3701, 3978, 3405, 3404, 2268, 2278, 2215, 3248, 3104, 3103,
	3102, 1663, 3101, 2227, 2922, 3059, 1484, 2842, 2841, 2838,
	2827, 1483, 3158, 3159, 3160, 1526, 3994, 2815, 2814, 3157,
	3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154, 2131, 4201,
	4178, 1345, 2143, 1042, 2810, 1665, 2809, 3162, 1339, 3306,
	2235, 1665, 1757, 1758, 1760, 1761, 1681, 2250, 2176, 2808,
	2273, 2787, 4127, 2786, 2747, 2672, 2431, 2279, 857, 1726,
	1102, 2245, 1102, 1664, 2359, 1045, 2529, 1045, 3367, 1102,
	2528, 2389, 1972, 1972, 1363, 2336, 1102, 1102, 1102, 1102,
	1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	1102, 2196, 1102, 3254, 1102, 1102, 1102, 1102, 2237, 2224,
	2195, 1621, 4608, 2357, 2256, 2780, 1573, 1521, 2232, 2780,
	2232, 801, 1328, 2233, 2361, 1061, 1102, 2229, 2137, 1102,
	1102, 2784, 1044, 3513, 2241, 804, 2242, 1102, 2348, 1322,
	2103, 1102, 2194, 1102, 1102, 1335, 2261, 1563, 1346, 1562,
	2732, 1363, 858, 2341, 1561, 2684, 1560, 1102, 1102, 1102,
	1102, 1761, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	2295, 2260, 3163, 2099, 2335, 991, 3339, 1575, 1637, 1616,
	3962, 4612, 3973, 1258, 2265, 1718, 2277, 3974, 1102, 1102,
	1102, 1102, 1102, 1102, 1102, 1102, 1102, 2462, 2463, 1480,
	2804, 1102, 2104, 2105, 2385, 2386, 3154, 2586, 1345, 2481,
	1960, 2462, 2478, 1224, 4013, 3368, 2343, 2756, 230, 1534,
	1363, 1339, 2797, 2798, 2486, 1340, 2313, 3996, 2333, 1224,
	2797, 2798, 2100, 2974, 2446, 2372, 2664, 2524, 3976, 2446,
	2797, 2798, 3961, 3993, 1719, 1102, 1363, 2770, 230, 1694,
	1339, 3014, 1539, 2323, 3979, 2358, 2570, 2570, 2584, 230,
	2462, 3032, 1698, 2604, 2606, 232, 2285, 3521, 2282, 2610,
	2347, 2346, 2345, 4638, 2360, 2353, 4613, 1645, 2359, 1966,
	1966, 1930, 1336, 1025, 2477, 3520, 1025, 1025, 1680, 1045,
	2376, 1337, 1645, 2377, 2378, 232, 3710, 1617, 1045, 1969,
	1969, 4576, 1045, 2769, 4126, 4510, 232, 687, 1041, 2234,
	2276, 3008, 2487, 2660, 231, 2635, 3148, 3149, 3150, 3151,
	3153, 3154, 3576, 2490, 2627, 898, 2746, 224, 2356, 2835,
	2759, 3047, 1633, 682, 1731, 2454, 225, 2357, 1335, 1320,
	1919, 1677, 2452, 2526, 231, 1190, 4036, 3750, 2527, 1305,
	1305, 2530, 2458, 2531, 2532, 231, 3281, 224, 186, 4588,
	3017, 2834, 2832, 2342, 3747, 2475, 225, 1335, 224, 4596,
	2649, 3403, 2114, 1546, 3365, 2286, 2678, 225, 1751, 1752,
	3975, 1290, 2830, 3733, 2742, 2746, 4615, 2626, 186, 4342,
	1045, 1363, 2837, 2783, 2488, 2118, 2485, 1231, 2807, 186,
	2634, 1782, 2639, 771, 1222, 2645, 2646, 2720, 1754, 2785,
	2714, 4595, 2566, 3721, 2595, 2579, 2355, 175, 1340, 3982,
	1222, 2608, 1544, 2632, 2633, 1972, 3573, 2616, 2617, 1290,
	2628, 995, 995, 2670, 2318, 1872, 2334, 995, 2686, 1229,
	2316, 1917, 1333, 1753, 3991, 860, 859, 1340, 855, 4641,
	854, 996, 2115, 2675, 3146, 3147, 4565, 3164, 3165, 3166,
	3046, 1338, 3880, 1363, 1622, 1290, 1290, 995, 2182, 2181,
	3039, 3040, 2490, 3879, 3458, 1336, 3554, 1305, 4511, 2358,
	1523, 2106, 1233, 3459, 1337, 4668, 3734, 3778, 2748, 1520,
	2332, 4423, 3016, 1102, 1102, 4169, 1102, 2716, 2063, 2062,
	2693, 2697, 2071, 2073, 1336, 1864, 1865, 1695, 3574, 4344,
	2705, 3293, 769, 1337, 2708, 2706, 2709, 2017, 795, 2723,
	1305, 2710, 3013, 2722, 2745, 2699, 1219, 2696, 2758, 3161,
	4478, 3719, 4479, 1218, 2715, 2721, 2818, 1220, 2812, 4621,
	2717, 3779, 1219, 2894, 2490, 2744, 3356, 1759, 1232, 1218,
	2789, 1305, 2356, 1220, 2805, 1257, 2811, 1455, 2119, 2713,
	3070, 3458, 4350, 1305, 2728, 1305, 2828, 2790, 2909, 4364,
	1546, 3283, 2726, 2773, 4614, 3981, 2936, 4509, 1692, 736,
	1305, 3348, 3777, 2730, 1466, 1242, 2788, 2873, 981, 3068,
	2150, 2965, 2875, 2138, 1781, 1783, 1859, 3992, 2162, 2806,
	3357, 2799, 2801, 2802, 2803, 2761, 2764, 891, 2751, 3977,
	3251, 3321, 1038, 3970, 2087, 2869, 2975, 2976, 2731, 2088,
	2066, 1102, 3015, 3152, 2120, 2121, 2442, 2982, 2983, 2984,
	3968, 2995, 879, 2996, 2150, 3349, 4058, 2284, 2729, 3972,
	3380, 3355, 1966, 2097, 1696, 3325, 4413, 801, 2116, 2813,
	1900, 3876, 2161, 1774, 1338, 2440, 2969, 2823, 2490, 2484,
	1053, 804, 1969, 3978, 992, 4564, 2428, 3320, 1618, 2870,
	2757, 2743, 4139, 2972, 683, 1102, 3347, 801, 2977, 3061,
	2978, 1102, 1102, 1338, 2445, 4587, 2762, 3167, 4461, 705,
	2117, 804, 1484, 2950, 2938, 2905, 3327, 2876, 899, 2940,
	4452, 2992, 3505, 175, 982, 3971, 2888, 4123, 2663, 4021,
	2868, 3498, 1811, 3109, 2898, 3294, 2472, 1960, 1960, 1466,
	1693, 2281, 770, 1900, 2631, 1302, 2899, 1290, 2989, 3162,
	3065, 1904, 2089, 1697, 2068, 2901, 1102, 1102, 4642, 2126,
	2931, 2999, 1102, 3001, 2644, 3003, 2941, 1044, 3019, 2093,
	3021, 684, 2150, 2952, 3066, 1102, 1102, 3589, 3071, 3326,
	4629, 1102, 1102, 2275, 2970, 3012, 1466, 1102, 1466, 4343,
	772, 4068, 2067, 2939, 768, 2453, 1102, 1102, 1102, 1907,
	2920, 2109, 1102, 3870, 1632, 1634, 1730, 3683, 3881, 4619,
	4539, 1319, 1102, 2127, 1902, 2998, 2436, 2997, 1775, 685,
	4540, 686, 2146, 1247, 1904, 2122, 3533, 3030, 3500, 1102,
	1230, 3062, 1905, 3092, 2991, 2437, 1620, 1650, 981, 3027,
	2438, 2090, 2095, 3499, 2443, 3038, 3000, 2145, 3002, 4371,
	3004, 4411, 4508, 2426, 2125, 2110, 2429, 4575, 4573, 4669,
	1904, 3720, 1038, 4122, 39, 3087, 3088, 3029, 4390, 3028,
	3091, 4059, 1907, 892, 893, 1903, 4073, 3083, 2372, 4263,
	2141, 3033, 3824, 4563, 3973, 3022, 3048, 1902, 3024, 3974,
	4412, 2018, 3446, 2202, 3163, 4074, 2108, 1897, 880, 881,
	1245, 2123, 1238, 674, 1740, 1905, 3208, 2425, 1907, 2104,
	2105, 3801, 1740, 4620, 983, 1741, 3877, 1735, 2375, 1102,
	1102, 1102, 4272, 2629, 2091, 2107, 2059, 4647, 1102, 1102,
	1102, 3925, 3496, 1102, 3242, 4199, 4330, 1514, 3627, 2142,
	3976, 1905, 1045, 1102, 1224, 1363, 3060, 4622, 1903, 1102,
	3825, 1102, 3200, 3201, 982, 3764, 3979, 3706, 3067, 3300,
	1224, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 3069, 3447,
	3438, 2097, 3786, 3296, 2910, 2904, 2892, 3572, 1363, 2228,
	2222, 3784, 2216, 2208, 2188, 4372, 3098, 1249, 1906, 3786,
	1224, 745, 3698, 1363, 3642, 2791, 2763, 4428, 3784, 3534,
	4124, 3183, 2746, 2365, 4393, 3827, 2153, 1739, 2324, 2052,
	4089, 2160, 1972, 4289, 3222, 1739, 1363, 3202, 2266, 3235,
	2889, 3287, 1260, 4241, 2439, 4239, 3677, 4180, 3158, 3159,
	3160, 1305, 1305, 3247, 2441, 3157, 3155, 3156, 3148, 3149,
	3150, 3151, 3153, 3154, 1740, 3312, 2056, 3501, 3502, 3503,
	3504, 3308, 1811, 3307, 1102, 984, 3261, 3053, 3788, 3882,
	4538, 1906, 894, 895, 3031, 3655, 4281, 3205, 1102, 3204,
	1036, 3210, 981, 1741, 3236, 3788, 3212, 2096, 1305, 4282,
	3678, 1741, 3975, 1972, 2669, 2668, 2129, 882, 883, 2075,
	2076, 1667, 3231, 3787, 2427, 2667, 1038, 1906, 2666, 3207,
	1960, 1102, 3288, 3289, 3211, 4071, 3679, 985, 3676, 3220,
	3787, 2096, 4283, 3228, 3279, 3223, 3224, 1305, 3216, 3240,
	3221, 3982, 2054, 3310, 2154, 3194, 3314, 3628, 3285, 3926,
	3178, 3179, 3180, 4646, 3209, 1222, 3629, 1333, 1569, 1305,
	2366, 1305, 1037, 3883, 983, 1555, 3272, 1739, 2092, 3792,
	2896, 1222, 2106, 1042, 3252, 4337, 1567, 2149, 1363, 1556,
	3226, 2135, 3227, 2055, 1466, 1466, 2149, 2792, 2793, 1305,
	897, 3297, 3311, 1305, 4285, 3316, 4236, 1651, 3318, 4050,
	4373, 1222, 3782, 3244, 3245, 3246, 808, 3699, 982, 2767,
	3370, 3258, 3259, 3383, 3260, 3385, 1305, 4284, 3389, 3713,
	3488, 3505, 3395, 1305, 2130, 1305, 2226, 4188, 3364, 1363,
	3498, 3412, 4584, 3217, 4368, 4286, 795, 4167, 3269, 3342,
	3268, 3273, 2973, 3270, 3271, 3301, 4106, 1305, 3274, 1966,
	3275, 1823, 3276, 3280, 2874, 1828, 3703, 1466, 2872, 1305,
	2254, 1626, 4431, 4338, 3286, 4438, 3265, 3266, 3381, 1969,
	4425, 3932, 3421, 3378, 3644, 2497, 1224, 1219, 3785, 3360,
	3454, 3243, 2213, 3215, 1218, 4456, 4586, 1714, 1220, 4528,
	4175, 4357, 3430, 1219, 2622, 3785, 3437, 744, 3338, 3344,
	1218, 1305, 1305, 3328, 1220, 984, 4145, 3924, 3346, 3791,
	2965, 3175, 3351, 3295, 3452, 3219, 3407, 4105, 3410, 2965,
	1966, 3358, 3352, 1219, 1305, 3680, 3353, 3500, 3354, 2625,
	1218, 4189, 3371, 3445, 1220, 4176, 1942, 3549, 3510, 3509,
	1969, 3474, 3499, 2087, 3463, 3262, 3402, 3379, 2088, 4432,
	4339, 3390, 3345, 3140, 3398, 3396, 3392, 985, 2328, 2157,
	2315, 1716, 3072, 2893, 1363, 2826, 2781, 1363, 1713, 1711,
	2624, 2695, 2337, 1689, 3359, 2623, 3361, 1687, 3514, 1661,
	1659, 2789, 1657, 1655, 3366, 1653, 3406, 1647, 1290, 1642,
	1640, 1565, 3414, 1937, 3448, 801, 1933, 1568, 983, 1717,
	1102, 3435, 3434, 1604, 3391, 3433, 1102, 1102, 3397, 804,
	1102, 1102, 1102, 2155, 1102, 1566, 3704, 3176, 3529, 3455,
	3528, 1735, 3218, 1102, 1972, 3010, 3009, 3506, 3462, 896,
	3490, 2980, 1102, 3486, 2354, 1102, 3460, 1676, 3507, 2128,
	1045, 1363, 3472, 3473, 2290, 3469, 175, 175, 2207, 2187,
	1102, 2000, 809, 810, 2156, 3526, 3484, 1843, 1363, 1615,
	1538, 2089, 2496, 4503, 4022, 2138, 3755, 1222, 1972, 1972,
	1102, 1102, 3527, 1102, 1102, 1102, 3382, 4287, 2093, 3754,
	4023, 4008, 4424, 4288, 4087, 3517, 4028, 3518, 3966, 3519,
	1466, 1102, 3453, 2136, 3823, 1102, 3535, 1972, 1972, 1102,
	1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 3552, 1102,
	3561, 3562, 3523, 3508, 4561, 3814, 1102, 1102, 1972, 3601,
	3532, 3602, 3767, 1102, 2133, 3727, 3451, 1035, 2330, 984,
	2314, 4082, 2329, 3725, 1102, 1715, 3501, 3502, 3503, 3504,
	2090, 2095, 1712, 1710, 993, 1224, 1224, 1688, 3705, 1102,
	3441, 1686, 3436, 1660, 1658, 2137, 1656, 1654, 3426, 1652,
	2923, 1646, 2915, 1641, 1639, 1564, 2908, 3557, 2900, 2886,
	2871, 2712, 2707, 3524, 2186, 2184, 2166, 3568, 1363, 1219,
	2151, 985, 3530, 812, 811, 3673, 1218, 2124, 2111, 2098,
	1220, 3639, 2039, 3591, 3584, 3575, 3577, 3578, 2036, 2033,
	2385, 3592, 3660, 2030, 2025, 2023, 2019, 2010, 3599, 1312,
	3569, 3393, 3600, 3631, 1199, 3579, 2160, 3604, 4552, 3681,
	3682, 1580, 3606, 2091, 1744, 1102, 1945, 4073, 3051, 2385,
	3607, 1966, 4577, 3693, 3694, 3695, 2060, 3025, 3598, 3640,
	1200, 3023, 3646, 813, 814, 1102, 4074, 2340, 3632, 4466,
	4111, 1969, 4104, 4103, 4035, 3958, 3651, 3652, 2966, 2079,
	3635, 1519, 4274, 2768, 4267, 3835, 3331, 2106, 2743, 2743,
	2097, 1708, 1709, 2280, 2225, 1966, 1966, 1960, 1102, 1102,
	175, 3648, 3649, 2741, 2765, 1492, 732, 1499, 1281, 1505,
	1280, 2310, 2309, 2338, 2287, 1969, 1969, 4465, 3662, 998,
	1000, 1002, 4000, 4030, 1966, 1966, 1638, 3663, 2771, 4309,
	3933, 3911, 3323, 1751, 1752, 1751, 1752, 2772, 1102, 2794,
	3329, 1748, 1314, 3052, 1969, 1969, 1248, 688, 4580, 3394,
	4571, 3763, 255, 4533, 1745, 1966, 1222, 1222, 2885, 2339,
	2772, 2312, 1305, 1754, 3811, 1305, 3738, 4418, 1960, 2209,
	1201, 1325, 2833, 3762, 2831, 1969, 1593, 2840, 1598, 1281,
	788, 3330, 1972, 2820, 2774, 4384, 4378, 3689, 1607, 4336,
	1612, 3743, 3745, 3709, 845, 1281, 3757, 3742, 1753, 671,
	1753, 4258, 699, 2822, 2776, 4234, 3759, 4168, 3821, 3813,
	3730, 3765, 3800, 1305, 3696, 3670, 2821, 2775, 3697, 1102,
	3735, 3440, 2930, 2609, 2045, 1953, 4616, 1224, 1102, 4458,
	3837, 4186, 3250, 4645, 4459, 4380, 3146, 3147, 1305, 1305,
	1305, 4458, 2789, 3844, 1751, 1752, 4459, 2735, 2736, 1486,
	3790, 3903, 1669, 3828, 4590, 1305, 2492, 2936, 1625, 3726,
	3685, 3728, 2733, 2734, 1624, 2735, 1290, 2092, 2733, 3807,
	1305, 2525, 1691, 3820, 3780, 1690, 1363, 3789, 1219, 1219,
	3832, 4259, 4219, 4032, 2965, 1218, 1218, 3848, 4027, 1220,
	1220, 4026, 3899, 3829, 3684, 3580, 3387, 3384, 3831, 3808,
	1363, 1837, 1836, 1102, 1102, 4631, 1110, 4597, 4422, 1102,
	1102, 1972, 3860, 4421, 1102, 1102, 3812, 1102, 4420, 2213,
	4324, 1102, 4237, 4214, 3301, 4166, 4164, 3774, 3815, 4162,
	3766, 4061, 1102, 4047, 3998, 3954, 3776, 3859, 3841, 3830,
	3833, 3795, 3723, 3716, 3444, 3443, 3317, 3794, 1102, 3267,
	3838, 3007, 262, 262, 262, 2988, 677, 678, 2987, 693,
	677, 693, 703, 3868, 3851, 743, 3855, 3858, 3884, 761,
	3839, 3854, 3817, 3843, 767, 3867, 2986, 2985, 3849, 3850,
	3775, 262, 3866, 2914, 2887, 3897, 2766, 2455, 3857, 2703,
	2698, 2688, 2687, 2676, 2457, 3885, 2331, 2311, 2308, 1966,
	2307, 876, 1823, 2306, 2305, 3893, 3878, 262, 1224, 2304,
	2223, 2197, 2193, 2192, 2191, 2190, 1224, 3873, 1222, 1969,
	1363, 2189, 1363, 2013, 2007, 2012, 2011, 2009, 1944, 1224,
	1707, 1706, 1648, 1533, 1532, 1531, 1530, 1529, 1528, 1527,
	1305, 1305, 1522, 1518, 3938, 1516, 1515, 1472, 1471, 1363,
	1470, 1469, 1354, 1353, 1352, 1351, 2591, 1350, 3235, 1318,
	1317, 1267, 1266, 1265, 3923, 1264, 1263, 1262, 1261, 1259,
	1254, 1253, 1252, 1224, 1251, 1224, 1250, 869, 8, 1182,
	2050, 1004, 990, 4341, 3980, 2327, 1700, 92, 1524, 1960,
	2007, 831, 86, 3959, 3960, 2158, 3722, 1305, 960, 4455,
	1508, 2007, 3986, 4363, 3986, 839, 3990, 1363, 1926, 1305,
	4440, 3809, 1305, 3319, 3930, 3941, 2843, 4001, 2289, 3934,
	1649, 1363, 4003, 4004, 2291, 3940, 3989, 3939, 1966, 3937,
	3963, 677, 677, 1960, 1960, 3230, 3944, 3945, 3948, 262,
	1219, 3935, 3936, 2651, 4410, 3907, 3108, 1218, 1969, 4316,
	4138, 1220, 1305, 1305, 2495, 175, 3965, 1841, 3187, 4031,
	88, 4033, 1960, 1960, 1086, 1132, 4057, 4002, 4056, 3967,
	3708, 2955, 1305, 4054, 4053, 1957, 1959, 1052, 1366, 4477,
	2061, 1092, 2077, 2070, 1363, 2689, 2569, 1109, 1106, 1305,
	4051, 1961, 1963, 1960, 1108, 4048, 1107, 1962, 4034, 1222,
	1860, 1105, 1956, 3819, 2934, 3470, 1574, 1222, 1572, 4045,
	962, 2065, 2451, 2479, 1224, 3097, 4025, 1834, 4079, 4039,
	1222, 1067, 1088, 2476, 1305, 1305, 1305, 1243, 4044, 4090,
	1077, 1066, 4020, 3213, 3192, 2213, 3457, 1363, 3669, 2364,
	849, 3143, 2482, 3986, 1234, 2592, 4046, 4110, 2585, 1102,
	1102, 1102, 2581, 1290, 3277, 2924, 1721, 4152, 4006, 1813,
	2935, 4052, 1348, 1070, 1222, 4107, 1222, 1363, 4094, 4091,
	4067, 4015, 1102, 4076, 4018, 1102, 1102, 2449, 1825, 4085,
	4017, 4099, 3077, 4092, 2374, 1102, 3464, 3233, 1972, 2682,
	4462, 3588, 2201, 1102, 1102, 1198, 1197, 1241, 1196, 4446,
	4443, 2638, 2148, 3852, 3419, 2053, 2727, 1803, 1363, 3427,
	1305, 1082, 4007, 1465, 4114, 4130, 3198, 3489, 4116, 1535,
	4113, 1219, 766, 4193, 4016, 4125, 1094, 4019, 1218, 1219,
	1802, 1363, 1220, 2864, 2863, 4119, 1218, 4333, 1334, 1102,
	1220, 1332, 1219, 4118, 4135, 4078, 1331, 1330, 1102, 1218,
	4604, 4667, 3718, 1220, 3717, 229, 1102, 3045, 1742, 1580,
	1972, 1580, 1734, 226, 228, 227, 4062, 3674, 4141, 1102,
	3239, 4531, 1102, 3740, 3411, 23, 22, 21, 112, 42,
	20, 150, 4147, 128, 1102, 147, 1219, 4075, 1219, 146,
	120, 1363, 145, 1218, 144, 1218, 143, 1220, 1305, 1220,
	142, 4196, 149, 1305, 1305, 1222, 4158, 4159, 4171, 141,
	140, 135, 4161, 139, 138, 137, 4172, 4170, 136, 134,
	132, 133, 4179, 127, 131, 130, 129, 126, 125, 124,
	123, 122, 4213, 121, 119, 118, 117, 1960, 116, 115,
	4224, 114, 113, 4249, 757, 754, 61, 4240, 1363, 60,
	111, 1305, 2369, 110, 19, 40, 14, 65, 3421, 66,
	18, 13, 35, 91, 4215, 102, 101, 36, 4211, 1224,
	1224, 99, 98, 34, 17, 16, 4221, 15, 96, 4257,
	95, 33, 31, 11, 9, 4233, 4230, 4273, 4229, 1102,
	1102, 4268, 37, 1921, 4238, 12, 5, 4232, 3986, 3986,
	180, 4248, 4203, 179, 182, 1966, 1102, 1972, 178, 4277,
	4253, 181, 90, 177, 176, 89, 4271, 29, 10, 4296,
	4292, 4293, 172, 4250, 3805, 1969, 81, 1219, 174, 173,
	4270, 4269, 4276, 4275, 1218, 171, 4094, 4290, 1220, 170,
	2591, 169, 1102, 4265, 82, 1102, 4205, 4206, 79, 168,
	85, 167, 1224, 80, 84, 83, 27, 4305, 4306, 2174,
	4226, 6, 64, 7, 4329, 1224, 1960, 4120, 3511, 4228,
	105, 106, 38, 77, 4220, 76, 4222, 1966, 4223, 75,
	26, 3986, 4308, 63, 25, 213, 1236, 212, 211, 210,
	209, 2587, 4304, 4325, 3986, 208, 4328, 1969, 207, 206,
	4216, 4314, 201, 2096, 200, 205, 203, 1102, 1102, 4351,
	1466, 202, 204, 4227, 199, 216, 4352, 1102, 4367, 1256,
	2591, 2591, 1224, 4346, 4345, 1224, 215, 221, 220, 1305,
	219, 262, 218, 262, 262, 217, 1285, 262, 1295, 1305,
	1305, 4359, 214, 223, 198, 197, 196, 194, 190, 1315,
	189, 3986, 193, 4361, 3986, 195, 1305, 192, 761, 191,
	1222, 1222, 188, 222, 4401, 72, 4379, 4375, 4376, 165,
	1102, 1102, 4374, 4387, 4382, 4386, 4389, 166, 4381, 71,
	1102, 164, 262, 163, 262, 262, 1285, 162, 262, 262,
	4395, 4406, 4253, 4407, 1295, 161, 4399, 4400, 4398, 160,
	159, 158, 3074, 3075, 70, 262, 24, 1488, 1290, 4394,
	2, 1, 4405, 4404, 4397, 4433, 1102, 1102, 0, 1102,
	0, 4415, 0, 4437, 1966, 0, 0, 0, 1512, 4419,
	0, 0, 0, 0, 0, 0, 0, 0, 4414, 4445,
	4448, 0, 4460, 1222, 1969, 0, 0, 1537, 4457, 0,
	1295, 0, 0, 0, 262, 262, 1222, 1285, 0, 0,
	4436, 4464, 4482, 4435, 2591, 2591, 2591, 4454, 0, 4360,
	0, 0, 1102, 1102, 1102, 4486, 0, 4450, 761, 4485,
	262, 262, 1219, 1219, 4449, 0, 4467, 4453, 1214, 1218,
	1218, 0, 4481, 1220, 1220, 4480, 4473, 0, 0, 0,
	0, 0, 1102, 876, 0, 0, 0, 0, 0, 0,
	4515, 0, 0, 1222, 4502, 4520, 1222, 4499, 4500, 0,
	0, 4501, 0, 0, 0, 4516, 0, 0, 0, 0,
	0, 0, 4534, 0, 257, 257, 673, 0, 0, 0,
	4518, 0, 4541, 0, 0, 4543, 3169, 3170, 3171, 0,
	4557, 0, 4545, 0, 0, 0, 1102, 0, 0, 0,
	4555, 0, 0, 0, 4556, 1219, 4542, 0, 0, 4562,
	0, 0, 1218, 0, 0, 0, 1220, 262, 1219, 4549,
	0, 4551, 0, 4550, 0, 1218, 4578, 0, 0, 1220,
	4553, 4554, 4570, 0, 4574, 4582, 4559, 262, 4568, 4569,
	0, 4572, 0, 0, 0, 1224, 0, 1224, 4445, 2096,
	4585, 4448, 4581, 0, 4599, 4583, 0, 4589, 0, 0,
	4602, 4600, 4598, 4611, 4367, 4594, 0, 0, 0, 4464,
	0, 4610, 4609, 4606, 3986, 1219, 3986, 0, 1219, 0,
	4605, 0, 1218, 1960, 4624, 1218, 1220, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 4601, 4623, 4603, 0,
	4626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4639, 0, 4632, 4633, 4637, 1102, 1102, 4635,
	0, 0, 0, 0, 4630, 2007, 1102, 4640, 1102, 1102,
	4643, 0, 0, 0, 0, 0, 4652, 4649, 4658, 4530,
	0, 0, 4661, 4663, 4655, 4662, 4660, 4657, 0, 0,
	4656, 0, 0, 0, 4659, 1960, 1580, 4670, 0, 4671,
	4666, 0, 0, 0, 4673, 0, 0, 4675, 0, 4676,
	2936, 0, 4678, 0, 4674, 4672, 0, 4681, 0, 0,
	0, 0, 0, 0, 0, 1102, 4686, 4682, 4688, 0,
	0, 4683, 4689, 0, 4691, 4692, 4650, 4651, 4678, 4685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3035, 2879, 0, 1361, 2882,
	0, 2884, 1460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 677, 1222, 0, 1222, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	2088, 0, 0, 4687, 0, 0, 262, 0, 262, 0,
	0, 73, 262, 0, 0, 2927, 0, 0, 2927, 0,
	0, 0, 0, 0, 0, 1488, 1285, 262, 74, 262,
	0, 0, 0, 0, 0, 262, 1488, 693, 0, 0,
	0, 0, 262, 1488, 78, 2587, 2587, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	3146, 3147, 0, 3164, 3165, 3166, 262, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1219, 0,
	1219, 0, 0, 2089, 0, 1218, 761, 1218, 0, 1220,
	0, 1220, 0, 0, 870, 0, 2591, 2591, 0, 0,
	2093, 0, 0, 0, 0, 0, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 3161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3146, 3147,
	0, 3164, 3165, 3166, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3553, 0, 1299, 0, 0, 0, 0, 0, 0, 2587,
	2587, 2587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 2090, 2095, 0, 0, 0, 0, 3545, 3546,
	0, 2859, 0, 0, 2591, 2591, 2591, 2591, 2591, 2591,
	2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591, 2591,
	2591, 2591, 2591, 3161, 2591, 0, 0, 0, 1475, 3152,
	0, 0, 0, 0, 2851, 2849, 0, 0, 0, 0,
	0, 2853, 2855, 2845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 3608, 3609, 3610, 3611,
	3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621,
	3622, 3623, 3624, 3625, 3626, 0, 3630, 0, 0, 0,
	0, 0, 1588, 0, 0, 0, 0, 3152, 2085, 0,
	0, 262, 2097, 0, 0, 262, 1601, 0, 0, 0,
	0, 262, 0, 0, 0, 3162, 97, 262, 0, 0,
	0, 0, 0, 0, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 262, 2007, 2007, 0, 677,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 761, 0, 0, 0, 876, 0, 0,
	1627, 3167, 0, 0, 0, 0, 0, 0, 183, 100,
	0, 103, 0, 1271, 0, 1271, 1271, 0, 0, 0,
	0, 0, 262, 2007, 1285, 262, 0, 0, 1936, 0,
	0, 0, 0, 2084, 0, 0, 230, 0, 0, 761,
	0, 2847, 0, 3162, 871, 0, 262, 0, 0, 148,
	0, 0, 2861, 2288, 0, 0, 0, 0, 262, 262,
	0, 262, 2007, 262, 1358, 262, 0, 262, 0, 0,
	1464, 1751, 1752, 2860, 2852, 2850, 2854, 2856, 2846, 2848,
	2862, 0, 0, 232, 2007, 0, 2007, 0, 2858, 0,
	2320, 0, 0, 2321, 1782, 2322, 0, 0, 0, 0,
	3163, 1754, 0, 0, 0, 0, 0, 262, 0, 151,
	0, 0, 0, 0, 2007, 0, 0, 0, 2007, 2092,
	0, 2865, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 231, 743, 0, 0, 1753, 761, 0, 0,
	0, 0, 0, 0, 0, 224, 1773, 0, 0, 0,
	0, 2081, 0, 0, 225, 1770, 0, 0, 0, 0,
	0, 0, 1589, 1590, 0, 0, 0, 0, 0, 3332,
	3333, 0, 3334, 3335, 3336, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3888,
	0, 0, 0, 0, 0, 3372, 3373, 0, 3374, 3375,
	3376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 1777, 1778, 1779, 3158, 3159, 3160, 0, 0, 0,
	1759, 3157, 3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154,
	1751, 1752, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2587, 2587, 1782, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 1781, 1783, 0,
	0, 2179, 0, 0, 677, 2866, 0, 0, 0, 0,
	0, 0, 0, 0, 2857, 0, 0, 0, 0, 262,
	0, 0, 0, 1768, 1769, 1753, 0, 0, 677, 0,
	0, 0, 3158, 3159, 3160, 262, 0, 677, 0, 3157,
	3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154, 0, 262,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 1295, 0, 0, 2587,
	2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587,
	2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 0, 2587,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 262, 1295, 0, 0, 693, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 2702, 0, 1759,
	0, 0, 0, 262, 0, 0, 262, 0, 0, 0,
	262, 0, 262, 0, 0, 0, 0, 1285, 0, 262,
	262, 0, 1295, 1295, 2718, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1783, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 73, 2755, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 262, 0, 49, 0, 107,
	74, 0, 0, 0, 93, 104, 0, 0, 262, 1940,
	0, 1464, 0, 0, 0, 1774, 78, 0, 0, 0,
	0, 262, 0, 1065, 0, 0, 0, 1065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1447, 0, 2388, 0, 1447, 262, 0,
	0, 1271, 0, 0, 0, 0, 87, 0, 1464, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 2877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2591, 0, 0, 0, 0, 0, 870, 0, 0, 1488,
	0, 0, 262, 0, 262, 0, 0, 0, 0, 0,
	107, 262, 0, 0, 0, 93, 104, 0, 0, 1771,
	1767, 2919, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760,
	1761, 2755, 2493, 677, 0, 0, 0, 2243, 0, 0,
	0, 0, 2948, 876, 2591, 2755, 2755, 0, 0, 0,
	0, 0, 0, 1299, 2257, 0, 0, 1087, 109, 0,
	1775, 0, 262, 0, 2259, 0, 0, 0, 0, 0,
	2007, 0, 4144, 94, 0, 0, 2267, 0, 2270, 2271,
	2272, 262, 1285, 262, 0, 0, 0, 1488, 0, 1488,
	1295, 262, 0, 0, 1285, 0, 1285, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 3146, 3147,
	0, 3164, 3165, 3166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4182, 2661, 0, 262,
	262, 262, 262, 1285, 0, 0, 1285, 0, 262, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 183,
	100, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 3161, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 2679, 0,
	148, 0, 0, 0, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 2591, 0, 2199, 0, 0, 0, 2206, 97, 0,
	0, 0, 0, 0, 0, 3816, 0, 0, 0, 2219,
	0, 0, 0, 1026, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1046, 2231, 0, 2231, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	183, 100, 2738, 103, 0, 187, 0, 3152, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 4313, 2206, 3869, 224, 2263, 230, 0,
	0, 0, 0, 0, 0, 225, 871, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 2283, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 774,
	0, 2296, 0, 2298, 0, 2300, 0, 2302, 0, 2303,
	0, 3167, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 2325,
	0, 0, 0, 3162, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 1447, 231, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 224, 0, 0,
	262, 0, 0, 0, 2007, 0, 225, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 677, 0, 0, 0, 0, 677, 0, 186, 677,
	0, 0, 677, 677, 0, 0, 0, 779, 677, 0,
	0, 0, 0, 786, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 1488,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2719, 1299,
	0, 0, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 262, 262,
	1065, 0, 0, 0, 0, 783, 1447, 0, 0, 0,
	0, 0, 0, 0, 0, 2587, 0, 0, 3163, 0,
	0, 738, 0, 0, 0, 0, 0, 2755, 2755, 262,
	0, 3292, 0, 0, 0, 0, 0, 2755, 0, 0,
	3303, 0, 0, 0, 0, 0, 781, 0, 2755, 3303,
	0, 2755, 3303, 0, 0, 3303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2587,
	262, 262, 3292, 0, 262, 4060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4077, 0,
	0, 0, 0, 0, 3292, 0, 262, 0, 3363, 3363,
	0, 2658, 1285, 0, 0, 789, 2867, 0, 0, 0,
	0, 4098, 0, 0, 0, 0, 0, 0, 2755, 0,
	2755, 0, 3388, 2755, 3292, 0, 0, 2755, 3292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1447, 0, 0, 0,
	0, 0, 3158, 3159, 3160, 0, 0, 0, 262, 3157,
	3155, 3156, 3148, 3149, 3150, 3151, 3153, 3154, 0, 0,
	0, 0, 262, 3415, 0, 0, 3417, 2755, 776, 0,
	262, 0, 0, 0, 262, 2704, 73, 1295, 1271, 0,
	0, 0, 1271, 2007, 1271, 0, 0, 0, 0, 0,
	0, 0, 262, 74, 0, 0, 0, 2919, 780, 2981,
	1285, 2219, 262, 0, 0, 2755, 0, 677, 0, 78,
	0, 0, 0, 0, 2755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2587, 0, 0, 0,
	0, 0, 737, 0, 0, 262, 2919, 0, 0, 2919,
	0, 0, 0, 0, 0, 0, 787, 1751, 1752, 87,
	0, 0, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 0, 0,
	1782, 3516, 109, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 3199, 0, 3522, 870,
	0, 1285, 262, 0, 262, 0, 0, 0, 775, 0,
	1285, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	1464, 0, 1753, 0, 0, 0, 0, 0, 0, 3225,
	0, 0, 1773, 0, 0, 0, 782, 0, 0, 0,
	262, 1770, 0, 0, 3238, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	109, 777, 109, 0, 0, 0, 0, 3256, 0, 0,
	0, 0, 0, 0, 2206, 0, 94, 0, 0, 0,
	0, 0, 0, 2219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3548, 3586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1447, 0, 0, 1046, 109, 109, 1776, 1777, 1778, 1779,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 109,
	0, 109, 0, 0, 2979, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2990, 0, 2993, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 262, 0, 0, 0, 0, 1447, 0, 1768,
	1769, 3018, 1464, 3020, 1464, 109, 0, 0, 0, 4365,
	3026, 0, 0, 677, 677, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 4385, 0, 1488, 1488, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 1488,
	1488, 1488, 3054, 0, 0, 0, 0, 0, 0, 0,
	3238, 0, 0, 0, 0, 0, 1447, 0, 0, 0,
	0, 0, 0, 183, 100, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1447, 0, 0, 0, 1026, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 0, 148, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 4468, 0, 0, 1780, 3363, 0, 4470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 151, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	3292, 0, 262, 0, 0, 1460, 0, 231, 1361, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 262, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 262, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 262, 0, 0, 0, 1447, 0, 0,
	0, 1583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2755, 262, 0, 0, 0, 1913, 0, 1916,
	0, 109, 2948, 2948, 0, 0, 0, 0, 876, 876,
	2755, 0, 3565, 0, 2919, 2919, 0, 0, 876, 2755,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 3581,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	262, 0, 0, 0, 0, 3399, 0, 0, 0, 1447,
	0, 0, 0, 0, 78, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3439, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 1752, 0, 0, 0, 0, 1794,
	1795, 1796, 3908, 0, 0, 0, 1271, 0, 0, 0,
	1464, 1464, 0, 0, 0, 0, 1782, 0, 0, 0,
	3480, 3481, 0, 1754, 870, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 107, 0,
	0, 3290, 0, 93, 104, 0, 0, 0, 0, 3672,
	0, 0, 0, 0, 0, 0, 1134, 0, 1753, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 1773, 0,
	1488, 0, 262, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 3341, 3343, 0, 262, 2219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2755, 2755,
	0, 3363, 2755, 0, 0, 0, 0, 0, 0, 3988,
	0, 3988, 1488, 0, 0, 0, 1310, 0, 0, 0,
	0, 0, 2755, 0, 3303, 0, 0, 0, 1488, 1488,
	262, 3292, 1776, 1777, 1778, 1779, 0, 0, 0, 1051,
	0, 0, 1759, 1051, 3292, 0, 262, 3292, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2755, 0, 2755, 262, 0, 0,
	0, 0, 3428, 0, 0, 0, 3432, 0, 0, 1791,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 1781,
	1783, 0, 1490, 0, 1496, 2755, 1502, 0, 0, 0,
	4064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 1768, 1769, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 3485, 0, 0,
	0, 1046, 0, 1046, 0, 0, 0, 0, 1774, 0,
	3988, 0, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1591, 0, 1596, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 1605, 0, 1610, 183, 100,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3525, 0, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 871, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3538, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2755, 0, 3303, 0, 0, 4174, 0,
	0, 0, 1780, 0, 0, 0, 262, 0, 0, 151,
	0, 1447, 0, 4194, 0, 4194, 0, 0, 0, 0,
	0, 0, 0, 1775, 187, 0, 0, 0, 0, 0,
	0, 1026, 231, 0, 1026, 1026, 0, 761, 0, 0,
	0, 0, 0, 0, 1447, 224, 0, 0, 1285, 0,
	1792, 0, 0, 0, 225, 0, 0, 0, 0, 1447,
	0, 0, 0, 3292, 0, 262, 0, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 0, 0, 186, 0, 0, 0,
	0, 3772, 1447, 3943, 0, 4174, 0, 0, 0, 2448,
	0, 0, 0, 2755, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 1835, 1046, 0, 0, 0, 0,
	3956, 4262, 0, 0, 1821, 0, 0, 0, 1821, 0,
	1065, 0, 0, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1065, 3988, 3988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 262, 262, 0, 0, 3845, 3846, 3847,
	1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757,
	1758, 1760, 1761, 0, 1299, 0, 0, 3586, 1751, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 3363, 4327, 0, 0, 0, 0,
	0, 1782, 4174, 0, 0, 0, 1916, 0, 1754, 1893,
	1893, 1893, 0, 0, 0, 0, 0, 0, 3988, 0,
	0, 0, 0, 0, 1447, 0, 0, 0, 0, 0,
	0, 3988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4064, 0, 0, 1447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3988, 0,
	262, 3988, 0, 0, 0, 0, 0, 0, 1361, 0,
	0, 3303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2219, 0, 3543, 0, 0, 0,
	0, 0, 0, 0, 0, 2219, 0, 1488, 4136, 1488,
	0, 0, 0, 0, 0, 3804, 0, 1776, 1777, 1778,
	1779, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	2219, 0, 0, 0, 0, 3822, 1051, 0, 0, 3950,
	3951, 4429, 0, 0, 0, 0, 0, 0, 0, 4136,
	0, 0, 0, 0, 4194, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2388, 0, 1781, 1783, 2755, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1447, 0, 0, 1447, 0, 0, 0, 262, 0, 0,
	1768, 1769, 3871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 3586, 0, 0, 1225, 0, 0,
	0, 0, 2388, 1774, 0, 1225, 1782, 0, 0, 0,
	0, 1488, 0, 1754, 0, 0, 0, 0, 0, 109,
	0, 1299, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 1752, 1225, 1447, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 1447, 0, 0, 1782, 1773, 0,
	0, 0, 1225, 0, 1754, 0, 0, 0, 109, 0,
	0, 109, 0, 0, 0, 0, 0, 109, 0, 0,
	4174, 0, 1225, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 4115, 0, 4117, 0, 0, 0, 1753,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 2755, 0, 0, 0, 1770, 0,
	0, 3988, 0, 3988, 0, 0, 1488, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 1777, 1778, 1779, 0, 109, 1775, 0,
	0, 0, 1759, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1488, 0, 3542, 0, 0, 0, 0, 0, 0, 4163,
	0, 0, 0, 0, 1447, 0, 0, 0, 0, 0,
	0, 0, 4005, 1776, 1777, 1778, 1779, 0, 0, 1781,
	1783, 0, 0, 1759, 0, 0, 2948, 0, 2219, 0,
	0, 0, 0, 0, 0, 2755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1783, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 2448, 0, 0,
	0, 0, 4231, 2219, 0, 0, 1768, 1769, 0, 0,
	0, 0, 0, 4086, 0, 0, 1771, 1767, 1821, 1764,
	1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0,
	0, 0, 2363, 0, 2367, 0, 0, 0, 0, 1774,
	0, 2381, 0, 0, 0, 0, 0, 0, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 0, 2430, 0, 2432, 2433, 2434, 2435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2459, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 2474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 2504,
	2507, 2510, 2513, 0, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 0, 0, 0, 0, 0, 1225, 0, 1225, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 4183, 0,
	0, 0, 2583, 1225, 2594, 2596, 2601, 0, 0, 0,
	0, 1208, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 1973, 1447, 0, 0, 1225, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 1764, 1762, 1763, 1755, 1756, 1757,
	1758, 1760, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4303, 1464, 0, 0, 0,
	0, 0, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756,
	1757, 1758, 1760, 1761, 0, 0, 1447, 0, 1447, 0,
	0, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 1752, 0, 1784,
	1785, 1786, 1794, 1795, 1796, 0, 0, 0, 109, 109,
	0, 109, 109, 109, 0, 0, 0, 0, 1787, 1782,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 1447, 0, 0, 1225, 1225, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 1447, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 4388, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2880, 2881, 0, 2883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 1046, 0, 0, 0,
	1447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 1225, 0, 1225, 1776, 1777, 1778, 1779, 4439,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	1225, 1225, 0, 1447, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 0, 1225, 1225, 1225, 0, 4475,
	0, 0, 1791, 1447, 0, 1801, 0, 0, 0, 0,
	0, 0, 1781, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3006, 0, 0, 0, 0, 0, 1797,
	0, 1798, 0, 0, 0, 0, 0, 0, 1768, 1769,
	0, 0, 0, 0, 1447, 0, 2562, 2563, 2564, 2565,
	2558, 2559, 2560, 2561, 0, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1447, 0, 0,
	4535, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1065, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 1973, 1973,
	1225, 0, 0, 0, 0, 0, 0, 1447, 2538, 2539,
	2540, 2541, 1788, 0, 0, 0, 0, 0, 3057, 3058,
	0, 0, 0, 0, 3064, 0, 0, 0, 0, 0,
	0, 2550, 2551, 2552, 2553, 2546, 2547, 2548, 2549, 2554,
	2555, 2556, 2557, 3078, 3079, 0, 0, 0, 0, 2474,
	0, 0, 0, 0, 109, 0, 0, 0, 3086, 0,
	0, 0, 0, 0, 1447, 0, 0, 0, 0, 0,
	0, 0, 1208, 1208, 3100, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 3112, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 2534, 2535, 2536, 2537, 2542,
	2543, 2544, 2545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 1782, 1225, 0, 0, 0,
	0, 0, 1754, 0, 0, 1225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	2601, 2601, 2601, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 1893, 0, 1773, 0, 0,
	0, 0, 0, 3203, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 1065, 1065, 1790, 0, 0, 0, 0,
	1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763,
	1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0,
	3121, 0, 0, 0, 3122, 0, 0, 0, 0, 0,
	1751, 1752, 0, 1784, 1785, 1786, 1794, 1795, 1796, 0,
	3063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1782, 0, 1225, 1225, 0, 0, 0,
	1754, 1776, 1777, 1778, 1779, 0, 0, 0, 0, 1800,
	0, 1759, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	1751, 1752, 0, 0, 0, 1753, 0, 1225, 0, 0,
	1051, 0, 0, 1065, 1208, 1773, 0, 0, 0, 0,
	0, 0, 0, 1782, 1770, 0, 0, 0, 1781, 1783,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 3322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 1769, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 1225,
	0, 0, 0, 0, 1770, 0, 0, 1774, 0, 0,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 1776,
	1777, 1778, 1779, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 3056, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 1781, 1783, 0, 1776,
	1777, 1778, 1779, 0, 0, 0, 0, 1225, 0, 1759,
	0, 0, 0, 1797, 0, 1798, 0, 0, 0, 1225,
	0, 1225, 1768, 1769, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 1208, 1225, 0, 0, 0,
	1789, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 1774, 1781, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2381, 0, 0, 0, 0, 0, 3540, 3541,
	0, 0, 3544, 0, 0, 0, 3547, 0, 0, 1780,
	0, 0, 0, 0, 0, 3551, 0, 0, 109, 0,
	0, 0, 0, 0, 3558, 0, 0, 3203, 0, 0,
	1775, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 1767, 3570, 1764, 1762, 1763, 1755, 1756, 1757, 1758,
	1760, 1761, 0, 0, 109, 0, 0, 1792, 0, 0,
	0, 0, 3593, 3594, 0, 3595, 3596, 3597, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3603, 0, 0, 0, 3605, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3633, 3634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3654, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 1765, 1766, 1772, 1793, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 0, 0, 0, 2470, 0, 0, 0, 2471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 3700, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 0, 0, 0, 1225, 0, 0, 3711, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 1751, 1752, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	1782, 3739, 1225, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2448, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 1111,
	0, 1770, 0, 0, 1225, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 1752,
	0, 1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 1782, 0, 1225, 0, 263, 263, 263, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 1893, 0, 0, 0, 1225, 0, 1225, 0, 0,
	3840, 0, 0, 0, 263, 0, 1776, 1777, 1778, 1779,
	0, 0, 0, 1753, 1225, 0, 1759, 0, 0, 0,
	0, 0, 0, 1773, 0, 1225, 0, 0, 0, 1225,
	263, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 1225,
	0, 1225, 0, 1781, 1783, 1225, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 3886, 3887, 0, 0, 0,
	0, 3891, 3892, 1225, 0, 0, 3895, 3896, 0, 1768,
	1769, 0, 0, 3900, 0, 1225, 0, 0, 0, 0,
	0, 0, 0, 0, 3904, 0, 0, 1776, 1777, 1778,
	1779, 0, 1225, 0, 0, 0, 0, 1759, 0, 0,
	3909, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 1801, 0, 0,
	1225, 0, 0, 0, 1781, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 1798, 0, 0, 109, 0, 0, 0,
	1768, 1769, 109, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 1225, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 1799, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 1225, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0,
	0, 4131, 4132, 4133, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2381, 0, 0, 4142, 4143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4151, 4154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764,
	1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0,
	4195, 0, 0, 0, 0, 0, 3914, 0, 4202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4209, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 263, 0, 263, 263, 0, 0,
	263, 0, 1308, 0, 1225, 1225, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 1225, 0, 0, 263, 1308, 263, 263, 0,
	1308, 263, 263, 0, 4332, 0, 0, 4335, 1308, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 263, 263, 1051,
	1051, 0, 0, 0, 0, 0, 0, 0, 0, 4383,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 1308, 263, 263, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 1225, 707, 0, 0, 0, 0,
	1098, 0, 1225, 2381, 0, 0, 1225, 0, 1225, 0,
	0, 0, 4154, 0, 0, 1225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 1225, 0, 0,
	1308, 0, 0, 0, 708, 1225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 261, 261, 261, 1051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	263, 1225, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	263, 0, 0, 1225, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 1225, 0, 1225, 0, 0, 1225, 0,
	0, 802, 0, 0, 4498, 4498, 4498, 1225, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 0, 4519, 0, 0, 0, 1225, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 713, 0, 0, 714, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 738, 0, 0, 1225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4498, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 1225, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 0, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 4498,
	4644, 0, 0, 0, 0, 0, 1308, 1225, 4648, 0,
	263, 263, 263, 0, 735, 0, 716, 0, 263, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 1308, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 717, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 1225,
	1225, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 1308, 733, 734, 731, 0, 0,
	0, 0, 0, 726, 0, 1308, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 1225, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 1225, 720, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 723,
	0, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 0, 0, 0, 0, 263, 1308,
	1308, 263, 0, 0, 709, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 710, 0, 1751, 1752, 0,
	1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 1225, 0,
	0, 1225, 0, 0, 0, 1225, 0, 729, 0, 1787,
	1782, 0, 0, 0, 263, 1225, 1225, 1754, 263, 0,
	0, 0, 0, 0, 263, 0, 1800, 711, 0, 0,
	263, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 263, 0,
	712, 0, 1753, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 1773, 1308, 0, 1308, 0, 1308, 0, 0,
	0, 1770, 713, 0, 0, 714, 0, 0, 0, 0,
	0, 0, 0, 1308, 1308, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 1308, 263, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 1308, 1308,
	1308, 0, 0, 0, 0, 261, 728, 261, 261, 263,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 263, 0, 263, 0, 263, 0, 263, 0,
	263, 0, 0, 0, 0, 0, 1776, 1777, 1778, 1779,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 261, 261,
	0, 0, 261, 261, 0, 725, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 0, 0, 1791, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 1781, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 1798, 0, 0, 0, 0, 0, 0, 1768,
	1769, 0, 0, 1308, 0, 0, 0, 0, 261, 261,
	0, 0, 0, 0, 0, 716, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 261, 261, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 717, 0, 0, 0, 0,
	0, 1225, 0, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 718,
	1308, 0, 0, 1788, 733, 734, 731, 0, 0, 0,
	0, 0, 726, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 727, 0,
	0, 261, 0, 0, 0, 0, 1780, 721, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 820, 0, 0,
	0, 722, 0, 0, 0, 0, 730, 1775, 0, 0,
	0, 0, 263, 0, 0, 1308, 0, 822, 0, 0,
	739, 0, 823, 0, 0, 0, 0, 0, 263, 0,
	0, 724, 0, 0, 1792, 0, 1751, 1752, 0, 1784,
	1785, 1786, 1794, 1795, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 1782,
	0, 824, 0, 841, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 0, 826, 0, 0, 263, 0, 0, 263,
	0, 1753, 0, 263, 0, 263, 0, 0, 0, 0,
	0, 1773, 263, 263, 0, 850, 0, 0, 1308, 1308,
	1770, 827, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 1790, 0, 0, 0,
	0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 821, 0,
	1308, 0, 0, 0, 0, 3556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	828, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 852, 1776, 1777, 1778, 1779, 738,
	1915, 0, 1221, 0, 263, 1759, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1915, 261, 0, 0, 0, 0, 0, 802,
	0, 263, 1308, 0, 0, 0, 802, 0, 0, 0,
	0, 0, 1791, 0, 0, 1801, 1308, 0, 0, 0,
	0, 0, 1781, 1783, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 1797,
	261, 1798, 0, 851, 0, 0, 0, 0, 1768, 1769,
	0, 0, 0, 846, 0, 263, 0, 263, 0, 1308,
	0, 0, 0, 0, 263, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1308, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 830, 0, 0, 263, 0, 0, 0, 1308,
	0, 0, 0, 832, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 263, 0, 0, 0,
	0, 0, 1788, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 0, 263, 263, 263, 263, 0, 0, 0, 0,
	737, 263, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 819, 0, 843, 1780, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1775, 0, 0, 0,
	0, 267, 0, 263, 0, 0, 0, 840, 0, 261,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 835, 0, 0, 0, 836, 855,
	0, 854, 0, 1751, 1752, 837, 1784, 1785, 1786, 1794,
	1795, 1796, 0, 0, 0, 0, 0, 0, 0, 838,
	0, 0, 0, 0, 847, 1787, 1782, 0, 0, 0,
	856, 0, 853, 1754, 0, 261, 0, 0, 739, 261,
	0, 0, 1800, 0, 0, 261, 794, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1753, 261,
	0, 0, 794, 0, 0, 261, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763,
	1755, 1756, 1757, 1758, 1760, 1761, 261, 0, 0, 261,
	0, 0, 0, 0, 3124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 802, 261, 0, 261, 0, 261, 0, 261,
	0, 261, 1776, 1777, 1778, 1779, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 1308, 0, 0, 0, 0, 1791,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 1781,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1308, 1798, 0,
	0, 0, 0, 0, 0, 1768, 1769, 0, 0, 0,
	0, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 1308, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 263, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 1308, 0, 1788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 263, 0, 1308, 263, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1308, 263,
	1308, 0, 1780, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1308, 0, 1221,
	0, 0, 0, 1775, 0, 0, 0, 0, 1308, 0,
	0, 0, 1308, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1792, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 263, 1308, 0, 1308, 0, 0, 0, 1308, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 1308, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1308, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	261, 0, 0, 0, 261, 0, 261, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 0, 0, 0,
	1308, 1308, 0, 261, 0, 0, 0, 0, 263, 0,
	0, 0, 1790, 0, 0, 0, 0, 1765, 1766, 1772,
	1793, 1771, 1767, 1308, 1764, 1762, 1763, 1755, 1756, 1757,
	1758, 1760, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 3123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 1308, 0, 263, 1308, 263, 0, 0,
	0, 0, 261, 0, 1751, 1752, 0, 1784, 1785, 1786,
	1794, 1795, 1796, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 1782, 0, 0,
	0, 0, 0, 263, 1754, 0, 0, 0, 0, 0,
	0, 1103, 261, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 1753,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 1308, 1770, 0,
	0, 0, 0, 0, 1306, 0, 261, 0, 802, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1364, 0,
	0, 0, 1364, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 1776, 1777, 1778, 1779, 0, 0, 0,
	0, 0, 0, 1759, 0, 261, 0, 261, 0, 0,
	0, 1306, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	1791, 0, 0, 1801, 0, 0, 0, 1308, 0, 0,
	1781, 1783, 0, 261, 261, 261, 261, 1306, 0, 0,
	0, 0, 261, 0, 1306, 261, 0, 1797, 0, 1798,
	0, 0, 0, 0, 0, 0, 1768, 1769, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1308, 0, 0, 1308, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 263, 0, 0, 1775, 0, 263, 0, 0, 0,
	0, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 1308, 1308, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 0, 263, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1915, 0, 0, 1790, 0, 0, 0, 0, 1765, 1766,
	1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756,
	1757, 1758, 1760, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 3120, 0, 0, 0, 0, 0, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	794, 0, 261, 261, 0, 0, 0, 794, 0, 0,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 1308,
	0, 1308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	1308, 0, 0, 0, 0, 0, 0, 0, 1308, 0,
	0, 0, 0, 0, 261, 261, 1306, 0, 261, 0,
	0, 0, 0, 0, 0, 1915, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 0, 263, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 1308, 263,
	0, 1308, 263, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 1308, 1308, 0, 1307, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 261, 0,
	0, 1308, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 1308, 263, 0, 261, 0, 1308, 0,
	0, 0, 0, 0, 0, 0, 1221, 0, 1365, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 1306, 1308, 1308, 1308, 0, 0, 0, 261,
	0, 1364, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 1307, 0, 0,
	0, 0, 0, 0, 0, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 0, 0, 261, 1307, 261, 0,
	0, 0, 0, 0, 1307, 0, 0, 1787, 1782, 0,
	0, 0, 0, 0, 0, 1754, 0, 1308, 1307, 1308,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 1306, 0, 1306, 0, 1306,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	1753, 0, 0, 0, 0, 1306, 1306, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 1306, 0, 0, 1770,
	0, 0, 1307, 0, 0, 0, 0, 0, 1306, 0,
	1306, 1306, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 794, 0, 0, 0, 1308, 263, 0,
	0, 0, 1308, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1777, 1778, 1779, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 1308, 0, 0,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1221, 1221, 0, 0, 0,
	0, 1791, 0, 0, 1801, 0, 263, 263, 0, 0,
	0, 1781, 1783, 0, 0, 1364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	1798, 0, 0, 0, 0, 0, 0, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 1308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1308, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 1365, 0,
	0, 1364, 0, 0, 261, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 0, 0, 0, 1780, 0, 261, 1364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	263, 0, 261, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 1792, 0, 0, 0, 1751, 1752, 0, 1784,
	1785, 1786, 1794, 1795, 1796, 0, 1307, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 1787, 1782,
	263, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 1306, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 1364, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 3119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 1777, 1778, 1779, 0,
	0, 0, 0, 0, 1364, 1759, 0, 0, 0, 0,
	0, 1307, 1307, 0, 0, 0, 0, 0, 1306, 0,
	0, 1365, 0, 0, 0, 0, 0, 0, 1221, 0,
	0, 0, 0, 0, 0, 0, 1221, 0, 0, 0,
	0, 0, 1791, 0, 0, 1801, 0, 0, 0, 1915,
	0, 0, 1781, 1783, 0, 0, 0, 0, 0, 794,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 1798, 0, 0, 0, 0, 0, 0, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 1915, 0, 1915, 1789, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 1306, 0, 0, 0,
	0, 1774, 0, 0, 261, 1307, 0, 1307, 0, 1307,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 261, 0, 1307, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 261, 0, 0, 1799, 0, 0, 0, 1307, 0,
	1307, 1307, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1915, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 1365, 0, 0, 0, 1751,
	1752, 0, 1784, 1785, 1786, 1794, 1795, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1782, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 1365, 1770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763,
	1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 3118, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1365, 0, 0, 0, 0, 0, 0, 1776, 1777,
	1778, 1779, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 1364, 1365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1915,
	1915, 0, 0, 0, 0, 1791, 0, 0, 1801, 1364,
	0, 0, 0, 0, 0, 1781, 1783, 261, 261, 0,
	0, 0, 0, 0, 1364, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 1798, 0, 0, 0, 0, 0,
	0, 1768, 1769, 0, 0, 0, 0, 1364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 1306, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	1307, 1307, 1915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1915, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 261, 1799, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 0, 1915, 0, 261, 1915, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 934, 0, 981, 0, 0, 1364,
	0, 0, 0, 0, 1365, 0, 0, 0, 1780, 0,
	1306, 0, 0, 0, 1306, 0, 0, 0, 1307, 0,
	942, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 956, 1306, 940, 939,
	0, 0, 0, 0, 1306, 0, 1306, 0, 0, 0,
	1364, 261, 0, 0, 0, 0, 1792, 794, 0, 0,
	0, 1307, 0, 0, 0, 0, 941, 0, 1306, 0,
	0, 944, 0, 0, 0, 0, 989, 0, 0, 0,
	1306, 0, 0, 0, 0, 953, 954, 0, 0, 0,
	0, 261, 1307, 0, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 1307, 0, 0, 0,
	0, 0, 982, 946, 0, 0, 0, 0, 0, 0,
	0, 1307, 1306, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 1306, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 261, 1765, 1766, 1772, 1793, 1771, 1767, 0,
	1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 980,
	0, 0, 0, 0, 0, 1364, 0, 2471, 1364, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 0, 938, 0, 0, 0, 0, 1751, 1752, 0,
	1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0, 0,
	0, 950, 951, 0, 0, 0, 0, 0, 0, 1787,
	1782, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	958, 957, 0, 0, 0, 1915, 1800, 1915, 952, 0,
	0, 0, 967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 0, 0, 0, 0, 0, 0,
	986, 978, 1753, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 1777, 1778, 1779,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 943,
	0, 0, 0, 974, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 0, 1791, 0, 0, 1801, 0, 972, 0,
	0, 0, 0, 1781, 1783, 987, 968, 0, 0, 961,
	959, 0, 964, 0, 0, 0, 0, 0, 965, 0,
	1797, 936, 1798, 984, 0, 0, 0, 0, 0, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 0, 1365, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 966, 0,
	0, 0, 1774, 0, 963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 0, 0, 0, 1365,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 948, 0, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1365, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 0,
	0, 973, 1307, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	1306, 1306, 0, 0, 1792, 0, 0, 0, 0, 0,
	1307, 0, 1307, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	0, 1306, 0, 0, 0, 0, 0, 1364, 0, 0,
	1307, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 1307, 0, 1307, 0, 0, 0,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	1307, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0,
	0, 4430, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 1364, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 1306, 0, 0, 0, 0, 0, 0, 0,
	1364, 0, 0, 0, 0, 1365, 0, 0, 1365, 0,
	1751, 1752, 0, 1784, 1785, 1786, 1794, 1795, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1782, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 1306, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 1364, 0,
	1306, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 1365,
	0, 0, 0, 1306, 1306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1364, 0, 0, 0, 0,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	1777, 1778, 1779, 0, 0, 1306, 1306, 1306, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 1364, 1801,
	0, 0, 0, 0, 0, 0, 1781, 1783, 0, 1365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 1798, 0, 0, 0, 0,
	0, 0, 1768, 1769, 0, 0, 0, 0, 0, 1364,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 0, 0, 1788, 0, 0, 1306,
	0, 0, 0, 0, 1306, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 0, 0, 1307, 0, 0, 1364,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 1751, 1752, 0, 1784, 1785, 1786, 1794,
	1795, 1796, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 1782, 1792, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 1307,
	1307, 1307, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1307, 0, 0, 0, 0, 0, 1365, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 1765, 1766, 1772, 1793, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	1306, 0, 0, 0, 4426, 0, 0, 0, 0, 0,
	1306, 1306, 1776, 1777, 1778, 1779, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 0,
	1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	1782, 0, 1801, 0, 0, 0, 0, 1754, 0, 1781,
	1783, 1365, 0, 1365, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 1798, 0,
	0, 1307, 1307, 0, 0, 1768, 1769, 0, 0, 0,
	1365, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1789, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1365, 0,
	1307, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 1799, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 1776, 1777, 1778, 1779,
	0, 0, 0, 1307, 1307, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1365, 0, 0, 0, 0,
	1307, 0, 0, 1791, 0, 0, 1801, 0, 0, 0,
	0, 0, 1780, 1781, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 1798, 1775, 0, 1307, 1307, 1307, 0, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 1365,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 1765, 1766, 1772,
	1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757,
	1758, 1760, 1761, 0, 0, 0, 0, 4347, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 1307, 1307, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	0, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 1307, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1367, 278, 279, 1368, 1369, 1370, 1307, 1371, 619,
	1372, 1373, 1374, 1375, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	1376, 624, 290, 291, 292, 293, 294, 295, 1377, 1378,
	0, 296, 625, 626, 627, 1379, 297, 298, 628, 1380,
	1309, 1381, 299, 300, 301, 302, 303, 304, 305, 0,
	1382, 307, 308, 309, 306, 310, 1383, 311, 0, 312,
	313, 314, 315, 316, 317, 1384, 318, 319, 320, 1166,
	321, 322, 323, 1385, 1386, 1388, 1387, 1389, 1390, 1391,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 1392,
	333, 330, 331, 1393, 334, 332, 335, 1394, 336, 337,
	338, 1395, 1396, 339, 340, 341, 1397, 342, 343, 1398,
	344, 345, 346, 1399, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	1400, 268, 1401, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 1402, 365, 366, 1403, 1404,
	1167, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1405, 378, 637, 1406, 638, 379,
	1407, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1169, 385, 386, 1408, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1409, 1168, 395,
	642, 643, 1410, 644, 1411, 397, 398, 1170, 645, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1412, 409, 411, 410, 1413, 412,
	646, 1173, 413, 414, 1174, 1414, 415, 0, 0, 0,
	416, 417, 420, 1415, 1416, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1417, 270, 1177, 460, 461, 1418, 647, 462, 648, 464,
	465, 1419, 0, 466, 0, 1420, 1421, 468, 469, 470,
	1422, 1423, 471, 472, 649, 1178, 473, 1179, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1424, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 1425, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 1426, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1427, 522, 523, 524, 1180, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1428, 546, 547,
	545, 548, 549, 550, 1429, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 1430, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 1431, 577,
	578, 0, 574, 565, 1432, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 1433, 587, 660, 661, 662, 663,
	1434, 596, 1435, 588, 589, 590, 664, 591, 665, 1436,
	592, 593, 594, 595, 0, 597, 598, 1437, 1438, 599,
	600, 601, 603, 604, 602, 605, 1439, 606, 1440, 0,
	607, 608, 609, 666, 667, 668, 1441, 611, 610, 612,
	669, 1442, 613, 1443, 1444, 1445, 1446, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 2636, 0, 0, 0, 0,
	0, 0, 0, 2637, 271, 273, 272, 274, 275, 276,
	277, 1367, 278, 279, 1368, 1369, 1370, 0, 1371, 619,
	1372, 1373, 1374, 1375, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	1376, 624, 290, 291, 292, 293, 294, 295, 1377, 1378,
	0, 296, 625, 626, 627, 1379, 297, 298, 628, 1380,
	1309, 1381, 299, 300, 301, 302, 303, 304, 305, 0,
	1382, 307, 308, 309, 306, 310, 1383, 311, 0, 312,
	313, 314, 315, 316, 317, 1384, 318, 319, 320, 1166,
	321, 322, 323, 1385, 1386, 1388, 1387, 1389, 1390, 1391,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 1392,
	333, 330, 331, 1393, 334, 332, 335, 1394, 336, 337,
	338, 1395, 1396, 339, 340, 341, 1397, 342, 343, 1398,
	344, 345, 346, 1399, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	1400, 268, 1401, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 1402, 365, 366, 1403, 1404,
	1167, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1405, 378, 637, 1406, 638, 379,
	1407, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1169, 385, 386, 1408, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1409, 1168, 395,
	642, 643, 1410, 644, 1411, 397, 398, 1170, 645, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1412, 409, 411, 410, 1413, 412,
	646, 1173, 413, 414, 1174, 1414, 415, 0, 0, 0,
	416, 417, 420, 1415, 1416, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1417, 270, 1177, 460, 461, 1418, 647, 462, 648, 464,
	465, 1419, 0, 466, 0, 1420, 1421, 468, 469, 470,
	1422, 1423, 471, 472, 649, 1178, 473, 1179, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1424, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 1425, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 1426, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1427, 522, 523, 524, 1180, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1428, 546, 547,
	545, 548, 549, 550, 1429, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 1430, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 1431, 577,
	578, 0, 574, 565, 1432, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 1433, 587, 660, 661, 662, 663,
	1434, 596, 1435, 588, 589, 590, 664, 591, 665, 1436,
	592, 593, 594, 595, 0, 597, 598, 1437, 1438, 599,
	600, 601, 603, 604, 602, 605, 1439, 606, 1440, 0,
	607, 608, 609, 666, 667, 668, 1441, 611, 610, 612,
	669, 1442, 613, 1443, 1444, 1445, 1446, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	3564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3566, 271, 273, 272, 274, 275, 276, 277, 1367,
	278, 279, 1368, 1369, 1370, 0, 1371, 619, 1372, 1373,
	1374, 1375, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 1376, 624,
	290, 291, 292, 293, 294, 295, 1377, 1378, 0, 296,
	625, 626, 627, 1379, 297, 298, 628, 1380, 1309, 1381,
	299, 300, 301, 302, 303, 304, 305, 0, 1382, 307,
	308, 309, 306, 310, 1383, 311, 0, 312, 313, 314,
	315, 316, 317, 1384, 318, 319, 320, 1166, 321, 322,
	323, 1385, 1386, 1388, 1387, 1389, 1390, 1391, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 1392, 333, 330,
	331, 1393, 334, 332, 335, 1394, 336, 337, 338, 1395,
	1396, 339, 340, 341, 1397, 342, 343, 1398, 344, 345,
	346, 1399, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 1400, 268,
	1401, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 1402, 365, 366, 1403, 1404, 1167, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1405, 378, 637, 1406, 638, 379, 1407, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1169, 385,
	386, 1408, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1409, 1168, 395, 642, 643,
	1410, 644, 1411, 397, 398, 1170, 645, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1412, 409, 411, 410, 1413, 412, 646, 1173,
	413, 414, 1174, 1414, 415, 0, 0, 0, 416, 417,
	420, 1415, 1416, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 1417, 270,
	1177, 460, 461, 1418, 647, 462, 648, 464, 465, 1419,
	0, 466, 0, 1420, 1421, 468, 469, 470, 1422, 1423,
	471, 472, 649, 1178, 473, 1179, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1424, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 1425, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	1426, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1427, 522, 523, 524, 1180, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1428, 546, 547, 545, 548,
	549, 550, 1429, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 1430,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 1431, 577, 578, 0,
	574, 565, 1432, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 1433, 587, 660, 661, 662, 663, 1434, 596,
	1435, 588, 589, 590, 664, 591, 665, 1436, 592, 593,
	594, 595, 0, 597, 598, 1437, 1438, 599, 600, 601,
	603, 604, 602, 605, 1439, 606, 1440, 0, 607, 608,
	609, 666, 667, 668, 1441, 611, 610, 612, 669, 1442,
	613, 1443, 1444, 1445, 1446, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3942, 271, 273, 272, 274, 275, 276,
	277, 1367, 278, 279, 1368, 1369, 1370, 0, 1371, 619,
	1372, 1373, 1374, 1375, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	1376, 624, 290, 291, 292, 293, 294, 295, 1377, 1378,
	0, 296, 625, 626, 627, 1379, 297, 298, 628, 1380,
	1309, 1381, 299, 300, 301, 302, 303, 304, 305, 0,
	1382, 307, 308, 309, 306, 310, 1383, 311, 0, 312,
	313, 314, 315, 316, 317, 1384, 318, 319, 320, 1166,
	321, 322, 323, 1385, 1386, 1388, 1387, 1389, 1390, 1391,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 1392,
	333, 330, 331, 1393, 334, 332, 335, 1394, 336, 337,
	338, 1395, 1396, 339, 340, 341, 1397, 342, 343, 1398,
	344, 345, 346, 1399, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	1400, 268, 1401, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 1402, 365, 366, 1403, 1404,
	1167, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1405, 378, 637, 1406, 638, 379,
	1407, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1169, 385, 386, 1408, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1409, 1168, 395,
	642, 643, 1410, 644, 1411, 397, 398, 1170, 645, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1412, 409, 411, 410, 1413, 412,
	646, 1173, 413, 414, 1174, 1414, 415, 0, 0, 0,
	416, 417, 420, 1415, 1416, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1417, 270, 1177, 460, 461, 1418, 647, 462, 648, 464,
	465, 1419, 0, 466, 0, 1420, 1421, 468, 469, 470,
	1422, 1423, 471, 472, 649, 1178, 473, 1179, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1424, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 1425, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 1426, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1427, 522, 523, 524, 1180, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1428, 546, 547,
	545, 548, 549, 550, 1429, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 1430, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 1431, 577,
	578, 0, 574, 565, 1432, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 1433, 587, 660, 661, 662, 663,
	1434, 596, 1435, 588, 589, 590, 664, 591, 665, 1436,
	592, 593, 594, 595, 0, 597, 598, 1437, 1438, 599,
	600, 601, 603, 604, 602, 605, 1439, 606, 1440, 0,
	607, 608, 609, 666, 667, 668, 1441, 611, 610, 612,
	669, 1442, 613, 1443, 1444, 1445, 1446, 614, 615, 670,
	616, 617, 618, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4137, 271, 273, 272, 274, 275, 276, 277, 1367, 278,
	279, 1368, 1369, 1370, 0, 1371, 619, 1372, 1373, 1374,
	1375, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 1376, 624, 290,
	291, 292, 293, 294, 295, 1377, 1378, 0, 296, 625,
	626, 627, 1379, 297, 298, 628, 1380, 1309, 1381, 299,
	300, 301, 302, 303, 304, 305, 0, 1382, 307, 308,
	309, 306, 310, 1383, 311, 0, 312, 313, 314, 315,
	316, 317, 1384, 318, 319, 320, 1166, 321, 322, 323,
	1385, 1386, 1388, 1387, 1389, 1390, 1391, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 1392, 333, 330, 331,
	1393, 334, 332, 335, 1394, 336, 337, 338, 1395, 1396,
	339, 340, 341, 1397, 342, 343, 1398, 344, 345, 346,
	1399, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 1400, 268, 1401,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 1402, 365, 366, 1403, 1404, 1167, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1405, 378, 637, 1406, 638, 379, 1407, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1169, 385, 386,
	1408, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1409, 1168, 395, 642, 643, 1410,
	644, 1411, 397, 398, 1170, 645, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1412, 409, 411, 410, 1413, 412, 646, 1173, 413,
	414, 1174, 1414, 415, 0, 0, 0, 416, 417, 420,
	1415, 1416, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 1417, 270, 1177,
	460, 461, 1418, 647, 462, 648, 464, 465, 1419, 0,
	466, 0, 1420, 1421, 468, 469, 470, 1422, 1423, 471,
	472, 649, 1178, 473, 1179, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1424, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 1425, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 1426,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1427, 522, 523, 524, 1180, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1428, 546, 547, 545, 548, 549,
	550, 1429, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 1430, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 1431, 577, 578, 0, 574,
	565, 1432, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 1433, 587, 660, 661, 662, 663, 1434, 596, 1435,
	588, 589, 590, 664, 591, 665, 1436, 592, 593, 594,
	595, 0, 597, 598, 1437, 1438, 599, 600, 601, 603,
	604, 602, 605, 1439, 606, 1440, 0, 607, 608, 609,
	666, 667, 668, 1441, 611, 610, 612, 669, 1442, 613,
	1443, 1444, 1445, 1446, 614, 615, 670, 616, 617, 618,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4014, 271, 273,
	272, 274, 275, 276, 277, 1367, 278, 279, 1368, 1369,
	1370, 0, 1371, 619, 1372, 1373, 1374, 1375, 280, 281,
	1165, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1376, 624, 290, 291, 292, 293,
	294, 295, 1377, 1378, 0, 296, 625, 626, 627, 1379,
	297, 298, 628, 1380, 1309, 1381, 299, 300, 301, 302,
	303, 304, 305, 0, 1382, 307, 308, 309, 306, 310,
	1383, 311, 0, 312, 313, 314, 315, 316, 317, 1384,
	318, 319, 320, 1166, 321, 322, 323, 1385, 1386, 1388,
	1387, 1389, 1390, 1391, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1392, 333, 330, 331, 1393, 334, 332,
	335, 1394, 336, 337, 338, 1395, 1396, 339, 340, 341,
	1397, 342, 343, 1398, 344, 345, 346, 1399, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1400, 268, 1401, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1402,
	365, 366, 1403, 1404, 1167, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1405, 378,
	637, 1406, 638, 379, 1407, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1169, 385, 386, 1408, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1409, 1168, 395, 642, 643, 1410, 644, 1411, 397,
	398, 1170, 645, 1171, 399, 400, 401, 1172, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1412, 409,
	411, 410, 1413, 412, 646, 1173, 413, 414, 1174, 1414,
	415, 0, 0, 0, 416, 417, 420, 1415, 1416, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1175, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1176, 459, 449, 1417, 270, 1177, 460, 461, 1418,
	647, 462, 648, 464, 465, 1419, 0, 466, 0, 1420,
	1421, 468, 469, 470, 1422, 1423, 471, 472, 649, 1178,
	473, 1179, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1424, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1425, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1426, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1427, 522, 523,
	524, 1180, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1428, 546, 547, 545, 548, 549, 550, 1429, 551,
	552, 534, 535, 553, 554, 1181, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1430, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1431, 577, 578, 0, 574, 565, 1432, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1433, 587,
	660, 661, 662, 663, 1434, 596, 1435, 588, 589, 590,
	664, 591, 665, 1436, 592, 593, 594, 595, 0, 597,
	598, 1437, 1438, 599, 600, 601, 603, 604, 602, 605,
	1439, 606, 1440, 0, 607, 608, 609, 666, 667, 668,
	1441, 611, 610, 612, 669, 1442, 613, 1443, 1444, 1445,
	1446, 614, 615, 670, 616, 617, 618, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3872, 271, 273, 272, 274, 275,
	276, 277, 1367, 278, 279, 1368, 1369, 1370, 0, 1371,
	619, 1372, 1373, 1374, 1375, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 1376, 624, 290, 291, 292, 293, 294, 295, 1377,
	1378, 0, 296, 625, 626, 627, 1379, 297, 298, 628,
	1380, 1309, 1381, 299, 300, 301, 302, 303, 304, 305,
	0, 1382, 307, 308, 309, 306, 310, 1383, 311, 0,
	312, 313, 314, 315, 316, 317, 1384, 318, 319, 320,
	1166, 321, 322, 323, 1385, 1386, 1388, 1387, 1389, 1390,
	1391, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	1392, 333, 330, 331, 1393, 334, 332, 335, 1394, 336,
	337, 338, 1395, 1396, 339, 340, 341, 1397, 342, 343,
	1398, 344, 345, 346, 1399, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 1400, 268, 1401, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 1402, 365, 366, 1403,
	1404, 1167, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1405, 378, 637, 1406, 638,
	379, 1407, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1169, 385, 386, 1408, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1409, 1168,
	395, 642, 643, 1410, 644, 1411, 397, 398, 1170, 645,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1412, 409, 411, 410, 1413,
	412, 646, 1173, 413, 414, 1174, 1414, 415, 0, 0,
	0, 416, 417, 420, 1415, 1416, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 1417, 270, 1177, 460, 461, 1418, 647, 462, 648,
	464, 465, 1419, 0, 466, 0, 1420, 1421, 468, 469,
	470, 1422, 1423, 471, 472, 649, 1178, 473, 1179, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1424, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 1425, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 1426, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1427, 522, 523, 524, 1180, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1428, 546,
	547, 545, 548, 549, 550, 1429, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 1430, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 1431,
	577, 578, 0, 574, 565, 1432, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 1433, 587, 660, 661, 662,
	663, 1434, 596, 1435, 588, 589, 590, 664, 591, 665,
	1436, 592, 593, 594, 595, 0, 597, 598, 1437, 1438,
	599, 600, 601, 603, 604, 602, 605, 1439, 606, 1440,
	0, 607, 608, 609, 666, 667, 668, 1441, 611, 610,
	612, 669, 1442, 613, 1443, 1444, 1445, 1446, 614, 615,
	670, 616, 617, 618, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3582, 271, 273, 272, 274, 275, 276, 277, 1367,
	278, 279, 1368, 1369, 1370, 0, 1371, 619, 1372, 1373,
	1374, 1375, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 1376, 624,
	290, 291, 292, 293, 294, 295, 1377, 1378, 0, 296,
	625, 626, 627, 1379, 297, 298, 628, 1380, 1309, 1381,
	299, 300, 301, 302, 303, 304, 305, 0, 1382, 307,
	308, 309, 306, 310, 1383, 311, 0, 312, 313, 314,
	315, 316, 317, 1384, 318, 319, 320, 1166, 321, 322,
	323, 1385, 1386, 1388, 1387, 1389, 1390, 1391, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 1392, 333, 330,
	331, 1393, 334, 332, 335, 1394, 336, 337, 338, 1395,
	1396, 339, 340, 341, 1397, 342, 343, 1398, 344, 345,
	346, 1399, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 1400, 268,
	1401, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 1402, 365, 366, 1403, 1404, 1167, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1405, 378, 637, 1406, 638, 379, 1407, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1169, 385,
	386, 1408, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1409, 1168, 395, 642, 643,
	1410, 644, 1411, 397, 398, 1170, 645, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1412, 409, 411, 410, 1413, 412, 646, 1173,
	413, 414, 1174, 1414, 415, 0, 0, 0, 416, 417,
	420, 1415, 1416, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 1417, 270,
	1177, 460, 461, 1418, 647, 462, 648, 464, 465, 1419,
	0, 466, 0, 1420, 1421, 468, 469, 470, 1422, 1423,
	471, 472, 649, 1178, 473, 1179, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1424, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 1425, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	1426, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1427, 522, 523, 524, 1180, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1428, 546, 547, 545, 548,
	549, 550, 1429, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 1430,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 1431, 577, 578, 0,
	574, 565, 1432, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 1433, 587, 660, 661, 662, 663, 1434, 596,
	1435, 588, 589, 590, 664, 591, 665, 1436, 592, 593,
	594, 595, 0, 597, 598, 1437, 1438, 599, 600, 601,
	603, 604, 602, 605, 1439, 606, 1440, 0, 607, 608,
	609, 666, 667, 668, 1441, 611, 610, 612, 669, 1442,
	613, 1443, 1444, 1445, 1446, 614, 615, 670, 616, 617,
	618, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3413, 271,
	273, 272, 274, 275, 276, 277, 1367, 278, 279, 1368,
	1369, 1370, 0, 1371, 619, 1372, 1373, 1374, 1375, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 1376, 624, 290, 291, 292,
	293, 294, 295, 1377, 1378, 0, 296, 625, 626, 627,
	1379, 297, 298, 628, 1380, 1309, 1381, 299, 300, 301,
	302, 303, 304, 305, 0, 1382, 307, 308, 309, 306,
	310, 1383, 311, 0, 312, 313, 314, 315, 316, 317,
	1384, 318, 319, 320, 1166, 321, 322, 323, 1385, 1386,
	1388, 1387, 1389, 1390, 1391, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 1392, 333, 330, 331, 1393, 334,
	332, 335, 1394, 336, 337, 338, 1395, 1396, 339, 340,
	341, 1397, 342, 343, 1398, 344, 345, 346, 1399, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 1400, 268, 1401, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	1402, 365, 366, 1403, 1404, 1167, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1405,
	378, 637, 1406, 638, 379, 1407, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1169, 385, 386, 1408, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1409, 1168, 395, 642, 643, 1410, 644, 1411,
	397, 398, 1170, 645, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1412,
	409, 411, 410, 1413, 412, 646, 1173, 413, 414, 1174,
	1414, 415, 0, 0, 0, 416, 417, 420, 1415, 1416,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1417, 270, 1177, 460, 461,
	1418, 647, 462, 648, 464, 465, 1419, 0, 466, 0,
	1420, 1421, 468, 469, 470, 1422, 1423, 471, 472, 649,
	1178, 473, 1179, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1424, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 1425, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 1426, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1427, 522,
	523, 524, 1180, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1428, 546, 547, 545, 548, 549, 550, 1429,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 1430, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 1431, 577, 578, 0, 574, 565, 1432,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 1433,
	587, 660, 661, 662, 663, 1434, 596, 1435, 588, 589,
	590, 664, 591, 665, 1436, 592, 593, 594, 595, 0,
	597, 598, 1437, 1438, 599, 600, 601, 603, 604, 602,
	605, 1439, 606, 1440, 0, 607, 608, 609, 666, 667,
	668, 1441, 611, 610, 612, 669, 1442, 613, 1443, 1444,
	1445, 1446, 614, 615, 670, 616, 617, 618, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2494, 271, 273, 272, 274,
	275, 276, 277, 1367, 278, 279, 1368, 1369, 1370, 0,
	1371, 619, 1372, 1373, 1374, 1375, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 1376, 624, 290, 291, 292, 293, 294, 295,
	1377, 1378, 0, 296, 625, 626, 627, 1379, 297, 298,
	628, 1380, 1309, 1381, 299, 300, 301, 302, 303, 304,
	305, 0, 1382, 307, 308, 309, 306, 310, 1383, 311,
	0, 312, 313, 314, 315, 316, 317, 1384, 318, 319,
	320, 1166, 321, 322, 323, 1385, 1386, 1388, 1387, 1389,
	1390, 1391, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 1392, 333, 330, 331, 1393, 334, 332, 335, 1394,
	336, 337, 338, 1395, 1396, 339, 340, 341, 1397, 342,
	343, 1398, 344, 345, 346, 1399, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 1400, 268, 1401, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 1402, 365, 366,
	1403, 1404, 1167, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1405, 378, 637, 1406,
	638, 379, 1407, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1169, 385, 386, 1408, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1409,
	1168, 395, 642, 643, 1410, 644, 1411, 397, 398, 1170,
	645, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1412, 409, 411, 410,
	1413, 412, 646, 1173, 413, 414, 1174, 1414, 415, 0,
	0, 0, 416, 417, 420, 1415, 1416, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1417, 270, 1177, 460, 461, 1418, 647, 462,
	648, 464, 465, 1419, 0, 466, 0, 1420, 1421, 468,
	469, 470, 1422, 1423, 471, 472, 649, 1178, 473, 1179,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1424, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 1425, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 1426, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1427, 522, 523, 524, 1180,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1428,
	546, 547, 545, 548, 549, 550, 1429, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 1430, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	1431, 577, 578, 0, 574, 565, 1432, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 1433, 587, 660, 661,
	662, 663, 1434, 596, 1435, 588, 589, 590, 664, 591,
	665, 1436, 592, 593, 594, 595, 0, 597, 598, 1437,
	1438, 599, 600, 601, 603, 604, 602, 605, 1439, 606,
	1440, 0, 607, 608, 609, 666, 667, 668, 1441, 611,
	610, 612, 669, 1442, 613, 1443, 1444, 1445, 1446, 614,
	615, 670, 616, 617, 618, 1458, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2180, 0, 271, 273, 272, 274, 275, 276,
	277, 1367, 278, 279, 1368, 1369, 1370, 0, 1371, 619,
	1372, 1373, 1374, 1375, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	1376, 624, 290, 291, 292, 293, 294, 295, 1377, 1378,
	0, 296, 625, 626, 627, 1379, 297, 298, 628, 1380,
	1309, 1381, 299, 300, 301, 302, 303, 304, 305, 0,
	1382, 307, 308, 309, 306, 310, 1383, 311, 0, 312,
	313, 314, 315, 316, 317, 1384, 318, 319, 320, 1166,
	321, 322, 323, 1385, 1386, 1388, 1387, 1389, 1390, 1391,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 1392,
	333, 330, 331, 1393, 334, 332, 335, 1394, 336, 337,
	338, 1395, 1396, 339, 340, 341, 1397, 342, 343, 1398,
	344, 345, 346, 1399, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	1400, 268, 1401, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 1402, 365, 366, 1403, 1404,
	1167, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1405, 378, 637, 1406, 638, 379,
	1407, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1169, 385, 386, 1408, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1409, 1168, 395,
	642, 643, 1410, 644, 1411, 397, 398, 1170, 645, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1412, 409, 411, 410, 1413, 412,
	646, 1173, 413, 414, 1174, 1414, 415, 0, 0, 0,
	416, 417, 420, 1415, 1416, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1417, 270, 1177, 460, 461, 1418, 647, 462, 648, 464,
	465, 1419, 0, 466, 0, 1420, 1421, 468, 469, 470,
	1422, 1423, 471, 472, 649, 1178, 473, 1179, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1424, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 1425, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 1426, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1427, 522, 523, 524, 1180, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1428, 546, 547,
	545, 548, 549, 550, 1429, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 1430, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 1431, 577,
	578, 0, 574, 565, 1432, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 1433, 587, 660, 661, 662, 663,
	1434, 596, 1435, 588, 589, 590, 664, 591, 665, 1436,
	592, 593, 594, 595, 0, 597, 598, 1437, 1438, 599,
	600, 601, 603, 604, 602, 605, 1439, 606, 1440, 0,
	607, 608, 609, 666, 667, 668, 1441, 611, 610, 612,
	669, 1442, 613, 1443, 1444, 1445, 1446, 614, 615, 670,
	616, 617, 618, 1359, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1367,
	278, 279, 1368, 1369, 1370, 0, 1371, 619, 1372, 1373,
	1374, 1375, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 1376, 624,
	290, 291, 292, 293, 294, 295, 1377, 1378, 0, 296,
	625, 626, 627, 1379, 297, 298, 628, 1380, 1309, 1381,
	299, 300, 301, 302, 303, 304, 305, 0, 1382, 307,
	308, 309, 306, 310, 1383, 311, 0, 312, 313, 314,
	315, 316, 317, 1384, 318, 319, 320, 1166, 321, 322,
	323, 1385, 1386, 1388, 1387, 1389, 1390, 1391, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 1392, 333, 330,
	331, 1393, 334, 332, 335, 1394, 336, 337, 338, 1395,
	1396, 339, 340, 341, 1397, 342, 343, 1398, 344, 345,
	346, 1399, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 1400, 268,
	1401, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 1402, 365, 366, 1403, 1404, 1167, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1405, 378, 637, 1406, 638, 379, 1407, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1169, 385,
	386, 1408, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1409, 1168, 395, 642, 643,
	1410, 644, 1411, 397, 398, 1170, 645, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1412, 409, 411, 410, 1413, 412, 646, 1173,
	413, 414, 1174, 1414, 415, 0, 0, 0, 416, 417,
	420, 1415, 1416, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 1417, 270,
	1177, 460, 461, 1418, 647, 462, 648, 464, 465, 1419,
	0, 466, 0, 1420, 1421, 468, 469, 470, 1422, 1423,
	471, 472, 649, 1178, 473, 1179, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1424, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 1425, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	1426, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1427, 522, 523, 524, 1180, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1428, 546, 547, 545, 548,
	549, 550, 1429, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 1430,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 1431, 577, 578, 0,
	574, 565, 1432, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 1433, 587, 660, 661, 662, 663, 1434, 596,
	1435, 588, 589, 590, 664, 591, 665, 1436, 592, 593,
	594, 595, 0, 597, 598, 1437, 1438, 599, 600, 601,
	603, 604, 602, 605, 1439, 606, 1440, 0, 607, 608,
	609, 666, 667, 668, 1441, 611, 610, 612, 669, 1442,
	613, 1443, 1444, 1445, 1446, 614, 615, 670, 616, 617,
	618, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1367, 278, 279, 1368, 1369,
	1370, 0, 1371, 619, 1372, 1373, 1374, 1375, 280, 281,
	1165, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1376, 624, 290, 291, 292, 293,
	294, 295, 1377, 1378, 0, 296, 625, 626, 627, 1379,
	297, 298, 628, 1380, 1309, 1381, 299, 300, 301, 302,
	303, 304, 305, 0, 1382, 307, 308, 309, 306, 310,
	1383, 311, 0, 312, 313, 314, 315, 316, 317, 1384,
	318, 319, 320, 1166, 321, 322, 323, 1385, 1386, 1388,
	1387, 1389, 1390, 1391, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1392, 333, 330, 331, 1393, 334, 332,
	335, 1394, 336, 337, 338, 1395, 1396, 339, 340, 341,
	1397, 342, 343, 1398, 344, 345, 346, 1399, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1400, 268, 1401, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1402,
	365, 366, 1403, 1404, 1167, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1405, 378,
	637, 1406, 638, 379, 1407, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1169, 385, 386, 1408, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1409, 1168, 395, 642, 643, 1410, 644, 1411, 397,
	398, 1170, 645, 1171, 399, 400, 401, 1172, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1412, 409,
	411, 410, 1413, 412, 646, 1173, 413, 414, 1174, 1414,
	415, 0, 0, 0, 416, 417, 420, 1415, 1416, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1175, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1176, 459, 449, 1417, 270, 1177, 460, 461, 1418,
	647, 462, 648, 464, 465, 1419, 0, 466, 0, 1420,
	1421, 468, 469, 470, 1422, 1423, 471, 472, 649, 1178,
	473, 1179, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1424, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1425, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1426, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1427, 522, 523,
	524, 1180, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1428, 546, 547, 545, 548, 549, 550, 1429, 551,
	552, 534, 535, 553, 554, 1181, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1430, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1431, 577, 578, 0, 574, 565, 1432, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1433, 587,
	660, 661, 662, 663, 1434, 596, 1435, 588, 589, 590,
	664, 591, 665, 1436, 592, 593, 594, 595, 0, 597,
	598, 1437, 1438, 599, 600, 601, 603, 604, 602, 605,
	1439, 606, 1440, 0, 607, 608, 609, 666, 667, 668,
	1441, 611, 610, 612, 669, 1442, 613, 1443, 1444, 1445,
	1446, 614, 615, 670, 616, 617, 618, 2469, 0, 1101,
	1073, 1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 2466, 278, 279, 0, 0, 0, 0,
	0, 1125, 1089, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 1138, 0, 288, 1145,
	289, 1144, 0, 1155, 290, 291, 292, 293, 294, 295,
	1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 1148, 329, 1142,
	1141, 1062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 2467, 0, 339, 1133, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1068, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 1080, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1140, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 1153, 1154, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	1090, 379, 0, 380, 381, 382, 383, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1168, 395, 1135, 1136, 0, 1096, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1059, 270, 1177, 460, 461, 1081, 1129, 462,
	1143, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1139,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 1069, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	1137, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1184, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 1057, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1149, 1150,
	1151, 1152, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 1079, 592, 593, 594, 595, 0, 597, 598, 0,
	1063, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 1146, 1183, 2465, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1060, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1054, 1055, 2468, 0, 0, 0, 0, 0, 0, 1085,
	2464, 0, 1047, 1083, 1101, 1073, 1074, 1075, 1071, 1072,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1125, 1089, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 1138, 0, 288, 1145, 289, 1144, 0, 1155, 290,
	291, 292, 293, 294, 295, 1091, 1124, 1058, 296, 1185,
	1186, 627, 0, 297, 298, 1131, 0, 1112, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326,
	327, 328, 1148, 329, 1142, 1141, 1062, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1133, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1068, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1156, 1157, 360, 1080, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1140, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	1153, 1154, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1163, 0, 1090, 379, 0, 380, 381,
	382, 383, 384, 1126, 1127, 1130, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1168, 395, 1135, 1136, 0,
	1096, 0, 397, 398, 1170, 1128, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1164, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	1119, 1118, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 1059, 270, 1177,
	460, 461, 1081, 1129, 462, 1143, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 1158, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1159, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1139, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 1069,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 1122, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 1137, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1184, 568, 569,
	570, 571, 1160, 575, 576, 0, 577, 578, 1057, 574,
	565, 232, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1149, 1150, 1151, 1152, 0, 596, 0,
	588, 589, 590, 1161, 591, 1162, 1079, 592, 593, 594,
	595, 0, 597, 598, 0, 1063, 599, 600, 601, 603,
	604, 602, 605, 1123, 606, 0, 0, 607, 608, 609,
	1581, 1146, 1183, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 224, 614, 615, 670, 616, 617, 618,
	1060, 0, 225, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 1054, 1055, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 1826, 1824, 0, 0, 1083, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 230, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 232, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 1581, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 224, 614, 615, 670,
	616, 617, 618, 1060, 0, 225, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	1101, 1073, 1074, 1075, 1071, 1072, 1084, 1826, 3076, 0,
	0, 1083, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1125, 1089, 0, 0, 0, 280, 281, 1165,
	282, 283, 284, 285, 286, 287, 620, 1138, 0, 288,
	1145, 289, 1144, 0, 1155, 290, 291, 292, 293, 294,
	295, 1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297,
	298, 1131, 0, 1112, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121,
	1117, 1116, 1120, 324, 325, 326, 327, 328, 1148, 329,
	1142, 1141, 1062, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1133, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1068,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1156, 1157, 360, 1080, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1140, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1167, 367, 368, 1153, 1154, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1163,
	0, 1090, 379, 0, 380, 381, 382, 383, 384, 1126,
	1127, 1130, 463, 1169, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1168, 395, 1135, 1136, 0, 1096, 0, 397, 398,
	1170, 1128, 1171, 399, 400, 401, 1172, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1164, 1173, 413, 414, 1174, 0, 415,
	0, 0, 0, 416, 417, 420, 1119, 1118, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1175, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1176, 459, 449, 1059, 270, 1177, 460, 461, 1081, 1129,
	462, 1143, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1178, 473,
	1179, 1158, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1159, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1139, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1180, 525, 526, 527, 528, 1069, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 1122, 551, 552,
	534, 535, 553, 554, 1181, 555, 556, 557, 558, 559,
	560, 1137, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1184, 568, 569, 570, 571, 1160, 575,
	576, 0, 577, 578, 1057, 574, 565, 232, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1149,
	1150, 1151, 1152, 0, 596, 0, 588, 589, 590, 1161,
	591, 1162, 1079, 592, 593, 594, 595, 0, 597, 598,
	0, 1063, 599, 600, 601, 603, 604, 602, 605, 1123,
	606, 0, 0, 607, 608, 609, 1581, 1146, 1183, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 224,
	614, 615, 670, 616, 617, 618, 1060, 0, 225, 0,
	0, 0, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 1054, 1055, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	1826, 1824, 0, 0, 1083, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	1138, 0, 288, 1145, 289, 1144, 2597, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 2602, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 1170, 1128, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 2598, 412, 1164, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 1177, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 2599, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 597, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1060,
	0, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 1054, 1055, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 0, 2514, 1083, 1101, 1073,
	1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1125, 1089, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 1138, 0, 288, 1145, 289,
	1144, 0, 1155, 290, 291, 292, 293, 294, 295, 1091,
	1124, 1058, 296, 1185, 1186, 627, 0, 297, 298, 1131,
	0, 1112, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116,
	1120, 324, 325, 326, 327, 328, 1148, 329, 1142, 1141,
	1062, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1133, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1068, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1156, 1157,
	360, 1080, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1140, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 1153, 1154, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1163, 0, 1090,
	379, 0, 380, 381, 382, 383, 384, 1126, 1127, 1130,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1168,
	395, 1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1164, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 1119, 1118, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 1158,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1159, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1139, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 1069, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1122, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 1137,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1184, 568, 569, 570, 571, 1160, 575, 576, 0,
	577, 578, 1057, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1149, 1150, 1151,
	1152, 0, 596, 0, 588, 589, 590, 1161, 591, 1162,
	1079, 592, 593, 594, 595, 0, 597, 598, 0, 1063,
	599, 600, 601, 603, 604, 602, 605, 1123, 606, 0,
	0, 607, 608, 609, 666, 1146, 1183, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1060, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 1054,
	1055, 0, 0, 0, 0, 0, 0, 0, 1085, 2512,
	0, 2511, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	1138, 0, 288, 1145, 289, 1144, 0, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 1170, 1128, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1164, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 1177, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 0, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 597, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1060,
	0, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 1054, 1055, 0, 0, 0, 0,
	0, 0, 0, 1085, 2509, 0, 2508, 1083, 1101, 1073,
	1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1125, 1089, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 1138, 0, 288, 1145, 289,
	1144, 0, 1155, 290, 291, 292, 293, 294, 295, 1091,
	1124, 1058, 296, 1185, 1186, 627, 0, 297, 298, 1131,
	0, 1112, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116,
	1120, 324, 325, 326, 327, 328, 1148, 329, 1142, 1141,
	1062, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1133, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1068, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1156, 1157,
	360, 1080, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1140, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 1153, 1154, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1163, 0, 1090,
	379, 0, 380, 381, 382, 383, 384, 1126, 1127, 1130,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1168,
	395, 1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1164, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 1119, 1118, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 1158,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1159, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1139, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 1069, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1122, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 1137,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1184, 568, 569, 570, 571, 1160, 575, 576, 0,
	577, 578, 1057, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1149, 1150, 1151,
	1152, 0, 596, 0, 588, 589, 590, 1161, 591, 1162,
	1079, 592, 593, 594, 595, 0, 597, 598, 0, 1063,
	599, 600, 601, 603, 604, 602, 605, 1123, 606, 0,
	0, 607, 608, 609, 666, 1146, 1183, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1060, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 1054,
	1055, 0, 0, 0, 0, 0, 0, 0, 1085, 2506,
	0, 2505, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	1138, 0, 288, 1145, 289, 1144, 0, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 1170, 1128, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1164, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 1177, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 0, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 597, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1060,
	0, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 1054, 1055, 0, 0, 0, 0,
	0, 0, 0, 1085, 2503, 0, 1674, 1083, 1101, 1073,
	1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1125, 1089, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 1138, 0, 288, 1145, 289,
	1144, 0, 1155, 290, 291, 292, 293, 294, 295, 1091,
	1124, 1058, 296, 1185, 1186, 627, 0, 297, 298, 1131,
	0, 1112, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116,
	1120, 324, 325, 326, 327, 328, 1148, 329, 1142, 1141,
	1062, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1133, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1068, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1156, 1157,
	360, 1080, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1140, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 1153, 1154, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1163, 0, 1090,
	379, 0, 380, 381, 382, 383, 384, 1126, 1127, 1130,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1168,
	395, 1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1164, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 1119, 1118, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 1158,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1159, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1139, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 1069, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1122, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 1137,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1184, 568, 569, 570, 571, 1160, 575, 576, 0,
	577, 578, 1057, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1149, 1150, 1151,
	1152, 0, 596, 0, 588, 589, 590, 1161, 591, 1162,
	1079, 592, 593, 594, 595, 0, 597, 598, 0, 1063,
	599, 600, 601, 603, 604, 602, 605, 1123, 606, 0,
	0, 607, 608, 609, 666, 1146, 1183, 0, 611, 610,
	612, 669, 0, 613, 1673, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1060, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 1054,
	1055, 0, 0, 0, 0, 0, 0, 0, 1085, 0,
	0, 1050, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	1138, 0, 288, 1145, 289, 1144, 0, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 1170, 1128, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1164, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 1177, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 1064, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 0, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 597, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1060,
	0, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 1054, 1055, 1101, 1073, 1074, 1075,
	1071, 1072, 1084, 1085, 0, 0, 0, 1083, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1125, 1089,
	0, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 1138, 0, 288, 1145, 289, 1144, 0,
	1155, 290, 291, 292, 293, 294, 295, 1091, 1124, 1058,
	296, 1185, 1186, 627, 0, 297, 298, 1131, 0, 1112,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 4451, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324,
	325, 326, 327, 328, 1148, 329, 1142, 1141, 1062, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1133, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1068, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1156, 1157, 360, 1080,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1140,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 1153, 1154, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1163, 0, 1090, 379, 0,
	380, 381, 382, 383, 384, 1126, 1127, 1130, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1168, 395, 1135,
	1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1164,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 1119, 1118, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 1059,
	270, 1177, 460, 461, 1081, 1129, 462, 1143, 464, 465,
	0, 0, 466, 0, 1064, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 1158, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1159, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1139, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 1069, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1122, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 1137, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1184,
	568, 569, 570, 571, 1160, 575, 576, 0, 577, 578,
	1057, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1149, 1150, 1151, 1152, 0,
	596, 0, 588, 589, 590, 1161, 591, 1162, 1079, 592,
	593, 594, 595, 0, 597, 598, 0, 1063, 599, 600,
	601, 603, 604, 602, 605, 1123, 606, 0, 0, 607,
	608, 609, 666, 1146, 1183, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1060, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 0, 0, 1054, 1055, 1101,
	1073, 1074, 1075, 1071, 1072, 1084, 1085, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1125, 1089, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 1138, 0, 288, 1145,
	289, 1144, 0, 1155, 290, 291, 292, 293, 294, 295,
	1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 1148, 329, 1142,
	1141, 1062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1133, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1068, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 1080, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1140, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 1153, 1154, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	1090, 379, 0, 380, 381, 382, 383, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 2383, 392, 393, 394, 396, 0,
	1168, 395, 1135, 1136, 0, 1096, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1059, 270, 1177, 460, 461, 1081, 1129, 462,
	1143, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 2382, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1139,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 1069, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	1137, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1184, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 1057, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1149, 1150,
	1151, 1152, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 1079, 592, 593, 594, 595, 0, 597, 598, 0,
	1063, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 1146, 1183, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1060, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1054, 1055, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 1085,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	1064, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 1101, 1073, 1074, 1075, 1071,
	1072, 1084, 1085, 0, 0, 0, 1083, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1125, 1089, 0,
	0, 0, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 1138, 0, 288, 1145, 289, 1144, 0, 1155,
	290, 291, 292, 293, 294, 295, 1091, 1124, 1058, 296,
	1185, 1186, 627, 0, 297, 298, 1131, 0, 1112, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 4212, 317, 0, 318, 319, 320, 1166, 321, 322,
	323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325,
	326, 327, 328, 1148, 329, 1142, 1141, 1062, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1133, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1068, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1156, 1157, 360, 1080, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1140, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1167, 367,
	368, 1153, 1154, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1163, 0, 1090, 379, 0, 380,
	381, 382, 383, 384, 1126, 1127, 1130, 463, 1169, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1168, 395, 1135, 1136,
	0, 1096, 0, 397, 398, 1170, 1128, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1164, 1173,
	413, 414, 1174, 0, 415, 0, 0, 0, 416, 417,
	420, 1119, 1118, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 1059, 270,
	1177, 460, 461, 1081, 1129, 462, 1143, 464, 465, 0,
	0, 466, 0, 1064, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1178, 473, 1179, 1158, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1159,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1139, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1180, 525, 526, 527, 528,
	1069, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1122, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 1137, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1184, 568,
	569, 570, 571, 1160, 575, 576, 0, 577, 578, 1057,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1149, 1150, 1151, 1152, 0, 596,
	0, 588, 589, 590, 1161, 591, 1162, 1079, 592, 593,
	594, 595, 0, 597, 598, 0, 1063, 599, 600, 601,
	603, 604, 602, 605, 1123, 606, 0, 0, 607, 608,
	609, 666, 1146, 1183, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1060, 0, 0, 0, 0, 0, 0, 0, 1056,
	0, 0, 0, 0, 0, 0, 1054, 1055, 1101, 1073,
	1074, 1075, 1071, 1072, 1084, 1085, 0, 0, 0, 1083,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1125, 1089, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 1138, 0, 288, 1145, 289,
	1144, 0, 1155, 290, 291, 292, 293, 294, 295, 1091,
	1124, 1058, 296, 1185, 1186, 627, 0, 297, 298, 1131,
	0, 1112, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116,
	1120, 324, 325, 326, 327, 328, 1148, 329, 1142, 1141,
	1062, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1133, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1068, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1156, 1157,
	360, 1080, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1140, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 1153, 1154, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1163, 0, 1090,
	379, 0, 380, 381, 382, 383, 384, 1126, 1127, 1130,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1168,
	395, 1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1164, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 1119, 1118, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 1059, 3834, 1177, 460, 461, 1081, 1129, 462, 1143,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 1158,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1159, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1139, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 1069, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1122, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 1137,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1184, 568, 569, 570, 571, 1160, 575, 576, 0,
	577, 578, 1057, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1149, 1150, 1151,
	1152, 0, 596, 0, 588, 589, 590, 1161, 591, 1162,
	1079, 592, 593, 594, 595, 0, 597, 598, 0, 1063,
	599, 600, 601, 603, 604, 602, 605, 1123, 606, 0,
	0, 607, 608, 609, 666, 1146, 1183, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1060, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 1054,
	1055, 1894, 0, 0, 0, 0, 0, 0, 1085, 0,
	0, 0, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	1138, 0, 288, 1145, 289, 1144, 0, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 1170, 1128, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1164, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 1177, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 0, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 597, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 3560, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1060,
	0, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 1054, 1055, 1101, 1073, 1074, 1075,
	1071, 1072, 1084, 1085, 0, 0, 0, 1083, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1125, 1089,
	0, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 1138, 0, 288, 1145, 289, 1144, 0,
	1155, 290, 291, 292, 293, 294, 295, 1091, 1124, 1058,
	296, 1185, 1186, 627, 0, 297, 298, 1131, 0, 1112,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324,
	325, 326, 327, 328, 1148, 329, 1142, 1141, 1062, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1133, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1068, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1156, 1157, 360, 1080,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1140,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 1153, 1154, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1163, 0, 1090, 379, 0,
	380, 381, 382, 383, 384, 1126, 1127, 1130, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1168, 395, 1135,
	1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1164,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 1119, 1118, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 1059,
	270, 1177, 460, 461, 1081, 1129, 462, 1143, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 1158, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1159, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1139, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 1069, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1122, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 1137, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1184,
	568, 569, 570, 571, 1160, 575, 576, 0, 577, 578,
	1057, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1149, 1150, 1151, 1152, 0,
	596, 0, 588, 589, 590, 1161, 591, 1162, 1079, 592,
	593, 594, 595, 0, 597, 598, 0, 1063, 599, 600,
	601, 603, 604, 602, 605, 1123, 606, 0, 0, 607,
	608, 609, 666, 1146, 1183, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1060, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 0, 0, 1054, 1055, 1894,
	0, 0, 0, 0, 0, 0, 1085, 0, 0, 0,
	1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1125, 1089, 0, 0, 0, 280, 281,
	1165, 282, 283, 284, 285, 286, 287, 620, 1138, 0,
	288, 1145, 289, 1144, 0, 1155, 290, 291, 292, 293,
	294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627, 0,
	297, 298, 1131, 0, 1112, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1166, 321, 322, 323, 1115, 1113, 1114,
	1121, 1117, 1116, 1120, 324, 325, 326, 327, 328, 1148,
	329, 1142, 1141, 1062, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1133, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1068, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1156, 1157, 360, 1080, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1140, 0, 0, 0, 364, 0,
	365, 366, 0, 2602, 1167, 367, 368, 1153, 1154, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1163, 0, 1090, 379, 0, 380, 381, 382, 383, 384,
	1126, 1127, 1130, 463, 1169, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1168, 395, 1135, 1136, 0, 1096, 0, 397,
	398, 1170, 1128, 1171, 399, 400, 401, 1172, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1164, 1173, 413, 414, 1174, 0,
	415, 0, 0, 0, 416, 417, 420, 1119, 1118, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1175, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1176, 459, 449, 1059, 270, 1177, 460, 461, 1081,
	1129, 462, 1143, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1178,
	473, 1179, 1158, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1159, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1139, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1180, 525, 526, 527, 528, 1069, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1122, 551,
	552, 534, 535, 553, 554, 1181, 555, 556, 557, 558,
	559, 560, 1137, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1184, 568, 569, 570, 571, 1160,
	575, 576, 0, 577, 578, 1057, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1149, 1150, 1151, 1152, 0, 596, 0, 588, 589, 590,
	1161, 591, 1162, 1079, 592, 593, 594, 595, 0, 597,
	598, 0, 1063, 599, 600, 601, 603, 604, 602, 605,
	1123, 606, 0, 0, 607, 608, 609, 666, 1146, 1183,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1060, 0, 0,
	0, 0, 0, 0, 0, 1056, 0, 0, 0, 0,
	0, 0, 1054, 1055, 1101, 1073, 1074, 1075, 1071, 1072,
	1084, 1085, 0, 0, 0, 1083, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1125, 1089, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 1138, 0, 288, 1145, 289, 1144, 0, 1155, 290,
	291, 292, 293, 294, 295, 1091, 1124, 1058, 296, 1185,
	1186, 627, 0, 297, 298, 1131, 0, 1112, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326,
	327, 328, 1148, 329, 1142, 1141, 1062, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1133, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1068, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1156, 1157, 360, 1080, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1140, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	1153, 1154, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1163, 0, 1090, 379, 0, 380, 381,
	382, 383, 384, 1126, 1127, 1130, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1168, 395, 1135, 1136, 0,
	1096, 0, 397, 398, 1170, 1128, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1164, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	1119, 1118, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 1059, 270, 1177,
	460, 461, 1081, 1129, 462, 1143, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 1158, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1159, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1139, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 1069,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1122, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 1137, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1184, 568, 569,
	570, 571, 1160, 575, 576, 0, 577, 578, 1057, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1149, 1150, 1151, 1152, 0, 596, 0,
	588, 589, 590, 1161, 591, 1162, 1079, 592, 593, 594,
	595, 0, 597, 598, 0, 1063, 599, 600, 601, 603,
	604, 602, 605, 1123, 606, 0, 0, 607, 608, 609,
	666, 1146, 1183, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1060, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 1054, 1055, 0, 0, 0,
	0, 0, 0, 0, 1085, 1824, 0, 2607, 1083, 1101,
	1073, 1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1125, 1089, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 1138, 0, 288, 1145,
	289, 1144, 0, 1155, 290, 291, 292, 293, 294, 295,
	1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 1148, 329, 1142,
	1141, 1062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1133, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1068, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 1080, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1140, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 1153, 1154, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	1090, 379, 0, 380, 381, 382, 383, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1168, 395, 1135, 1136, 0, 1096, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1059, 270, 1177, 460, 461, 1081, 1129, 462,
	1143, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1139,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 1069, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	1137, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1184, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 1057, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1149, 1150,
	1151, 1152, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 1079, 592, 593, 594, 595, 0, 597, 598, 0,
	1063, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 1146, 1183, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1060, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1054, 1055, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 2605, 1083, 1101, 1073, 1074, 1075, 1071, 1072,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1125, 1089, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 1138, 0, 288, 1145, 289, 1144, 0, 1155, 290,
	291, 292, 293, 294, 295, 1091, 1124, 1058, 296, 1185,
	1186, 627, 0, 297, 298, 1131, 0, 1112, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326,
	327, 328, 1148, 329, 1142, 1141, 1062, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1133, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1068, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1156, 1157, 360, 1080, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1140, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	1153, 1154, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1163, 0, 1090, 379, 0, 380, 381,
	382, 383, 384, 1126, 1127, 1130, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1168, 395, 1135, 1136, 0,
	1096, 0, 397, 398, 1170, 1128, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1164, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	1119, 1118, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 1059, 270, 1177,
	460, 461, 1081, 1129, 462, 1143, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 1158, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1159, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1139, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 1069,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1122, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 1137, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1184, 568, 569,
	570, 571, 1160, 575, 576, 0, 577, 578, 1057, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1149, 1150, 1151, 1152, 0, 596, 0,
	588, 589, 590, 1161, 591, 1162, 1079, 592, 593, 594,
	595, 0, 597, 598, 0, 1063, 599, 600, 601, 603,
	604, 602, 605, 1123, 606, 0, 0, 607, 608, 609,
	666, 1146, 1183, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1060, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 1054, 1055, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 0, 2593, 1083, 1101,
	1073, 1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1125, 1089, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 1138, 0, 288, 1145,
	289, 1144, 0, 1155, 290, 291, 292, 293, 294, 295,
	1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 1148, 329, 1142,
	1141, 1062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1133, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1068, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 1080, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1140, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 1153, 1154, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	1090, 379, 0, 380, 381, 382, 383, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1168, 395, 1135, 1136, 0, 1096, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1059, 270, 1177, 460, 461, 1081, 1129, 462,
	1143, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1139,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 1069, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	1137, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1184, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 1057, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1149, 1150,
	1151, 1152, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 1079, 592, 593, 594, 595, 0, 597, 598, 0,
	1063, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 1146, 1183, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1060, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1054, 1055, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 2582, 1083, 1101, 1073, 1074, 1075, 1071, 1072,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1125, 1089, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 1138, 0, 288, 1145, 289, 1144, 0, 1155, 290,
	291, 292, 293, 294, 295, 1091, 1124, 1058, 296, 1185,
	1186, 627, 0, 297, 298, 1131, 0, 1112, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326,
	327, 328, 1148, 329, 1142, 1141, 1062, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1133, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1068, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1156, 1157, 360, 1080, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1140, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	1153, 1154, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1163, 0, 1090, 379, 0, 380, 381,
	382, 383, 384, 1126, 1127, 1130, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1168, 395, 1135, 1136, 0,
	1096, 0, 397, 398, 1170, 1128, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1164, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	1119, 1118, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 1059, 270, 1177,
	460, 461, 1081, 1129, 462, 1143, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 1158, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1159, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1139, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 1069,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1122, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 1137, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1184, 568, 569,
	570, 571, 1160, 575, 576, 0, 577, 578, 1057, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1149, 1150, 1151, 1152, 0, 596, 0,
	588, 589, 590, 1161, 591, 1162, 1079, 592, 593, 594,
	595, 0, 597, 598, 0, 1063, 599, 600, 601, 603,
	604, 602, 605, 1123, 606, 0, 0, 607, 608, 609,
	666, 1146, 1183, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1060, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 1054, 1055, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 0, 2580, 1083, 2571,
	2578, 1074, 1075, 1071, 1072, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1125, 1089, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 1138, 0, 288, 1145,
	289, 1144, 0, 1155, 290, 291, 292, 293, 294, 295,
	1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 1148, 2574, 1142,
	1141, 1062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1133, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1068, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 1080, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1140, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 1153, 1154, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	1090, 379, 0, 380, 381, 382, 2575, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1168, 395, 1135, 1136, 0, 1096, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 2576, 430,
	2573, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1059, 270, 1177, 460, 461, 1081, 1129, 462,
	1143, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1139,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 1069, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 2577, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	1137, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1184, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 1057, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1149, 1150,
	1151, 1152, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 1079, 592, 593, 594, 595, 0, 597, 598, 0,
	1063, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 1146, 1183, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 2572, 618, 1060, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1054, 1055, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 2568, 1083, 2571, 2578, 1074, 1075, 1071, 1072,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1125, 1089, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 1138, 0, 288, 1145, 289, 1144, 0, 1155, 290,
	291, 292, 293, 294, 295, 1091, 1124, 1058, 296, 1185,
	1186, 627, 0, 297, 298, 1131, 0, 1112, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326,
	327, 328, 1148, 2574, 1142, 1141, 1062, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1133, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1068, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1156, 1157, 360, 1080, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1140, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	1153, 1154, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1163, 0, 1090, 379, 0, 380, 381,
	382, 2575, 384, 1126, 1127, 1130, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1168, 395, 1135, 1136, 0,
	1096, 0, 397, 398, 1170, 1128, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1164, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	1119, 1118, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 2576, 430, 2573, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 1059, 270, 1177,
	460, 461, 1081, 1129, 462, 1143, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 1158, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1159, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1139, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 1069,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 2577, 0, 546, 547, 545, 548, 549,
	550, 1122, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 1137, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1184, 568, 569,
	570, 571, 1160, 575, 576, 0, 577, 578, 1057, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1149, 1150, 1151, 1152, 0, 596, 0,
	588, 589, 590, 1161, 591, 1162, 1079, 592, 593, 594,
	595, 0, 597, 598, 0, 1063, 599, 600, 601, 603,
	604, 602, 605, 1123, 606, 0, 0, 607, 608, 609,
	666, 1146, 1183, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 2572, 618,
	1060, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 1054, 1055, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 1085, 0, 0, 0, 1083, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1060, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	0, 0, 0, 0, 0, 1832, 0, 1085, 0, 0,
	0, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 2362, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 1679, 1083, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1060, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	1611, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 1606, 1083, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1060, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	1597, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 1592, 1083, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1060, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	1504, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1503, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 1498, 1083, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1497, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1060, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	1491, 1083, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 1311, 1083, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	1058, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 1062,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 1069, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 1057, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 1063, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1060, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 1054, 1055,
	1101, 1073, 1074, 1075, 1071, 1072, 1084, 1085, 0, 0,
	0, 1083, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1125, 1089, 0, 0, 0, 280, 281, 1165,
	282, 283, 284, 285, 286, 287, 620, 1138, 0, 288,
	1145, 289, 1144, 0, 1155, 290, 291, 292, 293, 294,
	295, 1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297,
	298, 1131, 0, 1112, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121,
	1117, 1116, 1120, 324, 325, 326, 327, 328, 1148, 329,
	1142, 1141, 1062, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1133, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1068,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1156, 1157, 360, 1080, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1140, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1167, 367, 368, 1153, 1154, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1163,
	0, 1090, 379, 0, 380, 381, 382, 383, 384, 1126,
	1127, 1130, 463, 1169, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1168, 395, 1135, 1136, 0, 1096, 0, 397, 398,
	1170, 1128, 1171, 399, 400, 401, 1172, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1164, 1173, 413, 414, 1174, 0, 415,
	0, 0, 0, 416, 417, 420, 1119, 1118, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1175, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1176, 459, 449, 1059, 270, 1177, 460, 461, 1081, 1129,
	462, 1143, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1178, 473,
	1179, 1158, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1159, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1139, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1180, 525, 526, 527, 528, 1069, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1122, 551, 552,
	534, 535, 553, 554, 1181, 555, 556, 557, 558, 559,
	560, 1137, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1184, 568, 569, 570, 571, 1160, 575,
	576, 0, 577, 578, 1057, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1149,
	1150, 1151, 1152, 0, 596, 0, 588, 589, 590, 1161,
	591, 1162, 1079, 592, 593, 594, 595, 0, 597, 598,
	0, 1063, 599, 600, 601, 603, 604, 602, 605, 1123,
	606, 0, 0, 607, 608, 609, 666, 1146, 1183, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1060, 0, 0, 0,
	0, 0, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 1054, 1055, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	1085, 0, 0, 0, 1083, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	1138, 0, 288, 1145, 289, 1144, 0, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 4497, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 1170, 1128, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1164, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 1177, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 0, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 4496, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1060,
	0, 0, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 1054, 1055, 1101, 1073, 1074, 1075,
	1071, 1072, 1084, 1085, 0, 0, 0, 1083, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1125, 1089,
	0, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 4495, 1138, 0, 288, 1145, 289, 1144, 0,
	1155, 290, 291, 292, 293, 294, 295, 1091, 1124, 1058,
	296, 1185, 1186, 627, 0, 297, 298, 1131, 0, 1112,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 4497, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324,
	325, 326, 327, 328, 1148, 329, 1142, 1141, 1062, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1133, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1068, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1156, 1157, 360, 1080,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1140,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 1153, 1154, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1163, 0, 1090, 379, 0,
	380, 381, 382, 383, 384, 1126, 1127, 1130, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1168, 395, 1135,
	1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1164,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 1119, 1118, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 1059,
	270, 1177, 460, 461, 1081, 1129, 462, 1143, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 1158, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1159, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1139, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 1069, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1122, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 1137, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1184,
	568, 569, 570, 571, 1160, 575, 576, 0, 577, 578,
	1057, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1149, 1150, 1151, 1152, 0,
	596, 0, 588, 589, 590, 1161, 591, 1162, 1079, 592,
	593, 594, 595, 0, 4496, 598, 0, 1063, 599, 600,
	601, 603, 604, 602, 605, 1123, 606, 0, 0, 607,
	608, 609, 666, 1146, 1183, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1060, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 0, 0, 1054, 1055, 1101,
	1073, 1074, 1075, 1071, 1072, 1084, 1085, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1125, 1089, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 1138, 0, 288, 1145,
	289, 1144, 0, 1155, 290, 291, 292, 293, 294, 295,
	1091, 1124, 1058, 296, 1185, 1186, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 4156, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 1148, 329, 1142,
	1141, 1062, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1133, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1068, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 1080, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1140, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 1153, 1154, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	4157, 379, 0, 380, 381, 382, 383, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1168, 395, 1135, 1136, 0, 1096, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 1059, 270, 1177, 460, 461, 1081, 1129, 462,
	1143, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1139,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 4155, 1069, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	1137, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1184, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 1057, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1149, 1150,
	1151, 1152, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 1079, 592, 593, 594, 595, 0, 597, 598, 0,
	1063, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 1146, 1183, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1060, 0, 0, 0, 0,
	0, 0, 0, 1056, 0, 0, 0, 0, 0, 0,
	1054, 1055, 1101, 1073, 1074, 1075, 3043, 3044, 1084, 1085,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 1089, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 1138,
	0, 288, 1145, 289, 1144, 0, 1155, 290, 291, 292,
	293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	1148, 329, 1142, 1141, 1062, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1133,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1068, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 1080, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1140, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 1153, 1154,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 1090, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 1135, 1136, 0, 1096, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 1059, 270, 1177, 460, 461,
	1081, 1129, 462, 1143, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1139, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 1069, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 1137, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1184, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 1057, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1149, 1150, 1151, 1152, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 1079, 592, 593, 594, 595, 0,
	597, 598, 0, 1063, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 1146,
	1183, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1060, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 1054, 1055, 1101, 1073, 1074, 1075, 3041,
	3042, 1084, 1085, 0, 0, 0, 1083, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1125, 1089, 0,
	0, 0, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 1138, 0, 288, 1145, 289, 1144, 0, 1155,
	290, 291, 292, 293, 294, 295, 1091, 1124, 1058, 296,
	1185, 1186, 627, 0, 297, 298, 1131, 0, 1112, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1166, 321, 322,
	323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325,
	326, 327, 328, 1148, 329, 1142, 1141, 1062, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1133, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1068, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1156, 1157, 360, 1080, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1140, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1167, 367,
	368, 1153, 1154, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1163, 0, 1090, 379, 0, 380,
	381, 382, 383, 384, 1126, 1127, 1130, 463, 1169, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1168, 395, 1135, 1136,
	0, 1096, 0, 397, 398, 1170, 1128, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1164, 1173,
	413, 414, 1174, 0, 415, 0, 0, 0, 416, 417,
	420, 1119, 1118, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 1059, 270,
	1177, 460, 461, 1081, 1129, 462, 1143, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1178, 473, 1179, 1158, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1159,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1139, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1180, 525, 526, 527, 528,
	1069, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1122, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 1137, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1184, 568,
	569, 570, 571, 1160, 575, 576, 0, 577, 578, 1057,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1149, 1150, 1151, 1152, 0, 596,
	0, 588, 589, 590, 1161, 591, 1162, 1079, 592, 593,
	594, 595, 0, 597, 598, 0, 1063, 599, 600, 601,
	603, 604, 602, 605, 1123, 606, 0, 0, 607, 608,
	609, 666, 1146, 1183, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1060, 0, 0, 0, 0, 0, 0, 0, 1056,
	0, 0, 0, 0, 0, 0, 1054, 1055, 1101, 1073,
	1074, 1075, 1071, 1072, 1084, 1085, 0, 0, 0, 1083,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1125, 1089, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 1138, 0, 288, 1145, 289,
	1144, 0, 1155, 290, 291, 292, 293, 294, 295, 1091,
	1124, 1058, 296, 1185, 1186, 627, 0, 297, 298, 1131,
	0, 1112, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116,
	1120, 324, 325, 326, 327, 328, 1148, 329, 1142, 1141,
	1062, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1133, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1068, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1156, 1157,
	360, 1080, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1140, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 1153, 1154, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1163, 0, 1090,
	379, 0, 380, 381, 382, 383, 384, 1126, 1127, 1130,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1168,
	395, 1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1164, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 1119, 1118, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 1059, 270, 1177, 460, 461, 1081, 1129, 462, 1143,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 1158,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1159, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1139, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 1069, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1122, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 1137,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1184, 568, 569, 570, 571, 1160, 575, 576, 0,
	577, 578, 1057, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1149, 1150, 1151,
	1152, 0, 596, 0, 588, 589, 590, 1161, 591, 1162,
	1079, 592, 593, 594, 595, 0, 597, 598, 0, 1063,
	599, 600, 601, 603, 604, 602, 605, 1123, 606, 0,
	0, 607, 608, 609, 666, 1146, 1183, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1060, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 2370,
	2371, 1101, 1073, 1074, 1075, 1071, 1072, 1084, 1085, 0,
	0, 0, 1083, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1125, 1089, 0, 0, 0, 280, 281,
	1165, 282, 283, 284, 285, 286, 287, 620, 1138, 0,
	288, 1145, 289, 1144, 0, 1155, 290, 291, 292, 293,
	294, 295, 1091, 1124, 0, 296, 1185, 1186, 627, 0,
	297, 298, 1131, 0, 1112, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1166, 321, 322, 323, 1115, 1113, 1114,
	1121, 1117, 1116, 1120, 324, 325, 326, 327, 328, 1148,
	329, 1142, 1141, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1133, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1068, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1156, 1157, 360, 1080, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1140, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1167, 367, 368, 1153, 1154, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1163, 0, 1090, 379, 0, 380, 381, 382, 383, 384,
	1126, 1127, 1130, 463, 1169, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1168, 395, 1135, 1136, 0, 1096, 0, 397,
	398, 1170, 1128, 1171, 399, 400, 401, 1172, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1164, 1173, 413, 414, 1174, 0,
	415, 0, 0, 0, 416, 417, 420, 1119, 1118, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1175, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1176, 459, 449, 0, 270, 1177, 460, 461, 1081,
	1129, 462, 1143, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1178,
	473, 1179, 1158, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1159, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1139, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1180, 525, 526, 527, 528, 1069, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1122, 551,
	552, 534, 535, 553, 554, 1181, 555, 556, 557, 558,
	559, 560, 1137, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1184, 568, 569, 570, 571, 1160,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1149, 1150, 1151, 1152, 0, 596, 0, 588, 589, 590,
	1161, 591, 1162, 1079, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	1123, 606, 0, 0, 607, 608, 609, 666, 1146, 1183,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1101, 1073, 1074,
	1075, 1071, 1072, 1084, 0, 2590, 0, 0, 0, 0,
	0, 0, 2588, 2589, 271, 273, 272, 274, 275, 276,
	277, 1085, 278, 279, 0, 1083, 0, 0, 0, 1125,
	1089, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 1138, 0, 288, 1145, 289, 1144,
	0, 1155, 290, 291, 292, 293, 294, 295, 1091, 1124,
	0, 296, 1185, 1186, 627, 0, 297, 298, 1131, 0,
	1112, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120,
	324, 325, 326, 327, 328, 1148, 329, 1142, 1141, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1133, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1068, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1156, 1157, 360,
	1080, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1140, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 1153, 1154, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1163, 0, 1090, 379,
	0, 380, 381, 382, 383, 384, 1126, 1127, 1130, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1168, 395,
	1135, 1136, 0, 1096, 0, 397, 398, 1170, 1128, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1164, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 1119, 1118, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	0, 270, 1177, 460, 461, 1081, 1129, 462, 1143, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 1158, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1159, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1139, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 3036, 3037, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1122, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 1137, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1184, 568, 569, 570, 571, 1160, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1149, 1150, 1151, 1152,
	0, 596, 0, 588, 589, 590, 1161, 591, 1162, 1079,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 1123, 606, 0, 0,
	607, 608, 609, 666, 1146, 1183, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1101, 1073, 1074, 1075, 1071, 1072, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2076,
	271, 273, 272, 274, 275, 276, 277, 1085, 278, 279,
	0, 1083, 0, 0, 0, 1125, 1089, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 0,
	1138, 0, 288, 1145, 289, 1144, 0, 1155, 290, 291,
	292, 293, 294, 295, 1091, 1124, 1058, 296, 1185, 1186,
	627, 0, 297, 298, 1131, 0, 1112, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 4497, 1115,
	1113, 1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327,
	328, 1148, 329, 1142, 1141, 1062, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1068, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1156, 1157, 360, 1080, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1140, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1153,
	1154, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1163, 0, 1090, 379, 0, 380, 381, 382,
	383, 384, 1126, 1127, 1130, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1168, 395, 1135, 1136, 0, 1096,
	0, 397, 398, 0, 1128, 0, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1164, 1173, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 1119,
	1118, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 1059, 270, 0, 460,
	461, 1081, 1129, 462, 1143, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 1158, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1159, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1139, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 1069, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1122, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 1137, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1184, 568, 569, 570,
	571, 1160, 575, 576, 0, 577, 578, 1057, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1149, 1150, 1151, 1152, 0, 596, 0, 588,
	589, 590, 1161, 591, 1162, 1079, 592, 593, 594, 595,
	0, 4496, 598, 0, 1063, 599, 600, 601, 603, 604,
	602, 605, 1123, 606, 0, 0, 607, 608, 609, 666,
	1146, 1183, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 1223, 0, 0, 1054, 1055, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 0, 0, 1083, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1125, 0, 0, 0, 0, 280, 281,
	1165, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 1124, 0, 296, 625, 626, 627, 0,
	297, 298, 1131, 0, 1112, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1166, 321, 322, 323, 1115, 1113, 1114,
	1121, 1117, 1116, 1120, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1156, 1157, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1167, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1163, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	1126, 1127, 1130, 463, 1169, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1168, 395, 642, 643, 0, 644, 0, 397,
	398, 1170, 1128, 1171, 399, 400, 401, 1172, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1209, 409,
	411, 410, 0, 412, 1164, 1173, 413, 414, 1174, 0,
	415, 0, 0, 0, 416, 417, 420, 1119, 1118, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1175, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1176, 459, 449, 0, 270, 1177, 460, 461, 0,
	1129, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	1215, 468, 469, 470, 0, 0, 471, 472, 649, 1178,
	473, 1179, 1158, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1159, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1180, 525, 526, 527, 528, 656, 1217, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 1122, 551,
	552, 534, 535, 553, 554, 1181, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 1160,
	575, 576, 0, 577, 578, 0, 574, 565, 232, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	1161, 591, 1162, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	1123, 606, 0, 0, 607, 608, 609, 1581, 667, 668,
	0, 611, 610, 612, 669, 1223, 613, 0, 0, 0,
	224, 614, 615, 670, 616, 617, 618, 0, 0, 225,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1125, 0, 1213,
	0, 1918, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 1124, 0, 296,
	625, 626, 627, 0, 297, 298, 1131, 0, 1112, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1166, 321, 322,
	323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1156, 1157, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1167, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1163, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1126, 1127, 1130, 463, 1169, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1168, 395, 642, 643,
	0, 644, 0, 397, 398, 1170, 1128, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1209, 409, 411, 410, 0, 412, 1164, 1173,
	413, 414, 1174, 0, 415, 0, 0, 0, 416, 417,
	420, 1119, 1118, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 0, 270,
	1177, 460, 461, 0, 1129, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 1215, 468, 469, 470, 0, 0,
	471, 472, 649, 1178, 473, 1179, 1158, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1159,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1180, 525, 526, 527, 528,
	656, 1217, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 1122, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 1160, 575, 576, 0, 577, 578, 0,
	574, 565, 232, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 1161, 591, 1162, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 1123, 606, 0, 0, 607, 608,
	609, 1581, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 224, 614, 615, 670, 616, 617,
	618, 0, 0, 225, 0, 0, 0, 3196, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 1918, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1125, 0, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 1124, 0, 296, 625, 626, 627, 0, 297, 298,
	1131, 0, 1112, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117,
	1116, 1120, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1156,
	1157, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1163, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1126, 1127,
	1130, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1168, 395, 642, 643, 0, 644, 0, 397, 398, 1170,
	1128, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1209, 409, 411, 410,
	0, 412, 1164, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 1119, 1118, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 0, 270, 1177, 460, 461, 0, 1129, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 1215, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	1158, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1159, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 656, 1217, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1122, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 1160, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 1161, 591,
	1162, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 1123, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 0, 1205, 0, 1223, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 1213, 0, 1211,
	1125, 0, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	1124, 0, 296, 625, 626, 627, 0, 297, 298, 1131,
	0, 1112, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 1115, 1113, 1114, 1121, 1117, 1116,
	1120, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1156, 1157,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1163, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1126, 1127, 1130,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1168,
	395, 642, 643, 0, 644, 0, 397, 398, 1170, 1128,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1209, 409, 411, 410, 0,
	412, 1164, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 1119, 1118, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 0, 270, 1177, 460, 461, 0, 1129, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 1215, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 1158,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1159, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 656, 1217, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1122, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 1160, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 1161, 591, 1162,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 1123, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1223, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1125, 0, 1213, 0, 1211, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 1124, 0, 296, 625, 626, 627,
	0, 297, 298, 1131, 0, 1112, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 1115, 1113,
	1114, 1121, 1117, 1116, 1120, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1156, 1157, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1163, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 1126, 1127, 1130, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1168, 395, 642, 643, 0, 644, 0,
	397, 398, 1170, 1128, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1209,
	409, 411, 410, 0, 412, 1164, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 1119, 1118,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 0, 270, 1177, 460, 461,
	0, 1129, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 1215, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 1158, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1159, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 656, 1217, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1122,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	1160, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 1161, 591, 1162, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 1123, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1223, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1125, 0,
	1213, 0, 1211, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 1124, 0,
	296, 625, 626, 627, 0, 297, 298, 1131, 0, 1112,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1156, 1157, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1163, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1126, 1127, 1130, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1168, 395, 642,
	643, 0, 644, 0, 397, 398, 1170, 1128, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1164,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 1119, 1118, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 0,
	270, 1177, 460, 461, 0, 1129, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 1158, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1159, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1122, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 1160, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 1161, 591, 1162, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 1123, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1223, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1125, 0, 0, 0, 3987, 280, 281, 1165,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 1124, 0, 296, 625, 626, 627, 0, 297,
	298, 1131, 0, 1112, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1166, 321, 322, 323, 1115, 1113, 1114, 1121,
	1117, 1116, 1120, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1156, 1157, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1167, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1163,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1126,
	1127, 1130, 463, 1169, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1168, 395, 642, 643, 0, 644, 0, 397, 398,
	1170, 1128, 1171, 399, 400, 401, 1172, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1164, 1173, 413, 414, 1174, 0, 415,
	0, 0, 0, 416, 417, 420, 1119, 1118, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1175, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1176, 459, 449, 0, 270, 1177, 460, 461, 0, 1129,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1178, 473,
	1179, 1158, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1159, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1180, 525, 526, 527, 528, 656, 1217, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1122, 551, 552,
	534, 535, 553, 554, 1181, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 1160, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 1161,
	591, 1162, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 1123,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1047, 613, 1304, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	1817, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1309,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1168, 395, 642,
	643, 0, 644, 0, 397, 398, 1170, 645, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 0,
	0, 1177, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 232, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 1581, 667, 668, 0, 611, 610, 612, 669,
	1578, 613, 1304, 0, 0, 224, 614, 615, 670, 616,
	617, 618, 0, 0, 225, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 186, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1309, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1168, 395, 642, 643, 0, 644, 0,
	397, 398, 1170, 645, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 0, 0, 1177, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 232,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 1581, 667,
	668, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 224, 614, 615, 670, 616, 617, 618, 1304, 1303,
	225, 0, 0, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 186, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 1309, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1168,
	395, 642, 643, 0, 644, 0, 397, 398, 1170, 645,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 0, 0, 1177, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1304, 1303, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1603, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 1309, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1168, 395, 642, 643, 0,
	644, 0, 397, 398, 1170, 645, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 0, 0, 1177,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1304, 1303, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 3479, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 1165,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 1309, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1166, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1167, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1169, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1168, 395, 642, 643, 0, 644, 0, 397, 398,
	1170, 645, 1171, 399, 400, 401, 1172, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 1173, 413, 414, 1174, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1175, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1176, 459, 449, 0, 0, 1177, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1178, 473,
	1179, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	2258, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1180, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1181, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1304, 2172, 0, 0,
	0, 0, 2173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1603, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1309,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1168, 395, 642,
	643, 0, 644, 0, 397, 398, 1170, 645, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 2171, 411, 410, 0, 412, 646,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 0,
	0, 1177, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1304, 1303, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1603, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1309, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1168, 395, 642, 643, 0, 644, 0,
	397, 398, 1170, 645, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 0, 0, 1177, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1223, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1125, 0,
	0, 0, 1587, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 1124, 0,
	296, 625, 626, 627, 0, 297, 298, 1131, 0, 1112,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 1115, 1113, 1114, 1121, 1117, 1116, 1120, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1156, 1157, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1163, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1126, 1127, 1130, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1168, 395, 642,
	643, 0, 644, 0, 397, 398, 1170, 1128, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1164,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 1119, 1118, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 0,
	270, 1177, 460, 461, 0, 1129, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 1158, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1159, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1122, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 1160, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 1161, 591, 1162, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 1123, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1047, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 232,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 1581, 667,
	668, 0, 611, 610, 612, 669, 265, 613, 0, 0,
	0, 224, 614, 615, 670, 616, 617, 618, 0, 0,
	225, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 186, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 265, 2949, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 1932, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 265, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 4653, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 3429, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1575, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 265, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 2937, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 265, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 3585, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 888, 613, 793, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 2249, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 800, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	886, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 798, 579, 580, 581, 582,
	583, 799, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 791, 613, 793, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 803, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	800, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 798, 579, 580, 581, 582, 583, 799, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 1971, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 0,
	1977, 0, 288, 1967, 289, 1983, 0, 1990, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 1993, 1994,
	0, 0, 297, 298, 0, 0, 1309, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 1148, 329, 1981, 1980, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1133, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 0, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 1979, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 1988,
	1989, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 0, 380, 381, 382,
	383, 384, 0, 0, 0, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1168, 395, 1974, 1975, 0, 1970,
	0, 397, 398, 1170, 0, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 0, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 0, 0, 1177, 460,
	461, 0, 0, 462, 1982, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	0, 1178, 473, 1179, 0, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 1964,
	486, 487, 488, 1965, 489, 490, 491, 0, 492, 0,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1978, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 0, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 1976, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1992, 568, 569, 570,
	571, 0, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1984, 1985, 1986, 1987, 0, 596, 0, 588,
	589, 590, 0, 591, 0, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 0,
	1968, 1991, 0, 611, 610, 612, 0, 0, 613, 0,
	0, 793, 0, 614, 615, 0, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 1958, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 800, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 798, 579,
	580, 581, 582, 583, 799, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	793, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 803, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 800, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 2292, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 2293, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 798, 579, 580,
	581, 582, 583, 799, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 2294, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 2041, 613, 1304, 2008, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 803, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1309,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 2005, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1168, 395, 642,
	643, 0, 644, 0, 397, 398, 1170, 645, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 0,
	0, 1177, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 2006, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	2002, 613, 1304, 2008, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1309, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 2005, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1168, 395, 642, 643, 0, 644, 0,
	397, 398, 1170, 645, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 0, 0, 1177, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 2006,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 793, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 800, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 1997, 541, 542, 543,
	544, 0, 1998, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 798, 579,
	580, 581, 582, 583, 799, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 1996, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	793, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 803, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 800, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 1949, 541, 542, 543, 544,
	0, 1950, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 798, 579, 580,
	581, 582, 583, 799, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 1948, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 0, 613, 1304, 2008, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 803, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1165, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1309,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1166, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 2005, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1167,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1169,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1168, 395, 642,
	643, 0, 644, 0, 397, 398, 1170, 645, 1171, 399,
	400, 401, 1172, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1173, 413, 414, 1174, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1175, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1176, 459, 449, 0,
	0, 1177, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1178, 473, 1179, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1180, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 2006, 551, 552, 534, 535, 553, 554,
	1181, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1304, 1303, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1165, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1309, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1166, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1167, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1169, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1168, 395, 642, 643, 0, 644, 0,
	397, 398, 1170, 645, 1171, 399, 400, 401, 1172, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1173, 413, 414, 1174,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1175,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1176, 459, 449, 0, 0, 1177, 460, 461,
	3773, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1178, 473, 1179, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1180, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1181, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1304, 1303,
	0, 0, 0, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1165, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 1309, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1166, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1167, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1169, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1168,
	395, 642, 643, 0, 644, 0, 397, 398, 1170, 645,
	1171, 399, 400, 401, 1172, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 1173, 413, 414, 1174, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1175, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1176, 459,
	449, 0, 0, 1177, 460, 461, 3400, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1178, 473, 1179, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1180, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1181, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1631, 0, 1304, 1303, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1309, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1166, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 1630, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1167, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1169, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1168, 395, 642, 643,
	0, 644, 0, 397, 398, 1170, 645, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 1173,
	413, 414, 1174, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 0, 0,
	1177, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1178, 473, 1179, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 1629, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1180, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 1628, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1549, 0, 1304, 1303, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 1309, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1548, 640, 641, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1168, 395, 642, 643, 0, 644,
	0, 397, 398, 1170, 645, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 0, 0, 1177, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1509,
	0, 1304, 1303, 0, 0, 0, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	1165, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 1309, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1166, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1167, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1169, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1168, 395, 642, 643, 0, 644, 0, 397,
	398, 1170, 645, 1171, 399, 400, 401, 1172, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 1173, 413, 414, 1174, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1175, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1176, 459, 449, 0, 0, 1177, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1178,
	473, 1179, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1180, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1181, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1477, 0, 1304,
	1303, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 1309, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1476, 640,
	641, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1168, 395, 642, 643, 0, 644, 0, 397, 398, 1170,
	645, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 0, 0, 1177, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1298, 0, 1304, 1303, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 1165, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	1309, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1166,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1167, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 1297, 640, 641, 463,
	1169, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1168, 395,
	642, 643, 0, 644, 0, 397, 398, 1170, 645, 1171,
	399, 400, 401, 1172, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 1173, 413, 414, 1174, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1175, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1176, 459, 449,
	0, 0, 1177, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1178, 473, 1179, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1180, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1181, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1304, 1303, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1165, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 1309, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1166, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1167, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 1169, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1168, 395, 642, 643, 0, 644,
	0, 397, 398, 1170, 645, 1171, 399, 400, 401, 1172,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 1173, 413, 414,
	1174, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1175, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1176, 459, 449, 0, 0, 1177, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1178, 473, 1179, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1180, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1181, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 1304,
	2008, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 1165, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 1309, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1166, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 2048, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1167, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1169, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1168, 395, 642, 643, 0, 644, 0, 397, 398, 1170,
	645, 1171, 399, 400, 401, 1172, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 1173, 413, 414, 1174, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1175, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1176,
	459, 449, 0, 0, 1177, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1178, 473, 1179,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1180,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1181, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 1304, 1303, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1165, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1309, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1166, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1167, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1169, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1168, 395, 642, 643,
	0, 644, 0, 397, 398, 1170, 645, 1171, 399, 400,
	401, 1172, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 1173,
	413, 414, 1174, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1175, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1176, 459, 449, 0, 0,
	1177, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1178, 473, 1179, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1180, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1181,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 1304, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1165, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 1309, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1166, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1167, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1169, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1168, 395, 642, 643, 0,
	644, 0, 397, 398, 1170, 645, 1171, 399, 400, 401,
	1172, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 1173, 413,
	414, 1174, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1175, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1176, 459, 449, 0, 0, 1177,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1178, 473, 1179, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1180, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1181, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 2756, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 2753, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	2760, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 2962, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 2759, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 2959, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 2961, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	2958, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 2758, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 2960, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	2756, 297, 298, 628, 0, 0, 2750, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 2753, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 2760,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 2759, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 2749, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 2758, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 2757, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1702, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 1701, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 1705,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 1703, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 1704, 610,
	612, 669, 1451, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1453, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 1215, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1448, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1450,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 1215,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1355, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1357, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 1215, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	702, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 701, 276, 277, 691, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	694, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 695,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 696, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 690, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 691, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 694, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 695, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 696, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 1215, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 3350, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	2907, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 2906, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 2264, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 2205, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 2212, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 2211, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 2198, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 2200, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 2168, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 1215, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1553, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1552, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1468, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1461, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1463, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1288, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 1287, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1278, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1277, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1275, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1274, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1270, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1269,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 672, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	256, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 694, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 695, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	696, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 2301, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2299, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 2297, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 2218, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 2027, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 2021, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 875, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 874, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 873, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 2962, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 4055, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 759, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1325, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 1323, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 760, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	756, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	1326, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 755, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 759,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	1325, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 1323, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 760, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 756, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 1326, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	755, 661, 662, 663, 0, 596, 0, 588, 1324, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 681, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 680, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 679, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 265, 2949, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 265,
	4065, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 4326, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 3964, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 3741, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 2642,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 265, 2949, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 2946, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 2274, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 2262, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	759, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 749, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 760, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 756, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 1586, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 755, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1559, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1558, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1543, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1541, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1536, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 1513, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1511, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	1474, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 1456, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 1293, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1292, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 1284, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1283,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 1237, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 765, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 759, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 749, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 747, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 748, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	760, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 750,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 756,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 751,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 755, 661, 662, 663, 0, 596, 0,
	588, 753, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 741, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	742, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 704, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	698, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 676, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 3449, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 3386, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 3315, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 3313, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 3298, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	2917, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	742, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 2236, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 0, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1255, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 1188,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 0, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 0, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 0, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 0, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1751, 1752, 0, 1784, 1785, 1786, 1794, 1795,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1782, 0, 0, 0, 0,
	1751, 1752, 1754, 1784, 1785, 1786, 1794, 1795, 1796, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1782, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 1753, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1777, 1778, 1779, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	1777, 1778, 1779, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 1781, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1791, 1798, 0, 1801,
	0, 0, 0, 0, 1768, 1769, 1781, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 1797, 0, 1798, 0, 0, 0, 0,
	0, 0, 1768, 1769, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 1752, 0, 1784, 1785, 1786, 1794,
	1795, 1796, 1775, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 1787, 1782, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 1792,
	1775, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 1765, 1766, 1772, 1793,
	1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757, 1758,
	1760, 1761, 1776, 1777, 1778, 1779, 4312, 0, 0, 1790,
	0, 0, 1759, 0, 1765, 1766, 1772, 1793, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 0, 1751, 1752, 4311, 1784, 1785, 1786, 1794, 1795,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 1801, 0, 1787, 1782, 0, 0, 0, 1781,
	1783, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 1797, 0, 1798, 0,
	0, 0, 0, 0, 0, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 1774, 0,
	1751, 1752, 0, 1784, 1785, 1786, 1794, 1795, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1782, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 1776, 1777, 1778, 1779, 1773, 0, 0, 0, 0,
	0, 1759, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 1801, 1780, 0, 0, 0, 0, 0, 1781, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 1797, 0, 1798, 0, 0,
	0, 0, 0, 0, 1768, 1769, 0, 0, 0, 1776,
	1777, 1778, 1779, 0, 0, 0, 0, 0, 0, 1759,
	1792, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 1751,
	1752, 0, 1784, 1785, 1786, 1794, 1795, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 1801,
	0, 1787, 1782, 0, 0, 0, 1781, 1783, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	1799, 0, 0, 1797, 0, 1798, 0, 0, 0, 0,
	0, 0, 1768, 1769, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 1790, 1770, 0, 1774, 0, 1765, 1766, 1772,
	1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757,
	1758, 1760, 1761, 0, 0, 0, 0, 4140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 1777,
	1778, 1779, 0, 0, 0, 0, 0, 0, 1759, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 1752, 0, 1784, 1785, 1786, 1794, 1795, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1782, 0, 1791, 0, 0, 1801, 1780,
	1754, 0, 0, 0, 0, 1781, 1783, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 1797, 0, 1798, 0, 0, 0, 0, 0,
	0, 1768, 1769, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 1792, 0, 1789,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 1774, 0, 1765, 1766, 1772, 1793,
	1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757, 1758,
	1760, 1761, 0, 0, 0, 0, 3983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 1776,
	1777, 1778, 1779, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 1765, 1766, 1772, 1793, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 0, 0, 0, 3919, 0, 1791, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 1781, 1783, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 1798, 0, 0, 0, 1775,
	0, 0, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 1751, 1752, 1792, 1784, 1785, 1786,
	1794, 1795, 1796, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 1782, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 1765, 1766, 1772, 1793, 1771, 1767, 0,
	1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 0,
	0, 0, 0, 3918, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 1776, 1777, 1778, 1779, 0, 0, 0,
	0, 0, 0, 1759, 0, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 1782, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	1791, 0, 0, 1801, 1800, 0, 0, 0, 0, 0,
	1781, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 1798,
	1753, 0, 0, 0, 0, 0, 1768, 1769, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 1765, 1766, 1772, 1793, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 0, 0, 0, 3917, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1777, 1778, 1779, 0, 0,
	1788, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1751, 1752, 1801, 1784, 1785, 1786, 1794, 1795,
	1796, 1781, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 1787, 1782, 0, 0, 1797, 0,
	1798, 0, 1754, 0, 0, 0, 0, 1768, 1769, 0,
	0, 1800, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	1774, 1792, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1777, 1778, 1779, 0, 0, 0, 0, 0,
	0, 1759, 0, 1790, 0, 0, 0, 0, 1765, 1766,
	1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756,
	1757, 1758, 1760, 1761, 1780, 0, 0, 0, 3590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 1801, 0, 0, 0, 1775, 0, 0, 1781, 1783,
	0, 0, 0, 0, 0, 0, 1751, 1752, 0, 1784,
	1785, 1786, 1794, 1795, 1796, 1797, 0, 1798, 0, 0,
	0, 0, 1792, 0, 1768, 1769, 0, 0, 1787, 1782,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 1789, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0, 3116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 1777, 1778, 1779, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 1751, 1752, 0, 1784, 1785, 1786, 1794,
	1795, 1796, 1791, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 1781, 1783, 0, 1787, 1782, 0, 0, 1792,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 1797,
	0, 1798, 1800, 0, 0, 0, 0, 0, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 1774, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 1765, 1766, 1772, 1793,
	1771, 1767, 1788, 1764, 1762, 1763, 1755, 1756, 1757, 1758,
	1760, 1761, 0, 0, 0, 0, 3115, 0, 0, 0,
	0, 0, 1776, 1777, 1778, 1779, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 1751, 1752, 0, 1784,
	1785, 1786, 1794, 1795, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 1782,
	0, 0, 0, 0, 0, 1780, 1754, 0, 0, 1791,
	0, 0, 1801, 0, 0, 1800, 0, 0, 0, 1781,
	1783, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 1798, 0,
	0, 1753, 0, 0, 0, 1768, 1769, 0, 0, 0,
	0, 1773, 0, 1792, 0, 0, 0, 0, 0, 0,
	1770, 0, 0, 1789, 0, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 1782, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1776, 1777, 1778, 1779, 1788,
	1773, 0, 0, 0, 0, 1759, 0, 0, 0, 1770,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763,
	1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0,
	3114, 0, 1791, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 1781, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 1797,
	0, 1798, 0, 0, 0, 0, 0, 0, 1768, 1769,
	0, 0, 0, 1775, 1776, 1777, 1778, 1779, 0, 0,
	0, 0, 0, 0, 1759, 4567, 1789, 0, 1751, 1752,
	0, 1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0,
	1792, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 1782, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 1791, 0, 0, 1801, 0, 0, 1800, 0, 0,
	0, 1781, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 1797, 0,
	1798, 0, 0, 1753, 0, 0, 0, 1768, 1769, 0,
	0, 0, 1788, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 1765, 1766, 1772,
	1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757,
	1758, 1760, 1761, 0, 0, 1780, 0, 3113, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 1776, 1777, 1778,
	1779, 1788, 0, 0, 0, 0, 0, 1759, 0, 3176,
	0, 0, 0, 3175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4566, 0, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 1791, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 1781, 1783, 0, 1787, 1782, 0,
	0, 0, 0, 3051, 1780, 1754, 0, 0, 0, 0,
	0, 1797, 0, 1798, 1800, 0, 0, 0, 0, 0,
	1768, 1769, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 1792, 1774, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763,
	1755, 1756, 1757, 1758, 1760, 1761, 0, 0, 3080, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 3052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1777, 1778, 1779, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761, 0, 0, 1780, 0, 0,
	0, 1791, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 1781, 1783, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	1798, 0, 0, 0, 0, 0, 0, 1768, 1769, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	2615, 0, 0, 0, 0, 1789, 0, 1751, 1752, 0,
	1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	1782, 0, 0, 0, 2614, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764,
	1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 1776, 1777, 1778, 1779,
	0, 0, 0, 0, 0, 0, 1759, 0, 1751, 1752,
	0, 1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	1787, 1782, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 1791, 0, 0, 1801, 1800, 0, 0,
	0, 0, 0, 1781, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 1798, 1753, 0, 0, 0, 0, 0, 1768,
	1769, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 1777, 1778,
	1779, 0, 0, 1788, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 1791, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 1781, 1783, 0, 1787, 1782, 0,
	0, 0, 0, 0, 0, 1754, 1780, 0, 0, 0,
	0, 1797, 0, 1798, 1800, 0, 0, 0, 0, 0,
	1768, 1769, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 1774, 1792, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 1044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1777, 1778, 1779, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 1780, 0, 0,
	0, 1791, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 1781, 1783, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	1798, 0, 0, 0, 0, 0, 0, 1768, 1769, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 1751, 1752, 0,
	1784, 1785, 1786, 1794, 1795, 1796, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	1782, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764,
	1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 1776, 1777, 1778, 1779,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	1751, 1752, 3182, 1784, 1785, 1786, 1794, 1795, 1796, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1782, 0, 0, 0, 3177, 0, 0,
	1754, 0, 0, 1791, 0, 0, 1801, 0, 0, 1800,
	0, 0, 0, 1781, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3571, 0, 0, 0, 0,
	1797, 0, 1798, 0, 0, 1753, 0, 0, 0, 1768,
	1769, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	1777, 1778, 1779, 1788, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1752, 0, 1784, 1785, 1786, 1794, 1795,
	1796, 0, 0, 0, 0, 0, 1791, 0, 0, 1801,
	0, 0, 0, 0, 1787, 1782, 1781, 1783, 0, 0,
	0, 0, 1754, 0, 0, 0, 1780, 0, 0, 0,
	0, 1800, 0, 1797, 0, 1798, 0, 0, 0, 0,
	0, 0, 1768, 1769, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 1792, 1774, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1777, 1778, 1779, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 1765, 1766, 1772, 1793, 1771, 1767, 0, 1764, 1762,
	1763, 1755, 1756, 1757, 1758, 1760, 1761, 0, 1791, 1780,
	0, 1801, 0, 0, 0, 0, 0, 0, 1781, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 1797, 0, 1798, 0, 0,
	0, 0, 0, 0, 1768, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 1789, 0, 1751, 1752, 0, 1784, 1785, 1786,
	1794, 1795, 1796, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 1782, 0, 0,
	0, 3117, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3144, 1790,
	0, 0, 0, 0, 1765, 1766, 1772, 1793, 1771, 1767,
	0, 1764, 1762, 1763, 1755, 1756, 1757, 1758, 1760, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 1776, 1777, 1778, 1779, 0, 0, 0,
	0, 0, 0, 1759, 0, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 1787, 1782, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	1791, 0, 0, 1801, 1800, 0, 0, 0, 0, 0,
	1781, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 1798,
	1753, 0, 0, 0, 0, 0, 1768, 1769, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 1765, 1766, 1772, 1793,
	1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757, 1758,
	1760, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1777, 1778, 1779, 0, 0,
	1788, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1752, 0, 1784, 1785, 1786, 1794, 1795,
	1796, 1791, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 1781, 1783, 0, 1787, 1782, 0, 0, 0, 0,
	0, 0, 1754, 1780, 0, 0, 0, 0, 1797, 0,
	1798, 1800, 0, 0, 0, 0, 0, 1768, 1769, 0,
	0, 0, 0, 0, 1775, 1751, 1752, 0, 1784, 1785,
	1786, 1794, 1795, 1796, 0, 1789, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1782, 0,
	1774, 1792, 0, 0, 0, 1754, 1770, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1777, 1778, 1779, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 1765, 1766,
	1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755, 1756,
	1757, 1758, 1760, 1761, 1780, 0, 0, 0, 1791, 0,
	0, 1801, 0, 0, 1776, 1777, 1778, 1779, 1781, 1783,
	0, 0, 0, 0, 1759, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 1798, 0, 0,
	0, 0, 0, 0, 1768, 1769, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1789, 0, 1801, 0, 0, 0, 0, 0,
	0, 1781, 1783, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 1765, 1766, 1772, 1793,
	1771, 1767, 0, 1764, 1762, 1763, 1755, 1756, 1757, 1758,
	1760, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 1765,
	1766, 1772, 1793, 1771, 1767, 0, 1764, 1762, 1763, 1755,
	1756, 1757, 1758, 1760, 1761,
}

var sqlPact = [...]int{
	254, -1000, -1000, -1000, -1000, 196, -1000, -1000, 189, 186,
	185, 183, 182, 181, 179, 175, 172, 171, 169, -1000,
	-1000, -1000, -1000, -1000, -1000, 168, -1000, -1000, 163, -1000,
	162, 160, 157, -1000, -1000, 155, -1000, 153, -1000, -1000,
	-1000, -1000, 152, 151, 150, 89438, 88892, 89977, 2231, 110074,
	96473, 1995, 80184, 109528, 79638, 108982, 2023, 10808, 108436, 2659,
	148, -1000, 107890, 145, 144, 143, -1000, 107344, -1000, 1973,
	-1000, 142, -1000, 6077, 64860, 141, 136, 135, 2854, 134,
	-1000, 127, 125, -1000, -1000, 123, -1000, 11845, 1606, -1000,
	122, 121, -1000, 335, 94296, 120, 118, 2320, 116, 114,
	64314, 113, 107, 2295, 2838, -1000, -1000, 1947, -1000, -1000,
	104, 103, 102, 100, 99, 98, 96, 95, 93, 92,
	91, -1000, 89, 88, 87, 85, 81, -1000, 79, 78,
	75, -1000, 74, -1000, 73, 71, 70, 65, 63, 61,
	59, 58, 56, 54, 53, 52, 45, 44, 15132, -1000,
	-1000, 1863, 1646, 1630, 1616, 1611, 1610, 889, 43, 42,
	41, 40, 39, 38, 37, 35, 34, 30, 29, 27,
	26, 25, 24, 20, 19, 176, 18, 17, 14, 13,
	12, 11, 9, 2738, -1000, 1474, 1505, 30339, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 116003, 110613, 8, -94, 7, -1000,
	3272, 1013, 53374, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 257, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 468, 2009, 707, -1000, -1000, -1000, 106805,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2230, -40,
	-1000, 1890, -1000, -1000, -1000, -1000, -1000, 705, -1000, 2228,
	154, 2148, -1000, -1000, -1000, 3326, 2365, 3714, 3712, 3710,
	3709, 3708, 115464, 1754, 3707, 2433, 3706, 3705, 3704, 3703,
	3701, 3700, 3699, -1000, 88346, 1001, 87800, 87254, 3348, 106266,
	86708, 105720, 73643, 45453, 1494, 3322, -1000, -1000, -1000, -1000,
	-1000, -1000, 110613, -1000, 987, -1000, -1000, 3698, 3697, 2027,
	704, 95927, -1000, 1810, -1000, 828, 32058, -1000, 1144, -1000,
	32058, 256, -1000, -1000, -1000, -1000, -1000, -1000, 3695, 3693,
	3692, 3691, 3690, -1000, -1000, 79092, 23411, 78546, 78000, 105174,
	22853, 86162, 85616, 3689, 3688, 3686, 3685, 104628, 73085, 985,
	1382, -1000, -1000, -1000, -1000, -1000, -1000, -15, 70853, 3481,
	110613, -1000, 253, -1000, -1000, -1000, -1000, -1000, -1000, 44868,
	966, 44283, 778, 43698, 690, -1000, -1000, -1000, -1000, 72527,
	-1000, 104082, 2315, 3684, 3683, 1094, 3681, 3223, 1688, 3680,
	1757, 1177, 3677, 3676, 3675, 3674, 3673, 3672, 3671, 1418,
	103536, 2928, 1467, 102990, 1667, 71969, 983, 85070, 89977, 2586,
	102444, 1350, 1343, -1000, -1000, -1000, -1000, 3039, 2824, 2806,
	1285, -1000, -1000, -1000, -1000, 56098, 6417, 5493, -1000, -1000,
	11337, 101898, 58878, 89977, 89977, -1000, -1000, -1000, -1000, -1000,
	43113, 606, 42528, 1464, -1000, -1000, 56654, 2867, -1000, -1000,
	-1000, -1000, 41943, 511, 41358, 995, 110613, -1000, 2927, 1867,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2504, 1619, 3496, 2691,
	71411, 2020, 1309, 3292, 3038, 3037, 1429, 3035, 3670, 2505,
	3033, 3031, 3030, 3028, 3027, 1231, 2512, 469, 29754, 2905,
	1593, 40773, 1468, 1414, 3025, 3021, 3510, 1878, 1937, 1950,
	77454, 3669, 3668, 3243, 3017, 3016, 2737, 3009, -1000, 2863,
	1384, -1000, -1000, -1000, -1000, 1375, -1000, -1000, -1000, -1000,
	80723, -1000, -1000, 1781, -1000, -1000, 1781, -1000, -1000, -1000,
	-1000, -1000, 1232, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1474, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2274, -1000, 2022, -1000, -1000,
	2405, 3256, 3256, 3256, 3321, 440, 429, -1000, 176, -1000,
	-1000, 121534, -1000, -1000, 46026, 46026, 46026, 46026, 46026, 46026,
	46026, 2048, -1000, 702, -1000, -1000, 731, -1000, 700, 567,
	-1000, -1000, -1000, -1000, -1000, -1000, 697, -1000, -1000, -1000,
	-1000, -1000, -1000, 3481, -1000, 26256, -1000, -1000, -1000, 422,
	696, 46026, -1000, -1000, 3537, 3536, 1005, -1000, 250, 860,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2925, 695, 692, -1000, 684, 682, 674, 673,
	671, -1000, -1000, -1000, 670, 669, 667, 664, 660, 658,
	657, 654, -1000, 1906, -1000, -1000, -1000, -1000, -1000, -1000,
	616, 612, 612, 612, -1000, 976, -1000, -1000, -1000, 330,
	611, 327, 610, 607, 605, -1000, 653, 651, 650, 649,
	648, 644, 642, 641, 636, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 975, -1000, -1000, -1000, -1000, -16, 110613, -1000,
	468, -16, -1000, -1000, 635, -1000, 34362, 34362, 34362, -1000,
	-1000, 2225, 46026, -1000, 2307, -1000, -9, -9, 812, 55006,
	-1000, 52261, 812, 338, 744, 60512, -1000, 2860, -1000, -1000,
	630, 246, -1000, -1000, -1000, -1000, 23967, 2857, 110613, 110613,
	89977, 89977, 89977, 3666, 3149, 46026, -1000, -1000, 68656, 110613,
	90516, -1000, -1000, 3427, 65399, 68117, 110613, 2919, 67578, 3665,
	-1000, -1000, -1000, -1000, -1000, 3114, 3664, 3663, 3661, -1000,
	110613, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 220, 3113,
	-1000, -1000, 93750, 220, 3112, -1000, 220, 3111, -1000, 93211,
	-1000, -1000, 2143, 3110, -1000, -1000, 235, 3106, -1000, -1000,
	-1000, 226, 3105, -1000, -1000, 245, -143, 3099, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	121534, -1000, -1000, -1000, 67032, -1000, 3261, -1000, -1000, 110613,
	-1000, 46026, -1000, 3426, 1588, 74745, 3368, -37, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2409, 2507, 1042, 2260, -1000,
	3166, 2184, -1000, 32058, 3210, -1000, -1000, -1000, 237, 23967,
	-1000, -1000, -1000, -1000, -1000, -1000, 4721, 3096, 1394, -1000,
	2259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2114,
	3095, -1000, 2024, 3094, 2072, -1000, -1000, 2732, -1000, 3237,
	-1000, -1000, 2081, 3087, -6, -1000, -1000, 2652, -1000, -1000,
	-1000, -1000, -1000, 1931, -1000, 898, 3083, -1000, 84524, 58322,
	56654, 70853, -20, -1000, -1000, -1000, -1000, -239, -1000, 22295,
	121534, -1000, -1000, -1000, -1000, 1721, 121534, 875, -1000, -1000,
	3082, -1000, 121534, 865, -1000, -1000, 3081, -1000, 2917, -1000,
	-1000, 2327, -1000, -1000, 3659, -1000, -1000, 3653, -1000, 3652,
	3651, 3650, -1000, 1644, 1883, 3649, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 83985, 2221, -1000, -1000, 82893, 2916,
	-1000, 2326, 3366, -1000, 83439, 980, -1000, 898, 2325, -1000,
	92672, 885, 2323, -1000, 3648, 3332, 2647, 898, 2322, -1000,
	-1000, -1000, -1000, -1000, 971, -1000, 62141, -1000, 62141, -1000,
	1547, -1000, 114925, -9, 89977, 3481, -1000, -45, -1000, -1000,
	-1000, 1013, -1000, 55552, -1000, 55552, 95381, 74199, 869, 732,
	63768, 121534, -1000, -1000, -1000, -1000, 121534, -1000, -1000, -1000,
	-211, 2690, -1000, 74199, 57766, 121534, -1000, -1000, -1000, -1000,
	121534, -1000, -1000, -1000, 74199, 82893, -1000, 101352, 82354, -1000,
	-1000, 1383, 2437, -1000, -1000, -1000, 74199, 1188, 74199, 74199,
	74199, -1000, 100806, -1000, -1000, 1998, 1225, 3244, 1956, 89977,
	-1000, 1836, -1000, -1000, -1000, 3274, 110613, -1000, -1000, 2912,
	-1000, 66486, 92133, -1000, 91594, -1000, 91055, -1000, 89977, -1000,
	89977, -1000, 3647, 3642, 3641, -1000, -1000, 3638, -1000, 3636,
	3267, -1000, 121534, 3266, -1000, 3635, 3355, 2905, 121534, -1000,
	3008, 1620, 1614, 110613, -1000, -1000, 110613, -1000, 110613, -1000,
	-1000, -1000, 1471, -1000, -1000, 2408, -1000, -1000, -1000, -1000,
	89977, 1176, -1000, -1000, -1000, -1000, -1000, -1000, 3006, 3634,
	1689, -1000, 1635, -1000, 2836, 3279, -1000, 1352, 1618, -1000,
	-1000, 241, -1000, -1000, -37, -1000, 114386, -1000, 2405, -1000,
	110613, -1000, 2413, 2889, 2902, 1713, 2247, 2545, -1000, 40188,
	2497, 49464, 2252, 176, -1000, -1000, 176, 176, 31485, -1000,
	-1000, 65399, 65399, 23967, 1248, 46026, 46026, 46026, 46026, 46026,
	46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026,
	46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026,
	46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026,
	2306, 46026, 1229, 46026, 46026, 46026, 46026, 2178, -1000, -1000,
	1889, 501, 1997, -1000, 3473, 3473, 3473, 858, 858, 16606,
	16606, 483, 3632, 731, -1000, 46026, -1000, 31, 46026, 24525,
	-1000, 429, 9189, 2368, -1000, 428, 25110, -1000, -1000, -1000,
	26256, 567, 39603, 46026, 937, 121534, -1000, -1000, 1791, 3488,
	21738, 2937, 2721, 627, 826, 804, 29169, 28584, 27999, 27414,
	739, 46026, 46026, 46026, 46026, 46026, 46026, 46026, 46026, -1000,
	-1000, 3503, -1000, 3488, -1000, -1000, -1000, -1000, 3488, 1247,
	1243, 3488, -1000, 3488, 3488, 8675, 8675, 39030, 38445, 37860,
	50037, 37275, 46026, 26829, 36690, 36105, -1000, 110613, -16, 3425,
	46026, 147, -1000, 120106, -1000, 147, 147, 625, -50, 121534,
	2736, 2736, 53918, 2343, 2062, 2062, 2062, -1000, 812, 17253,
	812, 99721, 2085, 812, 812, 236, 240, 427, 51717, 2307,
	99721, 718, 623, 5, 4, 3, -1000, -1000, 0, -2,
	-1000, -1000, 89977, 622, 24525, 23967, 227, 1924, -51, 2524,
	2521, 2511, -1000, 2510, -1000, 1693, -52, 1228, 89977, 110613,
	3631, -44, -1000, 5604, -53, -1000, 1263, 225, 3488, -1000,
	-1000, -1000, -1000, -1000, 3630, 3629, -1000, 963, 621, 618,
	453, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 616,
	612, 612, 612, -1000, 330, 611, 327, 610, 607, 605,
	-1000, -1000, -1000, -1000, -1000, 2835, 89977, 110613, 3628, -239,
	90516, -115, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	110613, -1000, -1000, -1000, 3627, -1000, 89977, -1000, -1000, 89977,
	220, 3079, -1000, 89977, -1000, 89977, 216, 3078, -1000, -1000,
	110613, -1000, 89977, 89977, -1000, 110613, 110613, 110613, 74199, 74199,
	238, -1000, 89977, 825, -58, 1099, -37, -1000, -1000, -1000,
	1781, -1000, 1861, -1000, -1000, -1000, -1000, -1000, -1000, 1353,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1005, -1000,
	-1000, -1000, -1000, -1000, -1000, 3494, 3479, -17, -1000, -1000,
	23967, -1000, -38, 1567, 1796, 1227, -1000, 76908, 2283, 3251,
	3624, 2628, 3230, 1541, -1000, 1465, -1000, 3340, 80723, 3383,
	3416, 1260, -1000, 2830, -1000, -1000, 827, 1592, 1660, 1226,
	1224, 80723, 2024, -1000, 65399, -1000, 2547, 3319, 1345, 1355,
	1345, 1345, 1337, -1000, 80723, 1649, 1222, 1209, 1207, 1844,
	1826, -1000, -1000, 1900, -1000, 1191, 1190, 768, 1824, -1000,
	-41, 3382, 3415, 1256, -1000, 2829, 1183, -1000, -1000, -1000,
	3317, 89977, 23967, 1533, 1513, 1512, 1643, 1182, -19, -1000,
	3375, 1181, 1180, -1000, 4898, -1000, 74199, 1948, 3077, 2688,
	805, 2684, -1000, -1000, -1000, 805, -20, 70853, 110613, 222,
	-1000, 31, 46026, 46026, 31, 46026, 31, 3352, 3076, -1000,
	-1000, -1000, -1000, -1000, 3622, 1864, 2431, -1000, -1000, 604,
	2319, 2827, 110613, 2579, -22, 89977, -1000, 65947, 3075, 69202,
	2024, 2318, -1000, -1000, 81808, -1000, 3073, 468, 2317, -1000,
	672, 3621, 3069, -1000, 113847, -1000, 3261, 1189, 3067, 1057,
	639, 3424, -1000, 639, 62680, -1000, 110613, -1000, -9, 4732,
	75830, -60, -61, 411, -1000, 100267, 110613, 1056, 76369, 110613,
	3199, 891, 56654, -1000, 56654, -68, -211, 2672, 1448, 869,
	869, 805, -1000, 805, -1000, 89977, 2899, -1000, -1000, 74199,
	869, 869, 869, -1000, -1000, -1000, -1000, 3615, 3614, 3596,
	3593, -1000, -1000, 897, 89977, 110613, 89977, -1000, 218, -1000,
	110613, -1000, 110613, 110613, 89977, -1000, 897, 110613, 897, 110613,
	897, 110613, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31,
	46026, -1000, -1000, 3589, 1552, -1000, 2894, -1000, 2893, -1000,
	33, -1000, -1000, -1000, -1000, -1000, -1000, 1821, -1000, -1000,
	-1000, -1000, 89977, 89977, 89977, 89977, 110613, 3181, -1000, 110613,
	3176, 89977, -1000, -1000, 80723, -1000, 2413, 2889, -1000, -1000,
	-1000, -1000, -1000, -1000, 1489, 2154, -1000, 2479, -1000, 1495,
	-1000, -1000, -1000, 121534, 50593, -1000, -1000, 121534, 1731, -1000,
	48891, 48318, -1000, -1000, 1690, 89977, 2584, -1000, 2584, -229,
	-1000, 119844, 2472, 89977, -1000, -1000, -1000, -1000, -1000, 823,
	1145, 1145, 1271, 1271, 1271, 1271, 3362, 2057, 5379, 989,
	7112, 7112, 7942, 7942, 7942, 7942, 7942, 7112, 409, 858,
	858, 409, 409, 409, 409, 409, 858, 858, 858, 7112,
	7112, 7112, 16606, 121731, 9249, 46026, 46026, 1178, 1884, 501,
	9061, 46026, 9836, 9836, 9836, 9836, -1000, 2112, -1000, -1000,
	-1000, -1000, 2826, 603, 50037, 50037, -1000, -1000, -1000, -1000,
	25683, 46026, -1000, -1000, -1000, -1000, 35520, -1000, -1000, 119385,
	-314, 408, -226, -59, -1000, 46026, 46026, 46026, 407, -1000,
	217, 46026, 110613, -1000, 14738, 716, -196, -1000, -69, 1349,
	-1000, 46026, -1000, -1000, 1175, -1000, 1173, 1172, 1171, -1000,
	601, 405, -1000, 213, -1000, 2050, 600, 599, 46026, -1000,
	-1000, -1000, -1000, -1000, 119212, -1000, -1000, 119015, -1000, -1000,
	118791, -1000, -1000, 118584, -1000, -1000, -1000, 121363, 14285, 13834,
	12943, 8605, 12332, 11875, -71, 395, -74, 394, 822, 821,
	392, 389, 388, -77, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -79, 384, -1000, 2817,
	-226, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 382,
	-1000, 380, -1000, 121101, -226, 379, 938, -1000, 50037, 50037,
	50037, -1000, 378, -1000, 119647, -1000, 120909, 34947, 34947, 34947,
	376, 120736, 46026, -226, -82, -1000, -84, -1000, -1000, 510,
	-85, 867, 34362, 52825, 23967, -1000, 867, 867, 46026, -1000,
	46026, 2489, -1000, -1000, -1000, -1000, 2487, 2234, 2736, 53918,
	-1000, -1000, -1000, -1000, 99721, -1000, 3481, 2749, -1000, 99721,
	-1000, -1000, 110613, 468, -1000, 99721, 99721, 23967, 812, -1000,
	812, 99721, 595, -1000, -1000, -1000, -1000, -1000, 371, 59422,
	-59, 211, 23967, 898, -1000, -1000, 2599, 2599, 2599, 2599,
	-1000, -1000, 110613, 1170, -33, -212, -1000, 3447, -1000, 1932,
	-1000, 65399, -1000, 729, 1210, 23967, -1000, -1000, -1000, 583,
	-1000, 3488, 3488, -1000, 3488, 110613, 2809, 137, -1000, 126,
	69202, 69202, 3587, -1000, -1000, 220, -1000, 89977, 220, 220,
	-1000, 89977, 89977, 2143, -1000, 235, -1000, 226, -1000, -1000,
	-143, -1000, 932, 32058, -1000, 1781, -1000, -1000, 1523, -1000,
	1868, -1000, 1154, -1000, -1000, -1000, -1000, 32058, -1000, 2280,
	110613, 110613, 89977, -1000, 110613, -1000, 2002, 69202, -1000, 2316,
	113308, 2302, 65399, 110613, -1000, -1000, 582, 841, 2468, 2466,
	1043, 110613, 110613, 2460, 112769, 112230, -1000, 3584, 110613, 1964,
	46026, 3312, 2058, 2969, 31, 31, -1000, 31, 31, 31,
	-1000, 579, 1331, 89977, 89977, 110613, 69202, 89977, 1914, -1000,
	-1000, -1000, -1000, -1000, 81262, -1000, -1000, 3500, 3497, -1000,
	1345, -1000, -1000, -1000, 1345, 2024, 1879, 110613, 69202, 89977,
	69202, 110613, 110613, -1000, 1625, 110613, 1346, -1000, 768, 1963,
	31, 31, -1000, 31, 31, 31, 578, 23967, 1919, -1000,
	2913, 110613, 3532, 111691, 3531, 110613, 110613, 110613, 69202, 3247,
	110613, 110613, 69202, 4898, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 70314, 1046, 898, 1622, 1166,
	1165, 80723, 56654, 888, 56654, 2656, -1000, -1000, 21181, -1000,
	121534, 121534, -1000, 121534, -1000, 65947, 110613, -1000, 965, 110613,
	76369, 854, 3065, 61602, -239, 869, 74199, 89977, -22, 2579,
	110613, -1000, -1000, 2024, 3059, 468, 2313, -1000, 74199, 3423,
	3057, 577, 3583, 3582, -1000, 89977, 2220, 2312, -1000, -1000,
	111152, 3042, 768, 110613, 867, 53918, 1831, -1000, 59968, 1011,
	110613, 1744, 115, -1000, -1000, -1000, 16, 110613, -1000, 740,
	-1000, -1000, 4732, 4732, 869, -259, 570, -1000, 798, 794,
	57210, 74199, -87, -1000, -1000, -1000, -1000, 2302, 89977, 110613,
	1164, 2641, 110613, -95, -1000, 210, 568, -1000, 2256, -1000,
	-211, -1000, 891, 56654, 2803, 2802, -1000, -1000, 912, -1000,
	1332, 869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -10, 110613, -239, -239, -29, -33, -1000,
	897, -1000, 897, -1000, 897, -1000, 121534, -1000, -1000, 1526,
	1508, 110613, -1000, 23967, 110613, 89977, 23967, 89977, 2888, 2886,
	-1000, -1000, -1000, 110613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1069, -1000, 1731, 2153, -1000, 567, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2387, -1000, -34, 31485,
	814, -1000, -1000, 89977, -11, 46026, 46026, 7993, 7687, 46026,
	50037, 50037, -1000, 46026, 6506, -1000, -1000, -1000, -1000, -1000,
	2801, 566, 46026, 65399, 4897, 2133, -1000, 366, 11426, 409,
	-1000, 46026, -1000, 363, 33789, -1000, 120277, -66, -97, -1000,
	17823, -226, -103, -1000, -1000, 728, -1000, 3124, -1000, 46026,
	120474, 2352, 1905, 1719, 1570, 3488, 3530, 20624, -1000, 63224,
	923, 2099, 118413, -1000, -1000, -1000, -1000, 65399, 65399, 46026,
	46026, -1000, 46026, 46026, 46026, -1000, -1000, -1000, 3488, 817,
	-1000, -1000, -1000, 817, -1000, -1000, 1345, -1000, 1345, -1000,
	46026, -1000, -1000, 2775, 46026, -1000, 65399, 65399, 50037, 50037,
	50037, 50037, 50037, 50037, 50037, 50037, 50037, 50037, 50037, 50037,
	50037, 50037, 50037, 50037, 50037, 50037, 50037, 2470, 50037, 3465,
	3465, 3465, -1000, 2885, 2775, 46026, 46026, 65399, 362, 361,
	360, -1000, 46026, -226, -1000, -1000, 7012, 565, -1000, 2376,
	-1000, 2720, -1000, 46026, -1000, -105, -1000, 2307, -1000, -1000,
	2720, 2720, -109, 121534, 53918, 53918, -1000, 563, 46026, 2485,
	-1000, -1000, 715, -312, -1000, 793, -1000, -1000, -1000, -1000,
	-1000, 468, -1000, -1000, -1000, 204, 99721, 99721, 714, -1000,
	-117, -1000, -1000, -119, -1000, 3417, 359, 23967, -1000, 867,
	2643, -1000, -1000, -1000, -1000, -1000, -1000, -239, 110613, 110613,
	2132, 3529, -1000, 3492, 727, 713, 199, 3488, 353, 352,
	351, -239, 110613, 110613, 110613, -1000, -1000, -1000, -1000, 220,
	-1000, -1000, -1000, 216, -1000, -1000, -1000, -1000, 2543, -1000,
	-37, -1000, -1000, -1000, 46026, -1000, -1000, 3250, 1163, 1159,
	-1000, -1000, -1000, -1000, 2846, -1000, 3055, -1000, 2300, -1000,
	1022, -1000, 1835, -1000, 46026, 561, 2640, 556, 553, 3581,
	2079, 3580, 1047, 3040, 2143, 3032, 2143, -1000, -1000, -1000,
	831, -1000, 121534, 2058, -1000, 551, 549, -1000, -38, 1566,
	1737, 1158, 911, -1000, -1000, -1000, -1000, 46026, 46026, 99182,
	-1000, 460, 3237, -13, -1000, -1000, -1000, 1615, 1155, 1151,
	-1000, -1000, -1000, -1000, 2024, 1598, 1149, 1147, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 910, -1000, 2963, 2950, 819,
	110613, -1000, 907, -1000, -1000, -1000, -1000, 46026, -1000, -41,
	1146, 3365, 2298, 89977, -1000, 2143, 3029, 1143, -1000, 1142,
	-1000, -1000, -1000, 3372, 3370, 1150, -1000, -1000, -1000, -1000,
	-1000, 69758, -1000, 110613, 69202, 89977, 1820, 805, -1000, 2506,
	805, 888, 2773, -1000, 2578, 902, 89977, 3579, 350, -120,
	-42, 65399, 3414, -1000, 2241, 580, 89977, 813, -1000, 3481,
	-1000, -1000, -1000, 899, -1000, 3361, 89977, 3411, 3022, 898,
	31, 89977, 3508, -1000, -1000, 3410, 89977, 2991, 2210, 2293,
	2411, 768, 75291, 898, 2089, -108, -1000, 1744, 33204, 3234,
	-125, -1000, -1000, -1000, 867, 62680, 53918, 46026, 3576, -126,
	-1000, -1000, -1000, -1000, -1000, 97019, 97019, 74199, 74199, 74199,
	869, 110613, 110613, 76369, -1000, -1000, 545, 110613, 110613, 544,
	-1000, 110613, 110613, 3575, 74199, -46, 527, -1000, 792, 791,
	787, -1000, -1000, -1000, -1000, -1000, 891, -1000, -211, 56654,
	31, -1000, 2127, 89977, -1000, 20067, -1000, -1000, -1000, -1000,
	-1000, -1000, 897, -1000, -1000, 1980, 2250, 1980, 1734, 1723,
	-1000, -1000, 2135, -1000, -1000, -1000, -1000, 2553, 3249, 23967,
	3364, 9836, 46026, 46026, 5200, 1127, 282, 9836, 46026, 46026,
	65399, 121784, -128, 46026, 46026, -1000, 46026, 712, 121534, 3527,
	46026, 345, 344, -1000, -1000, -1000, 3483, -1000, -1000, -1000,
	121534, 46026, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 343,
	-1000, 198, -1000, -1000, -1000, 116542, -1000, 46026, 342, 3311,
	-1000, 341, 340, 9937, 547, 118149, 117968, 117779, 339, -1000,
	-1000, 332, 325, 121534, 2885, 121534, -1000, -1000, 921, 921,
	1316, 1316, 1316, 1316, 3465, 1060, 1431, 964, 598, 598,
	598, 467, 685, 685, 598, 598, 598, 2771, 2463, 526,
	5847, -1000, -1000, 121534, 121534, 321, -1000, -1000, -1000, -226,
	317, 7012, -1000, 2714, 3310, 121534, -1000, 53918, 2714, 2714,
	-1000, -1000, 2234, 110613, 121534, 53918, -1000, 2749, -1000, 18391,
	-1000, 23967, -1000, -1000, -1000, -1000, 3481, -1000, 59422, -1000,
	525, -1000, 138, -1000, 2643, -1000, 785, -1000, -1000, 74199,
	74199, -239, -142, -1000, -1000, 711, 3573, 726, 23967, 305,
	-1000, -1000, -1000, -239, -239, -239, -1000, -1000, -1000, 3196,
	121534, 110613, 110613, 1441, 98643, 110613, 2985, -1000, 2227, -1000,
	1043, 117691, 54462, -1000, 54462, 110613, -1000, -1000, -1000, 1807,
	1369, 3572, 1088, -1000, 3283, 110613, -1000, 110613, -1000, -1000,
	-1000, 110613, 110613, 89977, 110613, -1000, 69202, 2971, -133, 121534,
	-47, -1000, 784, -1000, 1327, -1000, 19510, 110613, 69202, 89977,
	110613, 69202, 89977, 2040, -1000, -1000, 2948, -1000, 2970, -136,
	23967, -1000, 3526, 3523, 2983, 3287, -1000, 110613, 3518, 110613,
	89977, 3195, -1000, -1000, -1000, -1000, -1000, 1597, 1140, 1139,
	888, -48, 522, -1000, 782, -1000, -1000, 781, -1000, 888,
	-1000, 74199, 56654, 3571, 468, -1000, 2618, -1000, 94835, 2158,
	31, -1000, 3569, 97565, 521, -1000, 2115, -1000, 709, -1000,
	2429, 69202, 2024, 31, 89977, -1000, -1000, 468, 295, -70,
	-1000, 3044, 1036, 23967, 89977, 2981, 2417, 768, 75291, -1000,
	1189, 2545, -1000, -102, -1000, 624, 31, 2089, -1000, -108,
	121534, -1000, 776, -1000, -141, -1000, -1000, 294, -1000, 3194,
	3193, -1000, 2744, 54462, 520, 519, 110613, 3191, -1000, -1000,
	-144, 2735, 2735, 74199, 56654, 74199, -1000, 891, 805, -1000,
	2304, -1000, -1000, -1000, -1000, -1000, 23967, 1503, -1000, 516,
	515, -1000, -1000, -1000, -1000, 3249, 9836, 9836, 46026, 46026,
	46026, 9836, 121784, -147, -1000, 9836, 9836, -226, -1000, -1000,
	120277, -1000, -1000, -1000, 121534, -1000, 18953, 2001, -1000, 117502,
	-1000, 31485, -1000, -1000, 46026, 46026, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 50037, 2770, 512, 65399, -1000, -1000,
	292, 845, 46026, 47745, 2307, 845, 845, -1000, -149, -1000,
	-1000, -1000, 3481, 138, -1000, -1000, 3567, 23967, -1000, 74199,
	-1000, -1000, 3564, 720, -1000, 3563, -1000, -1000, -1000, -1000,
	-1000, 2667, 3409, -1000, 1783, -1000, 110613, -1000, 110613, -1000,
	23967, 110613, 2772, 1162, -1000, 841, 2442, 509, 50037, 89977,
	872, -1000, 3441, 2747, -150, -1000, 110613, 46026, 110613, -155,
	-157, 2273, -1000, -1000, 1161, 46026, -1000, -1000, -1000, 65399,
	507, 2143, 2143, -158, -160, -1000, -1000, -1000, 46026, 1135,
	110613, 32631, -1000, 3561, 3237, -1000, -1000, -1000, -1000, -1000,
	-1000, 110613, -1000, 46026, 1126, -1000, -1000, -1000, 3517, 2143,
	23967, 2143, -1000, 2143, 3287, 1084, 110613, 69202, 89977, -1000,
	2523, 2523, 74199, 56654, -1000, -143, 888, -1000, 3407, 2613,
	3560, -1000, -1000, -1000, -1000, 2440, -1000, -1000, 110613, 2438,
	873, -1000, -163, -1000, 775, 774, 76369, 854, 862, -1000,
	-156, 506, -1000, 772, -1000, -1000, -1000, -1000, 468, 3403,
	-1000, 3516, 505, 504, 110613, 2207, 503, 23967, 3232, 768,
	75291, -1000, 3042, 1744, -1000, 2264, 110613, 3229, -1000, 2545,
	501, -1000, 869, 500, 498, 2655, 2655, -166, 54462, 54462,
	-171, 497, 869, -1000, -176, -1000, -1000, -1000, -1000, -1000,
	-172, -1000, 844, 843, -1000, -1000, 89977, 89977, 46026, 46026,
	-1000, 9836, 9836, 9836, -1000, 279, -1000, -1000, 2089, 3309,
	-1000, -185, 117119, 117091, 4809, 50037, 65399, -182, -1000, -1000,
	110613, 121534, -188, -1000, 121534, 496, 495, 415, -1000, -1000,
	-1000, 548, -1000, -1000, -1000, 3558, -1000, 98104, 110613, -1000,
	-1000, 1545, -1000, -1000, -1000, 110613, 2279, -1000, -1000, -1000,
	1041, 46026, 5847, 493, 46026, -1000, 3391, -1000, 2591, 2782,
	1978, 54462, -1000, 3249, -1000, 16422, -1000, 1026, 1853, -1000,
	-1000, -1000, 121534, 3287, 54462, -1000, -1000, 492, 490, 121534,
	486, 771, 2755, -1000, -1000, -1000, -1000, 121534, 484, 3365,
	-1000, -1000, -1000, -1000, 2143, 89977, -1000, -1000, -1000, -1000,
	-183, -1000, -1000, 1862, 31, 1972, 2664, -1000, 2158, 482,
	-1000, -1000, 2177, 2536, -1000, 97565, 32058, 32058, 278, 3388,
	862, -1000, 3466, -1000, 3170, 3170, 46026, 3387, 31, -1000,
	3508, 54462, -1000, 89977, 54462, 2196, 1900, 2402, 75291, -1000,
	2411, -1000, -1000, -190, 110613, 1744, -1000, -1000, 74199, 74199,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1026, -191, -199, -1000, 74199, -1000, -1000, 2304, -1000,
	110613, -1000, 110613, -1000, -1000, -200, -201, -1000, 2130, 46026,
	31485, -1000, -1000, 4809, -209, -1000, -210, -1000, 3369, 47745,
	3556, 3551, 3546, -1000, -1000, -1000, 1779, -1000, -1000, -1000,
	2979, 2712, 15999, 2380, 110613, 15336, -1000, 2781, -1000, -1000,
	2613, 478, -1000, -1000, -1000, -1000, 814, 110613, 2613, 2707,
	89977, 1037, -214, 1980, 1980, 46026, 30912, 2031, 46026, -1000,
	-1000, 3287, -1000, 2748, 3476, -1000, 854, -1000, 2019, 110613,
	-1000, 3275, -1000, 3190, -1000, -1000, -1000, 2618, 31, -1000,
	-1000, -1000, -215, 121534, 31, -1000, 260, -220, 1036, -227,
	89977, 1818, -1000, 768, -1000, 2417, 867, -1000, -1000, -228,
	-230, 1978, 1026, 1963, -236, -1000, -238, -244, -1000, -1000,
	259, 47172, 47172, 47172, -226, -229, -1000, 110613, 470, -1000,
	-1000, -1000, -1000, -1000, 2945, 887, -1000, 2180, 1808, 117,
	1009, -1000, -1000, 1963, 110613, -1000, -1000, -1000, 877, 468,
	-1000, 46026, 1026, -246, -1000, 1006, -247, -1000, 993, -254,
	-1000, 2753, -1000, -257, 2143, 876, 3347, -1000, -1000, -1000,
	2177, 89977, -260, -1000, -1000, 2348, -1000, 2613, 873, -1000,
	-1000, -1000, 1026, 465, 1978, 452, 1335, 768, -1000, -1000,
	1345, 3232, 3139, 869, 869, 2613, 1978, 868, -1000, 869,
	-1000, -1000, -1000, 3023, -1000, 51149, 2174, 1717, 119474, 3023,
	3023, -1000, -1000, 110613, 3335, -1000, 2186, 2185, 1462, -1000,
	-1000, -1000, -1000, -1000, -1000, 2747, -263, 3333, 2380, 121534,
	2613, -1000, 1980, 2662, -1000, 1980, 2750, -1000, 2016, -1000,
	-1000, -1000, 1612, 3464, 2393, 451, -1000, 110613, 1671, 1629,
	3545, 1972, 2177, 1978, 54462, 2613, 54462, -1000, -1000, 110613,
	-1000, 1900, 1273, -1000, -1000, 1963, 2613, 867, 450, -1000,
	-1000, 1762, 3433, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 767, -1000, 3160, -1000, 1067, 2165, 2165, 867, -1000,
	766, 2180, -1000, -1000, 448, -1000, 442, -1000, 2104, -1000,
	-1000, -1000, -1000, 110613, -1000, -1000, 3543, -1000, 854, -1000,
	2613, -268, 1963, -271, -1000, -239, 1818, -1000, 1511, 868,
	1963, -1000, 1710, -1000, -1000, 2078, 46599, 46026, -1000, 3450,
	-1000, -1000, 2471, -1000, -1000, 46026, 2747, 46026, 46026, 61058,
	-278, -1000, 2177, 1963, 1026, 868, 1978, 1335, 62680, 867,
	868, -1000, -1000, -1000, 121534, -1000, -1000, -1000, 121534, -1000,
	-279, -281, -259, 97019, 2111, 2393, 868, 1978, 867, 2613,
	-1000, -270, -1000, 867, 1963, 1112, -297, -1000, -1000, -1000,
	-1000, 867, 2613, -1000, 1963, -1000, -1000, -1000, -1000, 423,
	-1000, -1000, 1963, 868, 46026, 868, 867, -298, 867, -1000,
	1963, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4351, 4350, 4346, 4344, 4341, 4340, 4339, 4335, 4327,
	4323, 4321, 4319, 4317, 4309, 4305, 4303, 4302, 4299, 4297,
	4295, 4292, 4290, 4288, 4287, 4286, 4285, 4284, 4283, 4282,
	4275, 4272, 4270, 4268, 4267, 4266, 4255, 4254, 4252, 4251,
	4246, 4245, 4244, 4242, 4239, 4238, 4235, 4230, 4229, 4228,
	4227, 4225, 4224, 4223, 4220, 4219, 4215, 4213, 4212, 4211,
	4210, 4208, 4207, 53, 4203, 4202, 4201, 4196, 4195, 4194,
	4193, 4191, 4190, 4189, 4188, 4184, 4181, 4179, 4175, 4169,
	4168, 4166, 4164, 4163, 55, 4162, 265, 4158, 4157, 4155,
	4154, 4153, 4152, 4151, 4148, 4144, 4143, 4140, 4136, 264,
	4135, 112, 149, 4133, 4132, 3717, 4124, 4123, 263, 4122,
	4121, 4120, 4118, 271, 4117, 4115, 4114, 4113, 4112, 4111,
	4107, 4106, 4105, 4103, 4102, 93, 199, 4101, 4100, 2534,
	4099, 4097, 4096, 4095, 4094, 4093, 4090, 4089, 4086, 4085,
	242, 4084, 261, 4082, 4081, 4079, 4078, 4076, 4075, 4074,
	4073, 4071, 4070, 4069, 4068, 4067, 4066, 4065, 4064, 4063,
	4061, 4060, 4059, 4058, 4055, 4054, 4053, 4051, 4050, 4049,
	4042, 4040, 4036, 4034, 4032, 4030, 4029, 4025, 4023, 4021,
	239, 267, 185, 4020, 4019, 259, 258, 4018, 4017, 4016,
	4015, 4014, 137, 6, 46, 4013, 4011, 78, 87, 84,
	115, 98, 91, 4010, 103, 4007, 136, 66, 4006, 15,
	2, 161, 236, 5807, 229, 4005, 4004, 4003, 232, 189,
	4002, 230, 3998, 3997, 3995, 3994, 3992, 69, 56, 174,
	179, 162, 168, 184, 3991, 148, 92, 77, 59, 36,
	9, 65, 205, 21, 3990, 250, 8, 129, 1, 39,
	3987, 3986, 3981, 3978, 3546, 117, 3977, 256, 235, 160,
	3974, 3973, 3970, 324, 3966, 3963, 45, 3962, 218, 95,
	123, 31, 114, 3959, 144, 28, 3957, 147, 79, 3956,
	158, 88, 85, 10840, 4428, 3953, 119, 67, 170, 122,
	173, 159, 190, 163, 151, 150, 193, 209, 204, 167,
	191, 3951, 244, 3949, 3392, 104, 178, 3947, 3946, 3945,
	74, 194, 105, 3944, 3943, 70, 11, 14, 4, 7,
	126, 20, 22, 16, 3942, 25, 118, 48, 32, 3940,
	24, 3939, 3938, 3937, 3936, 3935, 40, 157, 3932, 268,
	3931, 83, 50, 51, 3930, 30, 214, 3929, 221, 143,
	3927, 3926, 246, 198, 180, 3924, 68, 222, 3922, 3918,
	3917, 3903, 3902, 121, 3, 124, 3900, 3899, 140, 3897,
	49, 231, 192, 3896, 62, 3895, 3894, 172, 100, 127,
	262, 134, 207, 116, 216, 175, 226, 3892, 3888, 3885,
	202, 3884, 3882, 219, 152, 3881, 3880, 243, 272, 86,
	47, 76, 227, 73, 186, 146, 3879, 196, 3878, 3876,
	270, 177, 211, 12, 17, 90, 120, 3874, 5, 228,
	145, 224, 107, 3873, 6532, 1897, 2350, 3871, 3870, 133,
	99, 71, 132, 141, 253, 94, 3867, 3863, 1815, 3862,
	3861, 3857, 3855, 176, 3853, 3852, 3851, 131, 139, 181,
	3850, 96, 72, 52, 27, 111, 241, 273, 108, 212,
	164, 252, 3848, 3846, 3845, 182, 3844, 81, 106, 155,
	195, 240, 54, 3843, 142, 3842, 135, 655, 61, 138,
	3841, 213, 3840, 3837, 3836, 3834, 3832, 3831, 3828, 237,
	225, 3827, 3826, 3825, 42, 183, 3823, 251, 169, 171,
	109, 60, 3822, 97, 3941, 3821, 217, 2415, 80, 254,
	215, 255, 3820, 4199, 57, 3819, 0, 12991, 7186, 9929,
	12311, 3818, 4916, 3817, 3816, 3815, 210, 130, 3814, 3813,
	3811, 102, 3810, 82, 3809, 3808, 64, 3806, 33, 18,
	19, 34, 26, 320, 313, 3805, 3804, 29, 125, 153,
	3800, 257, 223, 3798, 3797, 3794, 3790, 110, 3789, 43,
	3786, 35, 3785, 3784, 44, 13, 38, 3783, 3775, 208,
	3764, 220, 245, 3760, 156, 3758, 3387, 128, 3756, 3753,
	3751, 63, 58, 249, 89, 3750, 276, 3745, 3346, 3743,
	3740, 23, 3739, 3738, 238, 203, 165, 206, 3736, 3735,
	166, 3732, 3731, 3728, 266, 3727, 3726, 3725, 37, 3724,
	10, 3723, 3722, 200, 3204, 3721, 3720, 41, 3719, 187,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 583, 583, 595, 595, 22, 22, 42, 42,
	23, 43, 16, 584, 584, 584, 584, 35, 24, 44,
	28, 28, 28, 28, 28, 195, 195, 195, 195, 21,
	21, 38, 38, 230, 230, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 579, 579, 232, 232, 231, 225, 225, 226, 226,
	585, 585, 233, 233, 233, 235, 235, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 478, 478, 478,
	511, 511, 510, 510, 510, 509, 509, 599, 599, 600,
	600, 600, 600, 600, 128, 128, 376, 376, 376, 52,
	52, 52, 52, 52, 574, 574, 197, 197, 197, 199,
	199, 198, 198, 198, 198, 198, 75, 75, 590, 590,
	591, 591, 589, 592, 592, 592, 196, 196, 196, 124,
	124, 124, 124, 124, 124, 125, 125, 126, 126, 200,
	200, 200, 202, 202, 201, 201, 201, 201, 201, 201,
	201, 201, 206, 15, 15, 15, 15, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 104, 104, 513, 513,
	514, 514, 191, 191, 192, 192, 192, 192, 193, 193,
	194, 194, 194, 66, 66, 203, 203, 205, 205, 204,
	204, 204, 204, 204, 54, 54, 54, 54, 54, 54,
	54, 55, 55, 55, 55, 55, 56, 56, 56, 56,
	56, 56, 57, 57, 57, 57, 57, 57, 64, 64,
	64, 64, 64, 182, 182, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 72, 72,
	72, 72, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 602, 602, 603, 603, 604, 604, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 81, 81, 338, 338, 303, 303, 82,
	82, 82, 83, 83, 84, 84, 68, 68, 572, 572,
	353, 353, 469, 469, 69, 580, 580, 580, 582, 582,
	581, 581, 86, 86, 375, 375, 87, 87, 87, 87,
	87, 87, 88, 88, 88, 88, 88, 88, 88, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 96, 96, 96, 96, 96, 97, 97,
	97, 94, 94, 94, 91, 91, 91, 90, 90, 90,
	95, 95, 95, 571, 292, 292, 93, 93, 93, 92,
	92, 92, 354, 354, 98, 98, 98, 98, 304, 99,
	99, 99, 99, 99, 99, 99, 99, 102, 102, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 471, 471, 100, 100, 100, 436, 436, 105,
	105, 105, 391, 391, 106, 106, 106, 106, 106, 107,
	107, 107, 107, 107, 107, 107, 107, 127, 127, 127,
	127, 127, 127, 127, 576, 576, 346, 346, 257, 257,
	257, 257, 117, 117, 117, 117, 118, 118, 118, 119,
	119, 187, 187, 134, 134, 134, 134, 134, 133, 133,
	133, 133, 133, 133, 58, 58, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 63, 63, 63, 63, 63,
	136, 136, 596, 596, 138, 135, 135, 135, 137, 137,
	137, 137, 139, 140, 140, 140, 140, 140, 140, 140,
	140, 141, 141, 503, 503, 362, 362, 501, 501, 523,
	523, 502, 502, 308, 308, 308, 308, 308, 309, 309,
	309, 512, 512, 512, 512, 512, 512, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 188, 188, 189, 190,
	190, 190, 190, 190, 165, 165, 165, 181, 181, 181,
	181, 181, 181, 181, 168, 168, 168, 152, 152, 143,
	143, 143, 143, 143, 143, 143, 147, 147, 147, 147,
	147, 147, 147, 147, 144, 144, 154, 154, 154, 154,
	154, 148, 148, 149, 149, 149, 149, 175, 175, 151,
	151, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	145, 145, 145, 145, 156, 156, 156, 156, 398, 398,
	398, 180, 180, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 178, 178, 178, 178, 178, 178,
	593, 593, 594, 594, 172, 172, 172, 172, 172, 172,
	450, 450, 166, 166, 166, 166, 171, 171, 171, 171,
	174, 174, 174, 174, 381, 381, 163, 163, 163, 164,
	164, 164, 169, 169, 170, 167, 167, 173, 173, 173,
	173, 146, 146, 146, 146, 606, 606, 606, 176, 176,
	162, 162, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 607, 607, 158, 158, 158, 157, 157,
	157, 157, 160, 160, 161, 161, 161, 161, 161, 161,
	159, 150, 179, 573, 573, 569, 569, 569, 569, 569,
	569, 569, 569, 570, 570, 570, 570, 575, 575, 110,
	110, 110, 110, 110, 120, 120, 120, 120, 120, 111,
	111, 111, 111, 111, 113, 113, 112, 112, 112, 112,
	76, 76, 76, 76, 76, 14, 14, 14, 77, 77,
	248, 248, 209, 209, 209, 327, 327, 210, 210, 316,
	316, 316, 316, 207, 207, 208, 208, 78, 78, 608,
	608, 608, 586, 586, 586, 587, 587, 587, 587, 587,
	587, 310, 310, 311, 311, 416, 416, 416, 416, 416,
	314, 314, 314, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 317, 317, 234, 234, 234, 325, 326, 326,
	318, 318, 324, 323, 323, 322, 322, 321, 321, 319,
	320, 320, 320, 329, 329, 328, 331, 331, 330, 415,
	532, 532, 534, 534, 534, 534, 534, 534, 534, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 399, 399, 609, 609, 530, 530, 530, 531, 526,
	526, 527, 527, 527, 527, 527, 312, 312, 313, 313,
	313, 313, 528, 529, 344, 344, 454, 533, 533, 535,
	535, 537, 610, 610, 610, 610, 610, 610, 611, 611,
	611, 414, 414, 413, 413, 336, 336, 538, 538, 538,
	538, 539, 539, 539, 539, 539, 542, 541, 540, 540,
	540, 540, 540, 80, 80, 80, 378, 378, 377, 377,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 184, 184, 260, 260, 74,
	74, 74, 12, 12, 12, 588, 588, 588, 79, 79,
	79, 79, 79, 79, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 578, 578, 577, 577, 261, 261,
	613, 613, 85, 85, 85, 85, 85, 85, 85, 85,
	472, 472, 473, 473, 73, 73, 73, 73, 73, 400,
	400, 397, 397, 396, 396, 343, 343, 452, 452, 452,
	453, 265, 265, 266, 266, 227, 227, 227, 30, 29,
	20, 20, 25, 25, 26, 26, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 27, 27, 46, 46, 46,
	46, 47, 47, 47, 47, 50, 50, 51, 51, 45,
	45, 45, 45, 48, 48, 41, 41, 597, 597, 598,
	598, 116, 116, 121, 121, 121, 121, 121, 122, 122,
	122, 122, 123, 123, 123, 123, 132, 132, 183, 183,
	183, 183, 183, 183, 183, 53, 53, 53, 53, 65,
	65, 65, 65, 130, 615, 615, 615, 131, 131, 131,
	614, 614, 258, 258, 410, 410, 411, 411, 616, 616,
	412, 412, 412, 412, 412, 251, 250, 252, 252, 253,
	253, 71, 71, 71, 243, 243, 242, 240, 240, 515,
	515, 245, 245, 245, 246, 246, 236, 236, 237, 237,
	238, 238, 239, 239, 249, 249, 617, 617, 108, 108,
	108, 186, 186, 302, 302, 302, 407, 407, 407, 337,
	337, 272, 272, 409, 409, 409, 409, 374, 374, 374,
	185, 185, 351, 351, 364, 364, 365, 365, 466, 466,
	366, 114, 114, 115, 115, 129, 129, 213, 213, 211,
	211, 211, 211, 211, 211, 211, 211, 218, 218, 219,
	219, 220, 220, 221, 222, 222, 222, 222, 355, 355,
	223, 223, 223, 212, 212, 212, 214, 214, 214, 214,
	214, 214, 214, 217, 217, 217, 217, 224, 224, 224,
	216, 216, 549, 549, 549, 551, 551, 553, 553, 552,
	552, 548, 548, 550, 550, 612, 612, 380, 380, 380,
	334, 335, 332, 332, 333, 333, 341, 341, 339, 340,
	340, 342, 342, 451, 451, 451, 228, 228, 228, 371,
	371, 371, 371, 372, 372, 403, 403, 401, 401, 401,
	401, 402, 402, 404, 404, 404, 405, 405, 406, 406,
	368, 368, 369, 369, 370, 370, 370, 370, 432, 432,
	215, 215, 215, 348, 348, 348, 349, 349, 422, 422,
	422, 422, 422, 422, 423, 423, 421, 421, 421, 421,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 456,
	457, 457, 350, 350, 458, 408, 408, 567, 567, 567,
	568, 568, 449, 449, 459, 459, 459, 459, 459, 459,
	447, 447, 448, 448, 467, 468, 468, 384, 384, 384,
	384, 382, 382, 385, 385, 385, 385, 385, 383, 383,
	460, 460, 460, 460, 373, 373, 461, 461, 461, 461,
	462, 463, 463, 464, 464, 417, 418, 418, 474, 474,
	474, 474, 476, 347, 347, 347, 347, 347, 525, 524,
	524, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 491, 491, 491, 491, 491, 491, 491, 477,
	477, 477, 477, 477, 481, 481, 481, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 482, 482,
	487, 487, 488, 488, 488, 483, 484, 489, 489, 489,
	489, 618, 618, 493, 493, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 479, 479, 479, 486, 486, 486,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 392, 392, 394, 394, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 426, 426, 426, 426, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 543, 543, 543, 543, 543, 543, 543,
	543, 428, 428, 546, 546, 547, 547, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 554, 554, 555, 555,
	557, 557, 558, 558, 559, 560, 560, 560, 561, 562,
	562, 556, 556, 563, 563, 563, 563, 564, 564, 565,
	565, 565, 565, 565, 566, 566, 566, 566, 566, 438,
	438, 439, 439, 445, 445, 445, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 262, 262, 262, 262, 262, 360, 360, 358,
	358, 358, 361, 361, 359, 359, 357, 357, 356, 356,
	435, 435, 433, 433, 437, 437, 386, 386, 492, 492,
	492, 492, 492, 492, 492, 492, 387, 387, 387, 395,
	388, 388, 389, 389, 389, 389, 389, 429, 430, 390,
	390, 390, 431, 431, 440, 444, 444, 443, 442, 442,
	441, 441, 419, 419, 420, 420, 367, 367, 619, 619,
	363, 363, 465, 465, 465, 465, 306, 306, 352, 352,
	305, 305, 297, 297, 298, 298, 298, 298, 345, 345,
	446, 446, 494, 494, 495, 495, 496, 496, 497, 497,
	498, 499, 500, 434, 434, 282, 281, 269, 270, 280,
	279, 278, 268, 271, 275, 276, 277, 273, 274, 288,
	287, 286, 241, 244, 293, 294, 294, 296, 296, 295,
	295, 284, 285, 470, 267, 299, 299, 300, 300, 300,
	301, 301, 301, 301, 263, 263, 264, 264, 289, 289,
	290, 291, 291, 283, 283, 283, 254, 254, 254, 255,
	255, 256, 256, 508, 508, 505, 505, 505, 506, 506,
	506, 507, 507, 507, 507, 504, 504, 504, 504, 504,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	517, 517, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	519, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 522, 522,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 5, 2, 6, 4, 7,
	7, 7, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 1, 1,
	1, 1, 2, 2, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 4, 3, 3, 5, 3,
	4, 3, 5, 3, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 13, 16,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 12, 15, 3, 1, 0, 4, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 587, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -601, 102, -550, -89,
	-92, -123, -605, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 517, 49, 471, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -549, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 584, 532, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 553, 562, -217, -215, -216, -224,
	444, 540, 491, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, -304, 2, -284, -289, -290,
	-291, -283, -254, -519, -522, 4, -516, -520, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 499, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 473, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 467, 469, 470, 471, 490, 472, 474, 478, 479,
	480, 481, 475, 476, 489, 483, 484, 486, 487, 492,
	493, 494, 495, 496, 497, 498, 500, 502, 510, 511,
	512, 514, 517, 518, 519, 520, 508, 522, 523, 526,
	527, 528, 531, 529, 530, 532, 534, 537, 538, 539,
	545, 544, 546, 549, 554, 555, 557, 558, 559, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 190, 191, 203, 205, 213,
	214, 215, 237, 238, 240, 245, 267, 333, 335, 351,
	355, 370, 374, 378, 380, 394, 429, 465, 477, 482,
	503, 504, 505, 506, 513, 515, 540, 541, 542, 547,
	556, -304, 2, -284, 342, -277, 2, -254, -254, 381,
	28, 2, 28, 369, 446, 494, 496, 2, -576, -346,
	2, 28, -257, -254, 102, 201, 444, -277, 2, -576,
	-346, 25, 2, -254, 2, 356, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -604, 358, 388, 432, 448,
	489, 500, 514, 2, 544, 288, 445, 491, 229, 120,
	519, 439, -588, 437, 438, 356, 386, 425, 204, 533,
	-258, 2, 434, -254, 288, 2, 587, 94, 278, 74,
	429, 449, -140, 511, -139, 503, 439, -141, -503, 2,
	310, -254, 587, 587, 587, 28, -267, -254, 491, 229,
	439, 120, 487, 587, 2, 491, 361, 544, 445, 120,
	391, 229, 519, 188, 140, 27, 126, 439, -588, 288,
	-574, 2, -569, 4, -520, -516, -298, -297, 491, 497,
	120, -291, -283, 577, -290, 587, 587, 587, 2, 248,
	249, 390, 389, 449, 450, 587, 587, 587, 587, 437,
	2, 163, 22, 27, 66, 93, 98, 126, 185, 188,
	347, -602, 358, 388, 448, 489, 493, 500, 514, -587,
	472, 68, 414, 439, -586, -588, 288, 519, 140, -396,
	120, 278, 199, 527, 496, 494, 525, 132, 236, 530,
	529, 587, 587, -102, 2, 584, 32, 31, -101, -105,
	142, 452, -206, 491, 241, 2, -254, 587, 587, 2,
	248, 249, 437, 438, 587, 587, 186, -569, 2, 587,
	587, 2, 248, 249, 437, 438, 241, 2, 68, 441,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 2, -181, 449, 472, 210, 47,
	46, 74, 28, 387, 79, 362, 121, 148, 520, 202,
	229, 230, 256, 93, 94, -398, 44, 249, 248, 438,
	-593, 437, -450, 492, 440, 446, 486, 260, 434, 511,
	102, 534, 426, 559, 391, 392, 484, 404, 279, 157,
	187, 4, 120, 310, 451, 503, 278, 433, 365, 84,
	-612, 2, 491, -614, 2, 511, 511, 2, -614, 2,
	-614, 2, -614, 2, -615, 511, 556, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, -212, -214, -213, 587, 587, 587,
	587, 587, 587, 587, -181, 449, 2, 74, 28, -339,
	-341, 524, 239, 150, 348, -211, -213, 2, -549, -501,
	2, -424, -523, -426, 575, 576, 568, 488, 67, 327,
	560, -438, 126, 525, 342, -522, -427, -440, 153, 429,
	-361, 8, 9, 5, 6, 7, -263, -428, -434, 516,
	167, 332, -301, 588, 10, 584, -546, -213, -439, 37,
	205, 65, -505, -300, -264, -477, 240, -299, -283, -543,
	-544, 4, -516, -517, -506, -480, -488, -484, -485, -491,
	-254, -519, 77, 111, 112, 110, 115, 114, 281, 280,
	116, 113, 451, 533, 66, 36, 213, 214, 245, 333,
	215, 75, -545, 141, -518, 237, 238, 465, 51, 394,
	177, 125, 124, 335, 56, 54, 541, -489, 122, 503,
	504, 505, 506, 190, 191, 58, 164, 165, 355, 378,
	482, 513, 515, 203, 267, 43, 106, 187, 235, 217,
	244, 246, 250, 268, 271, 311, 324, 329, 352, 354,
	424, 458, -618, 542, 477, 69, 70, -551, 396, -552,
	-277, -551, 587, 587, 589, 587, -332, -334, -335, 2,
	28, 138, 584, 2, -455, 2, -456, -460, -213, 261,
	-459, 584, -457, 582, -284, 343, -547, 430, -543, -544,
	-263, -283, -300, 4, -516, -518, 586, -336, 584, 120,
	491, 78, 229, 163, -391, 584, -254, 28, 342, 507,
	589, -333, 385, -436, 584, 342, 186, 345, 60, 292,
	2, 2, 2, 2, 2, 213, -254, 491, 119, 2,
	259, 2, 2, 2, 2, 2, 2, 2, -354, 213,
	2, -284, 544, -354, 213, 2, -354, 213, 2, -397,
	2, 87, -268, 213, 2, -254, -292, 213, 2, -287,
	-289, -296, 213, 2, -294, -254, -514, 213, 2, -513,
	-508, 10, -507, 5, 4, -516, -520, -517, -519, 77,
	-424, 2, -129, 2, 60, -254, 544, 2, 2, 454,
	2, 584, -140, 71, 511, 43, 449, -411, 2, -412,
	-250, -251, -252, -467, -253, 247, 384, 393, 563, 130,
	327, 559, -501, -596, 186, 567, 507, -501, -362, 586,
	2, 2, 2, 2, 2, 2, -460, 213, -284, 2,
	-281, -504, 4, -516, -520, -517, -521, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 201, 204, 207, 220, 234,
	239, 241, 261, 265, 272, 280, 281, 327, 332, 338,
	342, 343, 347, 348, 367, 383, 399, 420, 444, 451,
	468, 485, 491, 501, 507, 509, 516, 524, 525, 533,
	535, 543, 548, 550, 551, 552, 553, -522, 2, -460,
	213, 2, -286, 213, -460, -289, 2, -268, 2, -280,
	-504, 2, -305, 213, -284, -285, -289, -287, 2, 2,
	2, 2, 2, -294, 2, -513, 213, 2, 544, 241,
	507, 589, -352, -297, -298, -500, 8, -345, -254, 586,
	-424, 2, -129, -113, 2, 182, -424, 213, 2, -129,
	213, 2, -424, 213, 2, -129, 213, 2, -590, 2,
	-513, 213, -254, 2, 292, 2, 2, 514, 2, 98,
	491, 119, 2, 413, -603, 432, 518, 2, 2, 2,
	2, 2, 2, 2, 491, -273, 2, -254, 182, 475,
	-294, 213, -295, 2, 445, -613, 396, -513, 213, 2,
	544, -287, 213, 2, -287, 229, 243, -268, 213, 2,
	496, 494, 496, 494, 186, 2, 241, 2, 241, 2,
	-461, 2, -462, -456, -463, 582, 343, -471, 2, -470,
	-507, 540, -102, 584, -102, 584, 449, 584, -513, -284,
	-284, -424, 2, -129, -113, 2, -424, 2, -129, 2,
	-126, -513, -125, 584, 186, -424, 2, -129, -113, 2,
	-424, 2, -129, 2, -206, 182, 2, 120, 491, -181,
	2, 182, 535, 2, 8, 2, 220, -513, 440, 392,
	174, 2, 454, 2, 455, 74, -398, 559, 74, 186,
	2, 186, 2, -381, 2, 553, 186, 2, 2, -573,
	2, 342, 186, 2, 186, 2, 186, 2, 186, 2,
	186, 2, -180, 450, 512, 490, 389, 249, 2, -129,
	550, -113, -424, 550, 2, -594, 182, 438, -424, 2,
	510, 258, 158, 186, -381, 2, 186, 2, 186, 2,
	5, 2, 390, 473, 2, 247, 384, 473, 2, -284,
	-606, 28, 2, 491, 544, 445, 2, 2, 88, 89,
	186, 2, 186, 2, 200, 186, 2, 186, 491, 559,
	2, -373, -460, -410, -411, -410, 507, -339, -341, -181,
	454, 2, -218, -371, -220, 182, -401, -402, -221, 272,
	169, 338, -222, -380, 28, 138, -380, -380, 60, 585,
	585, 11, 12, 76, 41, 575, 576, 577, 578, 180,
	579, 580, 573, 574, 572, 565, 566, 570, 253, 254,
	95, 569, 567, 86, 286, 431, 170, 171, 172, 173,
	410, 227, 34, 228, 14, 15, 16, 33, 347, 271,
	560, 217, 458, 568, 17, 18, 19, 244, 246, 329,
	50, 220, -262, -307, -424, -424, -424, -424, -424, -424,
	-424, 354, 584, -367, -419, 582, -213, 584, 584, 584,
	-500, -213, -424, -438, 585, -359, 584, -213, -438, -433,
	584, 429, 582, 584, -441, -424, 5, 5, 5, 584,
	586, -554, 554, 182, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 380,
	-482, 584, -481, 584, -481, -481, 545, -479, 584, 562,
	555, 584, -479, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 545, 589, -551, -336,
	584, -363, -465, -424, 577, -363, -363, 342, -356, -424,
	106, -384, 250, 311, 187, 268, 424, 235, -421, 588,
	-421, -449, 562, -213, -457, -283, -213, -459, 584, -455,
	-449, -103, -500, -86, -99, -108, -129, -142, -185, -186,
	577, -284, 584, 186, 584, 586, -504, 186, -345, -268,
	-284, -299, -300, -305, 2, 137, -356, -569, 519, 439,
	445, -345, -257, 38, -435, -474, -475, -525, 588, -524,
	-477, -487, -483, -486, 370, 374, -506, 54, 541, -489,
	240, 4, -516, -518, 237, 238, 465, 51, 394, 177,
	125, 124, 335, 56, 503, 504, 505, 506, 190, 191,
	58, 542, 477, 69, 70, -569, 519, 439, 445, -345,
	182, -511, 2, -510, -509, 116, 451, -507, 5, 2,
	153, 2, 2, 2, -254, -233, 589, 64, 418, 153,
	-354, 213, -233, 153, -233, 153, -306, 213, -305, -233,
	153, -233, 589, 153, -233, 589, 153, 586, 589, 153,
	-511, 2, -397, -503, -356, 38, -411, 2, 126, -509,
	-616, 589, 270, -309, 285, 326, 209, 343, 557, 336,
	130, -512, 5, 4, -434, -446, 126, 278, 240, -494,
	-496, 8, -495, 9, -497, 575, 576, -502, -501, 109,
	586, -504, -230, 411, 452, 357, -229, 24, 29, 142,
	231, 314, 538, 159, -322, 232, -319, 361, 153, 469,
	528, -583, -584, 436, 498, 499, 90, 336, 452, 357,
	411, 153, -377, -379, 38, 118, 314, 356, 61, 224,
	290, 291, 471, 547, 153, 452, 357, 411, 357, 24,
	142, -245, -242, 452, -584, 99, 411, 483, 383, -584,
	-232, 469, 528, -583, -584, 436, 411, -231, -324, -319,
	361, 153, 588, 24, 142, 411, 452, 357, -599, -600,
	29, 411, 357, -577, -548, 553, 153, -460, 213, -591,
	-125, 262, 5, 10, -513, -125, -352, 589, 589, -504,
	577, 438, 437, 153, 153, 153, 153, 182, 327, 2,
	2, 2, 2, 2, 188, -586, -604, 2, 2, -284,
	213, -338, 342, -572, -353, 491, -284, 182, 327, 43,
	-286, 213, 2, -289, 544, -577, 327, -288, 213, -284,
	38, 584, 327, 2, -397, 2, 229, -548, 327, -461,
	-302, -284, -456, -302, 452, -277, 38, -421, -284, 585,
	589, -471, -471, -513, -194, 553, 186, 102, 584, 584,
	-206, -468, 589, -467, 220, -514, -126, -513, 414, -513,
	-572, -268, 2, -284, 2, 491, 251, -513, -194, 220,
	-513, -513, -513, -503, 28, 455, 2, -180, 450, 512,
	89, 455, 2, -284, 491, 120, 229, 80, -254, -575,
	182, -570, 425, 439, 519, -569, -284, 120, -284, 120,
	-284, 120, -284, -284, 2, 2, 2, 2, 2, 85,
	85, 2, 46, -594, 182, 2, 510, 2, 510, 2,
	-254, -254, -254, 472, 270, -284, 492, -607, 2, 186,
	182, 2, 491, 229, 491, 229, 120, 186, 74, 120,
	28, 491, 435, -233, 589, -258, -218, -371, -503, -372,
	-371, -219, -218, -221, 182, 393, 529, 314, 456, 255,
	-402, -401, 28, -424, -406, 176, 313, -424, -404, -426,
	575, 576, -495, -497, -355, 336, -212, -212, -212, -342,
	-451, -424, 383, 229, -476, -474, -474, -282, -504, 503,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, 271, 217, 458, 50, 220,
	-424, 507, -424, -424, -424, -424, 308, 327, 332, 516,
	167, 526, 138, 336, -619, 485, 40, -431, -213, -360,
	584, -445, 35, 468, 28, -438, 584, 2, -419, -424,
	-420, -357, -356, -356, 585, 543, 28, 138, 577, 2,
	585, 589, 38, 585, -424, -357, -437, -433, -356, -444,
	-443, 550, -392, -393, 558, 295, 123, 211, 293, -394,
	443, -498, 8, -504, 577, -555, 175, 204, 584, 585,
	2, 585, 2, 585, -424, 2, 585, -424, 2, 585,
	-424, 2, 585, -424, 2, 585, 2, -424, -424, -424,
	-424, -424, -424, -424, -356, 8, -498, -498, 503, 503,
	-498, -498, -498, -490, 370, 371, 372, 373, 273, 274,
	275, 276, 374, 375, 376, 377, 300, 301, 302, 303,
	296, 297, 298, 299, 304, 305, 306, 307, 195, 196,
	197, 198, 191, 192, 193, 194, -490, -386, 2, -492,
	-356, 4, 558, 295, 123, 211, 293, 443, 5, -386,
	2, -387, 2, -424, -356, -388, -425, -426, 575, 576,
	568, -438, -389, 2, -424, -357, -424, 57, 265, 509,
	-390, -424, 186, -356, -356, 2, -356, 2, -552, 38,
	-356, -348, 589, 186, 38, 4, -348, -348, 584, 585,
	589, -385, 208, 289, 284, 243, -385, -455, -384, 250,
	-382, 352, -382, -382, -449, -269, 582, 590, -504, -449,
	-448, -447, 38, -277, 349, -449, -449, 586, 585, -448,
	583, -567, 584, 587, 587, 587, 587, 587, -284, 584,
	-356, -504, 586, 474, 2, 585, 244, 244, 244, 244,
	430, 585, 507, -571, -292, -296, 2, 553, -101, 344,
	585, 589, -347, 37, 582, 586, -498, 2, 2, -493,
	545, 584, 584, -393, 584, 186, -571, -296, 2, -346,
	589, 507, -254, 2, -284, -354, -233, 153, -354, -354,
	-233, 589, 153, -268, -287, -292, -294, -296, -254, -513,
	-514, -233, -288, -596, 585, 511, -412, -308, 393, 467,
	412, 447, 487, 8, 9, 8, 9, 589, -504, 589,
	-597, 93, 507, 78, 439, -247, 279, 507, -415, 213,
	78, -526, -271, 93, -527, -254, 72, 525, 383, 185,
	151, -597, 93, 383, -597, 93, 2, 231, 93, 452,
	472, 28, 60, -460, 41, 41, 28, -595, 325, 266,
	549, 186, 559, 491, 229, 439, 507, 507, -460, -379,
	-474, 118, 290, 291, 60, -499, -494, 575, 576, -499,
	60, -499, -499, -499, 553, -286, -460, 439, 507, 507,
	507, 402, 402, -242, 507, 507, -617, 567, 402, 589,
	41, 41, 28, -595, 325, 266, 186, 507, -305, -269,
	539, 42, 539, 42, 539, 507, 42, 439, 507, 589,
	42, 507, 507, -578, -259, 105, 320, 283, 321, 97,
	317, 96, 316, 103, 318, 104, 319, 546, 330, 63,
	315, 294, 322, -260, -261, 363, 537, -513, 452, 357,
	411, 153, 220, -468, 220, -468, -297, -254, 586, -129,
	-424, -424, -129, -424, -129, 46, 153, 2, -613, 259,
	584, -312, 327, 186, -345, -469, 241, 589, -353, -569,
	153, -510, -378, -377, 327, -288, 213, 2, 153, -336,
	327, 147, 584, 391, 2, 153, -270, 213, -255, -254,
	-397, -236, 495, 153, -375, 535, -407, -129, 584, 126,
	38, -407, -364, -365, -466, -366, -271, 584, -277, -421,
	-102, -470, 585, 585, 585, -193, 346, -192, -254, 5,
	-206, 535, -311, -416, -415, -530, -531, -526, 271, 229,
	525, 243, 168, -337, -272, -271, 119, -200, 553, -125,
	-126, 585, -468, 220, 475, -194, -194, -468, -468, -284,
	182, -513, -194, -194, -194, 2, 2, 2, 2, -381,
	-284, -268, -305, -284, 586, -345, -345, -296, -292, -381,
	-268, -381, -268, -381, -268, -129, -424, 2, 449, 182,
	182, 586, -381, 391, 120, 491, 361, 229, -284, -305,
	-284, -305, -268, 120, -268, 121, -284, -460, -372, -219,
	343, 255, 456, -404, -405, -426, 429, 430, -405, 429,
	430, 8, 9, 8, 9, -223, 460, 331, -354, 589,
	-227, 39, 134, 255, -284, 559, 149, -424, -424, 507,
	-619, 485, -431, 149, -424, 308, 332, 516, 167, 526,
	138, 336, 186, 584, -425, -425, 585, -358, -424, -424,
	583, 592, 585, -341, 589, -339, -424, -356, -356, 585,
	586, -356, -345, 583, 583, 589, 585, -442, -443, 143,
	-424, 507, 507, 507, 507, 584, 585, 586, -560, 353,
	584, 584, -424, 585, 585, 585, 585, 38, 589, 589,
	589, 585, 589, 589, 589, 585, 585, 585, 589, 585,
	559, 559, 585, 585, 585, 585, 589, 585, 589, 585,
	186, 585, 585, -395, 367, 585, 11, 12, 575, 576,
	577, 578, 180, 579, 580, 573, 574, 572, 565, 566,
	567, 86, 286, 431, 14, 15, 16, 244, 220, -425,
	-425, -425, 585, -429, -430, 186, 182, 38, -390, -390,
	-390, 585, 186, -356, 585, 585, 584, -553, 288, 327,
	585, -418, -417, 551, -465, -349, 2, -455, -279, -504,
	-418, -418, -356, -424, 250, 250, -383, 535, 342, -385,
	-455, -448, -500, -423, -422, 184, 39, 134, 323, 216,
	-448, -277, -336, -448, -448, -504, -449, -449, -447, 585,
	-568, -500, 585, -350, -458, -547, -341, 586, -504, -203,
	-548, -182, 5, 332, -182, -182, -182, -345, 507, 507,
	25, 368, -474, 582, 583, 8, -504, 584, -498, -498,
	-498, -345, 186, 186, 186, -510, -510, 2, -233, -354,
	-233, -233, -305, -306, -233, -233, -233, -376, 553, -501,
	-411, 523, 83, 393, 503, -501, -229, 411, -271, -271,
	-284, -293, -254, 199, 403, -510, 327, -415, 213, -235,
	327, -474, -278, -254, 584, -399, 555, 255, 255, 535,
	-271, -278, 255, 213, -271, 213, -278, 2, -278, -579,
	393, 337, -424, 60, -320, 277, 391, 328, -230, 411,
	452, 357, -129, -129, -129, -129, -129, 584, -596, 535,
	137, -284, -305, -284, -293, -510, -288, 452, 357, 411,
	324, -299, -499, -499, -377, 452, 357, 411, -293, -510,
	-286, -510, -241, -254, -241, 439, -268, 402, 559, 45,
	-617, -231, -129, -129, -129, -129, -129, 584, -269, -232,
	411, 5, 213, -271, 5, -271, 213, 5, -254, -271,
	-293, -510, -600, 24, 142, -271, -293, -510, -259, -513,
	332, 531, -577, 439, 507, 507, -460, -125, -197, 553,
	-125, -191, 225, 577, -574, -254, 544, -254, -310, -313,
	-311, -271, -209, -210, 555, 553, 153, -303, -284, 582,
	-194, -513, -284, -469, -294, -295, 153, -336, 327, -513,
	38, 153, 584, 2, 2, -287, 342, 327, -270, 213,
	-237, 144, -617, -268, -418, -349, -374, -409, 420, 342,
	-337, 540, -277, -374, -351, 589, 186, 567, 586, -337,
	-464, 577, -102, -102, -194, 589, 584, 567, 567, 584,
	-513, -513, 585, 589, -235, -284, -270, 229, 229, -276,
	-255, 585, 589, 586, 584, -202, 346, -201, 145, 257,
	242, 461, 462, 463, 464, 136, -468, -200, -126, 186,
	186, -61, 553, 491, -194, 588, -254, -381, -381, -381,
	449, 449, -254, -280, -268, -284, -281, -305, 182, 182,
	-268, 529, -405, 343, 282, -451, -228, 561, -284, 588,
	-424, -424, 149, 149, -424, -425, -425, -424, 149, 186,
	584, -424, -435, 33, 33, 585, 589, -420, -424, 585,
	543, -341, -341, 585, 577, -504, 588, 585, -433, 146,
	-424, 501, 295, 211, 293, -394, 293, -394, -394, -498,
	5, -504, 577, -561, -274, 584, -254, 551, -340, 348,
	585, -476, -474, -424, -424, -424, -424, -424, -498, -479,
	-479, -494, -494, -424, -429, -424, -476, -474, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, 138, 327, 336,
	-425, -430, -429, -424, -424, -474, 585, 585, 585, -356,
	-101, 584, 288, -368, 204, -424, -468, 589, -368, -368,
	585, -455, -455, 584, -424, 250, 583, 589, 591, 567,
	-336, 586, -447, -448, 583, 585, 589, 585, 589, -408,
	38, 585, -504, -418, -205, -204, 135, 53, 107, 133,
	332, -345, -345, 345, 5, 8, 582, 583, 586, -498,
	585, 585, 585, -345, -345, -345, -233, -233, 119, 314,
	-424, 507, 507, 60, 220, 153, 327, 537, -532, -527,
	151, -424, 584, 229, 584, 584, 2, -225, -226, 142,
	452, 24, -598, 2, 535, 153, -233, 153, -233, 557,
	-320, 584, 584, 507, 439, -247, 507, 553, -356, -424,
	-195, 126, -503, -584, 588, -584, 588, 439, 507, 507,
	439, 507, 507, 553, 166, 166, 559, -241, 553, -356,
	507, -478, 48, 26, 327, -287, -233, 153, 507, 507,
	519, 452, -513, 332, -293, -510, -288, 452, 357, 411,
	-468, -199, 346, -198, 145, 422, 136, 257, 222, -468,
	-197, 186, 241, 553, -288, 2, 585, 585, 589, -533,
	38, 340, 340, 584, -284, -82, 553, -467, -500, -580,
	553, 43, -286, 38, 153, -577, -129, -288, -472, -473,
	5, 38, -284, 153, 342, 327, -238, 264, -617, -508,
	-548, -341, -374, -363, 328, 91, 585, -418, -365, -349,
	-424, 2, 585, -192, -193, -513, -513, -513, -194, -206,
	-206, -416, -314, 584, -270, -255, 584, -206, -272, 2,
	-514, 589, 584, 567, 567, 567, -200, -468, -125, -129,
	346, -284, 577, -381, -326, -325, 361, 336, -326, 429,
	429, 343, 176, 260, -227, -269, -424, -424, 149, 33,
	33, -424, -424, -435, 585, -424, -424, -356, 583, 5,
	-424, 585, 585, 8, -424, 585, 586, -562, -254, -424,
	585, 60, 585, 585, 589, 589, 585, 585, 585, 585,
	585, 585, 585, -430, 186, 138, 336, 584, 585, 585,
	-101, -432, 207, 60, -455, -432, -432, -383, -345, -455,
	-422, -269, 582, -504, -500, -458, 584, 586, -204, 567,
	-513, -513, 553, 583, 2, 582, -504, 585, 119, -271,
	-271, 491, 429, -241, 383, -415, 153, -534, 93, -536,
	76, 168, 102, 327, 332, 525, 383, 72, 126, 399,
	-609, 38, 564, 585, -343, -452, -547, 584, -254, -343,
	-345, 327, 480, 126, 327, 126, 548, 119, 2, 519,
	79, -271, -278, -345, -345, -284, -293, -510, 160, 585,
	589, 567, 2, 577, 577, -293, -510, -288, -293, -510,
	-286, 359, 166, 160, 585, -269, 5, 5, 153, -266,
	76, -271, 5, -271, -287, 119, 439, 507, 507, -197,
	589, 584, 567, 567, -197, -514, -125, 2, -336, -327,
	231, -271, -531, -528, -529, 383, -535, -537, 168, 383,
	-129, 2, -208, -207, -254, 5, 584, -312, 346, 583,
	-582, 346, -581, 117, 136, -510, -378, -129, -288, -336,
	585, 589, 147, -400, 535, -269, -284, 153, -239, 263,
	-617, -508, -236, -403, -401, 139, 584, 342, -129, -341,
	567, 585, 585, 119, 119, 223, 152, -343, 584, 584,
	-345, 119, 585, -201, -202, -513, -125, -513, -200, -468,
	-62, -63, 229, 93, 366, -281, 491, 229, 584, 584,
	-227, -424, -424, -424, 585, -341, -504, 577, -556, 361,
	585, -451, -424, -424, -425, 186, 584, -435, 585, -557,
	552, -424, -369, -370, -424, 428, 108, 205, -557, -557,
	585, -500, 2, -513, 2, 582, 2, 220, 38, 402,
	-415, -278, -282, -275, -254, 168, 213, 332, 548, -399,
	255, 584, -425, -284, 584, 2, 30, -610, 130, 234,
	585, 589, -453, -265, -254, -424, -453, 585, 585, 332,
	332, 548, -424, -474, 584, -233, -233, 585, 585, -424,
	507, -503, 100, -501, 2, -584, -268, -424, 507, 5,
	-233, -282, -233, -233, -266, 519, -293, -510, -288, -198,
	-199, -513, -125, -197, 38, -317, 233, 2, -533, 255,
	-275, 255, -608, 553, 585, 589, 567, 567, -310, -209,
	-83, -84, 508, -467, 589, 584, 567, -336, 38, 5,
	584, 584, -254, 342, 584, -269, -249, 92, -617, -508,
	-237, -374, 328, -345, 93, -403, -431, -194, 584, 584,
	-315, 81, 94, 127, 212, 189, 230, 472, 478, 28,
	-315, 585, -343, -343, 585, 584, -194, 585, 589, 28,
	584, 28, 584, -284, -305, -356, -356, 585, -341, 60,
	589, 585, 585, -425, -435, 585, -558, -559, -274, 589,
	584, 584, 453, 583, 2, -241, 383, -254, -536, -275,
	327, 535, -424, -256, 584, -424, 38, 234, 131, 218,
	-414, -611, 101, 481, 221, -452, -227, 585, -413, 535,
	399, -266, -343, 584, 584, 584, 567, 186, 584, -478,
	-233, -287, 585, -589, 397, -129, -321, -322, 220, 584,
	-316, 342, 119, 314, -207, -501, -501, 585, 38, -84,
	9, -581, -582, -424, 38, -129, -472, -343, -284, -343,
	342, -243, -242, 272, -508, -238, 585, -278, -374, -514,
	-514, -413, 585, 585, -514, -63, -345, -345, 585, 585,
	-563, 391, 430, 206, -356, -342, 585, 589, 38, -370,
	2, 2, 2, 402, 153, 208, 585, -538, 287, -254,
	585, 131, 218, -317, 584, -228, -453, -317, 208, -284,
	-585, 535, 585, -329, -328, -325, -331, -330, -325, -356,
	-501, 100, 359, -356, -266, -592, 187, -591, 5, 10,
	-209, 359, -344, -454, -271, 82, 119, -327, -129, 585,
	-129, 585, 585, -400, 585, -284, -240, -515, 402, 404,
	-617, -239, -418, 585, 585, -414, -413, -323, -319, 585,
	585, 585, 585, -564, -565, 50, 522, 109, -424, -564,
	-564, -559, -561, 168, 553, -539, -542, -541, 342, 459,
	187, 360, 585, 480, 547, -323, -345, 553, -336, -424,
	-413, 585, 589, 540, 585, 589, 540, 585, 186, 585,
	-233, -196, 553, 46, -316, -284, 585, 589, 382, 132,
	142, -317, -608, -413, 584, -414, 584, -246, -245, -617,
	-494, -249, 139, -194, -194, -317, -414, -210, 553, -194,
	-566, 151, -565, 379, 181, 429, 379, 181, -566, -566,
	-275, 55, -541, 342, -542, 342, 529, 132, -610, 585,
	55, -538, -317, -328, 220, -330, 186, 359, 437, -591,
	30, -248, -247, 584, -454, 430, 430, 2, -321, -316,
	-414, -343, -317, -343, -244, -345, -243, 328, 529, -323,
	-317, -418, 109, 204, 502, 314, 33, 567, -540, 314,
	418, 64, 452, -540, -418, 567, -539, 584, 584, 346,
	-345, 2, -209, -317, 585, -323, 585, -240, 452, -210,
	-323, 429, 350, -565, -424, 23, 332, 126, -424, -610,
	-356, -356, -193, 584, 585, -316, -323, -413, -210, -414,
	-246, -364, -418, -210, 585, 585, -193, -234, 64, 418,
	-248, -210, -414, -418, -317, -418, -418, -318, -319, 507,
	585, -418, -317, -323, 584, -323, -210, -356, -210, -418,
	585, -418, -318,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 539, 540, 542, 543, 544, 546,
	547, 549, 551, 553, 554, 555, 557, 558, 560, 561,
	562, 563, 564, 566, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	633, 635, 0, 1328, 1330, 1332, 1334, 0, 778, 0,
	36, 37, 39, 0, -2, 324, 326, 328, 0, 355,
	357, 358, 360, 362, 363, 364, 366, -2, 0, 472,
	473, 475, 477, -2, 0, 969, 971, 0, 622, 624,
	0, 974, 976, 0, 0, 644, 645, 0, 1435, -2,
	638, 640, 642, 707, 709, 711, 713, 715, 717, 719,
	721, 723, 724, 726, 728, 730, 732, 734, 735, 737,
	739, 741, 742, 744, 745, 747, 749, 751, 753, 755,
	757, 759, 761, 763, 765, 767, 769, 771, -2, 774,
	775, -2, -2, 0, -2, -2, -2, 1346, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 416, 418, 420,
	422, 424, 427, 429, 431, 1493, 479, 481, 483, 485,
	487, 489, 491, 0, -2, 1507, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1466, 1468, 1470, 1472,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 541, 545, 548, 550, 552,
	556, 559, 565, 567, 569, 524, 525, 528, 2171, 2188,
	2189, 2190, 2193, 2194, 2195, 2196, 2197, 2198, 2640, 2722,
	2723, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268,
	2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308,
	2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318,
	2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 526, 527, 1146, 0, 593, 591, 2156, 594, 2442,
	596, 598, 466, 467, 468, 469, 470, 471, 0, 615,
	606, 1505, 616, 618, 619, 620, 621, 588, 586, 0,
	615, 2224, 613, 1326, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 395, 1195, 1196, 1197,
	1311, 1312, 2486, 1353, 0, 225, 634, -2, -2, -2,
	2605, -2, 666, -2, 673, 2609, 2489, 678, 0, 680,
	-2, 683, 1329, 1331, 1333, 776, 777, 2174, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 235, -2, -2, -2, -2, 0, 0, 2533,
	2276, 2124, 2190, 2127, 2122, 325, 327, 329, 330, 0,
	0, 0, 0, 0, 0, 356, 359, 361, 365, -2,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1030, 1022, 1023, 1253, 0, 0, 0,
	-2, 474, 476, 529, 530, 0, 1494, 1494, 537, 538,
	-2, 0, 0, 0, 0, 295, 282, 970, 972, 973,
	0, 0, 0, 0, 623, 625, 0, 0, 264, 975,
	977, 978, 0, 0, 0, 0, 0, 297, 0, 0,
	639, 641, 643, 708, 710, 712, 714, 716, 718, 720,
	722, 725, 727, 729, 731, 733, 736, 738, 740, 743,
	746, 748, 750, 752, 754, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 773, 784, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 872,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 950, 0,
	0, 787, 789, 790, 791, 0, 850, 870, 871, 880,
	0, 1186, 1495, 1355, 1336, 1350, 1355, 1338, 1339, 1340,
	1341, 1342, 1347, 1349, 1343, 1344, 1345, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 417, 419, 421, 423,
	425, 428, 430, 432, -2, 1464, 1465, 480, 482, 484,
	486, 488, 490, 492, 626, 0, 628, 0, 788, -2,
	0, 1499, 1499, 1499, 0, 0, 1465, 1463, 0, 631,
	632, 687, 688, 1767, 0, 0, 0, 0, 0, 0,
	0, 2021, 1853, 0, 689, -2, 1884, 1886, 2580, 2605,
	2020, 1888, 1889, 1890, 1891, 1892, 0, 1894, 1895, 1896,
	1897, 1898, 1899, 0, 1901, 0, 1906, 1907, 1908, 0,
	2587, 2101, 2184, -2, 0, 0, 2593, 2180, 0, 1987,
	1924, -2, -2, 2207, 2186, 1699, 1700, 1701, 1702, 1703,
	-2, -2, 2623, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 0, 2568, 2588, 2589, 2594, 2596,
	2590, 2577, 1949, 2289, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1726, 1735, -2,
	-2, -2, -2, -2, -2, -2, 2581, 2582, 2599, 2602,
	2608, 2613, 2614, 2586, 2595, 2622, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 1727, -2, -2, -2, -2, 1482, 2455, 1485,
	1146, 1483, 1467, 1469, 0, 1471, 0, 0, 0, 1476,
	1502, 1500, 0, 1551, 1480, 1481, 1569, 1569, 1593, 0,
	1574, 0, 1593, 1494, 1620, 0, 1580, 2478, 1925, 1926,
	0, 2190, 2185, -2, -2, 2620, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 595, 597, 0, 0,
	0, 614, 1504, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 400, 401, 402, 2588, 0, 0, 0, 407,
	0, 409, 410, 411, 412, 413, 414, 415, 194, 2588,
	497, 522, 0, 194, 2588, 500, 194, 2588, 503, 0,
	506, 1251, 194, 2588, 509, 2152, 194, 2588, 512, 514,
	2160, 194, 2588, 518, 2167, 2165, 519, 2588, 521, 300,
	298, 299, 2203, 2204, 2211, 2212, 2213, 2214, 2621, 2623,
	1322, 1323, 1324, 1325, 0, 1352, 1252, 636, 637, 0,
	661, 0, 665, 2576, -2, 0, 2498, -2, 669, 1356,
	1360, 1361, 1362, 1363, 1364, 0, 0, 0, 0, 1369,
	0, 0, 675, 0, 0, 662, 663, 681, 684, 0,
	779, 780, 781, 782, 783, 70, 0, 2588, 1620, 72,
	0, 2146, 2215, 2216, 2217, 2218, 2219, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 76, 0,
	2588, 81, 0, 2588, 0, -2, 92, 0, 100, 0,
	2149, 109, 0, 2588, 0, 2121, -2, 0, 206, 283,
	284, 285, 286, 0, 997, -2, 2588, 1194, 0, 0,
	0, 0, 960, 2118, 2123, 961, 2142, 962, 2128, 0,
	331, 332, 333, 334, 335, 0, 336, 2588, 338, 339,
	0, 341, 342, 2588, 344, 345, 0, 347, 0, 247,
	248, 2588, 369, 371, 0, 373, 374, 0, 376, 0,
	0, 0, 380, -2, 396, 0, 393, 383, 384, 386,
	387, 388, 389, 390, 0, 436, 434, 2157, 0, 0,
	-2, 2588, 0, 994, 0, 0, 1231, -2, 2588, 1191,
	0, 1238, 2588, 1234, 0, -2, 0, 1492, 2588, 1373,
	1026, 1027, 1028, 1029, 1632, 463, 0, 1400, 0, 1402,
	0, 1421, 1626, 1569, 0, 0, 1631, 0, -2, 582,
	2173, -2, 532, 0, 533, 0, -2, 0, 312, 0,
	0, 979, 980, 981, 982, 983, 986, 987, 988, 989,
	1606, 265, 267, 0, 0, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 0, 0, 646, 0, 0, 785,
	786, 0, 0, 796, 797, 798, 0, 312, 2490, 2451,
	2310, 805, 0, 808, 811, -2, 0, 0, 0, 0,
	815, 0, 820, 821, 822, 0, 0, 826, 828, 968,
	830, 0, 0, 832, 0, 836, 0, 839, 0, 841,
	0, 843, -2, -2, -2, 851, 852, -2, 856, -2,
	0, 859, 861, 0, 863, -2, 0, 872, 868, 869,
	0, 0, 0, 0, 888, 889, 0, 898, 0, 901,
	902, 903, 0, 905, 906, 0, 908, 909, 910, 911,
	0, 0, 914, 915, -2, -2, 919, 921, 0, -2,
	0, 937, 0, 941, 0, 0, 949, 0, 0, 792,
	793, 194, 1624, 1335, -2, 1337, 0, -2, 0, 627,
	0, 630, 1524, 1450, 1447, 0, 1521, 1522, 1451, 0,
	0, 0, 1458, 0, 1497, 1498, 0, 0, 0, 1437,
	1438, 0, 0, 0, 0, 2026, 2027, 2028, 2029, 2030,
	2031, 2034, 2035, 2032, 2033, 2036, 2037, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 2040, 2041, 0, 0, 2043,
	0, 2045, 0, 0, 0, 0, 0, 0, 1832, 1834,
	2109, 0, 0, 2042, 1772, 1773, 1774, 1775, 1776, 1811,
	1812, 0, 0, 1885, 2106, 2105, 1887, 0, 2057, 0,
	1900, -2, 0, 2021, 2052, 0, 0, 1909, 1910, 1911,
	0, 0, 2057, 0, 0, 2100, 1921, 1922, 1764, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	1712, 0, 1714, 0, 1715, 1716, 1723, 1736, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	2081, -2, 0, 0, 0, 0, 1728, 0, 1484, 0,
	0, 1555, 2110, 2114, 2115, 1555, 1555, 0, 0, 2058,
	1617, 1617, 0, 0, 1612, 1612, 1612, 1610, 1593, 0,
	1593, 1603, 0, 1593, 1593, 0, -2, 1574, 0, 0,
	1603, 0, 1587, 570, 572, 574, 576, 577, 578, 580,
	1621, 1622, 0, 0, 0, 0, 2191, 0, 0, 0,
	0, 0, 2176, 0, 352, 0, 0, 0, 2543, 2489,
	-2, 600, 617, 1494, 0, 2060, 1647, 1651, 0, 1653,
	1654, 1655, 1656, 1657, 0, 0, 1648, -2, 1724, 1726,
	1747, 2208, 2209, 2210, 1707, 1708, 1709, 1710, 1711, 1719,
	1706, 1706, 1706, 1717, 1746, 1738, 1746, 1742, 1692, 1693,
	1694, 1729, 1730, 1731, 1732, 0, 2543, 2489, -2, 608,
	0, 0, 1432, 210, 212, 213, 214, 215, 216, 397,
	0, 404, 405, 406, 0, 493, 0, 192, 193, 0,
	194, 2588, 498, 0, 501, 0, 194, 2588, 2116, 507,
	0, 510, 0, 0, 516, 0, 0, 0, 0, 0,
	194, 1434, 0, 0, 0, 0, -2, 671, 676, 677,
	0, 1358, 0, 1365, 698, 699, 700, 1367, 1368, 0,
	1370, 674, 701, 702, 703, 704, 705, 706, 0, 2130,
	2131, 2132, 2133, 2136, 2137, 0, 0, 672, 691, 679,
	0, 685, 110, 1308, 0, 0, 153, 0, 1308, 1308,
	0, 0, 0, 0, 179, 0, 1065, 0, 0, 0,
	0, 125, 138, 149, 122, 123, 0, 0, 0, 0,
	0, 0, 82, 1168, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	0, 96, 97, 0, 137, 0, 0, 1397, 0, 132,
	112, 0, 0, 125, 139, 151, 0, 183, 185, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 217,
	0, 0, 0, 1192, 0, 1491, 0, 0, 2588, 0,
	1606, 2358, -2, -2, 265, 1606, 959, 0, 0, 2191,
	2126, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	375, 377, 378, 379, 0, 1230, 0, 385, 426, 1117,
	2588, 0, 0, 453, 448, 0, 450, 0, 0, 0,
	1167, 2588, 1165, 2161, 0, 1189, 0, 1146, 2588, 2159,
	0, 0, 0, 1239, 2200, 1248, 1252, 1387, 0, 465,
	0, 1403, 1405, 0, 0, 1627, 0, 1629, 1569, 1494,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 271, 0, 1605, 0, 0, 1606, 265, 2466, 312,
	312, 1606, 648, 1606, 650, 0, 0, 799, 800, 0,
	312, 312, 312, 806, 807, 809, 810, -2, -2, -2,
	-2, 812, 813, 895, 0, 0, 0, 894, 825, 829,
	0, 953, 2474, 2489, 2543, 966, 895, 2276, 895, 2276,
	895, 2276, 840, 842, 845, 883, 891, 855, 860, 0,
	0, 865, 873, -2, 0, 875, 0, 877, 0, 879,
	895, 896, 899, 904, 907, 912, 913, 0, 928, 933,
	934, 930, 0, 0, 0, 0, 0, 0, 944, 945,
	0, 0, 952, 1185, 0, 1348, 1524, 1450, 629, 1441,
	1523, 1442, 1449, 1452, 0, 0, 1454, 0, 1456, 0,
	1519, 1520, 1527, 1528, 0, 1538, 1539, 1531, 0, -2,
	0, 0, 1534, 1535, 1460, 0, 1477, 1478, 1479, 1508,
	1511, 1267, 0, 2722, 1768, 1642, 1769, 1770, 2145, 0,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	-2, -2, -2, -2, -2, -2, -2, -2, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, -2,
	-2, -2, 1809, 1810, -2, 2044, 2046, 0, 2109, 0,
	-2, 0, -2, -2, -2, -2, 1829, 0, 1831, 1836,
	1838, 1840, 0, 0, 0, 0, 2108, 1850, 2092, 2093,
	0, 0, 2023, 2024, 2025, 1835, 0, 1854, 2107, 2104,
	0, 0, 2056, 1507, 1913, 0, 0, 0, 0, 1920,
	1905, 2054, 0, 2053, 0, 0, 0, 2064, 0, 2099,
	2095, 0, 2143, 1763, 1750, 1751, 1752, 1753, 1754, 1755,
	1765, 0, 2140, 2177, 2183, 1997, 0, 0, 0, 1950,
	1951, 1952, 1953, 1954, 0, 1956, 1957, 0, 1959, 1960,
	0, 1962, 1963, 0, 1965, 1966, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 0, 0, 1969, 0,
	2067, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1971, 0, 1973, 2058, 2078, 0, 0, 1855, 0, 0,
	0, 2021, 0, 1976, 2058, 2086, 0, 0, 0, 0,
	0, 2058, 0, 2091, 0, 1983, 0, 1985, 1486, 0,
	0, 1637, 0, 0, 0, 2113, 1637, 1637, 0, 1550,
	0, 0, 1613, 1614, 1615, 1616, 0, 0, 1617, 0,
	1607, 1611, 1608, 1609, 1603, 1566, 0, 0, 2147, 1603,
	1572, 1602, 0, 1146, 1592, 1603, 1603, 0, -2, 1576,
	1593, 0, 0, 571, 573, 575, 579, 581, 0, 0,
	1507, -2, 0, -2, 314, 1145, 0, 0, 0, 0,
	590, 592, 0, 0, 513, 0, 605, 0, 584, 0,
	587, 0, 1638, 1641, 0, 0, 1652, 1658, 1659, 0,
	-2, 0, 0, 1748, 0, 0, 0, 0, 612, 0,
	0, 0, 0, 408, 523, 194, 495, 0, 194, 194,
	504, 0, 0, 194, 515, 194, 2168, 194, 2166, 301,
	520, 1433, 228, 0, 664, 0, 1357, 1366, 0, 695,
	0, 697, 0, 2134, 2138, 2135, 2139, 0, 686, 0,
	0, 0, 0, 1307, 0, 1274, 0, 0, 157, 2588,
	0, 196, 0, 0, 1110, 2153, 0, 1102, 0, 0,
	2296, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 1169,
	1170, 1172, 1179, 1181, 0, 1175, 2141, 0, 0, 1176,
	0, 1178, 1180, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 1396, 1397, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 2120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 1224, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 0, 0, -2, 0, 0,
	0, 0, 0, 238, 0, 303, 2119, 2129, 0, 984,
	985, 337, 340, 343, 346, 234, 0, 381, 0, 0,
	1032, 1007, 0, 0, 435, 312, 0, 0, 449, 453,
	2170, 992, 1163, 1166, 0, 1146, 2588, 1203, 0, 0,
	0, 0, 0, 0, 1237, 0, 0, 2588, 2148, 2199,
	2200, 1389, 1397, 0, 1637, 0, 1419, 1406, 0, 0,
	0, 1419, 1423, 1424, 1426, 1427, 0, 0, 1628, 1634,
	531, 583, 1494, 1494, 312, 310, 2419, 308, 305, 307,
	0, 0, 0, 1033, 1035, 1036, 1037, 196, 0, 2200,
	1102, 2347, 2200, 0, 1409, 1411, 0, 259, 0, 268,
	1606, 266, 271, 0, 0, 0, 447, 647, 652, 794,
	0, 312, 802, 803, 804, 847, 885, 893, 932, 814,
	816, 817, 818, 0, 0, 967, 963, 964, 965, 831,
	895, 834, 895, 837, 895, 858, 862, 867, 874, 0,
	0, 0, 887, 0, 0, 0, 0, 0, 0, 0,
	938, 939, 940, 942, 947, 946, 951, 1625, 1445, 1446,
	1448, 0, 1457, 0, 0, 1533, -2, -2, 1532, 1536,
	1537, -2, -2, -2, -2, 1453, 0, 1462, 1459, 0,
	1518, 1265, 1266, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1851, 0, -2, 1830, 1833, 1837, 1839, 1841,
	0, 0, 0, 0, 0, 0, 2047, 0, 2049, 1852,
	2102, 2105, 2019, 0, 0, 1506, 1507, 1507, 0, 1919,
	0, 2055, 0, 2062, 2063, 0, 1912, 0, 2096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 1955, 1958, 1961, 1964, 0, 0, 0,
	0, 1944, 0, 0, 0, 1948, 1718, 1704, 0, 1746,
	1744, 1745, 1739, 1746, 1743, 1696, 0, 1695, 0, 1968,
	0, 1970, 1972, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	1859, 1860, 1975, 2084, 2085, 0, 0, 0, 0, 0,
	0, 1981, 0, 2090, 1982, 1984, 1494, 0, 1487, 0,
	1552, 1541, 1636, 0, 2111, 1606, 1554, 1556, 2112, 2150,
	1541, 1541, 0, 2059, 0, 0, 1597, 0, 0, 0,
	1599, 1570, 0, 0, 1564, 0, 1560, 1561, 1562, 1563,
	1571, 1146, 1601, 1573, 1577, 2177, 0, 1603, 0, 1588,
	0, 1590, 1623, 0, 1582, 1585, 0, 0, 2192, 1637,
	0, 348, 353, 354, 349, 350, 351, 599, 0, 0,
	0, 0, 2061, 0, 1643, 0, 1649, 0, 0, 0,
	0, 607, 0, 0, 0, 211, 1431, 403, 494, 194,
	499, 502, 2117, 194, 508, 511, 517, 224, 0, 660,
	-2, 693, 694, 696, 0, 692, 154, 1308, 0, 0,
	1270, 1272, 2164, 1276, 1282, 1285, 0, 159, 2588, 170,
	0, 1081, 0, 2151, 0, 0, 0, 0, 0, 0,
	1310, 0, 0, 2588, 194, 2588, 194, 173, 175, 178,
	0, 182, 180, 0, 1069, 0, 0, 1072, 111, 1308,
	0, 0, 114, 118, 126, 127, 130, 0, 0, 0,
	136, 0, 0, 0, 1287, 1291, 1299, 0, 0, 0,
	1173, 1174, 1177, 1183, 83, 0, 0, 0, 1295, 1297,
	1303, 93, 94, 2162, 95, 0, 1269, 0, 0, 0,
	0, 184, 116, 120, 128, 129, 131, 0, 1305, 113,
	0, 209, 0, 0, 199, 194, 2588, 0, 201, 0,
	202, 203, 218, 0, 0, 0, 995, 996, 1225, 1187,
	1188, 0, 1193, 0, 0, 0, 0, 1606, 230, 0,
	1606, 238, 0, 2125, 0, 368, 0, 0, 0, 0,
	1031, 1128, 0, 1002, 0, 0, 0, 441, 437, 0,
	446, 452, 451, 457, -2, 0, 0, 0, 0, -2,
	0, 0, 1241, 1235, 1236, 0, 0, 0, 0, 2588,
	1391, 1397, 0, 1492, 1507, 464, 1398, 1419, 0, 0,
	0, 1408, 1404, 1401, 1637, 0, 0, 0, 0, 0,
	1630, 1633, 534, 535, 287, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 1038, 1042, 0, 2200, 2200, 0,
	2155, 0, 0, 0, 0, 269, 0, 272, 0, 0,
	0, 277, 278, 279, 280, 281, 271, 261, 1606, 0,
	0, 649, 0, 0, 801, 0, 824, 833, 835, 838,
	876, 878, 895, 922, 923, 1059, 0, 1059, 0, 0,
	943, 1455, 0, 1530, 1461, 1512, 1513, 0, 1267, 0,
	1771, 1814, 0, 0, -2, 0, 0, 1818, 0, 0,
	0, -2, 0, 0, 0, 2048, 2050, 0, 2104, 1914,
	0, 0, 0, 1918, 1902, 1903, 0, 2022, 2065, 2094,
	2098, 0, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 0,
	2144, 2178, 2182, 1995, 1996, 2000, 2158, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	1741, 0, 0, 2066, 2077, 2079, 1856, 1857, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, -2, -2,
	-2, 1874, 1875, 1876, -2, -2, -2, 0, 0, 0,
	2080, 2082, 2083, 2087, 2088, 0, 1978, 1979, 1980, 2089,
	0, 1494, 1488, 1549, 0, 1635, 1553, 0, 1549, 1549,
	1501, 1595, 0, 0, 1619, 0, 1567, 0, 1568, 0,
	1600, 0, 1575, 1578, 1579, 1589, 0, 1581, 0, 1584,
	0, 1914, -2, 313, 315, 317, 0, 320, 321, 0,
	0, 602, 603, 601, 585, 0, 0, 1645, 0, 0,
	1721, 1725, 1749, 610, 611, 609, 496, 505, 226, 0,
	1604, 0, 0, 0, 0, 0, 0, 195, 1079, 1109,
	0, 0, 0, 1101, 0, 0, 1115, 161, 162, 0,
	0, 0, 0, 171, 0, 0, 168, 0, 177, 181,
	1066, 0, 0, 0, 0, 1275, 0, 0, 0, 133,
	134, 135, 0, 140, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 1382, 0, 1376, 0, 0,
	0, 197, 0, 0, 0, 1264, 220, 0, 0, 0,
	0, 0, 1228, 1229, 1288, 1292, 1300, 0, 0, 0,
	238, 236, 0, 239, 0, 242, 243, 0, 245, 238,
	232, 0, 0, 0, 1146, 382, 1005, 1116, 0, 1118,
	0, 1003, 0, 0, 1117, 433, 0, 440, 0, 454,
	0, 0, 1167, 0, 0, 1190, 1201, 1146, 0, 1240,
	1242, 0, 1250, 0, 0, 0, 1393, 1397, 0, 1386,
	1387, 1526, 1399, 1417, -2, 0, 0, 1507, 1425, 1422,
	1428, 1429, 0, 309, 0, 304, 306, 0, 290, 0,
	0, 1034, 1039, 0, 0, 0, 0, 0, 1410, 1412,
	0, 0, 0, 0, 0, 0, 260, 271, 1606, 296,
	0, 795, 819, 886, 924, 1058, 0, 0, 926, 0,
	0, 1529, 1516, 1517, 1514, 1267, 1816, 1820, 0, 0,
	0, 1822, -2, 0, 1844, -2, -2, 2051, 2103, 1893,
	1507, 1915, 1917, 1904, 2097, 1766, 0, 2002, 1999, 0,
	1986, 0, 1939, 1940, 0, 0, 1943, 1945, 1946, 1947,
	1705, 1698, 1697, 2076, 0, 0, 0, 0, 1977, 1489,
	0, 1991, 0, 0, 1557, 1991, 1991, 1596, 0, 1598,
	1565, 1558, 0, 2178, 1591, 1583, 0, 0, 318, 0,
	322, 323, 0, 1639, 1644, 0, 1650, 1720, 227, 155,
	156, 1279, 1283, 1280, 0, 158, 0, 1080, 0, 1083,
	0, 0, 0, 0, 1090, 1102, 0, 0, 0, 0,
	0, 1103, 0, 1132, 0, 1255, 1262, 0, -2, 0,
	0, 0, 164, 187, 0, 0, 188, 1309, 166, 0,
	0, 194, 194, 0, 0, 1271, 1273, 1286, 0, 0,
	0, 0, 143, 0, 0, 1289, 1293, 1301, 1296, 1298,
	1304, 0, 1383, 0, 0, 1306, 207, 208, 0, 194,
	0, 194, 200, 194, 1264, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 231, 302, 238, 370, 0, 1053,
	0, 1128, 1120, 1121, 1122, 0, 1127, 1129, 0, 0,
	1019, 1004, 0, 1015, 0, 0, 1032, 1007, 0, 438,
	455, 0, 458, 0, 461, 993, 1164, 1198, 1146, 0,
	1232, 0, 0, 0, 0, 0, 0, 0, 1395, 1397,
	0, 1388, 1389, 1419, 1525, 0, 0, 0, 1407, 1526,
	0, 311, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 273, 0, 274, 275, 276, 262, 263,
	651, 653, 0, 0, 659, 1057, 0, 0, 0, 0,
	1515, 1824, -2, -2, 1845, 0, 2179, 2181, 1507, 0,
	1988, 1509, 0, 0, -2, 0, 0, 0, 1490, 1473,
	0, 1548, 1540, 1542, 1544, 2477, 2271, 2587, 1474, 1475,
	1618, 0, 1586, 319, 604, 0, 1646, 0, 0, 1281,
	160, 0, 1084, 1085, 2154, 1087, 0, 1089, 1091, 1092,
	1093, 0, 1096, 2202, 0, 1100, 0, 1111, 1133, 0,
	1142, 0, 1257, 1267, 1261, 0, 1259, 1144, 0, 163,
	165, 189, 186, 1264, 0, 167, 176, 0, 0, 115,
	0, 0, 2265, 146, 144, 142, 1268, 117, 0, 209,
	219, 1263, 221, 204, 194, 0, 1290, 1294, 1302, 240,
	0, 241, 244, 0, 0, 1068, 0, 1006, 1119, 0,
	1130, 1131, 1009, 0, 1008, 0, 0, 0, 0, 0,
	439, 442, 0, 445, 0, 0, 0, 0, 0, 1243,
	1241, 0, 1249, 0, 0, 0, 1375, 0, 0, 1390,
	1391, 462, 1413, 0, 0, 1419, 1430, 289, 0, 0,
	1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1041, 1144, 0, 0, 1108, 0, 294, 270, 0, 655,
	0, 657, 0, 925, 927, 0, 0, 1916, 2006, 0,
	0, 1941, 1942, -2, 0, 1882, 1990, 1992, 0, 0,
	0, 0, 0, 1559, 1640, 1277, 0, 1284, 1082, 1086,
	0, 0, 0, 1150, 0, 0, 1104, 0, 1136, 1137,
	1053, 0, 1138, 1139, 1140, 1256, 1518, 1262, 1053, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 198,
	222, 1264, 237, 255, 0, 1199, 1007, 1067, 0, 0,
	1017, 0, 1020, 0, 1016, 1013, 1014, 1005, 0, 443,
	444, 459, 0, 460, 0, 1202, 0, 0, 1250, 0,
	0, 1378, 1374, 1397, 1392, 1393, 1637, 1416, 1420, 0,
	0, 1142, 1144, 1064, 0, 654, 0, 0, 935, 936,
	0, 0, 0, 0, 2001, 1510, 1883, 0, 0, 1543,
	1545, 1546, 1547, 1278, 0, 0, 1095, 1155, 0, 0,
	0, 1134, 1135, 1064, 0, 1260, 1258, 1113, 0, 1146,
	169, 0, 1144, 0, 1073, 0, 0, 1076, 0, 0,
	147, 2265, 145, 0, 194, 258, 0, 252, 250, 251,
	1009, 0, 0, 1124, 1126, 0, 1021, 1053, 1019, 456,
	1200, 1233, 1144, 0, 1142, 0, 1385, 1397, 1379, 1380,
	0, 1395, 0, 312, 312, 1053, 1142, 1007, 1063, 312,
	656, 658, 1998, 2018, 2007, -2, 2546, 2272, 0, 2018,
	2018, 1993, 1994, 0, 0, 1097, 1151, 1152, 0, 1147,
	1148, 1149, 2201, 1098, 1099, 1132, 0, 0, 1150, 190,
	1053, 1070, 0, 0, 1071, 0, 0, 150, 0, 152,
	223, 246, 0, 0, 1001, 0, 1123, 0, 0, 0,
	0, 1068, 1009, 1142, 0, 1053, 0, 1371, 1384, 0,
	1394, 1375, 0, 291, 292, 1064, 1053, 1637, 0, 293,
	2003, 0, 0, 2009, 2010, 2011, 2012, 2013, 2004, 2005,
	1088, 0, 1153, 0, 1154, 0, 0, 0, 1637, 1141,
	0, 1155, 174, 1074, 0, 1077, 0, 148, 0, 253,
	254, 998, 1000, 0, 1125, 1010, 0, 1012, 1007, 1018,
	1053, 0, 1064, 0, 1377, 2163, 1378, 1414, 0, 1007,
	1064, 1107, 0, 2015, 2016, 0, 0, 0, 1156, 0,
	1159, 1160, 0, 1157, 1112, 0, 1132, 0, 0, 0,
	0, 1011, 1009, 1064, 1144, 1007, 1142, 1385, 0, 1637,
	1007, 2014, 2017, 2008, 1094, 1158, 1161, 1162, 1143, 1114,
	0, 0, 256, 0, 1056, 1001, 1007, 1142, 1637, 1053,
	1372, 1637, 1105, 1637, 1061, 0, 0, 1052, 1054, 1055,
	999, 1637, 1053, 1246, 1064, 1415, 1106, 1075, 1060, 0,
	257, 1244, 1064, 1007, 0, 1007, 1637, 0, 1637, 1247,
	1061, 1245, 1078,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 573, 3, 579, 574, 3,
	584, 585, 577, 575, 589, 576, 586, 578, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 592, 3,
	565, 567, 566, 570, 588, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 582, 3, 583, 580, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 590, 572, 591, 568,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 569, 57908, 571, 57909, 581,
	57910, 587, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1305
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1332
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1439
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1509
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1515
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1524
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1533
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1542
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1549
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1668
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1678
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1682
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1691
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1692
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1696
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1705
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1722
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1729
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1741
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1748
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1765
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1784
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1795
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1805
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1815
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1824
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1835
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1841
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1872
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1958
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2004
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2010
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2235
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2282
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2328
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2412
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2420
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2447
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2581
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2741
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			return unimplemented(sqllex, "alter function")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2840
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2849
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2875
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2879
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2898
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2906
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2982
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2996
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3048
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3162
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3182
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "CREATE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplemented(sqllex, "create access method")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			return unimplemented(sqllex, "create cast")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "create operator")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "create publication")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "create rule")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplemented(sqllex, "create server")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3246
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3249
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3250
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3254
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3268
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return unimplemented(sqllex, "drop server")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3401
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3436
		{

			sqlVAL.union.val = nil
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "DELETE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3523
		{
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3549
		{
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "DROP")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3670
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3815
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3839
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3847
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "DELETE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "INSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "DELETE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3894
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "INSERT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3928
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3961
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4050
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4054
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "GRANT")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4117
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "RESET")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "RESET")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "USE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4191
		{
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "USE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4379
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{
			return unimplemented(sqllex, "set from current")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4434
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = tree.Low
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = tree.Normal
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = tree.High
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.str = "client_encoding"
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.str = "timezone"
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4681
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4744
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4890
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4963
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = true
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = true
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = false
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5098
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5168
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = true
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = false
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5215
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5264
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5317
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5325
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5360
		{
		}
	case 935:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5369
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5473
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5480
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5620
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "RESUME")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5865
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5904
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5920
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5949
		{

			sqlVAL.union.val = nil
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.str = ""
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5965
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = nil
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5988
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5992
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6018
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6032
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6047
		{
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6141
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6154
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.str = ""
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6318
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6418
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6443
		{

			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = false
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6556
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6584
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6594
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6675
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6677
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6678
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6835
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6844
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6852
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6863
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = true
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6955
		{

			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = false
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6970
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6984
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6996
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7008
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7018
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = nil
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7138
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7166
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7168
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7170
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7172
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7174
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7212
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7230
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7249
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7266
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7283
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = false
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = true
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = false
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = true
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = false
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7347
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.str = ""
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7420
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7426
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7651
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7657
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7669
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7675
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7689
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7695
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7713
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7717
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7728
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7755
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7805
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7813
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7830
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7883
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7900
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7903
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7904
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7945
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7947
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7951
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8064
		{

		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8079
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.str = ""
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.str = ""
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.str = ""
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8134
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8147
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8148
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8195
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8208
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8284
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8288
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8326
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8379
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8394
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = true
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = false
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8749
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8750
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = nil
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8763
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = false
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8798
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8865
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9021
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9055
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9092
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9097
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9144
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9193
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9269
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9302
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = nil
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = true
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = false
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.str = tree.AstFull
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.str = tree.AstRight
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.str = tree.AstInner
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9422
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = tree.AstHash
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9491
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9536
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = true
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = false
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = true
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = false
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9585
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9598
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9606
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9607
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9635
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9655
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9704
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = types.Geography
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9766
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9774
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9800
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9808
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = nil
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = types.Int2
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = types.Int
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = types.Float4
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = types.Float
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9851
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9859
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9867
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = types.Bool
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = types.Float
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9906
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9928
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = types.String
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = types.Date
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9977
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9985
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10008
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10016
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10033
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = true
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = false
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = types.Interval
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10156
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = nil
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10186
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10564
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10785
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10811
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10835
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10865
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10876
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10877
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10892
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10901
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10967
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11162
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11163
		{
			return unimplemented(sqllex, "treat")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11184
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11236
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.str = ""
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11338
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11435
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.Any
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.Some
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.All
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.Div
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.LT
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = tree.GT
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = tree.LE
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = tree.GE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = tree.NE
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.Like
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11797
		{
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11877
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11966
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11975
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12015
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12248
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.str = ""
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
