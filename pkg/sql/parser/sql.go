// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12859

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1486,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 392,
	-2, 0,
	-1, 74,
	240, 231,
	505, 231,
	-2, 0,
	-1, 87,
	228, 1246,
	242, 1246,
	258, 388,
	385, 388,
	395, 1016,
	431, 388,
	443, 1016,
	489, 1016,
	516, 388,
	542, 1016,
	-2, 0,
	-1, 93,
	132, 1486,
	235, 1486,
	527, 1486,
	528, 1486,
	-2, 0,
	-1, 109,
	150, 1457,
	169, 1457,
	182, 1457,
	238, 1457,
	271, 1457,
	337, 1457,
	347, 1457,
	522, 1457,
	-2, 1428,
	-1, 148,
	158, 874,
	257, 874,
	388, 841,
	448, 841,
	488, 841,
	508, 874,
	510, 841,
	-2, 0,
	-1, 150,
	4, 1488,
	21, 1488,
	22, 1488,
	23, 1488,
	24, 1488,
	25, 1488,
	26, 1488,
	27, 1488,
	29, 1488,
	30, 1488,
	36, 1488,
	41, 1488,
	42, 1488,
	44, 1488,
	45, 1488,
	46, 1488,
	47, 1488,
	48, 1488,
	49, 1488,
	50, 1488,
	51, 1488,
	53, 1488,
	54, 1488,
	55, 1488,
	56, 1488,
	58, 1488,
	59, 1488,
	60, 1488,
	61, 1488,
	62, 1488,
	63, 1488,
	64, 1488,
	68, 1488,
	69, 1488,
	70, 1488,
	71, 1488,
	73, 1488,
	74, 1488,
	75, 1488,
	79, 1488,
	80, 1488,
	81, 1488,
	82, 1488,
	83, 1488,
	84, 1488,
	85, 1488,
	88, 1488,
	89, 1488,
	90, 1488,
	91, 1488,
	92, 1488,
	94, 1488,
	96, 1488,
	97, 1488,
	98, 1488,
	99, 1488,
	100, 1488,
	101, 1488,
	103, 1488,
	104, 1488,
	105, 1488,
	107, 1488,
	108, 1488,
	109, 1488,
	117, 1488,
	118, 1488,
	119, 1488,
	120, 1488,
	121, 1488,
	123, 1488,
	124, 1488,
	125, 1488,
	127, 1488,
	128, 1488,
	129, 1488,
	131, 1488,
	132, 1488,
	133, 1488,
	135, 1488,
	136, 1488,
	137, 1488,
	140, 1488,
	141, 1488,
	142, 1488,
	144, 1488,
	145, 1488,
	147, 1488,
	148, 1488,
	149, 1488,
	151, 1488,
	152, 1488,
	153, 1488,
	154, 1488,
	155, 1488,
	156, 1488,
	157, 1488,
	158, 1488,
	159, 1488,
	160, 1488,
	161, 1488,
	162, 1488,
	163, 1488,
	164, 1488,
	165, 1488,
	166, 1488,
	168, 1488,
	174, 1488,
	175, 1488,
	176, 1488,
	177, 1488,
	181, 1488,
	183, 1488,
	184, 1488,
	188, 1488,
	189, 1488,
	190, 1488,
	191, 1488,
	192, 1488,
	193, 1488,
	194, 1488,
	195, 1488,
	196, 1488,
	197, 1488,
	198, 1488,
	199, 1488,
	200, 1488,
	202, 1488,
	203, 1488,
	205, 1488,
	206, 1488,
	208, 1488,
	209, 1488,
	210, 1488,
	211, 1488,
	212, 1488,
	213, 1488,
	214, 1488,
	215, 1488,
	216, 1488,
	218, 1488,
	219, 1488,
	221, 1488,
	222, 1488,
	223, 1488,
	224, 1488,
	228, 1488,
	229, 1488,
	230, 1488,
	231, 1488,
	232, 1488,
	235, 1488,
	236, 1488,
	237, 1488,
	239, 1488,
	241, 1488,
	242, 1488,
	244, 1488,
	246, 1488,
	247, 1488,
	248, 1488,
	250, 1488,
	254, 1488,
	255, 1488,
	256, 1488,
	257, 1488,
	258, 1488,
	259, 1488,
	261, 1488,
	262, 1488,
	263, 1488,
	265, 1488,
	266, 1488,
	268, 1488,
	269, 1488,
	272, 1488,
	276, 1488,
	277, 1488,
	278, 1488,
	281, 1488,
	282, 1488,
	283, 1488,
	284, 1488,
	286, 1488,
	287, 1488,
	288, 1488,
	289, 1488,
	290, 1488,
	291, 1488,
	292, 1488,
	293, 1488,
	294, 1488,
	295, 1488,
	296, 1488,
	297, 1488,
	298, 1488,
	299, 1488,
	300, 1488,
	301, 1488,
	302, 1488,
	303, 1488,
	304, 1488,
	305, 1488,
	306, 1488,
	307, 1488,
	309, 1488,
	311, 1488,
	312, 1488,
	313, 1488,
	314, 1488,
	315, 1488,
	316, 1488,
	317, 1488,
	318, 1488,
	319, 1488,
	320, 1488,
	321, 1488,
	322, 1488,
	324, 1488,
	325, 1488,
	327, 1488,
	329, 1488,
	330, 1488,
	332, 1488,
	333, 1488,
	334, 1488,
	335, 1488,
	336, 1488,
	339, 1488,
	342, 1488,
	343, 1488,
	344, 1488,
	345, 1488,
	348, 1488,
	349, 1488,
	350, 1488,
	352, 1488,
	354, 1488,
	355, 1488,
	356, 1488,
	357, 1488,
	358, 1488,
	359, 1488,
	360, 1488,
	361, 1488,
	362, 1488,
	363, 1488,
	364, 1488,
	365, 1488,
	367, 1488,
	368, 1488,
	369, 1488,
	370, 1488,
	371, 1488,
	372, 1488,
	373, 1488,
	374, 1488,
	375, 1488,
	376, 1488,
	377, 1488,
	378, 1488,
	379, 1488,
	380, 1488,
	381, 1488,
	383, 1488,
	384, 1488,
	386, 1488,
	387, 1488,
	388, 1488,
	389, 1488,
	390, 1488,
	391, 1488,
	392, 1488,
	393, 1488,
	394, 1488,
	395, 1488,
	396, 1488,
	397, 1488,
	399, 1488,
	401, 1488,
	402, 1488,
	403, 1488,
	408, 1488,
	410, 1488,
	411, 1488,
	412, 1488,
	413, 1488,
	414, 1488,
	415, 1488,
	416, 1488,
	417, 1488,
	418, 1488,
	420, 1488,
	421, 1488,
	422, 1488,
	424, 1488,
	425, 1488,
	426, 1488,
	427, 1488,
	428, 1488,
	429, 1488,
	431, 1488,
	432, 1488,
	433, 1488,
	434, 1488,
	435, 1488,
	436, 1488,
	437, 1488,
	438, 1488,
	439, 1488,
	440, 1488,
	441, 1488,
	443, 1488,
	444, 1488,
	445, 1488,
	446, 1488,
	447, 1488,
	448, 1488,
	450, 1488,
	451, 1488,
	452, 1488,
	453, 1488,
	454, 1488,
	455, 1488,
	457, 1488,
	458, 1488,
	459, 1488,
	460, 1488,
	461, 1488,
	462, 1488,
	463, 1488,
	465, 1488,
	467, 1488,
	468, 1488,
	469, 1488,
	470, 1488,
	471, 1488,
	472, 1488,
	473, 1488,
	474, 1488,
	475, 1488,
	476, 1488,
	477, 1488,
	478, 1488,
	479, 1488,
	480, 1488,
	481, 1488,
	482, 1488,
	484, 1488,
	485, 1488,
	487, 1488,
	488, 1488,
	490, 1488,
	491, 1488,
	492, 1488,
	493, 1488,
	494, 1488,
	495, 1488,
	496, 1488,
	497, 1488,
	498, 1488,
	500, 1488,
	501, 1488,
	502, 1488,
	503, 1488,
	504, 1488,
	506, 1488,
	508, 1488,
	509, 1488,
	510, 1488,
	511, 1488,
	512, 1488,
	513, 1488,
	515, 1488,
	516, 1488,
	517, 1488,
	518, 1488,
	520, 1488,
	521, 1488,
	524, 1488,
	525, 1488,
	526, 1488,
	527, 1488,
	528, 1488,
	529, 1488,
	530, 1488,
	532, 1488,
	535, 1488,
	536, 1488,
	537, 1488,
	538, 1488,
	539, 1488,
	540, 1488,
	542, 1488,
	543, 1488,
	544, 1488,
	545, 1488,
	547, 1488,
	552, 1488,
	553, 1488,
	554, 1488,
	555, 1488,
	556, 1488,
	557, 1488,
	-2, 0,
	-1, 151,
	1, 1343,
	130, 1343,
	246, 1343,
	326, 1343,
	383, 1343,
	392, 1343,
	561, 1343,
	585, 1343,
	-2, 0,
	-1, 153,
	1, 1343,
	585, 1343,
	-2, 0,
	-1, 154,
	1, 1343,
	585, 1343,
	-2, 0,
	-1, 155,
	1, 1343,
	505, 1343,
	585, 1343,
	-2, 0,
	-1, 183,
	150, 1456,
	169, 1456,
	182, 1456,
	238, 1456,
	271, 1456,
	337, 1456,
	347, 1456,
	522, 1456,
	-2, 1431,
	-1, 229,
	4, 1495,
	5, 1495,
	6, 1495,
	7, 1495,
	8, 1495,
	9, 1495,
	10, 1495,
	21, 1495,
	22, 1495,
	23, 1495,
	24, 1495,
	25, 1495,
	26, 1495,
	27, 1495,
	29, 1495,
	30, 1495,
	36, 1495,
	37, 1495,
	41, 1495,
	42, 1495,
	43, 1495,
	44, 1495,
	45, 1495,
	46, 1495,
	47, 1495,
	48, 1495,
	49, 1495,
	50, 1495,
	51, 1495,
	53, 1495,
	54, 1495,
	55, 1495,
	56, 1495,
	58, 1495,
	59, 1495,
	60, 1495,
	61, 1495,
	62, 1495,
	63, 1495,
	64, 1495,
	65, 1495,
	66, 1495,
	67, 1495,
	68, 1495,
	69, 1495,
	70, 1495,
	71, 1495,
	73, 1495,
	74, 1495,
	75, 1495,
	77, 1495,
	79, 1495,
	80, 1495,
	81, 1495,
	82, 1495,
	83, 1495,
	84, 1495,
	85, 1495,
	88, 1495,
	89, 1495,
	90, 1495,
	91, 1495,
	92, 1495,
	94, 1495,
	96, 1495,
	97, 1495,
	98, 1495,
	99, 1495,
	100, 1495,
	101, 1495,
	103, 1495,
	104, 1495,
	105, 1495,
	106, 1495,
	107, 1495,
	108, 1495,
	109, 1495,
	110, 1495,
	111, 1495,
	112, 1495,
	113, 1495,
	114, 1495,
	115, 1495,
	116, 1495,
	117, 1495,
	118, 1495,
	119, 1495,
	120, 1495,
	121, 1495,
	122, 1495,
	123, 1495,
	124, 1495,
	125, 1495,
	126, 1495,
	127, 1495,
	128, 1495,
	129, 1495,
	131, 1495,
	132, 1495,
	133, 1495,
	135, 1495,
	136, 1495,
	137, 1495,
	140, 1495,
	141, 1495,
	142, 1495,
	144, 1495,
	145, 1495,
	147, 1495,
	148, 1495,
	149, 1495,
	151, 1495,
	152, 1495,
	153, 1495,
	154, 1495,
	155, 1495,
	156, 1495,
	157, 1495,
	158, 1495,
	159, 1495,
	160, 1495,
	161, 1495,
	162, 1495,
	163, 1495,
	164, 1495,
	165, 1495,
	166, 1495,
	167, 1495,
	168, 1495,
	174, 1495,
	175, 1495,
	176, 1495,
	177, 1495,
	181, 1495,
	183, 1495,
	184, 1495,
	187, 1495,
	188, 1495,
	189, 1495,
	190, 1495,
	191, 1495,
	192, 1495,
	193, 1495,
	194, 1495,
	195, 1495,
	196, 1495,
	197, 1495,
	198, 1495,
	199, 1495,
	200, 1495,
	202, 1495,
	203, 1495,
	205, 1495,
	206, 1495,
	208, 1495,
	209, 1495,
	210, 1495,
	211, 1495,
	212, 1495,
	213, 1495,
	214, 1495,
	215, 1495,
	216, 1495,
	217, 1495,
	218, 1495,
	219, 1495,
	221, 1495,
	222, 1495,
	223, 1495,
	224, 1495,
	228, 1495,
	229, 1495,
	230, 1495,
	231, 1495,
	232, 1495,
	234, 1495,
	235, 1495,
	236, 1495,
	237, 1495,
	239, 1495,
	241, 1495,
	242, 1495,
	243, 1495,
	244, 1495,
	245, 1495,
	246, 1495,
	247, 1495,
	248, 1495,
	249, 1495,
	250, 1495,
	254, 1495,
	255, 1495,
	256, 1495,
	257, 1495,
	258, 1495,
	259, 1495,
	261, 1495,
	262, 1495,
	263, 1495,
	265, 1495,
	266, 1495,
	267, 1495,
	268, 1495,
	269, 1495,
	270, 1495,
	272, 1495,
	276, 1495,
	277, 1495,
	278, 1495,
	279, 1495,
	280, 1495,
	281, 1495,
	282, 1495,
	283, 1495,
	284, 1495,
	286, 1495,
	287, 1495,
	288, 1495,
	289, 1495,
	290, 1495,
	291, 1495,
	292, 1495,
	293, 1495,
	294, 1495,
	295, 1495,
	296, 1495,
	297, 1495,
	298, 1495,
	299, 1495,
	300, 1495,
	301, 1495,
	302, 1495,
	303, 1495,
	304, 1495,
	305, 1495,
	306, 1495,
	307, 1495,
	309, 1495,
	310, 1495,
	311, 1495,
	312, 1495,
	313, 1495,
	314, 1495,
	315, 1495,
	316, 1495,
	317, 1495,
	318, 1495,
	319, 1495,
	320, 1495,
	321, 1495,
	322, 1495,
	323, 1495,
	324, 1495,
	325, 1495,
	326, 1495,
	327, 1495,
	328, 1495,
	329, 1495,
	330, 1495,
	331, 1495,
	332, 1495,
	333, 1495,
	334, 1495,
	335, 1495,
	336, 1495,
	339, 1495,
	343, 1495,
	344, 1495,
	345, 1495,
	348, 1495,
	349, 1495,
	350, 1495,
	351, 1495,
	352, 1495,
	353, 1495,
	354, 1495,
	355, 1495,
	356, 1495,
	357, 1495,
	358, 1495,
	359, 1495,
	360, 1495,
	361, 1495,
	362, 1495,
	363, 1495,
	364, 1495,
	365, 1495,
	367, 1495,
	368, 1495,
	369, 1495,
	370, 1495,
	371, 1495,
	372, 1495,
	373, 1495,
	374, 1495,
	375, 1495,
	376, 1495,
	377, 1495,
	378, 1495,
	379, 1495,
	380, 1495,
	381, 1495,
	383, 1495,
	384, 1495,
	386, 1495,
	387, 1495,
	388, 1495,
	389, 1495,
	390, 1495,
	391, 1495,
	392, 1495,
	393, 1495,
	394, 1495,
	395, 1495,
	396, 1495,
	397, 1495,
	399, 1495,
	401, 1495,
	402, 1495,
	403, 1495,
	408, 1495,
	410, 1495,
	411, 1495,
	412, 1495,
	413, 1495,
	414, 1495,
	415, 1495,
	416, 1495,
	417, 1495,
	418, 1495,
	420, 1495,
	421, 1495,
	422, 1495,
	423, 1495,
	424, 1495,
	425, 1495,
	426, 1495,
	427, 1495,
	428, 1495,
	429, 1495,
	431, 1495,
	432, 1495,
	433, 1495,
	434, 1495,
	435, 1495,
	436, 1495,
	437, 1495,
	438, 1495,
	439, 1495,
	440, 1495,
	441, 1495,
	443, 1495,
	444, 1495,
	445, 1495,
	446, 1495,
	447, 1495,
	448, 1495,
	449, 1495,
	450, 1495,
	451, 1495,
	452, 1495,
	453, 1495,
	454, 1495,
	455, 1495,
	456, 1495,
	457, 1495,
	458, 1495,
	459, 1495,
	460, 1495,
	461, 1495,
	462, 1495,
	463, 1495,
	465, 1495,
	467, 1495,
	468, 1495,
	469, 1495,
	470, 1495,
	471, 1495,
	472, 1495,
	473, 1495,
	474, 1495,
	475, 1495,
	476, 1495,
	477, 1495,
	478, 1495,
	479, 1495,
	480, 1495,
	481, 1495,
	482, 1495,
	484, 1495,
	485, 1495,
	486, 1495,
	487, 1495,
	488, 1495,
	490, 1495,
	491, 1495,
	492, 1495,
	493, 1495,
	494, 1495,
	495, 1495,
	496, 1495,
	497, 1495,
	498, 1495,
	500, 1495,
	501, 1495,
	502, 1495,
	503, 1495,
	504, 1495,
	506, 1495,
	508, 1495,
	509, 1495,
	510, 1495,
	511, 1495,
	512, 1495,
	513, 1495,
	514, 1495,
	515, 1495,
	516, 1495,
	517, 1495,
	518, 1495,
	520, 1495,
	521, 1495,
	523, 1495,
	524, 1495,
	525, 1495,
	526, 1495,
	527, 1495,
	528, 1495,
	529, 1495,
	530, 1495,
	531, 1495,
	532, 1495,
	535, 1495,
	536, 1495,
	537, 1495,
	538, 1495,
	539, 1495,
	540, 1495,
	542, 1495,
	543, 1495,
	544, 1495,
	545, 1495,
	547, 1495,
	552, 1495,
	553, 1495,
	554, 1495,
	555, 1495,
	556, 1495,
	557, 1495,
	558, 1495,
	566, 1495,
	573, 1495,
	574, 1495,
	575, 1495,
	582, 1495,
	586, 1495,
	-2, 0,
	-1, 725,
	4, 1244,
	21, 1244,
	22, 1244,
	23, 1244,
	24, 1244,
	25, 1244,
	26, 1244,
	27, 1244,
	29, 1244,
	30, 1244,
	36, 1244,
	41, 1244,
	42, 1244,
	44, 1244,
	45, 1244,
	46, 1244,
	47, 1244,
	48, 1244,
	49, 1244,
	50, 1244,
	51, 1244,
	53, 1244,
	54, 1244,
	55, 1244,
	56, 1244,
	58, 1244,
	59, 1244,
	60, 1244,
	61, 1244,
	62, 1244,
	63, 1244,
	64, 1244,
	68, 1244,
	69, 1244,
	70, 1244,
	71, 1244,
	73, 1244,
	74, 1244,
	75, 1244,
	79, 1244,
	80, 1244,
	81, 1244,
	82, 1244,
	83, 1244,
	84, 1244,
	85, 1244,
	88, 1244,
	89, 1244,
	90, 1244,
	91, 1244,
	92, 1244,
	94, 1244,
	96, 1244,
	97, 1244,
	98, 1244,
	99, 1244,
	100, 1244,
	101, 1244,
	103, 1244,
	104, 1244,
	105, 1244,
	107, 1244,
	108, 1244,
	109, 1244,
	117, 1244,
	118, 1244,
	119, 1244,
	120, 1244,
	121, 1244,
	123, 1244,
	124, 1244,
	125, 1244,
	127, 1244,
	128, 1244,
	129, 1244,
	131, 1244,
	132, 1244,
	133, 1244,
	135, 1244,
	136, 1244,
	137, 1244,
	140, 1244,
	141, 1244,
	142, 1244,
	144, 1244,
	145, 1244,
	147, 1244,
	148, 1244,
	149, 1244,
	151, 1244,
	152, 1244,
	153, 1244,
	154, 1244,
	155, 1244,
	156, 1244,
	157, 1244,
	158, 1244,
	159, 1244,
	160, 1244,
	161, 1244,
	162, 1244,
	163, 1244,
	164, 1244,
	165, 1244,
	166, 1244,
	168, 1244,
	174, 1244,
	175, 1244,
	176, 1244,
	177, 1244,
	181, 1244,
	183, 1244,
	184, 1244,
	188, 1244,
	189, 1244,
	190, 1244,
	191, 1244,
	192, 1244,
	193, 1244,
	194, 1244,
	195, 1244,
	196, 1244,
	197, 1244,
	198, 1244,
	199, 1244,
	200, 1244,
	202, 1244,
	203, 1244,
	205, 1244,
	206, 1244,
	208, 1244,
	209, 1244,
	210, 1244,
	211, 1244,
	212, 1244,
	213, 1244,
	214, 1244,
	215, 1244,
	216, 1244,
	218, 1244,
	219, 1244,
	221, 1244,
	222, 1244,
	223, 1244,
	224, 1244,
	228, 1244,
	229, 1244,
	230, 1244,
	231, 1244,
	232, 1244,
	235, 1244,
	236, 1244,
	237, 1244,
	239, 1244,
	241, 1244,
	242, 1244,
	244, 1244,
	246, 1244,
	247, 1244,
	248, 1244,
	250, 1244,
	254, 1244,
	255, 1244,
	256, 1244,
	257, 1244,
	258, 1244,
	259, 1244,
	261, 1244,
	262, 1244,
	263, 1244,
	265, 1244,
	266, 1244,
	268, 1244,
	269, 1244,
	272, 1244,
	276, 1244,
	277, 1244,
	278, 1244,
	281, 1244,
	282, 1244,
	283, 1244,
	284, 1244,
	286, 1244,
	287, 1244,
	288, 1244,
	289, 1244,
	290, 1244,
	291, 1244,
	292, 1244,
	293, 1244,
	294, 1244,
	295, 1244,
	296, 1244,
	297, 1244,
	298, 1244,
	299, 1244,
	300, 1244,
	301, 1244,
	302, 1244,
	303, 1244,
	304, 1244,
	305, 1244,
	306, 1244,
	307, 1244,
	309, 1244,
	311, 1244,
	312, 1244,
	313, 1244,
	314, 1244,
	315, 1244,
	316, 1244,
	317, 1244,
	318, 1244,
	319, 1244,
	320, 1244,
	321, 1244,
	322, 1244,
	324, 1244,
	325, 1244,
	327, 1244,
	329, 1244,
	330, 1244,
	332, 1244,
	333, 1244,
	334, 1244,
	335, 1244,
	336, 1244,
	339, 1244,
	343, 1244,
	344, 1244,
	345, 1244,
	348, 1244,
	349, 1244,
	350, 1244,
	352, 1244,
	354, 1244,
	355, 1244,
	356, 1244,
	357, 1244,
	358, 1244,
	359, 1244,
	360, 1244,
	361, 1244,
	362, 1244,
	363, 1244,
	364, 1244,
	365, 1244,
	367, 1244,
	368, 1244,
	369, 1244,
	370, 1244,
	371, 1244,
	372, 1244,
	373, 1244,
	374, 1244,
	375, 1244,
	376, 1244,
	377, 1244,
	378, 1244,
	379, 1244,
	380, 1244,
	381, 1244,
	383, 1244,
	384, 1244,
	386, 1244,
	387, 1244,
	388, 1244,
	389, 1244,
	390, 1244,
	391, 1244,
	392, 1244,
	393, 1244,
	394, 1244,
	395, 1244,
	396, 1244,
	397, 1244,
	399, 1244,
	401, 1244,
	402, 1244,
	403, 1244,
	408, 1244,
	410, 1244,
	411, 1244,
	412, 1244,
	413, 1244,
	414, 1244,
	415, 1244,
	416, 1244,
	417, 1244,
	418, 1244,
	420, 1244,
	421, 1244,
	422, 1244,
	424, 1244,
	425, 1244,
	426, 1244,
	427, 1244,
	428, 1244,
	429, 1244,
	431, 1244,
	432, 1244,
	433, 1244,
	434, 1244,
	435, 1244,
	436, 1244,
	437, 1244,
	438, 1244,
	439, 1244,
	440, 1244,
	441, 1244,
	443, 1244,
	444, 1244,
	445, 1244,
	446, 1244,
	447, 1244,
	448, 1244,
	450, 1244,
	451, 1244,
	452, 1244,
	453, 1244,
	454, 1244,
	455, 1244,
	457, 1244,
	458, 1244,
	459, 1244,
	460, 1244,
	461, 1244,
	462, 1244,
	463, 1244,
	465, 1244,
	467, 1244,
	468, 1244,
	469, 1244,
	470, 1244,
	471, 1244,
	472, 1244,
	473, 1244,
	474, 1244,
	475, 1244,
	476, 1244,
	477, 1244,
	478, 1244,
	479, 1244,
	480, 1244,
	481, 1244,
	482, 1244,
	484, 1244,
	485, 1244,
	487, 1244,
	488, 1244,
	490, 1244,
	491, 1244,
	492, 1244,
	493, 1244,
	494, 1244,
	495, 1244,
	496, 1244,
	497, 1244,
	498, 1244,
	500, 1244,
	501, 1244,
	502, 1244,
	503, 1244,
	504, 1244,
	506, 1244,
	508, 1244,
	509, 1244,
	510, 1244,
	511, 1244,
	512, 1244,
	513, 1244,
	515, 1244,
	516, 1244,
	517, 1244,
	518, 1244,
	520, 1244,
	521, 1244,
	524, 1244,
	525, 1244,
	526, 1244,
	527, 1244,
	528, 1244,
	529, 1244,
	530, 1244,
	532, 1244,
	535, 1244,
	536, 1244,
	537, 1244,
	538, 1244,
	539, 1244,
	540, 1244,
	542, 1244,
	543, 1244,
	544, 1244,
	545, 1244,
	547, 1244,
	552, 1244,
	553, 1244,
	554, 1244,
	555, 1244,
	556, 1244,
	557, 1244,
	-2, 0,
	-1, 744,
	186, 2252,
	505, 2252,
	565, 2252,
	584, 2252,
	-2, 0,
	-1, 745,
	186, 2357,
	505, 2357,
	565, 2357,
	584, 2357,
	-2, 0,
	-1, 746,
	186, 2239,
	505, 2239,
	565, 2239,
	584, 2239,
	-2, 0,
	-1, 748,
	186, 2488,
	505, 2488,
	565, 2488,
	584, 2488,
	-2, 0,
	-1, 750,
	186, 2528,
	505, 2528,
	565, 2528,
	584, 2528,
	-2, 0,
	-1, 757,
	186, 2384,
	505, 2384,
	565, 2384,
	584, 2384,
	-2, 676,
	-1, 790,
	584, 2188,
	587, 2188,
	-2, 947,
	-1, 791,
	584, 2190,
	587, 2190,
	-2, 948,
	-1, 792,
	584, 2189,
	587, 2189,
	-2, 949,
	-1, 793,
	587, 2115,
	-2, 950,
	-1, 816,
	182, 245,
	-2, 0,
	-1, 840,
	43, 2162,
	-2, 0,
	-1, 841,
	542, 1222,
	-2, 1017,
	-1, 857,
	4, 1624,
	21, 1624,
	22, 1624,
	23, 1624,
	24, 1624,
	25, 1624,
	26, 1624,
	27, 1624,
	29, 1624,
	30, 1624,
	36, 1624,
	41, 1624,
	42, 1624,
	44, 1624,
	45, 1624,
	46, 1624,
	47, 1624,
	48, 1624,
	49, 1624,
	50, 1624,
	51, 1624,
	53, 1624,
	54, 1624,
	55, 1624,
	56, 1624,
	58, 1624,
	59, 1624,
	60, 1624,
	61, 1624,
	62, 1624,
	63, 1624,
	64, 1624,
	68, 1624,
	69, 1624,
	70, 1624,
	71, 1624,
	73, 1624,
	74, 1624,
	75, 1624,
	79, 1624,
	80, 1624,
	81, 1624,
	82, 1624,
	83, 1624,
	84, 1624,
	85, 1624,
	88, 1624,
	89, 1624,
	90, 1624,
	91, 1624,
	92, 1624,
	94, 1624,
	96, 1624,
	97, 1624,
	98, 1624,
	99, 1624,
	100, 1624,
	101, 1624,
	103, 1624,
	104, 1624,
	105, 1624,
	107, 1624,
	108, 1624,
	109, 1624,
	117, 1624,
	118, 1624,
	119, 1624,
	120, 1624,
	121, 1624,
	123, 1624,
	124, 1624,
	125, 1624,
	127, 1624,
	128, 1624,
	129, 1624,
	131, 1624,
	132, 1624,
	133, 1624,
	135, 1624,
	136, 1624,
	137, 1624,
	140, 1624,
	141, 1624,
	142, 1624,
	144, 1624,
	145, 1624,
	147, 1624,
	148, 1624,
	149, 1624,
	151, 1624,
	152, 1624,
	153, 1624,
	154, 1624,
	155, 1624,
	156, 1624,
	157, 1624,
	158, 1624,
	159, 1624,
	160, 1624,
	161, 1624,
	162, 1624,
	163, 1624,
	164, 1624,
	165, 1624,
	166, 1624,
	168, 1624,
	174, 1624,
	175, 1624,
	176, 1624,
	177, 1624,
	181, 1624,
	183, 1624,
	184, 1624,
	188, 1624,
	189, 1624,
	190, 1624,
	191, 1624,
	192, 1624,
	193, 1624,
	194, 1624,
	195, 1624,
	196, 1624,
	197, 1624,
	198, 1624,
	199, 1624,
	200, 1624,
	202, 1624,
	203, 1624,
	205, 1624,
	206, 1624,
	208, 1624,
	209, 1624,
	210, 1624,
	211, 1624,
	212, 1624,
	213, 1624,
	214, 1624,
	215, 1624,
	216, 1624,
	218, 1624,
	219, 1624,
	221, 1624,
	222, 1624,
	223, 1624,
	224, 1624,
	228, 1624,
	229, 1624,
	230, 1624,
	231, 1624,
	232, 1624,
	235, 1624,
	236, 1624,
	237, 1624,
	239, 1624,
	241, 1624,
	242, 1624,
	244, 1624,
	246, 1624,
	247, 1624,
	248, 1624,
	250, 1624,
	254, 1624,
	255, 1624,
	256, 1624,
	257, 1624,
	258, 1624,
	259, 1624,
	261, 1624,
	262, 1624,
	263, 1624,
	265, 1624,
	266, 1624,
	268, 1624,
	269, 1624,
	272, 1624,
	276, 1624,
	277, 1624,
	278, 1624,
	281, 1624,
	282, 1624,
	283, 1624,
	284, 1624,
	286, 1624,
	287, 1624,
	288, 1624,
	289, 1624,
	290, 1624,
	291, 1624,
	292, 1624,
	293, 1624,
	294, 1624,
	295, 1624,
	296, 1624,
	297, 1624,
	298, 1624,
	299, 1624,
	300, 1624,
	301, 1624,
	302, 1624,
	303, 1624,
	304, 1624,
	305, 1624,
	306, 1624,
	307, 1624,
	309, 1624,
	311, 1624,
	312, 1624,
	313, 1624,
	314, 1624,
	315, 1624,
	316, 1624,
	317, 1624,
	318, 1624,
	319, 1624,
	320, 1624,
	321, 1624,
	322, 1624,
	324, 1624,
	325, 1624,
	327, 1624,
	329, 1624,
	330, 1624,
	332, 1624,
	333, 1624,
	334, 1624,
	335, 1624,
	336, 1624,
	339, 1624,
	343, 1624,
	344, 1624,
	345, 1624,
	348, 1624,
	349, 1624,
	350, 1624,
	352, 1624,
	354, 1624,
	355, 1624,
	356, 1624,
	357, 1624,
	358, 1624,
	359, 1624,
	360, 1624,
	361, 1624,
	362, 1624,
	363, 1624,
	364, 1624,
	365, 1624,
	367, 1624,
	368, 1624,
	369, 1624,
	370, 1624,
	371, 1624,
	372, 1624,
	373, 1624,
	374, 1624,
	375, 1624,
	376, 1624,
	377, 1624,
	378, 1624,
	379, 1624,
	380, 1624,
	381, 1624,
	383, 1624,
	384, 1624,
	386, 1624,
	387, 1624,
	388, 1624,
	389, 1624,
	390, 1624,
	391, 1624,
	392, 1624,
	393, 1624,
	394, 1624,
	395, 1624,
	396, 1624,
	397, 1624,
	399, 1624,
	401, 1624,
	402, 1624,
	403, 1624,
	408, 1624,
	410, 1624,
	411, 1624,
	412, 1624,
	413, 1624,
	414, 1624,
	415, 1624,
	416, 1624,
	417, 1624,
	418, 1624,
	420, 1624,
	421, 1624,
	422, 1624,
	424, 1624,
	425, 1624,
	426, 1624,
	427, 1624,
	428, 1624,
	429, 1624,
	431, 1624,
	432, 1624,
	433, 1624,
	434, 1624,
	435, 1624,
	436, 1624,
	437, 1624,
	438, 1624,
	439, 1624,
	440, 1624,
	441, 1624,
	443, 1624,
	444, 1624,
	445, 1624,
	446, 1624,
	447, 1624,
	448, 1624,
	450, 1624,
	451, 1624,
	452, 1624,
	453, 1624,
	454, 1624,
	455, 1624,
	457, 1624,
	458, 1624,
	459, 1624,
	460, 1624,
	461, 1624,
	462, 1624,
	463, 1624,
	465, 1624,
	467, 1624,
	468, 1624,
	469, 1624,
	470, 1624,
	471, 1624,
	472, 1624,
	473, 1624,
	474, 1624,
	475, 1624,
	476, 1624,
	477, 1624,
	478, 1624,
	479, 1624,
	480, 1624,
	481, 1624,
	482, 1624,
	484, 1624,
	485, 1624,
	487, 1624,
	488, 1624,
	490, 1624,
	491, 1624,
	492, 1624,
	493, 1624,
	494, 1624,
	495, 1624,
	496, 1624,
	497, 1624,
	498, 1624,
	500, 1624,
	501, 1624,
	502, 1624,
	503, 1624,
	504, 1624,
	506, 1624,
	508, 1624,
	509, 1624,
	510, 1624,
	511, 1624,
	512, 1624,
	513, 1624,
	515, 1624,
	516, 1624,
	517, 1624,
	518, 1624,
	520, 1624,
	521, 1624,
	524, 1624,
	525, 1624,
	526, 1624,
	527, 1624,
	528, 1624,
	529, 1624,
	530, 1624,
	532, 1624,
	535, 1624,
	536, 1624,
	537, 1624,
	538, 1624,
	539, 1624,
	540, 1624,
	542, 1624,
	543, 1624,
	544, 1624,
	545, 1624,
	547, 1624,
	552, 1624,
	553, 1624,
	554, 1624,
	555, 1624,
	556, 1624,
	557, 1624,
	-2, 0,
	-1, 865,
	258, 392,
	-2, 0,
	-1, 936,
	388, 842,
	448, 842,
	488, 842,
	510, 842,
	-2, 0,
	-1, 937,
	388, 841,
	448, 841,
	488, 841,
	510, 841,
	-2, 781,
	-1, 941,
	1, 888,
	581, 888,
	583, 888,
	585, 888,
	-2, 0,
	-1, 942,
	1, 816,
	581, 816,
	583, 816,
	585, 816,
	-2, 0,
	-1, 943,
	1, 820,
	581, 820,
	583, 820,
	585, 820,
	-2, 0,
	-1, 944,
	1, 946,
	182, 946,
	581, 946,
	583, 946,
	585, 946,
	-2, 0,
	-1, 952,
	1, 847,
	581, 847,
	583, 847,
	585, 847,
	-2, 0,
	-1, 958,
	1, 888,
	581, 888,
	583, 888,
	585, 888,
	-2, 0,
	-1, 959,
	1, 890,
	581, 890,
	583, 890,
	585, 890,
	-2, 0,
	-1, 960,
	1, 893,
	581, 893,
	583, 893,
	585, 893,
	-2, 0,
	-1, 966,
	1, 911,
	581, 911,
	583, 911,
	585, 911,
	-2, 0,
	-1, 967,
	1, 913,
	581, 913,
	583, 913,
	585, 913,
	-2, 0,
	-1, 972,
	1, 941,
	581, 941,
	583, 941,
	585, 941,
	-2, 0,
	-1, 1018,
	169, 1499,
	182, 1499,
	271, 1499,
	337, 1499,
	-2, 1435,
	-1, 1033,
	169, 1498,
	182, 1498,
	271, 1498,
	337, 1498,
	-2, 1432,
	-1, 1059,
	584, 2187,
	-2, 684,
	-1, 1087,
	5, 2179,
	582, 2177,
	-2, 2168,
	-1, 1095,
	5, 2200,
	582, 2197,
	-2, 2188,
	-1, 1096,
	5, 2201,
	582, 2198,
	-2, 2189,
	-1, 1104,
	584, 2185,
	-2, 2167,
	-1, 1105,
	582, 2611,
	-2, 2186,
	-1, 1128,
	582, 2610,
	-2, 2202,
	-1, 1129,
	5, 1699,
	-2, 2581,
	-1, 1130,
	5, 1700,
	-2, 2582,
	-1, 1131,
	5, 1701,
	-2, 2596,
	-1, 1132,
	5, 1702,
	-2, 2560,
	-1, 1133,
	5, 1703,
	-2, 2594,
	-1, 1134,
	5, 1711,
	-2, 2573,
	-1, 1135,
	5, 1698,
	-2, 2569,
	-1, 1136,
	5, 1698,
	-2, 2568,
	-1, 1137,
	5, 1698,
	-2, 2587,
	-1, 1138,
	5, 1709,
	-2, 2562,
	-1, 1139,
	5, 1714,
	-2, 2561,
	-1, 1140,
	5, 1716,
	-2, 2606,
	-1, 1143,
	5, 1738,
	-2, 2599,
	-1, 1144,
	5, 1730,
	-2, 2600,
	-1, 1145,
	5, 1738,
	-2, 2601,
	-1, 1146,
	5, 1734,
	-2, 2602,
	-1, 1147,
	5, 1684,
	-2, 2574,
	-1, 1148,
	5, 1685,
	-2, 2575,
	-1, 1149,
	5, 1686,
	-2, 2563,
	-1, 1177,
	5, 1721,
	-2, 2607,
	-1, 1178,
	5, 1722,
	-2, 2597,
	-1, 1179,
	5, 1723,
	543, 1723,
	-2, 2564,
	-1, 1180,
	5, 1724,
	543, 1724,
	-2, 2565,
	-1, 1217,
	582, 2197,
	-2, 2188,
	-1, 1218,
	582, 2198,
	-2, 2189,
	-1, 1318,
	186, 2528,
	505, 2528,
	565, 2528,
	584, 2528,
	-2, 0,
	-1, 1321,
	1, 662,
	585, 662,
	-2, 1351,
	-1, 1449,
	356, 2163,
	410, 2163,
	450, 2163,
	575, 2163,
	-2, 2153,
	-1, 1460,
	586, 2163,
	-2, 2164,
	-1, 1469,
	1, 1219,
	581, 1219,
	583, 1219,
	585, 1219,
	-2, 1484,
	-1, 1517,
	395, 1016,
	542, 1016,
	-2, 387,
	-1, 1534,
	43, 2161,
	-2, 982,
	-1, 1541,
	1, 1219,
	581, 1219,
	583, 1219,
	585, 1219,
	-2, 1484,
	-1, 1549,
	4, 1244,
	21, 1244,
	22, 1244,
	23, 1244,
	24, 1244,
	25, 1244,
	26, 1244,
	27, 1244,
	29, 1244,
	30, 1244,
	36, 1244,
	41, 1244,
	42, 1244,
	44, 1244,
	45, 1244,
	46, 1244,
	47, 1244,
	48, 1244,
	49, 1244,
	50, 1244,
	51, 1244,
	53, 1244,
	54, 1244,
	55, 1244,
	56, 1244,
	58, 1244,
	59, 1244,
	60, 1244,
	61, 1244,
	62, 1244,
	63, 1244,
	64, 1244,
	68, 1244,
	69, 1244,
	70, 1244,
	71, 1244,
	73, 1244,
	74, 1244,
	75, 1244,
	79, 1244,
	80, 1244,
	81, 1244,
	82, 1244,
	83, 1244,
	84, 1244,
	85, 1244,
	88, 1244,
	89, 1244,
	90, 1244,
	91, 1244,
	92, 1244,
	94, 1244,
	96, 1244,
	97, 1244,
	98, 1244,
	99, 1244,
	100, 1244,
	101, 1244,
	103, 1244,
	104, 1244,
	105, 1244,
	107, 1244,
	108, 1244,
	109, 1244,
	117, 1244,
	118, 1244,
	119, 1244,
	120, 1244,
	121, 1244,
	123, 1244,
	124, 1244,
	125, 1244,
	127, 1244,
	128, 1244,
	129, 1244,
	131, 1244,
	132, 1244,
	133, 1244,
	135, 1244,
	136, 1244,
	137, 1244,
	140, 1244,
	141, 1244,
	142, 1244,
	144, 1244,
	145, 1244,
	147, 1244,
	148, 1244,
	149, 1244,
	151, 1244,
	152, 1244,
	153, 1244,
	154, 1244,
	155, 1244,
	156, 1244,
	157, 1244,
	158, 1244,
	159, 1244,
	160, 1244,
	161, 1244,
	162, 1244,
	163, 1244,
	164, 1244,
	165, 1244,
	166, 1244,
	174, 1244,
	175, 1244,
	176, 1244,
	177, 1244,
	181, 1244,
	183, 1244,
	184, 1244,
	188, 1244,
	189, 1244,
	190, 1244,
	191, 1244,
	192, 1244,
	193, 1244,
	194, 1244,
	195, 1244,
	196, 1244,
	197, 1244,
	198, 1244,
	199, 1244,
	200, 1244,
	202, 1244,
	203, 1244,
	205, 1244,
	206, 1244,
	208, 1244,
	209, 1244,
	210, 1244,
	211, 1244,
	212, 1244,
	213, 1244,
	214, 1244,
	215, 1244,
	216, 1244,
	218, 1244,
	219, 1244,
	221, 1244,
	222, 1244,
	223, 1244,
	224, 1244,
	229, 1244,
	230, 1244,
	231, 1244,
	232, 1244,
	235, 1244,
	236, 1244,
	237, 1244,
	239, 1244,
	241, 1244,
	242, 1244,
	244, 1244,
	246, 1244,
	247, 1244,
	248, 1244,
	250, 1244,
	254, 1244,
	255, 1244,
	256, 1244,
	257, 1244,
	258, 1244,
	259, 1244,
	261, 1244,
	262, 1244,
	263, 1244,
	265, 1244,
	266, 1244,
	268, 1244,
	269, 1244,
	272, 1244,
	276, 1244,
	277, 1244,
	278, 1244,
	281, 1244,
	282, 1244,
	283, 1244,
	284, 1244,
	286, 1244,
	287, 1244,
	288, 1244,
	289, 1244,
	290, 1244,
	291, 1244,
	292, 1244,
	293, 1244,
	294, 1244,
	295, 1244,
	296, 1244,
	297, 1244,
	298, 1244,
	299, 1244,
	300, 1244,
	301, 1244,
	302, 1244,
	303, 1244,
	304, 1244,
	305, 1244,
	306, 1244,
	307, 1244,
	309, 1244,
	311, 1244,
	312, 1244,
	313, 1244,
	314, 1244,
	315, 1244,
	316, 1244,
	317, 1244,
	318, 1244,
	319, 1244,
	320, 1244,
	321, 1244,
	322, 1244,
	324, 1244,
	325, 1244,
	329, 1244,
	330, 1244,
	332, 1244,
	333, 1244,
	334, 1244,
	335, 1244,
	336, 1244,
	339, 1244,
	341, 1244,
	343, 1244,
	344, 1244,
	345, 1244,
	348, 1244,
	349, 1244,
	350, 1244,
	352, 1244,
	354, 1244,
	355, 1244,
	356, 1244,
	357, 1244,
	358, 1244,
	359, 1244,
	360, 1244,
	361, 1244,
	362, 1244,
	363, 1244,
	364, 1244,
	365, 1244,
	367, 1244,
	368, 1244,
	369, 1244,
	370, 1244,
	371, 1244,
	372, 1244,
	373, 1244,
	374, 1244,
	375, 1244,
	376, 1244,
	377, 1244,
	378, 1244,
	379, 1244,
	380, 1244,
	381, 1244,
	383, 1244,
	384, 1244,
	386, 1244,
	387, 1244,
	388, 1244,
	389, 1244,
	390, 1244,
	391, 1244,
	392, 1244,
	393, 1244,
	394, 1244,
	395, 1244,
	396, 1244,
	397, 1244,
	399, 1244,
	401, 1244,
	402, 1244,
	403, 1244,
	408, 1244,
	410, 1244,
	411, 1244,
	412, 1244,
	413, 1244,
	414, 1244,
	415, 1244,
	416, 1244,
	417, 1244,
	418, 1244,
	420, 1244,
	421, 1244,
	422, 1244,
	424, 1244,
	425, 1244,
	426, 1244,
	427, 1244,
	428, 1244,
	429, 1244,
	431, 1244,
	432, 1244,
	433, 1244,
	434, 1244,
	435, 1244,
	436, 1244,
	437, 1244,
	438, 1244,
	439, 1244,
	440, 1244,
	441, 1244,
	443, 1244,
	444, 1244,
	445, 1244,
	446, 1244,
	447, 1244,
	448, 1244,
	450, 1244,
	451, 1244,
	452, 1244,
	453, 1244,
	454, 1244,
	455, 1244,
	457, 1244,
	458, 1244,
	459, 1244,
	460, 1244,
	461, 1244,
	462, 1244,
	463, 1244,
	465, 1244,
	467, 1244,
	468, 1244,
	469, 1244,
	470, 1244,
	471, 1244,
	472, 1244,
	473, 1244,
	474, 1244,
	475, 1244,
	476, 1244,
	477, 1244,
	478, 1244,
	479, 1244,
	480, 1244,
	481, 1244,
	482, 1244,
	484, 1244,
	485, 1244,
	487, 1244,
	488, 1244,
	490, 1244,
	491, 1244,
	492, 1244,
	493, 1244,
	494, 1244,
	495, 1244,
	496, 1244,
	497, 1244,
	498, 1244,
	500, 1244,
	501, 1244,
	502, 1244,
	503, 1244,
	504, 1244,
	506, 1244,
	508, 1244,
	509, 1244,
	510, 1244,
	511, 1244,
	512, 1244,
	513, 1244,
	515, 1244,
	516, 1244,
	517, 1244,
	518, 1244,
	520, 1244,
	521, 1244,
	524, 1244,
	525, 1244,
	526, 1244,
	527, 1244,
	528, 1244,
	529, 1244,
	530, 1244,
	532, 1244,
	535, 1244,
	536, 1244,
	537, 1244,
	538, 1244,
	539, 1244,
	540, 1244,
	542, 1244,
	543, 1244,
	544, 1244,
	545, 1244,
	547, 1244,
	552, 1244,
	553, 1244,
	554, 1244,
	555, 1244,
	556, 1244,
	557, 1244,
	-2, 0,
	-1, 1572,
	1, 532,
	581, 532,
	583, 532,
	585, 532,
	-2, 1455,
	-1, 1575,
	4, 2605,
	11, 2605,
	12, 2605,
	14, 2605,
	15, 2605,
	16, 2605,
	17, 2605,
	18, 2605,
	19, 2605,
	21, 2605,
	22, 2605,
	23, 2605,
	24, 2605,
	25, 2605,
	26, 2605,
	27, 2605,
	29, 2605,
	30, 2605,
	33, 2605,
	34, 2605,
	36, 2605,
	38, 2605,
	41, 2605,
	42, 2605,
	44, 2605,
	45, 2605,
	46, 2605,
	47, 2605,
	48, 2605,
	49, 2605,
	50, 2605,
	51, 2605,
	53, 2605,
	54, 2605,
	55, 2605,
	56, 2605,
	58, 2605,
	59, 2605,
	60, 2605,
	61, 2605,
	62, 2605,
	63, 2605,
	64, 2605,
	68, 2605,
	69, 2605,
	70, 2605,
	71, 2605,
	73, 2605,
	74, 2605,
	75, 2605,
	76, 2605,
	79, 2605,
	80, 2605,
	81, 2605,
	82, 2605,
	83, 2605,
	84, 2605,
	85, 2605,
	86, 2605,
	88, 2605,
	89, 2605,
	90, 2605,
	91, 2605,
	92, 2605,
	94, 2605,
	95, 2605,
	96, 2605,
	97, 2605,
	98, 2605,
	99, 2605,
	100, 2605,
	101, 2605,
	103, 2605,
	104, 2605,
	105, 2605,
	106, 2605,
	107, 2605,
	108, 2605,
	109, 2605,
	117, 2605,
	118, 2605,
	119, 2605,
	120, 2605,
	121, 2605,
	123, 2605,
	124, 2605,
	125, 2605,
	127, 2605,
	128, 2605,
	129, 2605,
	131, 2605,
	132, 2605,
	133, 2605,
	135, 2605,
	136, 2605,
	137, 2605,
	140, 2605,
	141, 2605,
	142, 2605,
	144, 2605,
	145, 2605,
	147, 2605,
	148, 2605,
	149, 2605,
	151, 2605,
	152, 2605,
	153, 2605,
	154, 2605,
	155, 2605,
	156, 2605,
	157, 2605,
	158, 2605,
	159, 2605,
	160, 2605,
	161, 2605,
	162, 2605,
	163, 2605,
	164, 2605,
	165, 2605,
	166, 2605,
	170, 2605,
	171, 2605,
	172, 2605,
	173, 2605,
	174, 2605,
	175, 2605,
	176, 2605,
	177, 2605,
	180, 2605,
	181, 2605,
	183, 2605,
	184, 2605,
	187, 2605,
	188, 2605,
	189, 2605,
	190, 2605,
	191, 2605,
	192, 2605,
	193, 2605,
	194, 2605,
	195, 2605,
	196, 2605,
	197, 2605,
	198, 2605,
	199, 2605,
	200, 2605,
	202, 2605,
	203, 2605,
	205, 2605,
	206, 2605,
	208, 2605,
	209, 2605,
	210, 2605,
	211, 2605,
	212, 2605,
	213, 2605,
	214, 2605,
	215, 2605,
	216, 2605,
	217, 2605,
	218, 2605,
	219, 2605,
	220, 2605,
	221, 2605,
	222, 2605,
	223, 2605,
	224, 2605,
	226, 2605,
	227, 2605,
	229, 2605,
	230, 2605,
	231, 2605,
	232, 2605,
	234, 2605,
	235, 2605,
	236, 2605,
	237, 2605,
	239, 2605,
	241, 2605,
	242, 2605,
	243, 2605,
	244, 2605,
	245, 2605,
	246, 2605,
	247, 2605,
	248, 2605,
	249, 2605,
	250, 2605,
	252, 2605,
	253, 2605,
	254, 2605,
	255, 2605,
	256, 2605,
	257, 2605,
	258, 2605,
	259, 2605,
	261, 2605,
	262, 2605,
	263, 2605,
	265, 2605,
	266, 2605,
	267, 2605,
	268, 2605,
	269, 2605,
	270, 2605,
	272, 2605,
	276, 2605,
	277, 2605,
	278, 2605,
	281, 2605,
	282, 2605,
	283, 2605,
	284, 2605,
	285, 2605,
	286, 2605,
	287, 2605,
	288, 2605,
	289, 2605,
	290, 2605,
	291, 2605,
	292, 2605,
	293, 2605,
	294, 2605,
	295, 2605,
	296, 2605,
	297, 2605,
	298, 2605,
	299, 2605,
	300, 2605,
	301, 2605,
	302, 2605,
	303, 2605,
	304, 2605,
	305, 2605,
	306, 2605,
	307, 2605,
	309, 2605,
	310, 2605,
	311, 2605,
	312, 2605,
	313, 2605,
	314, 2605,
	315, 2605,
	316, 2605,
	317, 2605,
	318, 2605,
	319, 2605,
	320, 2605,
	321, 2605,
	322, 2605,
	324, 2605,
	325, 2605,
	328, 2605,
	329, 2605,
	330, 2605,
	332, 2605,
	333, 2605,
	334, 2605,
	335, 2605,
	336, 2605,
	339, 2605,
	343, 2605,
	344, 2605,
	345, 2605,
	346, 2605,
	348, 2605,
	349, 2605,
	350, 2605,
	352, 2605,
	354, 2605,
	355, 2605,
	356, 2605,
	357, 2605,
	358, 2605,
	359, 2605,
	360, 2605,
	361, 2605,
	362, 2605,
	363, 2605,
	364, 2605,
	365, 2605,
	367, 2605,
	368, 2605,
	369, 2605,
	370, 2605,
	371, 2605,
	372, 2605,
	373, 2605,
	374, 2605,
	375, 2605,
	376, 2605,
	377, 2605,
	378, 2605,
	379, 2605,
	380, 2605,
	381, 2605,
	383, 2605,
	384, 2605,
	386, 2605,
	387, 2605,
	388, 2605,
	389, 2605,
	390, 2605,
	391, 2605,
	392, 2605,
	393, 2605,
	394, 2605,
	395, 2605,
	396, 2605,
	397, 2605,
	399, 2605,
	401, 2605,
	402, 2605,
	403, 2605,
	408, 2605,
	409, 2605,
	410, 2605,
	411, 2605,
	412, 2605,
	413, 2605,
	414, 2605,
	415, 2605,
	416, 2605,
	417, 2605,
	418, 2605,
	420, 2605,
	421, 2605,
	422, 2605,
	423, 2605,
	424, 2605,
	425, 2605,
	426, 2605,
	427, 2605,
	428, 2605,
	429, 2605,
	430, 2605,
	431, 2605,
	432, 2605,
	433, 2605,
	434, 2605,
	435, 2605,
	436, 2605,
	437, 2605,
	438, 2605,
	439, 2605,
	440, 2605,
	441, 2605,
	443, 2605,
	444, 2605,
	445, 2605,
	446, 2605,
	447, 2605,
	448, 2605,
	450, 2605,
	451, 2605,
	452, 2605,
	453, 2605,
	454, 2605,
	455, 2605,
	456, 2605,
	457, 2605,
	458, 2605,
	459, 2605,
	460, 2605,
	461, 2605,
	462, 2605,
	463, 2605,
	465, 2605,
	467, 2605,
	468, 2605,
	469, 2605,
	470, 2605,
	471, 2605,
	472, 2605,
	473, 2605,
	474, 2605,
	475, 2605,
	476, 2605,
	477, 2605,
	478, 2605,
	479, 2605,
	480, 2605,
	481, 2605,
	482, 2605,
	484, 2605,
	485, 2605,
	487, 2605,
	488, 2605,
	490, 2605,
	491, 2605,
	492, 2605,
	493, 2605,
	494, 2605,
	495, 2605,
	496, 2605,
	497, 2605,
	498, 2605,
	500, 2605,
	501, 2605,
	502, 2605,
	503, 2605,
	504, 2605,
	506, 2605,
	508, 2605,
	509, 2605,
	510, 2605,
	511, 2605,
	512, 2605,
	513, 2605,
	515, 2605,
	516, 2605,
	517, 2605,
	518, 2605,
	520, 2605,
	521, 2605,
	524, 2605,
	525, 2605,
	526, 2605,
	527, 2605,
	528, 2605,
	529, 2605,
	530, 2605,
	532, 2605,
	535, 2605,
	536, 2605,
	537, 2605,
	538, 2605,
	539, 2605,
	540, 2605,
	542, 2605,
	543, 2605,
	544, 2605,
	545, 2605,
	547, 2605,
	552, 2605,
	553, 2605,
	554, 2605,
	555, 2605,
	556, 2605,
	557, 2605,
	558, 2605,
	560, 2605,
	563, 2605,
	564, 2605,
	565, 2605,
	566, 2605,
	567, 2605,
	568, 2605,
	570, 2605,
	571, 2605,
	572, 2605,
	573, 2605,
	574, 2605,
	575, 2605,
	576, 2605,
	577, 2605,
	578, 2605,
	580, 2605,
	583, 2605,
	584, 2605,
	586, 2605,
	587, 2605,
	-2, 0,
	-1, 1580,
	186, 2488,
	505, 2488,
	565, 2488,
	584, 2488,
	-2, 0,
	-1, 1629,
	388, 842,
	448, 842,
	488, 842,
	510, 842,
	-2, 0,
	-1, 1656,
	1, 837,
	581, 837,
	583, 837,
	585, 837,
	-2, 0,
	-1, 1657,
	1, 875,
	581, 875,
	583, 875,
	585, 875,
	-2, 0,
	-1, 1658,
	1, 883,
	581, 883,
	583, 883,
	585, 883,
	-2, 0,
	-1, 1661,
	1, 846,
	581, 846,
	583, 846,
	585, 846,
	-2, 0,
	-1, 1663,
	1, 850,
	581, 850,
	583, 850,
	585, 850,
	-2, 0,
	-1, 1669,
	1, 857,
	581, 857,
	583, 857,
	585, 857,
	-2, 0,
	-1, 1698,
	1, 2550,
	581, 2550,
	583, 2550,
	584, 2550,
	585, 2550,
	-2, 909,
	-1, 1699,
	1, 2485,
	581, 2485,
	583, 2485,
	584, 2485,
	585, 2485,
	-2, 910,
	-1, 1703,
	1, 922,
	581, 922,
	583, 922,
	585, 922,
	-2, 0,
	-1, 1717,
	1, 1346,
	585, 1346,
	-2, 1351,
	-1, 1720,
	169, 1498,
	182, 1498,
	271, 1498,
	337, 1498,
	-2, 1436,
	-1, 1814,
	150, 1457,
	169, 1457,
	182, 1457,
	238, 1457,
	271, 1457,
	337, 1457,
	347, 1457,
	522, 1457,
	-2, 1899,
	-1, 1874,
	583, 2049,
	-2, 0,
	-1, 1909,
	150, 1457,
	169, 1457,
	182, 1457,
	238, 1457,
	271, 1457,
	337, 1457,
	347, 1457,
	522, 1457,
	-2, 1585,
	-1, 1943,
	505, 2485,
	584, 2485,
	587, 2485,
	-2, 0,
	-1, 1960,
	582, 1726,
	-2, 1714,
	-1, 1991,
	186, 2485,
	584, 2485,
	587, 2485,
	-2, 0,
	-1, 2039,
	1, 664,
	585, 664,
	-2, 1351,
	-1, 2165,
	220, 246,
	-2, 2196,
	-1, 2166,
	220, 247,
	-2, 295,
	-1, 2270,
	1, 839,
	581, 839,
	583, 839,
	585, 839,
	-2, 0,
	-1, 2271,
	1, 877,
	581, 877,
	583, 877,
	585, 877,
	-2, 0,
	-1, 2272,
	1, 885,
	581, 885,
	583, 885,
	585, 885,
	-2, 0,
	-1, 2273,
	1, 924,
	581, 924,
	583, 924,
	585, 924,
	-2, 0,
	-1, 2306,
	1, 859,
	581, 859,
	583, 859,
	585, 859,
	-2, 0,
	-1, 2361,
	428, 1525,
	429, 1525,
	-2, 1759,
	-1, 2392,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1779,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1780,
	-1, 2394,
	95, 0,
	252, 0,
	253, 0,
	567, 0,
	568, 0,
	-2, 1781,
	-1, 2395,
	95, 0,
	252, 0,
	253, 0,
	567, 0,
	568, 0,
	-2, 1782,
	-1, 2396,
	95, 0,
	252, 0,
	253, 0,
	567, 0,
	568, 0,
	-2, 1783,
	-1, 2397,
	95, 0,
	252, 0,
	253, 0,
	567, 0,
	568, 0,
	-2, 1784,
	-1, 2398,
	95, 0,
	252, 0,
	253, 0,
	567, 0,
	568, 0,
	-2, 1785,
	-1, 2399,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1786,
	-1, 2411,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1798,
	-1, 2412,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1799,
	-1, 2413,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1800,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1805,
	-1, 2422,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1809,
	-1, 2424,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1817,
	-1, 2425,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1818,
	-1, 2426,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1819,
	-1, 2427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1820,
	-1, 2563,
	5, 2200,
	186, 2060,
	582, 2197,
	-2, 2188,
	-1, 2564,
	186, 2061,
	-2, 2556,
	-1, 2565,
	186, 2062,
	-2, 2383,
	-1, 2566,
	186, 2063,
	-2, 2270,
	-1, 2567,
	186, 2064,
	-2, 2324,
	-1, 2568,
	186, 2065,
	-2, 2368,
	-1, 2569,
	186, 2066,
	-2, 2483,
	-1, 2570,
	186, 2067,
	-2, 1882,
	-1, 2640,
	1, 1586,
	2, 1586,
	106, 1586,
	150, 1586,
	169, 1586,
	182, 1586,
	187, 1586,
	204, 1586,
	207, 1586,
	234, 1586,
	238, 1586,
	249, 1586,
	267, 1586,
	271, 1586,
	310, 1586,
	337, 1586,
	341, 1586,
	347, 1586,
	419, 1586,
	423, 1586,
	522, 1586,
	533, 1586,
	549, 1586,
	550, 1586,
	551, 1586,
	561, 1586,
	581, 1586,
	583, 1586,
	585, 1586,
	587, 1586,
	-2, 1585,
	-1, 2653,
	582, 2169,
	-2, 2183,
	-1, 2655,
	1, 312,
	549, 312,
	-2, 1484,
	-1, 2682,
	582, 1725,
	-2, 1715,
	-1, 2859,
	1, 1219,
	581, 1219,
	583, 1219,
	585, 1219,
	-2, 1484,
	-1, 3028,
	342, 1528,
	-2, 2595,
	-1, 3029,
	342, 1529,
	-2, 2469,
	-1, 3033,
	428, 2126,
	429, 2126,
	-2, 1880,
	-1, 3034,
	428, 2130,
	429, 2130,
	-2, 1881,
	-1, 3035,
	428, 2127,
	429, 2127,
	-2, 1880,
	-1, 3036,
	428, 2131,
	429, 2131,
	-2, 1881,
	-1, 3049,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1807,
	-1, 3050,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1811,
	-1, 3056,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1813,
	-1, 3272,
	1, 661,
	581, 661,
	583, 661,
	585, 661,
	-2, 1351,
	-1, 3426,
	43, 2161,
	-2, 983,
	-1, 3431,
	1, 1219,
	581, 1219,
	583, 1219,
	585, 1219,
	-2, 1484,
	-1, 3536,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1815,
	-1, 3543,
	243, 0,
	245, 0,
	328, 0,
	-2, 1834,
	-1, 3610,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1863,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1864,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1865,
	-1, 3616,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1869,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1870,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1871,
	-1, 3664,
	582, 2170,
	-2, 2184,
	-1, 3824,
	584, 2713,
	-2, 1410,
	-1, 3882,
	243, 0,
	245, 0,
	328, 0,
	-2, 1835,
	-1, 3885,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1838,
	-1, 3886,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1840,
	-1, 3978,
	584, 2185,
	-2, 1254,
	-1, 4121,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1839,
	-1, 4122,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 1841,
	-1, 4133,
	243, 0,
	-2, 1872,
	-1, 4301,
	243, 0,
	-2, 1873,
	-1, 4483,
	50, 0,
	217, 0,
	270, 0,
	456, 0,
	558, 0,
	566, 0,
	-2, 2559,
}

const sqlPrivate = 57344

const sqlLast = 121390

var sqlAct = [...]int{
	265, 4579, 3415, 4535, 4665, 3183, 2937, 4336, 2924, 4476,
	4176, 4358, 3414, 4328, 4482, 2744, 4464, 4606, 2087, 4379,
	4493, 4451, 4354, 4432, 4475, 1481, 4494, 2162, 4495, 4415,
	4435, 4223, 3865, 2788, 4254, 2808, 4162, 4230, 4548, 4305,
	3575, 1221, 4077, 4072, 4038, 4142, 4018, 4181, 4481, 2371,
	3528, 1290, 2237, 4110, 3816, 3808, 4059, 4052, 1294, 3448,
	4061, 1043, 3752, 4239, 3959, 3354, 257, 4268, 2595, 3042,
	2246, 3294, 1283, 3975, 3442, 792, 2439, 3772, 4082, 3789,
	3400, 3410, 1596, 3774, 2821, 2379, 1034, 1729, 3297, 2095,
	2946, 4138, 2372, 2959, 3487, 755, 2021, 3489, 2894, 2913,
	1354, 792, 1915, 2948, 3667, 2883, 3226, 1947, 1210, 3206,
	3198, 1042, 174, 3864, 2956, 1276, 3189, 2210, 3166, 1446,
	867, 2908, 2945, 2939, 3921, 2925, 2910, 2156, 2244, 2157,
	4580, 3974, 2633, 2106, 1884, 2746, 3316, 3187, 2483, 3165,
	3635, 1822, 4306, 2481, 2376, 2452, 1860, 3291, 2955, 2008,
	1536, 2140, 3026, 4, 1098, 2632, 2836, 1453, 1288, 787,
	2133, 1087, 2635, 2152, 2787, 2887, 2895, 1337, 1948, 1201,
	2079, 1091, 2075, 1717, 2019, 1904, 1262, 3283, 2472, 1637,
	2436, 2613, 2065, 2360, 1094, 2343, 3412, 1096, 1573, 1285,
	1885, 2341, 3233, 1996, 1594, 2666, 793, 794, 789, 2918,
	1539, 2197, 2769, 4380, 2949, 174, 108, 2732, 259, 1323,
	2665, 686, 672, 1204, 2475, 1855, 694, 2592, 1894, 2453,
	258, 2622, 2603, 1901, 1183, 2559, 1730, 1807, 183, 2525,
	1731, 737, 1218, 2342, 1669, 2344, 184, 1656, 1200, 2223,
	749, 1564, 1273, 2196, 1476, 1571, 2094, 860, 4536, 2365,
	1072, 1997, 1994, 689, 44, 43, 41, 32, 1736, 30,
	28, 1181, 1716, 3077, 930, 1206, 697, 1487, 3649, 950,
	3650, 1038, 3073, 2010, 3185, 712, 4678, 841, 2010, 3458,
	2612, 2010, 2010, 798, 4668, 3256, 4653, 2010, 3467, 2010,
	2612, 3255, 4652, 4642, 3241, 801, 2612, 2171, 1480, 882,
	4624, 4622, 4567, 2605, 4180, 4180, 2171, 73, 3942, 798,
	4524, 4517, 3457, 4515, 4525, 2612, 4512, 2612, 4509, 4479,
	4513, 801, 4510, 2171, 74, 4478, 4477, 4472, 4471, 2171,
	2031, 2031, 2031, 4462, 4460, 4457, 1038, 4180, 4180, 4242,
	78, 1744, 1745, 4430, 2171, 4404, 4397, 4180, 1198, 2673,
	2612, 4396, 4391, 4390, 4384, 2612, 4180, 4180, 2171, 4350,
	1240, 4303, 4285, 4029, 1775, 2673, 3851, 3467, 4282, 4279,
	4232, 1747, 2171, 4180, 4233, 4196, 2028, 4195, 4187, 2171,
	87, 2171, 2171, 2171, 4186, 4179, 1184, 1184, 4180, 4180,
	4149, 4123, 1039, 1216, 2171, 2673, 4101, 1603, 4090, 1332,
	2031, 4013, 3467, 1019, 3998, 2612, 1746, 1332, 2612, 3884,
	3832, 1018, 3086, 2673, 3484, 3826, 1213, 3787, 3087, 3484,
	865, 3788, 1662, 3659, 3657, 2245, 3642, 3660, 3658, 1589,
	2612, 3559, 3555, 3639, 107, 2171, 2612, 3483, 3474, 93,
	104, 3484, 3475, 2693, 2669, 3182, 3177, 1028, 1033, 2612,
	2612, 93, 3176, 3129, 3127, 3119, 2612, 3130, 3128, 3120,
	3117, 3088, 2963, 2935, 2612, 2612, 2031, 2233, 1744, 1745,
	3041, 1777, 1778, 1779, 1787, 1788, 1789, 2934, 2716, 2672,
	2171, 2233, 2612, 2673, 2663, 2657, 1185, 1233, 2612, 2171,
	1780, 1775, 2611, 2612, 4405, 2232, 2612, 94, 1747, 2233,
	1187, 4307, 1188, 4298, 4286, 4242, 2031, 1793, 3639, 2604,
	1752, 2612, 4070, 4029, 3999, 229, 3851, 3475, 2811, 2731,
	2044, 2009, 2025, 2099, 1501, 2692, 2028, 2889, 1744, 1745,
	2170, 2831, 2729, 1746, 1787, 1788, 1789, 1880, 1475, 3737,
	3531, 3507, 1902, 1766, 2145, 3459, 1639, 2649, 1744, 1745,
	2648, 1775, 1763, 2647, 2646, 2645, 1774, 1776, 1747, 1189,
	1744, 1745, 231, 229, 3460, 1480, 1186, 1793, 1027, 1234,
	1026, 1775, 1025, 1024, 2508, 1023, 3076, 1489, 1747, 3003,
	2494, 1022, 1021, 1017, 1744, 1745, 1016, 1015, 1014, 1013,
	1747, 1012, 1011, 1746, 1010, 1009, 1008, 1007, 1006, 1005,
	1093, 1004, 1489, 1766, 1003, 1002, 1001, 1775, 928, 1489,
	231, 230, 1763, 1746, 1747, 1767, 927, 926, 925, 924,
	923, 2671, 3138, 3139, 223, 1746, 2011, 1769, 1770, 1771,
	1772, 2011, 922, 224, 2011, 2011, 921, 1752, 920, 919,
	2011, 97, 2011, 918, 917, 916, 915, 914, 913, 1746,
	912, 911, 910, 909, 908, 185, 907, 906, 3937, 230,
	905, 904, 903, 902, 901, 900, 899, 898, 897, 896,
	895, 885, 884, 880, 1784, 879, 1488, 1794, 4500, 873,
	3457, 872, 859, 1774, 1776, 858, 1234, 1769, 1770, 1771,
	1772, 815, 2028, 182, 100, 814, 103, 1752, 813, 812,
	1790, 804, 1791, 185, 2604, 803, 4289, 802, 770, 1761,
	1762, 1744, 1745, 761, 760, 759, 743, 1752, 253, 252,
	229, 251, 250, 249, 248, 247, 246, 1782, 866, 1752,
	1299, 1096, 229, 148, 1784, 1500, 245, 1794, 244, 243,
	242, 1747, 1767, 1774, 1776, 148, 241, 240, 239, 238,
	237, 236, 235, 1752, 1096, 1495, 234, 233, 1096, 3896,
	1768, 1234, 232, 1774, 1776, 3138, 3139, 231, 1070, 1761,
	1762, 3680, 4084, 3653, 1357, 3485, 1746, 3229, 1357, 231,
	3099, 3082, 2986, 2870, 3180, 1792, 1299, 1782, 2677, 2654,
	2639, 3144, 2492, 150, 1284, 1905, 2703, 1607, 4480, 1774,
	1776, 2009, 1767, 1781, 2028, 2025, 1863, 1096, 186, 1096,
	2692, 1096, 2336, 1862, 1593, 1336, 230, 1299, 1743, 1341,
	1141, 1327, 1767, 3181, 1863, 2073, 2240, 2903, 230, 223,
	2030, 1862, 1212, 1928, 1833, 1866, 1824, 229, 224, 1483,
	1343, 223, 1449, 1299, 1220, 1460, 1284, 1307, 4459, 4365,
	224, 4310, 1461, 1861, 4287, 2921, 1489, 4295, 1767, 4174,
	185, 2178, 229, 1299, 4137, 4091, 1773, 4069, 1299, 229,
	3947, 3919, 185, 1831, 1041, 1456, 1096, 3918, 1096, 3912,
	1752, 3911, 1299, 3910, 231, 3903, 3902, 1768, 1096, 3900,
	1096, 3895, 1451, 3892, 3891, 2478, 3154, 1089, 3792, 1479,
	1267, 1270, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 231,
	2239, 1284, 1284, 1785, 3786, 3684, 231, 1545, 1548, 3683,
	3682, 3663, 3630, 1280, 1321, 3629, 1773, 3628, 3551, 3547,
	3224, 3173, 3164, 230, 3144, 3137, 1299, 3138, 3139, 3134,
	3133, 3131, 1350, 1467, 1443, 1448, 223, 1768, 3126, 1744,
	1745, 3125, 3124, 3121, 1096, 224, 3118, 1096, 230, 3098,
	3081, 1744, 1745, 1551, 229, 230, 1494, 1768, 1664, 3074,
	2936, 223, 1775, 1785, 4086, 174, 174, 185, 223, 1747,
	224, 2640, 1826, 2479, 1775, 2465, 1743, 224, 1825, 1316,
	1823, 1747, 1478, 1477, 1197, 2213, 1742, 4672, 4616, 1534,
	1214, 4615, 185, 1768, 798, 1824, 3793, 2176, 4581, 185,
	4534, 231, 1608, 4532, 1746, 1783, 801, 1576, 1578, 3735,
	1758, 1759, 1765, 1786, 1764, 1760, 1746, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 1766, 1222, 3577, 3247,
	3906, 3155, 4422, 4357, 3905, 1763, 4346, 4343, 4342, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 4341, 4322, 1327, 4309,
	230, 1327, 4308, 4283, 2480, 4267, 2477, 3138, 3139, 1039,
	2905, 4266, 2442, 223, 4252, 1783, 4249, 4248, 4243, 3178,
	1096, 4192, 224, 1786, 1764, 1760, 1096, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 1567, 4170, 4135, 3878,
	3138, 3139, 4118, 4117, 185, 1721, 3144, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 229, 4098, 1752, 4311,
	1769, 1770, 1771, 1772, 1750, 1751, 1753, 1754, 3138, 3139,
	1752, 1565, 4097, 4055, 4030, 3936, 3917, 3852, 1678, 4058,
	3221, 3793, 3153, 3846, 1588, 3843, 1748, 1749, 1750, 1751,
	1753, 1754, 3138, 3139, 1715, 2507, 1602, 3723, 3722, 2448,
	3943, 2493, 3707, 231, 1774, 1776, 3706, 3704, 3645, 3633,
	3542, 229, 1811, 3486, 3468, 3434, 1774, 1776, 3369, 3329,
	1813, 3149, 3147, 3148, 3140, 3141, 3142, 3143, 3145, 3146,
	3296, 1096, 1096, 1096, 3249, 229, 1613, 1096, 3103, 3102,
	3097, 3065, 1761, 1762, 1218, 2882, 1218, 1630, 1869, 1868,
	1867, 3154, 230, 2482, 1864, 4085, 1856, 1854, 231, 2684,
	1665, 1357, 2683, 1767, 2651, 223, 1882, 2644, 2610, 2490,
	1096, 1927, 1883, 792, 224, 1767, 3144, 229, 1878, 1965,
	792, 1877, 231, 1299, 1876, 1875, 1874, 1873, 1931, 1872,
	1871, 1870, 1851, 1718, 229, 1850, 185, 1849, 1848, 1944,
	4290, 1847, 2904, 1846, 1845, 1891, 1992, 230, 1726, 3144,
	1725, 1019, 1844, 1748, 1749, 1750, 1751, 1753, 1754, 1018,
	223, 1843, 1720, 1842, 231, 1841, 1039, 229, 1840, 224,
	1846, 230, 1865, 1460, 1722, 1739, 1740, 3144, 1939, 1839,
	1838, 231, 1837, 1826, 223, 1812, 2241, 1810, 1805, 1299,
	1315, 2920, 1238, 224, 229, 1229, 1096, 3888, 3679, 174,
	1299, 3144, 1912, 1936, 3656, 3648, 1888, 1889, 2476, 3142,
	3143, 3145, 3146, 230, 231, 185, 3085, 2642, 1096, 1932,
	1460, 3154, 2675, 1570, 1357, 1184, 223, 4154, 1744, 1745,
	230, 3945, 1857, 1858, 2686, 224, 3155, 3138, 3139, 1773,
	2089, 231, 3678, 223, 1825, 1216, 3245, 1216, 1768, 2062,
	2064, 1808, 224, 2491, 3154, 4001, 3463, 185, 1747, 2064,
	1768, 1923, 1913, 230, 2037, 1340, 4613, 1935, 1213, 1327,
	1213, 1333, 4605, 1959, 185, 2064, 223, 1934, 2809, 2071,
	4344, 4244, 3154, 4235, 4234, 224, 4089, 4032, 4288, 2036,
	230, 4031, 1039, 1746, 4000, 3939, 3855, 2015, 3854, 1910,
	2017, 3853, 2792, 223, 3651, 1903, 2022, 185, 3470, 1338,
	2024, 1940, 224, 1905, 3469, 2027, 1846, 3332, 1988, 4173,
	4240, 798, 1332, 2013, 1881, 1339, 3529, 3796, 798, 1629,
	1832, 2056, 2055, 801, 185, 2064, 2066, 1332, 1713, 3361,
	801, 3747, 1922, 1921, 1920, 1918, 2142, 1917, 1916, 1907,
	1863, 1570, 3123, 3122, 1299, 1299, 3047, 1862, 2774, 2040,
	1335, 3417, 3720, 3416, 1357, 2099, 3155, 999, 1945, 2050,
	3298, 3479, 2039, 1679, 1835, 1332, 4546, 3147, 3148, 3140,
	3141, 3142, 3143, 3145, 3146, 2262, 1638, 1329, 4139, 1755,
	1756, 1748, 1749, 1750, 1751, 1753, 1754, 1764, 1760, 3155,
	1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 3091,
	2238, 4231, 1000, 4520, 4505, 4492, 3401, 2960, 1639, 2214,
	2158, 2127, 3800, 2132, 3783, 3749, 2137, 3155, 3744, 3728,
	3504, 3270, 3185, 2035, 3579, 2817, 2163, 2168, 2473, 2682,
	1879, 2033, 1859, 3408, 2207, 1544, 1472, 1310, 2478, 4501,
	1266, 2042, 4514, 2059, 1196, 4511, 2771, 3453, 1299, 3699,
	1299, 1569, 1299, 4166, 4337, 2067, 2057, 1334, 4073, 3393,
	2828, 4429, 2825, 2823, 4319, 3301, 3715, 2943, 1299, 1299,
	2917, 4564, 3523, 4565, 4213, 2206, 3274, 1333, 3762, 1299,
	4595, 3988, 3246, 2105, 2816, 1511, 1617, 2351, 2717, 1519,
	997, 1299, 995, 1299, 1299, 1299, 3149, 3147, 3148, 3140,
	3141, 3142, 3143, 3145, 3146, 2770, 4502, 3971, 1037, 2312,
	854, 993, 2160, 991, 1330, 988, 792, 4667, 4206, 2248,
	2310, 1473, 980, 1331, 4198, 2125, 2479, 4027, 2203, 4026,
	3760, 3148, 3140, 3141, 3142, 3143, 3145, 3146, 2735, 2208,
	3759, 3967, 1478, 1477, 2261, 3761, 2349, 1677, 3751, 3743,
	3742, 2220, 3740, 2733, 798, 3739, 2061, 3727, 3694, 3693,
	3140, 3141, 3142, 3143, 3145, 3146, 801, 3397, 3396, 3240,
	2124, 3096, 2051, 2136, 1520, 2243, 2735, 3095, 3094, 1569,
	3093, 3051, 1676, 2834, 3140, 3141, 3142, 3143, 3145, 3146,
	2169, 2733, 2266, 1329, 2060, 3968, 1036, 2254, 2833, 2228,
	2830, 2819, 2807, 1096, 2806, 1096, 2802, 2480, 2801, 2477,
	2800, 2779, 1096, 855, 2778, 1965, 1965, 1357, 1340, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1039, 1096, 1039, 1096, 1096, 1096,
	1096, 2230, 2217, 2249, 2189, 2188, 1615, 1567, 4167, 2225,
	2222, 2225, 2226, 1334, 1212, 1340, 1212, 2739, 1339, 1096,
	4596, 1675, 1096, 1096, 2748, 3359, 3298, 2350, 2353, 2340,
	1096, 1316, 1332, 2234, 1096, 2235, 1096, 1096, 2664, 2096,
	2434, 2423, 1719, 3331, 1357, 1038, 2238, 2772, 2914, 3276,
	1096, 1096, 1096, 1096, 2288, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 2253, 798, 2521, 2520, 1322, 2772, 2432,
	1330, 2381, 2092, 1515, 2335, 1339, 801, 2319, 2270, 1331,
	4116, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	2454, 2455, 2187, 2776, 1096, 2676, 2482, 2099, 3505, 1660,
	2348, 2097, 2098, 3702, 2454, 2470, 1218, 1610, 3952, 1959,
	1959, 2329, 1557, 1357, 1556, 1555, 2306, 1554, 2334, 2326,
	985, 2258, 1218, 2377, 2378, 1754, 1474, 2364, 1252, 1528,
	2516, 2093, 2796, 2351, 3146, 3963, 2724, 2751, 1096, 1357,
	3964, 2278, 1631, 768, 2473, 2789, 2790, 2966, 2438, 2562,
	2562, 2576, 2130, 2454, 2789, 2790, 2596, 2598, 4002, 2271,
	2656, 2337, 2602, 1533, 2762, 2339, 2352, 2338, 2345, 3951,
	2789, 2790, 3983, 2316, 2438, 1019, 3024, 2469, 1019, 1019,
	1923, 3360, 1214, 2368, 1214, 3039, 2369, 2370, 1688, 4498,
	2275, 3966, 2349, 1627, 4626, 1333, 1724, 2627, 2761, 1659,
	684, 1660, 2227, 3513, 3512, 2518, 2652, 3969, 4564, 2428,
	2519, 2476, 1314, 2522, 3000, 2523, 2524, 2482, 1284, 2328,
	1035, 2272, 2619, 1712, 2738, 1611, 679, 1039, 2429, 2080,
	2068, 2069, 975, 2430, 2081, 3568, 1039, 2435, 1912, 4025,
	1039, 1692, 1299, 1299, 2450, 857, 856, 3712, 1332, 2279,
	2446, 766, 1639, 1184, 3273, 2467, 1032, 2444, 3741, 3738,
	3395, 1657, 4330, 2827, 1540, 1639, 1284, 1216, 174, 1962,
	3357, 2347, 1674, 4600, 1225, 3769, 2829, 3138, 3139, 2641,
	3156, 3157, 3158, 1216, 1357, 3062, 2618, 2626, 2269, 2631,
	1213, 3348, 2637, 2638, 2712, 2826, 2107, 2824, 2822, 3880,
	2678, 1659, 1284, 1284, 2587, 3724, 1213, 2571, 2706, 2558,
	2670, 1329, 1538, 3038, 3060, 2600, 1223, 2799, 1965, 2111,
	3006, 2608, 2609, 1658, 1327, 2620, 2777, 4609, 1039, 3770,
	2624, 2625, 3965, 2350, 2750, 1910, 1865, 989, 3565, 989,
	893, 4115, 2667, 2734, 1671, 3349, 1953, 2082, 976, 2705,
	2175, 2174, 3153, 4576, 2775, 2311, 1357, 1616, 989, 1227,
	990, 4499, 989, 2714, 2086, 3710, 2309, 2143, 4601, 3768,
	1299, 3972, 3981, 2698, 1047, 2738, 2108, 4401, 4584, 2702,
	2325, 2740, 4332, 3725, 2482, 3347, 1096, 1096, 2685, 1096,
	2689, 1334, 2420, 2713, 1449, 4583, 852, 2708, 851, 2697,
	1857, 1858, 2662, 2700, 4629, 2701, 2348, 3340, 3031, 3032,
	2688, 792, 2861, 1299, 2715, 2691, 2431, 2139, 2737, 3566,
	4553, 1460, 3870, 2720, 1226, 3869, 2433, 3451, 3009, 2709,
	886, 2886, 2707, 3450, 1517, 2083, 2088, 4656, 2119, 2155,
	2146, 2138, 2722, 1514, 1299, 2153, 3144, 2797, 1330, 2781,
	4466, 2820, 4467, 2928, 3057, 2010, 1299, 1331, 1299, 4497,
	767, 3341, 2901, 2718, 4411, 4158, 2862, 2143, 2957, 2102,
	2810, 2765, 1959, 1299, 2134, 2749, 2723, 4603, 3058, 3285,
	2327, 2112, 3063, 4338, 2780, 1689, 2782, 2791, 2793, 2794,
	2795, 3971, 2120, 2154, 2804, 2743, 2721, 2798, 1251, 2753,
	2756, 3339, 2865, 2097, 2098, 3450, 2860, 2867, 769, 3159,
	2277, 2803, 765, 874, 1096, 2967, 2968, 3372, 2084, 2987,
	4352, 2988, 805, 2103, 3982, 3967, 2974, 2975, 2976, 3960,
	1540, 3313, 2118, 2135, 2736, 2897, 3275, 977, 2961, 1686,
	2805, 733, 2735, 1236, 2131, 1852, 3958, 2113, 2114, 2815,
	4047, 3154, 3243, 2143, 174, 3962, 1460, 2754, 2147, 2418,
	3008, 4399, 2421, 2101, 1284, 2090, 680, 1096, 2482, 2578,
	2942, 2109, 2090, 1096, 1096, 3866, 4607, 1478, 2868, 3968,
	2080, 4552, 702, 4112, 4128, 2081, 2984, 3312, 2964, 798,
	3005, 3053, 4575, 2969, 1612, 2970, 2932, 1804, 3317, 2880,
	4400, 801, 2930, 1460, 2983, 1460, 2893, 986, 4449, 2891,
	2890, 4440, 2417, 2110, 3777, 3279, 2992, 2437, 2994, 798,
	2996, 3961, 1690, 3775, 2464, 4010, 1332, 3101, 1096, 1096,
	2655, 801, 2933, 3011, 1096, 3013, 2923, 1030, 2944, 975,
	4331, 2274, 681, 1626, 1628, 1893, 1723, 1096, 1096, 3319,
	2623, 4630, 2962, 1096, 1096, 3014, 2636, 1687, 3016, 1096,
	1038, 3059, 1313, 1032, 4602, 2931, 2981, 1893, 1096, 1096,
	1096, 3061, 2912, 3711, 1096, 887, 888, 978, 3581, 2991,
	4608, 2993, 3286, 2995, 1096, 1224, 2989, 3675, 2445, 3007,
	682, 4617, 683, 2990, 4527, 1614, 3155, 975, 2082, 4057,
	3084, 1096, 3860, 3004, 4528, 4062, 1212, 1241, 3054, 1031,
	1691, 894, 3318, 4610, 3871, 2086, 3019, 3525, 4111, 3022,
	1644, 1032, 1212, 3030, 4063, 4359, 1897, 2115, 4496, 979,
	4563, 4561, 3791, 4378, 3778, 3021, 3777, 3079, 3080, 2268,
	3020, 2085, 3083, 4251, 3814, 3775, 3438, 1897, 1897, 2364,
	3025, 2195, 3075, 1890, 3040, 976, 1239, 3915, 875, 876,
	1232, 671, 1734, 4189, 4048, 3867, 1733, 806, 807, 2367,
	1733, 2100, 2150, 1900, 2052, 1962, 1962, 3619, 4551, 3963,
	3234, 4188, 4260, 1728, 3964, 4635, 2083, 2088, 1895, 3986,
	4657, 1096, 1096, 1096, 1900, 1900, 3985, 4318, 2419, 3815,
	1096, 1096, 1096, 2116, 3564, 1096, 1898, 3755, 2011, 2621,
	1895, 3052, 3698, 976, 3292, 1096, 1218, 1357, 1055, 2049,
	3439, 1096, 3430, 1096, 3192, 3193, 2148, 1898, 1898, 3150,
	3151, 3152, 1218, 3288, 2902, 3966, 3149, 3147, 3148, 3140,
	3141, 3142, 3143, 3145, 3146, 2896, 2755, 2884, 3669, 1896,
	1357, 3969, 1953, 1953, 2122, 4113, 3778, 2221, 2215, 1039,
	3090, 2209, 1218, 889, 890, 1357, 2149, 2201, 1732, 2084,
	2181, 1896, 1732, 3175, 1214, 1508, 2783, 742, 2357, 4360,
	3200, 2614, 1243, 3634, 1965, 3690, 2738, 3214, 1357, 3194,
	1214, 4416, 3526, 4381, 2047, 2317, 2045, 1733, 4078, 3776,
	3239, 3817, 3670, 1299, 1299, 3872, 2881, 1254, 809, 808,
	4229, 4227, 3323, 1563, 4169, 2617, 2090, 3304, 3300, 3299,
	2099, 3045, 3023, 3253, 2259, 3208, 1096, 3647, 3671, 2128,
	3668, 3197, 3196, 4060, 1734, 2048, 1661, 2661, 1734, 1804,
	1096, 3204, 2660, 4526, 977, 3773, 877, 878, 3202, 3228,
	1299, 2089, 2659, 2658, 3916, 1965, 2616, 3223, 3280, 3281,
	1561, 2615, 1899, 892, 1549, 3620, 3321, 810, 811, 4224,
	3227, 3782, 2123, 1096, 3621, 2888, 3965, 1216, 1550, 3302,
	1460, 1460, 3306, 1899, 1899, 2089, 3220, 3271, 3873, 1299,
	4634, 1036, 3203, 1216, 4325, 3232, 3984, 3212, 1327, 1732,
	1213, 3277, 977, 3215, 3216, 3186, 3322, 3213, 39, 4039,
	3264, 1299, 3201, 1299, 2358, 3972, 1213, 3170, 3171, 3172,
	3209, 3776, 4177, 1216, 2759, 3705, 3218, 3480, 3219, 2219,
	1357, 2142, 3250, 3251, 3404, 3252, 3303, 4572, 1959, 3308,
	2142, 1299, 3310, 3289, 4356, 1299, 1213, 2784, 2785, 3375,
	4095, 3377, 3244, 1460, 3381, 4156, 3362, 3260, 3387, 1645,
	3262, 3263, 3236, 3237, 3238, 3266, 3695, 3267, 1299, 3268,
	3207, 4277, 3199, 4361, 2965, 1299, 3497, 1299, 2206, 3691,
	3356, 1357, 1029, 3334, 978, 3490, 3261, 2866, 792, 3265,
	2864, 2247, 2085, 1620, 4164, 3373, 3257, 3258, 4419, 1299,
	3922, 3272, 3211, 4426, 4413, 4326, 3235, 3338, 3413, 1959,
	3636, 1299, 3278, 2489, 3370, 1708, 4444, 4574, 4516, 4345,
	4094, 1710, 1707, 3293, 4269, 4178, 3672, 4134, 1218, 2321,
	1705, 3352, 3446, 3358, 3914, 3781, 979, 4270, 1962, 4165,
	1683, 3167, 978, 3287, 1681, 1655, 2957, 1653, 3320, 3429,
	3422, 1562, 3330, 1299, 1299, 2957, 1651, 3399, 1935, 3402,
	3444, 1649, 741, 3541, 1647, 3336, 3502, 3344, 3343, 3501,
	4271, 3345, 3254, 3363, 3346, 3132, 1299, 3064, 2885, 2818,
	2773, 3492, 3337, 2687, 1284, 4420, 2121, 3350, 2330, 1930,
	3437, 3371, 4327, 3455, 979, 1926, 3491, 3394, 1560, 3466,
	1711, 891, 3390, 1641, 3351, 3384, 3353, 1636, 3210, 1634,
	1559, 1598, 2131, 3497, 3168, 1953, 1357, 3382, 2308, 1357,
	3521, 3388, 3490, 3520, 1728, 2488, 3696, 3002, 3001, 2972,
	2346, 1670, 4273, 2283, 3383, 2200, 3506, 2180, 3389, 2781,
	2129, 3445, 1993, 3398, 3440, 1836, 1609, 3406, 1532, 4491,
	4011, 3746, 1096, 3427, 3745, 4272, 174, 174, 1096, 1096,
	4012, 3426, 1096, 1096, 1096, 3447, 1096, 3425, 3499, 3997,
	987, 4412, 4274, 4549, 4076, 1096, 1965, 4017, 3956, 3452,
	2126, 4071, 3813, 3478, 1096, 3488, 1460, 1096, 3461, 1216,
	3804, 3482, 3758, 1357, 3718, 3454, 798, 3716, 3464, 3465,
	3697, 3498, 1096, 3374, 3433, 1709, 1706, 3476, 801, 2323,
	1357, 2130, 1213, 2322, 1704, 3561, 3519, 3428, 3492, 3518,
	1965, 1965, 1096, 1096, 1682, 1096, 1096, 1096, 1680, 1654,
	3418, 1652, 3516, 3491, 2915, 2907, 2900, 1039, 2892, 2878,
	1650, 3522, 2863, 1096, 3527, 1648, 2704, 1096, 1646, 1965,
	1965, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	3500, 1096, 3593, 3515, 3594, 3553, 3554, 2699, 1096, 1096,
	1965, 2179, 3509, 3544, 3510, 1096, 3511, 1640, 3524, 2177,
	2159, 1635, 2144, 1633, 1558, 2117, 1096, 2104, 2307, 3493,
	3494, 3495, 3496, 2091, 2032, 2029, 2026, 1218, 1218, 2023,
	2018, 1096, 2016, 2012, 2003, 3443, 1212, 3385, 1193, 4540,
	1737, 1938, 2153, 4062, 992, 994, 996, 3043, 4565, 3549,
	1959, 2053, 1212, 2333, 3017, 3015, 4454, 4100, 4093, 3560,
	1357, 4092, 4063, 4024, 1194, 3948, 3571, 3665, 3567, 3569,
	3570, 2958, 2072, 3631, 3576, 1513, 2735, 2735, 4262, 2760,
	4255, 3825, 1212, 2099, 3583, 3652, 2273, 2218, 1274, 3590,
	1275, 2733, 2757, 4453, 1959, 1959, 3673, 3674, 3591, 2331,
	2280, 2303, 3592, 1702, 1703, 3596, 729, 1096, 2377, 3584,
	3685, 3686, 3687, 3598, 3623, 2302, 3989, 1744, 1745, 4019,
	174, 1744, 1745, 1959, 1959, 1632, 4297, 1096, 3923, 3901,
	3315, 2764, 2786, 4275, 1741, 2763, 3624, 2377, 3599, 4276,
	1308, 1242, 3044, 3643, 3644, 2332, 3638, 1747, 4568, 4559,
	1738, 685, 254, 3754, 1959, 3386, 3493, 3494, 3495, 3496,
	1096, 1096, 3632, 3640, 3641, 4521, 2877, 2764, 3627, 2305,
	2812, 3801, 1275, 1275, 1195, 3753, 2202, 1319, 2825, 2823,
	785, 3654, 1746, 2832, 1104, 2814, 1746, 2766, 1216, 1216,
	2768, 4406, 4372, 4366, 842, 4175, 4324, 4246, 2813, 668,
	1096, 4222, 4157, 2767, 1214, 3655, 696, 3811, 3803, 3790,
	3662, 1213, 1213, 3432, 2922, 2601, 2038, 1946, 3681, 4604,
	1214, 4446, 3242, 4633, 1299, 1480, 4447, 1299, 3729, 4368,
	261, 261, 261, 3893, 674, 675, 1619, 690, 674, 690,
	700, 3688, 1618, 740, 1965, 3689, 4578, 758, 3138, 3139,
	1214, 2484, 764, 3734, 3736, 1744, 1745, 3733, 3748, 261,
	3701, 4446, 2727, 2728, 4619, 3677, 4447, 2727, 3750, 2725,
	2726, 2725, 1284, 2517, 1685, 1299, 3810, 1684, 3756, 871,
	4247, 1096, 3721, 3726, 4207, 261, 3717, 4021, 3719, 1218,
	1096, 4016, 3827, 4015, 3889, 3676, 3572, 3379, 3376, 1830,
	1299, 1299, 1299, 2928, 1829, 3834, 4585, 4410, 4409, 3818,
	2781, 4408, 4312, 4225, 3780, 4202, 4155, 1299, 4153, 4151,
	3797, 4050, 4036, 3987, 1962, 2206, 3944, 3849, 3831, 3785,
	2957, 3714, 1299, 3819, 3708, 3436, 3435, 3309, 1357, 3822,
	3259, 2999, 2980, 2979, 2978, 3767, 2977, 2906, 1212, 2879,
	2758, 2695, 2690, 2680, 3798, 3838, 3784, 3757, 3771, 2679,
	1306, 3779, 1357, 3821, 2668, 1096, 1096, 2449, 3850, 2324,
	2304, 1096, 1096, 1965, 2301, 2300, 1096, 1096, 3802, 1096,
	2299, 3807, 2298, 1096, 2297, 2216, 2190, 2186, 2185, 3805,
	2184, 2183, 2182, 2006, 1096, 1962, 2005, 2004, 1959, 2002,
	1937, 1953, 1701, 3765, 1700, 3820, 1642, 1527, 674, 674,
	1096, 1526, 3293, 3828, 3858, 3823, 261, 1525, 1524, 1296,
	3766, 3833, 3856, 1523, 3839, 3840, 3829, 1522, 3841, 3848,
	3874, 3844, 1521, 1516, 3847, 1512, 1486, 3845, 1493, 1510,
	1499, 1509, 1466, 1465, 1464, 1463, 3875, 3887, 1348, 1347,
	1216, 1346, 1345, 1344, 1312, 1311, 1261, 1260, 1259, 3857,
	1258, 1257, 1256, 3868, 1255, 1253, 1248, 1247, 1246, 1245,
	1218, 1244, 1953, 1213, 1176, 2043, 998, 984, 1218, 4329,
	3883, 3970, 1357, 2320, 1357, 1694, 92, 1518, 828, 86,
	2151, 1218, 3713, 955, 4443, 1502, 4351, 836, 4428, 3799,
	3311, 3928, 1299, 1299, 2835, 1587, 2282, 1592, 1643, 2284,
	3222, 1357, 2643, 4398, 3897, 3100, 1214, 1601, 1816, 1606,
	4304, 4127, 1821, 2487, 3863, 1834, 3179, 1959, 88, 1080,
	1126, 4046, 4045, 3957, 3700, 1218, 2947, 1218, 4043, 3949,
	3950, 4042, 1950, 1952, 1046, 3913, 1360, 2630, 4465, 2054,
	1086, 2070, 2063, 2681, 2561, 1103, 1100, 1954, 1299, 1956,
	1102, 1101, 3990, 3980, 1955, 1853, 3931, 1099, 1357, 1949,
	1299, 3809, 2926, 1299, 3462, 174, 1568, 1566, 3992, 3993,
	957, 1663, 1357, 2058, 2443, 3927, 3924, 2471, 3089, 3930,
	1827, 3934, 3953, 1061, 3929, 3925, 3926, 3935, 1082, 3227,
	2468, 3938, 1237, 1071, 4020, 1060, 4022, 3205, 3184, 3449,
	3661, 2356, 1299, 1299, 846, 3135, 2474, 3920, 3955, 1228,
	3991, 2584, 2577, 2573, 3269, 2916, 1714, 1212, 1212, 4141,
	1806, 1216, 1299, 2927, 4040, 1342, 1064, 2441, 1818, 1216,
	2206, 3069, 2366, 3976, 1357, 3976, 3456, 3225, 2674, 1299,
	4450, 3580, 1216, 2194, 1213, 1192, 4037, 1191, 1284, 1235,
	1190, 4434, 1213, 4034, 4023, 4431, 4014, 2141, 3979, 3842,
	3411, 2046, 2719, 1796, 1218, 1213, 3419, 1076, 1459, 4068,
	3190, 3481, 4028, 4079, 1299, 1299, 1299, 1529, 4006, 763,
	4033, 4182, 1088, 4009, 1795, 4035, 1216, 1357, 1216, 2856,
	2855, 4321, 4099, 1328, 1326, 1325, 1324, 4080, 4592, 1096,
	1096, 1096, 4655, 3709, 228, 3037, 1962, 1735, 1727, 1213,
	225, 1213, 4041, 227, 226, 4051, 3666, 1357, 4074, 2361,
	4056, 4065, 1096, 3995, 3231, 1096, 1096, 4519, 3731, 4083,
	3403, 23, 22, 21, 4088, 1096, 4004, 112, 1965, 4007,
	4081, 3996, 4067, 1096, 1096, 42, 20, 128, 147, 146,
	1962, 1962, 120, 4005, 145, 144, 4008, 4105, 1357, 143,
	1299, 142, 149, 141, 140, 4119, 135, 4103, 139, 4102,
	138, 4107, 3976, 137, 136, 134, 132, 133, 127, 1962,
	1962, 1357, 131, 1953, 130, 1214, 1214, 4114, 129, 1096,
	126, 125, 124, 123, 122, 4096, 121, 4124, 1096, 119,
	118, 117, 116, 115, 114, 113, 1096, 4108, 754, 1965,
	1962, 751, 61, 60, 4130, 4064, 111, 110, 1096, 19,
	40, 1096, 14, 65, 66, 1216, 1919, 1953, 1953, 18,
	13, 35, 91, 1096, 102, 101, 36, 4147, 4148, 99,
	1357, 98, 34, 17, 16, 4136, 4185, 1299, 1213, 15,
	4160, 1230, 1299, 1299, 96, 4150, 1953, 1953, 2579, 95,
	33, 31, 11, 9, 8, 37, 4161, 4159, 1914, 12,
	5, 179, 178, 181, 4168, 177, 180, 90, 176, 1212,
	175, 89, 4201, 29, 1250, 10, 171, 1953, 4238, 4237,
	4212, 3413, 1959, 3795, 81, 173, 261, 1357, 261, 261,
	1299, 1279, 261, 1289, 4228, 172, 170, 169, 168, 82,
	79, 167, 85, 4203, 1309, 4199, 166, 80, 1218, 1218,
	84, 83, 27, 758, 6, 4209, 64, 7, 4218, 4245,
	4109, 4261, 3503, 4217, 4256, 4220, 4221, 105, 1096, 1096,
	4226, 106, 38, 77, 76, 75, 4204, 261, 4241, 261,
	261, 1279, 26, 261, 261, 1096, 1965, 4236, 4257, 1289,
	4193, 4194, 4259, 1959, 4265, 4216, 63, 25, 212, 211,
	261, 210, 1482, 209, 4284, 208, 4258, 4191, 207, 206,
	205, 4253, 200, 4278, 199, 204, 4264, 4263, 4208, 202,
	4210, 1096, 4211, 1506, 1096, 201, 4083, 203, 198, 215,
	214, 1218, 220, 1460, 219, 218, 4293, 4294, 217, 216,
	213, 222, 1531, 1218, 197, 1289, 196, 195, 193, 261,
	261, 4317, 1279, 4214, 189, 188, 3976, 3976, 192, 194,
	191, 190, 187, 4292, 4296, 221, 72, 164, 165, 71,
	4215, 758, 4313, 261, 261, 4316, 163, 1214, 162, 4280,
	4281, 161, 160, 2089, 1962, 1096, 1096, 159, 4339, 158,
	1212, 157, 4355, 4302, 70, 1096, 871, 24, 1212, 2,
	1218, 1, 4334, 1218, 4333, 0, 0, 1299, 0, 1216,
	1216, 1212, 0, 0, 0, 0, 0, 1299, 1299, 0,
	4347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 1213, 1213, 1299, 0, 4349, 4389, 0, 3976,
	1959, 4362, 0, 0, 2167, 0, 4363, 4364, 1096, 1096,
	4370, 3976, 4367, 4369, 4374, 1212, 0, 1212, 1096, 4241,
	0, 1953, 0, 4383, 4394, 4382, 4395, 0, 4387, 4388,
	261, 0, 0, 4386, 4340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4385, 4392, 0, 0, 0, 261,
	4393, 0, 1216, 0, 1096, 1096, 0, 1096, 4403, 0,
	0, 0, 0, 4407, 1216, 0, 0, 0, 3976, 0,
	4421, 3976, 4348, 1962, 0, 1213, 4402, 4448, 4425, 0,
	0, 0, 0, 4452, 4433, 4436, 0, 1213, 0, 0,
	4445, 4375, 0, 4424, 4377, 4423, 0, 0, 0, 0,
	4470, 0, 0, 0, 0, 0, 4442, 0, 4474, 0,
	1096, 1096, 1096, 4473, 0, 0, 4438, 0, 1214, 0,
	4455, 1216, 4437, 2447, 1216, 4441, 1214, 4468, 0, 0,
	4461, 0, 0, 0, 0, 0, 4469, 0, 1816, 1214,
	1096, 0, 0, 0, 1213, 0, 0, 1213, 4508, 0,
	1953, 0, 0, 0, 1212, 4489, 4503, 4490, 4504, 4487,
	4488, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	4522, 0, 0, 0, 0, 0, 0, 0, 4531, 4506,
	0, 0, 0, 1214, 0, 1214, 4533, 0, 4545, 0,
	0, 0, 2583, 0, 1096, 0, 0, 4529, 4544, 0,
	0, 1355, 0, 0, 4530, 1454, 0, 0, 4550, 0,
	0, 4537, 4538, 0, 4539, 4543, 0, 0, 0, 0,
	0, 0, 0, 0, 4566, 0, 0, 0, 0, 0,
	0, 3027, 4562, 4560, 4541, 4542, 4556, 4557, 4558, 0,
	4547, 0, 0, 1218, 4571, 1218, 4569, 674, 0, 2089,
	4570, 4452, 4587, 4433, 4573, 4588, 4436, 4582, 4355, 4577,
	0, 4599, 4586, 0, 0, 0, 0, 0, 261, 4594,
	261, 0, 0, 4593, 261, 4590, 0, 0, 4597, 0,
	0, 0, 4612, 0, 0, 0, 4598, 1482, 1279, 261,
	0, 261, 0, 4611, 0, 0, 0, 261, 1482, 690,
	4614, 0, 4518, 0, 261, 1482, 0, 0, 0, 4620,
	4627, 2579, 2579, 0, 0, 1096, 1096, 4618, 0, 2007,
	0, 4625, 1214, 0, 1096, 4623, 1096, 1096, 0, 4631,
	4621, 261, 0, 4628, 4640, 4637, 4646, 0, 261, 4648,
	4645, 4651, 4643, 4650, 0, 4649, 0, 0, 4647, 0,
	0, 3976, 2928, 3976, 0, 4658, 4644, 4659, 4654, 0,
	0, 0, 4661, 0, 0, 4663, 0, 4664, 0, 4660,
	0, 0, 4666, 0, 4589, 4669, 4591, 0, 758, 0,
	2080, 0, 0, 1096, 4674, 2081, 4676, 0, 0, 4662,
	4677, 0, 4679, 4680, 4638, 4639, 0, 4671, 4666, 0,
	0, 0, 4670, 0, 1216, 4673, 1216, 0, 1212, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 1745, 0, 0, 0, 0, 0, 1213, 0, 1213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 1962, 0,
	1747, 4675, 0, 0, 0, 2579, 2579, 2579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 1212, 0, 0, 0, 1766, 0, 0, 2082, 0,
	0, 0, 0, 1212, 0, 0, 3066, 3067, 0, 0,
	0, 0, 263, 0, 0, 2086, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	261, 0, 2000, 0, 0, 0, 0, 0, 0, 3138,
	3139, 0, 3156, 3157, 3158, 0, 0, 0, 0, 0,
	1212, 0, 0, 1212, 0, 0, 0, 0, 0, 0,
	0, 3879, 0, 0, 0, 0, 1214, 1214, 0, 1769,
	1770, 1771, 1772, 0, 0, 0, 2083, 2088, 0, 1752,
	0, 0, 0, 261, 0, 0, 1953, 261, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 2000, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 3153, 261, 0, 261, 0, 0,
	0, 674, 0, 261, 0, 1774, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 758, 0, 0, 1929, 871,
	3161, 3162, 3163, 0, 0, 0, 0, 0, 0, 1214,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 2084,
	0, 1214, 0, 0, 261, 2583, 1279, 261, 0, 0,
	0, 0, 0, 2871, 0, 0, 2874, 0, 2876, 0,
	0, 758, 0, 0, 1767, 0, 0, 0, 261, 1059,
	0, 0, 0, 0, 0, 2281, 0, 0, 0, 0,
	261, 261, 2078, 261, 0, 261, 2090, 261, 3144, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 1214, 2919, 0, 1293, 2919, 0, 0, 0, 0,
	0, 0, 2313, 1953, 0, 2314, 0, 2315, 0, 0,
	0, 0, 0, 0, 0, 2583, 2583, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3159, 0, 0, 740, 0, 0, 0, 758, 0,
	1469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 2997, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 1504, 0, 3154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 1212, 0, 1212, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 1574, 0, 1574,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	1744, 1745, 2085, 1777, 1778, 1779, 1787, 1788, 1789, 2583,
	2583, 2583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2172, 0, 1775, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 2579, 2579, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 1766, 0, 0, 3155, 674,
	0, 0, 0, 0, 1763, 0, 261, 0, 674, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	261, 0, 0, 0, 3138, 3139, 0, 3156, 3157, 3158,
	0, 0, 0, 0, 0, 0, 261, 1289, 0, 0,
	0, 1214, 0, 1214, 0, 2579, 2579, 2579, 2579, 2579,
	2579, 2579, 2579, 2579, 2579, 2579, 2579, 2579, 2579, 2579,
	2579, 2579, 2579, 2579, 0, 2579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	1770, 1771, 1772, 0, 261, 1289, 0, 0, 690, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 2694, 3153,
	0, 0, 0, 0, 261, 0, 0, 261, 0, 0,
	0, 261, 0, 261, 0, 0, 0, 0, 1279, 0,
	261, 261, 0, 1289, 1289, 2710, 1784, 0, 0, 1794,
	261, 3150, 3151, 3152, 0, 1774, 1776, 0, 3149, 3147,
	3148, 3140, 3141, 3142, 3143, 3145, 3146, 0, 0, 0,
	0, 0, 3537, 3538, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2747, 0, 0, 0, 1782,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 3144, 1767, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 2380, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
	3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 0,
	3622, 0, 0, 0, 0, 261, 2869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 2485, 0, 261, 0, 261, 1059, 0, 3154, 0,
	1059, 0, 261, 0, 0, 3324, 3325, 0, 3326, 3327,
	3328, 0, 2911, 0, 0, 0, 1441, 0, 1773, 0,
	1441, 0, 2747, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 2940, 871, 0, 2747, 2747, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3364, 3365, 261, 3366, 3367, 3368, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 261, 1279, 261, 0, 0, 0, 1482, 0,
	1482, 1289, 261, 0, 0, 1279, 2653, 1279, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2583, 2583, 3138, 3139, 0, 3156, 3157, 3158, 0,
	0, 0, 2851, 0, 0, 0, 0, 1081, 109, 0,
	261, 261, 261, 261, 1279, 3546, 0, 1279, 0, 261,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3155, 0, 2843, 2841, 0, 0, 0,
	0, 0, 2845, 2847, 2837, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 1783, 0, 0,
	261, 0, 1758, 1759, 1765, 1786, 1764, 1760, 3153, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 2583,
	2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583,
	2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 0, 2583,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2730, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 3144, 0, 0, 0, 3150, 3151, 3152, 0,
	0, 0, 0, 3149, 3147, 3148, 3140, 3141, 3142, 3143,
	3145, 3146, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2236, 0, 1744, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2839, 1293, 2250, 0, 3159, 0, 0, 0, 0,
	0, 1775, 2853, 2252, 0, 0, 0, 0, 1747, 1202,
	0, 0, 0, 0, 0, 2260, 0, 2263, 2264, 2265,
	0, 0, 0, 2852, 2844, 2842, 2846, 2848, 2838, 2840,
	2854, 0, 0, 0, 0, 0, 0, 3154, 2850, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	261, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 2857, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 674, 0, 0, 0, 0, 674, 0, 0, 674,
	0, 0, 674, 674, 0, 0, 0, 0, 674, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3540, 0, 0, 1482,
	0, 0, 0, 1441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1770, 1771,
	1772, 0, 1482, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 261, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2579,
	3138, 3139, 3155, 3156, 3157, 3158, 0, 2747, 2747, 261,
	0, 3284, 0, 1774, 1776, 1744, 1745, 2747, 0, 0,
	3295, 0, 3545, 0, 0, 0, 0, 0, 2747, 3295,
	0, 2747, 3295, 0, 0, 3295, 0, 0, 1775, 1761,
	1762, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	261, 261, 3284, 2579, 261, 0, 0, 0, 0, 0,
	1059, 0, 0, 0, 2858, 0, 1441, 0, 0, 0,
	0, 0, 1767, 2849, 3284, 3153, 261, 0, 3355, 3355,
	1746, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 2747, 1763,
	2747, 0, 3380, 2747, 3284, 0, 0, 2747, 3284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3150, 3151, 3152, 261, 0,
	0, 0, 3149, 3147, 3148, 3140, 3141, 3142, 3143, 3145,
	3146, 3806, 261, 3407, 0, 0, 3409, 2747, 0, 0,
	261, 0, 0, 0, 261, 0, 0, 1289, 0, 3144,
	0, 0, 0, 0, 1769, 1770, 1771, 1772, 0, 0,
	0, 0, 261, 0, 1752, 0, 0, 2911, 0, 0,
	1279, 0, 261, 0, 4133, 2747, 1773, 674, 0, 0,
	0, 0, 2000, 2000, 2747, 0, 1441, 0, 0, 0,
	1744, 1745, 1892, 0, 0, 0, 0, 1768, 0, 2579,
	0, 3859, 0, 0, 0, 261, 2911, 0, 0, 2911,
	1774, 1776, 3159, 1775, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 3191, 0, 2711, 1293, 4171, 2000,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 0,
	0, 3508, 0, 3138, 3139, 0, 3156, 3157, 3158, 0,
	0, 0, 0, 0, 3154, 1746, 0, 3217, 3514, 0,
	0, 1279, 261, 0, 261, 1766, 0, 0, 2000, 1767,
	1279, 0, 3230, 0, 1763, 0, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 2000, 0, 0, 3248, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 3153, 0,
	2000, 0, 0, 0, 2000, 0, 0, 0, 3535, 0,
	0, 0, 0, 0, 1764, 1760, 0, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0, 1769,
	1770, 1771, 1772, 0, 2859, 0, 3578, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 109, 0, 109, 0, 109,
	0, 0, 0, 1773, 4301, 0, 0, 0, 0, 3155,
	0, 0, 0, 0, 0, 1774, 1776, 0, 0, 0,
	0, 0, 3144, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 2583, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	1040, 109, 109, 0, 0, 0, 0, 0, 0, 1441,
	0, 261, 261, 0, 109, 0, 109, 2973, 0, 0,
	0, 0, 0, 0, 1767, 0, 109, 0, 109, 0,
	0, 0, 0, 674, 674, 3159, 0, 2583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3230, 4049,
	0, 0, 0, 0, 0, 1482, 1482, 0, 0, 0,
	0, 0, 4066, 0, 0, 0, 0, 0, 1219, 1482,
	1482, 1482, 0, 0, 0, 0, 0, 3154, 0, 0,
	0, 0, 0, 0, 0, 4087, 0, 0, 0, 0,
	109, 0, 3150, 3151, 3152, 0, 1441, 0, 0, 3149,
	3147, 3148, 3140, 3141, 3142, 3143, 3145, 3146, 0, 1744,
	1745, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750,
	1751, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 758, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1441, 0, 0, 0, 1768,
	0, 0, 0, 0, 1746, 0, 0, 3355, 0, 0,
	1020, 0, 0, 1454, 1766, 0, 1355, 0, 0, 0,
	261, 1441, 0, 1763, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 2583, 0, 0, 0, 0, 0, 0,
	3284, 0, 261, 0, 0, 0, 0, 1814, 0, 0,
	0, 1820, 3155, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 3534, 261, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	3557, 0, 0, 0, 0, 0, 0, 0, 1769, 1770,
	1771, 1772, 2747, 261, 0, 0, 0, 3573, 1752, 0,
	0, 0, 2940, 2940, 0, 0, 0, 0, 871, 871,
	2747, 0, 0, 0, 2911, 2911, 0, 0, 871, 2747,
	0, 0, 0, 0, 0, 0, 1764, 1760, 0, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	261, 0, 0, 0, 1774, 1776, 0, 0, 0, 0,
	1744, 1745, 0, 0, 0, 0, 1441, 0, 0, 0,
	0, 1906, 0, 1909, 0, 109, 0, 0, 0, 0,
	1761, 1762, 0, 1775, 0, 3150, 3151, 3152, 0, 0,
	1747, 0, 3149, 3147, 3148, 3140, 3141, 3142, 3143, 3145,
	3146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 3898, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 3664, 1441, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	1482, 0, 261, 0, 0, 0, 0, 0, 3055, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 4353, 0, 1304, 0, 0, 0, 0, 0, 1769,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 4373, 1045, 1773, 2747, 2747,
	1045, 3355, 2747, 0, 0, 0, 0, 0, 0, 3978,
	0, 3978, 1482, 0, 0, 0, 0, 0, 1768, 0,
	0, 2747, 0, 3295, 0, 0, 0, 1482, 1482, 261,
	3284, 0, 0, 0, 0, 1774, 1776, 0, 0, 0,
	0, 0, 0, 3284, 0, 261, 3284, 0, 261, 1484,
	0, 1490, 0, 1496, 0, 0, 1219, 0, 0, 0,
	0, 1761, 1762, 2747, 0, 2747, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2747, 1767, 0, 0, 0, 4053, 0,
	1219, 0, 3391, 0, 1219, 0, 0, 0, 0, 261,
	0, 0, 1219, 0, 0, 4456, 0, 0, 1585, 261,
	1590, 4458, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 1604, 3423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 3431, 861, 0, 3978, 0,
	0, 1482, 0, 0, 0, 1764, 1760, 0, 1757, 1755,
	1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 1219,
	0, 0, 0, 73, 0, 864, 863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3472, 3473, 1219,
	74, 0, 0, 0, 1219, 0, 1666, 0, 0, 1672,
	0, 0, 0, 0, 0, 1040, 78, 1040, 1219, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 78, 0, 87, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2747, 1219, 3295, 0, 0, 4163, 2000, 0, 0,
	0, 0, 0, 0, 261, 0, 782, 0, 0, 2000,
	0, 4183, 2000, 4183, 87, 0, 865, 0, 0, 0,
	0, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 0, 0,
	107, 0, 0, 0, 758, 93, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 3933, 1815, 0, 865, 0, 0, 0, 1828, 0,
	3284, 0, 261, 0, 0, 0, 0, 0, 107, 0,
	0, 2000, 0, 93, 104, 0, 0, 0, 3946, 0,
	0, 0, 4163, 0, 0, 0, 0, 0, 0, 1441,
	2747, 0, 0, 94, 1020, 0, 0, 1020, 1020, 776,
	0, 0, 0, 0, 0, 783, 1764, 1760, 4250, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 781,
	1482, 0, 1441, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 3978, 3978, 0, 0, 0, 1441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 261, 2440, 0, 0, 0, 0, 0, 0, 0,
	1441, 0, 0, 1886, 1886, 1886, 0, 780, 1040, 0,
	0, 0, 0, 0, 3578, 0, 0, 1814, 0, 0,
	0, 1814, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 3355, 4315, 0, 0, 0, 0, 0, 1059, 4163,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 1059, 0, 0, 3978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 1202, 0, 0, 0, 0, 0, 0,
	1219, 0, 1219, 0, 1355, 0, 786, 0, 4053, 1909,
	0, 0, 0, 0, 0, 97, 0, 1219, 0, 0,
	0, 0, 0, 0, 3978, 0, 261, 3978, 0, 182,
	100, 0, 103, 0, 4125, 1966, 2000, 3295, 0, 1219,
	0, 0, 1441, 0, 109, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 1482, 866, 1482, 0, 182, 100, 148,
	103, 0, 0, 0, 0, 4125, 0, 0, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1441, 229, 0, 0, 4417, 2380, 0,
	0, 0, 866, 231, 0, 1219, 0, 148, 3763, 777,
	4183, 0, 0, 261, 0, 0, 1219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 2747, 0, 0, 0, 0, 0, 0, 0,
	1219, 231, 0, 734, 186, 0, 0, 0, 0, 0,
	0, 0, 230, 261, 0, 0, 784, 2380, 0, 0,
	0, 0, 775, 0, 0, 223, 0, 150, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	3578, 0, 186, 0, 3835, 3836, 3837, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 862, 1482, 0, 0,
	0, 1293, 0, 223, 0, 0, 0, 0, 772, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 156, 1441, 0,
	0, 1441, 0, 0, 185, 73, 779, 46, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 74, 0, 0, 151, 0, 0, 0, 0,
	0, 774, 0, 0, 0, 0, 4163, 0, 78, 0,
	1219, 1219, 109, 0, 0, 109, 0, 109, 0, 67,
	1219, 0, 0, 0, 0, 0, 48, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2747, 0, 0, 0, 0, 1441, 47, 3978, 87, 3978,
	0, 0, 1482, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 1441, 0, 109, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 50, 68, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 0, 0, 57, 0,
	0, 0, 154, 0, 0, 0, 1482, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 0, 0, 0, 1219, 0, 1219, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 3940, 3941, 0, 0,
	0, 0, 2940, 0, 1219, 1219, 0, 0, 0, 0,
	109, 2747, 0, 0, 0, 1219, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 2940, 1219, 0, 1219,
	1219, 1219, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2355, 0, 2359, 0, 0,
	0, 0, 1441, 0, 2373, 0, 0, 0, 0, 0,
	0, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 1293, 2422, 0, 2424,
	2425, 2426, 2427, 0, 0, 0, 0, 1744, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2440,
	0, 2451, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 1815, 0, 0, 0, 2466, 1747, 0, 0,
	1814, 1966, 1966, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 2496, 2499, 2502, 2505, 0, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 0, 0, 0, 0, 4104, 97,
	4106, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 2575, 53, 2586, 2588, 2593,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	58, 182, 100, 0, 103, 0, 0, 0, 54, 0,
	1219, 0, 155, 0, 0, 0, 0, 0, 0, 55,
	0, 0, 0, 0, 0, 3048, 0, 0, 229, 0,
	0, 0, 0, 0, 4152, 0, 62, 0, 0, 1208,
	0, 148, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	0, 0, 0, 0, 0, 152, 1752, 0, 0, 0,
	0, 0, 0, 0, 3138, 3139, 0, 3156, 3157, 3158,
	0, 0, 1219, 0, 0, 231, 0, 0, 0, 1219,
	0, 0, 0, 1202, 0, 256, 256, 670, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1202,
	0, 150, 1774, 1776, 0, 1219, 0, 0, 0, 0,
	1441, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 4219, 0, 1761, 1762,
	0, 0, 0, 0, 1441, 0, 0, 223, 0, 3153,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	1745, 1767, 1777, 1778, 1779, 1787, 1788, 1789, 185, 0,
	0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 1775, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1219, 1219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 3144, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 109, 109, 0, 109, 109, 109,
	1219, 0, 0, 0, 1441, 0, 1441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2872, 2873,
	0, 2875, 73, 3160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1441, 1966, 1773, 0, 0, 0, 74,
	109, 109, 0, 109, 109, 109, 3159, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 1770,
	1771, 1772, 1219, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 3154, 0,
	1441, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 0,
	0, 1293, 1293, 0, 0, 1784, 0, 0, 1794, 0,
	0, 0, 0, 0, 1774, 1776, 0, 0, 1293, 1219,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 1790, 0, 1791, 0, 1202, 2998, 0, 1040, 107,
	1761, 1762, 0, 0, 93, 104, 0, 0, 0, 0,
	1219, 0, 109, 109, 0, 0, 1441, 0, 1782, 0,
	0, 0, 1219, 0, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 1219,
	0, 0, 0, 1764, 1760, 0, 1757, 1755, 1756, 1748,
	1749, 1750, 1751, 1753, 1754, 1797, 1798, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 1441,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 3155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 1441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3049, 3050, 0, 0, 0, 0, 3056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3070, 3071, 0, 0, 0,
	1441, 2466, 0, 0, 0, 0, 0, 0, 0, 0,
	3078, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 1441, 0, 0, 3092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 1768, 0,
	0, 0, 0, 3104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 1059, 1785, 0, 97, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 3150, 3151, 3152, 0,
	0, 0, 1441, 3149, 3147, 3148, 3140, 3141, 3142, 3143,
	3145, 3146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 109, 0, 182, 100,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 1202, 0, 0, 0, 1441,
	0, 0, 2593, 2593, 2593, 229, 0, 0, 0, 0,
	865, 0, 0, 866, 0, 0, 0, 1886, 148, 0,
	0, 0, 0, 0, 107, 3195, 1783, 0, 0, 93,
	104, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755,
	1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0,
	0, 3113, 231, 0, 0, 3114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 1265, 0, 1265, 1265, 0, 0, 94, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 230, 1219, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 1219, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 1045, 0,
	0, 0, 1352, 0, 0, 0, 1219, 0, 1458, 0,
	0, 0, 1045, 0, 0, 1579, 0, 0, 1219, 0,
	0, 1219, 0, 0, 0, 0, 0, 1059, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 1219, 3314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	1219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 1584,
	109, 97, 0, 0, 0, 0, 1219, 0, 0, 0,
	0, 1966, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 1202, 1105, 0, 0,
	0, 0, 0, 0, 1780, 1775, 0, 1059, 0, 0,
	0, 0, 1747, 0, 0, 1219, 0, 0, 0, 0,
	0, 1793, 0, 182, 100, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 1219,
	109, 0, 0, 262, 262, 262, 0, 1746, 0, 0,
	229, 0, 0, 0, 0, 0, 1219, 1766, 866, 0,
	0, 0, 0, 148, 0, 1693, 1763, 1219, 0, 0,
	0, 1219, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 0, 231, 262, 0,
	0, 1219, 0, 1219, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 186, 0,
	0, 1769, 1770, 1771, 1772, 0, 230, 0, 0, 0,
	0, 1752, 0, 0, 1219, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 109, 0, 0, 0, 0, 0, 1202, 0, 1219,
	1219, 0, 0, 0, 0, 1202, 0, 0, 1784, 0,
	1577, 1794, 0, 0, 2373, 0, 0, 1774, 1776, 0,
	3532, 3533, 1219, 0, 3536, 0, 0, 0, 3539, 0,
	0, 0, 0, 0, 1790, 0, 1791, 3543, 0, 0,
	0, 0, 0, 1761, 1762, 0, 3550, 0, 0, 3195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1219, 0, 3562, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 3585, 3586, 0, 3587, 3588, 3589,
	0, 0, 0, 0, 0, 0, 0, 2554, 2555, 2556,
	2557, 2550, 2551, 2552, 2553, 3595, 0, 0, 0, 3597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1219,
	3625, 3626, 0, 0, 1933, 0, 1458, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 3637, 0,
	0, 109, 0, 0, 0, 0, 1966, 1966, 0, 0,
	0, 0, 0, 3646, 0, 0, 0, 0, 2530, 2531,
	2532, 2533, 0, 0, 109, 0, 1265, 0, 0, 0,
	0, 0, 0, 1458, 0, 1966, 1966, 0, 0, 0,
	1773, 2542, 2543, 2544, 2545, 2538, 2539, 2540, 2541, 2546,
	2547, 2548, 2549, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 3692,
	0, 0, 0, 1219, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3703,
	0, 0, 0, 0, 0, 2526, 2527, 2528, 2529, 2534,
	2535, 2536, 2537, 0, 0, 0, 1219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760,
	0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754,
	0, 0, 0, 0, 2462, 0, 0, 0, 2463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1886, 0, 0, 0, 0, 0, 0,
	0, 0, 3830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2440, 2192, 0,
	1219, 0, 2199, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2224, 0, 2224, 0, 0, 0, 0, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 3876, 3877, 0,
	0, 0, 0, 3881, 3882, 1219, 0, 0, 3885, 3886,
	0, 0, 0, 0, 0, 3890, 1219, 1219, 1219, 2199,
	0, 0, 2256, 0, 0, 0, 3894, 0, 0, 262,
	0, 262, 262, 1219, 0, 262, 0, 1302, 0, 0,
	0, 0, 3899, 2276, 0, 0, 0, 0, 1219, 0,
	0, 0, 0, 0, 1219, 0, 2289, 0, 2291, 0,
	2293, 0, 2295, 0, 2296, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 1219, 0,
	262, 1302, 262, 262, 0, 1302, 262, 262, 0, 1966,
	0, 0, 0, 1302, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 2318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 262, 262, 0, 0, 0, 1744, 1745, 0,
	1777, 1778, 1779, 1787, 1788, 1789, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 1302, 262, 262, 0, 1780,
	1775, 0, 0, 0, 0, 0, 1219, 1747, 0, 1302,
	0, 0, 0, 0, 1219, 0, 1793, 0, 1219, 0,
	1219, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 1219, 1219,
	109, 0, 1746, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 1219, 0, 0, 1219,
	0, 0, 262, 0, 0, 0, 0, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	0, 0, 0, 0, 0, 0, 1752, 0, 1219, 1219,
	0, 0, 0, 0, 0, 2650, 0, 0, 0, 0,
	0, 4120, 4121, 4122, 0, 0, 0, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 1784, 2373, 1219, 1794, 4131, 4132, 0,
	0, 0, 1774, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4140, 4143, 0, 0, 1790,
	1219, 1791, 0, 0, 0, 0, 0, 0, 1761, 1762,
	1219, 1219, 1219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 1782, 0, 0, 2696,
	0, 0, 1265, 0, 0, 0, 1265, 0, 1265, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	4184, 0, 0, 1219, 0, 2212, 0, 0, 4190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4197, 0, 0, 1045, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 4205, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 1219, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 0,
	0, 0, 262, 262, 262, 1966, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	1302, 0, 0, 0, 1458, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 0, 0,
	0, 0, 0, 1219, 262, 0, 1768, 0, 1219, 1219,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 2199, 0,
	703, 0, 0, 0, 0, 704, 1302, 2212, 0, 0,
	0, 0, 0, 1219, 0, 0, 1219, 1302, 0, 0,
	0, 0, 0, 4320, 0, 0, 4323, 0, 0, 0,
	0, 0, 0, 0, 1219, 1219, 0, 0, 0, 0,
	0, 1302, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 0, 0, 2971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 707, 2982, 0, 2985,
	0, 0, 0, 0, 0, 0, 0, 1045, 1045, 0,
	0, 0, 0, 0, 1783, 0, 0, 4371, 726, 1758,
	1759, 1765, 1786, 1764, 1760, 0, 1757, 1755, 1756, 1748,
	1749, 1750, 1751, 1753, 1754, 0, 0, 1219, 708, 0,
	0, 0, 0, 3904, 0, 3010, 1458, 3012, 1458, 1219,
	0, 0, 0, 0, 3018, 0, 0, 0, 0, 0,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 0, 0, 0, 0, 0,
	4143, 0, 0, 710, 0, 0, 711, 1265, 0, 0,
	262, 1302, 1302, 262, 0, 3046, 0, 0, 0, 0,
	0, 1302, 735, 0, 0, 0, 1219, 0, 0, 1219,
	0, 0, 0, 1219, 0, 0, 0, 1045, 0, 0,
	0, 0, 0, 1219, 1219, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4486, 4486, 4486, 0, 0, 0, 262, 0,
	262, 0, 0, 0, 0, 722, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 1302, 0, 1302,
	0, 0, 4507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1302, 262, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 1302, 0,
	1302, 1302, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 732, 0, 713, 4486, 0, 0, 0,
	0, 0, 0, 262, 262, 0, 262, 0, 262, 0,
	262, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 730, 731, 728, 0, 0, 0, 0,
	0, 723, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 260, 260, 260, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 703, 4486, 4632, 0,
	799, 704, 0, 0, 0, 717, 4636, 724, 0, 1219,
	0, 1219, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 799, 0, 0, 0,
	719, 0, 0, 0, 0, 727, 0, 0, 0, 1265,
	705, 0, 0, 1458, 1458, 0, 0, 0, 0, 736,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 707, 0, 3282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 708, 3333, 3335, 0, 0, 2212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 709, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 0, 710,
	0, 0, 711, 262, 0, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3420, 0, 262, 0, 3424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	262, 0, 0, 0, 262, 0, 262, 0, 0, 0,
	0, 722, 0, 262, 262, 0, 0, 0, 0, 1302,
	1302, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	3477, 0, 0, 0, 0, 1744, 1745, 0, 1777, 1778,
	1779, 1787, 1788, 1789, 0, 0, 0, 791, 0, 0,
	0, 1302, 0, 0, 0, 0, 0, 1780, 1775, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 262,
	0, 713, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 3517, 0, 1458,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 733,
	1746, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 262, 1302, 0, 3530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 734, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 262, 730,
	731, 728, 0, 0, 0, 0, 0, 723, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 262, 0,
	1302, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 1770, 1771, 1772, 0, 0,
	0, 717, 0, 724, 1752, 0, 0, 0, 0, 0,
	0, 1302, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 1302, 719, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 262, 0, 0, 0,
	1302, 1784, 0, 0, 1794, 736, 0, 0, 0, 0,
	1774, 1776, 0, 0, 0, 262, 721, 262, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 1790, 0, 1791,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 262, 262, 262, 0, 0, 1767,
	0, 0, 262, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 1792, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 260,
	260, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 260, 0,
	260, 260, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2212, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 2212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 0, 2212, 0, 0, 0, 0, 3812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 1302, 3861, 0, 1758, 1759, 1765,
	1786, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750,
	1751, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 3548, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 1302, 0, 0, 0, 0, 1300, 262, 0, 0,
	0, 262, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 1302, 0, 0,
	1358, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 262, 0, 1302, 262, 0, 0,
	0, 0, 0, 1300, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 262,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 3994, 0, 0, 0, 1302, 1300,
	0, 0, 1302, 0, 1300, 0, 0, 0, 0, 0,
	2212, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 262, 1302, 0, 1302, 0, 0, 0, 1302, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 1302, 262, 0, 1908,
	0, 1215, 0, 0, 0, 260, 0, 0, 1302, 0,
	0, 0, 1300, 0, 2212, 262, 0, 0, 0, 0,
	260, 1908, 260, 0, 4075, 0, 0, 0, 799, 0,
	0, 0, 817, 0, 0, 799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 1302, 819, 0, 0, 0, 0, 820, 262, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 262, 1302, 262, 0, 0,
	0, 0, 0, 822, 0, 0, 0, 0, 823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 0, 262, 0, 0, 824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	845, 0, 0, 0, 0, 0, 0, 0, 0, 4172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 735, 0, 0, 2212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 791,
	0, 0, 0, 0, 0, 0, 791, 843, 0, 1300,
	0, 0, 0, 0, 260, 4291, 1458, 0, 260, 0,
	0, 0, 0, 0, 260, 0, 0, 1302, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 830, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 799, 260, 839, 260, 0, 260, 0, 260, 0,
	260, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 4376, 0, 0, 0, 816, 0, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 831, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	837, 1302, 0, 0, 1302, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 832, 0, 0,
	0, 833, 852, 0, 851, 0, 262, 0, 834, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 262, 835, 0, 0, 0, 262, 844, 4427, 0,
	1300, 1300, 1302, 853, 0, 850, 0, 0, 0, 0,
	1358, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1302, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 4463, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 262, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 1300, 0, 1300, 4523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 0, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 1300, 0, 1300,
	1300, 1300, 0, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	1302, 0, 0, 0, 0, 260, 0, 0, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 260, 0,
	0, 0, 260, 0, 260, 0, 0, 0, 0, 0,
	0, 260, 260, 1358, 0, 0, 0, 0, 0, 0,
	0, 260, 262, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 1302, 262, 0,
	1302, 262, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 0, 260, 0, 1302,
	1302, 0, 0, 0, 1780, 1775, 0, 1301, 0, 0,
	260, 0, 1747, 0, 0, 0, 0, 0, 0, 1302,
	1358, 1793, 262, 260, 0, 0, 0, 0, 0, 0,
	0, 1302, 262, 0, 0, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	260, 1359, 0, 0, 0, 1359, 0, 1766, 0, 0,
	0, 0, 0, 1301, 0, 0, 1763, 0, 0, 0,
	0, 1302, 1302, 1302, 0, 0, 799, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 799, 0, 0, 0,
	0, 0, 0, 260, 1302, 1358, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 1769, 1770, 1771, 1772, 1301, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 1302, 0, 1302, 0, 1301,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 0,
	0, 0, 0, 260, 0, 260, 0, 262, 1784, 0,
	0, 1794, 0, 260, 0, 0, 0, 1774, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1301, 1790, 0, 1791, 0, 1300, 1300,
	0, 0, 0, 1761, 1762, 0, 0, 0, 0, 0,
	0, 260, 260, 260, 260, 0, 0, 1302, 0, 0,
	260, 1782, 260, 0, 1302, 262, 0, 0, 0, 1302,
	1302, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 1302, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 262, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 791, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 262, 1300, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 1215, 0, 1783,
	0, 0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760,
	0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754,
	0, 0, 0, 0, 0, 0, 262, 1908, 3116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 1301, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 260,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 260, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 799, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 1358, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	1745, 1358, 1777, 1778, 1779, 1787, 1788, 1789, 0, 0,
	0, 0, 0, 0, 0, 1301, 260, 1301, 0, 1301,
	0, 1780, 1775, 0, 1358, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 1301, 1301, 0, 1793, 1300,
	1300, 0, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	1301, 1301, 1301, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 1766, 260, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 1300, 0, 0, 0,
	1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1780, 1775, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 1300, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1300,
	0, 0, 0, 0, 0, 1746, 0, 0, 1769, 1770,
	1771, 1772, 0, 0, 0, 1766, 1358, 0, 1752, 0,
	0, 0, 0, 0, 1763, 0, 0, 1300, 0, 0,
	0, 1300, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 1784, 0, 0, 1794, 0,
	0, 1300, 0, 1300, 1774, 1776, 0, 1358, 0, 0,
	0, 0, 0, 0, 791, 0, 0, 0, 0, 0,
	0, 1790, 0, 1791, 0, 1300, 0, 0, 0, 0,
	1761, 1762, 0, 0, 0, 0, 0, 1300, 0, 1769,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 1782, 1752,
	0, 0, 1215, 1215, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	1300, 0, 0, 0, 0, 0, 1784, 0, 0, 1794,
	0, 0, 0, 0, 0, 1774, 1776, 0, 0, 0,
	0, 0, 1300, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 1790, 0, 1791, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 1781, 0, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	0, 0, 1358, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 1785, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 1301,
	1301, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 1768,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755,
	1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0,
	0, 260, 0, 0, 0, 3115, 1358, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	1301, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 3112, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1301, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1908, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 1300, 1300, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 1300,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 0, 1359, 0, 0,
	0, 0, 0, 0, 1358, 0, 1300, 0, 0, 1300,
	0, 0, 1359, 260, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 1300,
	1301, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 1908, 1908, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1301, 0, 0,
	0, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 1300, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 1745, 0, 1777, 1778,
	1779, 1787, 1788, 1789, 0, 0, 0, 0, 1301, 0,
	1301, 0, 0, 1358, 0, 0, 1908, 1780, 1775, 0,
	0, 0, 0, 0, 0, 1747, 0, 1359, 1908, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 1301, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 1358, 0, 1300, 0, 0, 0,
	1746, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	1766, 0, 1301, 0, 1301, 0, 0, 1358, 1359, 1763,
	0, 0, 0, 0, 0, 1908, 0, 260, 1908, 0,
	0, 0, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 0, 1300, 1300,
	1301, 1301, 0, 0, 1769, 1770, 1771, 1772, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 1301, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 1300, 0, 0, 0,
	0, 1784, 0, 0, 1794, 0, 0, 0, 0, 0,
	1774, 1776, 0, 1359, 260, 0, 1359, 0, 1744, 1745,
	0, 1777, 1778, 1779, 1787, 1788, 1789, 1790, 0, 1791,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 0,
	1780, 1775, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 1782, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 260, 0, 0, 0, 0,
	1359, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 1359, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1908, 0,
	1908, 0, 0, 1300, 0, 0, 0, 1769, 1770, 1771,
	1772, 0, 0, 1300, 1300, 0, 0, 1752, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 1794, 0, 0,
	0, 0, 0, 1774, 1776, 0, 0, 1359, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 1791, 0, 0, 0, 0, 0, 0, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 1758, 1759, 1765,
	1786, 1764, 1760, 1781, 1757, 1755, 1756, 1748, 1749, 1750,
	1751, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 3111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1301, 1301, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 3110, 0, 0, 0, 0, 0,
	0, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 1775, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 1359, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 1301,
	1301, 0, 0, 0, 0, 1763, 0, 0, 1359, 0,
	1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 1775, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 0, 1301, 0, 0,
	1301, 0, 0, 0, 0, 1746, 0, 0, 0, 1359,
	1769, 1770, 1771, 1772, 0, 1766, 0, 0, 0, 0,
	1752, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1301,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1301,
	1794, 0, 0, 0, 0, 0, 1774, 1776, 0, 0,
	0, 1359, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 1790, 0, 1791, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 0, 0, 0, 0, 1769,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 0, 1752,
	1782, 1301, 1301, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 1794,
	0, 0, 0, 0, 1359, 1774, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 1790, 0, 1791, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 0, 1301, 0, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 1781, 0, 1359, 0, 0,
	0, 0, 0, 0, 1301, 0, 0, 0, 0, 1301,
	1301, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 1301, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0,
	1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 2463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	0, 1356, 4418, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 1301, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1361, 277, 278, 1362, 1363,
	1364, 1301, 1365, 616, 1366, 1367, 1368, 1369, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 1370, 621, 289, 290, 291, 292,
	293, 294, 1371, 1372, 0, 295, 622, 623, 624, 1373,
	296, 297, 625, 1374, 1303, 1375, 298, 299, 300, 301,
	302, 303, 304, 0, 1376, 306, 307, 308, 305, 309,
	1377, 310, 0, 311, 312, 313, 314, 315, 316, 1378,
	317, 318, 319, 1160, 320, 321, 322, 1379, 1380, 1382,
	1381, 1383, 1384, 1385, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 1386, 332, 329, 330, 1387, 333, 331,
	334, 1388, 335, 336, 337, 1389, 1390, 338, 339, 340,
	1391, 341, 342, 1392, 343, 344, 345, 1393, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 1394, 267, 1395, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 1396,
	364, 365, 1397, 1398, 1161, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1399, 377,
	634, 1400, 635, 378, 1401, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 1163, 384, 385, 1402, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1403, 1162, 393, 639, 640, 1404, 641, 1405, 395, 396,
	1164, 642, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1406, 407, 409,
	408, 1407, 410, 643, 1167, 411, 412, 1168, 1408, 413,
	0, 0, 0, 414, 415, 418, 1409, 1410, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 1411, 269, 1171, 458, 459, 1412, 644,
	460, 645, 462, 463, 1413, 0, 464, 0, 1414, 1415,
	466, 467, 468, 1416, 1417, 469, 470, 646, 1172, 471,
	1173, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 1418, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 1419,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 1420, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1421, 520, 521, 522,
	1174, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1422,
	543, 544, 542, 545, 546, 547, 1423, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 1424, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	1425, 574, 575, 0, 571, 562, 1426, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 1427, 584, 657, 658,
	659, 660, 1428, 593, 1429, 585, 586, 587, 661, 588,
	662, 1430, 589, 590, 591, 592, 0, 594, 595, 1431,
	1432, 596, 597, 598, 600, 601, 599, 602, 1433, 603,
	1434, 0, 604, 605, 606, 663, 664, 665, 1435, 608,
	607, 609, 666, 1436, 610, 1437, 1438, 1439, 1440, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 2628, 0, 0,
	0, 0, 0, 0, 0, 2629, 270, 272, 271, 273,
	274, 275, 276, 1361, 277, 278, 1362, 1363, 1364, 0,
	1365, 616, 1366, 1367, 1368, 1369, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 1370, 621, 289, 290, 291, 292, 293, 294,
	1371, 1372, 0, 295, 622, 623, 624, 1373, 296, 297,
	625, 1374, 1303, 1375, 298, 299, 300, 301, 302, 303,
	304, 0, 1376, 306, 307, 308, 305, 309, 1377, 310,
	0, 311, 312, 313, 314, 315, 316, 1378, 317, 318,
	319, 1160, 320, 321, 322, 1379, 1380, 1382, 1381, 1383,
	1384, 1385, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 1386, 332, 329, 330, 1387, 333, 331, 334, 1388,
	335, 336, 337, 1389, 1390, 338, 339, 340, 1391, 341,
	342, 1392, 343, 344, 345, 1393, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 1394, 267, 1395, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 1396, 364, 365,
	1397, 1398, 1161, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1399, 377, 634, 1400,
	635, 378, 1401, 379, 380, 381, 382, 383, 636, 637,
	638, 461, 1163, 384, 385, 1402, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1403, 1162,
	393, 639, 640, 1404, 641, 1405, 395, 396, 1164, 642,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1406, 407, 409, 408, 1407,
	410, 643, 1167, 411, 412, 1168, 1408, 413, 0, 0,
	0, 414, 415, 418, 1409, 1410, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1411, 269, 1171, 458, 459, 1412, 644, 460, 645,
	462, 463, 1413, 0, 464, 0, 1414, 1415, 466, 467,
	468, 1416, 1417, 469, 470, 646, 1172, 471, 1173, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 1418, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 1419, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 1420, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 1421, 520, 521, 522, 1174, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 1422, 543, 544,
	542, 545, 546, 547, 1423, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 1424, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 1425, 574,
	575, 0, 571, 562, 1426, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 1427, 584, 657, 658, 659, 660,
	1428, 593, 1429, 585, 586, 587, 661, 588, 662, 1430,
	589, 590, 591, 592, 0, 594, 595, 1431, 1432, 596,
	597, 598, 600, 601, 599, 602, 1433, 603, 1434, 0,
	604, 605, 606, 663, 664, 665, 1435, 608, 607, 609,
	666, 1436, 610, 1437, 1438, 1439, 1440, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	3556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3558, 270, 272, 271, 273, 274, 275, 276, 1361,
	277, 278, 1362, 1363, 1364, 0, 1365, 616, 1366, 1367,
	1368, 1369, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 1370, 621,
	289, 290, 291, 292, 293, 294, 1371, 1372, 0, 295,
	622, 623, 624, 1373, 296, 297, 625, 1374, 1303, 1375,
	298, 299, 300, 301, 302, 303, 304, 0, 1376, 306,
	307, 308, 305, 309, 1377, 310, 0, 311, 312, 313,
	314, 315, 316, 1378, 317, 318, 319, 1160, 320, 321,
	322, 1379, 1380, 1382, 1381, 1383, 1384, 1385, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 1386, 332, 329,
	330, 1387, 333, 331, 334, 1388, 335, 336, 337, 1389,
	1390, 338, 339, 340, 1391, 341, 342, 1392, 343, 344,
	345, 1393, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 1394, 267,
	1395, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 1396, 364, 365, 1397, 1398, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1399, 377, 634, 1400, 635, 378, 1401, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 1163, 384,
	385, 1402, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1403, 1162, 393, 639, 640, 1404,
	641, 1405, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1406, 407, 409, 408, 1407, 410, 643, 1167, 411,
	412, 1168, 1408, 413, 0, 0, 0, 414, 415, 418,
	1409, 1410, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1411, 269, 1171,
	458, 459, 1412, 644, 460, 645, 462, 463, 1413, 0,
	464, 0, 1414, 1415, 466, 467, 468, 1416, 1417, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 1418, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 1419, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 1420,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1421, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1422, 543, 544, 542, 545, 546, 547,
	1423, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 1424, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 1425, 574, 575, 0, 571, 562,
	1426, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	1427, 584, 657, 658, 659, 660, 1428, 593, 1429, 585,
	586, 587, 661, 588, 662, 1430, 589, 590, 591, 592,
	0, 594, 595, 1431, 1432, 596, 597, 598, 600, 601,
	599, 602, 1433, 603, 1434, 0, 604, 605, 606, 663,
	664, 665, 1435, 608, 607, 609, 666, 1436, 610, 1437,
	1438, 1439, 1440, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3932, 270, 272, 271, 273, 274, 275, 276, 1361,
	277, 278, 1362, 1363, 1364, 0, 1365, 616, 1366, 1367,
	1368, 1369, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 1370, 621,
	289, 290, 291, 292, 293, 294, 1371, 1372, 0, 295,
	622, 623, 624, 1373, 296, 297, 625, 1374, 1303, 1375,
	298, 299, 300, 301, 302, 303, 304, 0, 1376, 306,
	307, 308, 305, 309, 1377, 310, 0, 311, 312, 313,
	314, 315, 316, 1378, 317, 318, 319, 1160, 320, 321,
	322, 1379, 1380, 1382, 1381, 1383, 1384, 1385, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 1386, 332, 329,
	330, 1387, 333, 331, 334, 1388, 335, 336, 337, 1389,
	1390, 338, 339, 340, 1391, 341, 342, 1392, 343, 344,
	345, 1393, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 1394, 267,
	1395, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 1396, 364, 365, 1397, 1398, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1399, 377, 634, 1400, 635, 378, 1401, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 1163, 384,
	385, 1402, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1403, 1162, 393, 639, 640, 1404,
	641, 1405, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1406, 407, 409, 408, 1407, 410, 643, 1167, 411,
	412, 1168, 1408, 413, 0, 0, 0, 414, 415, 418,
	1409, 1410, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1411, 269, 1171,
	458, 459, 1412, 644, 460, 645, 462, 463, 1413, 0,
	464, 0, 1414, 1415, 466, 467, 468, 1416, 1417, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 1418, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 1419, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 1420,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1421, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1422, 543, 544, 542, 545, 546, 547,
	1423, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 1424, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 1425, 574, 575, 0, 571, 562,
	1426, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	1427, 584, 657, 658, 659, 660, 1428, 593, 1429, 585,
	586, 587, 661, 588, 662, 1430, 589, 590, 591, 592,
	0, 594, 595, 1431, 1432, 596, 597, 598, 600, 601,
	599, 602, 1433, 603, 1434, 0, 604, 605, 606, 663,
	664, 665, 1435, 608, 607, 609, 666, 1436, 610, 1437,
	1438, 1439, 1440, 611, 612, 667, 613, 614, 615, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4126, 270, 272, 271,
	273, 274, 275, 276, 1361, 277, 278, 1362, 1363, 1364,
	0, 1365, 616, 1366, 1367, 1368, 1369, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 1370, 621, 289, 290, 291, 292, 293,
	294, 1371, 1372, 0, 295, 622, 623, 624, 1373, 296,
	297, 625, 1374, 1303, 1375, 298, 299, 300, 301, 302,
	303, 304, 0, 1376, 306, 307, 308, 305, 309, 1377,
	310, 0, 311, 312, 313, 314, 315, 316, 1378, 317,
	318, 319, 1160, 320, 321, 322, 1379, 1380, 1382, 1381,
	1383, 1384, 1385, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 1386, 332, 329, 330, 1387, 333, 331, 334,
	1388, 335, 336, 337, 1389, 1390, 338, 339, 340, 1391,
	341, 342, 1392, 343, 344, 345, 1393, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 1394, 267, 1395, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 1396, 364,
	365, 1397, 1398, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1399, 377, 634,
	1400, 635, 378, 1401, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 1402, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1403,
	1162, 393, 639, 640, 1404, 641, 1405, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1406, 407, 409, 408,
	1407, 410, 643, 1167, 411, 412, 1168, 1408, 413, 0,
	0, 0, 414, 415, 418, 1409, 1410, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1411, 269, 1171, 458, 459, 1412, 644, 460,
	645, 462, 463, 1413, 0, 464, 0, 1414, 1415, 466,
	467, 468, 1416, 1417, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 1418, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 1419, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 1420, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 1421, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 1422, 543,
	544, 542, 545, 546, 547, 1423, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 1424, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 1425,
	574, 575, 0, 571, 562, 1426, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 1427, 584, 657, 658, 659,
	660, 1428, 593, 1429, 585, 586, 587, 661, 588, 662,
	1430, 589, 590, 591, 592, 0, 594, 595, 1431, 1432,
	596, 597, 598, 600, 601, 599, 602, 1433, 603, 1434,
	0, 604, 605, 606, 663, 664, 665, 1435, 608, 607,
	609, 666, 1436, 610, 1437, 1438, 1439, 1440, 611, 612,
	667, 613, 614, 615, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4003, 270, 272, 271, 273, 274, 275, 276, 1361,
	277, 278, 1362, 1363, 1364, 0, 1365, 616, 1366, 1367,
	1368, 1369, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 1370, 621,
	289, 290, 291, 292, 293, 294, 1371, 1372, 0, 295,
	622, 623, 624, 1373, 296, 297, 625, 1374, 1303, 1375,
	298, 299, 300, 301, 302, 303, 304, 0, 1376, 306,
	307, 308, 305, 309, 1377, 310, 0, 311, 312, 313,
	314, 315, 316, 1378, 317, 318, 319, 1160, 320, 321,
	322, 1379, 1380, 1382, 1381, 1383, 1384, 1385, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 1386, 332, 329,
	330, 1387, 333, 331, 334, 1388, 335, 336, 337, 1389,
	1390, 338, 339, 340, 1391, 341, 342, 1392, 343, 344,
	345, 1393, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 1394, 267,
	1395, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 1396, 364, 365, 1397, 1398, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1399, 377, 634, 1400, 635, 378, 1401, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 1163, 384,
	385, 1402, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1403, 1162, 393, 639, 640, 1404,
	641, 1405, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1406, 407, 409, 408, 1407, 410, 643, 1167, 411,
	412, 1168, 1408, 413, 0, 0, 0, 414, 415, 418,
	1409, 1410, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1411, 269, 1171,
	458, 459, 1412, 644, 460, 645, 462, 463, 1413, 0,
	464, 0, 1414, 1415, 466, 467, 468, 1416, 1417, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 1418, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 1419, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 1420,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1421, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1422, 543, 544, 542, 545, 546, 547,
	1423, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 1424, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 1425, 574, 575, 0, 571, 562,
	1426, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	1427, 584, 657, 658, 659, 660, 1428, 593, 1429, 585,
	586, 587, 661, 588, 662, 1430, 589, 590, 591, 592,
	0, 594, 595, 1431, 1432, 596, 597, 598, 600, 601,
	599, 602, 1433, 603, 1434, 0, 604, 605, 606, 663,
	664, 665, 1435, 608, 607, 609, 666, 1436, 610, 1437,
	1438, 1439, 1440, 611, 612, 667, 613, 614, 615, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3862, 270, 272, 271,
	273, 274, 275, 276, 1361, 277, 278, 1362, 1363, 1364,
	0, 1365, 616, 1366, 1367, 1368, 1369, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 1370, 621, 289, 290, 291, 292, 293,
	294, 1371, 1372, 0, 295, 622, 623, 624, 1373, 296,
	297, 625, 1374, 1303, 1375, 298, 299, 300, 301, 302,
	303, 304, 0, 1376, 306, 307, 308, 305, 309, 1377,
	310, 0, 311, 312, 313, 314, 315, 316, 1378, 317,
	318, 319, 1160, 320, 321, 322, 1379, 1380, 1382, 1381,
	1383, 1384, 1385, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 1386, 332, 329, 330, 1387, 333, 331, 334,
	1388, 335, 336, 337, 1389, 1390, 338, 339, 340, 1391,
	341, 342, 1392, 343, 344, 345, 1393, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 1394, 267, 1395, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 1396, 364,
	365, 1397, 1398, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1399, 377, 634,
	1400, 635, 378, 1401, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 1402, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1403,
	1162, 393, 639, 640, 1404, 641, 1405, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1406, 407, 409, 408,
	1407, 410, 643, 1167, 411, 412, 1168, 1408, 413, 0,
	0, 0, 414, 415, 418, 1409, 1410, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1411, 269, 1171, 458, 459, 1412, 644, 460,
	645, 462, 463, 1413, 0, 464, 0, 1414, 1415, 466,
	467, 468, 1416, 1417, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 1418, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 1419, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 1420, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 1421, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 1422, 543,
	544, 542, 545, 546, 547, 1423, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 1424, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 1425,
	574, 575, 0, 571, 562, 1426, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 1427, 584, 657, 658, 659,
	660, 1428, 593, 1429, 585, 586, 587, 661, 588, 662,
	1430, 589, 590, 591, 592, 0, 594, 595, 1431, 1432,
	596, 597, 598, 600, 601, 599, 602, 1433, 603, 1434,
	0, 604, 605, 606, 663, 664, 665, 1435, 608, 607,
	609, 666, 1436, 610, 1437, 1438, 1439, 1440, 611, 612,
	667, 613, 614, 615, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3574, 270, 272, 271, 273, 274, 275, 276, 1361,
	277, 278, 1362, 1363, 1364, 0, 1365, 616, 1366, 1367,
	1368, 1369, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 1370, 621,
	289, 290, 291, 292, 293, 294, 1371, 1372, 0, 295,
	622, 623, 624, 1373, 296, 297, 625, 1374, 1303, 1375,
	298, 299, 300, 301, 302, 303, 304, 0, 1376, 306,
	307, 308, 305, 309, 1377, 310, 0, 311, 312, 313,
	314, 315, 316, 1378, 317, 318, 319, 1160, 320, 321,
	322, 1379, 1380, 1382, 1381, 1383, 1384, 1385, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 1386, 332, 329,
	330, 1387, 333, 331, 334, 1388, 335, 336, 337, 1389,
	1390, 338, 339, 340, 1391, 341, 342, 1392, 343, 344,
	345, 1393, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 1394, 267,
	1395, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 1396, 364, 365, 1397, 1398, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1399, 377, 634, 1400, 635, 378, 1401, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 1163, 384,
	385, 1402, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1403, 1162, 393, 639, 640, 1404,
	641, 1405, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1406, 407, 409, 408, 1407, 410, 643, 1167, 411,
	412, 1168, 1408, 413, 0, 0, 0, 414, 415, 418,
	1409, 1410, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1411, 269, 1171,
	458, 459, 1412, 644, 460, 645, 462, 463, 1413, 0,
	464, 0, 1414, 1415, 466, 467, 468, 1416, 1417, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 1418, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 1419, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 1420,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1421, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1422, 543, 544, 542, 545, 546, 547,
	1423, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 1424, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 1425, 574, 575, 0, 571, 562,
	1426, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	1427, 584, 657, 658, 659, 660, 1428, 593, 1429, 585,
	586, 587, 661, 588, 662, 1430, 589, 590, 591, 592,
	0, 594, 595, 1431, 1432, 596, 597, 598, 600, 601,
	599, 602, 1433, 603, 1434, 0, 604, 605, 606, 663,
	664, 665, 1435, 608, 607, 609, 666, 1436, 610, 1437,
	1438, 1439, 1440, 611, 612, 667, 613, 614, 615, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3405, 270, 272, 271,
	273, 274, 275, 276, 1361, 277, 278, 1362, 1363, 1364,
	0, 1365, 616, 1366, 1367, 1368, 1369, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 1370, 621, 289, 290, 291, 292, 293,
	294, 1371, 1372, 0, 295, 622, 623, 624, 1373, 296,
	297, 625, 1374, 1303, 1375, 298, 299, 300, 301, 302,
	303, 304, 0, 1376, 306, 307, 308, 305, 309, 1377,
	310, 0, 311, 312, 313, 314, 315, 316, 1378, 317,
	318, 319, 1160, 320, 321, 322, 1379, 1380, 1382, 1381,
	1383, 1384, 1385, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 1386, 332, 329, 330, 1387, 333, 331, 334,
	1388, 335, 336, 337, 1389, 1390, 338, 339, 340, 1391,
	341, 342, 1392, 343, 344, 345, 1393, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 1394, 267, 1395, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 1396, 364,
	365, 1397, 1398, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1399, 377, 634,
	1400, 635, 378, 1401, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 1402, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1403,
	1162, 393, 639, 640, 1404, 641, 1405, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1406, 407, 409, 408,
	1407, 410, 643, 1167, 411, 412, 1168, 1408, 413, 0,
	0, 0, 414, 415, 418, 1409, 1410, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1411, 269, 1171, 458, 459, 1412, 644, 460,
	645, 462, 463, 1413, 0, 464, 0, 1414, 1415, 466,
	467, 468, 1416, 1417, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 1418, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 1419, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 1420, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 1421, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 1422, 543,
	544, 542, 545, 546, 547, 1423, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 1424, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 1425,
	574, 575, 0, 571, 562, 1426, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 1427, 584, 657, 658, 659,
	660, 1428, 593, 1429, 585, 586, 587, 661, 588, 662,
	1430, 589, 590, 591, 592, 0, 594, 595, 1431, 1432,
	596, 597, 598, 600, 601, 599, 602, 1433, 603, 1434,
	0, 604, 605, 606, 663, 664, 665, 1435, 608, 607,
	609, 666, 1436, 610, 1437, 1438, 1439, 1440, 611, 612,
	667, 613, 614, 615, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2486, 270, 272, 271, 273, 274, 275, 276, 1361,
	277, 278, 1362, 1363, 1364, 0, 1365, 616, 1366, 1367,
	1368, 1369, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 1370, 621,
	289, 290, 291, 292, 293, 294, 1371, 1372, 0, 295,
	622, 623, 624, 1373, 296, 297, 625, 1374, 1303, 1375,
	298, 299, 300, 301, 302, 303, 304, 0, 1376, 306,
	307, 308, 305, 309, 1377, 310, 0, 311, 312, 313,
	314, 315, 316, 1378, 317, 318, 319, 1160, 320, 321,
	322, 1379, 1380, 1382, 1381, 1383, 1384, 1385, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 1386, 332, 329,
	330, 1387, 333, 331, 334, 1388, 335, 336, 337, 1389,
	1390, 338, 339, 340, 1391, 341, 342, 1392, 343, 344,
	345, 1393, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 1394, 267,
	1395, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 1396, 364, 365, 1397, 1398, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1399, 377, 634, 1400, 635, 378, 1401, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 1163, 384,
	385, 1402, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1403, 1162, 393, 639, 640, 1404,
	641, 1405, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1406, 407, 409, 408, 1407, 410, 643, 1167, 411,
	412, 1168, 1408, 413, 0, 0, 0, 414, 415, 418,
	1409, 1410, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1411, 269, 1171,
	458, 459, 1412, 644, 460, 645, 462, 463, 1413, 0,
	464, 0, 1414, 1415, 466, 467, 468, 1416, 1417, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 1418, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 1419, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 1420,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1421, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1422, 543, 544, 542, 545, 546, 547,
	1423, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 1424, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 1425, 574, 575, 0, 571, 562,
	1426, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	1427, 584, 657, 658, 659, 660, 1428, 593, 1429, 585,
	586, 587, 661, 588, 662, 1430, 589, 590, 591, 592,
	0, 594, 595, 1431, 1432, 596, 597, 598, 600, 601,
	599, 602, 1433, 603, 1434, 0, 604, 605, 606, 663,
	664, 665, 1435, 608, 607, 609, 666, 1436, 610, 1437,
	1438, 1439, 1440, 611, 612, 667, 613, 614, 615, 1452,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2173, 0, 270, 272,
	271, 273, 274, 275, 276, 1361, 277, 278, 1362, 1363,
	1364, 0, 1365, 616, 1366, 1367, 1368, 1369, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 1370, 621, 289, 290, 291, 292,
	293, 294, 1371, 1372, 0, 295, 622, 623, 624, 1373,
	296, 297, 625, 1374, 1303, 1375, 298, 299, 300, 301,
	302, 303, 304, 0, 1376, 306, 307, 308, 305, 309,
	1377, 310, 0, 311, 312, 313, 314, 315, 316, 1378,
	317, 318, 319, 1160, 320, 321, 322, 1379, 1380, 1382,
	1381, 1383, 1384, 1385, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 1386, 332, 329, 330, 1387, 333, 331,
	334, 1388, 335, 336, 337, 1389, 1390, 338, 339, 340,
	1391, 341, 342, 1392, 343, 344, 345, 1393, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 1394, 267, 1395, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 1396,
	364, 365, 1397, 1398, 1161, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1399, 377,
	634, 1400, 635, 378, 1401, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 1163, 384, 385, 1402, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1403, 1162, 393, 639, 640, 1404, 641, 1405, 395, 396,
	1164, 642, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1406, 407, 409,
	408, 1407, 410, 643, 1167, 411, 412, 1168, 1408, 413,
	0, 0, 0, 414, 415, 418, 1409, 1410, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 1411, 269, 1171, 458, 459, 1412, 644,
	460, 645, 462, 463, 1413, 0, 464, 0, 1414, 1415,
	466, 467, 468, 1416, 1417, 469, 470, 646, 1172, 471,
	1173, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 1418, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 1419,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 1420, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1421, 520, 521, 522,
	1174, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1422,
	543, 544, 542, 545, 546, 547, 1423, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 1424, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	1425, 574, 575, 0, 571, 562, 1426, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 1427, 584, 657, 658,
	659, 660, 1428, 593, 1429, 585, 586, 587, 661, 588,
	662, 1430, 589, 590, 591, 592, 0, 594, 595, 1431,
	1432, 596, 597, 598, 600, 601, 599, 602, 1433, 603,
	1434, 0, 604, 605, 606, 663, 664, 665, 1435, 608,
	607, 609, 666, 1436, 610, 1437, 1438, 1439, 1440, 611,
	612, 667, 613, 614, 615, 1353, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 1361, 277, 278, 1362, 1363, 1364, 0, 1365, 616,
	1366, 1367, 1368, 1369, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	1370, 621, 289, 290, 291, 292, 293, 294, 1371, 1372,
	0, 295, 622, 623, 624, 1373, 296, 297, 625, 1374,
	1303, 1375, 298, 299, 300, 301, 302, 303, 304, 0,
	1376, 306, 307, 308, 305, 309, 1377, 310, 0, 311,
	312, 313, 314, 315, 316, 1378, 317, 318, 319, 1160,
	320, 321, 322, 1379, 1380, 1382, 1381, 1383, 1384, 1385,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 1386,
	332, 329, 330, 1387, 333, 331, 334, 1388, 335, 336,
	337, 1389, 1390, 338, 339, 340, 1391, 341, 342, 1392,
	343, 344, 345, 1393, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	1394, 267, 1395, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 1396, 364, 365, 1397, 1398,
	1161, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1399, 377, 634, 1400, 635, 378,
	1401, 379, 380, 381, 382, 383, 636, 637, 638, 461,
	1163, 384, 385, 1402, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1403, 1162, 393, 639,
	640, 1404, 641, 1405, 395, 396, 1164, 642, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1406, 407, 409, 408, 1407, 410, 643,
	1167, 411, 412, 1168, 1408, 413, 0, 0, 0, 414,
	415, 418, 1409, 1410, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 1411,
	269, 1171, 458, 459, 1412, 644, 460, 645, 462, 463,
	1413, 0, 464, 0, 1414, 1415, 466, 467, 468, 1416,
	1417, 469, 470, 646, 1172, 471, 1173, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 1418,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 1419, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 1420, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 1421, 520, 521, 522, 1174, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 1422, 543, 544, 542, 545,
	546, 547, 1423, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 1424,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 1425, 574, 575, 0,
	571, 562, 1426, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 1427, 584, 657, 658, 659, 660, 1428, 593,
	1429, 585, 586, 587, 661, 588, 662, 1430, 589, 590,
	591, 592, 0, 594, 595, 1431, 1432, 596, 597, 598,
	600, 601, 599, 602, 1433, 603, 1434, 0, 604, 605,
	606, 663, 664, 665, 1435, 608, 607, 609, 666, 1436,
	610, 1437, 1438, 1439, 1440, 611, 612, 667, 613, 614,
	615, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1361, 277, 278, 1362, 1363,
	1364, 0, 1365, 616, 1366, 1367, 1368, 1369, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 1370, 621, 289, 290, 291, 292,
	293, 294, 1371, 1372, 0, 295, 622, 623, 624, 1373,
	296, 297, 625, 1374, 1303, 1375, 298, 299, 300, 301,
	302, 303, 304, 0, 1376, 306, 307, 308, 305, 309,
	1377, 310, 0, 311, 312, 313, 314, 315, 316, 1378,
	317, 318, 319, 1160, 320, 321, 322, 1379, 1380, 1382,
	1381, 1383, 1384, 1385, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 1386, 332, 329, 330, 1387, 333, 331,
	334, 1388, 335, 336, 337, 1389, 1390, 338, 339, 340,
	1391, 341, 342, 1392, 343, 344, 345, 1393, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 1394, 267, 1395, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 1396,
	364, 365, 1397, 1398, 1161, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1399, 377,
	634, 1400, 635, 378, 1401, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 1163, 384, 385, 1402, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1403, 1162, 393, 639, 640, 1404, 641, 1405, 395, 396,
	1164, 642, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1406, 407, 409,
	408, 1407, 410, 643, 1167, 411, 412, 1168, 1408, 413,
	0, 0, 0, 414, 415, 418, 1409, 1410, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 1411, 269, 1171, 458, 459, 1412, 644,
	460, 645, 462, 463, 1413, 0, 464, 0, 1414, 1415,
	466, 467, 468, 1416, 1417, 469, 470, 646, 1172, 471,
	1173, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 1418, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 1419,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 1420, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1421, 520, 521, 522,
	1174, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1422,
	543, 544, 542, 545, 546, 547, 1423, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 1424, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	1425, 574, 575, 0, 571, 562, 1426, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 1427, 584, 657, 658,
	659, 660, 1428, 593, 1429, 585, 586, 587, 661, 588,
	662, 1430, 589, 590, 591, 592, 0, 594, 595, 1431,
	1432, 596, 597, 598, 600, 601, 599, 602, 1433, 603,
	1434, 0, 604, 605, 606, 663, 664, 665, 1435, 608,
	607, 609, 666, 1436, 610, 1437, 1438, 1439, 1440, 611,
	612, 667, 613, 614, 615, 2461, 0, 1095, 1067, 1068,
	1069, 1065, 1066, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 2458, 277, 278, 0, 0, 0, 0, 0, 1119,
	1083, 0, 0, 0, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 1132, 0, 287, 1139, 288, 1138,
	0, 1149, 289, 290, 291, 292, 293, 294, 1085, 1118,
	1052, 295, 1179, 1180, 624, 0, 296, 297, 1125, 0,
	1106, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114,
	323, 324, 325, 326, 327, 1142, 328, 1136, 1135, 1056,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 2459, 0, 338, 1127, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1062, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1150, 1151, 359,
	1074, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1134, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 1147, 1148, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1157, 0, 1084, 378,
	0, 379, 380, 381, 382, 383, 1120, 1121, 1124, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1162, 393, 1129,
	1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1158,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 1113, 1112, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 1053,
	269, 1171, 458, 459, 1075, 1123, 460, 1137, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1172, 471, 1173, 1152, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	1153, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1133, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	526, 1063, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1116, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 1131, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1178, 565,
	566, 567, 568, 1154, 572, 573, 0, 574, 575, 1051,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 1143, 1144, 1145, 1146, 0, 593,
	0, 585, 586, 587, 1155, 588, 1156, 1073, 589, 590,
	591, 592, 0, 594, 595, 0, 1057, 596, 597, 598,
	600, 601, 599, 602, 1117, 603, 0, 0, 604, 605,
	606, 663, 1140, 1177, 2457, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1054, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 0, 0, 1048, 1049, 2460, 0,
	0, 0, 0, 0, 0, 1079, 2456, 0, 1041, 1077,
	1095, 1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1119, 1083, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 1132, 0, 287,
	1139, 288, 1138, 0, 1149, 289, 290, 291, 292, 293,
	294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296,
	297, 1125, 0, 1106, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115,
	1111, 1110, 1114, 323, 324, 325, 326, 327, 1142, 328,
	1136, 1135, 1056, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1127, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1062,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1150, 1151, 359, 1074, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1134, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 1147, 1148, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1157,
	0, 1084, 378, 0, 379, 380, 381, 382, 383, 1120,
	1121, 1124, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1162, 393, 1129, 1130, 0, 1090, 0, 395, 396, 1164,
	1122, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1158, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 1113, 1112, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1053, 269, 1171, 458, 459, 1075, 1123, 460,
	1137, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	1152, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 1153, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1133,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 1063, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 229, 543,
	544, 542, 545, 546, 547, 1116, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 1131,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1178, 565, 566, 567, 568, 1154, 572, 573, 0,
	574, 575, 1051, 571, 562, 231, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 1143, 1144, 1145,
	1146, 0, 593, 0, 585, 586, 587, 1155, 588, 1156,
	1073, 589, 590, 591, 592, 0, 594, 595, 0, 1057,
	596, 597, 598, 600, 601, 599, 602, 1117, 603, 0,
	0, 604, 605, 606, 1575, 1140, 1177, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 223, 611, 612,
	667, 613, 614, 615, 1054, 0, 224, 0, 0, 0,
	0, 0, 1050, 0, 0, 0, 0, 0, 0, 1048,
	1049, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 1819, 1817,
	0, 0, 1077, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1119, 1083, 0, 0, 0, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 1132, 0,
	287, 1139, 288, 1138, 0, 1149, 289, 290, 291, 292,
	293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0,
	296, 297, 1125, 0, 1106, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1160, 320, 321, 322, 1109, 1107, 1108,
	1115, 1111, 1110, 1114, 323, 324, 325, 326, 327, 1142,
	328, 1136, 1135, 1056, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1127, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1062, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1150, 1151, 359, 1074, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1134, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1161, 366, 367, 1147, 1148, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1157, 0, 1084, 378, 0, 379, 380, 381, 382, 383,
	1120, 1121, 1124, 461, 1163, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1162, 393, 1129, 1130, 0, 1090, 0, 395, 396,
	1164, 1122, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1158, 1167, 411, 412, 1168, 0, 413,
	0, 0, 0, 414, 415, 418, 1113, 1112, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 1053, 269, 1171, 458, 459, 1075, 1123,
	460, 1137, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1172, 471,
	1173, 1152, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 1153, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1133, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1174, 523, 524, 525, 526, 1063, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 229,
	543, 544, 542, 545, 546, 547, 1116, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	1131, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1178, 565, 566, 567, 568, 1154, 572, 573,
	0, 574, 575, 1051, 571, 562, 231, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 1143, 1144,
	1145, 1146, 0, 593, 0, 585, 586, 587, 1155, 588,
	1156, 1073, 589, 590, 591, 592, 0, 594, 595, 0,
	1057, 596, 597, 598, 600, 601, 599, 602, 1117, 603,
	0, 0, 604, 605, 606, 1575, 1140, 1177, 0, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 223, 611,
	612, 667, 613, 614, 615, 1054, 0, 224, 0, 0,
	0, 0, 0, 1050, 0, 0, 0, 0, 0, 0,
	1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 1819,
	3068, 0, 0, 1077, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 1083, 0, 0, 0, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 1132,
	0, 287, 1139, 288, 1138, 0, 1149, 289, 290, 291,
	292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	1142, 328, 1136, 1135, 1056, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1127,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1062, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 1074, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1134, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 1147, 1148,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 1084, 378, 0, 379, 380, 381, 382,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 1129, 1130, 0, 1090, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 1053, 269, 1171, 458, 459, 1075,
	1123, 460, 1137, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1133, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 1063, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	229, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 1131, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1178, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 1051, 571, 562, 231, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 1143,
	1144, 1145, 1146, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 1073, 589, 590, 591, 592, 0, 594, 595,
	0, 1057, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 1575, 1140, 1177, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 223,
	611, 612, 667, 613, 614, 615, 1054, 0, 224, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066, 1078,
	1819, 1817, 0, 0, 1077, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1119, 1083, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	1132, 0, 287, 1139, 288, 1138, 2589, 1149, 289, 290,
	291, 292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180,
	624, 0, 296, 297, 1125, 0, 1106, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 1109,
	1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326,
	327, 1142, 328, 1136, 1135, 1056, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1127, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1062, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1150, 1151, 359, 1074, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1134, 0, 0, 0,
	363, 0, 364, 365, 0, 2594, 1161, 366, 367, 1147,
	1148, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1157, 0, 1084, 378, 0, 379, 380, 381,
	382, 383, 1120, 1121, 1124, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1162, 393, 1129, 1130, 0, 1090, 0,
	395, 396, 1164, 1122, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 2590, 410, 1158, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 1113, 1112,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 1053, 269, 1171, 458, 459,
	1075, 1123, 460, 1137, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 1152, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 1153, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1133, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 1063, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1116, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 1131, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1178, 565, 566, 567, 568, 1154,
	572, 573, 0, 574, 575, 1051, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	1143, 1144, 1145, 1146, 0, 593, 2591, 585, 586, 587,
	1155, 588, 1156, 1073, 589, 590, 591, 592, 0, 594,
	595, 0, 1057, 596, 597, 598, 600, 601, 599, 602,
	1117, 603, 0, 0, 604, 605, 606, 663, 1140, 1177,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1054, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1048, 1049, 0, 0, 0, 0, 0, 0,
	0, 1079, 0, 0, 2506, 1077, 1095, 1067, 1068, 1069,
	1065, 1066, 1078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1119, 1083,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 1132, 0, 287, 1139, 288, 1138, 0,
	1149, 289, 290, 291, 292, 293, 294, 1085, 1118, 1052,
	295, 1179, 1180, 624, 0, 296, 297, 1125, 0, 1106,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323,
	324, 325, 326, 327, 1142, 328, 1136, 1135, 1056, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1127, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1062, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1150, 1151, 359, 1074,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1134,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 1147, 1148, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1157, 0, 1084, 378, 0,
	379, 380, 381, 382, 383, 1120, 1121, 1124, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1162, 393, 1129, 1130,
	0, 1090, 0, 395, 396, 1164, 1122, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1158, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 1113, 1112, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 1053, 269,
	1171, 458, 459, 1075, 1123, 460, 1137, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 1152, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 1153,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1133, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	1063, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1116, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 1131, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1178, 565, 566,
	567, 568, 1154, 572, 573, 0, 574, 575, 1051, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 1143, 1144, 1145, 1146, 0, 593, 0,
	585, 586, 587, 1155, 588, 1156, 1073, 589, 590, 591,
	592, 0, 594, 595, 0, 1057, 596, 597, 598, 600,
	601, 599, 602, 1117, 603, 0, 0, 604, 605, 606,
	663, 1140, 1177, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1054, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 0, 0, 1048, 1049, 0, 0, 0,
	0, 0, 0, 0, 1079, 2504, 0, 2503, 1077, 1095,
	1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1119, 1083, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 1132, 0, 287, 1139,
	288, 1138, 0, 1149, 289, 290, 291, 292, 293, 294,
	1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 1142, 328, 1136,
	1135, 1056, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1127, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1062, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 1074, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1134, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 1147, 1148, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	1084, 378, 0, 379, 380, 381, 382, 383, 1120, 1121,
	1124, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1133, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 1063, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 1131, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1178, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 1051, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 1143, 1144, 1145, 1146,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 1073,
	589, 590, 591, 592, 0, 594, 595, 0, 1057, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 1140, 1177, 0, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1054, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 1048, 1049,
	0, 0, 0, 0, 0, 0, 0, 1079, 2501, 0,
	2500, 1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 1083, 0, 0, 0, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 1132,
	0, 287, 1139, 288, 1138, 0, 1149, 289, 290, 291,
	292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	1142, 328, 1136, 1135, 1056, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1127,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1062, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 1074, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1134, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 1147, 1148,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 1084, 378, 0, 379, 380, 381, 382,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 1129, 1130, 0, 1090, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 1053, 269, 1171, 458, 459, 1075,
	1123, 460, 1137, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1133, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 1063, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 1131, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1178, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 1051, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 1143,
	1144, 1145, 1146, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 1073, 589, 590, 591, 592, 0, 594, 595,
	0, 1057, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 663, 1140, 1177, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1054, 0, 0, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 1048, 1049, 0, 0, 0, 0, 0, 0, 0,
	1079, 2498, 0, 2497, 1077, 1095, 1067, 1068, 1069, 1065,
	1066, 1078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1119, 1083, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 1132, 0, 287, 1139, 288, 1138, 0, 1149,
	289, 290, 291, 292, 293, 294, 1085, 1118, 1052, 295,
	1179, 1180, 624, 0, 296, 297, 1125, 0, 1106, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324,
	325, 326, 327, 1142, 328, 1136, 1135, 1056, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1127, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1062, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1150, 1151, 359, 1074, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1134, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 1147, 1148, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1157, 0, 1084, 378, 0, 379,
	380, 381, 382, 383, 1120, 1121, 1124, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1162, 393, 1129, 1130, 0,
	1090, 0, 395, 396, 1164, 1122, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1158, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	1113, 1112, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1053, 269, 1171,
	458, 459, 1075, 1123, 460, 1137, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 1152, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 1153, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1133, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 1063,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1116, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 1131, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1178, 565, 566, 567,
	568, 1154, 572, 573, 0, 574, 575, 1051, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 1143, 1144, 1145, 1146, 0, 593, 0, 585,
	586, 587, 1155, 588, 1156, 1073, 589, 590, 591, 592,
	0, 594, 595, 0, 1057, 596, 597, 598, 600, 601,
	599, 602, 1117, 603, 0, 0, 604, 605, 606, 663,
	1140, 1177, 0, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1054,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 1048, 1049, 0, 0, 0, 0,
	0, 0, 0, 1079, 2495, 0, 1668, 1077, 1095, 1067,
	1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1119, 1083, 0, 0, 0, 279, 280, 1159, 281, 282,
	283, 284, 285, 286, 617, 1132, 0, 287, 1139, 288,
	1138, 0, 1149, 289, 290, 291, 292, 293, 294, 1085,
	1118, 1052, 295, 1179, 1180, 624, 0, 296, 297, 1125,
	0, 1106, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110,
	1114, 323, 324, 325, 326, 327, 1142, 328, 1136, 1135,
	1056, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1127, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1062, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1150, 1151,
	359, 1074, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1134, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1161, 366, 367, 1147, 1148, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1157, 0, 1084,
	378, 0, 379, 380, 381, 382, 383, 1120, 1121, 1124,
	461, 1163, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1162, 393,
	1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165,
	397, 398, 399, 1166, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1158, 1167, 411, 412, 1168, 0, 413, 0, 0, 0,
	414, 415, 418, 1113, 1112, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1169, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1170, 457, 447,
	1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1172, 471, 1173, 1152, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 1153, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1133, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1174, 523, 524,
	525, 526, 1063, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1116, 548, 549, 532, 533, 550, 551,
	1175, 552, 553, 554, 555, 556, 557, 1131, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1178,
	565, 566, 567, 568, 1154, 572, 573, 0, 574, 575,
	1051, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 1143, 1144, 1145, 1146, 0,
	593, 0, 585, 586, 587, 1155, 588, 1156, 1073, 589,
	590, 591, 592, 0, 594, 595, 0, 1057, 596, 597,
	598, 600, 601, 599, 602, 1117, 603, 0, 0, 604,
	605, 606, 663, 1140, 1177, 0, 608, 607, 609, 666,
	0, 610, 1667, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1054, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 0, 0, 0, 1048, 1049, 0,
	0, 0, 0, 0, 0, 0, 1079, 0, 0, 1044,
	1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1119, 1083, 0, 0, 0, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 1132, 0,
	287, 1139, 288, 1138, 0, 1149, 289, 290, 291, 292,
	293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0,
	296, 297, 1125, 0, 1106, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1160, 320, 321, 322, 1109, 1107, 1108,
	1115, 1111, 1110, 1114, 323, 324, 325, 326, 327, 1142,
	328, 1136, 1135, 1056, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1127, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1062, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1150, 1151, 359, 1074, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1134, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1161, 366, 367, 1147, 1148, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1157, 0, 1084, 378, 0, 379, 380, 381, 382, 383,
	1120, 1121, 1124, 461, 1163, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1162, 393, 1129, 1130, 0, 1090, 0, 395, 396,
	1164, 1122, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1158, 1167, 411, 412, 1168, 0, 413,
	0, 0, 0, 414, 415, 418, 1113, 1112, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 1053, 269, 1171, 458, 459, 1075, 1123,
	460, 1137, 462, 463, 0, 0, 464, 0, 1058, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1172, 471,
	1173, 1152, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 1153, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1133, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1174, 523, 524, 525, 526, 1063, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1116, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	1131, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1178, 565, 566, 567, 568, 1154, 572, 573,
	0, 574, 575, 1051, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 1143, 1144,
	1145, 1146, 0, 593, 0, 585, 586, 587, 1155, 588,
	1156, 1073, 589, 590, 591, 592, 0, 594, 595, 0,
	1057, 596, 597, 598, 600, 601, 599, 602, 1117, 603,
	0, 0, 604, 605, 606, 663, 1140, 1177, 0, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1054, 0, 0, 0, 0,
	0, 0, 0, 1050, 0, 0, 0, 0, 0, 0,
	1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 1079,
	0, 0, 0, 1077, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 1083, 0, 0, 0, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 1132,
	0, 287, 1139, 288, 1138, 0, 1149, 289, 290, 291,
	292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 4439, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	1142, 328, 1136, 1135, 1056, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1127,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1062, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 1074, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1134, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 1147, 1148,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 1084, 378, 0, 379, 380, 381, 382,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 1129, 1130, 0, 1090, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 1053, 269, 1171, 458, 459, 1075,
	1123, 460, 1137, 462, 463, 0, 0, 464, 0, 1058,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1133, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 1063, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 1131, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1178, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 1051, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 1143,
	1144, 1145, 1146, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 1073, 589, 590, 591, 592, 0, 594, 595,
	0, 1057, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 663, 1140, 1177, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1054, 0, 0, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066, 1078,
	1079, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1119, 1083, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	1132, 0, 287, 1139, 288, 1138, 0, 1149, 289, 290,
	291, 292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180,
	624, 0, 296, 297, 1125, 0, 1106, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 1109,
	1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326,
	327, 1142, 328, 1136, 1135, 1056, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1127, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1062, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1150, 1151, 359, 1074, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1134, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1161, 366, 367, 1147,
	1148, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1157, 0, 1084, 378, 0, 379, 380, 381,
	382, 383, 1120, 1121, 1124, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 2375, 390, 391,
	392, 394, 0, 1162, 393, 1129, 1130, 0, 1090, 0,
	395, 396, 1164, 1122, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1158, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 1113, 1112,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 1053, 269, 1171, 458, 459,
	1075, 1123, 460, 1137, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 1152, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 1153, 490, 651, 491,
	492, 2374, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1133, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 1063, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1116, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 1131, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1178, 565, 566, 567, 568, 1154,
	572, 573, 0, 574, 575, 1051, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	1143, 1144, 1145, 1146, 0, 593, 0, 585, 586, 587,
	1155, 588, 1156, 1073, 589, 590, 591, 592, 0, 594,
	595, 0, 1057, 596, 597, 598, 600, 601, 599, 602,
	1117, 603, 0, 0, 604, 605, 606, 663, 1140, 1177,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1054, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066,
	1078, 1079, 0, 0, 0, 1077, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1119, 1083, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 1132, 0, 287, 1139, 288, 1138, 0, 1149, 289,
	290, 291, 292, 293, 294, 1085, 1118, 1052, 295, 1179,
	1180, 624, 0, 296, 297, 1125, 0, 1106, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325,
	326, 327, 1142, 328, 1136, 1135, 1056, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1127, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1062, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1150, 1151, 359, 1074, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1134, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	1147, 1148, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1157, 0, 1084, 378, 0, 379, 380,
	381, 382, 383, 1120, 1121, 1124, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1162, 393, 1129, 1130, 0, 1090,
	0, 395, 396, 1164, 1122, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1158, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 1113,
	1112, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 1053, 269, 1171, 458,
	459, 1075, 1123, 460, 1137, 462, 463, 0, 0, 464,
	0, 1058, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 1152, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 1153, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1133, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 1063, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1116,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 1131, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1178, 565, 566, 567, 568,
	1154, 572, 573, 0, 574, 575, 1051, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 1143, 1144, 1145, 1146, 0, 593, 0, 585, 586,
	587, 1155, 588, 1156, 1073, 589, 590, 591, 592, 0,
	594, 595, 0, 1057, 596, 597, 598, 600, 601, 599,
	602, 1117, 603, 0, 0, 604, 605, 606, 663, 1140,
	1177, 0, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1054, 0,
	0, 0, 0, 0, 0, 0, 1050, 0, 0, 0,
	0, 0, 0, 1048, 1049, 1095, 1067, 1068, 1069, 1065,
	1066, 1078, 1079, 0, 0, 0, 1077, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1119, 1083, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 1132, 0, 287, 1139, 288, 1138, 0, 1149,
	289, 290, 291, 292, 293, 294, 1085, 1118, 1052, 295,
	1179, 1180, 624, 0, 296, 297, 1125, 0, 1106, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 4200, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324,
	325, 326, 327, 1142, 328, 1136, 1135, 1056, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1127, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1062, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1150, 1151, 359, 1074, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1134, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 1147, 1148, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1157, 0, 1084, 378, 0, 379,
	380, 381, 382, 383, 1120, 1121, 1124, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1162, 393, 1129, 1130, 0,
	1090, 0, 395, 396, 1164, 1122, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1158, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	1113, 1112, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1053, 269, 1171,
	458, 459, 1075, 1123, 460, 1137, 462, 463, 0, 0,
	464, 0, 1058, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 1152, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 1153, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1133, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 1063,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1116, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 1131, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1178, 565, 566, 567,
	568, 1154, 572, 573, 0, 574, 575, 1051, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 1143, 1144, 1145, 1146, 0, 593, 0, 585,
	586, 587, 1155, 588, 1156, 1073, 589, 590, 591, 592,
	0, 594, 595, 0, 1057, 596, 597, 598, 600, 601,
	599, 602, 1117, 603, 0, 0, 604, 605, 606, 663,
	1140, 1177, 0, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1054,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 1048, 1049, 1095, 1067, 1068, 1069,
	1065, 1066, 1078, 1079, 0, 0, 0, 1077, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1119, 1083,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 1132, 0, 287, 1139, 288, 1138, 0,
	1149, 289, 290, 291, 292, 293, 294, 1085, 1118, 1052,
	295, 1179, 1180, 624, 0, 296, 297, 1125, 0, 1106,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323,
	324, 325, 326, 327, 1142, 328, 1136, 1135, 1056, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1127, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1062, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1150, 1151, 359, 1074,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1134,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 1147, 1148, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1157, 0, 1084, 378, 0,
	379, 380, 381, 382, 383, 1120, 1121, 1124, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1162, 393, 1129, 1130,
	0, 1090, 0, 395, 396, 1164, 1122, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1158, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 1113, 1112, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 1053, 3824,
	1171, 458, 459, 1075, 1123, 460, 1137, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 1152, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 1153,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1133, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	1063, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1116, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 1131, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1178, 565, 566,
	567, 568, 1154, 572, 573, 0, 574, 575, 1051, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 1143, 1144, 1145, 1146, 0, 593, 0,
	585, 586, 587, 1155, 588, 1156, 1073, 589, 590, 591,
	592, 0, 594, 595, 0, 1057, 596, 597, 598, 600,
	601, 599, 602, 1117, 603, 0, 0, 604, 605, 606,
	663, 1140, 1177, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1054, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 0, 0, 1048, 1049, 1887, 0, 0,
	0, 0, 0, 0, 1079, 0, 0, 0, 1077, 1095,
	1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1119, 1083, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 1132, 0, 287, 1139,
	288, 1138, 0, 1149, 289, 290, 291, 292, 293, 294,
	1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 1142, 328, 1136,
	1135, 1056, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1127, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1062, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 1074, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1134, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 1147, 1148, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	1084, 378, 0, 379, 380, 381, 382, 383, 1120, 1121,
	1124, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1133, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 1063, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 1131, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1178, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 1051, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 1143, 1144, 1145, 1146,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 1073,
	589, 590, 591, 592, 0, 594, 595, 0, 1057, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 1140, 1177, 3552, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1054, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 1048, 1049,
	1095, 1067, 1068, 1069, 1065, 1066, 1078, 1079, 0, 0,
	0, 1077, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1119, 1083, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 1132, 0, 287,
	1139, 288, 1138, 0, 1149, 289, 290, 291, 292, 293,
	294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296,
	297, 1125, 0, 1106, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115,
	1111, 1110, 1114, 323, 324, 325, 326, 327, 1142, 328,
	1136, 1135, 1056, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1127, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1062,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1150, 1151, 359, 1074, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1134, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 1147, 1148, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1157,
	0, 1084, 378, 0, 379, 380, 381, 382, 383, 1120,
	1121, 1124, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1162, 393, 1129, 1130, 0, 1090, 0, 395, 396, 1164,
	1122, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1158, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 1113, 1112, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1053, 269, 1171, 458, 459, 1075, 1123, 460,
	1137, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	1152, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 1153, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1133,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 1063, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1116, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 1131,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1178, 565, 566, 567, 568, 1154, 572, 573, 0,
	574, 575, 1051, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 1143, 1144, 1145,
	1146, 0, 593, 0, 585, 586, 587, 1155, 588, 1156,
	1073, 589, 590, 591, 592, 0, 594, 595, 0, 1057,
	596, 597, 598, 600, 601, 599, 602, 1117, 603, 0,
	0, 604, 605, 606, 663, 1140, 1177, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1054, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 0, 0, 0, 0, 1048,
	1049, 1887, 0, 0, 0, 0, 0, 0, 1079, 0,
	0, 0, 1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1119, 1083, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	1132, 0, 287, 1139, 288, 1138, 0, 1149, 289, 290,
	291, 292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180,
	624, 0, 296, 297, 1125, 0, 1106, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 1109,
	1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326,
	327, 1142, 328, 1136, 1135, 1056, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1127, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1062, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1150, 1151, 359, 1074, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1134, 0, 0, 0,
	363, 0, 364, 365, 0, 2594, 1161, 366, 367, 1147,
	1148, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1157, 0, 1084, 378, 0, 379, 380, 381,
	382, 383, 1120, 1121, 1124, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1162, 393, 1129, 1130, 0, 1090, 0,
	395, 396, 1164, 1122, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1158, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 1113, 1112,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 1053, 269, 1171, 458, 459,
	1075, 1123, 460, 1137, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 1152, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 1153, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1133, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 1063, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1116, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 1131, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1178, 565, 566, 567, 568, 1154,
	572, 573, 0, 574, 575, 1051, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	1143, 1144, 1145, 1146, 0, 593, 0, 585, 586, 587,
	1155, 588, 1156, 1073, 589, 590, 591, 592, 0, 594,
	595, 0, 1057, 596, 597, 598, 600, 601, 599, 602,
	1117, 603, 0, 0, 604, 605, 606, 663, 1140, 1177,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1054, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066,
	1078, 1079, 0, 0, 0, 1077, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1119, 1083, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 1132, 0, 287, 1139, 288, 1138, 0, 1149, 289,
	290, 291, 292, 293, 294, 1085, 1118, 1052, 295, 1179,
	1180, 624, 0, 296, 297, 1125, 0, 1106, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325,
	326, 327, 1142, 328, 1136, 1135, 1056, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1127, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1062, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1150, 1151, 359, 1074, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1134, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	1147, 1148, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1157, 0, 1084, 378, 0, 379, 380,
	381, 382, 383, 1120, 1121, 1124, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1162, 393, 1129, 1130, 0, 1090,
	0, 395, 396, 1164, 1122, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1158, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 1113,
	1112, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 1053, 269, 1171, 458,
	459, 1075, 1123, 460, 1137, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 1152, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 1153, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1133, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 1063, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1116,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 1131, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1178, 565, 566, 567, 568,
	1154, 572, 573, 0, 574, 575, 1051, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 1143, 1144, 1145, 1146, 0, 593, 0, 585, 586,
	587, 1155, 588, 1156, 1073, 589, 590, 591, 592, 0,
	594, 595, 0, 1057, 596, 597, 598, 600, 601, 599,
	602, 1117, 603, 0, 0, 604, 605, 606, 663, 1140,
	1177, 0, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1054, 0,
	0, 0, 0, 0, 0, 0, 1050, 0, 0, 0,
	0, 0, 0, 1048, 1049, 0, 0, 0, 0, 0,
	0, 0, 1079, 1817, 0, 2599, 1077, 1095, 1067, 1068,
	1069, 1065, 1066, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1119,
	1083, 0, 0, 0, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 1132, 0, 287, 1139, 288, 1138,
	0, 1149, 289, 290, 291, 292, 293, 294, 1085, 1118,
	1052, 295, 1179, 1180, 624, 0, 296, 297, 1125, 0,
	1106, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114,
	323, 324, 325, 326, 327, 1142, 328, 1136, 1135, 1056,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1127, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1062, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1150, 1151, 359,
	1074, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1134, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 1147, 1148, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1157, 0, 1084, 378,
	0, 379, 380, 381, 382, 383, 1120, 1121, 1124, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1162, 393, 1129,
	1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1158,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 1113, 1112, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 1053,
	269, 1171, 458, 459, 1075, 1123, 460, 1137, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1172, 471, 1173, 1152, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	1153, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1133, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	526, 1063, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1116, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 1131, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1178, 565,
	566, 567, 568, 1154, 572, 573, 0, 574, 575, 1051,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 1143, 1144, 1145, 1146, 0, 593,
	0, 585, 586, 587, 1155, 588, 1156, 1073, 589, 590,
	591, 592, 0, 594, 595, 0, 1057, 596, 597, 598,
	600, 601, 599, 602, 1117, 603, 0, 0, 604, 605,
	606, 663, 1140, 1177, 0, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1054, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 0, 0, 1048, 1049, 0, 0,
	0, 0, 0, 0, 0, 1079, 0, 0, 2597, 1077,
	1095, 1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1119, 1083, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 1132, 0, 287,
	1139, 288, 1138, 0, 1149, 289, 290, 291, 292, 293,
	294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296,
	297, 1125, 0, 1106, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115,
	1111, 1110, 1114, 323, 324, 325, 326, 327, 1142, 328,
	1136, 1135, 1056, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1127, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1062,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1150, 1151, 359, 1074, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1134, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 1147, 1148, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1157,
	0, 1084, 378, 0, 379, 380, 381, 382, 383, 1120,
	1121, 1124, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1162, 393, 1129, 1130, 0, 1090, 0, 395, 396, 1164,
	1122, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1158, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 1113, 1112, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1053, 269, 1171, 458, 459, 1075, 1123, 460,
	1137, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	1152, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 1153, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1133,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 1063, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1116, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 1131,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1178, 565, 566, 567, 568, 1154, 572, 573, 0,
	574, 575, 1051, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 1143, 1144, 1145,
	1146, 0, 593, 0, 585, 586, 587, 1155, 588, 1156,
	1073, 589, 590, 591, 592, 0, 594, 595, 0, 1057,
	596, 597, 598, 600, 601, 599, 602, 1117, 603, 0,
	0, 604, 605, 606, 663, 1140, 1177, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1054, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 0, 0, 0, 0, 1048,
	1049, 0, 0, 0, 0, 0, 0, 0, 1079, 0,
	0, 2585, 1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1119, 1083, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	1132, 0, 287, 1139, 288, 1138, 0, 1149, 289, 290,
	291, 292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180,
	624, 0, 296, 297, 1125, 0, 1106, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 1109,
	1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326,
	327, 1142, 328, 1136, 1135, 1056, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1127, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1062, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1150, 1151, 359, 1074, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1134, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1161, 366, 367, 1147,
	1148, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1157, 0, 1084, 378, 0, 379, 380, 381,
	382, 383, 1120, 1121, 1124, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1162, 393, 1129, 1130, 0, 1090, 0,
	395, 396, 1164, 1122, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1158, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 1113, 1112,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 1053, 269, 1171, 458, 459,
	1075, 1123, 460, 1137, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 1152, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 1153, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1133, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 1063, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1116, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 1131, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1178, 565, 566, 567, 568, 1154,
	572, 573, 0, 574, 575, 1051, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	1143, 1144, 1145, 1146, 0, 593, 0, 585, 586, 587,
	1155, 588, 1156, 1073, 589, 590, 591, 592, 0, 594,
	595, 0, 1057, 596, 597, 598, 600, 601, 599, 602,
	1117, 603, 0, 0, 604, 605, 606, 663, 1140, 1177,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1054, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1048, 1049, 0, 0, 0, 0, 0, 0,
	0, 1079, 0, 0, 2574, 1077, 1095, 1067, 1068, 1069,
	1065, 1066, 1078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1119, 1083,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 1132, 0, 287, 1139, 288, 1138, 0,
	1149, 289, 290, 291, 292, 293, 294, 1085, 1118, 1052,
	295, 1179, 1180, 624, 0, 296, 297, 1125, 0, 1106,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323,
	324, 325, 326, 327, 1142, 328, 1136, 1135, 1056, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1127, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1062, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1150, 1151, 359, 1074,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1134,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 1147, 1148, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1157, 0, 1084, 378, 0,
	379, 380, 381, 382, 383, 1120, 1121, 1124, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1162, 393, 1129, 1130,
	0, 1090, 0, 395, 396, 1164, 1122, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1158, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 1113, 1112, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 1053, 269,
	1171, 458, 459, 1075, 1123, 460, 1137, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 1152, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 1153,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1133, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	1063, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1116, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 1131, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1178, 565, 566,
	567, 568, 1154, 572, 573, 0, 574, 575, 1051, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 1143, 1144, 1145, 1146, 0, 593, 0,
	585, 586, 587, 1155, 588, 1156, 1073, 589, 590, 591,
	592, 0, 594, 595, 0, 1057, 596, 597, 598, 600,
	601, 599, 602, 1117, 603, 0, 0, 604, 605, 606,
	663, 1140, 1177, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1054, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 0, 0, 1048, 1049, 0, 0, 0,
	0, 0, 0, 0, 1079, 0, 0, 2572, 1077, 2563,
	2570, 1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1119, 1083, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 1132, 0, 287, 1139,
	288, 1138, 0, 1149, 289, 290, 291, 292, 293, 294,
	1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 1142, 2566, 1136,
	1135, 1056, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1127, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1062, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 1074, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1134, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 1147, 1148, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	1084, 378, 0, 379, 380, 381, 2567, 383, 1120, 1121,
	1124, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 2568, 428, 2565,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1133, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 1063, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 2569, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 1131, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1178, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 1051, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 1143, 1144, 1145, 1146,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 1073,
	589, 590, 591, 592, 0, 594, 595, 0, 1057, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 1140, 1177, 0, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 2564, 615, 1054, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 1048, 1049,
	0, 0, 0, 0, 0, 0, 0, 1079, 0, 0,
	2560, 1077, 2563, 2570, 1068, 1069, 1065, 1066, 1078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 1083, 0, 0, 0, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 1132,
	0, 287, 1139, 288, 1138, 0, 1149, 289, 290, 291,
	292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	1142, 2566, 1136, 1135, 1056, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1127,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1062, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 1074, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1134, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 1147, 1148,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 1084, 378, 0, 379, 380, 381, 2567,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 1129, 1130, 0, 1090, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	2568, 428, 2565, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 1053, 269, 1171, 458, 459, 1075,
	1123, 460, 1137, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1133, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 1063, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 2569,
	0, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 1131, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1178, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 1051, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 1143,
	1144, 1145, 1146, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 1073, 589, 590, 591, 592, 0, 594, 595,
	0, 1057, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 663, 1140, 1177, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 2564, 615, 1054, 0, 0, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066, 1078,
	1079, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1119, 1083, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	1132, 0, 287, 1139, 288, 1138, 0, 1149, 289, 290,
	291, 292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180,
	624, 0, 296, 297, 1125, 0, 1106, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 1109,
	1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326,
	327, 1142, 328, 1136, 1135, 1056, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1127, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1062, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1150, 1151, 359, 1074, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1134, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1161, 366, 367, 1147,
	1148, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1157, 0, 1084, 378, 0, 379, 380, 381,
	382, 383, 1120, 1121, 1124, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1162, 393, 1129, 1130, 0, 1090, 0,
	395, 396, 1164, 1122, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1158, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 1113, 1112,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 1053, 269, 1171, 458, 459,
	1075, 1123, 460, 1137, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 1152, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 1153, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1133, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 1063, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1116, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 1131, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1178, 565, 566, 567, 568, 1154,
	572, 573, 0, 574, 575, 1051, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	1143, 1144, 1145, 1146, 0, 593, 0, 585, 586, 587,
	1155, 588, 1156, 1073, 589, 590, 591, 592, 0, 594,
	595, 0, 1057, 596, 597, 598, 600, 601, 599, 602,
	1117, 603, 0, 0, 604, 605, 606, 663, 1140, 1177,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1054, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1048, 1049, 0, 0, 0, 0, 0, 1825,
	0, 1079, 0, 0, 0, 1077, 1095, 1067, 1068, 1069,
	1065, 1066, 1078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	2354, 277, 278, 0, 0, 0, 0, 0, 1119, 1083,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 1132, 0, 287, 1139, 288, 1138, 0,
	1149, 289, 290, 291, 292, 293, 294, 1085, 1118, 1052,
	295, 1179, 1180, 624, 0, 296, 297, 1125, 0, 1106,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323,
	324, 325, 326, 327, 1142, 328, 1136, 1135, 1056, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1127, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1062, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1150, 1151, 359, 1074,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1134,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 1147, 1148, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1157, 0, 1084, 378, 0,
	379, 380, 381, 382, 383, 1120, 1121, 1124, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1162, 393, 1129, 1130,
	0, 1090, 0, 395, 396, 1164, 1122, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1158, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 1113, 1112, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 1053, 269,
	1171, 458, 459, 1075, 1123, 460, 1137, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 1152, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 1153,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1133, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	1063, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1116, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 1131, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1178, 565, 566,
	567, 568, 1154, 572, 573, 0, 574, 575, 1051, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 1143, 1144, 1145, 1146, 0, 593, 0,
	585, 586, 587, 1155, 588, 1156, 1073, 589, 590, 591,
	592, 0, 594, 595, 0, 1057, 596, 597, 598, 600,
	601, 599, 602, 1117, 603, 0, 0, 604, 605, 606,
	663, 1140, 1177, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1054, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 0, 0, 1048, 1049, 0, 0, 0,
	0, 0, 0, 0, 1079, 0, 0, 1673, 1077, 1095,
	1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1119, 1083, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 1132, 0, 287, 1139,
	288, 1138, 0, 1149, 289, 290, 291, 292, 293, 294,
	1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 1142, 328, 1136,
	1135, 1056, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1127, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1062, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 1074, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1134, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 1147, 1148, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	1084, 378, 0, 379, 380, 381, 382, 383, 1120, 1121,
	1124, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1133, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 1063, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 1131, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1178, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 1051, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 1143, 1144, 1145, 1146,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 1073,
	589, 590, 591, 592, 0, 594, 595, 0, 1057, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 1140, 1177, 0, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1054, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 1048, 1049,
	0, 0, 0, 0, 0, 0, 0, 1079, 0, 0,
	1605, 1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 1083, 0, 0, 0, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 1132,
	0, 287, 1139, 288, 1138, 0, 1149, 289, 290, 291,
	292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	1142, 328, 1136, 1135, 1056, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1127,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1062, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 1074, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1134, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 1147, 1148,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 1084, 378, 0, 379, 380, 381, 382,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 1129, 1130, 0, 1090, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 1053, 269, 1171, 458, 459, 1075,
	1123, 460, 1137, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1133, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 1063, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 1131, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1178, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 1051, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 1143,
	1144, 1145, 1146, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 1073, 589, 590, 591, 592, 0, 594, 595,
	0, 1057, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 663, 1140, 1177, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1054, 0, 0, 0,
	0, 0, 0, 0, 1050, 0, 0, 0, 0, 0,
	0, 1048, 1049, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 1600, 1077, 1095, 1067, 1068, 1069, 1065,
	1066, 1078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1119, 1083, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 1132, 0, 287, 1139, 288, 1138, 0, 1149,
	289, 290, 291, 292, 293, 294, 1085, 1118, 1052, 295,
	1179, 1180, 624, 0, 296, 297, 1125, 0, 1106, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324,
	325, 326, 327, 1142, 328, 1136, 1135, 1056, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1127, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1062, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1150, 1151, 359, 1074, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1134, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 1147, 1148, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1157, 0, 1084, 378, 0, 379,
	380, 381, 382, 383, 1120, 1121, 1124, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1162, 393, 1129, 1130, 0,
	1090, 0, 395, 396, 1164, 1122, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1158, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	1113, 1112, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1053, 269, 1171,
	458, 459, 1075, 1123, 460, 1137, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 1152, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 1153, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1133, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 1063,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1116, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 1131, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1178, 565, 566, 567,
	568, 1154, 572, 573, 0, 574, 575, 1051, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 1143, 1144, 1145, 1146, 0, 593, 0, 585,
	586, 587, 1155, 588, 1156, 1073, 589, 590, 591, 592,
	0, 594, 595, 0, 1057, 596, 597, 598, 600, 601,
	599, 602, 1117, 603, 0, 0, 604, 605, 606, 663,
	1140, 1177, 0, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1054,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 1048, 1049, 0, 0, 0, 0,
	0, 0, 0, 1079, 0, 0, 1591, 1077, 1095, 1067,
	1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1119, 1083, 0, 0, 0, 279, 280, 1159, 281, 282,
	283, 284, 285, 286, 617, 1132, 0, 287, 1139, 288,
	1138, 0, 1149, 289, 290, 291, 292, 293, 294, 1085,
	1118, 1052, 295, 1179, 1180, 624, 0, 296, 297, 1125,
	0, 1106, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110,
	1114, 323, 324, 325, 326, 327, 1142, 328, 1136, 1135,
	1056, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1127, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1062, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1150, 1151,
	359, 1074, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1134, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1161, 366, 367, 1147, 1148, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1157, 0, 1084,
	378, 0, 379, 380, 381, 382, 383, 1120, 1121, 1124,
	461, 1163, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1162, 393,
	1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165,
	397, 398, 399, 1166, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1158, 1167, 411, 412, 1168, 0, 413, 0, 0, 0,
	414, 415, 418, 1113, 1112, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1169, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1170, 457, 447,
	1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1172, 471, 1173, 1152, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 1153, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1133, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1174, 523, 524,
	525, 526, 1063, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1116, 548, 549, 532, 533, 550, 551,
	1175, 552, 553, 554, 555, 556, 557, 1131, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1178,
	565, 566, 567, 568, 1154, 572, 573, 0, 574, 575,
	1051, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 1143, 1144, 1145, 1146, 0,
	593, 0, 585, 586, 587, 1155, 588, 1156, 1073, 589,
	590, 591, 592, 0, 594, 595, 0, 1057, 596, 597,
	598, 600, 601, 599, 602, 1117, 603, 0, 0, 604,
	605, 606, 663, 1140, 1177, 0, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1054, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 0, 0, 0, 1048, 1049, 0,
	0, 0, 0, 0, 0, 0, 1079, 0, 0, 1586,
	1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1119, 1083, 0, 0, 0, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 1132, 0,
	287, 1139, 288, 1138, 0, 1149, 289, 290, 291, 292,
	293, 294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0,
	296, 297, 1125, 0, 1106, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1160, 320, 321, 322, 1109, 1107, 1108,
	1115, 1111, 1110, 1114, 323, 324, 325, 326, 327, 1142,
	328, 1136, 1135, 1056, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1127, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1062, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1150, 1151, 359, 1074, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1134, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1161, 366, 367, 1147, 1148, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1157, 0, 1084, 378, 0, 379, 380, 381, 382, 383,
	1120, 1121, 1124, 461, 1163, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1162, 393, 1129, 1130, 0, 1090, 0, 395, 396,
	1164, 1122, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1158, 1167, 411, 412, 1168, 0, 413,
	0, 0, 0, 414, 415, 418, 1113, 1112, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 1053, 269, 1171, 458, 459, 1075, 1123,
	460, 1137, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1172, 471,
	1173, 1152, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 1153, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1133, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1174, 523, 524, 525, 526, 1063, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1116, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	1131, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1178, 565, 566, 567, 568, 1154, 572, 573,
	0, 574, 575, 1051, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 1143, 1144,
	1145, 1146, 0, 593, 0, 585, 586, 587, 1155, 588,
	1156, 1073, 589, 590, 591, 592, 0, 594, 595, 0,
	1057, 596, 597, 598, 600, 601, 599, 602, 1117, 603,
	0, 0, 604, 605, 606, 663, 1140, 1177, 0, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1054, 0, 0, 0, 0,
	0, 0, 0, 1050, 0, 0, 0, 0, 0, 0,
	1048, 1049, 0, 0, 0, 0, 0, 0, 0, 1079,
	0, 0, 1498, 1077, 1095, 1067, 1068, 1069, 1065, 1066,
	1078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1119, 1083, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 1132, 0, 287, 1139, 288, 1138, 0, 1149, 289,
	290, 291, 292, 293, 294, 1085, 1118, 1052, 295, 1179,
	1180, 624, 0, 296, 297, 1125, 0, 1106, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325,
	326, 327, 1142, 328, 1136, 1135, 1056, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1127, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1062, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1150, 1151, 359, 1074, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1134, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	1147, 1148, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1157, 0, 1084, 378, 0, 379, 380,
	381, 382, 383, 1497, 1121, 1124, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1162, 393, 1129, 1130, 0, 1090,
	0, 395, 396, 1164, 1122, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1158, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 1113,
	1112, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 1053, 269, 1171, 458,
	459, 1075, 1123, 460, 1137, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 1152, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 1153, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1133, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 1063, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1116,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 1131, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1178, 565, 566, 567, 568,
	1154, 572, 573, 0, 574, 575, 1051, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 1143, 1144, 1145, 1146, 0, 593, 0, 585, 586,
	587, 1155, 588, 1156, 1073, 589, 590, 591, 592, 0,
	594, 595, 0, 1057, 596, 597, 598, 600, 601, 599,
	602, 1117, 603, 0, 0, 604, 605, 606, 663, 1140,
	1177, 0, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1054, 0,
	0, 0, 0, 0, 0, 0, 1050, 0, 0, 0,
	0, 0, 0, 1048, 1049, 0, 0, 0, 0, 0,
	0, 0, 1079, 0, 0, 1492, 1077, 1095, 1067, 1068,
	1069, 1065, 1066, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1119,
	1083, 0, 0, 0, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 1132, 0, 287, 1139, 288, 1138,
	0, 1149, 289, 290, 291, 292, 293, 294, 1085, 1118,
	1052, 295, 1179, 1180, 624, 0, 296, 297, 1125, 0,
	1106, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114,
	323, 324, 325, 326, 327, 1142, 328, 1136, 1135, 1056,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1127, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1062, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1150, 1151, 359,
	1074, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1134, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 1147, 1148, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1157, 0, 1084, 378,
	0, 379, 380, 381, 382, 383, 1491, 1121, 1124, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1162, 393, 1129,
	1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1158,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 1113, 1112, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 1053,
	269, 1171, 458, 459, 1075, 1123, 460, 1137, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1172, 471, 1173, 1152, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	1153, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1133, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	526, 1063, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1116, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 1131, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1178, 565,
	566, 567, 568, 1154, 572, 573, 0, 574, 575, 1051,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 1143, 1144, 1145, 1146, 0, 593,
	0, 585, 586, 587, 1155, 588, 1156, 1073, 589, 590,
	591, 592, 0, 594, 595, 0, 1057, 596, 597, 598,
	600, 601, 599, 602, 1117, 603, 0, 0, 604, 605,
	606, 663, 1140, 1177, 0, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1054, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 0, 0, 1048, 1049, 0, 0,
	0, 0, 0, 0, 0, 1079, 0, 0, 1485, 1077,
	1095, 1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1119, 1083, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 1132, 0, 287,
	1139, 288, 1138, 0, 1149, 289, 290, 291, 292, 293,
	294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296,
	297, 1125, 0, 1106, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115,
	1111, 1110, 1114, 323, 324, 325, 326, 327, 1142, 328,
	1136, 1135, 1056, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1127, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1062,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1150, 1151, 359, 1074, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1134, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 1147, 1148, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1157,
	0, 1084, 378, 0, 379, 380, 381, 382, 383, 1120,
	1121, 1124, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1162, 393, 1129, 1130, 0, 1090, 0, 395, 396, 1164,
	1122, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1158, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 1113, 1112, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1053, 269, 1171, 458, 459, 1075, 1123, 460,
	1137, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	1152, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 1153, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1133,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 1063, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1116, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 1131,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1178, 565, 566, 567, 568, 1154, 572, 573, 0,
	574, 575, 1051, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 1143, 1144, 1145,
	1146, 0, 593, 0, 585, 586, 587, 1155, 588, 1156,
	1073, 589, 590, 591, 592, 0, 594, 595, 0, 1057,
	596, 597, 598, 600, 601, 599, 602, 1117, 603, 0,
	0, 604, 605, 606, 663, 1140, 1177, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1054, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 0, 0, 0, 0, 1048,
	1049, 0, 0, 0, 0, 0, 0, 0, 1079, 0,
	0, 1305, 1077, 1095, 1067, 1068, 1069, 1065, 1066, 1078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1119, 1083, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	1132, 0, 287, 1139, 288, 1138, 0, 1149, 289, 290,
	291, 292, 293, 294, 1085, 1118, 1052, 295, 1179, 1180,
	624, 0, 296, 297, 1125, 0, 1106, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 1109,
	1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326,
	327, 1142, 328, 1136, 1135, 1056, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1127, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1062, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1150, 1151, 359, 1074, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1134, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1161, 366, 367, 1147,
	1148, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1157, 0, 1084, 378, 0, 379, 380, 381,
	382, 383, 1120, 1121, 1124, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1162, 393, 1129, 1130, 0, 1090, 0,
	395, 396, 1164, 1122, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1158, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 1113, 1112,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 1053, 269, 1171, 458, 459,
	1075, 1123, 460, 1137, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 1152, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 1153, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1133, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 1063, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1116, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 1131, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1178, 565, 566, 567, 568, 1154,
	572, 573, 0, 574, 575, 1051, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	1143, 1144, 1145, 1146, 0, 593, 0, 585, 586, 587,
	1155, 588, 1156, 1073, 589, 590, 591, 592, 0, 594,
	595, 0, 1057, 596, 597, 598, 600, 601, 599, 602,
	1117, 603, 0, 0, 604, 605, 606, 663, 1140, 1177,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1054, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1048, 1049, 1095, 1067, 1068, 1069, 1065, 1066,
	1078, 1079, 0, 0, 0, 1077, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1119, 1083, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 1132, 0, 287, 1139, 288, 1138, 0, 1149, 289,
	290, 291, 292, 293, 294, 1085, 1118, 1052, 295, 1179,
	1180, 624, 0, 296, 297, 1125, 0, 1106, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324, 325,
	326, 327, 1142, 328, 1136, 1135, 1056, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1127, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1062, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1150, 1151, 359, 1074, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1134, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	1147, 1148, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1157, 0, 1084, 378, 0, 379, 380,
	381, 382, 383, 1120, 1121, 1124, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1162, 393, 1129, 1130, 0, 1090,
	0, 395, 396, 1164, 1122, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1158, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 1113,
	1112, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 1053, 269, 1171, 458,
	459, 1075, 1123, 460, 1137, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 1152, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 1153, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1133, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 1063, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1116,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 1131, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1178, 565, 566, 567, 568,
	1154, 572, 573, 0, 574, 575, 1051, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 1143, 1144, 1145, 1146, 0, 593, 0, 585, 586,
	587, 1155, 588, 1156, 1073, 589, 590, 591, 592, 0,
	594, 595, 0, 1057, 596, 597, 598, 600, 601, 599,
	602, 1117, 603, 0, 0, 604, 605, 606, 663, 1140,
	1177, 0, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1054, 0,
	0, 0, 0, 0, 0, 0, 1050, 0, 0, 0,
	0, 0, 0, 1048, 1049, 1095, 1067, 1068, 1069, 1065,
	1066, 1078, 1079, 0, 0, 0, 1077, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1119, 1083, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 1132, 0, 287, 1139, 288, 1138, 0, 1149,
	289, 290, 291, 292, 293, 294, 1085, 1118, 1052, 295,
	1179, 1180, 624, 0, 296, 297, 1125, 0, 1106, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	4485, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324,
	325, 326, 327, 1142, 328, 1136, 1135, 1056, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1127, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1062, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1150, 1151, 359, 1074, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1134, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 1147, 1148, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1157, 0, 1084, 378, 0, 379,
	380, 381, 382, 383, 1120, 1121, 1124, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1162, 393, 1129, 1130, 0,
	1090, 0, 395, 396, 1164, 1122, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1158, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	1113, 1112, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 1053, 269, 1171,
	458, 459, 1075, 1123, 460, 1137, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 1152, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 1153, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1133, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 1063,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1116, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 1131, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1178, 565, 566, 567,
	568, 1154, 572, 573, 0, 574, 575, 1051, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 1143, 1144, 1145, 1146, 0, 593, 0, 585,
	586, 587, 1155, 588, 1156, 1073, 589, 590, 591, 592,
	0, 4484, 595, 0, 1057, 596, 597, 598, 600, 601,
	599, 602, 1117, 603, 0, 0, 604, 605, 606, 663,
	1140, 1177, 0, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1054,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 1048, 1049, 1095, 1067, 1068, 1069,
	1065, 1066, 1078, 1079, 0, 0, 0, 1077, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1119, 1083,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 4483, 1132, 0, 287, 1139, 288, 1138, 0,
	1149, 289, 290, 291, 292, 293, 294, 1085, 1118, 1052,
	295, 1179, 1180, 624, 0, 296, 297, 1125, 0, 1106,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 4485, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323,
	324, 325, 326, 327, 1142, 328, 1136, 1135, 1056, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1127, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1062, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1150, 1151, 359, 1074,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1134,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 1147, 1148, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1157, 0, 1084, 378, 0,
	379, 380, 381, 382, 383, 1120, 1121, 1124, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1162, 393, 1129, 1130,
	0, 1090, 0, 395, 396, 1164, 1122, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1158, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 1113, 1112, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 1053, 269,
	1171, 458, 459, 1075, 1123, 460, 1137, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 1152, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 1153,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1133, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	1063, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1116, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 1131, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1178, 565, 566,
	567, 568, 1154, 572, 573, 0, 574, 575, 1051, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 1143, 1144, 1145, 1146, 0, 593, 0,
	585, 586, 587, 1155, 588, 1156, 1073, 589, 590, 591,
	592, 0, 4484, 595, 0, 1057, 596, 597, 598, 600,
	601, 599, 602, 1117, 603, 0, 0, 604, 605, 606,
	663, 1140, 1177, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1054, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 0, 0, 1048, 1049, 1095, 1067, 1068,
	1069, 1065, 1066, 1078, 1079, 0, 0, 0, 1077, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1119,
	1083, 0, 0, 0, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 1132, 0, 287, 1139, 288, 1138,
	0, 1149, 289, 290, 291, 292, 293, 294, 1085, 1118,
	1052, 295, 1179, 1180, 624, 0, 296, 297, 1125, 0,
	1106, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 4145, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114,
	323, 324, 325, 326, 327, 1142, 328, 1136, 1135, 1056,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1127, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1062, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1150, 1151, 359,
	1074, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1134, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 1147, 1148, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1157, 0, 4146, 378,
	0, 379, 380, 381, 382, 383, 1120, 1121, 1124, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1162, 393, 1129,
	1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1158,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 1113, 1112, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 1053,
	269, 1171, 458, 459, 1075, 1123, 460, 1137, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1172, 471, 1173, 1152, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	1153, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1133, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	4144, 1063, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1116, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 1131, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1178, 565,
	566, 567, 568, 1154, 572, 573, 0, 574, 575, 1051,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 1143, 1144, 1145, 1146, 0, 593,
	0, 585, 586, 587, 1155, 588, 1156, 1073, 589, 590,
	591, 592, 0, 594, 595, 0, 1057, 596, 597, 598,
	600, 601, 599, 602, 1117, 603, 0, 0, 604, 605,
	606, 663, 1140, 1177, 0, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1054, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 0, 0, 1048, 1049, 1095, 1067,
	1068, 1069, 3035, 3036, 1078, 1079, 0, 0, 0, 1077,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1119, 1083, 0, 0, 0, 279, 280, 1159, 281, 282,
	283, 284, 285, 286, 617, 1132, 0, 287, 1139, 288,
	1138, 0, 1149, 289, 290, 291, 292, 293, 294, 1085,
	1118, 1052, 295, 1179, 1180, 624, 0, 296, 297, 1125,
	0, 1106, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110,
	1114, 323, 324, 325, 326, 327, 1142, 328, 1136, 1135,
	1056, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1127, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1062, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1150, 1151,
	359, 1074, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1134, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1161, 366, 367, 1147, 1148, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1157, 0, 1084,
	378, 0, 379, 380, 381, 382, 383, 1120, 1121, 1124,
	461, 1163, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1162, 393,
	1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122, 1165,
	397, 398, 399, 1166, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1158, 1167, 411, 412, 1168, 0, 413, 0, 0, 0,
	414, 415, 418, 1113, 1112, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1169, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1170, 457, 447,
	1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1172, 471, 1173, 1152, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 1153, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1133, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1174, 523, 524,
	525, 526, 1063, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1116, 548, 549, 532, 533, 550, 551,
	1175, 552, 553, 554, 555, 556, 557, 1131, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1178,
	565, 566, 567, 568, 1154, 572, 573, 0, 574, 575,
	1051, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 1143, 1144, 1145, 1146, 0,
	593, 0, 585, 586, 587, 1155, 588, 1156, 1073, 589,
	590, 591, 592, 0, 594, 595, 0, 1057, 596, 597,
	598, 600, 601, 599, 602, 1117, 603, 0, 0, 604,
	605, 606, 663, 1140, 1177, 0, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1054, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 0, 0, 0, 1048, 1049, 1095,
	1067, 1068, 1069, 3033, 3034, 1078, 1079, 0, 0, 0,
	1077, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1119, 1083, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 1132, 0, 287, 1139,
	288, 1138, 0, 1149, 289, 290, 291, 292, 293, 294,
	1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 1142, 328, 1136,
	1135, 1056, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1127, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1062, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 1074, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1134, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 1147, 1148, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	1084, 378, 0, 379, 380, 381, 382, 383, 1120, 1121,
	1124, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 1129, 1130, 0, 1090, 0, 395, 396, 1164, 1122,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1053, 269, 1171, 458, 459, 1075, 1123, 460, 1137,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1133, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 1063, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 1131, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1178, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 1051, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 1143, 1144, 1145, 1146,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 1073,
	589, 590, 591, 592, 0, 594, 595, 0, 1057, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 1140, 1177, 0, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1054, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 1048, 1049,
	1095, 1067, 1068, 1069, 1065, 1066, 1078, 1079, 0, 0,
	0, 1077, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1119, 1083, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 1132, 0, 287,
	1139, 288, 1138, 0, 1149, 289, 290, 291, 292, 293,
	294, 1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296,
	297, 1125, 0, 1106, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115,
	1111, 1110, 1114, 323, 324, 325, 326, 327, 1142, 328,
	1136, 1135, 1056, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1127, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1062,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1150, 1151, 359, 1074, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1134, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 1147, 1148, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1157,
	0, 1084, 378, 0, 379, 380, 381, 382, 383, 1120,
	1121, 1124, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1162, 393, 1129, 1130, 0, 1090, 0, 395, 396, 1164,
	1122, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1158, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 1113, 1112, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 1053, 269, 1171, 458, 459, 1075, 1123, 460,
	1137, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	1152, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 1153, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1133,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 1063, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1116, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 1131,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1178, 565, 566, 567, 568, 1154, 572, 573, 0,
	574, 575, 1051, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 1143, 1144, 1145,
	1146, 0, 593, 0, 585, 586, 587, 1155, 588, 1156,
	1073, 589, 590, 591, 592, 0, 594, 595, 0, 1057,
	596, 597, 598, 600, 601, 599, 602, 1117, 603, 0,
	0, 604, 605, 606, 663, 1140, 1177, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1054, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 0, 0, 0, 0, 2362,
	2363, 1095, 1067, 1068, 1069, 1065, 1066, 1078, 1079, 0,
	0, 0, 1077, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1119, 1083, 0, 0, 0, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 1132, 0,
	287, 1139, 288, 1138, 0, 1149, 289, 290, 291, 292,
	293, 294, 1085, 1118, 0, 295, 1179, 1180, 624, 0,
	296, 297, 1125, 0, 1106, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1160, 320, 321, 322, 1109, 1107, 1108,
	1115, 1111, 1110, 1114, 323, 324, 325, 326, 327, 1142,
	328, 1136, 1135, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1127, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1062, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1150, 1151, 359, 1074, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1134, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1161, 366, 367, 1147, 1148, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1157, 0, 1084, 378, 0, 379, 380, 381, 382, 383,
	1120, 1121, 1124, 461, 1163, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1162, 393, 1129, 1130, 0, 1090, 0, 395, 396,
	1164, 1122, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1158, 1167, 411, 412, 1168, 0, 413,
	0, 0, 0, 414, 415, 418, 1113, 1112, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 0, 269, 1171, 458, 459, 1075, 1123,
	460, 1137, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1172, 471,
	1173, 1152, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 1153, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1133, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1174, 523, 524, 525, 526, 1063, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1116, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	1131, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1178, 565, 566, 567, 568, 1154, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 1143, 1144,
	1145, 1146, 0, 593, 0, 585, 586, 587, 1155, 588,
	1156, 1073, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 1117, 603,
	0, 0, 604, 605, 606, 663, 1140, 1177, 0, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1095, 1067, 1068, 1069, 1065,
	1066, 1078, 0, 2582, 0, 0, 0, 0, 0, 0,
	2580, 2581, 270, 272, 271, 273, 274, 275, 276, 1079,
	277, 278, 0, 1077, 0, 0, 0, 1119, 1083, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 1132, 0, 287, 1139, 288, 1138, 0, 1149,
	289, 290, 291, 292, 293, 294, 1085, 1118, 0, 295,
	1179, 1180, 624, 0, 296, 297, 1125, 0, 1106, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324,
	325, 326, 327, 1142, 328, 1136, 1135, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1127, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1062, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1150, 1151, 359, 1074, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1134, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 1147, 1148, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1157, 0, 1084, 378, 0, 379,
	380, 381, 382, 383, 1120, 1121, 1124, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1162, 393, 1129, 1130, 0,
	1090, 0, 395, 396, 1164, 1122, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1158, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	1113, 1112, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 0, 269, 1171,
	458, 459, 1075, 1123, 460, 1137, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 1152, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 1153, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1133, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 3028,
	3029, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1116, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 1131, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1178, 565, 566, 567,
	568, 1154, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 1143, 1144, 1145, 1146, 0, 593, 0, 585,
	586, 587, 1155, 588, 1156, 1073, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 1117, 603, 0, 0, 604, 605, 606, 663,
	1140, 1177, 0, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1095,
	1067, 1068, 1069, 1065, 1066, 1078, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 2069, 270, 272, 271, 273,
	274, 275, 276, 1079, 277, 278, 0, 1077, 0, 0,
	0, 1119, 1083, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 0, 1132, 0, 287, 1139,
	288, 1138, 0, 1149, 289, 290, 291, 292, 293, 294,
	1085, 1118, 1052, 295, 1179, 1180, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 4485, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 1142, 328, 1136,
	1135, 1056, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1127, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1062, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 1074, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1134, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 1147, 1148, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	1084, 378, 0, 379, 380, 381, 382, 383, 1120, 1121,
	1124, 461, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 1129, 1130, 0, 1090, 0, 395, 396, 0, 1122,
	0, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 1053, 269, 0, 458, 459, 1075, 1123, 460, 1137,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1133, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 1063, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 1131, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1178, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 1051, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 1143, 1144, 1145, 1146,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 1073,
	589, 590, 591, 592, 0, 4484, 595, 0, 1057, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 1140, 1177, 0, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 1217, 0, 0, 1048, 1049,
	0, 0, 0, 0, 0, 0, 0, 1079, 0, 0,
	0, 1077, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1119, 0, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 1118, 0, 295,
	622, 623, 624, 0, 296, 297, 1125, 0, 1106, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1150, 1151, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1157, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 1120, 1121, 1124, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1162, 393, 639, 640, 0,
	641, 0, 395, 396, 1164, 1122, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1203, 407, 409, 408, 0, 410, 1158, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	1113, 1112, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 0, 269, 1171,
	458, 459, 0, 1123, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 1209, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 1152, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 1153, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	1211, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 229, 543, 544, 542, 545, 546, 547,
	1116, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 1154, 572, 573, 0, 574, 575, 0, 571, 562,
	231, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 1155, 588, 1156, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 1117, 603, 0, 0, 604, 605, 606, 1575,
	664, 665, 0, 608, 607, 609, 666, 1217, 610, 0,
	0, 0, 223, 611, 612, 667, 613, 614, 615, 0,
	0, 224, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1119,
	0, 1207, 0, 1911, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 1118,
	0, 295, 622, 623, 624, 0, 296, 297, 1125, 0,
	1106, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1150, 1151, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1157, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 1120, 1121, 1124, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1162, 393, 639,
	640, 0, 641, 0, 395, 396, 1164, 1122, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1203, 407, 409, 408, 0, 410, 1158,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 1113, 1112, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 0,
	269, 1171, 458, 459, 0, 1123, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 1209, 466, 467, 468, 0,
	0, 469, 470, 646, 1172, 471, 1173, 1152, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	1153, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	526, 653, 1211, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 229, 543, 544, 542, 545,
	546, 547, 1116, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 1154, 572, 573, 0, 574, 575, 0,
	571, 562, 231, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 1155, 588, 1156, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 1117, 603, 0, 0, 604, 605,
	606, 1575, 664, 665, 0, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 223, 611, 612, 667, 613, 614,
	615, 0, 0, 224, 0, 0, 0, 3188, 0, 1217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 0, 1911, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1119, 0, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 1118, 0, 295, 622, 623, 624, 0, 296, 297,
	1125, 0, 1106, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111,
	1110, 1114, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1150,
	1151, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1157, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 1120, 1121,
	1124, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1162,
	393, 639, 640, 0, 641, 0, 395, 396, 1164, 1122,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1203, 407, 409, 408, 0,
	410, 1158, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 1113, 1112, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 0, 269, 1171, 458, 459, 0, 1123, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 1209, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 1152,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 1153, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 653, 1211, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1116, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 1154, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 657, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 1155, 588, 1156, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 1117, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 0, 608, 607, 609,
	666, 0, 610, 0, 1199, 0, 1217, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 1207, 0, 1205, 1119, 0,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 1118, 0,
	295, 622, 623, 624, 0, 296, 297, 1125, 0, 1106,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 1109, 1107, 1108, 1115, 1111, 1110, 1114, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1150, 1151, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1157, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 1120, 1121, 1124, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1162, 393, 639, 640,
	0, 641, 0, 395, 396, 1164, 1122, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1203, 407, 409, 408, 0, 410, 1158, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 1113, 1112, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 0, 269,
	1171, 458, 459, 0, 1123, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 1209, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 1152, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 1153,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	653, 1211, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1116, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 1154, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 1155, 588, 1156, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 1117, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 1217, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1119, 0, 1207, 0, 1205, 279, 280, 1159, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	1118, 0, 295, 622, 623, 624, 0, 296, 297, 1125,
	0, 1106, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1160, 320, 321, 322, 1109, 1107, 1108, 1115, 1111, 1110,
	1114, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1150, 1151,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1161, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1157, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 1120, 1121, 1124,
	461, 1163, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1162, 393,
	639, 640, 0, 641, 0, 395, 396, 1164, 1122, 1165,
	397, 398, 399, 1166, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1203, 407, 409, 408, 0, 410,
	1158, 1167, 411, 412, 1168, 0, 413, 0, 0, 0,
	414, 415, 418, 1113, 1112, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1169, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1170, 457, 447,
	0, 269, 1171, 458, 459, 0, 1123, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 1209, 466, 467, 468,
	0, 0, 469, 470, 646, 1172, 471, 1173, 1152, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 1153, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1174, 523, 524,
	525, 526, 653, 1211, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1116, 548, 549, 532, 533, 550, 551,
	1175, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 1154, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 1155, 588, 1156, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 1117, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	1217, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1119, 0, 1207, 0, 1205, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 1118, 0, 295, 622, 623, 624, 0, 296,
	297, 1125, 0, 1106, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 1109, 1107, 1108, 1115,
	1111, 1110, 1114, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1150, 1151, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1157,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 1120,
	1121, 1124, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1162, 393, 639, 640, 0, 641, 0, 395, 396, 1164,
	1122, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1158, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 1113, 1112, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 0, 269, 1171, 458, 459, 0, 1123, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	1152, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 1153, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1116, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 1154, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 1155, 588, 1156,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 1117, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 1217, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 0, 0, 0, 3977, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 1118, 0, 295, 622, 623, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 639, 640, 0, 641, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 0, 269, 1171, 458, 459, 0,
	1123, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 653, 1211, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1041, 610, 1298, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	1810, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 1303,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1162, 393, 639, 640,
	0, 641, 0, 395, 396, 1164, 642, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 0, 0,
	1171, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 229, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 231, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	1575, 664, 665, 0, 608, 607, 609, 666, 1572, 610,
	1298, 0, 0, 223, 611, 612, 667, 613, 614, 615,
	0, 0, 224, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 185, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 1303, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1162, 393, 639, 640, 0, 641, 0, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 0, 0, 1171, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 229, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 231, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 1575, 664, 665, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 223, 611, 612,
	667, 613, 614, 615, 1298, 1297, 224, 0, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 185, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 1303, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1162, 393, 639, 640, 0, 641,
	0, 395, 396, 1164, 642, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 0, 0, 1171, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1298, 1297,
	0, 0, 0, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 1597, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 1159, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 1303, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1160, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1161, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 1163, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1162, 393,
	639, 640, 0, 641, 0, 395, 396, 1164, 642, 1165,
	397, 398, 399, 1166, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 1167, 411, 412, 1168, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1169, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1170, 457, 447,
	0, 0, 1171, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1172, 471, 1173, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1174, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	1175, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1298, 1297, 0, 0, 0, 0, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 3471, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 1303, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1162, 393, 639, 640, 0, 641, 0, 395,
	396, 1164, 642, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 0, 0, 1171, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 2251, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1298, 2165, 0, 0,
	0, 0, 2166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1597, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 1303,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1162, 393, 639, 640,
	0, 641, 0, 395, 396, 1164, 642, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 2164, 409, 408, 0, 410, 643, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 0, 0,
	1171, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1298, 1297, 0, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 1597, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 1303, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1162, 393, 639, 640, 0, 641, 0, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 0, 0, 1171, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 1217, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1119, 0, 0, 0, 1581, 279,
	280, 1159, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 1118, 0, 295, 622, 623, 624,
	0, 296, 297, 1125, 0, 1106, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1160, 320, 321, 322, 1109, 1107,
	1108, 1115, 1111, 1110, 1114, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1150, 1151, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1161, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1157, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 1120, 1121, 1124, 461, 1163, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1162, 393, 639, 640, 0, 641, 0, 395,
	396, 1164, 1122, 1165, 397, 398, 399, 1166, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1158, 1167, 411, 412, 1168, 0,
	413, 0, 0, 0, 414, 415, 418, 1113, 1112, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1169, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1170, 457, 447, 0, 269, 1171, 458, 459, 0,
	1123, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1172,
	471, 1173, 1152, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 1153, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1174, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1116, 548, 549,
	532, 533, 550, 551, 1175, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 1154, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 1155,
	588, 1156, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 1117,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1041, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 229, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 231, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	1575, 664, 665, 0, 608, 607, 609, 666, 264, 610,
	0, 0, 0, 223, 611, 612, 667, 613, 614, 615,
	0, 0, 224, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 185, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	0, 610, 264, 2941, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 1925, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 264, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	4641, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 264, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 279, 280,
	3421, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 639, 640, 0, 641, 0, 395, 396,
	0, 642, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 457, 447, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 264, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 1569, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	264, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 2929, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 264, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 3577, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 883, 610, 790, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	2242, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 797, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 881, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 795, 576, 577, 578, 579, 580, 796, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 788, 610,
	790, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 800, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 797, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 795, 576, 577, 578, 579,
	580, 796, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 1964, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 800, 0, 0, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 0, 1970, 0, 287, 1960, 288, 1976,
	0, 1983, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 1986, 1987, 0, 0, 296, 297, 0, 0,
	1303, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 1142, 328, 1974, 1973, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1127, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 0, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	1972, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 1981, 1982, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	0, 379, 380, 381, 382, 383, 0, 0, 0, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1162, 393, 1967,
	1968, 0, 1963, 0, 395, 396, 1164, 0, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 0,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 0,
	0, 1171, 458, 459, 0, 0, 460, 1975, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 0, 1172, 471, 1173, 0, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 1957, 484, 485, 486, 1958, 487, 488, 489,
	0, 490, 0, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1971, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	526, 0, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 1969, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1985, 565,
	566, 567, 568, 0, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 1977, 1978, 1979, 1980, 0, 593,
	0, 585, 586, 587, 0, 588, 0, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 0, 1961, 1984, 0, 608, 607, 609, 0, 0,
	610, 0, 0, 790, 0, 611, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 1951,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	624, 0, 296, 297, 625, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 797,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 636, 637, 638, 461, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 639, 640, 0, 641, 0,
	395, 396, 0, 642, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 457, 447, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 795, 576,
	577, 578, 579, 580, 796, 582, 353, 583, 0, 584,
	657, 658, 659, 660, 0, 593, 0, 585, 586, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	790, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 800, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 797, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	2285, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 2286, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 795, 576, 577, 578, 579,
	580, 796, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 2287, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 2034, 610, 1298, 2001, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 800, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 1303, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 1998, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1162, 393, 639, 640, 0, 641,
	0, 395, 396, 1164, 642, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 0, 0, 1171, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1999,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 1995, 610, 1298, 2001,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 1159, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 1303, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1160, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	1998, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1161, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 1163, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1162, 393,
	639, 640, 0, 641, 0, 395, 396, 1164, 642, 1165,
	397, 398, 399, 1166, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 1167, 411, 412, 1168, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1169, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1170, 457, 447,
	0, 0, 1171, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1172, 471, 1173, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1174, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1999, 548, 549, 532, 533, 550, 551,
	1175, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 790, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 797, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 1990, 538,
	539, 540, 541, 0, 1991, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	795, 576, 577, 578, 579, 580, 796, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 1989, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 790, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 800, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 797, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 1942, 538, 539, 540, 541,
	0, 1943, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 795, 576, 577,
	578, 579, 580, 796, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 1941, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 0, 610, 1298, 2001, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 800, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 1159, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 1303,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1160, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 1998, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1161,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 1163,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1162, 393, 639, 640,
	0, 641, 0, 395, 396, 1164, 642, 1165, 397, 398,
	399, 1166, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 1167,
	411, 412, 1168, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1169, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1170, 457, 447, 0, 0,
	1171, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1172, 471, 1173, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1174, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1999, 548, 549, 532, 533, 550, 551, 1175, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1298, 1297, 0, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 1303, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1162, 393, 639, 640, 0, 641, 0, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 0, 0, 1171, 458, 459, 3764, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1298, 1297, 0, 0, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 1159, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 1303, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1160, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1161, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 1163, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1162, 393, 639, 640, 0, 641,
	0, 395, 396, 1164, 642, 1165, 397, 398, 399, 1166,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 1167, 411, 412,
	1168, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1169, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1170, 457, 447, 0, 0, 1171, 458,
	459, 3392, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1172, 471, 1173, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1174, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1175, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 264, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 639, 640, 0, 641, 0, 395, 396,
	0, 642, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 457, 447, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 0, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1625, 0, 1298, 1297, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 800, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 1159, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 0, 296, 297, 625, 0,
	1303, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1160,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 267, 0, 0, 0, 0, 0, 1624, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1161, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 636, 637, 638, 461,
	1163, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1162, 393, 639,
	640, 0, 641, 0, 395, 396, 1164, 642, 1165, 397,
	398, 399, 1166, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	1167, 411, 412, 1168, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1169, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1170, 457, 447, 0,
	0, 1171, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1172, 471, 1173, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 1623, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1174, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 1622, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 1175,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 0, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1543, 0, 1298, 1297, 0, 0, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	624, 0, 296, 297, 625, 0, 1303, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1161, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 1542, 637, 638, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1162, 393, 639, 640, 0, 641, 0,
	395, 396, 1164, 642, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 0, 0, 1171, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	657, 658, 659, 660, 0, 593, 0, 585, 586, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	0, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1503, 0, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 622, 623, 624, 0, 296, 297,
	625, 0, 1303, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 634, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 636, 637,
	638, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1162,
	393, 639, 640, 0, 641, 0, 395, 396, 1164, 642,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 643, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 0, 0, 1171, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 657, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 661, 588, 662, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 0, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1471, 0, 1298, 1297, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 1303, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 1470, 637, 638, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1162, 393, 639, 640, 0,
	641, 0, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 0, 0, 1171,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 0, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1292,
	0, 1298, 1297, 0, 0, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 279, 280,
	1159, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 1303, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1160, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1161, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	1291, 637, 638, 461, 1163, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1162, 393, 639, 640, 0, 641, 0, 395, 396,
	1164, 642, 1165, 397, 398, 399, 1166, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 1167, 411, 412, 1168, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1169, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1170, 457, 447, 0, 0, 1171, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1172, 471,
	1173, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1174, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 1175, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 0, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1298, 1297, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 1159, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 1303, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1160, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1161, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 1163, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1162, 393, 639, 640, 0,
	641, 0, 395, 396, 1164, 642, 1165, 397, 398, 399,
	1166, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 1167, 411,
	412, 1168, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1169, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1170, 457, 447, 0, 0, 1171,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1172, 471, 1173, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1174, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1175, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 0, 608, 607, 609, 666, 0, 610, 1298,
	2001, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 279, 280, 1159, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 622, 623, 624, 0, 296, 297,
	625, 0, 1303, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1160, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 2041, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1161, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 634, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 636, 637,
	638, 461, 1163, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1162,
	393, 639, 640, 0, 641, 0, 395, 396, 1164, 642,
	1165, 397, 398, 399, 1166, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 643, 1167, 411, 412, 1168, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1169, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1170, 457,
	447, 0, 0, 1171, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1172, 471, 1173, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1174, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1175, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 657, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 661, 588, 662, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 0, 608, 607, 609,
	666, 0, 610, 1298, 1297, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	279, 280, 1159, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	624, 0, 296, 297, 625, 0, 1303, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1160, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1161, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 636, 637, 638, 461, 1163, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1162, 393, 639, 640, 0, 641, 0,
	395, 396, 1164, 642, 1165, 397, 398, 399, 1166, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 1167, 411, 412, 1168,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1169,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1170, 457, 447, 0, 0, 1171, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1172, 471, 1173, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1174, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 1175, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	657, 658, 659, 660, 0, 593, 0, 585, 586, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	1298, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 1159,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 1303, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1160, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1161, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 1163, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1162, 393, 639, 640, 0, 641, 0, 395, 396, 1164,
	642, 1165, 397, 398, 399, 1166, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 1167, 411, 412, 1168, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1169, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1170,
	457, 447, 0, 0, 1171, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1172, 471, 1173,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1174,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1175, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 264, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 2748, 296, 297, 625, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 2745, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 2752, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 2954, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 2751, 0,
	0, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 636, 637, 638, 461,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 2951, 390, 391, 392, 394, 0, 0, 393, 639,
	640, 0, 641, 0, 395, 2953, 0, 642, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	0, 411, 412, 2950, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 457, 447, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 2750, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 2952, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 264, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 2748, 296, 297, 625, 0, 0, 2742, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 2745, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 2752, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 2751, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 2741, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 2750, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 2749, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 1696, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 1695, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 1699, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 1697, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 1698, 607, 609, 666,
	1445, 610, 264, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 1447, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	1209, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1442, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 1444, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 1209, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 1349, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 1351,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 1209, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 699, 610, 264, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 698, 275, 276, 688, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 691, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 692, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 693, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 687, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 688, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 691, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 692, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 693, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 264, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 1209, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 264, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 3342, 457, 447, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 2899, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 2898, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 2257, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 264, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 0, 296, 297, 625, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 636, 637, 638, 461,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 639,
	640, 0, 641, 0, 395, 396, 0, 642, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 457, 447, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 2198, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 0, 608, 607, 609, 666, 2205,
	610, 264, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	2204, 637, 638, 461, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 639, 640, 0, 641, 0, 395, 396,
	0, 642, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 457, 447, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 0, 608,
	607, 609, 666, 2191, 610, 264, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 2193, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 264, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 2161, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	1209, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1547, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 1546, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 1462, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 1455, 610, 264, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 1457, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 1282, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 1281, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	1272, 610, 264, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 1271, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1269, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 1268, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 1264, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 1263,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 669, 610, 264, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 255, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 264, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 264, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	691, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 692,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	693, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 264,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 622, 623, 624, 0, 296, 297,
	625, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 2294, 327, 0, 328, 626,
	627, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 634, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 636, 637,
	638, 461, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 639, 640, 0, 641, 0, 395, 396, 0, 642,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 643, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 457,
	447, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 657, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 661, 588, 662, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 264, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 2292, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 264, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	624, 0, 296, 297, 625, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 2290,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 636, 637, 638, 461, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 639, 640, 0, 641, 0,
	395, 396, 0, 642, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 457, 447, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	657, 658, 659, 660, 0, 593, 0, 585, 586, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	264, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 2211,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 264, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 0, 296, 297, 625, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 2020, 637, 638, 461,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 639,
	640, 0, 641, 0, 395, 396, 0, 642, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 457, 447, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 264, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 2014, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 870, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 869, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 868, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 264, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 2954,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 4044, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 0, 608, 607, 609, 666, 756, 610, 264,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 279, 280, 1319, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 622, 623, 1317, 0, 296, 297,
	625, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 634, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 636, 637,
	638, 461, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 639, 640, 0, 641, 0, 395, 396, 0, 642,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 643, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 757, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 457,
	447, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 753, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 1320, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 752, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 661, 588, 662, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 0, 608, 607, 609,
	666, 756, 610, 264, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	279, 280, 1319, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	1317, 0, 296, 297, 625, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 636, 637, 638, 461, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 639, 640, 0, 641, 0,
	395, 396, 0, 642, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 757, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 457, 447, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 753, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 1320, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	752, 658, 659, 660, 0, 593, 0, 585, 1318, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	0, 608, 607, 609, 666, 678, 610, 264, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 677, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 0, 296, 297, 625, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 636, 637, 638, 461,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 639,
	640, 0, 641, 0, 395, 396, 0, 642, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 457, 447, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 676, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 0, 608, 607, 609, 666, 0,
	610, 264, 2941, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 639, 640, 0, 641, 0, 395, 396,
	0, 642, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 457, 447, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 0, 608,
	607, 609, 666, 0, 610, 264, 4054, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 264, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	4314, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 264,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 622, 623, 624, 0, 296, 297,
	625, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 634, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 636, 637,
	638, 461, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 639, 640, 0, 641, 0, 395, 396, 0, 642,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 643, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 457,
	447, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 3954, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 657, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 661, 588, 662, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 264, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 3732, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 264, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 2634, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	624, 0, 296, 297, 625, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 636, 637, 638, 461, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 639, 640, 0, 641, 0,
	395, 396, 0, 642, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 457, 447, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	657, 658, 659, 660, 0, 593, 0, 585, 586, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	0, 608, 607, 609, 666, 0, 610, 264, 2941, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 0, 296, 297, 625, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 636, 637, 638, 461,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 639,
	640, 0, 641, 0, 395, 396, 0, 642, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 457, 447, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 2938, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 264, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 270, 272, 271, 273, 274, 275, 276, 2267, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 2255, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	756, 610, 264, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 746, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 757, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 753, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 1580, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 752,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1553, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 1552, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 1537, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 1535,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 1530, 610, 264, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 1507, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 1505, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	1468, 610, 264, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 1450, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 1287, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 1286,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 1278, 610, 264, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 1277, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 264, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 270, 272,
	271, 273, 274, 275, 276, 1231, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 639, 640, 0, 641, 0, 395, 396,
	0, 642, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 457, 447, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 264, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 270, 272, 271, 273, 274,
	275, 276, 762, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 0, 608, 607, 609, 666,
	756, 610, 264, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 746, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 744, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 745, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 757, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 747, 527, 0, 528,
	529, 535, 536, 530, 531, 753, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 748, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 752,
	658, 659, 660, 0, 593, 0, 585, 750, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 738, 610, 264, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 636, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 739, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 0, 608, 607, 609, 666, 701, 610,
	264, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 636,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 0, 608, 607,
	609, 666, 695, 610, 264, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 0, 608, 607, 609, 666, 673, 610, 264, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 636, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 264, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 264, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 378, 0, 379, 380, 381, 382,
	383, 3441, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 264,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 617, 618, 0, 287, 619,
	288, 620, 0, 621, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 622, 623, 624, 0, 296, 297,
	625, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 626,
	627, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 628, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 629,
	630, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 631, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 632, 633, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 634, 0,
	635, 378, 0, 379, 380, 381, 382, 383, 3378, 637,
	638, 461, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 639, 640, 0, 641, 0, 395, 396, 0, 642,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 643, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 457,
	447, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 648, 484, 485, 486, 649, 487,
	488, 489, 650, 490, 651, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 652, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 653, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 654, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	655, 565, 566, 567, 568, 656, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 353, 583, 0, 584, 657, 658, 659, 660,
	0, 593, 0, 585, 586, 587, 661, 588, 662, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 663, 664, 665, 264, 608, 607, 609,
	666, 0, 610, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 617, 618, 0, 287, 619, 288, 620, 0,
	621, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 622, 623, 624, 0, 296, 297, 625, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 626, 627, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 628, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 629, 630, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 631,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 632, 633, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 634, 0, 635, 378, 0,
	379, 380, 381, 382, 383, 3307, 637, 638, 461, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 639, 640,
	0, 641, 0, 395, 396, 0, 642, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 643, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 457, 447, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 648, 484, 485, 486, 649, 487, 488, 489, 650,
	490, 651, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 652, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	653, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 654, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 655, 565, 566,
	567, 568, 656, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 353,
	583, 0, 584, 657, 658, 659, 660, 0, 593, 0,
	585, 586, 587, 661, 588, 662, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	663, 664, 665, 264, 608, 607, 609, 666, 0, 610,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 617,
	618, 0, 287, 619, 288, 620, 0, 621, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 622, 623,
	624, 0, 296, 297, 625, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 626, 627, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 628, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 629, 630, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 631, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 632,
	633, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 634, 0, 635, 378, 0, 379, 380, 381,
	382, 383, 3305, 637, 638, 461, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 639, 640, 0, 641, 0,
	395, 396, 0, 642, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 643, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 457, 447, 0, 0, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 648, 484,
	485, 486, 649, 487, 488, 489, 650, 490, 651, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 652, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 653, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 654, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 655, 565, 566, 567, 568, 656,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 353, 583, 0, 584,
	657, 658, 659, 660, 0, 593, 0, 585, 586, 587,
	661, 588, 662, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 663, 664, 665,
	264, 608, 607, 609, 666, 0, 610, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 617, 618, 0, 287,
	619, 288, 620, 0, 621, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 622, 623, 624, 0, 296,
	297, 625, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	626, 627, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 628,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	629, 630, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 631, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 632, 633, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 634,
	0, 635, 378, 0, 379, 380, 381, 382, 383, 3290,
	637, 638, 461, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 639, 640, 0, 641, 0, 395, 396, 0,
	642, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 643, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	457, 447, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 648, 484, 485, 486, 649,
	487, 488, 489, 650, 490, 651, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 652,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 653, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 654,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 655, 565, 566, 567, 568, 656, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 353, 583, 0, 584, 657, 658, 659,
	660, 0, 593, 0, 585, 586, 587, 661, 588, 662,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 663, 664, 665, 264, 608, 607,
	609, 666, 0, 610, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 617, 618, 0, 287, 619, 288, 620,
	0, 621, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 622, 623, 624, 0, 296, 297, 625, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 626, 627, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 628, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 629, 630, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	631, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 632, 633, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 634, 0, 635, 378,
	0, 379, 380, 381, 382, 383, 2909, 637, 638, 461,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 639,
	640, 0, 641, 0, 395, 396, 0, 642, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 643,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 457, 447, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 648, 484, 485, 486, 649, 487, 488, 489,
	650, 490, 651, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 652, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 653, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 654, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 655, 565,
	566, 567, 568, 656, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	353, 583, 0, 584, 657, 658, 659, 660, 0, 593,
	0, 585, 586, 587, 661, 588, 662, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 663, 664, 665, 264, 608, 607, 609, 666, 0,
	610, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	617, 618, 0, 287, 619, 288, 620, 0, 621, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 622,
	623, 624, 0, 296, 297, 625, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 626, 627, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 628, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 629, 630, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 631, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	632, 633, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 634, 0, 635, 378, 0, 379, 380,
	381, 382, 383, 636, 637, 638, 461, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 639, 640, 0, 641,
	0, 395, 396, 0, 642, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 643, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 457, 447, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 648,
	484, 485, 486, 649, 487, 488, 489, 650, 490, 651,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 652, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 653, 527,
	0, 528, 529, 739, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 654, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 655, 565, 566, 567, 568,
	656, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 353, 583, 0,
	584, 657, 658, 659, 660, 0, 593, 0, 585, 586,
	587, 661, 588, 662, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 663, 664,
	665, 264, 608, 607, 609, 666, 0, 610, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 616, 0, 2229, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 617, 618, 0,
	287, 619, 288, 620, 0, 621, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 622, 623, 624, 0,
	296, 297, 625, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 626, 627, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	628, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 629, 630, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 631, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 632, 633, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	634, 0, 635, 378, 0, 379, 380, 381, 382, 383,
	636, 637, 638, 461, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 639, 640, 0, 641, 0, 395, 396,
	0, 642, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 643, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 457, 447, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 648, 484, 485, 486,
	649, 487, 488, 489, 650, 490, 651, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	652, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 653, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 0, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	654, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 655, 565, 566, 567, 568, 656, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 353, 583, 0, 584, 657, 658,
	659, 660, 0, 593, 0, 585, 586, 587, 661, 588,
	662, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 663, 664, 665, 264, 608,
	607, 609, 666, 0, 610, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 617, 618, 0, 287, 619, 288,
	620, 0, 621, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 622, 623, 624, 0, 296, 297, 625,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 626, 627,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 628, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 629, 630,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 631, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 632, 633, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 634, 0, 635,
	378, 0, 379, 380, 381, 382, 383, 1249, 637, 638,
	461, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	639, 640, 0, 641, 0, 395, 396, 0, 642, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	643, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 457, 447,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 648, 484, 485, 486, 649, 487, 488,
	489, 650, 490, 651, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 652, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 653, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 654, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 655,
	565, 566, 567, 568, 656, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 353, 583, 0, 584, 657, 658, 659, 660, 0,
	593, 0, 585, 586, 587, 661, 588, 662, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 663, 664, 665, 264, 608, 607, 609, 666,
	0, 610, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 617, 618, 0, 287, 619, 288, 620, 0, 621,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	622, 623, 624, 0, 296, 297, 625, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 626, 627, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 628, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 629, 630, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 631, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 632, 633, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 634, 0, 635, 378, 0, 379,
	380, 381, 382, 383, 636, 637, 638, 461, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 639, 640, 0,
	641, 0, 395, 396, 0, 642, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 643, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 457, 447, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	648, 484, 485, 486, 649, 487, 488, 489, 650, 490,
	651, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 652, 502, 1182, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 653,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 654, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 655, 565, 566, 567,
	568, 656, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 353, 583,
	0, 584, 657, 658, 659, 660, 0, 593, 0, 585,
	586, 587, 661, 588, 662, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 663,
	664, 665, 264, 608, 607, 609, 666, 0, 610, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 617, 618,
	0, 287, 619, 288, 620, 0, 621, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 622, 623, 624,
	0, 296, 297, 625, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 626, 627, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 628, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 629, 630, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 631, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 632, 633,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 634, 0, 635, 0, 0, 379, 380, 381, 382,
	383, 636, 637, 638, 461, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 639, 640, 0, 641, 0, 395,
	396, 0, 642, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 643, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 457, 447, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 0, 477,
	478, 479, 480, 481, 0, 482, 483, 648, 484, 485,
	486, 649, 487, 488, 489, 650, 490, 651, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 0, 500,
	501, 652, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 653, 0, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 654, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 655, 565, 566, 567, 568, 656, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 353, 583, 0, 584, 657,
	658, 659, 660, 0, 593, 0, 585, 586, 587, 661,
	588, 662, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 663, 664, 665, 0,
	608, 607, 609, 666, 0, 610, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1744, 1745, 0, 1777,
	1778, 1779, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 1775,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 1744, 1745, 0,
	1777, 1778, 1779, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	1775, 1746, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 1766, 0, 0, 0, 0, 1793, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 0, 0, 1744, 1745,
	0, 1777, 1778, 1779, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	1780, 1775, 1766, 0, 0, 0, 0, 0, 1747, 0,
	0, 1763, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 1769, 1770, 1771, 1772, 0,
	0, 0, 0, 1766, 0, 1752, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	0, 0, 1784, 0, 0, 1794, 1752, 0, 0, 0,
	0, 1774, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	1791, 0, 0, 0, 0, 0, 0, 1761, 1762, 0,
	0, 0, 0, 1784, 0, 0, 1794, 1769, 1770, 1771,
	1772, 0, 1774, 1776, 0, 1782, 0, 1752, 0, 0,
	1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789, 1790,
	1767, 1791, 0, 0, 0, 0, 0, 0, 1761, 1762,
	0, 0, 1780, 1775, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 1784, 0, 1782, 1794, 0, 1793,
	0, 0, 0, 1774, 1776, 0, 0, 0, 0, 0,
	0, 1767, 0, 1792, 0, 0, 0, 0, 0, 0,
	1790, 0, 1791, 0, 0, 1746, 0, 0, 0, 1761,
	1762, 1781, 0, 0, 0, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 1782, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 1769,
	1770, 1771, 1772, 1781, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 1744, 1745, 0,
	1777, 1778, 1779, 1787, 1788, 1789, 1784, 0, 0, 1794,
	0, 0, 0, 0, 0, 1774, 1776, 0, 0, 1780,
	1775, 0, 1785, 0, 0, 0, 1773, 1747, 0, 0,
	0, 0, 1790, 0, 1791, 0, 1793, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 1785, 1767, 0, 0, 0, 0, 0,
	0, 1763, 0, 1783, 0, 0, 0, 0, 1758, 1759,
	1765, 1786, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749,
	1750, 1751, 1753, 1754, 0, 0, 0, 0, 4414, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 1758,
	1759, 1765, 1786, 1764, 1760, 1781, 1757, 1755, 1756, 1748,
	1749, 1750, 1751, 1753, 1754, 0, 0, 0, 0, 4335,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 1773, 0,
	4300, 0, 0, 1784, 0, 0, 1794, 0, 0, 0,
	0, 0, 1774, 1776, 0, 0, 0, 0, 0, 1768,
	1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789, 1790,
	0, 1791, 0, 0, 0, 0, 0, 0, 1761, 1762,
	0, 0, 1780, 1775, 0, 1785, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 1782, 0, 0, 1793,
	0, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 1775, 1746, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 1766, 0, 0, 0, 0,
	1793, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1783, 0, 0,
	0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	0, 0, 4299, 0, 0, 0, 0, 0, 0, 1769,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	1769, 1770, 1771, 1772, 0, 0, 1784, 0, 0, 1794,
	1752, 0, 0, 0, 0, 1774, 1776, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 1791, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 1784, 0, 0,
	1794, 0, 0, 0, 0, 0, 1774, 1776, 0, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 1767, 1791, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 1792, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 1758,
	1759, 1765, 1786, 1764, 1760, 1781, 1757, 1755, 1756, 1748,
	1749, 1750, 1751, 1753, 1754, 0, 0, 0, 0, 4129,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 1780, 1775, 0, 1785, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1768, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 1775, 1746, 1785, 0, 0, 0,
	0, 1747, 0, 0, 0, 1766, 0, 0, 0, 0,
	1793, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1783, 0, 0,
	0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	0, 0, 3973, 0, 0, 0, 0, 0, 0, 1769,
	1770, 1771, 1772, 0, 0, 0, 0, 0, 1783, 1752,
	0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0,
	1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0,
	0, 0, 0, 3909, 0, 0, 0, 0, 0, 0,
	1769, 1770, 1771, 1772, 0, 0, 1784, 0, 0, 1794,
	1752, 0, 0, 0, 0, 1774, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 1791, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 1784, 0, 0,
	1794, 0, 0, 0, 0, 0, 1774, 1776, 0, 1782,
	0, 0, 0, 0, 1744, 1745, 0, 1777, 1778, 1779,
	1787, 1788, 1789, 1790, 1767, 1791, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 0, 1780, 1775, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	1782, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 1769, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788, 1789,
	1784, 0, 0, 1794, 0, 0, 0, 0, 0, 1774,
	1776, 0, 0, 1780, 1775, 0, 1785, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 1790, 0, 1791, 0,
	1793, 0, 0, 0, 0, 1761, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 1767, 0,
	0, 0, 0, 0, 0, 1763, 0, 1783, 0, 0,
	0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757,
	1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0,
	0, 0, 3908, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 1781,
	1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0,
	0, 0, 0, 3907, 0, 0, 0, 0, 0, 0,
	1769, 1770, 1771, 1772, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 1744, 1745, 0, 1777, 1778, 1779, 1787,
	1788, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 1775, 0, 0, 0,
	0, 0, 1773, 1747, 0, 0, 0, 1784, 0, 0,
	1794, 0, 1793, 0, 0, 0, 1774, 1776, 0, 0,
	0, 0, 0, 1768, 1744, 1745, 0, 1777, 1778, 1779,
	1787, 1788, 1789, 1790, 0, 1791, 0, 0, 1746, 0,
	0, 0, 1761, 1762, 0, 0, 1780, 1775, 1766, 1785,
	0, 0, 0, 0, 1747, 0, 0, 1763, 0, 0,
	1782, 0, 0, 1793, 0, 1744, 1745, 0, 1777, 1778,
	1779, 1787, 1788, 1789, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 1775, 1746,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 1766,
	0, 0, 0, 0, 1793, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 1769, 1770, 1771, 1772, 1781, 0, 0, 0,
	1766, 0, 1752, 0, 0, 0, 0, 0, 0, 1763,
	0, 1783, 0, 0, 0, 0, 1758, 1759, 1765, 1786,
	1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750, 1751,
	1753, 1754, 0, 0, 0, 0, 3582, 0, 0, 1784,
	0, 0, 1794, 1769, 1770, 1771, 1772, 0, 1774, 1776,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 1790, 0, 1791, 0, 0,
	0, 0, 0, 0, 1761, 1762, 0, 0, 0, 0,
	1768, 0, 0, 0, 1769, 1770, 1771, 1772, 0, 0,
	1784, 0, 1782, 1794, 1752, 0, 0, 0, 0, 1774,
	1776, 0, 0, 0, 0, 0, 1785, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 1791, 0,
	0, 0, 0, 0, 0, 1761, 1762, 0, 0, 0,
	0, 1784, 0, 0, 1794, 0, 0, 0, 0, 0,
	1774, 1776, 0, 1782, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 1790, 1767, 1791,
	0, 0, 0, 0, 0, 0, 1761, 1762, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 1792, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 1781,
	1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 0,
	0, 1773, 0, 3108, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 1745, 1768, 1777, 1778, 1779, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 1775, 0, 0, 0, 0,
	1785, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	1783, 1793, 0, 0, 0, 1758, 1759, 1765, 1786, 1764,
	1760, 0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753,
	1754, 0, 0, 0, 0, 3107, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 1758, 1759, 1765, 1786,
	1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750, 1751,
	1753, 1754, 0, 0, 0, 0, 3106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 1758, 1759, 1765,
	1786, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750,
	1751, 1753, 1754, 0, 0, 0, 0, 3105, 0, 0,
	0, 1769, 1770, 1771, 1772, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 1745, 0, 1777, 1778, 1779, 1787,
	1788, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 1775, 0, 1784, 0,
	0, 1794, 0, 1747, 0, 0, 0, 1774, 1776, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 1791, 0, 0, 0,
	0, 0, 0, 1761, 1762, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 1782, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 1744, 1745, 1767, 1777, 1778, 1779,
	1787, 1788, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 1775, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1746,
	0, 0, 1769, 1770, 1771, 1772, 0, 0, 0, 1766,
	0, 0, 1752, 4555, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 1794, 0, 0, 0, 0, 0, 1774, 1776,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 1791, 0, 0,
	0, 1768, 0, 0, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 1769, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 1782, 1752, 0, 3168, 0, 1785, 0, 3167,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 1794, 0, 0, 0, 0, 0, 1774,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 1790, 0, 1791, 0,
	0, 0, 0, 0, 0, 1761, 1762, 0, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 1783,
	4554, 0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760,
	0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754,
	0, 0, 3072, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 1744, 1745, 0, 1777,
	1778, 1779, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 1775,
	0, 0, 0, 0, 3043, 0, 1747, 0, 0, 0,
	0, 0, 1773, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 2607, 0, 0, 0, 0,
	0, 1746, 1744, 1745, 0, 1777, 1778, 1779, 1787, 1788,
	1789, 1766, 0, 0, 0, 0, 0, 0, 0, 1785,
	1763, 0, 0, 0, 1780, 1775, 0, 0, 0, 2606,
	1783, 0, 1747, 0, 0, 1758, 1759, 1765, 1786, 1764,
	1760, 1793, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 3044,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 1758, 1759, 1765, 1786,
	1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750, 1751,
	1753, 1754, 1784, 0, 0, 1794, 0, 0, 0, 0,
	0, 1774, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1770, 1771, 1772, 0, 0, 0, 1790, 0,
	1791, 1752, 0, 0, 0, 0, 0, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 1744, 1745,
	0, 1777, 1778, 1779, 1787, 1788, 1789, 0, 1784, 0,
	1767, 1794, 0, 0, 0, 0, 0, 1774, 1776, 0,
	1780, 1775, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 1790, 0, 1791, 1793, 0, 0,
	0, 0, 0, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 1766, 0, 0, 1767, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 1769, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	1745, 1785, 1777, 1778, 1779, 1787, 1788, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1780, 1775, 0, 1784, 0, 0, 1794, 0, 1747,
	0, 0, 0, 1774, 1776, 0, 0, 0, 1793, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 1791, 0, 0, 0, 0, 0, 0, 1761,
	1762, 0, 0, 0, 1746, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 1782, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 1758, 1759,
	1765, 1786, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749,
	1750, 1751, 1753, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1038, 0, 0, 0, 1769, 1770,
	1771, 1772, 0, 0, 0, 0, 0, 0, 1752, 1783,
	0, 0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760,
	0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 1794, 0,
	0, 0, 0, 0, 1774, 1776, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 1791, 0, 0, 0, 1768, 0, 0,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 1744, 1745, 1785, 1777, 1778, 1779, 1787, 1788, 1789,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 1775, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	1769, 1770, 1771, 1772, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 3174, 0, 0, 0,
	0, 0, 1744, 1745, 1785, 1777, 1778, 1779, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 1775, 0, 1784, 0, 3169,
	1794, 0, 1747, 0, 0, 0, 1774, 1776, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 3563, 0, 0,
	0, 0, 0, 1790, 0, 1791, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	1782, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755,
	1756, 1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 1769, 1770, 1771, 1772, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 1745, 0, 1777, 1778, 1779, 1787,
	1788, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 1775, 0, 1784, 0,
	0, 1794, 0, 1747, 0, 0, 0, 1774, 1776, 1773,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 1791, 0, 0, 0,
	1768, 0, 0, 1761, 1762, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 1782, 0, 0, 0, 0, 1785, 1763, 0, 0,
	0, 0, 0, 0, 1744, 1745, 1767, 1777, 1778, 1779,
	1787, 1788, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 1775, 0, 0,
	0, 3109, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1746,
	0, 0, 1769, 1770, 1771, 1772, 0, 0, 0, 1766,
	0, 0, 1752, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760, 0,
	1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754, 1784,
	0, 0, 1794, 0, 0, 0, 0, 0, 1774, 1776,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 1791, 0, 0,
	0, 1768, 0, 0, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 1769, 1770, 1771, 1772, 0, 0, 0,
	0, 0, 1782, 1752, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 1744, 1745, 1767, 1777, 1778,
	1779, 1787, 1788, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 1775, 0,
	1784, 0, 0, 1794, 0, 1747, 0, 0, 0, 1774,
	1776, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 1790, 0, 1791, 0,
	0, 0, 0, 0, 0, 1761, 1762, 0, 1781, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 1782, 0, 0, 0, 0, 3136, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 1783,
	0, 0, 0, 0, 1758, 1759, 1765, 1786, 1764, 1760,
	0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 1769, 1770, 1771, 1772, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 1744, 1745, 0, 1777,
	1778, 1779, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 1775,
	0, 1784, 0, 0, 1794, 0, 1747, 0, 0, 0,
	1774, 1776, 1773, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 1791,
	0, 0, 0, 1768, 0, 0, 1761, 1762, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 1782, 0, 0, 0, 0, 1785,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1783, 0, 0, 0, 0, 1758, 1759, 1765, 1786, 1764,
	1760, 0, 1757, 1755, 1756, 1748, 1749, 1750, 1751, 1753,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 1769, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 1758, 1759, 1765, 1786,
	1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750, 1751,
	1753, 1754, 1784, 0, 0, 1794, 0, 0, 0, 0,
	0, 1774, 1776, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	1791, 0, 0, 0, 1768, 0, 0, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 1744, 1745,
	1785, 1777, 1778, 1779, 1787, 1788, 1789, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 1758, 1759, 1765,
	1786, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749, 1750,
	1751, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 1769, 1770, 1771,
	1772, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 1794, 0, 0,
	0, 0, 0, 1774, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 1791, 0, 929, 0, 975, 0, 0, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 951, 0, 935, 934,
	0, 0, 0, 1783, 0, 0, 0, 0, 1758, 1759,
	1765, 1786, 1764, 1760, 0, 1757, 1755, 1756, 1748, 1749,
	1750, 1751, 1753, 1754, 0, 0, 936, 0, 0, 0,
	0, 939, 0, 0, 0, 1792, 983, 0, 0, 0,
	0, 0, 0, 0, 0, 948, 949, 0, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 0, 0, 974,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 0, 0, 0,
	0, 0, 933, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	952, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 980,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 977, 0, 0, 0, 1783, 0, 0, 0, 0,
	1758, 1759, 1765, 1786, 1764, 1760, 0, 1757, 1755, 1756,
	1748, 1749, 1750, 1751, 1753, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 938, 0,
	0, 0, 969, 970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 0, 981, 963, 0, 956, 954, 0,
	959, 0, 0, 0, 0, 0, 960, 0, 0, 931,
	0, 978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 971, 0, 961, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 0, 0, 0, 0, 0,
	0, 964, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
}

var sqlPact = [...]int{
	7786, -1000, -1000, -1000, -1000, 177, -1000, -1000, 172, 171,
	167, 166, 165, 164, 163, 162, 161, 155, 154, -1000,
	-1000, -1000, -1000, -1000, -1000, 153, -1000, -1000, 151, -1000,
	141, 140, 139, -1000, -1000, 138, -1000, 137, -1000, -1000,
	-1000, -1000, 136, 134, 133, 88374, 87830, 88911, 2210, 108934,
	95383, 1988, 79154, 108390, 78610, 107846, 2017, 10418, 107302, 2665,
	131, -1000, 106758, 130, 129, 128, -1000, 106214, -1000, 1813,
	-1000, 123, -1000, 7299, 63886, 122, 120, 116, 2310, 114,
	-1000, 113, 110, -1000, -1000, 106, -1000, 12060, 1508, -1000,
	100, 97, -1000, 7194, 93214, 96, 94, 2301, 90, 88,
	63342, 87, 86, 2218, 2751, -1000, -1000, 2062, -1000, -1000,
	85, 84, 83, 82, 81, 80, 79, 78, 77, 76,
	75, -1000, 72, 71, 69, 68, 67, -1000, 66, 65,
	63, -1000, 62, -1000, 61, 60, 59, 58, 54, 53,
	51, 47, 35, 34, 33, 32, 31, 23, 120832, -1000,
	1908, 1643, 1641, 1639, 1620, 1618, 978, 21, 20, 19,
	16, 14, 13, 12, 11, 10, 9, 7, 6, 4,
	3, 2, 1, -2, 121, -3, -4, -10, -12, -13,
	-15, -17, 2425, -1000, 1488, 872, 29487, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 114841, 109471, -19, -85, -26, -1000, 3206,
	992, 52442, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	455, 1986, 733, -1000, -1000, -1000, 105677, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2209, -18, -1000, 1949, -1000,
	-1000, -1000, -1000, -1000, 730, -1000, 2205, 174, 2153, -1000,
	-1000, -1000, 3251, 2381, 3639, 3637, 3636, 3635, 3634, 114304,
	1799, 3633, 2439, 3632, 3630, 3629, 3628, 3626, 3625, 3624,
	-1000, 87286, 1028, 86742, 86198, 3256, 105140, 85654, 104596, 72637,
	44549, 845, 3250, -1000, -1000, -1000, -1000, -1000, -1000, 109471,
	-1000, 1025, -1000, -1000, 3623, 3622, 2000, 728, 94839, -1000,
	1855, -1000, 923, 31200, -1000, 1243, -1000, 31200, 256, -1000,
	-1000, -1000, -1000, -1000, -1000, 3621, 3620, 3619, 3617, 3616,
	-1000, -1000, 78066, 22583, 77522, 76978, 104052, 22027, 85110, 84566,
	3613, 3612, 3611, 3610, 103508, 72081, 1024, 1411, -1000, -1000,
	-1000, -1000, -1000, -1000, -49, 69857, 3387, 109471, -1000, 255,
	-1000, -1000, -1000, -1000, -1000, -1000, 43966, 674, 43383, 753,
	42800, 522, -1000, -1000, -1000, -1000, 71525, -1000, 102964, 2374,
	3609, 3607, 1103, 3603, 3147, 1744, 3601, 1812, 1188, 3600,
	3595, 3591, 3586, 3585, 3579, 3575, 1430, 102420, 2856, 1480,
	101876, 1659, 70969, 1023, 84022, 88911, 2526, 101332, 1413, 1410,
	-1000, -1000, -1000, -1000, 2998, 2748, 2701, 1129, -1000, -1000,
	-1000, -1000, 55156, 8748, 8443, 10874, 100788, 57926, 88911, 88911,
	-1000, -1000, -1000, -1000, -1000, 42217, 427, 41634, 812, -1000,
	-1000, 55710, 2815, -1000, -1000, -1000, -1000, 41051, 395, 40468,
	795, 109471, -1000, 2854, 1895, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2483, 1614, 3404, 2663, 70413, 1981, 1375, 3221, 2997,
	2995, 1504, 2991, 3574, 2508, 2952, 2949, 2944, 2935, 2933,
	1603, 2478, 420, 28904, 2839, 1698, 39885, 1554, 1491, 2932,
	2928, 3442, 1940, 1976, 2029, 76434, 3572, 3570, 3185, 2918,
	2910, 2705, 2909, -1000, 2804, -1000, -1000, -1000, -1000, 1456,
	-1000, -1000, -1000, -1000, 79691, -1000, -1000, 1261, -1000, -1000,
	1261, -1000, -1000, -1000, -1000, -1000, 1327, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1488, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2018,
	-1000, 1984, -1000, -1000, 2391, 3182, 3182, 3182, 3244, 413,
	403, -1000, 121, -1000, -1000, 120144, -1000, -1000, 45120, 45120,
	45120, 45120, 45120, 45120, 45120, 2034, -1000, 726, -1000, -1000,
	791, -1000, 725, 590, -1000, -1000, -1000, -1000, -1000, -1000,
	723, -1000, -1000, -1000, -1000, -1000, -1000, 3387, -1000, 25418,
	-1000, -1000, -1000, 408, 721, 45120, -1000, -1000, 3469, 3464,
	868, -1000, 250, 942, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2853, 720, 718, -1000,
	717, 706, 703, 701, 699, -1000, -1000, -1000, 690, 682,
	681, 679, 676, 675, 673, 670, -1000, 1956, -1000, -1000,
	-1000, -1000, -1000, -1000, 635, 634, 634, 634, -1000, 1019,
	-1000, -1000, -1000, 271, 632, 253, 628, 627, 626, -1000,
	669, 668, 667, 665, 664, 663, 662, 659, 656, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1017, -1000, -1000, -1000,
	-1000, -50, 109471, -1000, 455, -50, -1000, -1000, 650, -1000,
	33496, 33496, 33496, -1000, -1000, 2202, 45120, -1000, 2351, -1000,
	-44, -44, 873, 54068, -1000, 51333, 873, 290, 806, 59554,
	-1000, 2799, -1000, -1000, 649, 249, -1000, -1000, -1000, -1000,
	23137, 2793, 109471, 109471, 88911, 88911, 88911, 3568, 3074, 45120,
	-1000, -1000, 67668, 109471, 89448, -1000, -1000, 3349, 64423, 67131,
	109471, 2850, 66594, 3567, -1000, -1000, -1000, -1000, -1000, 3051,
	3565, 3564, 3561, -1000, 109471, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 214, 3050, -1000, -1000, 92670, 214, 3049, -1000,
	214, 3047, -1000, 92133, -1000, -1000, 2181, 3046, -1000, -1000,
	218, 3043, -1000, -1000, -1000, 217, 3042, -1000, -1000, 246,
	-81, 3041, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 120144, -1000, -1000, -1000, 66050, -1000,
	3173, -1000, -1000, 109471, -1000, 45120, -1000, 3348, 1477, 73735,
	3304, -67, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2417,
	2400, 1147, 2229, -1000, 3091, 1447, -1000, 31200, 3133, -1000,
	-1000, -1000, 241, 23137, -1000, -1000, -1000, -1000, -1000, -1000,
	4646, 3040, 1395, -1000, 2226, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1903, 3034, -1000, 2048, 3032, 1872, -1000,
	-1000, 2620, -1000, 3163, -1000, -1000, 1797, 3029, -42, -1000,
	-1000, 2206, -1000, -1000, -1000, -1000, -1000, 1873, -1000, 989,
	3027, -1000, 83478, 57372, 55710, 69857, -57, -1000, -1000, -1000,
	-1000, -204, -1000, 21471, 120144, -1000, -1000, -1000, -1000, 1705,
	120144, 854, -1000, -1000, 3026, -1000, 120144, 708, -1000, -1000,
	3018, -1000, 2845, -1000, -1000, 2334, -1000, -1000, 3560, -1000,
	-1000, 3559, -1000, 3558, 3556, 3555, -1000, 1694, 1946, 3554,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 82941, 2200,
	-1000, -1000, 81853, 2843, -1000, 2331, 3303, -1000, 82397, 1022,
	-1000, 989, 2325, -1000, 91596, 957, 2322, -1000, 3553, 3255,
	2591, 989, 2321, -1000, -1000, -1000, -1000, -1000, 1001, -1000,
	61177, -1000, 61177, -1000, 1542, -1000, 113767, -44, 88911, 3387,
	-1000, -88, -1000, -1000, -1000, 992, -1000, 54612, -1000, 54612,
	94295, 73191, 979, 724, 62798, 120144, -1000, -1000, -1000, -1000,
	120144, -1000, -1000, -1000, -162, 2661, -1000, 73191, 56818, 120144,
	-1000, -1000, -1000, -1000, 120144, -1000, -1000, -1000, 73191, 81853,
	-1000, 100244, 81316, -1000, -1000, 1422, 2464, -1000, -1000, -1000,
	73191, 1285, 73191, 73191, 73191, -1000, 99700, -1000, -1000, 2076,
	1501, 3167, 1978, 88911, -1000, 1811, -1000, -1000, -1000, 3190,
	109471, -1000, -1000, 2841, -1000, 65506, 91059, -1000, 90522, -1000,
	89985, -1000, 88911, -1000, 88911, -1000, 3552, 3550, 3548, -1000,
	-1000, 3543, -1000, 3542, 3200, -1000, 120144, 3186, -1000, 3538,
	3293, 2839, 120144, -1000, 3006, 1648, 1637, 109471, -1000, -1000,
	109471, -1000, 109471, -1000, -1000, -1000, 1493, -1000, -1000, 2416,
	-1000, -1000, -1000, -1000, 88911, 1377, -1000, -1000, -1000, -1000,
	-1000, -1000, 2917, 3537, 1681, -1000, 1781, -1000, 2792, 3195,
	-1000, 1419, -1000, -1000, 225, -1000, -1000, -67, -1000, 113230,
	-1000, 2391, -1000, 109471, -1000, 2387, 2832, 2838, 1669, 2215,
	2518, -1000, 39302, 2492, 48546, 2224, 121, -1000, -1000, 121,
	121, 30629, -1000, -1000, 64423, 64423, 23137, 1360, 45120, 45120,
	45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120,
	45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120,
	45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120, 45120,
	45120, 45120, 45120, 2132, 45120, 1326, 45120, 45120, 45120, 45120,
	1692, -1000, -1000, 1924, 490, 2012, -1000, 3414, 3414, 3414,
	700, 700, 120587, 120587, 577, 3535, 791, -1000, 45120, -1000,
	73, 45120, 23693, -1000, 403, 9111, 2376, -1000, 402, 24276,
	-1000, -1000, -1000, 25418, 590, 38719, 45120, 1010, 120144, -1000,
	-1000, 1445, 3413, 20916, 2840, 2699, 647, 790, 578, 28321,
	27738, 27155, 26572, 572, 45120, 45120, 45120, 45120, 45120, 45120,
	45120, 45120, -1000, -1000, 3435, -1000, 3413, -1000, -1000, -1000,
	-1000, 3413, 1355, 1354, 3413, -1000, 3413, 3413, 9226, 9226,
	38148, 37565, 36982, 49117, 36399, 45120, 25989, 35816, 35233, -1000,
	109471, -50, 3347, 45120, 117, -1000, 118871, -1000, 117, 117,
	646, -91, 120144, 2463, 2463, 52984, 2350, 2089, 2089, 2089,
	-1000, 873, 16447, 873, 98619, 2098, 873, 873, 206, 235,
	398, 50791, 2351, 98619, 756, 645, -30, -31, -32, -1000,
	-1000, -35, -38, -1000, -1000, 88911, 642, 23693, 23137, 205,
	1948, -98, 2500, 2499, 2489, -1000, 2484, -1000, 1763, -99,
	1323, 88911, 109471, 3532, -107, -1000, 278, -104, -1000, 1305,
	204, 3413, -1000, -1000, -1000, -1000, -1000, 3527, 3521, -1000,
	1016, 640, 637, 772, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 635, 634, 634, 634, -1000, 271, 632, 253,
	628, 627, 626, -1000, -1000, -1000, -1000, -1000, 2787, 88911,
	109471, 3520, -204, 89448, -62, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 109471, -1000, -1000, -1000, 3519, -1000, 88911,
	-1000, -1000, 88911, 214, 3014, -1000, 88911, -1000, 88911, 209,
	2983, -1000, -1000, 109471, -1000, 88911, 88911, -1000, 109471, 109471,
	109471, 73191, 73191, 223, -1000, 88911, 880, -105, 1109, -67,
	-1000, -1000, -1000, 1261, -1000, 1821, -1000, -1000, -1000, -1000,
	-1000, -1000, 1441, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 868, -1000, -1000, -1000, -1000, -1000, -1000, 3431, 3424,
	-55, -1000, -1000, 23137, -1000, -68, 1628, 1887, 1302, -1000,
	75890, 2254, 3169, 3518, 2584, 3156, 1538, -1000, 1484, -1000,
	3277, 79691, 3316, 3332, 1311, -1000, 2784, -1000, -1000, 921,
	1655, 1679, 1239, 1236, 79691, 2048, -1000, 64423, -1000, 2548,
	3242, 1387, 1362, 1387, 1387, 1371, -1000, 79691, 1670, 1235,
	1233, 1231, 1900, 1883, -1000, -1000, 1952, -1000, 1229, 1227,
	833, 1859, -1000, -69, 3299, 3327, 1290, -1000, 2783, 1226,
	-1000, -1000, -1000, 3241, 88911, 23137, 1551, 1550, 1548, 1629,
	1225, -56, -1000, 3311, 1223, 1208, -1000, 5609, -1000, 73191,
	1846, 2979, 2660, 881, 2657, -1000, -1000, -1000, 881, -57,
	69857, 109471, 199, -1000, 73, 45120, 45120, 73, 45120, 73,
	3290, 2976, -1000, -1000, -1000, -1000, -1000, 3517, 1925, 2438,
	-1000, -1000, 623, 2311, 2782, 109471, 2525, -60, 88911, -1000,
	64969, 2975, 68212, 2048, 2309, -1000, -1000, 80772, -1000, 2973,
	455, 2298, -1000, 680, 3515, 2972, -1000, 112693, -1000, 3173,
	1345, 2971, 1067, 729, 3346, -1000, 729, 61714, -1000, 109471,
	-1000, -44, 7232, 74816, -106, -120, 387, -1000, 99163, 109471,
	1064, 75353, 109471, 3122, 986, 55710, -1000, 55710, -121, -162,
	2644, 1464, 979, 979, 881, -1000, 881, -1000, 88911, 2837,
	-1000, -1000, 73191, 979, 979, 979, -1000, -1000, -1000, -1000,
	3514, 3512, 3511, 3510, -1000, -1000, 987, 88911, 109471, 88911,
	-1000, 198, -1000, 109471, -1000, 109471, 109471, 88911, -1000, 987,
	109471, 987, 109471, 987, 109471, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 73, 45120, -1000, -1000, 3509, 1557, -1000, 2836,
	-1000, 2835, -1000, -5, -1000, -1000, -1000, -1000, -1000, -1000,
	1990, -1000, -1000, -1000, -1000, 88911, 88911, 88911, 88911, 109471,
	3105, -1000, 109471, 3103, 88911, -1000, 79691, -1000, 2387, 2832,
	-1000, -1000, -1000, -1000, -1000, -1000, 1363, 2167, -1000, 2458,
	-1000, 1512, -1000, -1000, -1000, 120144, 49671, -1000, -1000, 120144,
	1770, -1000, 47975, 47404, -1000, -1000, 1645, 88911, 2543, -1000,
	2543, -117, -1000, 118805, 2457, 88911, -1000, -1000, -1000, -1000,
	-1000, 919, 549, 549, 1337, 1337, 1337, 1337, 3276, 330,
	573, 938, 517, 517, 4699, 4699, 4699, 4699, 4699, 517,
	537, 700, 700, 537, 537, 537, 537, 537, 700, 700,
	700, 517, 517, 517, 120587, 120325, 8076, 45120, 45120, 1206,
	1898, 490, 6859, 45120, 6084, 6084, 6084, 6084, -1000, 1937,
	-1000, -1000, -1000, -1000, 2781, 619, 49117, 49117, -1000, -1000,
	-1000, -1000, 24847, 45120, -1000, -1000, -1000, -1000, 34650, -1000,
	-1000, 118171, -318, 386, -94, -11, -1000, 45120, 45120, 45120,
	377, -1000, 197, 45120, 109471, -1000, 15780, 755, -169, -1000,
	-122, 1386, -1000, 45120, -1000, -1000, 1205, -1000, 1203, 1202,
	1196, -1000, 618, 376, -1000, 196, -1000, 2065, 617, 616,
	45120, -1000, -1000, -1000, -1000, -1000, 117754, -1000, -1000, 117713,
	-1000, -1000, 117662, -1000, -1000, 117490, -1000, -1000, -1000, 119963,
	15197, 14974, 13839, 8348, 13748, 12891, -123, 373, -128, 370,
	916, 915, 369, 368, 365, -129, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -130, 358,
	-1000, 2779, -94, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 357, -1000, 356, -1000, 119872, -94, 352, 8253, -1000,
	49117, 49117, 49117, -1000, 349, -1000, 118443, -1000, 119691, 34079,
	34079, 34079, 348, 119510, 45120, -94, -131, -1000, -137, -1000,
	-1000, 497, -138, 1003, 33496, 51895, 23137, -1000, 1003, 1003,
	45120, -1000, 45120, 2473, -1000, -1000, -1000, -1000, 2472, 2329,
	2463, 52984, -1000, -1000, -1000, -1000, 98619, -1000, 3387, 2676,
	-1000, 98619, -1000, -1000, 109471, 455, -1000, 98619, 98619, 23137,
	873, -1000, 873, 98619, 557, -1000, -1000, -1000, -1000, -1000,
	347, 58468, -11, 193, 23137, 989, -1000, -1000, 2565, 2565,
	2565, 2565, -1000, -1000, 109471, 1194, -65, -211, -1000, 3367,
	-1000, 1975, -1000, 64423, -1000, 786, 1031, 23137, -1000, -1000,
	-1000, 612, -1000, 3413, 3413, -1000, 3413, 109471, 2776, 105,
	-1000, 99, 68212, 68212, 3508, -1000, -1000, 214, -1000, 88911,
	214, 214, -1000, 88911, 88911, 2181, -1000, 218, -1000, 217,
	-1000, -1000, -81, -1000, 1000, 31200, -1000, 1261, -1000, -1000,
	1523, -1000, 1934, -1000, 1338, -1000, -1000, -1000, -1000, 31200,
	-1000, 1995, 109471, 109471, 88911, -1000, 109471, -1000, 2070, 68212,
	-1000, 2297, 112156, 2278, 64423, 109471, -1000, -1000, 608, 937,
	2455, 2454, 1062, 109471, 109471, 2453, 111619, 111082, -1000, 3505,
	109471, 1985, 45120, 3240, 2112, 2346, 73, 73, -1000, 73,
	73, 73, -1000, 597, 1300, 88911, 88911, 109471, 68212, 88911,
	1841, -1000, -1000, -1000, -1000, -1000, 80228, -1000, -1000, 3433,
	3429, -1000, 1387, -1000, -1000, -1000, 1387, 2048, 1725, 109471,
	68212, 88911, 68212, 109471, 109471, -1000, 1623, 109471, 1414, -1000,
	833, 1983, 73, 73, -1000, 73, 73, 73, 596, 23137,
	1897, -1000, 2880, 109471, 3463, 110545, 3462, 109471, 109471, 109471,
	68212, 3183, 109471, 109471, 68212, 5609, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 69320, 1060, 989,
	1613, 1193, 1192, 79691, 55710, 985, 55710, 2600, -1000, -1000,
	20361, -1000, 120144, 120144, -1000, 120144, -1000, 64969, 109471, -1000,
	1021, 109471, 75353, 930, 2967, 60640, -204, 979, 73191, 88911,
	-60, 2525, 109471, -1000, -1000, 2048, 2954, 455, 2286, -1000,
	73191, 3345, 2941, 593, 3504, 3503, -1000, 88911, 2195, 2284,
	-1000, -1000, 110008, 3061, 833, 109471, 1003, 52984, 1876, -1000,
	59012, 1039, 109471, 1804, 93, -1000, -1000, -1000, -20, 109471,
	-1000, 801, -1000, -1000, 7232, 7232, 979, -220, 592, -1000,
	869, 863, 56264, 73191, -145, -1000, -1000, -1000, -1000, 2278,
	88911, 109471, 1263, 2589, 109471, -146, -1000, 191, 591, -1000,
	2730, -1000, -162, -1000, 986, 55710, 2773, 2770, -1000, -1000,
	999, -1000, 1399, 979, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -45, 109471, -204, -204, -61,
	-65, -1000, 987, -1000, 987, -1000, 987, -1000, 120144, -1000,
	-1000, 1547, 1546, 109471, -1000, 23137, 109471, 88911, 23137, 88911,
	2831, 2828, -1000, -1000, -1000, 109471, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1075, -1000, 1770, 2165, -1000, 590, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2401, -1000,
	-66, 30629, 887, -1000, -1000, 88911, -46, 45120, 45120, 6638,
	6279, 45120, 49117, 49117, -1000, 45120, 5867, -1000, -1000, -1000,
	-1000, -1000, 2767, 588, 45120, 64423, 6069, 5652, -1000, 346,
	11184, 537, -1000, 45120, -1000, 345, 32925, -1000, 119067, -76,
	-151, -1000, 17015, -94, -152, -1000, -1000, 784, -1000, 2959,
	-1000, 45120, 119248, 2300, 1917, 1733, 1566, 3413, 3461, 19806,
	-1000, 62256, 1005, 2121, 117293, -1000, -1000, -1000, -1000, 64423,
	64423, 45120, 45120, -1000, 45120, 45120, 45120, -1000, -1000, -1000,
	3413, 917, -1000, -1000, -1000, 917, -1000, -1000, 1387, -1000,
	1387, -1000, 45120, -1000, -1000, 2745, 45120, -1000, 64423, 64423,
	49117, 49117, 49117, 49117, 49117, 49117, 49117, 49117, 49117, 49117,
	49117, 49117, 49117, 49117, 49117, 49117, 49117, 49117, 49117, 2429,
	49117, 3407, 3407, 3407, -1000, 2822, 2745, 45120, 45120, 64423,
	344, 342, 339, -1000, 45120, -94, -1000, -1000, 7232, 587,
	-1000, 2386, -1000, 2696, -1000, 45120, -1000, -154, -1000, 2351,
	-1000, -1000, 2696, 2696, -157, 120144, 52984, 52984, -1000, 586,
	45120, 2468, -1000, -1000, 744, -319, -1000, 859, -1000, -1000,
	-1000, -1000, -1000, 455, -1000, -1000, -1000, 189, 98619, 98619,
	743, -1000, -159, -1000, -1000, -160, -1000, 3342, 338, 23137,
	-1000, 1003, 2585, -1000, -1000, -1000, -1000, -1000, -1000, -204,
	109471, 109471, 2133, 3460, -1000, 3427, 782, 737, 187, 3413,
	337, 336, 332, -204, 109471, 109471, 109471, -1000, -1000, -1000,
	-1000, 214, -1000, -1000, -1000, 209, -1000, -1000, -1000, -1000,
	2556, -1000, -67, -1000, -1000, -1000, 45120, -1000, -1000, 3168,
	1184, 1183, -1000, -1000, -1000, -1000, 2796, -1000, 2937, -1000,
	2276, -1000, 1044, -1000, 1742, -1000, 45120, 585, 2587, 584,
	580, 3502, 2013, 3499, 1063, 2934, 2181, 2931, 2181, -1000,
	-1000, -1000, 927, -1000, 120144, 2112, -1000, 576, 575, -1000,
	-68, 1590, 1736, 1182, 998, -1000, -1000, -1000, -1000, 45120,
	45120, 98082, -1000, 433, 3163, -47, -1000, -1000, -1000, 1612,
	1180, 1177, -1000, -1000, -1000, -1000, 2048, 1611, 1175, 1174,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 997, -1000, 2878,
	2875, 904, 109471, -1000, 994, -1000, -1000, -1000, -1000, 45120,
	-1000, -69, 1173, 3297, 2271, 88911, -1000, 2181, 2929, 1165,
	-1000, 1155, -1000, -1000, -1000, 3307, 3306, 1158, -1000, -1000,
	-1000, -1000, -1000, 68766, -1000, 109471, 68212, 88911, 1709, 881,
	-1000, 2390, 881, 985, 2739, -1000, 2521, 993, 88911, 3497,
	331, -166, -70, 64423, 3341, -1000, 2183, 559, 88911, 896,
	-1000, 3387, -1000, -1000, -1000, 991, -1000, 3298, 88911, 3340,
	2927, 989, 73, 88911, 3441, -1000, -1000, 3339, 88911, 2919,
	2193, 2263, 2428, 833, 74279, 989, 2103, -79, -1000, 1804,
	32342, 3160, -168, -1000, -1000, -1000, 1003, 61714, 52984, 45120,
	3496, -173, -1000, -1000, -1000, -1000, -1000, 95927, 95927, 73191,
	73191, 73191, 979, 109471, 109471, 75353, -1000, -1000, 563, 109471,
	109471, 561, -1000, 109471, 109471, 3495, 73191, -71, 555, -1000,
	856, 853, 851, -1000, -1000, -1000, -1000, -1000, 986, -1000,
	-162, 55710, 73, -1000, 2147, 88911, -1000, 19251, -1000, -1000,
	-1000, -1000, -1000, -1000, 987, -1000, -1000, 2005, 2220, 2005,
	1787, 1784, -1000, -1000, 2162, -1000, -1000, -1000, -1000, 2519,
	3178, 23137, 3280, 6084, 45120, 45120, 950, 4828, 2056, 6084,
	45120, 45120, 64423, 5169, -174, 45120, 45120, -1000, 45120, 736,
	120144, 3459, 45120, 311, 310, -1000, -1000, -1000, 3395, -1000,
	-1000, -1000, 120144, 45120, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 308, -1000, 175, -1000, -1000, -1000, 115378, -1000, 45120,
	306, 3239, -1000, 303, 302, 9976, 457, 117070, 117029, 116650,
	300, -1000, -1000, 298, 296, 120144, 2822, 120144, -1000, -1000,
	754, 754, 1346, 1346, 1346, 1346, 3407, 1089, 1117, 926,
	1056, 1056, 1056, 611, 1141, 1141, 1056, 1056, 1056, 2738,
	2409, 554, 6332, -1000, -1000, 120144, 120144, 294, -1000, -1000,
	-1000, -94, 288, 7232, -1000, 2683, 3238, 120144, -1000, 52984,
	2683, 2683, -1000, -1000, 2329, 109471, 120144, 52984, -1000, 2676,
	-1000, 17581, -1000, 23137, -1000, -1000, -1000, -1000, 3387, -1000,
	58468, -1000, 553, -1000, 74, -1000, 2585, -1000, 850, -1000,
	-1000, 73191, 73191, -204, -243, -1000, -1000, 579, 3494, 771,
	23137, 287, -1000, -1000, -1000, -204, -204, -204, -1000, -1000,
	-1000, 3116, 120144, 109471, 109471, 1470, 97545, 109471, 2915, -1000,
	2243, -1000, 1062, 116609, 53526, -1000, 53526, 109471, -1000, -1000,
	1836, 2460, 3491, 1094, -1000, 3207, 109471, -1000, 109471, -1000,
	-1000, -1000, 109471, 109471, 88911, 109471, -1000, 68212, 2899, -179,
	120144, -73, -1000, 849, -1000, 1373, -1000, 18696, 109471, 68212,
	88911, 109471, 68212, 88911, 2057, -1000, -1000, 2874, -1000, 2890,
	-182, 23137, -1000, 3458, 3456, 2914, 3213, -1000, 109471, 3452,
	109471, 88911, 3114, -1000, -1000, -1000, -1000, -1000, 1592, 1154,
	1152, 985, -74, 552, -1000, 846, -1000, -1000, 842, 985,
	-1000, 73191, 55710, 3490, 455, -1000, 2569, -1000, 93751, 2172,
	73, -1000, 3489, 96471, 551, -1000, 2144, -1000, 558, -1000,
	2378, 68212, 2048, 73, 88911, -1000, -1000, 455, 284, -75,
	-1000, 2924, 1055, 23137, 88911, 2911, 2426, 833, 74279, -1000,
	1345, 2518, -1000, -78, -1000, 633, 73, 2103, -1000, -79,
	120144, -1000, 841, -1000, -185, -1000, -1000, 282, -1000, 3112,
	3109, -1000, 2688, 53526, 550, 535, 109471, 3108, -1000, -1000,
	-187, 2867, 2867, 73191, 55710, 73191, -1000, 986, 881, -1000,
	2280, -1000, -1000, -1000, -1000, -1000, 23137, 1642, -1000, 521,
	520, -1000, -1000, -1000, -1000, 3178, 6084, 6084, 45120, 45120,
	45120, 6084, 5169, -192, -1000, 6084, 6084, -94, -1000, -1000,
	119067, -1000, -1000, -1000, 120144, -1000, 18141, 2014, -1000, 116386,
	-1000, 30629, -1000, -1000, 45120, 45120, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 49117, 2731, 516, 64423, -1000, -1000,
	281, 958, 45120, 46833, 2351, 958, 958, -1000, -193, -1000,
	-1000, -1000, 3387, 74, -1000, -1000, 3487, 23137, -1000, 73191,
	-1000, -1000, 3486, 767, -1000, 3484, -1000, -1000, -1000, -1000,
	-1000, 2625, 3334, -1000, 1854, -1000, 109471, -1000, 109471, -1000,
	23137, 109471, 2716, 1252, -1000, 937, 2450, 515, 49117, 88911,
	857, -1000, 3335, 2682, -198, -1000, 109471, 45120, 109471, -199,
	-205, 2240, -1000, -1000, 2222, 45120, -1000, -1000, 64423, 499,
	2181, 2181, -206, -208, -1000, -1000, -1000, 45120, 1149, 109471,
	31771, -1000, 3483, 3163, -1000, -1000, -1000, -1000, -1000, -1000,
	109471, -1000, 45120, 1143, -1000, -1000, -1000, 3449, 2181, 23137,
	2181, -1000, 2181, 3213, 1087, 109471, 68212, 88911, -1000, 2268,
	2268, 73191, 55710, -1000, -81, 985, -1000, 3333, 2527, 3481,
	-1000, -1000, -1000, -1000, 2447, -1000, -1000, 109471, 2446, 980,
	-1000, -213, -1000, 839, 838, 75353, 930, 934, -1000, -82,
	496, -1000, 836, -1000, -1000, -1000, -1000, 455, 3329, -1000,
	3445, 495, 494, 109471, 2192, 492, 23137, 3158, 833, 74279,
	-1000, 3061, 1804, -1000, 2245, 109471, 3155, -1000, 2518, 490,
	-1000, 979, 489, 483, 2833, 2833, -214, 53526, 53526, -215,
	481, 979, -1000, -221, -1000, -1000, -1000, -1000, -1000, -83,
	-1000, 826, 678, -1000, -1000, 88911, 88911, 45120, 45120, -1000,
	6084, 6084, 6084, -1000, 274, -1000, -1000, 2103, 3236, -1000,
	-84, 116189, 116017, 5273, 49117, 64423, -222, -1000, -1000, 109471,
	120144, -86, -1000, 120144, 480, 477, 400, -1000, -1000, -1000,
	538, -1000, -1000, -1000, 3480, -1000, 97008, 109471, -1000, -1000,
	1599, -1000, -1000, -1000, 109471, 2261, -1000, -1000, -1000, 1061,
	45120, 6332, 475, 45120, -1000, 3328, -1000, 2551, 2764, 1951,
	53526, -1000, 3178, -1000, 115966, -1000, 1051, 1875, -1000, -1000,
	120144, 3213, 53526, -1000, -1000, 474, 466, 120144, 465, 835,
	2723, -1000, -1000, -1000, -1000, 120144, 464, 3297, -1000, -1000,
	-1000, -1000, 2181, 88911, -1000, -1000, -1000, -1000, -224, -1000,
	-1000, 1914, 73, 2002, 2614, -1000, 2172, 461, -1000, -1000,
	2174, 2550, -1000, 96471, 31200, 31200, 266, 3325, 934, -1000,
	3390, -1000, 3096, 3096, 45120, 3324, 73, -1000, 3441, 53526,
	-1000, 88911, 53526, 2182, 1952, 2412, 74279, -1000, 2428, -1000,
	-1000, -229, 109471, 1804, -1000, -1000, 73191, 73191, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1051,
	-230, -231, -1000, 73191, -1000, -1000, 2280, -1000, 109471, -1000,
	109471, -1000, -1000, -232, -237, -1000, 1961, 45120, 30629, -1000,
	-1000, 5273, -238, -1000, -93, -1000, 3323, 46833, 3479, 3476,
	3475, -1000, -1000, -1000, 1853, -1000, -1000, -1000, 2908, 2686,
	115925, 2395, 109471, 15869, -1000, 2757, -1000, -1000, 2527, 460,
	-1000, -1000, -1000, -1000, 887, 109471, 2527, 2685, 88911, 1058,
	-240, 2005, 2005, 45120, 30058, 2043, 45120, -1000, -1000, 3213,
	-1000, 2719, 3426, -1000, 930, -1000, 2040, 109471, -1000, 3181,
	-1000, 3107, -1000, -1000, -1000, 2569, 73, -1000, -1000, -1000,
	-248, 120144, 73, -1000, 265, -249, 1055, -250, 88911, 1839,
	-1000, 833, -1000, 2426, 1003, -1000, -1000, -255, -256, 1951,
	1051, 1983, -257, -1000, -258, -264, -1000, -1000, 215, 46262,
	46262, 46262, -94, -117, -1000, 109471, 456, -1000, -1000, -1000,
	-1000, -1000, 2871, 984, -1000, 2177, 1792, 95, 1091, -1000,
	-1000, 1983, 109471, -1000, -1000, -1000, 983, 455, -1000, 45120,
	1051, -265, -1000, 1037, -267, -1000, 1034, -270, -1000, 2722,
	-1000, -272, 2181, 982, 3289, -1000, -1000, -1000, 2174, 88911,
	-273, -1000, -1000, 2352, -1000, 2527, 980, -1000, -1000, -1000,
	1051, 431, 1951, 428, 1461, 833, -1000, -1000, 1387, 3158,
	3070, 979, 979, 2527, 1951, 945, -1000, 979, -1000, -1000,
	-1000, 2912, -1000, 50225, 2190, 1782, 118352, 2912, 2912, -1000,
	-1000, 109471, 3264, -1000, 2180, 2179, 1471, -1000, -1000, -1000,
	-1000, -1000, -1000, 2682, -281, 3263, 2395, 120144, 2527, -1000,
	2005, 2607, -1000, 2005, 2721, -1000, 2024, -1000, -1000, -1000,
	1708, 3386, 2398, 426, -1000, 109471, 1756, 1739, 3474, 2002,
	2174, 1951, 53526, 2527, 53526, -1000, -1000, 109471, -1000, 1952,
	1283, -1000, -1000, 1983, 2527, 1003, 424, -1000, -1000, 1954,
	3356, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 827,
	-1000, 3086, -1000, 1074, 2053, 2053, 1003, -1000, 821, 2177,
	-1000, -1000, 419, -1000, 416, -1000, 2136, -1000, -1000, -1000,
	-1000, 109471, -1000, -1000, 3432, -1000, 930, -1000, 2527, -282,
	1983, -283, -1000, -204, 1839, -1000, 1534, 945, 1983, -1000,
	1766, -1000, -1000, 2092, 45691, 45120, -1000, 3370, -1000, -1000,
	2449, -1000, -1000, 45120, 2682, 45120, 45120, 60098, -290, -1000,
	2174, 1983, 1051, 945, 1951, 1461, 61714, 1003, 945, -1000,
	-1000, -1000, 120144, -1000, -1000, -1000, 120144, -1000, -291, -297,
	-220, 95927, 2163, 2398, 945, 1951, 1003, 2527, -1000, -275,
	-1000, 1003, 1983, 1142, -299, -1000, -1000, -1000, -1000, 1003,
	2527, -1000, 1983, -1000, -1000, -1000, -1000, 415, -1000, -1000,
	1983, 945, 45120, 945, 1003, -307, 1003, -1000, 1983, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4251, 4249, 4247, 4244, 4241, 4239, 4237, 4232, 4231,
	4228, 4226, 4219, 4218, 4217, 4216, 4215, 4212, 4211, 4210,
	4209, 4208, 4205, 4204, 4198, 4197, 4196, 4194, 4191, 4190,
	4189, 4188, 4185, 4184, 4182, 4180, 4179, 4178, 4177, 4175,
	4169, 4165, 4164, 4162, 4160, 4159, 4158, 4155, 4153, 4151,
	4149, 4148, 4147, 4146, 4132, 4125, 4124, 4123, 4122, 4121,
	4117, 4112, 4110, 53, 4107, 4106, 4104, 4102, 4101, 4100,
	4097, 4096, 4092, 4091, 4090, 4089, 4088, 4087, 4086, 4085,
	4075, 4074, 4073, 4068, 63, 4066, 260, 4065, 4063, 4061,
	4060, 4058, 4057, 4056, 4055, 4053, 4052, 4051, 4050, 259,
	4049, 153, 4048, 4045, 4044, 4043, 4042, 257, 4041, 4040,
	4039, 4034, 267, 4029, 4024, 4023, 4022, 4021, 4019, 4016,
	4015, 4014, 4012, 4011, 82, 194, 4010, 4009, 2798, 4004,
	4003, 4002, 4000, 3999, 3997, 3996, 3993, 3992, 3991, 240,
	3988, 256, 3985, 3984, 3983, 3982, 3981, 3980, 3979, 3976,
	3974, 3973, 3972, 3971, 3970, 3968, 3964, 3962, 3958, 3957,
	3956, 3955, 3954, 3953, 3950, 3948, 3946, 3944, 3943, 3942,
	3941, 3939, 3935, 3934, 3932, 3929, 3928, 3927, 237, 264,
	192, 3926, 3925, 255, 254, 3917, 3913, 3912, 3911, 3910,
	123, 6, 52, 3908, 3907, 80, 83, 77, 93, 97,
	94, 3904, 104, 3896, 120, 57, 3895, 12, 2, 206,
	236, 5677, 228, 3894, 3893, 3890, 235, 185, 3888, 230,
	3887, 3885, 3884, 3883, 69, 50, 170, 172, 151, 160,
	149, 3882, 147, 99, 74, 54, 42, 16, 65, 203,
	19, 3878, 248, 3, 130, 1, 34, 3876, 3875, 3874,
	3873, 3354, 126, 3871, 253, 231, 156, 3870, 3869, 3864,
	768, 3862, 3861, 46, 3859, 115, 84, 121, 15, 114,
	3857, 142, 36, 3851, 162, 71, 3850, 157, 100, 85,
	10825, 8239, 3848, 119, 72, 117, 66, 220, 208, 195,
	177, 158, 150, 189, 197, 196, 171, 161, 3847, 239,
	3846, 3322, 96, 174, 3843, 3842, 3841, 81, 186, 105,
	3840, 3839, 67, 11, 31, 4, 9, 136, 22, 18,
	24, 3837, 32, 113, 44, 23, 3835, 30, 3831, 3830,
	3829, 3827, 3825, 41, 148, 3823, 263, 3821, 86, 49,
	131, 3820, 25, 211, 3818, 222, 137, 3817, 3816, 244,
	201, 176, 3812, 68, 219, 3811, 3808, 3807, 3806, 3805,
	134, 8, 125, 3803, 3800, 140, 3799, 45, 233, 191,
	3796, 59, 3795, 3794, 166, 98, 133, 258, 179, 221,
	110, 218, 181, 225, 3793, 3792, 3791, 217, 3789, 3786,
	214, 143, 3785, 3784, 242, 269, 88, 43, 87, 226,
	78, 183, 152, 3781, 199, 3780, 3779, 262, 173, 209,
	7, 13, 90, 122, 3778, 5, 227, 145, 223, 109,
	3777, 6292, 2359, 2164, 3775, 3773, 139, 118, 76, 124,
	141, 250, 107, 3772, 3770, 2608, 3768, 3763, 3760, 3758,
	178, 3757, 3754, 3753, 132, 155, 175, 3750, 92, 73,
	47, 21, 116, 238, 265, 106, 213, 169, 241, 3747,
	3746, 3744, 190, 3742, 70, 128, 165, 188, 245, 55,
	3741, 168, 3739, 144, 897, 62, 146, 3737, 215, 3735,
	3734, 3731, 3730, 3729, 3727, 3726, 820, 229, 3725, 3724,
	3723, 33, 182, 3722, 249, 138, 164, 102, 61, 3721,
	95, 3717, 3720, 154, 3589, 58, 251, 193, 252, 3719,
	4294, 51, 3718, 0, 12197, 6376, 9137, 11106, 3716, 4802,
	3714, 3713, 3712, 204, 135, 3711, 3708, 3706, 103, 3704,
	79, 3703, 3702, 64, 3701, 29, 20, 17, 28, 26,
	600, 184, 3700, 3699, 108, 129, 111, 3698, 261, 224,
	3696, 3695, 3693, 3691, 91, 3690, 39, 3685, 40, 3684,
	3683, 48, 14, 38, 3682, 3680, 198, 3679, 210, 243,
	3678, 159, 3676, 3321, 127, 3674, 3670, 3669, 60, 56,
	246, 89, 3668, 277, 3667, 3276, 3666, 3665, 27, 3664,
	3663, 234, 202, 167, 207, 3662, 3660, 163, 3659, 3658,
	3657, 275, 3656, 3655, 3653, 37, 3651, 10, 3649, 3647,
	200, 3060, 3646, 3645, 35, 3644, 180,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 592, 592, 22, 22, 42, 42,
	23, 43, 16, 581, 581, 581, 581, 35, 24, 44,
	28, 28, 28, 28, 28, 193, 193, 193, 193, 21,
	21, 38, 38, 227, 227, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	576, 576, 229, 229, 228, 223, 223, 582, 582, 230,
	230, 230, 232, 232, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 475, 475, 475, 508, 508, 507,
	507, 507, 506, 506, 596, 596, 597, 597, 597, 597,
	597, 127, 127, 373, 373, 373, 52, 52, 52, 52,
	52, 571, 571, 195, 195, 195, 197, 197, 196, 196,
	196, 196, 75, 75, 587, 587, 588, 588, 586, 589,
	589, 589, 194, 194, 194, 123, 123, 123, 123, 123,
	123, 124, 124, 125, 125, 198, 198, 198, 200, 200,
	199, 199, 199, 199, 199, 199, 199, 199, 204, 15,
	15, 15, 15, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 103, 103, 510, 510, 511, 511, 189, 189,
	190, 190, 190, 190, 191, 191, 192, 192, 192, 66,
	66, 201, 201, 203, 203, 202, 202, 202, 202, 202,
	54, 54, 54, 54, 54, 54, 54, 55, 55, 55,
	55, 55, 56, 56, 56, 56, 56, 56, 57, 57,
	57, 57, 57, 57, 64, 64, 64, 64, 64, 180,
	180, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 72, 72, 72, 72, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 599, 599, 600,
	600, 601, 601, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 81,
	81, 335, 335, 300, 300, 82, 82, 82, 83, 83,
	84, 84, 68, 68, 569, 569, 350, 350, 466, 466,
	69, 577, 577, 577, 579, 579, 578, 578, 86, 86,
	372, 372, 87, 87, 87, 87, 87, 87, 88, 88,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 96,
	96, 96, 96, 96, 97, 97, 97, 94, 94, 94,
	91, 91, 91, 90, 90, 90, 95, 95, 95, 568,
	289, 289, 93, 93, 93, 92, 92, 92, 351, 351,
	98, 98, 98, 98, 301, 99, 99, 99, 99, 99,
	99, 99, 99, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 468, 468, 100, 100,
	100, 433, 433, 104, 104, 104, 388, 388, 105, 105,
	105, 105, 105, 106, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 573, 573,
	343, 343, 254, 254, 254, 254, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 185, 185, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 593, 593, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 500, 500, 359,
	359, 498, 498, 520, 520, 499, 499, 305, 305, 305,
	305, 305, 306, 306, 306, 509, 509, 509, 509, 509,
	509, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 186,
	186, 187, 188, 188, 188, 188, 188, 164, 164, 164,
	179, 179, 179, 179, 179, 179, 179, 167, 167, 167,
	151, 151, 142, 142, 142, 142, 142, 142, 142, 146,
	146, 146, 146, 146, 146, 146, 146, 143, 143, 153,
	153, 153, 153, 153, 147, 147, 148, 148, 148, 148,
	174, 174, 150, 150, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 144, 144, 144, 144, 155, 155, 155,
	155, 395, 395, 395, 178, 178, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 177, 177, 177,
	177, 177, 177, 590, 590, 591, 591, 171, 171, 171,
	171, 171, 171, 447, 447, 165, 165, 165, 165, 170,
	170, 170, 170, 173, 173, 173, 173, 378, 378, 162,
	162, 162, 163, 163, 163, 168, 168, 169, 166, 166,
	172, 172, 172, 172, 145, 145, 145, 145, 603, 603,
	603, 175, 175, 161, 161, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 604, 604, 157, 157,
	157, 156, 156, 156, 156, 159, 159, 160, 160, 160,
	160, 160, 160, 158, 149, 570, 570, 566, 566, 566,
	566, 566, 566, 566, 566, 567, 567, 567, 567, 572,
	572, 109, 109, 109, 109, 109, 119, 119, 119, 119,
	119, 110, 110, 110, 110, 110, 112, 112, 111, 111,
	111, 111, 76, 76, 76, 76, 76, 14, 14, 14,
	77, 77, 245, 245, 207, 207, 207, 324, 324, 208,
	208, 313, 313, 313, 313, 205, 205, 206, 206, 78,
	78, 605, 605, 605, 583, 583, 583, 584, 584, 584,
	584, 584, 584, 307, 307, 308, 308, 413, 413, 413,
	413, 413, 311, 311, 311, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 314, 314, 231, 231, 231, 322,
	323, 323, 315, 315, 321, 320, 320, 319, 319, 318,
	318, 316, 317, 317, 317, 326, 326, 325, 328, 328,
	327, 412, 529, 529, 531, 531, 531, 531, 531, 531,
	531, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 396, 396, 606, 606, 527, 527, 527,
	528, 523, 523, 524, 524, 524, 524, 524, 309, 309,
	310, 310, 310, 310, 525, 526, 341, 341, 451, 530,
	530, 532, 532, 534, 607, 607, 607, 607, 607, 607,
	608, 608, 608, 411, 411, 410, 410, 333, 333, 535,
	535, 535, 535, 536, 536, 536, 536, 536, 539, 538,
	537, 537, 537, 537, 537, 80, 80, 80, 375, 375,
	374, 374, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 182, 182, 257,
	257, 74, 74, 74, 12, 12, 12, 585, 585, 585,
	79, 79, 79, 79, 79, 79, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 575, 575, 574, 574,
	258, 258, 610, 610, 85, 85, 85, 85, 85, 85,
	85, 85, 469, 469, 470, 470, 73, 73, 73, 73,
	73, 397, 397, 394, 394, 393, 393, 340, 340, 449,
	449, 449, 450, 262, 262, 263, 263, 224, 224, 224,
	30, 29, 20, 20, 25, 25, 26, 26, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 27, 27, 46,
	46, 46, 46, 47, 47, 47, 47, 50, 50, 51,
	51, 45, 45, 45, 45, 48, 48, 41, 41, 594,
	594, 595, 595, 115, 115, 120, 120, 120, 120, 120,
	121, 121, 121, 121, 122, 122, 122, 122, 131, 131,
	181, 181, 181, 181, 181, 181, 181, 53, 53, 53,
	53, 65, 65, 65, 65, 129, 612, 612, 612, 130,
	130, 130, 611, 611, 255, 255, 407, 407, 408, 408,
	613, 613, 409, 409, 409, 409, 409, 248, 247, 249,
	249, 250, 250, 71, 71, 71, 240, 240, 239, 237,
	237, 512, 512, 242, 242, 242, 243, 243, 233, 233,
	234, 234, 235, 235, 236, 236, 246, 246, 614, 614,
	107, 107, 107, 184, 184, 299, 299, 299, 404, 404,
	404, 334, 334, 269, 269, 406, 406, 406, 406, 371,
	371, 371, 183, 183, 348, 348, 361, 361, 362, 362,
	463, 463, 363, 113, 113, 114, 114, 128, 128, 211,
	211, 209, 209, 209, 209, 209, 209, 209, 209, 216,
	216, 217, 217, 218, 218, 219, 220, 220, 220, 220,
	352, 352, 221, 221, 221, 210, 210, 210, 212, 212,
	212, 212, 212, 212, 212, 215, 215, 215, 215, 222,
	222, 222, 214, 214, 546, 546, 546, 548, 548, 550,
	550, 549, 549, 545, 545, 547, 547, 609, 609, 377,
	377, 377, 331, 332, 329, 329, 330, 330, 338, 338,
	336, 337, 337, 339, 339, 448, 448, 448, 225, 225,
	225, 368, 368, 368, 368, 369, 369, 400, 400, 398,
	398, 398, 398, 399, 399, 401, 401, 401, 402, 402,
	403, 403, 365, 365, 366, 366, 367, 367, 367, 367,
	429, 429, 213, 213, 213, 345, 345, 345, 346, 346,
	419, 419, 419, 419, 419, 419, 420, 420, 418, 418,
	418, 418, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 453, 454, 454, 347, 347, 455, 405, 405, 564,
	564, 564, 565, 565, 446, 446, 456, 456, 456, 456,
	456, 456, 444, 444, 445, 445, 464, 465, 465, 381,
	381, 381, 381, 379, 379, 382, 382, 382, 382, 382,
	380, 380, 457, 457, 457, 457, 370, 370, 458, 458,
	458, 458, 459, 460, 460, 461, 461, 414, 415, 415,
	471, 471, 471, 471, 473, 344, 344, 344, 344, 344,
	522, 521, 521, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 488, 488, 488, 488, 488, 488,
	488, 474, 474, 474, 474, 474, 478, 478, 478, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	479, 479, 484, 484, 485, 485, 485, 480, 481, 486,
	486, 486, 486, 615, 615, 490, 490, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 476, 476, 476, 483,
	483, 483, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 389, 389, 391, 391, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 423, 423, 423, 423,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 540, 540, 540, 540, 540,
	540, 540, 540, 425, 425, 543, 543, 544, 544, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 551, 551,
	552, 552, 554, 554, 555, 555, 556, 557, 557, 557,
	558, 559, 559, 553, 553, 560, 560, 560, 560, 561,
	561, 562, 562, 562, 562, 562, 563, 563, 563, 563,
	563, 435, 435, 436, 436, 442, 442, 442, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 259, 259, 259, 259, 259, 357,
	357, 355, 355, 355, 358, 358, 356, 356, 354, 354,
	353, 353, 432, 432, 430, 430, 434, 434, 383, 383,
	489, 489, 489, 489, 489, 489, 489, 489, 384, 384,
	384, 392, 385, 385, 386, 386, 386, 386, 386, 426,
	427, 387, 387, 387, 428, 428, 437, 441, 441, 440,
	439, 439, 438, 438, 416, 416, 417, 417, 364, 364,
	616, 616, 360, 360, 462, 462, 462, 462, 303, 303,
	349, 349, 302, 302, 294, 294, 295, 295, 295, 295,
	342, 342, 443, 443, 491, 491, 492, 492, 493, 493,
	494, 494, 495, 496, 497, 431, 431, 279, 278, 266,
	267, 277, 276, 275, 265, 268, 272, 273, 274, 270,
	271, 285, 284, 283, 238, 241, 290, 291, 291, 293,
	293, 292, 292, 281, 282, 467, 264, 296, 296, 297,
	297, 297, 298, 298, 298, 298, 260, 260, 261, 261,
	286, 286, 287, 288, 288, 280, 280, 280, 251, 251,
	251, 252, 252, 253, 253, 505, 505, 502, 502, 502,
	503, 503, 503, 504, 504, 504, 504, 501, 501, 501,
	501, 501, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	514, 514, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	516, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 12, 15, 3, 1, 0, 4, 3,
	0, 1, 1, 4, 4, 5, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 5, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 585, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 32, 31, 100, 80, 154,
	128, 137, 201, 380, 422, 433, 394, 142, 414, 399,
	-136, -137, 450, -53, -65, -130, -129, 73, 129, 408,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -598, 102, -547, -89,
	-92, -122, -602, 161, 219, -110, -111, 363, -117, -118,
	416, -120, -121, 418, 162, -60, -59, 156, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 455, -169,
	515, 49, 469, 82, 146, 426, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 415, -212, -210, 582, 530, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 551, 560, -215, -213, -214, -222, 442,
	538, 489, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 168, 228, 327,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 128,
	129, 132, 127, 131, 133, 135, 136, 137, 140, 141,
	142, 144, 145, 147, 148, 149, 151, 152, 154, 155,
	156, 159, 157, 497, 158, 160, 161, 162, 163, 166,
	174, 175, 176, 181, 183, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 325, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 324, 329, 330,
	333, 216, 335, 336, 339, 357, 343, 344, 345, 348,
	349, 352, 355, 356, 358, 359, 360, 361, 362, 363,
	364, 365, 367, 368, 370, 371, 372, 374, 375, 376,
	378, 380, 381, 383, 384, 386, 387, 388, 389, 390,
	391, 392, 394, 396, 395, 397, 399, 401, 402, 403,
	408, 414, 410, 411, 412, 413, 415, 416, 417, 418,
	420, 421, 422, 424, 425, 426, 427, 429, 431, 432,
	435, 436, 452, 453, 471, 433, 434, 437, 438, 439,
	440, 441, 445, 443, 444, 446, 447, 448, 450, 451,
	454, 455, 457, 458, 459, 460, 461, 462, 465, 467,
	468, 469, 488, 470, 472, 476, 477, 478, 479, 473,
	474, 487, 481, 482, 484, 485, 490, 491, 492, 493,
	494, 495, 496, 498, 500, 508, 509, 510, 512, 515,
	516, 517, 518, 506, 520, 521, 524, 525, 526, 529,
	527, 528, 530, 532, 535, 536, 537, 543, 542, 544,
	547, 552, 553, 555, 556, 557, 36, 50, 51, 54,
	56, 58, 69, 70, 71, 75, 124, 125, 153, 164,
	165, 177, 190, 191, 203, 205, 213, 214, 215, 236,
	237, 239, 244, 266, 332, 334, 350, 354, 369, 373,
	377, 379, 393, 428, 463, 475, 480, 501, 502, 503,
	504, 511, 513, 538, 539, 540, 545, 554, -301, 2,
	-281, 341, -274, 2, -251, -251, 380, 28, 2, 28,
	368, 444, 492, 494, 2, -573, -343, 2, 28, -254,
	-251, 102, 201, 442, -274, 2, -573, -343, 25, 2,
	-251, 2, 355, 22, 27, 66, 77, 98, 140, 163,
	185, 188, -601, 357, 387, 431, 446, 487, 498, 512,
	2, 542, 287, 443, 489, 228, 120, 517, 437, -585,
	435, 436, 355, 385, 424, 204, 531, -255, 2, 433,
	-251, 287, 2, 585, 94, 277, 74, 428, 447, -139,
	509, -138, 501, 437, -140, -500, 2, 309, -251, 585,
	585, 585, 28, -264, -251, 489, 228, 437, 120, 485,
	585, 2, 489, 360, 542, 443, 120, 390, 228, 517,
	188, 140, 27, 126, 437, -585, 287, -571, 2, -566,
	4, -517, -513, -295, -294, 489, 495, 120, -288, -280,
	575, -287, 585, 585, 585, 2, 247, 248, 389, 388,
	447, 448, 585, 585, 585, 585, 435, 2, 163, 22,
	27, 66, 93, 98, 126, 185, 188, 346, -599, 357,
	387, 446, 487, 491, 498, 512, -584, 470, 68, 413,
	437, -583, -585, 287, 517, 140, -393, 120, 277, 199,
	525, 494, 492, 523, 132, 235, 528, 527, 585, 585,
	-101, 2, 582, 32, 31, 142, 450, -204, 489, 240,
	2, -251, 585, 585, 2, 247, 248, 435, 436, 585,
	585, 186, -566, 2, 585, 585, 2, 247, 248, 435,
	436, 240, 2, 68, 439, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 2,
	-179, 447, 470, 210, 47, 46, 74, 28, 386, 79,
	361, 121, 148, 518, 202, 228, 229, 255, 93, 94,
	-395, 44, 248, 247, 436, -590, 435, -447, 490, 438,
	444, 484, 259, 433, 509, 102, 532, 425, 557, 390,
	391, 482, 403, 278, 157, 4, 120, 309, 449, 501,
	277, 432, 364, 84, -609, 2, 489, -611, 2, 509,
	509, 2, -611, 2, -611, 2, -611, 2, -612, 509,
	554, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, -210, -212,
	-211, 585, 585, 585, 585, 585, 585, 585, -179, 447,
	2, 74, 28, -336, -338, 522, 238, 150, 347, -209,
	-211, 2, -546, -498, 2, -421, -520, -423, 573, 574,
	566, 486, 67, 326, 558, -435, 126, 523, 341, -519,
	-424, -437, 153, 428, -358, 8, 9, 5, 6, 7,
	-260, -425, -431, 514, 167, 331, -298, 586, 10, 582,
	-543, -211, -436, 37, 205, 65, -502, -297, -261, -474,
	239, -296, -280, -540, -541, 4, -513, -514, -503, -477,
	-485, -481, -482, -488, -251, -516, 77, 111, 112, 110,
	115, 114, 280, 279, 116, 113, 449, 531, 66, 36,
	213, 214, 244, 332, 215, 75, -542, 141, -515, 236,
	237, 463, 51, 393, 177, 125, 124, 334, 56, 54,
	539, -486, 122, 501, 502, 503, 504, 190, 191, 58,
	164, 165, 354, 377, 480, 511, 513, 203, 266, 43,
	106, 187, 234, 217, 243, 245, 249, 267, 270, 310,
	323, 328, 351, 353, 423, 456, -615, 540, 475, 69,
	70, -548, 395, -549, -274, -548, 585, 585, 587, 585,
	-329, -331, -332, 2, 28, 138, 582, 2, -452, 2,
	-453, -457, -211, 260, -456, 582, -454, 580, -281, 342,
	-544, 429, -540, -541, -260, -280, -297, 4, -513, -515,
	584, -333, 582, 120, 489, 78, 228, 163, -388, 582,
	-251, 28, 341, 505, 587, -330, 384, -433, 582, 341,
	186, 344, 60, 291, 2, 2, 2, 2, 2, 213,
	-251, 489, 119, 2, 258, 2, 2, 2, 2, 2,
	2, 2, -351, 213, 2, -281, 542, -351, 213, 2,
	-351, 213, 2, -394, 2, 87, -265, 213, 2, -251,
	-289, 213, 2, -284, -286, -293, 213, 2, -291, -251,
	-511, 213, 2, -510, -505, 10, -504, 5, 4, -513,
	-517, -514, -516, 77, -421, 2, -128, 2, 60, -251,
	542, 2, 2, 452, 2, 582, -139, 71, 509, 43,
	447, -408, 2, -409, -247, -248, -249, -464, -250, 246,
	383, 392, 561, 130, 326, 557, -498, -593, 186, 565,
	505, -498, -359, 584, 2, 2, 2, 2, 2, 2,
	-457, 213, -281, 2, -278, -501, 4, -513, -517, -514,
	-518, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 126, 130, 134, 138,
	139, 143, 146, 150, 167, 169, 182, 185, 186, 201,
	204, 207, 220, 233, 238, 240, 260, 264, 271, 279,
	280, 326, 331, 337, 341, 342, 346, 347, 366, 382,
	398, 419, 442, 449, 466, 483, 489, 499, 505, 507,
	514, 522, 523, 531, 533, 541, 546, 548, 549, 550,
	551, -519, 2, -457, 213, 2, -283, 213, -457, -286,
	2, -265, 2, -277, -501, 2, -302, 213, -281, -282,
	-286, -284, 2, 2, 2, 2, 2, -291, 2, -510,
	213, 2, 542, 240, 505, 587, -349, -294, -295, -497,
	8, -342, -251, 584, -421, 2, -128, -112, 2, 182,
	-421, 213, 2, -128, 213, 2, -421, 213, 2, -128,
	213, 2, -587, 2, -510, 213, -251, 2, 291, 2,
	2, 512, 2, 98, 489, 119, 2, 412, -600, 431,
	516, 2, 2, 2, 2, 2, 2, 2, 489, -270,
	2, -251, 182, 473, -291, 213, -292, 2, 443, -610,
	395, -510, 213, 2, 542, -284, 213, 2, -284, 228,
	242, -265, 213, 2, 494, 492, 494, 492, 186, 2,
	240, 2, 240, 2, -458, 2, -459, -453, -460, 580,
	342, -468, 2, -467, -504, 538, -101, 582, -101, 582,
	447, 582, -510, -281, -281, -421, 2, -128, -112, 2,
	-421, 2, -128, 2, -125, -510, -124, 582, 186, -421,
	2, -128, -112, 2, -421, 2, -128, 2, -204, 182,
	2, 120, 489, -179, 2, 182, 533, 2, 8, 2,
	220, -510, 438, 391, 174, 2, 452, 2, 453, 74,
	-395, 557, 74, 186, 2, 186, 2, -378, 2, 551,
	186, 2, 2, -570, 2, 341, 186, 2, 186, 2,
	186, 2, 186, 2, 186, 2, -178, 448, 510, 488,
	388, 248, 2, -128, 548, -112, -421, 548, 2, -591,
	182, 436, -421, 2, 508, 257, 158, 186, -378, 2,
	186, 2, 186, 2, 5, 2, 389, 471, 2, 246,
	383, 471, 2, -281, -603, 28, 2, 489, 542, 443,
	2, 2, 88, 89, 186, 2, 186, 2, 200, 186,
	2, 186, 557, 2, -370, -457, -407, -408, -407, 505,
	-336, -338, -179, 452, 2, -216, -368, -218, 182, -398,
	-399, -219, 271, 169, 337, -220, -377, 28, 138, -377,
	-377, 60, 583, 583, 11, 12, 76, 41, 573, 574,
	575, 576, 180, 577, 578, 571, 572, 570, 563, 564,
	568, 252, 253, 95, 567, 565, 86, 285, 430, 170,
	171, 172, 173, 409, 226, 34, 227, 14, 15, 16,
	33, 346, 270, 558, 217, 456, 566, 17, 18, 19,
	243, 245, 328, 50, 220, -259, -304, -421, -421, -421,
	-421, -421, -421, -421, 353, 582, -364, -416, 580, -211,
	582, 582, 582, -497, -211, -421, -435, 583, -356, 582,
	-211, -435, -430, 582, 428, 580, 582, -438, -421, 5,
	5, 5, 582, 584, -551, 552, 182, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 379, -479, 582, -478, 582, -478, -478, 543,
	-476, 582, 560, 553, 582, -476, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 543,
	587, -548, -333, 582, -360, -462, -421, 575, -360, -360,
	341, -353, -421, 106, -381, 249, 310, 187, 267, 423,
	234, -418, 586, -418, -446, 560, -211, -454, -280, -211,
	-456, 582, -452, -446, -102, -497, -86, -99, -107, -128,
	-141, -183, -184, 575, -281, 582, 186, 582, 584, -501,
	186, -342, -265, -281, -296, -297, -302, 2, 137, -353,
	-566, 517, 437, 443, -342, -254, 38, -432, -471, -472,
	-522, 586, -521, -474, -484, -480, -483, 369, 373, -503,
	54, 539, -486, 239, 4, -513, -515, 236, 237, 463,
	51, 393, 177, 125, 124, 334, 56, 501, 502, 503,
	504, 190, 191, 58, 540, 475, 69, 70, -566, 517,
	437, 443, -342, 182, -508, 2, -507, -506, 116, 449,
	-504, 5, 2, 153, 2, 2, 2, -251, -230, 587,
	64, 417, 153, -351, 213, -230, 153, -230, 153, -303,
	213, -302, -230, 153, -230, 587, 153, -230, 587, 153,
	584, 587, 153, -508, 2, -394, -500, -353, 38, -408,
	2, 126, -506, -613, 587, 269, -306, 284, 325, 209,
	342, 555, 335, 130, -509, 5, 4, -431, -443, 126,
	277, 239, -491, -493, 8, -492, 9, -494, 573, 574,
	-499, -498, 109, 584, -501, -227, 410, 450, 356, -226,
	24, 29, 142, 230, 313, 536, 159, -319, 231, -316,
	360, 153, 467, 526, -580, -581, 434, 496, 497, 90,
	335, 450, 356, 410, 153, -374, -376, 38, 118, 313,
	355, 61, 223, 289, 290, 469, 545, 153, 450, 356,
	410, 356, 24, 142, -242, -239, 450, -581, 99, 410,
	481, 382, -581, -229, 467, 526, -580, -581, 434, 410,
	-228, -321, -316, 360, 153, 586, 24, 142, 410, 450,
	356, -596, -597, 29, 410, 356, -574, -545, 551, 153,
	-457, 213, -588, -124, 261, 5, 10, -510, -124, -349,
	587, 587, -501, 575, 436, 435, 153, 153, 153, 153,
	182, 326, 2, 2, 2, 2, 2, 188, -583, -601,
	2, 2, -281, 213, -335, 341, -569, -350, 489, -281,
	182, 326, 43, -283, 213, 2, -286, 542, -574, 326,
	-285, 213, -281, 38, 582, 326, 2, -394, 2, 228,
	-545, 326, -458, -299, -281, -453, -299, 450, -274, 38,
	-418, -281, 583, 587, -468, -468, -510, -192, 551, 186,
	102, 582, 582, -204, -465, 587, -464, 220, -511, -125,
	-510, 413, -510, -569, -265, 2, -281, 2, 489, 250,
	-510, -192, 220, -510, -510, -510, -500, 28, 453, 2,
	-178, 448, 510, 89, 453, 2, -281, 489, 120, 228,
	80, -251, -572, 182, -567, 424, 437, 517, -566, -281,
	120, -281, 120, -281, 120, -281, -281, 2, 2, 2,
	2, 2, 85, 85, 2, 46, -591, 182, 2, 508,
	2, 508, 2, -251, -251, -251, 470, 269, -281, 490,
	-604, 2, 186, 182, 2, 489, 228, 489, 228, 120,
	186, 74, 120, 28, 489, -230, 587, -255, -216, -368,
	-500, -369, -368, -217, -216, -219, 182, 392, 527, 313,
	454, 254, -399, -398, 28, -421, -403, 176, 312, -421,
	-401, -423, 573, 574, -492, -494, -352, 335, -210, -210,
	-210, -339, -448, -421, 382, 228, -473, -471, -471, -279,
	-501, 501, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, 270, 217, 456,
	50, 220, -421, 505, -421, -421, -421, -421, 307, 326,
	331, 514, 167, 524, 138, 335, -616, 483, 40, -428,
	-211, -357, 582, -442, 35, 466, 28, -435, 582, 2,
	-416, -421, -417, -354, -353, -353, 583, 541, 28, 138,
	575, 2, 583, 587, 38, 583, -421, -354, -434, -430,
	-353, -441, -440, 548, -389, -390, 556, 294, 123, 211,
	292, -391, 441, -495, 8, -501, 575, -552, 175, 204,
	582, 583, 2, 583, 2, 583, -421, 2, 583, -421,
	2, 583, -421, 2, 583, -421, 2, 583, 2, -421,
	-421, -421, -421, -421, -421, -421, -353, 8, -495, -495,
	501, 501, -495, -495, -495, -487, 369, 370, 371, 372,
	272, 273, 274, 275, 373, 374, 375, 376, 299, 300,
	301, 302, 295, 296, 297, 298, 303, 304, 305, 306,
	195, 196, 197, 198, 191, 192, 193, 194, -487, -383,
	2, -489, -353, 4, 556, 294, 123, 211, 292, 441,
	5, -383, 2, -384, 2, -421, -353, -385, -422, -423,
	573, 574, 566, -435, -386, 2, -421, -354, -421, 57,
	264, 507, -387, -421, 186, -353, -353, 2, -353, 2,
	-549, 38, -353, -345, 587, 186, 38, 4, -345, -345,
	582, 583, 587, -382, 208, 288, 283, 242, -382, -452,
	-381, 249, -379, 351, -379, -379, -446, -266, 580, 588,
	-501, -446, -445, -444, 38, -274, 348, -446, -446, 584,
	583, -445, 581, -564, 582, 585, 585, 585, 585, 585,
	-281, 582, -353, -501, 584, 472, 2, 583, 243, 243,
	243, 243, 429, 583, 505, -568, -289, -293, 2, 551,
	-101, 343, 583, 587, -344, 37, 580, 584, -495, 2,
	2, -490, 543, 582, 582, -390, 582, 186, -568, -293,
	2, -343, 587, 505, -251, 2, -281, -351, -230, 153,
	-351, -351, -230, 587, 153, -265, -284, -289, -291, -293,
	-251, -510, -511, -230, -285, -593, 583, 509, -409, -305,
	392, 465, 411, 445, 485, 8, 9, 8, 9, 587,
	-501, 587, -594, 93, 505, 78, 437, -244, 278, 505,
	-412, 213, 78, -523, -268, 93, -524, -251, 72, 523,
	382, 185, 151, -594, 93, 382, -594, 93, 2, 230,
	93, 450, 470, 28, 60, -457, 41, 41, 28, -592,
	324, 265, 547, 186, 557, 489, 228, 437, 505, 505,
	-457, -376, -471, 118, 289, 290, 60, -496, -491, 573,
	574, -496, 60, -496, -496, -496, 551, -283, -457, 437,
	505, 505, 505, 401, 401, -239, 505, 505, -614, 565,
	401, 587, 41, 41, 28, -592, 324, 265, 186, 505,
	-302, -266, 537, 42, 537, 42, 537, 505, 42, 437,
	505, 587, 42, 505, 505, -575, -256, 105, 319, 282,
	320, 97, 316, 96, 315, 103, 317, 104, 318, 544,
	329, 63, 314, 293, 321, -257, -258, 362, 535, -510,
	450, 356, 410, 153, 220, -465, 220, -465, -294, -251,
	584, -128, -421, -421, -128, -421, -128, 46, 153, 2,
	-610, 258, 582, -309, 326, 186, -342, -466, 240, 587,
	-350, -566, 153, -507, -375, -374, 326, -285, 213, 2,
	153, -333, 326, 147, 582, 390, 2, 153, -267, 213,
	-252, -251, -394, -233, 493, 153, -372, 533, -404, -128,
	582, 126, 38, -404, -361, -362, -463, -363, -268, 582,
	-274, -418, -101, -467, 583, 583, 583, -191, 345, -190,
	-251, 5, -204, 533, -308, -413, -412, -527, -528, -523,
	270, 228, 523, 242, 168, -334, -269, -268, 119, -198,
	551, -124, -125, 583, -465, 220, 473, -192, -192, -465,
	-465, -281, 182, -510, -192, -192, -192, 2, 2, 2,
	2, -378, -281, -265, -302, -281, 584, -342, -342, -293,
	-289, -378, -265, -378, -265, -378, -265, -128, -421, 2,
	447, 182, 182, 584, -378, 390, 120, 489, 360, 228,
	-281, -302, -281, -302, -265, 120, -265, 121, -281, -457,
	-369, -217, 342, 254, 454, -401, -402, -423, 428, 429,
	-402, 428, 429, 8, 9, 8, 9, -221, 458, 330,
	-351, 587, -224, 39, 134, 254, -281, 557, 149, -421,
	-421, 505, -616, 483, -428, 149, -421, 307, 331, 514,
	167, 524, 138, 335, 186, 582, -422, -422, 583, -355,
	-421, -421, 581, 590, 583, -338, 587, -336, -421, -353,
	-353, 583, 584, -353, -342, 581, 581, 587, 583, -439,
	-440, 143, -421, 505, 505, 505, 505, 582, 583, 584,
	-557, 352, 582, 582, -421, 583, 583, 583, 583, 38,
	587, 587, 587, 583, 587, 587, 587, 583, 583, 583,
	587, 583, 557, 557, 583, 583, 583, 583, 587, 583,
	587, 583, 186, 583, 583, -392, 366, 583, 11, 12,
	573, 574, 575, 576, 180, 577, 578, 571, 572, 570,
	563, 564, 565, 86, 285, 430, 14, 15, 16, 243,
	220, -422, -422, -422, 583, -426, -427, 186, 182, 38,
	-387, -387, -387, 583, 186, -353, 583, 583, 582, -550,
	287, 326, 583, -415, -414, 549, -462, -346, 2, -452,
	-276, -501, -415, -415, -353, -421, 249, 249, -380, 533,
	341, -382, -452, -445, -497, -420, -419, 184, 39, 134,
	322, 216, -445, -274, -333, -445, -445, -501, -446, -446,
	-444, 583, -565, -497, 583, -347, -455, -544, -338, 584,
	-501, -201, -545, -180, 5, 331, -180, -180, -180, -342,
	505, 505, 25, 367, -471, 580, 581, 8, -501, 582,
	-495, -495, -495, -342, 186, 186, 186, -507, -507, 2,
	-230, -351, -230, -230, -302, -303, -230, -230, -230, -373,
	551, -498, -408, 521, 83, 392, 501, -498, -226, 410,
	-268, -268, -281, -290, -251, 199, 402, -507, 326, -412,
	213, -232, 326, -471, -275, -251, 582, -396, 553, 254,
	254, 533, -268, -275, 254, 213, -268, 213, -275, 2,
	-275, -576, 392, 336, -421, 60, -317, 276, 390, 327,
	-227, 410, 450, 356, -128, -128, -128, -128, -128, 582,
	-593, 533, 137, -281, -302, -281, -290, -507, -285, 450,
	356, 410, 323, -296, -496, -496, -374, 450, 356, 410,
	-290, -507, -283, -507, -238, -251, -238, 437, -265, 401,
	557, 45, -614, -228, -128, -128, -128, -128, -128, 582,
	-266, -229, 410, 5, 213, -268, 5, -268, 213, 5,
	-251, -268, -290, -507, -597, 24, 142, -268, -290, -507,
	-256, -510, 331, 529, -574, 437, 505, 505, -457, -124,
	-195, 551, -124, -189, 224, 575, -571, -251, 542, -251,
	-307, -310, -308, -268, -207, -208, 553, 551, 153, -300,
	-281, 580, -192, -510, -281, -466, -291, -292, 153, -333,
	326, -510, 38, 153, 582, 2, 2, -284, 341, 326,
	-267, 213, -234, 144, -614, -265, -415, -346, -371, -406,
	419, 341, -334, 538, -274, -371, -348, 587, 186, 565,
	584, -334, -461, 575, -101, -101, -192, 587, 582, 565,
	565, 582, -510, -510, 583, 587, -232, -281, -267, 228,
	228, -273, -252, 583, 587, 584, 582, -200, 345, -199,
	145, 256, 241, 459, 460, 461, 462, 136, -465, -198,
	-125, 186, 186, -61, 551, 489, -192, 586, -251, -378,
	-378, -378, 447, 447, -251, -277, -265, -281, -278, -302,
	182, 182, -265, 527, -402, 342, 281, -448, -225, 559,
	-281, 586, -421, -421, 149, 149, -421, -422, -422, -421,
	149, 186, 582, -421, -432, 33, 33, 583, 587, -417,
	-421, 583, 541, -338, -338, 583, 575, -501, 586, 583,
	-430, 146, -421, 499, 294, 211, 292, -391, 292, -391,
	-391, -495, 5, -501, 575, -558, -271, 582, -251, 549,
	-337, 347, 583, -473, -471, -421, -421, -421, -421, -421,
	-495, -476, -476, -491, -491, -421, -426, -421, -473, -471,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, 138,
	326, 335, -422, -427, -426, -421, -421, -471, 583, 583,
	583, -353, -101, 582, 287, -365, 204, -421, -465, 587,
	-365, -365, 583, -452, -452, 582, -421, 249, 581, 587,
	589, 565, -333, 584, -444, -445, 581, 583, 587, 583,
	587, -405, 38, 583, -501, -415, -203, -202, 135, 53,
	107, 133, 331, -342, -342, 344, 5, 8, 580, 581,
	584, -495, 583, 583, 583, -342, -342, -342, -230, -230,
	119, 313, -421, 505, 505, 60, 220, 153, 326, 535,
	-529, -524, 151, -421, 582, 228, 582, 582, 2, -223,
	142, 450, 24, -595, 2, 533, 153, -230, 153, -230,
	555, -317, 582, 582, 505, 437, -244, 505, 551, -353,
	-421, -193, 126, -500, -581, 586, -581, 586, 437, 505,
	505, 437, 505, 505, 551, 166, 166, 557, -238, 551,
	-353, 505, -475, 48, 26, 326, -284, -230, 153, 505,
	505, 517, 450, -510, 331, -290, -507, -285, 450, 356,
	410, -465, -197, 345, -196, 145, 421, 136, 256, -465,
	-195, 186, 240, 551, -285, 2, 583, 583, 587, -530,
	38, 339, 339, 582, -281, -82, 551, -464, -497, -577,
	551, 43, -283, 38, 153, -574, -128, -285, -469, -470,
	5, 38, -281, 153, 341, 326, -235, 263, -614, -505,
	-545, -338, -371, -360, 327, 91, 583, -415, -362, -346,
	-421, 2, 583, -190, -191, -510, -510, -510, -192, -204,
	-204, -413, -311, 582, -267, -252, 582, -204, -269, 2,
	-511, 587, 582, 565, 565, 565, -198, -465, -124, -128,
	345, -281, 575, -378, -323, -322, 360, 335, -323, 428,
	428, 342, 176, 259, -224, -266, -421, -421, 149, 33,
	33, -421, -421, -432, 583, -421, -421, -353, 581, 5,
	-421, 583, 583, 8, -421, 583, 584, -559, -251, -421,
	583, 60, 583, 583, 587, 587, 583, 583, 583, 583,
	583, 583, 583, -427, 186, 138, 335, 582, 583, 583,
	-101, -429, 207, 60, -452, -429, -429, -380, -342, -452,
	-419, -266, 580, -501, -497, -455, 582, 584, -202, 565,
	-510, -510, 551, 581, 2, 580, -501, 583, 119, -268,
	-268, 489, 428, -238, 382, -412, 153, -531, 93, -533,
	76, 168, 102, 326, 331, 523, 382, 72, 126, 398,
	-606, 38, 562, 583, -340, -449, -544, 582, -251, -340,
	-342, 326, 478, 126, 326, 126, 119, 2, 517, 79,
	-268, -275, -342, -342, -281, -290, -507, 160, 583, 587,
	565, 2, 575, 575, -290, -507, -285, -290, -507, -283,
	358, 166, 160, 583, -266, 5, 5, 153, -263, 76,
	-268, 5, -268, -284, 119, 437, 505, 505, -195, 587,
	582, 565, 565, -195, -511, -124, 2, -333, -324, 230,
	-268, -528, -525, -526, 382, -532, -534, 168, 382, -128,
	2, -206, -205, -251, 5, 582, -309, 345, 581, -579,
	345, -578, 117, 136, -507, -375, -128, -285, -333, 583,
	587, 147, -397, 533, -266, -281, 153, -236, 262, -614,
	-505, -233, -400, -398, 139, 582, 341, -128, -338, 565,
	583, 583, 119, 119, 222, 152, -340, 582, 582, -342,
	119, 583, -199, -200, -510, -124, -510, -198, -465, -62,
	-63, 228, 93, 365, -278, 489, 228, 582, 582, -224,
	-421, -421, -421, 583, -338, -501, 575, -553, 360, 583,
	-448, -421, -421, -422, 186, 582, -432, 583, -554, 550,
	-421, -366, -367, -421, 427, 108, 205, -554, -554, 583,
	-497, 2, -510, 2, 580, 2, 220, 38, 401, -412,
	-275, -279, -272, -251, 168, 213, 331, 546, -396, 254,
	582, -422, -281, 582, 2, 30, -607, 130, 233, 583,
	587, -450, -262, -251, -421, -450, 583, 583, 331, 331,
	-421, -471, 582, -230, -230, 583, 583, -421, 505, -500,
	100, -498, 2, -581, -265, -421, 505, 5, -230, -279,
	-230, -230, -263, 517, -290, -507, -285, -196, -197, -510,
	-124, -195, 38, -314, 232, 2, -530, 254, -272, 254,
	-605, 551, 583, 587, 565, 565, -307, -207, -83, -84,
	506, -464, 587, 582, 565, -333, 38, 5, 582, 582,
	-251, 341, 582, -266, -246, 92, -614, -505, -234, -371,
	327, -342, 93, -400, -428, -192, 582, 582, -312, 81,
	94, 127, 212, 189, 229, 470, 476, 28, -312, 583,
	-340, -340, 583, 582, -192, 583, 587, 28, 582, 28,
	582, -281, -302, -353, -353, 583, -338, 60, 587, 583,
	583, -422, -432, 583, -555, -556, -271, 587, 582, 582,
	451, 581, 2, -238, 382, -251, -533, -272, 326, 533,
	-421, -253, 582, -421, 38, 233, 131, 218, -411, -608,
	101, 479, 221, -449, -224, 583, -410, 533, 398, -263,
	-340, 582, 582, 582, 565, 186, 582, -475, -230, -284,
	583, -586, 396, -128, -318, -319, 220, 582, -313, 341,
	119, 313, -205, -498, -498, 583, 38, -84, 9, -578,
	-579, -421, 38, -128, -469, -340, -281, -340, 341, -240,
	-239, 271, -505, -235, 583, -275, -371, -511, -511, -410,
	583, 583, -511, -63, -342, -342, 583, 583, -560, 390,
	429, 206, -353, -339, 583, 587, 38, -367, 2, 2,
	2, 401, 153, 208, 583, -535, 286, -251, 583, 131,
	218, -314, 582, -225, -450, -314, 208, -281, -582, 533,
	583, -326, -325, -322, -328, -327, -322, -353, -498, 100,
	358, -353, -263, -589, 187, -588, 5, 10, -207, 358,
	-341, -451, -268, 82, 119, -324, -128, 583, -128, 583,
	583, -397, 583, -281, -237, -512, 401, 403, -614, -236,
	-415, 583, 583, -411, -410, -320, -316, 583, 583, 583,
	583, -561, -562, 50, 520, 109, -421, -561, -561, -556,
	-558, 168, 551, -536, -539, -538, 341, 457, 187, 359,
	583, 478, 545, -320, -342, 551, -333, -421, -410, 583,
	587, 538, 583, 587, 538, 583, 186, 583, -230, -194,
	551, 46, -313, -281, 583, 587, 381, 132, 142, -314,
	-605, -410, 582, -411, 582, -243, -242, -614, -491, -246,
	139, -192, -192, -314, -411, -208, 551, -192, -563, 151,
	-562, 378, 181, 428, 378, 181, -563, -563, -272, 55,
	-538, 341, -539, 341, 527, 132, -607, 583, 55, -535,
	-314, -325, 220, -327, 186, 358, 435, -588, 30, -245,
	-244, 582, -451, 429, 429, 2, -318, -313, -411, -340,
	-314, -340, -241, -342, -240, 327, 527, -320, -314, -415,
	109, 204, 500, 313, 33, 565, -537, 313, 417, 64,
	450, -537, -415, 565, -536, 582, 582, 345, -342, 2,
	-207, -314, 583, -320, 583, -237, 450, -208, -320, 428,
	349, -562, -421, 23, 331, 126, -421, -607, -353, -353,
	-191, 582, 583, -313, -320, -410, -208, -411, -243, -361,
	-415, -208, 583, 583, -191, -231, 64, 417, -245, -208,
	-411, -415, -314, -415, -415, -315, -316, 505, 583, -415,
	-314, -320, 582, -320, -208, -353, -208, -415, 583, -415,
	-315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 533, 534, 536, 537, 538, 540,
	541, 543, 545, 547, 548, 549, 551, 552, 554, 555,
	556, 557, 558, 560, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	627, 629, 0, 1320, 1322, 1324, 1326, 0, 771, 0,
	36, 37, 39, 0, -2, 320, 322, 324, 0, 351,
	353, 354, 356, 358, 359, 360, 362, -2, 0, 468,
	469, 471, 473, -2, 0, 961, 963, 0, 616, 618,
	0, 966, 968, 0, 0, 638, 639, 0, 1427, -2,
	632, 634, 636, 701, 703, 705, 707, 709, 711, 713,
	715, 717, 718, 720, 722, 724, 726, 728, 729, 731,
	733, 735, 736, 738, 739, 741, 743, 745, 747, 749,
	751, 753, 755, 757, 759, 761, 763, 765, -2, 768,
	-2, -2, 0, -2, -2, -2, 1338, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 412, 414, 416, 418,
	420, 423, 425, 427, 1485, 475, 477, 479, 481, 483,
	485, 487, 0, -2, 1499, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1458, 1460, 1462, 1464, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 535, 539, 542, 544, 546, 550,
	553, 559, 561, 563, 520, 521, 524, 2163, 2180, 2181,
	2182, 2185, 2186, 2187, 2188, 2189, 2190, 2630, 2712, 2713,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 522, 523,
	1138, 0, 587, 585, 2148, 588, 2433, 590, 592, 462,
	463, 464, 465, 466, 467, 0, 609, 600, 1497, 610,
	612, 613, 614, 615, 582, 580, 0, 609, 2216, 607,
	1318, 1319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 391, 1187, 1188, 1189, 1303, 1304, 2477,
	1345, 0, 222, 628, -2, -2, -2, 2595, -2, 660,
	-2, 667, 2599, 2479, 672, 0, 674, -2, 677, 1321,
	1323, 1325, 769, 770, 2166, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 232,
	-2, -2, -2, -2, 0, 0, 2523, 2268, 2116, 2182,
	2119, 2114, 321, 323, 325, 326, 0, 0, 0, 0,
	0, 0, 352, 355, 357, 361, -2, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	1022, 1014, 1015, 1245, 0, 0, 0, -2, 470, 472,
	525, 526, 0, 1486, 1486, -2, 0, 0, 0, 0,
	291, 278, 962, 964, 965, 0, 0, 0, 0, 617,
	619, 0, 0, 260, 967, 969, 970, 0, 0, 0,
	0, 0, 293, 0, 0, 633, 635, 637, 702, 704,
	706, 708, 710, 712, 714, 716, 719, 721, 723, 725,
	727, 730, 732, 734, 737, 740, 742, 744, 746, 748,
	750, 752, 754, 756, 758, 760, 762, 764, 766, 767,
	777, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 865, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, -2, 943, 0, 780, 782, 783, 784, 0,
	843, 863, 864, 873, 0, 1178, 1487, 1347, 1328, 1342,
	1347, 1330, 1331, 1332, 1333, 1334, 1339, 1341, 1335, 1336,
	1337, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	413, 415, 417, 419, 421, 424, 426, 428, -2, 1456,
	1457, 476, 478, 480, 482, 484, 486, 488, 620, 0,
	622, 0, 781, -2, 0, 1491, 1491, 1491, 0, 0,
	1457, 1455, 0, 625, 626, 681, 682, 1759, 0, 0,
	0, 0, 0, 0, 0, 2013, 1845, 0, 683, -2,
	1876, 1878, 2570, 2595, 2012, 1880, 1881, 1882, 1883, 1884,
	0, 1886, 1887, 1888, 1889, 1890, 1891, 0, 1893, 0,
	1898, 1899, 1900, 0, 2577, 2093, 2176, -2, 0, 0,
	2583, 2172, 0, 1979, 1916, -2, -2, 2199, 2178, 1691,
	1692, 1693, 1694, 1695, -2, -2, 2613, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 0, 2558,
	2578, 2579, 2584, 2586, 2580, 2567, 1941, 2281, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1718, 1727, -2, -2, -2, -2, -2, -2, -2,
	2571, 2572, 2589, 2592, 2598, 2603, 2604, 2576, 2585, 2612,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 1719, -2, -2, -2,
	-2, 1474, 2446, 1477, 1138, 1475, 1459, 1461, 0, 1463,
	0, 0, 0, 1468, 1494, 1492, 0, 1543, 1472, 1473,
	1561, 1561, 1585, 0, 1566, 0, 1585, 1486, 1612, 0,
	1572, 2469, 1917, 1918, 0, 2182, 2177, -2, -2, 2610,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 0,
	589, 591, 0, 0, 0, 608, 1496, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 396, 397, 398, 2578,
	0, 0, 0, 403, 0, 405, 406, 407, 408, 409,
	410, 411, 191, 2578, 493, 518, 0, 191, 2578, 496,
	191, 2578, 499, 0, 502, 1243, 191, 2578, 505, 2144,
	191, 2578, 508, 510, 2152, 191, 2578, 514, 2159, 2157,
	515, 2578, 517, 296, 294, 295, 2195, 2196, 2203, 2204,
	2205, 2206, 2611, 2613, 1314, 1315, 1316, 1317, 0, 1344,
	1244, 630, 631, 0, 655, 0, 659, 2566, -2, 0,
	2488, -2, 663, 1348, 1352, 1353, 1354, 1355, 1356, 0,
	0, 0, 0, 1361, 0, 0, 669, 0, 0, 656,
	657, 675, 678, 0, 772, 773, 774, 775, 776, 70,
	0, 2578, 1612, 72, 0, 2138, 2207, 2208, 2209, 2210,
	2211, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 76, 0, 2578, 81, 0, 2578, 0, -2,
	92, 0, 100, 0, 2141, 109, 0, 2578, 0, 2113,
	-2, 0, 203, 279, 280, 281, 282, 0, 989, -2,
	2578, 1186, 0, 0, 0, 0, 952, 2110, 2115, 953,
	2134, 954, 2120, 0, 327, 328, 329, 330, 331, 0,
	332, 2578, 334, 335, 0, 337, 338, 2578, 340, 341,
	0, 343, 0, 243, 244, 2578, 365, 367, 0, 369,
	370, 0, 372, 0, 0, 0, 376, -2, 392, 0,
	389, 379, 380, 382, 383, 384, 385, 386, 0, 432,
	430, 2149, 0, 0, -2, 2578, 0, 986, 0, 0,
	1223, -2, 2578, 1183, 0, 1230, 2578, 1226, 0, -2,
	0, 1484, 2578, 1365, 1018, 1019, 1020, 1021, 1624, 459,
	0, 1392, 0, 1394, 0, 1413, 1618, 1561, 0, 0,
	1623, 0, -2, 576, 2165, -2, 528, 0, 529, 0,
	-2, 0, 308, 0, 0, 971, 972, 973, 974, 975,
	978, 979, 980, 981, 1598, 261, 263, 0, 0, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 0, 0,
	640, 0, 0, 778, 779, 0, 0, 789, 790, 791,
	0, 308, 2480, 2442, 2302, 798, 0, 801, 804, -2,
	0, 0, 0, 0, 808, 0, 813, 814, 815, 0,
	0, 819, 821, 960, 823, 0, 0, 825, 0, 829,
	0, 832, 0, 834, 0, 836, -2, -2, -2, 844,
	845, -2, 849, -2, 0, 852, 854, 0, 856, -2,
	0, 865, 861, 862, 0, 0, 0, 0, 881, 882,
	0, 891, 0, 894, 895, 896, 0, 898, 899, 0,
	901, 902, 903, 904, 0, 0, 907, 908, -2, -2,
	912, 914, 0, -2, 0, 930, 0, 934, 0, 0,
	942, 0, 785, 786, 191, 1616, 1327, -2, 1329, 0,
	-2, 0, 621, 0, 624, 1516, 1442, 1439, 0, 1513,
	1514, 1443, 0, 0, 0, 1450, 0, 1489, 1490, 0,
	0, 0, 1429, 1430, 0, 0, 0, 0, 2018, 2019,
	2020, 2021, 2022, 2023, 2026, 2027, 2024, 2025, 2028, 2029,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2031, 2032, 2033,
	0, 0, 2035, 0, 2037, 0, 0, 0, 0, 0,
	0, 1824, 1826, 2101, 0, 0, 2034, 1764, 1765, 1766,
	1767, 1768, 1803, 1804, 0, 0, 1877, 2098, 2097, 1879,
	0, 2049, 0, 1892, -2, 0, 2013, 2044, 0, 0,
	1901, 1902, 1903, 0, 0, 2049, 0, 0, 2092, 1913,
	1914, 1756, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 1704, 0, 1706, 0, 1707, 1708, 1715,
	1728, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 2073, -2, 0, 0, 0, 0, 1720,
	0, 1476, 0, 0, 1547, 2102, 2106, 2107, 1547, 1547,
	0, 0, 2050, 1609, 1609, 0, 0, 1604, 1604, 1604,
	1602, 1585, 0, 1585, 1595, 0, 1585, 1585, 0, -2,
	1566, 0, 0, 1595, 0, 1579, 564, 566, 568, 570,
	571, 572, 574, 1613, 1614, 0, 0, 0, 0, 2183,
	0, 0, 0, 0, 0, 2168, 0, 348, 0, 0,
	0, 2533, 2479, -2, 594, 611, 1486, 0, 2052, 1639,
	1643, 0, 1645, 1646, 1647, 1648, 1649, 0, 0, 1640,
	-2, 1716, 1718, 1739, 2200, 2201, 2202, 1699, 1700, 1701,
	1702, 1703, 1711, 1698, 1698, 1698, 1709, 1738, 1730, 1738,
	1734, 1684, 1685, 1686, 1721, 1722, 1723, 1724, 0, 2533,
	2479, -2, 602, 0, 0, 1424, 207, 209, 210, 211,
	212, 213, 393, 0, 400, 401, 402, 0, 489, 0,
	189, 190, 0, 191, 2578, 494, 0, 497, 0, 191,
	2578, 2108, 503, 0, 506, 0, 0, 512, 0, 0,
	0, 0, 0, 191, 1426, 0, 0, 0, 0, -2,
	665, 670, 671, 0, 1350, 0, 1357, 692, 693, 694,
	1359, 1360, 0, 1362, 668, 695, 696, 697, 698, 699,
	700, 0, 2122, 2123, 2124, 2125, 2128, 2129, 0, 0,
	666, 685, 673, 0, 679, 110, 1300, 0, 0, 153,
	0, 1300, 1300, 0, 0, 0, 0, 178, 0, 1057,
	0, 0, 0, 0, 125, 138, 149, 122, 123, 0,
	0, 0, 0, 0, 0, 82, 1160, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 0, 96, 97, 0, 137, 0, 0,
	1389, 0, 132, 112, 0, 0, 125, 139, 151, 0,
	182, 184, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 214, 0, 0, 0, 1184, 0, 1483, 0,
	0, 2578, 0, 1598, 2349, -2, -2, 261, 1598, 951,
	0, 0, 2183, 2118, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 371, 373, 374, 375, 0, 1222, 0,
	381, 422, 1109, 2578, 0, 0, 449, 444, 0, 446,
	0, 0, 0, 1159, 2578, 1157, 2153, 0, 1181, 0,
	1138, 2578, 2151, 0, 0, 0, 1231, 2192, 1240, 1244,
	1379, 0, 461, 0, 1395, 1397, 0, 0, 1619, 0,
	1621, 1561, 1486, 0, 0, 0, 0, 284, 0, 0,
	0, 0, 0, 0, 267, 0, 1597, 0, 0, 1598,
	261, 2457, 308, 308, 1598, 642, 1598, 644, 0, 0,
	792, 793, 0, 308, 308, 308, 799, 800, 802, 803,
	-2, -2, -2, -2, 805, 806, 888, 0, 0, 0,
	887, 818, 822, 0, 945, 2465, 2479, 2533, 958, 888,
	2268, 888, 2268, 888, 2268, 833, 835, 838, 876, 884,
	848, 853, 0, 0, 858, 866, -2, 0, 868, 0,
	870, 0, 872, 888, 889, 892, 897, 900, 905, 906,
	0, 921, 926, 927, 923, 0, 0, 0, 0, 0,
	0, 937, 938, 0, 0, 1177, 0, 1340, 1516, 1442,
	623, 1433, 1515, 1434, 1441, 1444, 0, 0, 1446, 0,
	1448, 0, 1511, 1512, 1519, 1520, 0, 1530, 1531, 1523,
	0, -2, 0, 0, 1526, 1527, 1452, 0, 1469, 1470,
	1471, 1500, 1503, 1259, 0, 2712, 1760, 1634, 1761, 1762,
	2137, 0, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, -2, -2, -2, -2, -2, -2, -2, -2,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, -2, -2, -2, 1801, 1802, -2, 2036, 2038, 0,
	2101, 0, -2, 0, -2, -2, -2, -2, 1821, 0,
	1823, 1828, 1830, 1832, 0, 0, 0, 0, 2100, 1842,
	2084, 2085, 0, 0, 2015, 2016, 2017, 1827, 0, 1846,
	2099, 2096, 0, 0, 2048, 1499, 1905, 0, 0, 0,
	0, 1912, 1897, 2046, 0, 2045, 0, 0, 0, 2056,
	0, 2091, 2087, 0, 2135, 1755, 1742, 1743, 1744, 1745,
	1746, 1747, 1757, 0, 2132, 2169, 2175, 1989, 0, 0,
	0, 1942, 1943, 1944, 1945, 1946, 0, 1948, 1949, 0,
	1951, 1952, 0, 1954, 1955, 0, 1957, 1958, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 0, 0,
	1961, 0, 2059, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1963, 0, 1965, 2050, 2070, 0, 0, 1847,
	0, 0, 0, 2013, 0, 1968, 2050, 2078, 0, 0,
	0, 0, 0, 2050, 0, 2083, 0, 1975, 0, 1977,
	1478, 0, 0, 1629, 0, 0, 0, 2105, 1629, 1629,
	0, 1542, 0, 0, 1605, 1606, 1607, 1608, 0, 0,
	1609, 0, 1599, 1603, 1600, 1601, 1595, 1558, 0, 0,
	2139, 1595, 1564, 1594, 0, 1138, 1584, 1595, 1595, 0,
	-2, 1568, 1585, 0, 0, 565, 567, 569, 573, 575,
	0, 0, 1499, -2, 0, -2, 310, 1137, 0, 0,
	0, 0, 584, 586, 0, 0, 509, 0, 599, 0,
	578, 0, 581, 0, 1630, 1633, 0, 0, 1644, 1650,
	1651, 0, -2, 0, 0, 1740, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 404, 519, 191, 491, 0,
	191, 191, 500, 0, 0, 191, 511, 191, 2160, 191,
	2158, 297, 516, 1425, 225, 0, 658, 0, 1349, 1358,
	0, 689, 0, 691, 0, 2126, 2130, 2127, 2131, 0,
	680, 0, 0, 0, 0, 1299, 0, 1266, 0, 0,
	157, 2578, 0, 193, 0, 0, 1102, 2145, 0, 1094,
	0, 0, 2288, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 1162, 1164, 1171, 1173, 0, 1167, 2133, 0,
	0, 1168, 0, 1170, 1172, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 0, 0, 1388,
	1389, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 1216, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 0, 0, -2,
	0, 0, 0, 0, 0, 235, 0, 299, 2111, 2121,
	0, 976, 977, 333, 336, 339, 342, 231, 0, 377,
	0, 0, 1024, 999, 0, 0, 431, 308, 0, 0,
	445, 449, 2162, 984, 1155, 1158, 0, 1138, 2578, 1195,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 2578,
	2140, 2191, 2192, 1381, 1389, 0, 1629, 0, 1411, 1398,
	0, 0, 0, 1411, 1415, 1416, 1418, 1419, 0, 0,
	1620, 1626, 527, 577, 1486, 1486, 308, 306, 2410, 304,
	301, 303, 0, 0, 0, 1025, 1027, 1028, 1029, 193,
	0, 2192, 1094, 2338, 2192, 0, 1401, 1403, 0, 255,
	0, 264, 1598, 262, 267, 0, 0, 0, 443, 641,
	646, 787, 0, 308, 795, 796, 797, 840, 878, 886,
	925, 807, 809, 810, 811, 0, 0, 959, 955, 956,
	957, 824, 888, 827, 888, 830, 888, 851, 855, 860,
	867, 0, 0, 0, 880, 0, 0, 0, 0, 0,
	0, 0, 931, 932, 933, 935, 940, 939, 944, 1617,
	1437, 1438, 1440, 0, 1449, 0, 0, 1525, -2, -2,
	1524, 1528, 1529, -2, -2, -2, -2, 1445, 0, 1454,
	1451, 0, 1510, 1257, 1258, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1843, 0, -2, 1822, 1825, 1829,
	1831, 1833, 0, 0, 0, 0, 0, 0, 2039, 0,
	2041, 1844, 2094, 2097, 2011, 0, 0, 1498, 1499, 1499,
	0, 1911, 0, 2047, 0, 2054, 2055, 0, 1904, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1915, 0, 0, 0, 0, 1947, 1950, 1953, 1956, 0,
	0, 0, 0, 1936, 0, 0, 0, 1940, 1710, 1696,
	0, 1738, 1736, 1737, 1731, 1738, 1735, 1688, 0, 1687,
	0, 1960, 0, 1962, 1964, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 1851, 1852, 1967, 2076, 2077, 0, 0, 0,
	0, 0, 0, 1973, 0, 2082, 1974, 1976, 1486, 0,
	1479, 0, 1544, 1533, 1628, 0, 2103, 1598, 1546, 1548,
	2104, 2142, 1533, 1533, 0, 2051, 0, 0, 1589, 0,
	0, 0, 1591, 1562, 0, 0, 1556, 0, 1552, 1553,
	1554, 1555, 1563, 1138, 1593, 1565, 1569, 2169, 0, 1595,
	0, 1580, 0, 1582, 1615, 0, 1574, 1577, 0, 0,
	2184, 1629, 0, 344, 349, 350, 345, 346, 347, 593,
	0, 0, 0, 0, 2053, 0, 1635, 0, 1641, 0,
	0, 0, 0, 601, 0, 0, 0, 208, 1423, 399,
	490, 191, 495, 498, 2109, 191, 504, 507, 513, 221,
	0, 654, -2, 687, 688, 690, 0, 686, 154, 1300,
	0, 0, 1262, 1264, 2156, 1268, 1274, 1277, 0, 159,
	2578, 169, 0, 1073, 0, 2143, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 2578, 191, 2578, 191, 172,
	174, 177, 0, 181, 179, 0, 1061, 0, 0, 1064,
	111, 1300, 0, 0, 114, 118, 126, 127, 130, 0,
	0, 0, 136, 0, 0, 0, 1279, 1283, 1291, 0,
	0, 0, 1165, 1166, 1169, 1175, 83, 0, 0, 0,
	1287, 1289, 1295, 93, 94, 2154, 95, 0, 1261, 0,
	0, 0, 0, 183, 116, 120, 128, 129, 131, 0,
	1297, 113, 0, 206, 0, 0, 196, 191, 2578, 0,
	198, 0, 199, 200, 215, 0, 0, 0, 987, 988,
	1217, 1179, 1180, 0, 1185, 0, 0, 0, 0, 1598,
	227, 0, 1598, 235, 0, 2117, 0, 364, 0, 0,
	0, 0, 1023, 1120, 0, 994, 0, 0, 0, 437,
	433, 0, 442, 448, 447, 453, -2, 0, 0, 0,
	0, -2, 0, 0, 1233, 1227, 1228, 0, 0, 0,
	0, 2578, 1383, 1389, 0, 1484, 1499, 460, 1390, 1411,
	0, 0, 0, 1400, 1396, 1393, 1629, 0, 0, 0,
	0, 0, 1622, 1625, 530, 531, 283, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 1030, 1034, 0, 2192,
	2192, 0, 2147, 0, 0, 0, 0, 265, 0, 268,
	0, 0, 0, 273, 274, 275, 276, 277, 267, 257,
	1598, 0, 0, 643, 0, 0, 794, 0, 817, 826,
	828, 831, 869, 871, 888, 915, 916, 1051, 0, 1051,
	0, 0, 936, 1447, 0, 1522, 1453, 1504, 1505, 0,
	1259, 0, 1763, 1806, 0, 0, -2, 0, 0, 1810,
	0, 0, 0, -2, 0, 0, 0, 2040, 2042, 0,
	2096, 1906, 0, 0, 0, 1910, 1894, 1895, 0, 2014,
	2057, 2086, 2090, 0, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 0, 2136, 2170, 2174, 1987, 1988, 1992, 2150, 0,
	0, 0, 1919, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 1733, 0, 0, 2058, 2069, 2071, 1848, 1849,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	-2, -2, -2, 1866, 1867, 1868, -2, -2, -2, 0,
	0, 0, 2072, 2074, 2075, 2079, 2080, 0, 1970, 1971,
	1972, 2081, 0, 1486, 1480, 1541, 0, 1627, 1545, 0,
	1541, 1541, 1493, 1587, 0, 0, 1611, 0, 1559, 0,
	1560, 0, 1592, 0, 1567, 1570, 1571, 1581, 0, 1573,
	0, 1576, 0, 1906, -2, 309, 311, 313, 0, 316,
	317, 0, 0, 596, 597, 595, 579, 0, 0, 1637,
	0, 0, 1713, 1717, 1741, 604, 605, 603, 492, 501,
	223, 0, 1596, 0, 0, 0, 0, 0, 0, 192,
	1071, 1101, 0, 0, 0, 1093, 0, 0, 1107, 161,
	0, 0, 0, 0, 170, 0, 0, 167, 0, 176,
	180, 1058, 0, 0, 0, 0, 1267, 0, 0, 0,
	133, 134, 135, 0, 140, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 1373, 1374, 0, 1368, 0,
	0, 0, 194, 0, 0, 0, 1256, 217, 0, 0,
	0, 0, 0, 1220, 1221, 1280, 1284, 1292, 0, 0,
	0, 235, 233, 0, 236, 0, 239, 240, 0, 235,
	229, 0, 0, 0, 1138, 378, 997, 1108, 0, 1110,
	0, 995, 0, 0, 1109, 429, 0, 436, 0, 450,
	0, 0, 1159, 0, 0, 1182, 1193, 1138, 0, 1232,
	1234, 0, 1242, 0, 0, 0, 1385, 1389, 0, 1378,
	1379, 1518, 1391, 1409, -2, 0, 0, 1499, 1417, 1414,
	1420, 1421, 0, 305, 0, 300, 302, 0, 286, 0,
	0, 1026, 1031, 0, 0, 0, 0, 0, 1402, 1404,
	0, 0, 0, 0, 0, 0, 256, 267, 1598, 292,
	0, 788, 812, 879, 917, 1050, 0, 0, 919, 0,
	0, 1521, 1508, 1509, 1506, 1259, 1808, 1812, 0, 0,
	0, 1814, -2, 0, 1836, -2, -2, 2043, 2095, 1885,
	1499, 1907, 1909, 1896, 2089, 1758, 0, 1994, 1991, 0,
	1978, 0, 1931, 1932, 0, 0, 1935, 1937, 1938, 1939,
	1697, 1690, 1689, 2068, 0, 0, 0, 0, 1969, 1481,
	0, 1983, 0, 0, 1549, 1983, 1983, 1588, 0, 1590,
	1557, 1550, 0, 2170, 1583, 1575, 0, 0, 314, 0,
	318, 319, 0, 1631, 1636, 0, 1642, 1712, 224, 155,
	156, 1271, 1275, 1272, 0, 158, 0, 1072, 0, 1075,
	0, 0, 0, 0, 1082, 1094, 0, 0, 0, 0,
	0, 1095, 0, 1124, 0, 1247, 1254, 0, -2, 0,
	0, 0, 163, 186, 0, 0, 1301, 165, 0, 0,
	191, 191, 0, 0, 1263, 1265, 1278, 0, 0, 0,
	0, 143, 0, 0, 1281, 1285, 1293, 1288, 1290, 1296,
	0, 1375, 0, 0, 1298, 204, 205, 0, 191, 0,
	191, 197, 191, 1256, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 228, 298, 235, 366, 0, 1045, 0,
	1120, 1112, 1113, 1114, 0, 1119, 1121, 0, 0, 1011,
	996, 0, 1007, 0, 0, 1024, 999, 0, 434, 451,
	0, 454, 0, 457, 985, 1156, 1190, 1138, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 1387, 1389, 0,
	1380, 1381, 1411, 1517, 0, 0, 0, 1399, 1518, 0,
	307, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 269, 0, 270, 271, 272, 258, 259, 645,
	647, 0, 0, 653, 1049, 0, 0, 0, 0, 1507,
	1816, -2, -2, 1837, 0, 2171, 2173, 1499, 0, 1980,
	1501, 0, 0, -2, 0, 0, 0, 1482, 1465, 0,
	1540, 1532, 1534, 1536, 2468, 2263, 2577, 1466, 1467, 1610,
	0, 1578, 315, 598, 0, 1638, 0, 0, 1273, 160,
	0, 1076, 1077, 2146, 1079, 0, 1081, 1083, 1084, 1085,
	0, 1088, 2194, 0, 1092, 0, 1103, 1125, 0, 1134,
	0, 1249, 1259, 1253, 0, 1251, 1136, 0, 162, 164,
	185, 1256, 0, 166, 175, 0, 0, 115, 0, 0,
	2257, 146, 144, 142, 1260, 117, 0, 206, 216, 1255,
	218, 201, 191, 0, 1282, 1286, 1294, 237, 0, 238,
	241, 0, 0, 1060, 0, 998, 1111, 0, 1122, 1123,
	1001, 0, 1000, 0, 0, 0, 0, 0, 435, 438,
	0, 441, 0, 0, 0, 0, 0, 1235, 1233, 0,
	1241, 0, 0, 0, 1367, 0, 0, 1382, 1383, 458,
	1405, 0, 0, 1411, 1422, 285, 0, 0, 1032, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1033, 1136,
	0, 0, 1100, 0, 290, 266, 0, 649, 0, 651,
	0, 918, 920, 0, 0, 1908, 1998, 0, 0, 1933,
	1934, -2, 0, 1874, 1982, 1984, 0, 0, 0, 0,
	0, 1551, 1632, 1269, 0, 1276, 1074, 1078, 0, 0,
	0, 1142, 0, 0, 1096, 0, 1128, 1129, 1045, 0,
	1130, 1131, 1132, 1248, 1510, 1254, 1045, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 195, 219, 1256,
	234, 251, 0, 1191, 999, 1059, 0, 0, 1009, 0,
	1012, 0, 1008, 1005, 1006, 997, 0, 439, 440, 455,
	0, 456, 0, 1194, 0, 0, 1242, 0, 0, 1370,
	1366, 1389, 1384, 1385, 1629, 1408, 1412, 0, 0, 1134,
	1136, 1056, 0, 648, 0, 0, 928, 929, 0, 0,
	0, 0, 1993, 1502, 1875, 0, 0, 1535, 1537, 1538,
	1539, 1270, 0, 0, 1087, 1147, 0, 0, 0, 1126,
	1127, 1056, 0, 1252, 1250, 1105, 0, 1138, 168, 0,
	1136, 0, 1065, 0, 0, 1068, 0, 0, 147, 2257,
	145, 0, 191, 254, 0, 248, 246, 247, 1001, 0,
	0, 1116, 1118, 0, 1013, 1045, 1011, 452, 1192, 1225,
	1136, 0, 1134, 0, 1377, 1389, 1371, 1372, 0, 1387,
	0, 308, 308, 1045, 1134, 999, 1055, 308, 650, 652,
	1990, 2010, 1999, -2, 2536, 2264, 0, 2010, 2010, 1985,
	1986, 0, 0, 1089, 1143, 1144, 0, 1139, 1140, 1141,
	2193, 1090, 1091, 1124, 0, 0, 1142, 187, 1045, 1062,
	0, 0, 1063, 0, 0, 150, 0, 152, 220, 242,
	0, 0, 993, 0, 1115, 0, 0, 0, 0, 1060,
	1001, 1134, 0, 1045, 0, 1363, 1376, 0, 1386, 1367,
	0, 287, 288, 1056, 1045, 1629, 0, 289, 1995, 0,
	0, 2001, 2002, 2003, 2004, 2005, 1996, 1997, 1080, 0,
	1145, 0, 1146, 0, 0, 0, 1629, 1133, 0, 1147,
	173, 1066, 0, 1069, 0, 148, 0, 249, 250, 990,
	992, 0, 1117, 1002, 0, 1004, 999, 1010, 1045, 0,
	1056, 0, 1369, 2155, 1370, 1406, 0, 999, 1056, 1099,
	0, 2007, 2008, 0, 0, 0, 1148, 0, 1151, 1152,
	0, 1149, 1104, 0, 1124, 0, 0, 0, 0, 1003,
	1001, 1056, 1136, 999, 1134, 1377, 0, 1629, 999, 2006,
	2009, 2000, 1086, 1150, 1153, 1154, 1135, 1106, 0, 0,
	252, 0, 1048, 993, 999, 1134, 1629, 1045, 1364, 1629,
	1097, 1629, 1053, 0, 0, 1044, 1046, 1047, 991, 1629,
	1045, 1238, 1056, 1407, 1098, 1067, 1052, 0, 253, 1236,
	1056, 999, 0, 999, 1629, 0, 1629, 1239, 1053, 1237,
	1070,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 571, 3, 577, 572, 3,
	582, 583, 575, 573, 587, 574, 584, 576, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 590, 3,
	563, 565, 564, 568, 586, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 580, 3, 581, 578, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 588, 570, 589, 566,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 567, 57906, 569, 57907, 579, 57908, 585, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1688
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1689
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1693
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1714
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1738
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1753
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1792
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1812
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1821
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1832
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1838
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1864
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1869
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1950
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1996
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = nil
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = nil
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2217
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2224
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2271
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2279
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = nil
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2557
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = nil
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2673
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			return unimplemented(sqllex, "alter function")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2816
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2825
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2831
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2836
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2841
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2851
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2874
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = nil
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2958
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3138
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3175
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3182
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "CREATE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "create access method")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "create cast")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplemented(sqllex, "create operator")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "create publication")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "create rule")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "create server")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
		}
	case 388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3222
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3226
		{
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3229
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3230
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3244
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3245
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return unimplemented(sqllex, "drop server")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3260
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3377
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3412
		{

			sqlVAL.union.val = nil
		}
	case 450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DELETE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "DROP")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3791
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3815
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3823
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "DELETE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "INSERT")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "DELETE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3900
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3933
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4022
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4026
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "GRANT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "RESET")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "RESET")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "USE")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4163
		{
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4164
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4171
		{
			return helpWith(sqllex, "USE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return unimplemented(sqllex, "set from current")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4406
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = tree.Low
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = tree.Normal
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.High
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.str = "client_encoding"
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.str = "timezone"
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4652
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4715
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4724
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4861
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = true
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = false
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5062
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5069
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = true
		}
	case 874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = false
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = false
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5186
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5207
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5235
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5288
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5296
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{
		}
	case 928:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5340
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5444
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5584
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5636
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "RESUME")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5717
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5868
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5884
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5913
		{

			sqlVAL.union.val = nil
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.str = ""
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5929
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = nil
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5952
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5982
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5996
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6011
		{
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6012
		{
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6094
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6105
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6111
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6118
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.str = ""
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6382
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = true
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = false
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6519
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6530
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6547
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6557
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6642
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6798
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6807
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6815
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6831
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6841
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6894
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6909
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = true
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6919
		{

			sqlVAL.union.val = true
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = false
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6934
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6948
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6960
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6972
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6982
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6992
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = nil
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7102
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7103
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7130
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7132
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7134
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7136
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7176
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7194
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7213
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7230
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7247
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = false
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = true
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = false
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = true
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = false
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7311
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.str = ""
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.str = ""
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7384
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7390
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7615
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7621
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7633
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7639
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7653
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7659
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7677
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7681
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7692
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7710
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7719
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7769
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7777
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7792
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7813
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7831
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7845
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7846
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7847
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7868
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7909
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8002
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.str = ""
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8028
		{

		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8043
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.str = ""
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.str = ""
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.str = ""
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.str = ""
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8098
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8141
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8163
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8172
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8248
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8343
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8714
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = nil
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = true
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = false
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = false
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = true
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8757
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8758
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8824
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8829
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9017
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9019
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9056
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9089
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9147
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9157
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9203
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9233
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9266
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = nil
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.str = tree.AstFull
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.str = tree.AstRight
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.str = tree.AstInner
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9386
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.str = tree.AstHash
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.str = ""
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9478
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9500
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = true
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = false
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = true
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = false
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9562
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9570
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9589
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9599
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9619
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9668
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9680
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = types.Geography
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9730
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9738
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9764
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9772
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = nil
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = types.Int2
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = types.Int
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = types.Float4
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = types.Float
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9815
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = types.Bool
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = types.Float
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9864
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9870
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9892
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = types.String
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = true
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = false
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.Date
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9949
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9963
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9972
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9980
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9997
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = true
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = false
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = false
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = types.Interval
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = nil
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10150
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10528
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10749
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10799
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10829
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10840
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10841
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10865
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10931
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11127
		{
			return unimplemented(sqllex, "treat")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.str = ""
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11289
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11302
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11399
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = tree.Any
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = tree.Some
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.All
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = tree.Div
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.LT
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.GT
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.LE
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.GE
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.NE
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.Like
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11761
		{
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11914
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11930
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11950
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11959
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11979
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12212
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.str = ""
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
