// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:934
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14637

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1738,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 452,
	-2, 0,
	-1, 71,
	8, 911,
	29, 911,
	622, 911,
	623, 911,
	-2, 0,
	-1, 72,
	8, 911,
	29, 911,
	622, 911,
	623, 911,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 93,
	242, 1469,
	256, 1469,
	272, 448,
	410, 448,
	422, 1215,
	463, 448,
	477, 1215,
	527, 1215,
	555, 448,
	582, 1215,
	-2, 0,
	-1, 99,
	137, 1738,
	249, 1738,
	566, 1738,
	567, 1738,
	-2, 0,
	-1, 117,
	156, 1709,
	176, 1709,
	189, 1709,
	252, 1709,
	285, 1709,
	359, 1709,
	370, 1709,
	561, 1709,
	-2, 1680,
	-1, 159,
	164, 1045,
	271, 1045,
	413, 1006,
	482, 1006,
	526, 1006,
	546, 1045,
	548, 1006,
	-2, 0,
	-1, 164,
	4, 1740,
	21, 1740,
	22, 1740,
	23, 1740,
	24, 1740,
	25, 1740,
	26, 1740,
	27, 1740,
	28, 1740,
	30, 1740,
	31, 1740,
	37, 1740,
	41, 1740,
	43, 1740,
	44, 1740,
	46, 1740,
	47, 1740,
	48, 1740,
	49, 1740,
	50, 1740,
	51, 1740,
	52, 1740,
	53, 1740,
	54, 1740,
	56, 1740,
	57, 1740,
	58, 1740,
	59, 1740,
	61, 1740,
	62, 1740,
	63, 1740,
	64, 1740,
	65, 1740,
	66, 1740,
	67, 1740,
	71, 1740,
	72, 1740,
	73, 1740,
	74, 1740,
	76, 1740,
	77, 1740,
	78, 1740,
	82, 1740,
	83, 1740,
	84, 1740,
	85, 1740,
	86, 1740,
	87, 1740,
	88, 1740,
	89, 1740,
	92, 1740,
	93, 1740,
	94, 1740,
	95, 1740,
	96, 1740,
	98, 1740,
	100, 1740,
	101, 1740,
	102, 1740,
	103, 1740,
	104, 1740,
	105, 1740,
	107, 1740,
	108, 1740,
	109, 1740,
	111, 1740,
	112, 1740,
	113, 1740,
	121, 1740,
	122, 1740,
	123, 1740,
	124, 1740,
	125, 1740,
	127, 1740,
	128, 1740,
	129, 1740,
	130, 1740,
	132, 1740,
	133, 1740,
	134, 1740,
	136, 1740,
	137, 1740,
	138, 1740,
	140, 1740,
	141, 1740,
	142, 1740,
	145, 1740,
	146, 1740,
	147, 1740,
	149, 1740,
	150, 1740,
	151, 1740,
	153, 1740,
	154, 1740,
	155, 1740,
	157, 1740,
	158, 1740,
	159, 1740,
	160, 1740,
	161, 1740,
	162, 1740,
	163, 1740,
	164, 1740,
	165, 1740,
	166, 1740,
	167, 1740,
	168, 1740,
	169, 1740,
	170, 1740,
	171, 1740,
	172, 1740,
	173, 1740,
	175, 1740,
	181, 1740,
	182, 1740,
	183, 1740,
	184, 1740,
	188, 1740,
	190, 1740,
	191, 1740,
	192, 1740,
	194, 1740,
	195, 1740,
	198, 1740,
	199, 1740,
	200, 1740,
	201, 1740,
	202, 1740,
	203, 1740,
	204, 1740,
	205, 1740,
	206, 1740,
	207, 1740,
	208, 1740,
	209, 1740,
	210, 1740,
	211, 1740,
	213, 1740,
	214, 1740,
	216, 1740,
	217, 1740,
	219, 1740,
	220, 1740,
	221, 1740,
	222, 1740,
	223, 1740,
	224, 1740,
	225, 1740,
	226, 1740,
	227, 1740,
	228, 1740,
	229, 1740,
	231, 1740,
	232, 1740,
	234, 1740,
	235, 1740,
	236, 1740,
	237, 1740,
	238, 1740,
	242, 1740,
	243, 1740,
	244, 1740,
	245, 1740,
	248, 1740,
	249, 1740,
	250, 1740,
	251, 1740,
	253, 1740,
	255, 1740,
	256, 1740,
	258, 1740,
	260, 1740,
	261, 1740,
	262, 1740,
	264, 1740,
	268, 1740,
	269, 1740,
	270, 1740,
	271, 1740,
	272, 1740,
	273, 1740,
	275, 1740,
	276, 1740,
	277, 1740,
	279, 1740,
	280, 1740,
	282, 1740,
	283, 1740,
	286, 1740,
	287, 1740,
	288, 1740,
	289, 1740,
	290, 1740,
	291, 1740,
	292, 1740,
	295, 1740,
	296, 1740,
	297, 1740,
	298, 1740,
	300, 1740,
	301, 1740,
	302, 1740,
	303, 1740,
	304, 1740,
	305, 1740,
	306, 1740,
	307, 1740,
	308, 1740,
	309, 1740,
	310, 1740,
	311, 1740,
	312, 1740,
	313, 1740,
	314, 1740,
	315, 1740,
	316, 1740,
	317, 1740,
	318, 1740,
	319, 1740,
	320, 1740,
	321, 1740,
	322, 1740,
	324, 1740,
	326, 1740,
	327, 1740,
	328, 1740,
	329, 1740,
	330, 1740,
	331, 1740,
	332, 1740,
	333, 1740,
	334, 1740,
	335, 1740,
	336, 1740,
	337, 1740,
	338, 1740,
	339, 1740,
	340, 1740,
	341, 1740,
	342, 1740,
	344, 1740,
	345, 1740,
	347, 1740,
	349, 1740,
	350, 1740,
	351, 1740,
	352, 1740,
	354, 1740,
	355, 1740,
	356, 1740,
	357, 1740,
	358, 1740,
	361, 1740,
	363, 1740,
	365, 1740,
	366, 1740,
	367, 1740,
	368, 1740,
	371, 1740,
	372, 1740,
	373, 1740,
	375, 1740,
	377, 1740,
	378, 1740,
	379, 1740,
	380, 1740,
	381, 1740,
	382, 1740,
	383, 1740,
	384, 1740,
	385, 1740,
	386, 1740,
	387, 1740,
	388, 1740,
	389, 1740,
	391, 1740,
	392, 1740,
	393, 1740,
	394, 1740,
	395, 1740,
	396, 1740,
	397, 1740,
	398, 1740,
	399, 1740,
	400, 1740,
	401, 1740,
	402, 1740,
	403, 1740,
	404, 1740,
	405, 1740,
	407, 1740,
	408, 1740,
	409, 1740,
	411, 1740,
	412, 1740,
	413, 1740,
	414, 1740,
	415, 1740,
	416, 1740,
	417, 1740,
	418, 1740,
	419, 1740,
	420, 1740,
	421, 1740,
	422, 1740,
	423, 1740,
	424, 1740,
	426, 1740,
	428, 1740,
	429, 1740,
	430, 1740,
	436, 1740,
	437, 1740,
	438, 1740,
	440, 1740,
	441, 1740,
	442, 1740,
	443, 1740,
	444, 1740,
	445, 1740,
	446, 1740,
	447, 1740,
	448, 1740,
	449, 1740,
	451, 1740,
	452, 1740,
	453, 1740,
	455, 1740,
	456, 1740,
	457, 1740,
	458, 1740,
	459, 1740,
	460, 1740,
	461, 1740,
	463, 1740,
	464, 1740,
	465, 1740,
	466, 1740,
	467, 1740,
	468, 1740,
	469, 1740,
	470, 1740,
	471, 1740,
	472, 1740,
	473, 1740,
	474, 1740,
	475, 1740,
	477, 1740,
	478, 1740,
	479, 1740,
	480, 1740,
	481, 1740,
	482, 1740,
	484, 1740,
	485, 1740,
	486, 1740,
	487, 1740,
	488, 1740,
	489, 1740,
	491, 1740,
	492, 1740,
	493, 1740,
	494, 1740,
	495, 1740,
	496, 1740,
	497, 1740,
	498, 1740,
	500, 1740,
	502, 1740,
	503, 1740,
	504, 1740,
	505, 1740,
	506, 1740,
	507, 1740,
	508, 1740,
	509, 1740,
	510, 1740,
	511, 1740,
	512, 1740,
	513, 1740,
	514, 1740,
	515, 1740,
	516, 1740,
	517, 1740,
	518, 1740,
	519, 1740,
	520, 1740,
	522, 1740,
	523, 1740,
	525, 1740,
	526, 1740,
	528, 1740,
	529, 1740,
	530, 1740,
	531, 1740,
	532, 1740,
	533, 1740,
	535, 1740,
	536, 1740,
	538, 1740,
	539, 1740,
	540, 1740,
	541, 1740,
	542, 1740,
	544, 1740,
	546, 1740,
	547, 1740,
	548, 1740,
	549, 1740,
	550, 1740,
	551, 1740,
	552, 1740,
	554, 1740,
	555, 1740,
	556, 1740,
	557, 1740,
	558, 1740,
	559, 1740,
	560, 1740,
	563, 1740,
	564, 1740,
	565, 1740,
	566, 1740,
	567, 1740,
	568, 1740,
	569, 1740,
	570, 1740,
	572, 1740,
	575, 1740,
	576, 1740,
	577, 1740,
	578, 1740,
	579, 1740,
	580, 1740,
	582, 1740,
	583, 1740,
	584, 1740,
	585, 1740,
	586, 1740,
	587, 1740,
	588, 1740,
	589, 1740,
	594, 1740,
	595, 1740,
	596, 1740,
	597, 1740,
	598, 1740,
	599, 1740,
	-2, 0,
	-1, 165,
	1, 1588,
	135, 1588,
	260, 1588,
	346, 1588,
	408, 1588,
	418, 1588,
	603, 1588,
	635, 1588,
	-2, 0,
	-1, 167,
	1, 1588,
	635, 1588,
	-2, 0,
	-1, 168,
	1, 1588,
	635, 1588,
	-2, 0,
	-1, 169,
	1, 1588,
	543, 1588,
	635, 1588,
	-2, 0,
	-1, 201,
	156, 1708,
	176, 1708,
	189, 1708,
	252, 1708,
	285, 1708,
	359, 1708,
	370, 1708,
	561, 1708,
	-2, 1683,
	-1, 253,
	4, 1747,
	5, 1747,
	6, 1747,
	7, 1747,
	8, 1747,
	9, 1747,
	10, 1747,
	21, 1747,
	22, 1747,
	23, 1747,
	24, 1747,
	25, 1747,
	26, 1747,
	27, 1747,
	28, 1747,
	30, 1747,
	31, 1747,
	37, 1747,
	38, 1747,
	41, 1747,
	43, 1747,
	44, 1747,
	45, 1747,
	46, 1747,
	47, 1747,
	48, 1747,
	49, 1747,
	50, 1747,
	51, 1747,
	52, 1747,
	53, 1747,
	54, 1747,
	56, 1747,
	57, 1747,
	58, 1747,
	59, 1747,
	61, 1747,
	62, 1747,
	63, 1747,
	64, 1747,
	65, 1747,
	66, 1747,
	67, 1747,
	68, 1747,
	69, 1747,
	70, 1747,
	71, 1747,
	72, 1747,
	73, 1747,
	74, 1747,
	76, 1747,
	77, 1747,
	78, 1747,
	80, 1747,
	82, 1747,
	83, 1747,
	84, 1747,
	85, 1747,
	86, 1747,
	87, 1747,
	88, 1747,
	89, 1747,
	92, 1747,
	93, 1747,
	94, 1747,
	95, 1747,
	96, 1747,
	98, 1747,
	100, 1747,
	101, 1747,
	102, 1747,
	103, 1747,
	104, 1747,
	105, 1747,
	107, 1747,
	108, 1747,
	109, 1747,
	110, 1747,
	111, 1747,
	112, 1747,
	113, 1747,
	114, 1747,
	115, 1747,
	116, 1747,
	117, 1747,
	118, 1747,
	119, 1747,
	120, 1747,
	121, 1747,
	122, 1747,
	123, 1747,
	124, 1747,
	125, 1747,
	126, 1747,
	127, 1747,
	128, 1747,
	129, 1747,
	130, 1747,
	131, 1747,
	132, 1747,
	133, 1747,
	134, 1747,
	136, 1747,
	137, 1747,
	138, 1747,
	140, 1747,
	141, 1747,
	142, 1747,
	145, 1747,
	146, 1747,
	147, 1747,
	149, 1747,
	150, 1747,
	151, 1747,
	153, 1747,
	154, 1747,
	155, 1747,
	157, 1747,
	158, 1747,
	159, 1747,
	160, 1747,
	161, 1747,
	162, 1747,
	163, 1747,
	164, 1747,
	165, 1747,
	166, 1747,
	167, 1747,
	168, 1747,
	169, 1747,
	170, 1747,
	171, 1747,
	172, 1747,
	173, 1747,
	174, 1747,
	175, 1747,
	181, 1747,
	182, 1747,
	183, 1747,
	184, 1747,
	188, 1747,
	190, 1747,
	191, 1747,
	192, 1747,
	194, 1747,
	195, 1747,
	197, 1747,
	198, 1747,
	199, 1747,
	200, 1747,
	201, 1747,
	202, 1747,
	203, 1747,
	204, 1747,
	205, 1747,
	206, 1747,
	207, 1747,
	208, 1747,
	209, 1747,
	210, 1747,
	211, 1747,
	213, 1747,
	214, 1747,
	216, 1747,
	217, 1747,
	219, 1747,
	220, 1747,
	221, 1747,
	222, 1747,
	223, 1747,
	224, 1747,
	225, 1747,
	226, 1747,
	227, 1747,
	228, 1747,
	229, 1747,
	230, 1747,
	231, 1747,
	232, 1747,
	234, 1747,
	235, 1747,
	236, 1747,
	237, 1747,
	238, 1747,
	242, 1747,
	243, 1747,
	244, 1747,
	245, 1747,
	247, 1747,
	248, 1747,
	249, 1747,
	250, 1747,
	251, 1747,
	253, 1747,
	255, 1747,
	256, 1747,
	257, 1747,
	258, 1747,
	259, 1747,
	260, 1747,
	261, 1747,
	262, 1747,
	263, 1747,
	264, 1747,
	268, 1747,
	269, 1747,
	270, 1747,
	271, 1747,
	272, 1747,
	273, 1747,
	275, 1747,
	276, 1747,
	277, 1747,
	279, 1747,
	280, 1747,
	281, 1747,
	282, 1747,
	283, 1747,
	284, 1747,
	286, 1747,
	287, 1747,
	288, 1747,
	289, 1747,
	290, 1747,
	291, 1747,
	292, 1747,
	293, 1747,
	294, 1747,
	295, 1747,
	296, 1747,
	297, 1747,
	298, 1747,
	300, 1747,
	301, 1747,
	302, 1747,
	303, 1747,
	304, 1747,
	305, 1747,
	306, 1747,
	307, 1747,
	308, 1747,
	309, 1747,
	310, 1747,
	311, 1747,
	312, 1747,
	313, 1747,
	314, 1747,
	315, 1747,
	316, 1747,
	317, 1747,
	318, 1747,
	319, 1747,
	320, 1747,
	321, 1747,
	322, 1747,
	324, 1747,
	325, 1747,
	326, 1747,
	327, 1747,
	328, 1747,
	329, 1747,
	330, 1747,
	331, 1747,
	332, 1747,
	333, 1747,
	334, 1747,
	335, 1747,
	336, 1747,
	337, 1747,
	338, 1747,
	339, 1747,
	340, 1747,
	341, 1747,
	342, 1747,
	343, 1747,
	344, 1747,
	345, 1747,
	346, 1747,
	347, 1747,
	348, 1747,
	349, 1747,
	350, 1747,
	351, 1747,
	352, 1747,
	353, 1747,
	354, 1747,
	355, 1747,
	356, 1747,
	357, 1747,
	358, 1747,
	361, 1747,
	363, 1747,
	366, 1747,
	367, 1747,
	368, 1747,
	371, 1747,
	372, 1747,
	373, 1747,
	374, 1747,
	375, 1747,
	376, 1747,
	377, 1747,
	378, 1747,
	379, 1747,
	380, 1747,
	381, 1747,
	382, 1747,
	383, 1747,
	384, 1747,
	385, 1747,
	386, 1747,
	387, 1747,
	388, 1747,
	389, 1747,
	391, 1747,
	392, 1747,
	393, 1747,
	394, 1747,
	395, 1747,
	396, 1747,
	397, 1747,
	398, 1747,
	399, 1747,
	400, 1747,
	401, 1747,
	402, 1747,
	403, 1747,
	404, 1747,
	405, 1747,
	407, 1747,
	408, 1747,
	409, 1747,
	411, 1747,
	412, 1747,
	413, 1747,
	414, 1747,
	415, 1747,
	416, 1747,
	417, 1747,
	418, 1747,
	419, 1747,
	420, 1747,
	421, 1747,
	422, 1747,
	423, 1747,
	424, 1747,
	426, 1747,
	428, 1747,
	429, 1747,
	430, 1747,
	436, 1747,
	437, 1747,
	438, 1747,
	440, 1747,
	441, 1747,
	442, 1747,
	443, 1747,
	444, 1747,
	445, 1747,
	446, 1747,
	447, 1747,
	448, 1747,
	449, 1747,
	451, 1747,
	452, 1747,
	453, 1747,
	454, 1747,
	455, 1747,
	456, 1747,
	457, 1747,
	458, 1747,
	459, 1747,
	460, 1747,
	461, 1747,
	463, 1747,
	464, 1747,
	465, 1747,
	466, 1747,
	467, 1747,
	468, 1747,
	469, 1747,
	470, 1747,
	471, 1747,
	472, 1747,
	473, 1747,
	474, 1747,
	475, 1747,
	477, 1747,
	478, 1747,
	479, 1747,
	480, 1747,
	481, 1747,
	482, 1747,
	483, 1747,
	484, 1747,
	485, 1747,
	486, 1747,
	487, 1747,
	488, 1747,
	489, 1747,
	490, 1747,
	491, 1747,
	492, 1747,
	493, 1747,
	494, 1747,
	495, 1747,
	496, 1747,
	497, 1747,
	498, 1747,
	500, 1747,
	502, 1747,
	503, 1747,
	504, 1747,
	505, 1747,
	506, 1747,
	507, 1747,
	508, 1747,
	509, 1747,
	510, 1747,
	511, 1747,
	512, 1747,
	513, 1747,
	514, 1747,
	515, 1747,
	516, 1747,
	517, 1747,
	518, 1747,
	519, 1747,
	520, 1747,
	522, 1747,
	523, 1747,
	524, 1747,
	525, 1747,
	526, 1747,
	528, 1747,
	529, 1747,
	530, 1747,
	531, 1747,
	532, 1747,
	533, 1747,
	535, 1747,
	536, 1747,
	538, 1747,
	539, 1747,
	540, 1747,
	541, 1747,
	542, 1747,
	544, 1747,
	546, 1747,
	547, 1747,
	548, 1747,
	549, 1747,
	550, 1747,
	551, 1747,
	552, 1747,
	553, 1747,
	554, 1747,
	555, 1747,
	556, 1747,
	557, 1747,
	558, 1747,
	559, 1747,
	560, 1747,
	562, 1747,
	563, 1747,
	564, 1747,
	565, 1747,
	566, 1747,
	567, 1747,
	568, 1747,
	569, 1747,
	570, 1747,
	571, 1747,
	572, 1747,
	575, 1747,
	576, 1747,
	577, 1747,
	578, 1747,
	579, 1747,
	580, 1747,
	582, 1747,
	583, 1747,
	584, 1747,
	585, 1747,
	586, 1747,
	587, 1747,
	588, 1747,
	589, 1747,
	594, 1747,
	595, 1747,
	596, 1747,
	597, 1747,
	598, 1747,
	599, 1747,
	600, 1747,
	615, 1747,
	622, 1747,
	623, 1747,
	624, 1747,
	632, 1747,
	636, 1747,
	-2, 0,
	-1, 799,
	4, 1467,
	21, 1467,
	22, 1467,
	23, 1467,
	24, 1467,
	25, 1467,
	26, 1467,
	27, 1467,
	28, 1467,
	30, 1467,
	31, 1467,
	37, 1467,
	41, 1467,
	43, 1467,
	44, 1467,
	46, 1467,
	47, 1467,
	48, 1467,
	49, 1467,
	50, 1467,
	51, 1467,
	52, 1467,
	53, 1467,
	54, 1467,
	56, 1467,
	57, 1467,
	58, 1467,
	59, 1467,
	61, 1467,
	62, 1467,
	63, 1467,
	64, 1467,
	65, 1467,
	66, 1467,
	67, 1467,
	71, 1467,
	72, 1467,
	73, 1467,
	74, 1467,
	76, 1467,
	77, 1467,
	78, 1467,
	82, 1467,
	83, 1467,
	84, 1467,
	85, 1467,
	86, 1467,
	87, 1467,
	88, 1467,
	89, 1467,
	92, 1467,
	93, 1467,
	94, 1467,
	95, 1467,
	96, 1467,
	98, 1467,
	100, 1467,
	101, 1467,
	102, 1467,
	103, 1467,
	104, 1467,
	105, 1467,
	107, 1467,
	108, 1467,
	109, 1467,
	111, 1467,
	112, 1467,
	113, 1467,
	121, 1467,
	122, 1467,
	123, 1467,
	124, 1467,
	125, 1467,
	127, 1467,
	128, 1467,
	129, 1467,
	130, 1467,
	132, 1467,
	133, 1467,
	134, 1467,
	136, 1467,
	137, 1467,
	138, 1467,
	140, 1467,
	141, 1467,
	142, 1467,
	145, 1467,
	146, 1467,
	147, 1467,
	149, 1467,
	150, 1467,
	151, 1467,
	153, 1467,
	154, 1467,
	155, 1467,
	157, 1467,
	158, 1467,
	159, 1467,
	160, 1467,
	161, 1467,
	162, 1467,
	163, 1467,
	164, 1467,
	165, 1467,
	166, 1467,
	167, 1467,
	168, 1467,
	169, 1467,
	170, 1467,
	171, 1467,
	172, 1467,
	173, 1467,
	175, 1467,
	181, 1467,
	182, 1467,
	183, 1467,
	184, 1467,
	188, 1467,
	190, 1467,
	191, 1467,
	192, 1467,
	194, 1467,
	195, 1467,
	198, 1467,
	199, 1467,
	200, 1467,
	201, 1467,
	202, 1467,
	203, 1467,
	204, 1467,
	205, 1467,
	206, 1467,
	207, 1467,
	208, 1467,
	209, 1467,
	210, 1467,
	211, 1467,
	213, 1467,
	214, 1467,
	216, 1467,
	217, 1467,
	219, 1467,
	220, 1467,
	221, 1467,
	222, 1467,
	223, 1467,
	224, 1467,
	225, 1467,
	226, 1467,
	227, 1467,
	228, 1467,
	229, 1467,
	231, 1467,
	232, 1467,
	234, 1467,
	235, 1467,
	236, 1467,
	237, 1467,
	238, 1467,
	242, 1467,
	243, 1467,
	244, 1467,
	245, 1467,
	248, 1467,
	249, 1467,
	250, 1467,
	251, 1467,
	253, 1467,
	255, 1467,
	256, 1467,
	258, 1467,
	260, 1467,
	261, 1467,
	262, 1467,
	264, 1467,
	268, 1467,
	269, 1467,
	270, 1467,
	271, 1467,
	272, 1467,
	273, 1467,
	275, 1467,
	276, 1467,
	277, 1467,
	279, 1467,
	280, 1467,
	282, 1467,
	283, 1467,
	286, 1467,
	287, 1467,
	288, 1467,
	289, 1467,
	290, 1467,
	291, 1467,
	292, 1467,
	295, 1467,
	296, 1467,
	297, 1467,
	298, 1467,
	300, 1467,
	301, 1467,
	302, 1467,
	303, 1467,
	304, 1467,
	305, 1467,
	306, 1467,
	307, 1467,
	308, 1467,
	309, 1467,
	310, 1467,
	311, 1467,
	312, 1467,
	313, 1467,
	314, 1467,
	315, 1467,
	316, 1467,
	317, 1467,
	318, 1467,
	319, 1467,
	320, 1467,
	321, 1467,
	322, 1467,
	324, 1467,
	326, 1467,
	327, 1467,
	328, 1467,
	329, 1467,
	330, 1467,
	331, 1467,
	332, 1467,
	333, 1467,
	334, 1467,
	335, 1467,
	336, 1467,
	337, 1467,
	338, 1467,
	339, 1467,
	340, 1467,
	341, 1467,
	342, 1467,
	344, 1467,
	345, 1467,
	347, 1467,
	349, 1467,
	350, 1467,
	351, 1467,
	352, 1467,
	354, 1467,
	355, 1467,
	356, 1467,
	357, 1467,
	358, 1467,
	361, 1467,
	363, 1467,
	366, 1467,
	367, 1467,
	368, 1467,
	371, 1467,
	372, 1467,
	373, 1467,
	375, 1467,
	377, 1467,
	378, 1467,
	379, 1467,
	380, 1467,
	381, 1467,
	382, 1467,
	383, 1467,
	384, 1467,
	385, 1467,
	386, 1467,
	387, 1467,
	388, 1467,
	389, 1467,
	391, 1467,
	392, 1467,
	393, 1467,
	394, 1467,
	395, 1467,
	396, 1467,
	397, 1467,
	398, 1467,
	399, 1467,
	400, 1467,
	401, 1467,
	402, 1467,
	403, 1467,
	404, 1467,
	405, 1467,
	407, 1467,
	408, 1467,
	409, 1467,
	411, 1467,
	412, 1467,
	413, 1467,
	414, 1467,
	415, 1467,
	416, 1467,
	417, 1467,
	418, 1467,
	419, 1467,
	420, 1467,
	421, 1467,
	422, 1467,
	423, 1467,
	424, 1467,
	426, 1467,
	428, 1467,
	429, 1467,
	430, 1467,
	436, 1467,
	437, 1467,
	438, 1467,
	440, 1467,
	441, 1467,
	442, 1467,
	443, 1467,
	444, 1467,
	445, 1467,
	446, 1467,
	447, 1467,
	448, 1467,
	449, 1467,
	451, 1467,
	452, 1467,
	453, 1467,
	455, 1467,
	456, 1467,
	457, 1467,
	458, 1467,
	459, 1467,
	460, 1467,
	461, 1467,
	463, 1467,
	464, 1467,
	465, 1467,
	466, 1467,
	467, 1467,
	468, 1467,
	469, 1467,
	470, 1467,
	471, 1467,
	472, 1467,
	473, 1467,
	474, 1467,
	475, 1467,
	477, 1467,
	478, 1467,
	479, 1467,
	480, 1467,
	481, 1467,
	482, 1467,
	484, 1467,
	485, 1467,
	486, 1467,
	487, 1467,
	488, 1467,
	489, 1467,
	491, 1467,
	492, 1467,
	493, 1467,
	494, 1467,
	495, 1467,
	496, 1467,
	497, 1467,
	498, 1467,
	500, 1467,
	502, 1467,
	503, 1467,
	504, 1467,
	505, 1467,
	506, 1467,
	507, 1467,
	508, 1467,
	509, 1467,
	510, 1467,
	511, 1467,
	512, 1467,
	513, 1467,
	514, 1467,
	515, 1467,
	516, 1467,
	517, 1467,
	518, 1467,
	519, 1467,
	520, 1467,
	522, 1467,
	523, 1467,
	525, 1467,
	526, 1467,
	528, 1467,
	529, 1467,
	530, 1467,
	531, 1467,
	532, 1467,
	533, 1467,
	535, 1467,
	536, 1467,
	538, 1467,
	539, 1467,
	540, 1467,
	541, 1467,
	542, 1467,
	544, 1467,
	546, 1467,
	547, 1467,
	548, 1467,
	549, 1467,
	550, 1467,
	551, 1467,
	552, 1467,
	554, 1467,
	555, 1467,
	556, 1467,
	557, 1467,
	558, 1467,
	559, 1467,
	560, 1467,
	563, 1467,
	564, 1467,
	565, 1467,
	566, 1467,
	567, 1467,
	568, 1467,
	569, 1467,
	570, 1467,
	572, 1467,
	575, 1467,
	576, 1467,
	577, 1467,
	578, 1467,
	579, 1467,
	580, 1467,
	582, 1467,
	583, 1467,
	584, 1467,
	585, 1467,
	586, 1467,
	587, 1467,
	588, 1467,
	589, 1467,
	594, 1467,
	595, 1467,
	596, 1467,
	597, 1467,
	598, 1467,
	599, 1467,
	-2, 0,
	-1, 818,
	196, 2543,
	543, 2543,
	614, 2543,
	634, 2543,
	-2, 0,
	-1, 819,
	196, 2529,
	543, 2529,
	614, 2529,
	634, 2529,
	-2, 0,
	-1, 821,
	196, 2810,
	543, 2810,
	614, 2810,
	634, 2810,
	-2, 0,
	-1, 824,
	196, 2659,
	543, 2659,
	614, 2659,
	634, 2659,
	-2, 0,
	-1, 825,
	196, 2855,
	543, 2855,
	614, 2855,
	634, 2855,
	-2, 0,
	-1, 833,
	196, 2687,
	543, 2687,
	614, 2687,
	634, 2687,
	-2, 777,
	-1, 849,
	8, 910,
	29, 910,
	622, 910,
	623, 910,
	-2, 915,
	-1, 853,
	1, 2597,
	635, 2597,
	-2, 915,
	-1, 854,
	1, 2647,
	635, 2647,
	-2, 915,
	-1, 857,
	1, 2692,
	635, 2692,
	-2, 908,
	-1, 858,
	1, 2748,
	635, 2748,
	-2, 909,
	-1, 859,
	1, 2602,
	635, 2602,
	-2, 912,
	-1, 860,
	1, 2516,
	635, 2516,
	-2, 913,
	-1, 895,
	634, 2475,
	637, 2475,
	-2, 1132,
	-1, 896,
	634, 2477,
	637, 2477,
	-2, 1133,
	-1, 897,
	634, 2476,
	637, 2476,
	-2, 1134,
	-1, 898,
	637, 2401,
	-2, 1135,
	-1, 923,
	189, 287,
	-2, 0,
	-1, 947,
	45, 2448,
	-2, 0,
	-1, 948,
	582, 1445,
	-2, 1216,
	-1, 964,
	4, 1881,
	21, 1881,
	22, 1881,
	23, 1881,
	24, 1881,
	25, 1881,
	26, 1881,
	27, 1881,
	28, 1881,
	30, 1881,
	31, 1881,
	37, 1881,
	41, 1881,
	43, 1881,
	44, 1881,
	46, 1881,
	47, 1881,
	48, 1881,
	49, 1881,
	50, 1881,
	51, 1881,
	52, 1881,
	53, 1881,
	54, 1881,
	56, 1881,
	57, 1881,
	58, 1881,
	59, 1881,
	61, 1881,
	62, 1881,
	63, 1881,
	64, 1881,
	65, 1881,
	66, 1881,
	67, 1881,
	71, 1881,
	72, 1881,
	73, 1881,
	74, 1881,
	76, 1881,
	77, 1881,
	78, 1881,
	82, 1881,
	83, 1881,
	84, 1881,
	85, 1881,
	86, 1881,
	87, 1881,
	88, 1881,
	89, 1881,
	92, 1881,
	93, 1881,
	94, 1881,
	95, 1881,
	96, 1881,
	98, 1881,
	100, 1881,
	101, 1881,
	102, 1881,
	103, 1881,
	104, 1881,
	105, 1881,
	107, 1881,
	108, 1881,
	109, 1881,
	111, 1881,
	112, 1881,
	113, 1881,
	121, 1881,
	122, 1881,
	123, 1881,
	124, 1881,
	125, 1881,
	127, 1881,
	128, 1881,
	129, 1881,
	130, 1881,
	132, 1881,
	133, 1881,
	134, 1881,
	136, 1881,
	137, 1881,
	138, 1881,
	140, 1881,
	141, 1881,
	142, 1881,
	145, 1881,
	146, 1881,
	147, 1881,
	149, 1881,
	150, 1881,
	151, 1881,
	153, 1881,
	154, 1881,
	155, 1881,
	157, 1881,
	158, 1881,
	159, 1881,
	160, 1881,
	161, 1881,
	162, 1881,
	163, 1881,
	164, 1881,
	165, 1881,
	166, 1881,
	167, 1881,
	168, 1881,
	169, 1881,
	170, 1881,
	171, 1881,
	172, 1881,
	173, 1881,
	175, 1881,
	181, 1881,
	182, 1881,
	183, 1881,
	184, 1881,
	188, 1881,
	190, 1881,
	191, 1881,
	192, 1881,
	194, 1881,
	195, 1881,
	198, 1881,
	199, 1881,
	200, 1881,
	201, 1881,
	202, 1881,
	203, 1881,
	204, 1881,
	205, 1881,
	206, 1881,
	207, 1881,
	208, 1881,
	209, 1881,
	210, 1881,
	211, 1881,
	213, 1881,
	214, 1881,
	216, 1881,
	217, 1881,
	219, 1881,
	220, 1881,
	221, 1881,
	222, 1881,
	223, 1881,
	224, 1881,
	225, 1881,
	226, 1881,
	227, 1881,
	228, 1881,
	229, 1881,
	231, 1881,
	232, 1881,
	234, 1881,
	235, 1881,
	236, 1881,
	237, 1881,
	238, 1881,
	242, 1881,
	243, 1881,
	244, 1881,
	245, 1881,
	248, 1881,
	249, 1881,
	250, 1881,
	251, 1881,
	253, 1881,
	255, 1881,
	256, 1881,
	258, 1881,
	260, 1881,
	261, 1881,
	262, 1881,
	264, 1881,
	268, 1881,
	269, 1881,
	270, 1881,
	271, 1881,
	272, 1881,
	273, 1881,
	275, 1881,
	276, 1881,
	277, 1881,
	279, 1881,
	280, 1881,
	282, 1881,
	283, 1881,
	286, 1881,
	287, 1881,
	288, 1881,
	289, 1881,
	290, 1881,
	291, 1881,
	292, 1881,
	295, 1881,
	296, 1881,
	297, 1881,
	298, 1881,
	300, 1881,
	301, 1881,
	302, 1881,
	303, 1881,
	304, 1881,
	305, 1881,
	306, 1881,
	307, 1881,
	308, 1881,
	309, 1881,
	310, 1881,
	311, 1881,
	312, 1881,
	313, 1881,
	314, 1881,
	315, 1881,
	316, 1881,
	317, 1881,
	318, 1881,
	319, 1881,
	320, 1881,
	321, 1881,
	322, 1881,
	324, 1881,
	326, 1881,
	327, 1881,
	328, 1881,
	329, 1881,
	330, 1881,
	331, 1881,
	332, 1881,
	333, 1881,
	334, 1881,
	335, 1881,
	336, 1881,
	337, 1881,
	338, 1881,
	339, 1881,
	340, 1881,
	341, 1881,
	342, 1881,
	344, 1881,
	345, 1881,
	347, 1881,
	349, 1881,
	350, 1881,
	351, 1881,
	352, 1881,
	354, 1881,
	355, 1881,
	356, 1881,
	357, 1881,
	358, 1881,
	361, 1881,
	363, 1881,
	366, 1881,
	367, 1881,
	368, 1881,
	371, 1881,
	372, 1881,
	373, 1881,
	375, 1881,
	377, 1881,
	378, 1881,
	379, 1881,
	380, 1881,
	381, 1881,
	382, 1881,
	383, 1881,
	384, 1881,
	385, 1881,
	386, 1881,
	387, 1881,
	388, 1881,
	389, 1881,
	391, 1881,
	392, 1881,
	393, 1881,
	394, 1881,
	395, 1881,
	396, 1881,
	397, 1881,
	398, 1881,
	399, 1881,
	400, 1881,
	401, 1881,
	402, 1881,
	403, 1881,
	404, 1881,
	405, 1881,
	407, 1881,
	408, 1881,
	409, 1881,
	411, 1881,
	412, 1881,
	413, 1881,
	414, 1881,
	415, 1881,
	416, 1881,
	417, 1881,
	418, 1881,
	419, 1881,
	420, 1881,
	421, 1881,
	422, 1881,
	423, 1881,
	424, 1881,
	426, 1881,
	428, 1881,
	429, 1881,
	430, 1881,
	436, 1881,
	437, 1881,
	438, 1881,
	440, 1881,
	441, 1881,
	442, 1881,
	443, 1881,
	444, 1881,
	445, 1881,
	446, 1881,
	447, 1881,
	448, 1881,
	449, 1881,
	451, 1881,
	452, 1881,
	453, 1881,
	455, 1881,
	456, 1881,
	457, 1881,
	458, 1881,
	459, 1881,
	460, 1881,
	461, 1881,
	463, 1881,
	464, 1881,
	465, 1881,
	466, 1881,
	467, 1881,
	468, 1881,
	469, 1881,
	470, 1881,
	471, 1881,
	472, 1881,
	473, 1881,
	474, 1881,
	475, 1881,
	477, 1881,
	478, 1881,
	479, 1881,
	480, 1881,
	481, 1881,
	482, 1881,
	484, 1881,
	485, 1881,
	486, 1881,
	487, 1881,
	488, 1881,
	489, 1881,
	491, 1881,
	492, 1881,
	493, 1881,
	494, 1881,
	495, 1881,
	496, 1881,
	497, 1881,
	498, 1881,
	500, 1881,
	502, 1881,
	503, 1881,
	504, 1881,
	505, 1881,
	506, 1881,
	507, 1881,
	508, 1881,
	509, 1881,
	510, 1881,
	511, 1881,
	512, 1881,
	513, 1881,
	514, 1881,
	515, 1881,
	516, 1881,
	517, 1881,
	518, 1881,
	519, 1881,
	520, 1881,
	522, 1881,
	523, 1881,
	525, 1881,
	526, 1881,
	528, 1881,
	529, 1881,
	530, 1881,
	531, 1881,
	532, 1881,
	533, 1881,
	535, 1881,
	536, 1881,
	538, 1881,
	539, 1881,
	540, 1881,
	541, 1881,
	542, 1881,
	544, 1881,
	546, 1881,
	547, 1881,
	548, 1881,
	549, 1881,
	550, 1881,
	551, 1881,
	552, 1881,
	554, 1881,
	555, 1881,
	556, 1881,
	557, 1881,
	558, 1881,
	559, 1881,
	560, 1881,
	563, 1881,
	564, 1881,
	565, 1881,
	566, 1881,
	567, 1881,
	568, 1881,
	569, 1881,
	570, 1881,
	572, 1881,
	575, 1881,
	576, 1881,
	577, 1881,
	578, 1881,
	579, 1881,
	580, 1881,
	582, 1881,
	583, 1881,
	584, 1881,
	585, 1881,
	586, 1881,
	587, 1881,
	588, 1881,
	589, 1881,
	594, 1881,
	595, 1881,
	596, 1881,
	597, 1881,
	598, 1881,
	599, 1881,
	-2, 0,
	-1, 974,
	272, 452,
	-2, 0,
	-1, 1052,
	196, 954,
	-2, 0,
	-1, 1053,
	413, 1007,
	482, 1007,
	526, 1007,
	548, 1007,
	-2, 0,
	-1, 1054,
	413, 1006,
	482, 1006,
	526, 1006,
	548, 1006,
	-2, 928,
	-1, 1058,
	1, 1059,
	631, 1059,
	633, 1059,
	635, 1059,
	-2, 0,
	-1, 1060,
	1, 981,
	631, 981,
	633, 981,
	635, 981,
	-2, 0,
	-1, 1061,
	1, 985,
	631, 985,
	633, 985,
	635, 985,
	-2, 0,
	-1, 1062,
	1, 1131,
	189, 1131,
	631, 1131,
	633, 1131,
	635, 1131,
	-2, 0,
	-1, 1070,
	1, 1012,
	631, 1012,
	633, 1012,
	635, 1012,
	-2, 0,
	-1, 1077,
	1, 1059,
	631, 1059,
	633, 1059,
	635, 1059,
	-2, 0,
	-1, 1078,
	1, 1061,
	631, 1061,
	633, 1061,
	635, 1061,
	-2, 0,
	-1, 1079,
	1, 1064,
	631, 1064,
	633, 1064,
	635, 1064,
	-2, 0,
	-1, 1087,
	1, 1094,
	631, 1094,
	633, 1094,
	635, 1094,
	-2, 0,
	-1, 1088,
	1, 1096,
	631, 1096,
	633, 1096,
	635, 1096,
	-2, 0,
	-1, 1093,
	1, 1124,
	631, 1124,
	633, 1124,
	635, 1124,
	-2, 0,
	-1, 1149,
	176, 1751,
	189, 1751,
	285, 1751,
	359, 1751,
	-2, 1687,
	-1, 1165,
	176, 1750,
	189, 1750,
	285, 1750,
	359, 1750,
	-2, 1684,
	-1, 1194,
	634, 2474,
	-2, 785,
	-1, 1223,
	5, 2466,
	632, 2464,
	-2, 2455,
	-1, 1231,
	5, 2487,
	632, 2484,
	-2, 2475,
	-1, 1232,
	5, 2488,
	632, 2485,
	-2, 2476,
	-1, 1240,
	634, 2472,
	-2, 2454,
	-1, 1241,
	632, 2943,
	-2, 2473,
	-1, 1264,
	632, 2942,
	-2, 2489,
	-1, 1265,
	5, 1956,
	-2, 2913,
	-1, 1266,
	5, 1957,
	-2, 2914,
	-1, 1267,
	5, 1958,
	-2, 2928,
	-1, 1268,
	5, 1959,
	-2, 2892,
	-1, 1269,
	5, 1960,
	-2, 2926,
	-1, 1270,
	5, 1968,
	-2, 2905,
	-1, 1271,
	5, 1955,
	-2, 2901,
	-1, 1272,
	5, 1955,
	-2, 2900,
	-1, 1273,
	5, 1955,
	-2, 2919,
	-1, 1274,
	5, 1966,
	-2, 2894,
	-1, 1275,
	5, 1971,
	-2, 2893,
	-1, 1276,
	5, 1973,
	-2, 2938,
	-1, 1279,
	5, 1995,
	-2, 2931,
	-1, 1280,
	5, 1987,
	-2, 2932,
	-1, 1281,
	5, 1995,
	-2, 2933,
	-1, 1282,
	5, 1991,
	-2, 2934,
	-1, 1283,
	5, 1941,
	-2, 2906,
	-1, 1284,
	5, 1942,
	-2, 2907,
	-1, 1285,
	5, 1943,
	-2, 2895,
	-1, 1313,
	5, 1978,
	-2, 2939,
	-1, 1314,
	5, 1979,
	-2, 2929,
	-1, 1315,
	5, 1980,
	583, 1980,
	-2, 2896,
	-1, 1316,
	5, 1981,
	583, 1981,
	-2, 2897,
	-1, 1354,
	632, 2484,
	-2, 2475,
	-1, 1355,
	632, 2485,
	-2, 2476,
	-1, 1453,
	196, 2855,
	543, 2855,
	614, 2855,
	634, 2855,
	-2, 0,
	-1, 1458,
	1, 761,
	635, 761,
	-2, 1596,
	-1, 1605,
	379, 2449,
	440, 2449,
	484, 2449,
	624, 2449,
	-2, 2439,
	-1, 1611,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2850,
	-1, 1612,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2588,
	-1, 1613,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2771,
	-1, 1619,
	636, 2449,
	-2, 2451,
	-1, 1643,
	1, 1442,
	445, 1396,
	484, 1396,
	606, 1396,
	611, 1396,
	631, 1442,
	633, 1442,
	635, 1442,
	-2, 1736,
	-1, 1649,
	212, 1539,
	233, 1539,
	453, 1539,
	-2, 0,
	-1, 1698,
	422, 1215,
	582, 1215,
	-2, 447,
	-1, 1715,
	45, 2447,
	-2, 1178,
	-1, 1722,
	1, 1442,
	631, 1442,
	633, 1442,
	635, 1442,
	-2, 1736,
	-1, 1730,
	4, 1467,
	21, 1467,
	22, 1467,
	23, 1467,
	24, 1467,
	25, 1467,
	26, 1467,
	27, 1467,
	28, 1467,
	30, 1467,
	31, 1467,
	37, 1467,
	41, 1467,
	43, 1467,
	44, 1467,
	46, 1467,
	47, 1467,
	48, 1467,
	49, 1467,
	50, 1467,
	51, 1467,
	52, 1467,
	53, 1467,
	54, 1467,
	56, 1467,
	57, 1467,
	58, 1467,
	59, 1467,
	61, 1467,
	62, 1467,
	63, 1467,
	64, 1467,
	65, 1467,
	66, 1467,
	67, 1467,
	71, 1467,
	72, 1467,
	73, 1467,
	74, 1467,
	76, 1467,
	77, 1467,
	78, 1467,
	82, 1467,
	83, 1467,
	84, 1467,
	85, 1467,
	86, 1467,
	87, 1467,
	88, 1467,
	89, 1467,
	92, 1467,
	93, 1467,
	94, 1467,
	95, 1467,
	96, 1467,
	98, 1467,
	100, 1467,
	101, 1467,
	102, 1467,
	103, 1467,
	104, 1467,
	105, 1467,
	107, 1467,
	108, 1467,
	109, 1467,
	111, 1467,
	112, 1467,
	113, 1467,
	121, 1467,
	122, 1467,
	123, 1467,
	124, 1467,
	125, 1467,
	127, 1467,
	128, 1467,
	129, 1467,
	130, 1467,
	132, 1467,
	133, 1467,
	134, 1467,
	136, 1467,
	137, 1467,
	138, 1467,
	140, 1467,
	141, 1467,
	142, 1467,
	145, 1467,
	146, 1467,
	147, 1467,
	149, 1467,
	150, 1467,
	151, 1467,
	153, 1467,
	154, 1467,
	155, 1467,
	157, 1467,
	158, 1467,
	159, 1467,
	160, 1467,
	161, 1467,
	162, 1467,
	163, 1467,
	164, 1467,
	165, 1467,
	166, 1467,
	167, 1467,
	168, 1467,
	169, 1467,
	170, 1467,
	171, 1467,
	172, 1467,
	173, 1467,
	181, 1467,
	182, 1467,
	183, 1467,
	184, 1467,
	188, 1467,
	190, 1467,
	191, 1467,
	192, 1467,
	194, 1467,
	195, 1467,
	198, 1467,
	199, 1467,
	200, 1467,
	201, 1467,
	202, 1467,
	203, 1467,
	204, 1467,
	205, 1467,
	206, 1467,
	207, 1467,
	208, 1467,
	209, 1467,
	210, 1467,
	211, 1467,
	213, 1467,
	214, 1467,
	216, 1467,
	217, 1467,
	219, 1467,
	220, 1467,
	221, 1467,
	222, 1467,
	223, 1467,
	224, 1467,
	225, 1467,
	226, 1467,
	227, 1467,
	228, 1467,
	229, 1467,
	231, 1467,
	232, 1467,
	234, 1467,
	235, 1467,
	236, 1467,
	237, 1467,
	238, 1467,
	243, 1467,
	244, 1467,
	245, 1467,
	248, 1467,
	249, 1467,
	250, 1467,
	251, 1467,
	253, 1467,
	255, 1467,
	256, 1467,
	258, 1467,
	260, 1467,
	261, 1467,
	262, 1467,
	264, 1467,
	268, 1467,
	269, 1467,
	270, 1467,
	271, 1467,
	272, 1467,
	273, 1467,
	275, 1467,
	276, 1467,
	277, 1467,
	279, 1467,
	280, 1467,
	282, 1467,
	283, 1467,
	286, 1467,
	287, 1467,
	288, 1467,
	289, 1467,
	290, 1467,
	291, 1467,
	292, 1467,
	295, 1467,
	296, 1467,
	297, 1467,
	298, 1467,
	300, 1467,
	301, 1467,
	302, 1467,
	303, 1467,
	304, 1467,
	305, 1467,
	306, 1467,
	307, 1467,
	308, 1467,
	309, 1467,
	310, 1467,
	311, 1467,
	312, 1467,
	313, 1467,
	314, 1467,
	315, 1467,
	316, 1467,
	317, 1467,
	318, 1467,
	319, 1467,
	320, 1467,
	321, 1467,
	322, 1467,
	324, 1467,
	326, 1467,
	327, 1467,
	328, 1467,
	329, 1467,
	330, 1467,
	331, 1467,
	332, 1467,
	333, 1467,
	334, 1467,
	335, 1467,
	336, 1467,
	337, 1467,
	338, 1467,
	339, 1467,
	340, 1467,
	341, 1467,
	342, 1467,
	344, 1467,
	345, 1467,
	349, 1467,
	350, 1467,
	351, 1467,
	352, 1467,
	354, 1467,
	355, 1467,
	356, 1467,
	357, 1467,
	358, 1467,
	361, 1467,
	363, 1467,
	364, 1467,
	366, 1467,
	367, 1467,
	368, 1467,
	371, 1467,
	372, 1467,
	373, 1467,
	375, 1467,
	377, 1467,
	378, 1467,
	379, 1467,
	380, 1467,
	381, 1467,
	382, 1467,
	383, 1467,
	384, 1467,
	385, 1467,
	386, 1467,
	387, 1467,
	388, 1467,
	389, 1467,
	391, 1467,
	392, 1467,
	393, 1467,
	394, 1467,
	395, 1467,
	396, 1467,
	397, 1467,
	398, 1467,
	399, 1467,
	400, 1467,
	401, 1467,
	402, 1467,
	403, 1467,
	404, 1467,
	405, 1467,
	407, 1467,
	408, 1467,
	409, 1467,
	411, 1467,
	412, 1467,
	413, 1467,
	414, 1467,
	415, 1467,
	416, 1467,
	417, 1467,
	418, 1467,
	419, 1467,
	420, 1467,
	421, 1467,
	422, 1467,
	423, 1467,
	424, 1467,
	426, 1467,
	428, 1467,
	429, 1467,
	430, 1467,
	436, 1467,
	437, 1467,
	438, 1467,
	440, 1467,
	441, 1467,
	442, 1467,
	443, 1467,
	444, 1467,
	445, 1467,
	446, 1467,
	447, 1467,
	448, 1467,
	449, 1467,
	451, 1467,
	452, 1467,
	453, 1467,
	455, 1467,
	456, 1467,
	457, 1467,
	458, 1467,
	459, 1467,
	460, 1467,
	461, 1467,
	463, 1467,
	464, 1467,
	465, 1467,
	466, 1467,
	467, 1467,
	468, 1467,
	469, 1467,
	470, 1467,
	471, 1467,
	472, 1467,
	473, 1467,
	474, 1467,
	475, 1467,
	477, 1467,
	478, 1467,
	479, 1467,
	480, 1467,
	481, 1467,
	482, 1467,
	484, 1467,
	485, 1467,
	486, 1467,
	487, 1467,
	488, 1467,
	489, 1467,
	491, 1467,
	492, 1467,
	493, 1467,
	494, 1467,
	495, 1467,
	496, 1467,
	497, 1467,
	498, 1467,
	500, 1467,
	502, 1467,
	503, 1467,
	504, 1467,
	505, 1467,
	506, 1467,
	507, 1467,
	508, 1467,
	509, 1467,
	510, 1467,
	511, 1467,
	512, 1467,
	513, 1467,
	514, 1467,
	515, 1467,
	516, 1467,
	517, 1467,
	518, 1467,
	519, 1467,
	520, 1467,
	522, 1467,
	523, 1467,
	525, 1467,
	526, 1467,
	528, 1467,
	529, 1467,
	530, 1467,
	531, 1467,
	532, 1467,
	533, 1467,
	535, 1467,
	536, 1467,
	538, 1467,
	539, 1467,
	540, 1467,
	541, 1467,
	542, 1467,
	544, 1467,
	546, 1467,
	547, 1467,
	548, 1467,
	549, 1467,
	550, 1467,
	551, 1467,
	552, 1467,
	554, 1467,
	555, 1467,
	556, 1467,
	557, 1467,
	558, 1467,
	559, 1467,
	560, 1467,
	563, 1467,
	564, 1467,
	565, 1467,
	566, 1467,
	567, 1467,
	568, 1467,
	569, 1467,
	570, 1467,
	572, 1467,
	575, 1467,
	576, 1467,
	577, 1467,
	578, 1467,
	579, 1467,
	580, 1467,
	582, 1467,
	583, 1467,
	584, 1467,
	585, 1467,
	586, 1467,
	587, 1467,
	588, 1467,
	589, 1467,
	594, 1467,
	595, 1467,
	596, 1467,
	597, 1467,
	598, 1467,
	599, 1467,
	-2, 0,
	-1, 1753,
	1, 594,
	631, 594,
	633, 594,
	635, 594,
	-2, 1707,
	-1, 1756,
	4, 2937,
	11, 2937,
	12, 2937,
	14, 2937,
	15, 2937,
	16, 2937,
	17, 2937,
	18, 2937,
	19, 2937,
	21, 2937,
	22, 2937,
	23, 2937,
	24, 2937,
	25, 2937,
	26, 2937,
	27, 2937,
	28, 2937,
	30, 2937,
	31, 2937,
	34, 2937,
	35, 2937,
	37, 2937,
	39, 2937,
	41, 2937,
	43, 2937,
	44, 2937,
	46, 2937,
	47, 2937,
	48, 2937,
	49, 2937,
	50, 2937,
	51, 2937,
	52, 2937,
	53, 2937,
	54, 2937,
	56, 2937,
	57, 2937,
	58, 2937,
	59, 2937,
	61, 2937,
	62, 2937,
	63, 2937,
	64, 2937,
	65, 2937,
	66, 2937,
	67, 2937,
	70, 2937,
	71, 2937,
	72, 2937,
	73, 2937,
	74, 2937,
	76, 2937,
	77, 2937,
	78, 2937,
	79, 2937,
	82, 2937,
	83, 2937,
	84, 2937,
	85, 2937,
	86, 2937,
	87, 2937,
	88, 2937,
	89, 2937,
	90, 2937,
	92, 2937,
	93, 2937,
	94, 2937,
	95, 2937,
	96, 2937,
	98, 2937,
	99, 2937,
	100, 2937,
	101, 2937,
	102, 2937,
	103, 2937,
	104, 2937,
	105, 2937,
	107, 2937,
	108, 2937,
	109, 2937,
	110, 2937,
	111, 2937,
	112, 2937,
	113, 2937,
	121, 2937,
	122, 2937,
	123, 2937,
	124, 2937,
	125, 2937,
	127, 2937,
	128, 2937,
	129, 2937,
	130, 2937,
	132, 2937,
	133, 2937,
	134, 2937,
	136, 2937,
	137, 2937,
	138, 2937,
	140, 2937,
	141, 2937,
	142, 2937,
	145, 2937,
	146, 2937,
	147, 2937,
	149, 2937,
	150, 2937,
	151, 2937,
	153, 2937,
	154, 2937,
	155, 2937,
	157, 2937,
	158, 2937,
	159, 2937,
	160, 2937,
	161, 2937,
	162, 2937,
	163, 2937,
	164, 2937,
	165, 2937,
	166, 2937,
	167, 2937,
	168, 2937,
	169, 2937,
	170, 2937,
	171, 2937,
	172, 2937,
	173, 2937,
	177, 2937,
	178, 2937,
	179, 2937,
	180, 2937,
	181, 2937,
	182, 2937,
	183, 2937,
	184, 2937,
	187, 2937,
	188, 2937,
	190, 2937,
	191, 2937,
	192, 2937,
	194, 2937,
	195, 2937,
	197, 2937,
	198, 2937,
	199, 2937,
	200, 2937,
	201, 2937,
	202, 2937,
	203, 2937,
	204, 2937,
	205, 2937,
	206, 2937,
	207, 2937,
	208, 2937,
	209, 2937,
	210, 2937,
	211, 2937,
	213, 2937,
	214, 2937,
	216, 2937,
	217, 2937,
	219, 2937,
	220, 2937,
	221, 2937,
	222, 2937,
	223, 2937,
	224, 2937,
	225, 2937,
	226, 2937,
	227, 2937,
	228, 2937,
	229, 2937,
	230, 2937,
	231, 2937,
	232, 2937,
	233, 2937,
	234, 2937,
	235, 2937,
	236, 2937,
	237, 2937,
	238, 2937,
	240, 2937,
	241, 2937,
	243, 2937,
	244, 2937,
	245, 2937,
	247, 2937,
	248, 2937,
	249, 2937,
	250, 2937,
	251, 2937,
	253, 2937,
	255, 2937,
	256, 2937,
	257, 2937,
	258, 2937,
	259, 2937,
	260, 2937,
	261, 2937,
	262, 2937,
	263, 2937,
	264, 2937,
	266, 2937,
	267, 2937,
	268, 2937,
	269, 2937,
	270, 2937,
	271, 2937,
	272, 2937,
	273, 2937,
	275, 2937,
	276, 2937,
	277, 2937,
	279, 2937,
	280, 2937,
	281, 2937,
	282, 2937,
	283, 2937,
	284, 2937,
	286, 2937,
	287, 2937,
	288, 2937,
	289, 2937,
	290, 2937,
	291, 2937,
	292, 2937,
	295, 2937,
	296, 2937,
	297, 2937,
	298, 2937,
	299, 2937,
	300, 2937,
	301, 2937,
	302, 2937,
	303, 2937,
	304, 2937,
	305, 2937,
	306, 2937,
	307, 2937,
	308, 2937,
	309, 2937,
	310, 2937,
	311, 2937,
	312, 2937,
	313, 2937,
	314, 2937,
	315, 2937,
	316, 2937,
	317, 2937,
	318, 2937,
	319, 2937,
	320, 2937,
	321, 2937,
	322, 2937,
	324, 2937,
	325, 2937,
	326, 2937,
	327, 2937,
	328, 2937,
	329, 2937,
	330, 2937,
	331, 2937,
	332, 2937,
	333, 2937,
	334, 2937,
	335, 2937,
	336, 2937,
	337, 2937,
	338, 2937,
	339, 2937,
	340, 2937,
	341, 2937,
	342, 2937,
	344, 2937,
	345, 2937,
	348, 2937,
	349, 2937,
	350, 2937,
	351, 2937,
	352, 2937,
	354, 2937,
	355, 2937,
	356, 2937,
	357, 2937,
	358, 2937,
	361, 2937,
	363, 2937,
	366, 2937,
	367, 2937,
	368, 2937,
	369, 2937,
	371, 2937,
	372, 2937,
	373, 2937,
	375, 2937,
	377, 2937,
	378, 2937,
	379, 2937,
	380, 2937,
	381, 2937,
	382, 2937,
	383, 2937,
	384, 2937,
	385, 2937,
	386, 2937,
	387, 2937,
	388, 2937,
	389, 2937,
	391, 2937,
	392, 2937,
	393, 2937,
	394, 2937,
	395, 2937,
	396, 2937,
	397, 2937,
	398, 2937,
	399, 2937,
	400, 2937,
	401, 2937,
	402, 2937,
	403, 2937,
	404, 2937,
	405, 2937,
	407, 2937,
	408, 2937,
	409, 2937,
	411, 2937,
	412, 2937,
	413, 2937,
	414, 2937,
	415, 2937,
	416, 2937,
	417, 2937,
	418, 2937,
	419, 2937,
	420, 2937,
	421, 2937,
	422, 2937,
	423, 2937,
	424, 2937,
	426, 2937,
	428, 2937,
	429, 2937,
	430, 2937,
	436, 2937,
	437, 2937,
	438, 2937,
	439, 2937,
	440, 2937,
	441, 2937,
	442, 2937,
	443, 2937,
	444, 2937,
	445, 2937,
	446, 2937,
	447, 2937,
	448, 2937,
	449, 2937,
	451, 2937,
	452, 2937,
	453, 2937,
	454, 2937,
	455, 2937,
	456, 2937,
	457, 2937,
	458, 2937,
	459, 2937,
	460, 2937,
	461, 2937,
	462, 2937,
	463, 2937,
	464, 2937,
	465, 2937,
	466, 2937,
	467, 2937,
	468, 2937,
	469, 2937,
	470, 2937,
	471, 2937,
	472, 2937,
	473, 2937,
	474, 2937,
	475, 2937,
	477, 2937,
	478, 2937,
	479, 2937,
	480, 2937,
	481, 2937,
	482, 2937,
	484, 2937,
	485, 2937,
	486, 2937,
	487, 2937,
	488, 2937,
	489, 2937,
	490, 2937,
	491, 2937,
	492, 2937,
	493, 2937,
	494, 2937,
	495, 2937,
	496, 2937,
	497, 2937,
	498, 2937,
	500, 2937,
	502, 2937,
	503, 2937,
	504, 2937,
	505, 2937,
	506, 2937,
	507, 2937,
	508, 2937,
	509, 2937,
	510, 2937,
	511, 2937,
	512, 2937,
	513, 2937,
	514, 2937,
	515, 2937,
	516, 2937,
	517, 2937,
	518, 2937,
	519, 2937,
	520, 2937,
	522, 2937,
	523, 2937,
	524, 2937,
	525, 2937,
	526, 2937,
	528, 2937,
	529, 2937,
	530, 2937,
	531, 2937,
	532, 2937,
	533, 2937,
	535, 2937,
	536, 2937,
	538, 2937,
	539, 2937,
	540, 2937,
	541, 2937,
	542, 2937,
	544, 2937,
	546, 2937,
	547, 2937,
	548, 2937,
	549, 2937,
	550, 2937,
	551, 2937,
	552, 2937,
	554, 2937,
	555, 2937,
	556, 2937,
	557, 2937,
	558, 2937,
	559, 2937,
	560, 2937,
	563, 2937,
	564, 2937,
	565, 2937,
	566, 2937,
	567, 2937,
	568, 2937,
	569, 2937,
	570, 2937,
	572, 2937,
	575, 2937,
	576, 2937,
	577, 2937,
	578, 2937,
	579, 2937,
	580, 2937,
	582, 2937,
	583, 2937,
	584, 2937,
	585, 2937,
	586, 2937,
	587, 2937,
	588, 2937,
	589, 2937,
	594, 2937,
	595, 2937,
	596, 2937,
	597, 2937,
	598, 2937,
	599, 2937,
	600, 2937,
	602, 2937,
	612, 2937,
	613, 2937,
	614, 2937,
	615, 2937,
	616, 2937,
	617, 2937,
	619, 2937,
	620, 2937,
	621, 2937,
	622, 2937,
	623, 2937,
	624, 2937,
	625, 2937,
	626, 2937,
	627, 2937,
	630, 2937,
	633, 2937,
	634, 2937,
	636, 2937,
	637, 2937,
	-2, 0,
	-1, 1761,
	196, 2810,
	543, 2810,
	614, 2810,
	634, 2810,
	-2, 0,
	-1, 1809,
	196, 955,
	-2, 2802,
	-1, 1810,
	196, 956,
	-2, 2595,
	-1, 1811,
	196, 957,
	-2, 2757,
	-1, 1816,
	413, 1007,
	482, 1007,
	526, 1007,
	548, 1007,
	-2, 0,
	-1, 1827,
	1, 1539,
	233, 1539,
	631, 1539,
	633, 1539,
	635, 1539,
	-2, 0,
	-1, 1844,
	1, 1002,
	631, 1002,
	633, 1002,
	635, 1002,
	-2, 0,
	-1, 1845,
	1, 1046,
	631, 1046,
	633, 1046,
	635, 1046,
	-2, 0,
	-1, 1846,
	1, 1054,
	631, 1054,
	633, 1054,
	635, 1054,
	-2, 0,
	-1, 1849,
	1, 1011,
	631, 1011,
	633, 1011,
	635, 1011,
	-2, 0,
	-1, 1851,
	1, 1017,
	631, 1017,
	633, 1017,
	635, 1017,
	-2, 0,
	-1, 1854,
	1, 1013,
	631, 1013,
	633, 1013,
	635, 1013,
	-2, 0,
	-1, 1859,
	1, 1027,
	631, 1027,
	633, 1027,
	635, 1027,
	-2, 0,
	-1, 1893,
	1, 2792,
	631, 2792,
	633, 2792,
	634, 2792,
	635, 2792,
	-2, 0,
	-1, 1897,
	1, 1105,
	631, 1105,
	633, 1105,
	635, 1105,
	-2, 0,
	-1, 1916,
	1, 1591,
	635, 1591,
	-2, 1596,
	-1, 1919,
	176, 1750,
	189, 1750,
	285, 1750,
	359, 1750,
	-2, 1688,
	-1, 2021,
	156, 1709,
	176, 1709,
	189, 1709,
	252, 1709,
	285, 1709,
	359, 1709,
	370, 1709,
	561, 1709,
	-2, 2160,
	-1, 2082,
	633, 2335,
	-2, 0,
	-1, 2118,
	156, 1709,
	176, 1709,
	189, 1709,
	252, 1709,
	285, 1709,
	359, 1709,
	370, 1709,
	561, 1709,
	-2, 1842,
	-1, 2158,
	543, 2807,
	634, 2807,
	637, 2807,
	-2, 0,
	-1, 2175,
	632, 1983,
	-2, 1971,
	-1, 2207,
	196, 2807,
	634, 2807,
	637, 2807,
	-2, 0,
	-1, 2250,
	1, 763,
	635, 763,
	-2, 1596,
	-1, 2426,
	233, 282,
	-2, 2483,
	-1, 2427,
	233, 283,
	-2, 338,
	-1, 2539,
	1, 1004,
	631, 1004,
	633, 1004,
	635, 1004,
	-2, 0,
	-1, 2540,
	1, 1048,
	631, 1048,
	633, 1048,
	635, 1048,
	-2, 0,
	-1, 2541,
	1, 1056,
	631, 1056,
	633, 1056,
	635, 1056,
	-2, 0,
	-1, 2542,
	1, 1107,
	631, 1107,
	633, 1107,
	635, 1107,
	-2, 0,
	-1, 2583,
	1, 1029,
	631, 1029,
	633, 1029,
	635, 1029,
	-2, 0,
	-1, 2605,
	1, 1090,
	631, 1090,
	633, 1090,
	635, 1090,
	-2, 0,
	-1, 2653,
	460, 1777,
	461, 1777,
	-2, 2016,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2036,
	-1, 2687,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2037,
	-1, 2688,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2038,
	-1, 2689,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2039,
	-1, 2690,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2040,
	-1, 2691,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2041,
	-1, 2692,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2042,
	-1, 2693,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2043,
	-1, 2705,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2055,
	-1, 2706,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2056,
	-1, 2707,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2057,
	-1, 2711,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2064,
	-1, 2717,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2068,
	-1, 2719,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2076,
	-1, 2720,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2077,
	-1, 2721,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2078,
	-1, 2722,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2079,
	-1, 2896,
	5, 2487,
	196, 2346,
	632, 2484,
	-2, 2475,
	-1, 2897,
	196, 2347,
	-2, 2888,
	-1, 2898,
	196, 2348,
	-2, 2685,
	-1, 2899,
	196, 2349,
	-2, 2561,
	-1, 2900,
	196, 2350,
	-2, 2623,
	-1, 2901,
	196, 2351,
	-2, 2670,
	-1, 2902,
	196, 2352,
	-2, 2805,
	-1, 2903,
	196, 2353,
	-2, 2143,
	-1, 2975,
	1, 1843,
	2, 1843,
	110, 1843,
	156, 1843,
	176, 1843,
	189, 1843,
	197, 1843,
	215, 1843,
	218, 1843,
	247, 1843,
	252, 1843,
	263, 1843,
	281, 1843,
	285, 1843,
	325, 1843,
	359, 1843,
	364, 1843,
	370, 1843,
	450, 1843,
	454, 1843,
	561, 1843,
	573, 1843,
	591, 1843,
	592, 1843,
	593, 1843,
	603, 1843,
	631, 1843,
	633, 1843,
	635, 1843,
	637, 1843,
	-2, 1842,
	-1, 2988,
	632, 2456,
	-2, 2470,
	-1, 2990,
	1, 355,
	591, 355,
	-2, 1736,
	-1, 3020,
	632, 1982,
	-2, 1972,
	-1, 3236,
	1, 1442,
	445, 1396,
	484, 1396,
	606, 1396,
	611, 1396,
	631, 1442,
	633, 1442,
	635, 1442,
	-2, 1736,
	-1, 3418,
	365, 1780,
	-2, 2927,
	-1, 3419,
	365, 1781,
	-2, 2789,
	-1, 3423,
	460, 2412,
	461, 2412,
	-2, 2141,
	-1, 3424,
	460, 2416,
	461, 2416,
	-2, 2142,
	-1, 3425,
	460, 2413,
	461, 2413,
	-2, 2141,
	-1, 3426,
	460, 2417,
	461, 2417,
	-2, 2142,
	-1, 3440,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2066,
	-1, 3441,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2070,
	-1, 3447,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2072,
	-1, 3674,
	1, 758,
	631, 758,
	633, 758,
	635, 758,
	-2, 1596,
	-1, 3873,
	45, 2447,
	-2, 1179,
	-1, 3878,
	1, 1442,
	631, 1442,
	633, 1442,
	635, 1442,
	-2, 1736,
	-1, 3987,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2074,
	-1, 3994,
	257, 0,
	259, 0,
	348, 0,
	-2, 2093,
	-1, 4062,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2122,
	-1, 4063,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2123,
	-1, 4064,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2124,
	-1, 4068,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2128,
	-1, 4069,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2129,
	-1, 4070,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2130,
	-1, 4118,
	632, 2457,
	-2, 2471,
	-1, 4335,
	634, 3044,
	-2, 1662,
	-1, 4394,
	257, 0,
	259, 0,
	348, 0,
	-2, 2094,
	-1, 4397,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2097,
	-1, 4398,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2099,
	-1, 4521,
	634, 2472,
	-2, 1477,
	-1, 4685,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2098,
	-1, 4686,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2100,
	-1, 4697,
	257, 0,
	-2, 2133,
	-1, 4891,
	257, 0,
	-2, 2134,
	-1, 5112,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	615, 0,
	-2, 2891,
}

const sqlPrivate = 57344

const sqlLast = 147046

var sqlAct = [...]int{
	293, 5230, 5047, 5303, 5046, 3578, 3160, 3310, 4940, 1434,
	5174, 5158, 3190, 4758, 4932, 5098, 5124, 5111, 5244, 1347,
	3091, 3858, 3859, 5003, 4984, 5058, 4517, 5080, 2423, 4377,
	5037, 5125, 5061, 5183, 5126, 4837, 1490, 4860, 4135, 4824,
	3870, 2310, 4808, 5122, 1230, 4895, 5110, 4638, 4632, 2501,
	4599, 4643, 4027, 4572, 4706, 4763, 3280, 3979, 2281, 1426,
	3700, 1659, 2663, 2513, 4673, 3895, 1358, 1779, 4327, 1629,
	4623, 4843, 4319, 4625, 1431, 3703, 2928, 4969, 4242, 1424,
	897, 4518, 3432, 4498, 2734, 3332, 3092, 4648, 1928, 3889,
	758, 3175, 4292, 4273, 1166, 3832, 3843, 2319, 2142, 2673,
	3706, 4275, 2162, 2232, 3763, 2511, 3848, 830, 897, 2124,
	1509, 4702, 3923, 3299, 3925, 3688, 1417, 2509, 3268, 3847,
	3689, 3850, 3825, 3824, 2664, 1602, 3690, 3593, 3294, 3624,
	4121, 3002, 3631, 3601, 3296, 3363, 3561, 4433, 1777, 4376,
	976, 3311, 3327, 2093, 3582, 2412, 3243, 769, 972, 4,
	1174, 191, 3191, 5159, 3584, 3727, 2410, 2347, 3560, 2399,
	2968, 4088, 287, 2670, 2331, 2812, 894, 2474, 4896, 2029,
	3416, 2163, 1999, 2068, 3326, 2967, 967, 3272, 2747, 1429,
	286, 116, 2970, 1717, 2411, 826, 2461, 2219, 892, 2397,
	3205, 2389, 2370, 2377, 1916, 1488, 3281, 1227, 2814, 1473,
	2298, 1824, 2302, 2948, 2230, 2094, 1232, 2803, 1338, 2280,
	2113, 2731, 1492, 2652, 2635, 1403, 2633, 3003, 3304, 803,
	1047, 1720, 898, 285, 1754, 2460, 3116, 899, 1460, 2392,
	3117, 5004, 2063, 2925, 745, 3031, 3851, 1341, 767, 2110,
	3077, 2806, 903, 1631, 2957, 2938, 1195, 1320, 2103, 2784,
	191, 2892, 2858, 2013, 1929, 201, 1355, 846, 1930, 2634,
	906, 202, 1414, 811, 1177, 2636, 1859, 822, 1337, 2420,
	903, 1745, 1844, 2487, 993, 1653, 1752, 120, 106, 1610,
	5175, 2401, 5231, 1485, 2657, 1208, 786, 46, 906, 762,
	759, 45, 771, 1343, 43, 948, 34, 32, 887, 30,
	1350, 1318, 3470, 1915, 1068, 1908, 1935, 1665, 4102, 3464,
	4103, 5314, 5306, 949, 3580, 2947, 3805, 2221, 5294, 2221,
	1170, 5293, 2947, 2221, 2221, 2947, 4136, 839, 842, 2221,
	2221, 5263, 5261, 5204, 5160, 4762, 4762, 2432, 5161, 5150,
	4725, 5148, 5120, 2947, 968, 2947, 1789, 5145, 5142, 4731,
	5108, 5146, 5143, 170, 2432, 5107, 1170, 5106, 4728, 2432,
	3904, 3337, 78, 5096, 48, 47, 3905, 4762, 3274, 5094,
	2242, 3805, 78, 4762, 971, 970, 3659, 5089, 5084, 5083,
	79, 4846, 4762, 4762, 165, 1171, 3656, 5056, 5023, 5016,
	79, 4762, 3011, 2947, 5015, 5008, 1850, 84, 2947, 2432,
	4983, 4980, 4962, 2940, 2432, 4762, 4589, 84, 69, 4893,
	1335, 4469, 4874, 3011, 4839, 50, 4353, 167, 4169, 4781,
	1159, 4780, 4769, 2432, 1469, 2432, 2432, 1945, 1946, 4768,
	1321, 1321, 2432, 4762, 2239, 4761, 49, 4713, 93, 4762,
	3641, 2432, 4687, 3479, 1945, 1946, 3011, 1150, 93, 3480,
	4659, 1976, 4656, 1149, 3337, 2242, 3805, 4567, 2510, 1948,
	4545, 2947, 1469, 4396, 2947, 52, 70, 3011, 1976, 4343,
	1381, 4337, 3033, 3918, 53, 3918, 1948, 4289, 4200, 59,
	2502, 4290, 4201, 4168, 168, 1373, 2001, 4169, 1324, 974,
	1325, 2242, 51, 4113, 115, 1947, 4092, 4114, 2809, 3431,
	99, 112, 51, 2001, 115, 1165, 2947, 5024, 71, 4111,
	99, 112, 1947, 4112, 4095, 4011, 4007, 3917, 2947, 2432,
	2947, 3918, 4897, 3577, 3273, 3572, 1658, 2947, 3571, 2947,
	4888, 3522, 2947, 1667, 2239, 3523, 3520, 3512, 3510, 3481,
	3521, 3513, 2947, 2947, 54, 3007, 4876, 3336, 3321, 1679,
	1322, 3337, 2497, 4846, 3337, 4092, 2939, 2760, 2761, 2762,
	2779, 2780, 2781, 3320, 100, 3056, 2242, 2497, 3010, 2947,
	4636, 3000, 3011, 2992, 100, 2947, 2946, 2432, 2782, 1374,
	2947, 2496, 4589, 1667, 2239, 2497, 4546, 2947, 4353, 2242,
	4291, 3167, 2324, 1945, 1946, 2810, 1978, 1979, 1980, 1989,
	1990, 1991, 3076, 1953, 2256, 3067, 2220, 2236, 3273, 1374,
	2431, 3185, 2089, 2001, 253, 1652, 1982, 1976, 4218, 3982,
	1953, 3952, 1826, 3469, 2111, 1948, 1945, 1946, 2382, 2984,
	2983, 3906, 2982, 2772, 2981, 1995, 2980, 1326, 1323, 1158,
	1157, 72, 2768, 1156, 253, 1155, 1154, 1153, 3531, 3532,
	1976, 3907, 2001, 1152, 1148, 1147, 1975, 1977, 1948, 3531,
	3532, 1947, 1146, 3386, 4451, 255, 1145, 1144, 1143, 1142,
	1141, 1140, 1967, 1975, 1977, 1139, 1138, 2811, 1137, 2808,
	1136, 1964, 1135, 1134, 1133, 2001, 99, 1132, 1131, 1130,
	1129, 1111, 3531, 3532, 1947, 255, 1045, 2222, 1044, 2222,
	1043, 1042, 1041, 2222, 2222, 1967, 1040, 1039, 1038, 2222,
	2222, 1037, 1036, 1035, 1034, 1968, 254, 1033, 104, 1032,
	2773, 2774, 2775, 2776, 1031, 1030, 1029, 1223, 104, 1028,
	2767, 247, 1968, 1027, 1026, 1025, 55, 1024, 1023, 1022,
	248, 1021, 1020, 1019, 1018, 1017, 254, 1016, 1015, 4408,
	1234, 3273, 1014, 58, 1013, 1012, 2575, 1011, 61, 1970,
	1971, 1972, 1973, 1010, 1009, 998, 997, 996, 73, 1953,
	203, 3546, 991, 1678, 990, 983, 60, 199, 107, 1945,
	1946, 111, 982, 2239, 3307, 56, 981, 199, 107, 169,
	2239, 111, 1970, 1971, 1972, 1973, 1998, 57, 966, 2239,
	203, 965, 1953, 4145, 1436, 1232, 922, 3904, 253, 2777,
	2778, 1948, 1986, 1998, 921, 1996, 64, 1374, 253, 920,
	253, 159, 1975, 1977, 3537, 4107, 975, 2239, 919, 910,
	909, 159, 1232, 1232, 1232, 3537, 908, 166, 907, 1992,
	1770, 1993, 2770, 869, 2939, 868, 2813, 1947, 1962, 1963,
	837, 1673, 836, 835, 817, 1975, 1977, 281, 280, 255,
	279, 278, 277, 276, 275, 274, 1984, 273, 3537, 255,
	253, 255, 1277, 1512, 1945, 1946, 272, 1232, 1969, 1229,
	271, 1968, 270, 1232, 1634, 1232, 164, 2242, 1436, 3043,
	1477, 1478, 1479, 2220, 2239, 1969, 164, 1643, 3919, 2236,
	2628, 269, 205, 1666, 268, 267, 1948, 266, 265, 3627,
	254, 1374, 205, 1232, 1968, 1232, 264, 1232, 263, 262,
	254, 255, 254, 261, 1634, 247, 260, 259, 258, 257,
	1994, 1464, 256, 1658, 248, 247, 3547, 247, 200, 3492,
	2000, 4650, 1947, 204, 248, 3475, 248, 3547, 200, 3466,
	1436, 1983, 3575, 204, 1206, 1953, 3366, 2000, 1620, 1722,
	3289, 3253, 1998, 3015, 203, 2989, 2841, 3, 2114, 2807,
	1634, 1793, 254, 2974, 969, 3084, 203, 1634, 2071, 2839,
	3547, 1615, 2825, 1353, 1852, 2070, 1232, 247, 1232, 2625,
	1774, 2823, 1607, 1634, 253, 1998, 248, 3576, 3084, 1942,
	4879, 2283, 1232, 3024, 1232, 2771, 2241, 159, 2137, 2071,
	1456, 1656, 2040, 1408, 1411, 2074, 2070, 1998, 1909, 1421,
	1458, 1974, 1661, 253, 1442, 1425, 203, 1667, 1998, 1481,
	1357, 1726, 1729, 5135, 5134, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 1969, 255, 2069, 1495, 1496, 4302,
	1953, 5131, 5109, 1634, 1974, 1949, 1950, 1951, 1952, 1954,
	1955, 1998, 5093, 903, 4988, 4900, 1641, 2000, 4885, 3531,
	3532, 1732, 1987, 1232, 255, 1672, 1232, 1969, 3531, 3532,
	1505, 906, 1599, 1604, 4877, 4701, 4657, 4635, 4475, 1450,
	1667, 4753, 4431, 4430, 4424, 2031, 254, 4423, 1605, 3548,
	4422, 1619, 1425, 4415, 4414, 1484, 2000, 4412, 4407, 4404,
	3548, 247, 4403, 4288, 3531, 3532, 4149, 3549, 3550, 3551,
	248, 191, 191, 1655, 4148, 254, 4147, 1715, 1654, 253,
	4117, 1637, 4083, 1487, 4216, 1349, 4082, 1497, 1498, 2000,
	247, 4081, 4003, 3548, 3998, 3622, 1794, 1757, 1759, 248,
	203, 1171, 3568, 3559, 4206, 2757, 2758, 2759, 2783, 2769,
	2763, 4652, 2765, 2766, 2764, 2751, 2752, 2753, 2754, 2755,
	2756, 1173, 3530, 3527, 3526, 1425, 1425, 3082, 3524, 203,
	255, 3519, 1985, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 3518, 3517, 3546, 1959, 1960, 1966, 1988, 1965, 1961,
	3514, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	1351, 3511, 2033, 1755, 3491, 4418, 1232, 3474, 3467, 4417,
	3465, 1464, 1232, 3291, 1464, 3322, 2038, 2975, 2796, 1942,
	253, 254, 2031, 1748, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 1998, 1920, 3537, 247, 1334, 3531, 3532,
	2477, 1941, 5309, 5252, 3537, 248, 3542, 3540, 3541, 3533,
	3534, 3535, 3536, 3538, 3539, 2032, 2439, 2030, 2437, 1799,
	3533, 3534, 3535, 3536, 3538, 3539, 5251, 5173, 5171, 1868,
	4902, 255, 1359, 3573, 4029, 3306, 5048, 1945, 1946, 4303,
	3537, 4967, 4952, 4948, 1769, 3531, 3532, 4947, 4946, 4926,
	3542, 3540, 3541, 3533, 3534, 3535, 3536, 3538, 3539, 4925,
	1788, 1976, 4923, 3648, 253, 3081, 4899, 4898, 4872, 1948,
	4303, 1914, 2737, 2020, 4858, 253, 4855, 4854, 1232, 1232,
	1232, 4847, 254, 4835, 1232, 4834, 3554, 1225, 3081, 4777,
	4748, 1355, 4699, 1355, 4682, 4681, 2001, 247, 4619, 4615,
	4612, 4590, 4450, 4429, 4354, 1947, 248, 3547, 1512, 1817,
	3553, 4204, 4203, 4184, 4183, 255, 3547, 4181, 3081, 4098,
	1232, 4086, 3993, 897, 1436, 1943, 255, 253, 1853, 2180,
	897, 1921, 1436, 2018, 1436, 1350, 203, 1350, 2091, 3920,
	3914, 3881, 1951, 1952, 1954, 1955, 3785, 1171, 3738, 3705,
	1751, 3650, 3547, 3496, 2743, 3495, 3490, 3456, 3267, 3109,
	2100, 1910, 2077, 2076, 2075, 2072, 254, 2064, 2062, 3022,
	3021, 2140, 1917, 2986, 3537, 2979, 1925, 254, 255, 4651,
	1150, 247, 1924, 2945, 2821, 2017, 1149, 2136, 1998, 3290,
	248, 2148, 247, 2092, 1436, 253, 2153, 1998, 2159, 2086,
	1232, 248, 1919, 2085, 2084, 2073, 2209, 2083, 2211, 2082,
	2081, 2080, 2079, 1953, 253, 2078, 2059, 2058, 2147, 2057,
	203, 3537, 2097, 2098, 1232, 1938, 1939, 2141, 2056, 254,
	2055, 203, 1512, 1998, 2054, 1949, 1950, 1951, 1952, 1954,
	1955, 2053, 2052, 2051, 247, 191, 255, 2121, 253, 2050,
	2049, 2048, 1321, 248, 2047, 2065, 2066, 2046, 2313, 2274,
	2045, 2044, 2033, 2019, 2016, 255, 1975, 1977, 2244, 2011,
	3548, 1449, 1746, 1378, 1171, 1369, 2248, 4901, 4622, 3548,
	4471, 4400, 3013, 203, 4144, 903, 4110, 4101, 3478, 2154,
	2977, 4726, 903, 4473, 1945, 1946, 2203, 254, 4143, 255,
	2032, 3646, 2014, 906, 2122, 2247, 3531, 3532, 3619, 1464,
	906, 2145, 247, 1491, 3910, 3548, 254, 2132, 3161, 1476,
	4548, 248, 5243, 4956, 4949, 1968, 1948, 4848, 2112, 1474,
	2119, 247, 4655, 5127, 4593, 5200, 4592, 4591, 1619, 4547,
	248, 1491, 4453, 4361, 3741, 1491, 2226, 2840, 4360, 2228,
	254, 203, 1469, 4880, 1491, 2233, 4359, 4358, 4357, 2235,
	2838, 4356, 1947, 2824, 2238, 247, 1489, 1998, 2379, 4355,
	203, 2090, 2822, 2224, 248, 4170, 4105, 2360, 4104, 3922,
	3921, 3809, 2131, 3807, 2116, 3806, 2130, 5198, 1619, 2129,
	1475, 2127, 2126, 4844, 2125, 253, 3135, 4306, 2250, 5123,
	2114, 1634, 1634, 3980, 203, 3775, 1998, 1469, 1912, 2324,
	2071, 4233, 1512, 3516, 2160, 1750, 3203, 2070, 2809, 3515,
	3438, 3120, 1472, 2262, 4199, 3707, 1869, 1816, 3540, 3541,
	3533, 3534, 3535, 3536, 3538, 3539, 1127, 4878, 3541, 3533,
	3534, 3535, 3536, 3538, 3539, 3861, 255, 3860, 4296, 4164,
	4918, 4165, 1469, 2413, 2530, 2355, 2042, 2364, 2246, 4919,
	2502, 4838, 1825, 2374, 5156, 3543, 3544, 3545, 2424, 2429,
	4919, 4752, 3542, 3540, 3541, 3533, 3534, 3535, 3536, 3538,
	3539, 2322, 3484, 4633, 3333, 1128, 3833, 4579, 1969, 2054,
	1826, 2054, 2414, 2288, 4311, 2289, 4285, 254, 2251, 4239,
	4230, 4209, 3948, 3672, 2596, 2296, 2297, 2277, 2269, 1634,
	2507, 1634, 247, 1634, 2445, 2810, 4703, 3580, 4031, 2804,
	4772, 248, 2290, 2291, 4744, 3020, 5132, 2087, 2067, 2294,
	2295, 1634, 1634, 3841, 2471, 1725, 1648, 2318, 2359, 3118,
	1445, 1407, 3182, 2358, 5147, 1634, 5144, 4560, 4558, 2330,
	2000, 203, 3900, 3163, 4175, 3179, 2366, 1634, 4941, 41,
	1634, 1634, 1634, 3365, 3177, 903, 4639, 5055, 1944, 3710,
	4532, 3245, 4194, 3303, 1782, 3816, 1803, 961, 4529, 5202,
	5201, 2416, 2417, 906, 897, 4775, 4771, 4750, 3974, 2352,
	3676, 2367, 2332, 2478, 4803, 2467, 5235, 2811, 5133, 2808,
	5180, 4534, 1176, 2039, 2369, 1692, 1232, 2418, 2531, 3533,
	3534, 3535, 3536, 3538, 3539, 4252, 1125, 2336, 2369, 3057,
	1867, 2369, 1123, 5305, 4957, 1655, 1121, 1333, 2484, 2472,
	1654, 1470, 1119, 4796, 4783, 1751, 1116, 4582, 2351, 2365,
	2348, 1107, 2589, 4581, 1232, 2373, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 2587, 2263, 2505, 4250, 3535, 3536,
	3538, 3539, 4249, 4241, 2522, 2403, 2402, 4224, 2403, 2402,
	2515, 2535, 2406, 2393, 3678, 2333, 1476, 4223, 2430, 1175,
	2492, 1700, 1232, 3080, 1232, 1866, 3647, 4251, 1650, 962,
	1171, 1232, 1171, 2470, 1232, 4221, 2180, 2180, 1512, 3078,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 2453, 1232, 2494, 1232,
	1232, 1232, 1232, 2481, 2452, 1476, 903, 1475, 4220, 809,
	2560, 4208, 1755, 2323, 1755, 4773, 1466, 809, 1748, 4745,
	2489, 2486, 2489, 1801, 906, 1232, 2813, 2490, 2645, 1232,
	1232, 2521, 4167, 1701, 1169, 3740, 2643, 1232, 1459, 1450,
	2632, 1232, 2320, 1232, 1232, 2498, 3773, 2499, 4166, 2337,
	3094, 1512, 1865, 4528, 3822, 2394, 2854, 1232, 1232, 1232,
	1232, 3707, 3821, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 4530, 3777, 2414, 2502, 5236, 1475, 2316, 1353, 5181,
	1353, 3640, 3489, 3488, 3487, 3486, 2853, 3442, 3201, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 2641, 1232,
	2539, 2146, 1471, 1232, 3200, 2785, 2786, 2550, 3300, 2368,
	2321, 2627, 3184, 3173, 1470, 1355, 2338, 2339, 2675, 2785,
	2801, 2088, 1512, 2368, 2601, 3165, 2368, 2671, 2672, 1848,
	1168, 1355, 4178, 3154, 3014, 3153, 3080, 1848, 2583, 2174,
	2317, 3145, 3144, 2334, 3143, 3125, 2849, 1232, 1512, 2807,
	3124, 3085, 3078, 5238, 2669, 3001, 2656, 2303, 3139, 1350,
	1750, 4480, 2304, 2668, 1467, 2895, 2895, 2909, 3097, 2785,
	1955, 1470, 2929, 2931, 1468, 1350, 2268, 2267, 2718, 2937,
	1491, 2276, 3539, 2643, 2804, 1918, 2639, 1493, 1494, 4680,
	2631, 2335, 2629, 2644, 2451, 2637, 2630, 2617, 2540, 2132,
	2749, 1150, 4549, 3028, 1150, 1150, 1845, 2660, 1171, 1818,
	2661, 2662, 2800, 2962, 3122, 1493, 1494, 3774, 1171, 1493,
	1494, 4490, 1171, 2987, 3005, 2614, 3004, 1363, 1493, 1494,
	1349, 2547, 1349, 2349, 1738, 3949, 1737, 1651, 2354, 1466,
	2623, 2605, 1847, 1365, 2602, 2641, 2526, 1796, 1170, 808,
	1847, 1113, 1907, 1436, 1436, 5239, 2642, 808, 1709, 1696,
	4813, 2177, 3051, 3064, 2541, 1911, 964, 963, 5201, 2954,
	1360, 1393, 1846, 2851, 2733, 3027, 2745, 1826, 2852, 2305,
	3152, 2855, 1321, 2856, 2857, 2121, 2362, 1736, 4489, 1735,
	2729, 2991, 2798, 3148, 1512, 4531, 1466, 2309, 866, 3340,
	2603, 3181, 2324, 2271, 2733, 1351, 1714, 1351, 2976, 3030,
	3049, 2356, 1171, 1826, 2324, 2616, 1366, 2953, 2340, 1879,
	3008, 2727, 191, 3146, 3675, 1471, 3046, 1864, 3052, 2604,
	3381, 2961, 3108, 2966, 2640, 3180, 2972, 2973, 2594, 1885,
	2891, 2904, 2920, 2180, 1367, 2933, 3026, 2935, 3178, 2548,
	4191, 2303, 2581, 2943, 2944, 2350, 2304, 3176, 3429, 1469,
	3414, 3045, 2959, 2960, 2955, 810, 2544, 5267, 2119, 1797,
	5241, 1464, 5247, 810, 4513, 3016, 2306, 2311, 2073, 757,
	4934, 3096, 1471, 3149, 5129, 1814, 2322, 1467, 1364, 1425,
	2538, 4265, 2395, 1512, 2741, 1448, 1923, 1468, 5237, 4909,
	2341, 2739, 3107, 2642, 2404, 4205, 752, 1802, 2491, 1634,
	4506, 2407, 1883, 3147, 3960, 3959, 864, 3383, 2813, 4580,
	3086, 1117, 3038, 4222, 3054, 2273, 1436, 1117, 3042, 3048,
	3023, 1117, 2065, 2066, 1007, 3236, 3060, 1118, 1425, 1167,
	4020, 1117, 3053, 2405, 1467, 4017, 2588, 1232, 1232, 3037,
	1232, 1721, 4266, 3040, 1468, 3041, 3032, 3055, 2586, 3062,
	4219, 4152, 2307, 2272, 3083, 3047, 4507, 3071, 3194, 2723,
	1425, 1425, 4189, 2305, 4679, 897, 2396, 1436, 3140, 4526,
	4139, 2640, 3953, 2303, 3828, 3820, 3279, 3771, 2304, 3681,
	1161, 2309, 1098, 2724, 3058, 3174, 4264, 3063, 3428, 3121,
	2725, 3183, 3142, 911, 2730, 3127, 1719, 1861, 1634, 4936,
	2613, 3734, 3123, 5213, 3128, 2314, 2624, 1163, 3061, 5222,
	4814, 1634, 3314, 1634, 5221, 3323, 959, 4018, 958, 1634,
	918, 3271, 2999, 4812, 3112, 3328, 2715, 3095, 5269, 4810,
	1634, 1634, 3133, 3134, 3136, 3137, 3138, 5188, 3126, 3151,
	3089, 3287, 3248, 4382, 3155, 3099, 3102, 3250, 3072, 3073,
	4381, 3141, 3074, 3075, 3954, 1162, 1436, 3195, 1436, 5130,
	2306, 2311, 3732, 2436, 2435, 3829, 1605, 2312, 5240, 3202,
	3343, 3344, 1469, 3897, 3237, 3238, 3394, 2346, 3334, 4809,
	1232, 3157, 3351, 3352, 3353, 3150, 2221, 2361, 3079, 3826,
	2615, 3421, 3422, 2380, 903, 2305, 3164, 3070, 3390, 2813,
	3171, 3159, 1099, 3453, 2363, 1619, 3733, 1361, 4811, 1698,
	2380, 2409, 906, 2309, 2911, 1441, 1905, 5032, 3369, 3188,
	3189, 3187, 3898, 3694, 2546, 5245, 4942, 903, 5020, 1469,
	3367, 3277, 3368, 3338, 3451, 865, 4736, 3770, 2357, 3283,
	3345, 3246, 3346, 2360, 3325, 906, 2307, 191, 2323, 1232,
	2376, 3335, 3361, 1695, 1655, 1232, 1232, 3341, 3769, 3251,
	1880, 3766, 3162, 1362, 3360, 1392, 4964, 3788, 5128, 3757,
	1232, 4502, 2408, 3318, 3265, 3749, 3316, 2375, 4503, 3372,
	3331, 3374, 2353, 3376, 4524, 1721, 2813, 867, 3330, 4508,
	2726, 863, 2306, 2311, 3397, 2301, 2174, 2174, 2308, 2314,
	2728, 3677, 4527, 2713, 3722, 5100, 2716, 5101, 3897, 3309,
	807, 1877, 2371, 1232, 1232, 3240, 2168, 2362, 3399, 1232,
	3401, 1827, 3319, 1664, 3080, 1671, 1649, 1677, 1376, 2363,
	3758, 4505, 1232, 1232, 3402, 3317, 3750, 3404, 1232, 1232,
	3100, 1755, 5246, 3444, 1232, 2321, 3298, 3358, 5187, 2102,
	4509, 4609, 912, 913, 1104, 1103, 2299, 2712, 2361, 753,
	2060, 2312, 1798, 3371, 3721, 3373, 1114, 3375, 1181, 3377,
	3378, 3246, 1619, 2732, 3756, 2372, 3241, 3370, 2307, 5248,
	3748, 4935, 3448, 1425, 2278, 2279, 3728, 3644, 2990, 1232,
	1232, 1232, 3387, 2344, 3813, 1232, 1768, 2582, 1773, 4190,
	2300, 3445, 1100, 2380, 2359, 1232, 4675, 4378, 1881, 2358,
	2314, 4692, 1787, 3449, 1792, 1878, 2327, 3454, 2177, 2177,
	3239, 5211, 1232, 3420, 5066, 999, 1008, 5018, 984, 5265,
	3827, 2314, 1353, 1884, 4978, 3396, 2106, 3409, 1619, 4278,
	1619, 2543, 3695, 3730, 2404, 754, 3411, 3410, 1353, 4276,
	4561, 2010, 1000, 4525, 2345, 989, 2740, 3477, 776, 1813,
	1815, 2656, 3415, 5166, 2795, 2537, 3472, 3473, 3393, 1447,
	1922, 3476, 5019, 5167, 3494, 3430, 2958, 2328, 5270, 3437,
	1851, 3468, 2971, 2405, 4462, 2383, 2109, 4504, 3683, 4970,
	2390, 4463, 2308, 2312, 2106, 1170, 4033, 755, 2343, 756,
	5254, 4621, 2104, 4971, 915, 914, 4723, 2102, 1882, 4368,
	4585, 4140, 3729, 1382, 1232, 1232, 1232, 1232, 3158, 1171,
	2107, 2326, 1380, 1232, 1232, 1232, 4383, 3443, 1232, 4514,
	4515, 3976, 3684, 1101, 3412, 4278, 4280, 4972, 4985, 1832,
	1232, 1355, 1512, 5072, 2109, 4276, 1232, 5002, 1232, 3587,
	3588, 4674, 4857, 4461, 4584, 4583, 4325, 1355, 3885, 1160,
	2956, 1102, 5186, 2714, 2105, 3658, 2222, 2998, 4279, 4626,
	2459, 2099, 916, 917, 1379, 1512, 1372, 744, 2107, 3395,
	4804, 4301, 4610, 1933, 1349, 1350, 2593, 1355, 4379, 4627,
	1512, 2659, 1932, 2325, 2106, 1932, 4072, 2264, 4770, 4427,
	1349, 1350, 1436, 3595, 3570, 4974, 3625, 2384, 1927, 5275,
	3483, 3632, 2180, 3450, 4720, 4866, 1512, 1106, 3701, 2261,
	4916, 4326, 3589, 3452, 2308, 4245, 1436, 4225, 4176, 4174,
	4973, 1350, 4280, 3886, 1436, 3877, 1105, 3612, 3697, 3288,
	3282, 3603, 3269, 3660, 2109, 2485, 2479, 2473, 4975, 3101,
	2465, 2444, 2443, 4986, 4016, 3198, 1232, 4851, 2649, 1351,
	2104, 1689, 4160, 3129, 4279, 1384, 4274, 816, 1232, 4087,
	5038, 3977, 1190, 3599, 3084, 1351, 3639, 5005, 2107, 2313,
	1932, 4328, 3626, 2174, 1001, 1002, 1436, 985, 986, 3621,
	2595, 2257, 2180, 2108, 4644, 3696, 2259, 4676, 3685, 3686,
	3654, 1931, 3266, 1395, 1931, 4830, 4384, 4828, 4747, 1232,
	3713, 3597, 3709, 3708, 3673, 2313, 2527, 3435, 3413, 2519,
	3711, 4100, 2105, 3715, 3592, 1436, 3679, 3634, 3635, 3636,
	3637, 5165, 3591, 2508, 3746, 2441, 3630, 3598, 1849, 3618,
	3604, 4134, 3610, 2260, 1436, 3581, 1436, 3666, 3613, 3614,
	4277, 2108, 3611, 3760, 2128, 3762, 3565, 3566, 3567, 3596,
	1855, 1854, 2997, 1464, 2996, 2995, 1232, 1232, 2994, 3776,
	2379, 2993, 4284, 1730, 1512, 1933, 3712, 2379, 1933, 3717,
	3274, 3693, 3719, 3645, 1744, 1436, 3616, 1731, 3617, 1931,
	1168, 2287, 3602, 3609, 3799, 3698, 4385, 4929, 3791, 4073,
	3793, 2010, 1436, 3797, 2650, 2177, 4600, 3803, 4759, 1742,
	4074, 3811, 3594, 4428, 1006, 3105, 4624, 4297, 4182, 2483,
	3651, 3652, 3745, 3653, 3836, 3662, 3743, 2400, 3664, 3665,
	3608, 5274, 4832, 3668, 1634, 3669, 3725, 3670, 3804, 2387,
	4171, 3759, 5208, 3935, 3130, 3131, 4277, 1436, 1634, 3667,
	1634, 2108, 3674, 3767, 1512, 3663, 3933, 4734, 4732, 3364,
	4987, 897, 1634, 3704, 4850, 3786, 3926, 1619, 1619, 4161,
	3761, 3772, 3244, 2949, 855, 1634, 3950, 3945, 3657, 3682,
	3642, 3339, 3798, 2168, 2168, 3249, 3247, 1436, 3846, 2512,
	2413, 1003, 1004, 3747, 987, 988, 3878, 1806, 4742, 3810,
	2385, 1833, 4755, 3789, 1355, 4754, 5044, 3891, 3893, 4831,
	2952, 856, 4976, 3731, 4930, 3831, 4484, 3834, 4977, 4760,
	3739, 3830, 3866, 4483, 5052, 5035, 1634, 3328, 4434, 4089,
	3752, 3753, 2820, 4466, 2609, 3754, 3328, 3755, 1634, 1902,
	1634, 3605, 3606, 3607, 2386, 5074, 1619, 4724, 1350, 4743,
	3876, 2951, 3817, 3937, 5212, 5210, 2950, 5149, 4960, 3633,
	1904, 3781, 4950, 4730, 4698, 4477, 815, 3787, 2470, 4426,
	3928, 4283, 3913, 3884, 1901, 3902, 3562, 3800, 1899, 1098,
	3992, 1873, 3946, 1871, 3943, 3927, 3808, 3778, 1843, 3151,
	1841, 1839, 3655, 3818, 1512, 3812, 1837, 1512, 2286, 3525,
	3951, 5045, 3455, 1835, 1163, 1829, 1823, 1821, 1740, 4931,
	4172, 3270, 3172, 3166, 3119, 3025, 2622, 2618, 3892, 2529,
	2518, 3819, 2503, 903, 3941, 2139, 2135, 3887, 1906, 1781,
	2585, 2552, 1232, 2422, 4816, 2398, 1743, 4482, 3563, 1232,
	1232, 906, 3936, 1232, 1232, 1232, 3127, 1232, 3894, 3838,
	3971, 3823, 3963, 3939, 3970, 3872, 1232, 2180, 3873, 3944,
	3867, 1741, 3874, 3962, 1927, 1232, 1005, 3385, 3384, 3348,
	1232, 191, 191, 2638, 1860, 2555, 1512, 2464, 3942, 2442,
	2210, 3899, 2208, 3924, 2043, 1232, 1795, 2819, 1171, 1713,
	3908, 3901, 1317, 1512, 5121, 3869, 3276, 3911, 3912, 1099,
	4562, 3969, 4232, 2180, 2180, 1232, 1232, 3968, 1232, 1232,
	1232, 3966, 4231, 1115, 4566, 4544, 5034, 1425, 4642, 4571,
	3972, 2611, 4557, 3973, 3790, 4495, 1232, 4494, 2610, 4324,
	1232, 5184, 2180, 2180, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232, 1232,
	1232, 1232, 1232, 1232, 1903, 1232, 3978, 4466, 4045, 3995,
	4046, 4315, 4637, 1232, 1232, 2180, 4005, 4006, 1900, 4248,
	1232, 2965, 1898, 4227, 3956, 1872, 3957, 1870, 3958, 4197,
	4195, 1232, 1842, 4173, 1840, 1838, 3975, 3890, 1936, 3880,
	1836, 3875, 1355, 1355, 3862, 3301, 1232, 1834, 3293, 1828,
	1822, 1820, 1739, 3286, 3278, 3262, 3261, 3242, 3934, 3929,
	3930, 3931, 3932, 3044, 3039, 2440, 2438, 2584, 2551, 2415,
	2421, 1619, 2381, 2342, 2329, 2315, 2243, 2240, 1512, 2237,
	2234, 2229, 2227, 2223, 2214, 4119, 1350, 1350, 4013, 4002,
	5179, 1436, 1436, 4000, 5105, 4626, 4084, 2152, 3938, 3433,
	4012, 1104, 1103, 4019, 4021, 4022, 1436, 1436, 1330, 897,
	1436, 2265, 5202, 4028, 2576, 4627, 4035, 3801, 1353, 4928,
	2168, 3405, 2390, 3406, 2671, 4036, 2253, 2254, 4106, 1232,
	2621, 1120, 1122, 1124, 1353, 1331, 3403, 4048, 4043, 4023,
	3235, 5086, 4044, 4996, 4658, 4050, 4578, 4076, 4481, 1100,
	4091, 3329, 1937, 2671, 4051, 3680, 1232, 2282, 1694, 3080,
	3080, 1240, 4042, 4868, 1353, 4137, 4138, 3106, 4861, 4336,
	4077, 2324, 4085, 2542, 191, 3078, 3103, 2482, 2619, 1415,
	4150, 4151, 1896, 1897, 4157, 1416, 4080, 2579, 2574, 1232,
	1232, 2549, 5085, 4535, 4573, 3199, 4096, 4097, 3434, 4093,
	4094, 1162, 1819, 4887, 1486, 1945, 1946, 4757, 3110, 289,
	289, 289, 2174, 747, 748, 4435, 763, 747, 763, 774,
	1945, 1946, 814, 844, 4413, 2620, 834, 4108, 1232, 1232,
	3726, 841, 841, 841, 841, 3111, 1232, 1948, 5196, 3802,
	4177, 289, 3111, 4109, 3132, 1940, 1443, 1383, 1483, 1332,
	4244, 282, 5157, 2252, 3260, 4312, 2466, 1634, 1634, 1454,
	1634, 3179, 980, 3177, 1634, 4210, 1416, 1634, 1416, 289,
	1349, 903, 1436, 1947, 4243, 4153, 847, 847, 3186, 3170,
	1101, 4262, 3168, 3113, 1876, 5043, 1349, 5025, 1947, 906,
	4215, 4217, 2174, 3169, 4995, 3115, 861, 2180, 4214, 4146,
	741, 4158, 4989, 4927, 4852, 4159, 4823, 4735, 1102, 3114,
	2146, 4322, 4240, 4314, 4300, 4116, 1349, 3879, 3308, 2936,
	2249, 4246, 2161, 5242, 5076, 4756, 3156, 4256, 1647, 5077,
	1646, 4234, 4202, 1640, 2177, 1164, 3643, 4207, 4270, 2400,
	5273, 5076, 1634, 3531, 3532, 1351, 5077, 4329, 1232, 1658,
	5215, 1945, 1946, 4196, 4991, 4198, 1355, 1232, 4405, 4338,
	4309, 1351, 4293, 2815, 1106, 4142, 1634, 4267, 4268, 4261,
	3127, 1634, 1634, 1634, 1805, 3314, 3388, 4344, 2293, 3066,
	1804, 4282, 1657, 1105, 2292, 3065, 1658, 2850, 2293, 3328,
	2292, 1351, 1875, 4321, 1634, 1874, 1634, 4853, 4797, 4272,
	1350, 1634, 4281, 1512, 4575, 4570, 4569, 1639, 4253, 747,
	747, 4330, 4333, 4464, 2177, 4460, 4346, 289, 3195, 4307,
	4459, 4401, 4375, 4141, 4024, 4308, 4271, 4260, 3795, 3792,
	3391, 4247, 4295, 1512, 4350, 2037, 1232, 1232, 4332, 2036,
	4263, 4299, 1232, 1232, 2180, 3408, 2626, 1232, 1232, 5258,
	1232, 4313, 5223, 5091, 4123, 1232, 5029, 5028, 5027, 4286,
	4959, 4364, 4958, 4905, 4903, 1425, 1232, 4826, 3704, 4787,
	1800, 4727, 1098, 4722, 4721, 4362, 4719, 4718, 4716, 4617,
	4365, 1353, 1232, 4597, 4533, 4316, 4472, 4458, 4331, 4457,
	4456, 4334, 4349, 4342, 4287, 4193, 4339, 1163, 4318, 4185,
	4340, 3883, 4372, 3882, 3718, 3661, 3392, 3382, 4347, 4124,
	4363, 4348, 3357, 3356, 4386, 3355, 3354, 3292, 3264, 3263,
	3104, 3035, 3029, 3018, 4387, 3017, 4399, 3006, 2744, 2612,
	2580, 2573, 2572, 2571, 4366, 2570, 4125, 2569, 4122, 2480,
	4373, 2454, 2450, 1355, 2449, 2448, 4395, 4133, 2447, 2470,
	2446, 1355, 2217, 4131, 2216, 1512, 1512, 2215, 1512, 4380,
	2213, 2151, 2150, 1895, 1894, 1355, 1830, 1708, 1707, 1706,
	1705, 1704, 1703, 1702, 1697, 1693, 1634, 1634, 1691, 1690,
	1624, 1623, 1622, 1503, 3625, 1502, 1501, 1350, 4132, 1500,
	1499, 1446, 1099, 4128, 1402, 1350, 1512, 1401, 1400, 1399,
	1398, 1397, 1396, 1394, 1389, 1388, 1387, 1386, 1385, 1350,
	4440, 973, 8, 4374, 1312, 2255, 1126, 1112, 4129, 4933,
	4512, 1232, 4511, 4510, 2608, 98, 4467, 4468, 1699, 935,
	92, 2388, 1355, 1349, 1355, 4425, 4192, 4485, 4486, 1074,
	5073, 4963, 1682, 943, 5054, 4310, 4443, 4445, 3720, 4470,
	3204, 4519, 2554, 4519, 1831, 2556, 3620, 2174, 2978, 1436,
	4522, 5017, 4476, 4409, 3493, 4479, 4536, 4894, 4543, 1512,
	4691, 1436, 4448, 2818, 1436, 4439, 1350, 2041, 1350, 4488,
	4552, 4437, 4438, 4555, 3574, 4432, 4442, 191, 94, 1232,
	1216, 1262, 1512, 4608, 4449, 3254, 4523, 4436, 3257, 4607,
	3259, 4452, 4496, 2174, 2174, 4441, 4179, 3849, 1351, 4604,
	4603, 2165, 2167, 1180, 1515, 4539, 4540, 4465, 5099, 4574,
	2266, 4576, 5264, 4537, 1222, 2275, 3019, 4491, 2894, 1239,
	4493, 1236, 2174, 2174, 1634, 1634, 4478, 2169, 2023, 2171,
	4487, 1238, 2028, 1237, 1104, 1103, 2170, 3305, 2061, 1235,
	3305, 4126, 2164, 4320, 3312, 4542, 3909, 1749, 1747, 4127,
	1076, 4601, 2270, 1436, 2738, 2174, 2802, 3482, 4551, 1353,
	1353, 4554, 4628, 2034, 1196, 1512, 1218, 2799, 4538, 2177,
	1634, 4577, 4559, 4568, 1377, 4645, 1207, 3600, 3579, 3896,
	4115, 2648, 1100, 953, 3528, 2805, 1368, 4595, 2917, 2168,
	4556, 2910, 4596, 4598, 2906, 3671, 1634, 1634, 1634, 1634,
	1634, 1634, 1634, 4130, 3302, 1913, 4705, 2012, 4588, 3313,
	4629, 1480, 1200, 2736, 2025, 2177, 2177, 4594, 1425, 1512,
	3460, 2658, 3903, 3623, 3379, 4634, 3012, 5079, 4032, 4553,
	3389, 1232, 1232, 1232, 4587, 4586, 2458, 1329, 1328, 4646,
	1375, 1327, 5060, 5057, 2177, 2177, 2378, 4611, 3844, 1512,
	3845, 4606, 4602, 2258, 1232, 3059, 4640, 1232, 1232, 4618,
	4677, 4649, 2748, 4620, 4663, 4613, 3863, 1232, 4667, 2168,
	2180, 1212, 4614, 4654, 1618, 1232, 1232, 2177, 2600, 3964,
	3585, 4298, 1710, 4764, 1510, 4647, 1224, 1997, 2470, 4669,
	3231, 3230, 1512, 4922, 1634, 1465, 1463, 1462, 1461, 5232,
	3197, 1370, 2391, 4188, 4187, 4186, 252, 4661, 4660, 3427,
	4683, 1349, 1349, 1101, 1934, 1425, 1926, 249, 1436, 251,
	250, 3724, 4670, 4631, 4671, 4120, 3629, 1807, 5155, 4678,
	4212, 3835, 25, 848, 849, 1391, 850, 4688, 3069, 2285,
	1512, 1102, 1482, 4163, 24, 23, 22, 289, 1232, 289,
	289, 21, 1420, 289, 1430, 121, 44, 20, 163, 161,
	138, 1232, 158, 157, 130, 1444, 156, 155, 154, 153,
	1232, 152, 4700, 834, 160, 2180, 834, 151, 4694, 150,
	145, 4741, 149, 148, 147, 1232, 1351, 1351, 1232, 4711,
	4712, 146, 4729, 144, 4714, 142, 4715, 1106, 143, 841,
	137, 141, 140, 139, 1232, 136, 135, 1232, 134, 133,
	132, 4738, 131, 4739, 1512, 129, 1105, 4767, 162, 128,
	127, 206, 1436, 289, 126, 289, 289, 1420, 125, 289,
	289, 4806, 1634, 1634, 1634, 124, 123, 2174, 1430, 4740,
	122, 4737, 2313, 827, 828, 4746, 4786, 63, 62, 118,
	119, 19, 289, 1355, 1660, 42, 14, 67, 68, 18,
	4790, 13, 4791, 37, 97, 110, 109, 4815, 108, 38,
	1680, 4802, 4519, 1353, 105, 36, 17, 1687, 16, 4833,
	3846, 4825, 4841, 1512, 15, 103, 1634, 102, 4788, 101,
	4829, 4862, 35, 33, 4784, 11, 1712, 1350, 9, 1430,
	4820, 4821, 4789, 289, 289, 39, 1420, 2123, 12, 5,
	196, 195, 198, 4799, 194, 197, 96, 4836, 4792, 4805,
	193, 192, 1232, 1232, 4818, 95, 31, 834, 10, 289,
	289, 4817, 4822, 188, 4827, 4842, 4305, 87, 4849, 1232,
	2180, 1775, 2653, 190, 189, 187, 4776, 4871, 186, 4873,
	185, 88, 1783, 4867, 4865, 4863, 4840, 980, 85, 2177,
	184, 91, 183, 86, 4778, 4779, 1436, 4845, 90, 1436,
	89, 1436, 1436, 29, 4859, 6, 66, 4864, 7, 4672,
	4870, 3947, 4869, 4649, 2174, 113, 114, 40, 83, 1232,
	4807, 1232, 82, 1232, 81, 80, 28, 4875, 4883, 4884,
	4798, 65, 4800, 1355, 4801, 27, 180, 230, 229, 228,
	4917, 227, 226, 225, 224, 223, 1232, 218, 1355, 222,
	220, 219, 4519, 4915, 4882, 1349, 4886, 221, 217, 243,
	242, 241, 240, 239, 2168, 233, 232, 4519, 289, 238,
	4904, 237, 4892, 4906, 4945, 4907, 4908, 1350, 236, 235,
	234, 231, 246, 76, 216, 215, 214, 212, 208, 211,
	1353, 213, 1350, 4914, 289, 4913, 210, 209, 1353, 207,
	4944, 245, 244, 77, 178, 1355, 1355, 179, 75, 4910,
	2168, 2168, 1353, 177, 4937, 176, 4966, 4938, 175, 1232,
	2912, 174, 173, 4968, 4519, 4519, 1355, 172, 171, 1355,
	1351, 4981, 4982, 1634, 74, 182, 2177, 181, 26, 2168,
	2168, 2, 1, 1634, 0, 4519, 4953, 0, 4519, 1350,
	1350, 0, 4999, 4955, 0, 5001, 0, 0, 1232, 1232,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	1350, 0, 2168, 1350, 1619, 0, 0, 4961, 0, 1353,
	4979, 1353, 0, 0, 4990, 0, 0, 0, 4993, 0,
	4992, 0, 0, 3735, 3736, 2428, 3737, 4998, 0, 2138,
	0, 0, 5006, 5007, 0, 5010, 5011, 0, 0, 0,
	5013, 5012, 5014, 5030, 5009, 0, 0, 0, 4845, 1232,
	1232, 5022, 5026, 1232, 0, 0, 0, 1634, 1436, 0,
	0, 1436, 0, 5051, 5021, 0, 0, 0, 0, 5031,
	0, 0, 1349, 0, 5033, 0, 5059, 5062, 3782, 3783,
	1349, 3784, 5041, 5042, 0, 0, 0, 0, 5081, 5082,
	4954, 5078, 0, 5075, 1349, 5050, 5049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5064, 5068,
	0, 0, 5102, 0, 5104, 0, 0, 0, 0, 1232,
	1232, 1232, 0, 0, 5069, 5063, 0, 1425, 0, 5067,
	0, 747, 5070, 0, 0, 5071, 0, 0, 0, 5087,
	0, 0, 0, 0, 0, 0, 5092, 1351, 5095, 0,
	0, 0, 289, 2284, 289, 1351, 1232, 0, 289, 5103,
	5136, 1349, 0, 1349, 0, 5141, 5116, 5117, 0, 1351,
	5118, 1660, 1420, 2143, 289, 0, 289, 2149, 5119, 0,
	0, 0, 0, 2742, 289, 0, 763, 0, 0, 5164,
	2313, 289, 5163, 0, 0, 0, 5138, 5162, 0, 2023,
	0, 0, 0, 5170, 0, 0, 5176, 2218, 0, 5152,
	5137, 5172, 0, 1232, 0, 5154, 0, 0, 0, 289,
	5139, 1436, 0, 0, 5169, 0, 289, 5168, 0, 4825,
	5185, 0, 0, 0, 0, 0, 1351, 0, 1351, 5177,
	0, 5178, 5203, 0, 0, 5195, 0, 0, 0, 0,
	5191, 5192, 0, 0, 1639, 0, 5182, 0, 5199, 834,
	5197, 1639, 5194, 0, 5206, 0, 0, 5218, 0, 5207,
	5205, 0, 1355, 5059, 1355, 0, 5062, 5228, 5219, 5209,
	2174, 0, 5081, 5216, 2168, 5226, 5214, 5220, 0, 5217,
	5224, 4519, 0, 4519, 5225, 5193, 0, 841, 5227, 841,
	5229, 0, 5234, 0, 0, 0, 0, 0, 0, 841,
	841, 0, 0, 1436, 0, 0, 1350, 0, 1350, 0,
	0, 5249, 5250, 0, 5256, 0, 5257, 0, 0, 0,
	0, 5260, 0, 2433, 0, 0, 0, 0, 5233, 0,
	0, 5255, 0, 1232, 1232, 5268, 0, 0, 0, 5259,
	5266, 5262, 1232, 1232, 0, 0, 5151, 0, 3314, 5153,
	5271, 5282, 0, 0, 5276, 0, 0, 5280, 5287, 0,
	5286, 5284, 5289, 0, 5292, 5291, 0, 5290, 5288, 5283,
	0, 0, 0, 5285, 0, 2174, 0, 5253, 3314, 5296,
	1436, 5297, 5301, 5299, 5295, 0, 5304, 5302, 0, 5300,
	0, 5298, 2177, 5307, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 4513, 5311, 0, 5313, 5304, 5315, 0,
	0, 0, 5308, 0, 0, 0, 0, 0, 5277, 5278,
	5310, 2168, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 3457, 3458, 0, 4506,
	0, 0, 0, 4499, 0, 0, 0, 0, 0, 0,
	289, 1945, 1946, 0, 289, 0, 0, 0, 0, 0,
	0, 4497, 0, 0, 0, 0, 0, 0, 0, 3935,
	4501, 0, 0, 0, 0, 1976, 5312, 0, 0, 0,
	0, 0, 3933, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 3926, 0, 0, 4507, 0, 2177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3417, 0, 0,
	2001, 289, 0, 0, 0, 289, 0, 0, 0, 1947,
	0, 289, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 5279, 0, 0, 0, 0, 0, 0, 0, 4500,
	2174, 0, 0, 289, 0, 289, 0, 0, 0, 747,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 0, 980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3937,
	1353, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	2912, 2912, 0, 0, 0, 1353, 3928, 289, 0, 1420,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 2674,
	0, 3927, 0, 0, 0, 834, 0, 0, 3555, 3556,
	3557, 3558, 289, 0, 0, 0, 0, 1953, 0, 0,
	2553, 0, 0, 0, 0, 289, 289, 0, 289, 0,
	289, 0, 289, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 1353, 1353, 0, 0, 0, 1351, 0, 0,
	0, 0, 2177, 0, 0, 0, 0, 0, 3936, 2590,
	0, 0, 2591, 1353, 2592, 0, 1353, 0, 0, 0,
	1975, 1977, 0, 0, 0, 0, 0, 0, 0, 289,
	289, 289, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2816, 0, 0, 0, 0, 0, 0, 0,
	4502, 3531, 3532, 0, 3549, 3550, 3551, 4503, 0, 0,
	814, 0, 0, 0, 834, 0, 0, 0, 4508, 0,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 0, 0, 0, 0,
	4505, 0, 2912, 2912, 2912, 2912, 0, 0, 0, 4317,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 4509,
	3546, 0, 0, 0, 0, 0, 1948, 0, 0, 2988,
	0, 0, 0, 0, 1349, 1349, 0, 1351, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 2750,
	1998, 0, 1351, 2001, 0, 1349, 0, 0, 1349, 0,
	0, 0, 1947, 0, 3934, 3929, 3930, 3931, 3932, 0,
	0, 0, 0, 1967, 0, 0, 4367, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 2168, 0, 0,
	0, 0, 2887, 2888, 2889, 2890, 2883, 2884, 2885, 2886,
	0, 0, 0, 0, 3938, 0, 0, 0, 0, 1351,
	1351, 0, 0, 0, 0, 0, 0, 3537, 0, 0,
	0, 747, 0, 0, 1639, 1639, 0, 0, 0, 1627,
	1351, 0, 1969, 1351, 0, 0, 289, 0, 4390, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 289, 0, 747, 0, 4504, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 289, 0, 0, 1684,
	1953, 0, 0, 0, 0, 3068, 2863, 2864, 2865, 2866,
	0, 0, 0, 0, 0, 0, 0, 289, 1430, 0,
	0, 0, 2168, 0, 2000, 0, 0, 0, 4514, 4515,
	2875, 2876, 2877, 2878, 2871, 2872, 2873, 2874, 2879, 2880,
	2881, 2882, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 1353, 1763, 1975, 1977, 0, 0, 0, 0, 3547,
	0, 0, 0, 0, 0, 0, 289, 1430, 1778, 0,
	763, 0, 763, 0, 0, 0, 3034, 0, 0, 1962,
	1963, 0, 289, 0, 0, 289, 0, 0, 0, 289,
	0, 289, 0, 0, 0, 0, 1420, 0, 289, 289,
	0, 1430, 1430, 3050, 0, 0, 0, 0, 289, 0,
	0, 0, 1968, 2859, 2860, 2861, 2862, 2867, 2868, 2869,
	2870, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 1808, 0,
	0, 0, 0, 0, 0, 0, 1639, 1639, 1639, 1639,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 841, 841, 0, 0, 841, 841, 0, 0,
	0, 0, 0, 0, 0, 3093, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 2168, 0, 0,
	0, 289, 0, 1998, 0, 0, 0, 4564, 0, 0,
	0, 1349, 0, 1349, 289, 0, 0, 0, 3988, 3989,
	0, 0, 0, 0, 0, 834, 0, 0, 0, 0,
	834, 0, 3548, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1187,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 289, 289, 3192, 1660, 0,
	4616, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 4630, 1969, 1351, 0, 1351, 0,
	51, 0, 115, 0, 0, 0, 0, 0, 99, 112,
	0, 0, 0, 289, 3252, 0, 0, 4653, 4052, 4053,
	4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063,
	4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 0, 4075,
	0, 1660, 0, 0, 289, 0, 289, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 3297, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 3093, 0, 747, 0, 0, 0, 0,
	0, 0, 2912, 2912, 3192, 980, 3093, 0, 0, 0,
	0, 0, 3543, 3544, 3545, 0, 0, 0, 0, 3542,
	3540, 3541, 3533, 3534, 3535, 3536, 3538, 3539, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 1420,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1430, 289, 0, 0, 1420, 0, 1420, 0, 1420, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 4733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2912, 2912, 2912, 2912, 2912, 2912, 2912, 2912,
	2912, 2912, 2912, 2912, 2912, 2912, 2912, 2912, 2912, 2912,
	2912, 2912, 0, 2912, 0, 289, 289, 289, 289, 1420,
	0, 0, 1420, 0, 0, 289, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 3531, 3532, 0,
	3549, 3550, 3551, 0, 0, 0, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4392, 289, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 107, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 3546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 255, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 3586, 0, 0, 1639, 1639, 0, 0,
	0, 0, 0, 3537, 164, 0, 0, 0, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	205, 0, 0, 0, 0, 0, 3615, 0, 254, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 3628, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 200, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 3649, 0, 0,
	0, 0, 0, 3553, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 4951, 0, 1639, 1639, 1639, 1639,
	1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
	1639, 1639, 1639, 1639, 1639, 1639, 0, 1639, 0, 0,
	0, 0, 0, 4965, 0, 3547, 0, 1970, 1971, 1972,
	1973, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4997, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 747, 0,
	0, 747, 0, 0, 747, 747, 0, 0, 2500, 0,
	747, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	1975, 1977, 0, 0, 0, 0, 2514, 2516, 0, 0,
	289, 0, 0, 0, 0, 0, 1998, 0, 0, 0,
	2520, 0, 0, 0, 0, 0, 1962, 1963, 0, 0,
	0, 0, 2528, 0, 0, 2532, 2533, 2534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 289, 289, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 3093,
	3093, 289, 0, 3691, 2143, 0, 0, 0, 3548, 5088,
	3093, 0, 2149, 79, 0, 5090, 0, 0, 0, 0,
	0, 3093, 2149, 0, 3093, 2149, 0, 0, 2149, 0,
	84, 3691, 0, 0, 0, 3628, 0, 0, 0, 0,
	0, 0, 0, 289, 289, 2143, 0, 289, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2143, 0, 289, 0, 3765, 0,
	3765, 93, 0, 0, 0, 0, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3093,
	0, 3093, 0, 3796, 3093, 2143, 0, 0, 3093, 1974,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2143, 0, 0, 834, 0, 115, 0, 0,
	0, 0, 1969, 99, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 3543, 3544,
	3545, 0, 0, 0, 289, 3542, 3540, 3541, 3533, 3534,
	3535, 3536, 3538, 3539, 0, 3965, 0, 0, 1510, 0,
	0, 0, 289, 0, 3840, 0, 0, 0, 3842, 3093,
	0, 0, 289, 0, 2000, 289, 0, 100, 3871, 0,
	1430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	3297, 0, 0, 1420, 0, 289, 0, 0, 3093, 0,
	747, 0, 0, 0, 0, 0, 0, 3093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4697, 0, 0, 0, 0, 0, 4009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 1961, 3955, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3961, 0,
	0, 0, 1660, 0, 0, 0, 1420, 289, 78, 289,
	0, 0, 0, 0, 0, 1420, 0, 0, 1420, 0,
	0, 3009, 4749, 0, 1945, 1946, 79, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 0, 84, 0, 0, 0, 289, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 0, 0, 0,
	0, 0, 2101, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 2001, 93, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 2912, 1982, 1976, 0, 4118,
	199, 107, 0, 1967, 111, 1948, 4030, 0, 0, 0,
	0, 0, 1964, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 253, 2001, 0, 0, 0, 0, 0, 51, 975,
	115, 1947, 0, 0, 159, 0, 99, 112, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 2912, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 289, 289, 0, 0, 0, 0, 164,
	100, 0, 0, 4891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3196, 205, 0, 0, 747, 747,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 1986, 0, 0, 1996, 0, 247, 1953,
	0, 0, 0, 1975, 1977, 0, 0, 248, 0, 0,
	0, 200, 0, 0, 0, 4921, 204, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 1179, 1962,
	1963, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	4943, 0, 1986, 0, 0, 1996, 0, 1984, 0, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3342, 0, 1984, 0, 0, 0,
	0, 0, 834, 0, 0, 3349, 3350, 0, 0, 0,
	0, 1968, 0, 0, 104, 0, 0, 2912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4226, 0,
	0, 4228, 4229, 0, 0, 0, 0, 0, 3765, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 3192, 0, 2912,
	0, 0, 0, 199, 107, 0, 0, 111, 0, 1981,
	0, 1983, 2143, 0, 289, 0, 0, 0, 763, 763,
	1430, 0, 1998, 0, 2912, 0, 0, 0, 0, 0,
	0, 0, 1974, 289, 253, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 289, 3297, 0, 159, 3297, 2149,
	0, 0, 0, 0, 289, 1969, 0, 0, 0, 0,
	1639, 3871, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 289, 0, 0,
	0, 1974, 0, 1987, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3093, 289, 0, 0,
	0, 0, 0, 0, 1969, 0, 3192, 78, 0, 980,
	3093, 0, 164, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 205, 0,
	0, 0, 1987, 0, 0, 0, 254, 0, 0, 0,
	0, 289, 84, 0, 0, 2143, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 4447,
	248, 0, 0, 0, 200, 0, 2000, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 3531, 3532, 93, 3549, 3550, 3551, 0, 0, 0,
	1760, 0, 0, 1985, 0, 1981, 0, 4474, 0, 0,
	0, 0, 0, 0, 4391, 1959, 1960, 1966, 1988, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 4410, 0, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 51, 1981, 115,
	0, 0, 1985, 0, 1981, 99, 112, 0, 0, 0,
	0, 1639, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	3546, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 3506, 0, 0, 0, 3507,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	1660, 0, 289, 0, 0, 3531, 3532, 0, 3549, 3550,
	3551, 0, 0, 1639, 0, 0, 289, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 3997, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 1430, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 1981, 0, 0, 1430, 0, 289, 1430, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 3537, 3093, 3093,
	1981, 3691, 0, 0, 3765, 3093, 0, 0, 0, 0,
	0, 0, 0, 4521, 3546, 4521, 1660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3093, 0, 2149,
	0, 0, 0, 3691, 0, 1660, 1660, 289, 2143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2143, 0, 289, 2143, 0, 289, 0, 0, 3765,
	0, 0, 0, 0, 0, 0, 1981, 3553, 0, 0,
	1510, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	3093, 0, 3093, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1439, 0, 0,
	4689, 0, 0, 104, 0, 0, 0, 0, 0, 3547,
	0, 3537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3093, 3093, 1179, 1179, 1179, 0, 3297, 3297,
	0, 0, 0, 0, 0, 3691, 0, 0, 0, 0,
	0, 0, 0, 4689, 0, 0, 291, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 199, 107, 0, 0, 111, 0, 0, 1609,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 3553, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 2674, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 0, 0, 1662, 159, 1668, 0, 1674,
	0, 0, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	0, 0, 0, 3547, 0, 78, 0, 0, 0, 0,
	0, 0, 1981, 0, 1945, 1946, 0, 0, 0, 0,
	1989, 1990, 1991, 79, 255, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	84, 0, 0, 0, 0, 2674, 1948, 0, 0, 0,
	0, 164, 3548, 0, 0, 0, 1995, 0, 1766, 3814,
	1771, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 2916, 0, 2001, 1785, 254, 1790, 0, 0, 0,
	0, 93, 1947, 0, 1998, 1981, 0, 3839, 0, 0,
	247, 1981, 0, 1967, 0, 0, 0, 0, 0, 248,
	3868, 0, 1964, 200, 0, 0, 3093, 2149, 204, 2149,
	0, 0, 3871, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 974, 0, 0, 0, 0, 0, 0, 1758,
	0, 4765, 1194, 4765, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 99, 112, 1856, 0, 0, 1862, 0,
	0, 3916, 0, 0, 0, 0, 0, 0, 834, 0,
	0, 0, 0, 3940, 0, 0, 3548, 0, 0, 3765,
	1660, 0, 1660, 1420, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 2143, 0, 289, 3531, 3532, 0, 3549, 3550,
	3551, 0, 3543, 3544, 3545, 0, 0, 100, 0, 3542,
	3540, 3541, 3533, 3534, 3535, 3536, 3538, 3539, 3996, 0,
	0, 3871, 0, 0, 4521, 0, 0, 1660, 0, 0,
	0, 3093, 0, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 0, 0, 0,
	0, 4856, 0, 0, 0, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 1660, 0, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 3546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 2022, 0,
	0, 289, 289, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4030, 3543, 3544, 3545, 0,
	0, 0, 0, 3542, 3540, 3541, 3533, 3534, 3535, 3536,
	3538, 3539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3765, 4912, 0, 0,
	0, 0, 0, 0, 3871, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3537, 0, 0, 4521, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 4521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2095, 2095, 2095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	199, 107, 0, 0, 111, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3553, 1974, 0, 0, 0, 4521, 4521, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 975,
	0, 0, 0, 0, 159, 1969, 0, 4521, 0, 289,
	4521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2149, 3531, 3532, 3547, 3549, 3550, 3551, 0, 0, 0,
	1660, 0, 1660, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1430, 0, 0, 0, 0, 0, 2000, 0, 164,
	0, 0, 0, 0, 0, 5039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 1179, 0, 0, 0,
	0, 4765, 0, 254, 289, 0, 0, 0, 0, 0,
	3546, 0, 0, 0, 1998, 0, 0, 1981, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 3093,
	0, 200, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 1988, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 4254, 4255, 0, 0, 4030, 1981, 0, 4257,
	0, 1981, 4258, 0, 0, 0, 3548, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 3537, 0, 0,
	1660, 0, 0, 0, 0, 0, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
	1981, 1981, 0, 0, 0, 0, 0, 1981, 0, 1981,
	1981, 1981, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 2916, 2916, 0, 0, 0, 0, 3553, 0, 0,
	0, 0, 0, 3871, 0, 0, 1981, 0, 0, 0,
	0, 4345, 0, 0, 0, 0, 2514, 4351, 4352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 1194,
	1194, 0, 0, 0, 0, 0, 0, 0, 0, 3547,
	0, 0, 0, 3093, 0, 0, 4370, 0, 0, 0,
	0, 0, 0, 4521, 0, 4521, 0, 1981, 1660, 0,
	0, 0, 0, 0, 0, 0, 3543, 3544, 3545, 1596,
	0, 0, 0, 3542, 3540, 3541, 3533, 3534, 3535, 3536,
	3538, 3539, 0, 0, 0, 0, 0, 1981, 0, 0,
	1981, 0, 0, 1981, 0, 0, 1981, 0, 0, 0,
	0, 0, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3093,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3192, 0, 0, 0, 0, 1981, 0,
	0, 3552, 0, 2916, 2916, 2916, 2916, 0, 0, 1981,
	0, 1981, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2577, 0,
	0, 0, 3548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4454, 4455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2647, 0, 2651, 0, 0, 0,
	0, 0, 0, 2665, 0, 0, 1179, 0, 0, 0,
	0, 0, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 0, 2717,
	0, 2719, 2720, 2721, 2722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3543, 3544, 3545, 0, 0, 2746, 0, 3542,
	3540, 3541, 3533, 3534, 3535, 3536, 3538, 3539, 0, 2022,
	0, 0, 0, 2797, 0, 0, 0, 0, 0, 2514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2827,
	2830, 2833, 2836, 0, 0, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2908, 0, 2919, 2921, 2926, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 3222, 0, 0, 0, 0, 0, 0,
	0, 4662, 0, 4664, 4665, 4666, 0, 4668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 3212, 3210, 0,
	0, 0, 0, 0, 3214, 3216, 3206, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 1981, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 3232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4717,
	0, 0, 3991, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 288, 288,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 1975, 1977, 0,
	1981, 0, 1995, 0, 0, 0, 0, 0, 0, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 1962, 1963, 0, 0, 0, 1947, 0,
	1194, 0, 0, 3208, 0, 0, 0, 904, 1596, 1967,
	0, 0, 0, 0, 3224, 0, 0, 4819, 1964, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	1981, 1981, 0, 2916, 2916, 0, 0, 1981, 3223, 3213,
	3211, 3215, 3217, 3207, 3209, 3225, 3227, 3552, 3552, 0,
	0, 1981, 1981, 0, 0, 0, 3219, 3221, 3229, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 3233, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 1998, 0, 3255,
	3256, 0, 3258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2916, 2916, 2916, 2916, 2916, 2916, 2916,
	2916, 2916, 2916, 2916, 2916, 2916, 2916, 2916, 2916, 2916,
	2916, 2916, 2916, 0, 2916, 3552, 3552, 3552, 3552, 1986,
	0, 0, 1996, 0, 0, 1352, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 1993, 0,
	1981, 0, 0, 0, 0, 1962, 1963, 0, 1596, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 3226, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 3380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3234, 0, 0, 0, 0, 0, 1983, 0,
	870, 3218, 3220, 3228, 0, 0, 0, 0, 2514, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 2003, 0,
	0, 0, 0, 0, 0, 0, 883, 0, 0, 0,
	0, 0, 1179, 1965, 1961, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 1974, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 1969, 0, 0, 0, 3440, 3441, 0, 0, 0,
	0, 3447, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 0, 0, 778, 0, 0, 0, 1987,
	3461, 3462, 875, 0, 0, 0, 2797, 0, 0, 891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 0, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 0, 0,
	0, 3471, 0, 0, 0, 0, 0, 0, 0, 0,
	1194, 0, 0, 0, 1596, 0, 0, 3485, 0, 781,
	0, 0, 0, 0, 0, 0, 879, 0, 0, 0,
	0, 0, 0, 0, 3497, 0, 0, 0, 0, 0,
	0, 800, 0, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 782, 0, 0, 0, 0, 0, 0, 0,
	877, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 783, 0, 0,
	0, 0, 2793, 0, 0, 0, 2794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	784, 0, 0, 1981, 1981, 785, 0, 1981, 3552, 3552,
	1981, 0, 0, 0, 1981, 0, 0, 0, 0, 890,
	0, 1981, 809, 0, 1264, 2926, 2926, 2926, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 0, 2095, 0, 0, 0, 0, 0, 0, 799,
	3590, 0, 0, 0, 0, 0, 0, 1981, 1981, 1981,
	1981, 1981, 0, 0, 0, 0, 0, 1981, 1596, 1981,
	0, 0, 3552, 3552, 3552, 3552, 3552, 3552, 3552, 3552,
	3552, 3552, 3552, 3552, 3552, 3552, 3552, 3552, 3552, 3552,
	3552, 3552, 0, 0, 1596, 3552, 0, 0, 1981, 1981,
	0, 872, 0, 0, 0, 0, 0, 0, 796, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 288, 0, 288, 288, 0,
	0, 288, 0, 0, 876, 0, 0, 1945, 1946, 0,
	1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1179, 0,
	1982, 1976, 0, 0, 0, 0, 0, 0, 0, 1948,
	1179, 0, 0, 808, 0, 0, 0, 0, 0, 1995,
	0, 0, 1981, 0, 0, 806, 0, 787, 0, 886,
	0, 0, 0, 0, 0, 874, 2001, 0, 0, 0,
	1981, 288, 0, 288, 288, 1947, 0, 288, 288, 0,
	0, 3723, 0, 0, 0, 0, 1967, 807, 0, 788,
	0, 0, 0, 0, 0, 1964, 0, 0, 0, 0,
	904, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 871, 0, 0, 0, 0,
	0, 884, 0, 0, 0, 1981, 1981, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 0, 0, 3779, 3780,
	789, 0, 0, 0, 878, 804, 805, 0, 802, 0,
	1356, 288, 288, 0, 797, 0, 0, 790, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 0, 0, 1970, 1971, 1972, 1973, 288, 288, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 889, 0, 885, 0,
	0, 0, 791, 0, 798, 0, 0, 0, 0, 1596,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 793, 1996,
	0, 1981, 0, 801, 0, 0, 1975, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 0, 1992, 0, 1993, 0, 0, 0, 795,
	0, 0, 1962, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 1981,
	1984, 0, 0, 1981, 1981, 0, 288, 1981, 1981, 0,
	0, 0, 1981, 0, 0, 1968, 1981, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 2916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2916, 0, 0,
	0, 0, 0, 0, 2665, 0, 0, 0, 0, 0,
	0, 3983, 3984, 0, 0, 3987, 0, 0, 0, 3990,
	0, 0, 0, 0, 0, 0, 0, 0, 3994, 0,
	0, 0, 0, 0, 0, 1974, 0, 4001, 0, 0,
	0, 0, 3590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 4014, 1969, 0,
	1945, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4037, 4038, 0,
	4039, 4040, 4041, 0, 1976, 0, 1987, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 1194, 0, 4047, 0,
	0, 0, 4049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	2000, 0, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 4078, 4079, 0, 0, 1967,
	2117, 0, 1352, 0, 0, 0, 288, 0, 1964, 0,
	0, 0, 0, 4090, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 2117, 288, 0, 1945, 1946, 4099, 0,
	0, 0, 904, 0, 1981, 1981, 1981, 0, 0, 904,
	0, 0, 0, 0, 0, 1981, 1981, 3552, 2916, 0,
	1976, 0, 0, 0, 1981, 0, 1985, 1981, 1948, 0,
	0, 0, 0, 0, 3986, 0, 0, 288, 1959, 1960,
	1966, 1988, 1965, 1961, 288, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 2001, 1970, 1971, 1972, 1973,
	0, 0, 0, 4416, 1947, 0, 1953, 0, 0, 3552,
	2916, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 4162, 0, 0, 1964, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 1981, 2916, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 4180, 0,
	0, 0, 0, 1981, 0, 1981, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3985, 0, 4211, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 1968, 0,
	4235, 4236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 3552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 3552, 0, 0, 1981, 0, 1596, 0, 1356, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 3552, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 904, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	2095, 1356, 0, 0, 0, 0, 0, 0, 0, 4341,
	0, 0, 1194, 0, 1981, 0, 0, 1356, 1974, 0,
	0, 0, 0, 0, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 1969, 0, 288, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 288, 0, 288, 0, 0, 0, 1356, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 4388, 4389,
	0, 0, 0, 0, 4393, 4394, 0, 0, 0, 4397,
	4398, 0, 0, 2000, 0, 0, 0, 4402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4406, 0,
	0, 0, 0, 0, 1974, 288, 0, 0, 288, 0,
	1596, 0, 0, 0, 4411, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 904, 288, 0, 288, 0, 288, 0,
	288, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 1961, 0, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 2000,
	1596, 0, 0, 0, 0, 0, 0, 288, 288, 288,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1946, 0,
	1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 0, 0,
	0, 0, 0, 1179, 0, 0, 0, 0, 0, 0,
	1982, 1976, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1995,
	0, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 0, 0, 0,
	0, 4565, 0, 0, 0, 1964, 0, 0, 0, 0,
	1596, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 1971, 1972, 1973, 0, 0, 0,
	0, 0, 1596, 1953, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 1996,
	0, 0, 0, 0, 0, 288, 1975, 1977, 0, 0,
	0, 0, 0, 4684, 4685, 4686, 0, 0, 0, 0,
	0, 0, 0, 1992, 0, 1993, 1356, 0, 0, 0,
	0, 0, 1962, 1963, 924, 0, 2665, 0, 0, 4695,
	4696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 288, 926, 0, 4704, 4707, 0,
	927, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	288, 0, 0, 288, 0, 0, 0, 288, 0, 288,
	0, 0, 0, 0, 0, 0, 288, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 928, 0, 945, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 929,
	0, 0, 0, 0, 930, 1983, 0, 0, 0, 0,
	0, 0, 0, 4766, 0, 0, 1998, 0, 0, 0,
	0, 0, 4774, 0, 0, 0, 954, 0, 0, 0,
	0, 0, 0, 931, 0, 288, 0, 4782, 0, 0,
	1179, 0, 0, 0, 0, 0, 0, 952, 0, 288,
	0, 0, 0, 0, 0, 0, 4793, 0, 0, 4795,
	0, 0, 288, 0, 0, 1356, 1356, 0, 0, 0,
	0, 0, 925, 0, 0, 1974, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 932, 0, 0, 1969, 0,
	933, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 956, 288, 288, 0, 0, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 1356, 0, 1356, 0, 0,
	0, 0, 288, 0, 904, 0, 0, 0, 0, 0,
	0, 288, 0, 955, 0, 1356, 1356, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 794, 0, 0, 0,
	0, 1356, 0, 0, 1356, 1356, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 777, 0, 0,
	0, 4920, 778, 0, 0, 4924, 288, 0, 1959, 1960,
	1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 288, 0, 288, 0,
	0, 934, 0, 3999, 0, 0, 0, 0, 0, 288,
	0, 0, 936, 779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 0, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 0, 288, 288, 288, 288, 0, 800, 0,
	0, 4994, 0, 288, 0, 946, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 782,
	2181, 2181, 1356, 0, 0, 0, 0, 0, 0, 0,
	923, 0, 0, 947, 0, 0, 0, 0, 0, 288,
	0, 2665, 938, 0, 783, 0, 0, 288, 0, 0,
	4707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 944,
	0, 0, 785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 0, 809,
	0, 940, 959, 0, 958, 0, 0, 0, 941, 0,
	0, 0, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 1596, 942, 1596, 1356, 799, 0, 951, 0,
	0, 0, 0, 0, 960, 0, 957, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 5115, 5115, 5115, 0, 796, 0, 1194, 0, 1356,
	1995, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 5140, 0,
	0, 0, 1356, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 1596, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 1596, 0, 0, 0, 0, 1352, 789, 0, 0,
	0, 0, 804, 805, 0, 802, 0, 0, 0, 0,
	0, 797, 0, 0, 790, 0, 0, 1986, 1356, 0,
	1996, 0, 0, 0, 0, 0, 2117, 1975, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 1992, 1596, 1993, 0, 0, 0,
	0, 0, 0, 1962, 1963, 5115, 5272, 0, 0, 791,
	0, 798, 0, 0, 0, 0, 0, 2181, 0, 0,
	792, 1984, 0, 0, 0, 1596, 0, 0, 0, 288,
	0, 0, 0, 288, 288, 793, 1968, 0, 0, 0,
	801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 1356, 1596, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 288, 288, 0, 0, 288, 1596, 1998, 0, 0,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991,
	0, 0, 0, 0, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 1976, 1974, 0, 0, 0,
	0, 0, 1356, 1948, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 1995, 0, 1356, 0, 1356, 0, 1969,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	2001, 0, 0, 0, 1356, 1356, 0, 0, 0, 1947,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	1967, 0, 288, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	288, 2000, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 1971, 1972,
	1973, 0, 0, 0, 284, 284, 743, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0, 0,
	1986, 0, 0, 1996, 3509, 0, 0, 0, 0, 0,
	1975, 1977, 0, 0, 0, 288, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 1993,
	0, 0, 0, 0, 0, 0, 1962, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 1976, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1998, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 0, 0, 290, 290, 290, 0, 0, 0, 1974,
	0, 1352, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 1971, 1972,
	1973, 0, 1217, 117, 0, 1356, 1356, 1953, 0, 0,
	1987, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	1986, 1356, 0, 1996, 1356, 0, 0, 0, 0, 0,
	1975, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 1992, 0, 1993,
	1356, 0, 0, 0, 0, 0, 1962, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 3508, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 288, 0, 1151, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 1172, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 288, 0, 0, 1339, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 1356, 0, 1356, 0, 0, 0, 1356, 288,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 1356,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	1356, 0, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 1356, 0, 1356, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 1406, 0, 1406, 1406, 0, 3505, 1356, 0,
	0, 1356, 1352, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2117, 0, 1945, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 2181, 0, 0, 288, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 2001, 0, 0, 0, 1986,
	0, 2117, 1996, 2117, 1947, 0, 0, 1356, 0, 1975,
	1977, 0, 0, 0, 0, 1967, 0, 2181, 2181, 0,
	0, 0, 0, 0, 1964, 288, 1992, 0, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 288, 0, 0, 288, 0, 2181, 2181, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 2181,
	3446, 0, 0, 0, 1764, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 1971, 1972, 1973, 1356, 1356, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 1983, 0,
	0, 0, 1356, 0, 0, 288, 0, 0, 0, 1998,
	0, 290, 0, 290, 290, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1963, 1886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 290, 1516, 290,
	290, 1969, 0, 290, 290, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 117, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 290, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 1356, 0, 1356, 1516, 0, 0, 1356, 288,
	0, 1356, 1516, 290, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2181, 0, 0, 1974, 0, 117, 0, 117, 1985,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 1969, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	3463, 0, 288, 0, 0, 0, 1356, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 1172, 117, 117, 0, 0, 1945, 1946, 0,
	1356, 0, 2117, 0, 0, 1356, 1356, 1356, 0, 117,
	0, 117, 290, 0, 0, 0, 0, 0, 0, 2000,
	0, 1976, 0, 2133, 0, 117, 0, 117, 1356, 1948,
	1356, 0, 0, 0, 0, 1356, 0, 1356, 290, 2144,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 0, 1356, 0, 288,
	288, 0, 0, 0, 0, 0, 1967, 0, 2181, 0,
	0, 0, 0, 0, 1406, 1964, 0, 0, 0, 0,
	0, 1617, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 1971, 1972, 1973, 2117, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 1356,
	1356, 0, 1356, 288, 0, 0, 0, 1151, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 0, 0, 0, 2117, 2117, 1975, 1977, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 2027, 0, 0, 2117, 0, 288, 2117, 0,
	0, 0, 1962, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 1356, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 1968, 0, 0, 290, 290,
	290, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 1356, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 288, 290, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 2118, 1998, 117, 1356, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2456, 0, 0, 0,
	2463, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2476, 0, 0, 0, 0, 1516, 0, 1356,
	0, 0, 0, 0, 1356, 0, 0, 0, 2488, 0,
	2488, 0, 0, 0, 0, 1974, 2495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 1356, 1356, 1356, 1356, 1356, 1356, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 2463, 0, 0, 2524, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 2545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 2561, 0, 2563, 2181, 2565, 0, 2567, 0, 2568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	896, 2117, 0, 2117, 2597, 2598, 2599, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 1516, 1516, 290, 0,
	0, 0, 0, 0, 1356, 0, 0, 1516, 896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950,
	1951, 1952, 1954, 1955, 0, 0, 0, 0, 0, 2181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 290,
	0, 0, 0, 0, 0, 290, 1356, 1356, 1356, 0,
	0, 0, 0, 0, 1516, 0, 1516, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 290, 0, 0, 290, 0, 0, 1356, 0, 0,
	1356, 0, 1516, 0, 0, 1516, 1516, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	290, 0, 290, 0, 290, 0, 290, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1172, 0, 1172, 2181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2985, 0, 290, 290, 290, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3036, 0, 0,
	1406, 0, 0, 0, 1406, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	1356, 0, 0, 2476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 1356, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 1151, 0,
	0, 1151, 1151, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2735,
	0, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 0, 0, 1516, 0, 1172,
	1995, 1356, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 0, 2021, 0, 0, 0, 2001, 1617, 0,
	290, 0, 0, 1516, 0, 0, 1947, 0, 0, 0,
	2463, 2463, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 290, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 3275,
	0, 0, 0, 2118, 0, 0, 290, 0, 2476, 290,
	0, 0, 0, 290, 0, 290, 0, 0, 0, 0,
	0, 0, 290, 290, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 290, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3347, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	1996, 0, 0, 3359, 0, 3362, 0, 1975, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 1992, 0, 1993, 0, 0, 0,
	0, 0, 0, 1962, 1963, 290, 1356, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	3398, 1617, 3400, 1617, 0, 0, 0, 0, 0, 0,
	3407, 0, 0, 0, 0, 0, 0, 290, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	290, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 1406, 0, 0, 0,
	0, 0, 0, 0, 3436, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 1983, 290, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	290, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 1516, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 1969,
	1635, 0, 290, 0, 0, 1516, 1516, 1635, 117, 0,
	0, 117, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 1635, 290, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 2000, 0, 117, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 290,
	290, 290, 290, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 1985, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 117, 0, 1959,
	1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	1617, 1617, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 2735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3687, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3742, 3744,
	0, 0, 2476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 0,
	896, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 3864, 0, 0,
	2463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1339, 0, 290, 0, 0, 0, 290,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 290, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 3967, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1635, 0, 0, 0, 117, 117, 0, 117,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 1516, 0, 1516, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 290, 1516, 0, 0,
	0, 117, 117, 0, 117, 0, 290, 0, 0, 290,
	1516, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 1635, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1635, 1516, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	1635, 1635, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 896, 0, 0, 0, 0, 1516,
	0, 290, 1516, 290, 0, 0, 1339, 0, 0, 1172,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 1976, 0, 2476,
	0, 1636, 1636, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 1995, 0, 0, 2476, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 4294,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 4304,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1516, 0, 0, 0, 2476, 0, 0,
	0, 1964, 4323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 1636, 0, 1636, 1339, 1339, 0, 0, 1513, 0,
	0, 0, 0, 0, 0, 0, 4369, 0, 0, 0,
	0, 1636, 1636, 0, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 1636, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	1636, 1636, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 0, 1516, 1516, 0, 1516, 0, 0, 0, 1516,
	0, 0, 1516, 0, 0, 0, 1984, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 1513, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 290, 0, 0, 0, 0, 290, 0, 0, 0,
	1994, 290, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 1998, 0, 0, 0, 1516, 1516, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 1516,
	0, 1516, 0, 0, 0, 290, 1516, 0, 1516, 1635,
	0, 0, 4541, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 2476, 0,
	0, 1974, 117, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 1514, 0,
	0, 1635, 2476, 1635, 0, 0, 0, 0, 0, 1635,
	0, 0, 4641, 0, 0, 0, 0, 0, 0, 0,
	1635, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 1516, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	290, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 290, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 4751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 1636,
	1516, 290, 0, 0, 0, 1516, 0, 0, 0, 2476,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 1982, 1976, 0, 1516, 0, 0, 117, 0, 0,
	1948, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1995, 0, 0, 0, 0, 0, 4881, 1617, 0, 0,
	117, 1636, 0, 1636, 0, 0, 0, 2001, 0, 1636,
	0, 0, 0, 0, 0, 0, 1947, 1516, 0, 1516,
	1636, 1636, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 1516,
	0, 0, 0, 0, 0, 117, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 1516, 1516,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	1996, 0, 0, 0, 5000, 0, 0, 1975, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 1993, 0, 0, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 1516, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 290, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 5053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1982, 1976, 0, 0, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	1995, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 1998, 2735, 5097,
	0, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 290,
	1635, 0, 0, 0, 1513, 0, 1974, 0, 0, 0,
	0, 896, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 0, 290, 1953, 0, 0, 1987, 1516, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 1635, 0,
	1635, 2000, 0, 0, 0, 1514, 0, 1986, 0, 0,
	1996, 0, 0, 0, 0, 0, 0, 1975, 1977, 0,
	1514, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 1993, 0, 0, 0,
	0, 0, 0, 1962, 1963, 0, 1514, 0, 290, 0,
	0, 0, 0, 0, 1513, 117, 0, 1513, 0, 0,
	0, 1984, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 2794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 1514, 0, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 2001, 0, 1987, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 1636, 0,
	1636, 0, 0, 0, 1514, 1967, 0, 0, 1513, 0,
	0, 0, 1636, 0, 1964, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1636, 0, 1970, 1971, 1972, 1973, 0, 1985, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0, 0,
	5040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 1986, 0, 1514, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 1993, 0, 0, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 1635, 1635, 0,
	1635, 0, 0, 0, 1635, 0, 0, 1635, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 1635, 0, 0, 0,
	0, 1635, 1635, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 1635, 0, 0, 0,
	0, 1635, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 1513, 0, 1513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 1635, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1959, 1960, 1966,
	1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 0, 0, 5036, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1636, 0,
	1636, 0, 0, 0, 1636, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 0, 1982, 1976, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 1636, 0, 0, 0, 0, 0, 0, 1947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 1635, 1635, 1636, 0, 0, 1964,
	0, 1636, 1636, 1636, 0, 1945, 1946, 0, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 1636, 0, 1982, 1976,
	0, 1636, 0, 1514, 0, 1513, 0, 1948, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 2001, 0, 1635, 1635, 1635, 1635,
	1635, 1635, 1635, 1947, 0, 0, 0, 1970, 1971, 1972,
	1973, 0, 0, 0, 1967, 0, 0, 1953, 0, 1513,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	1975, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 1993,
	0, 0, 1513, 0, 1635, 0, 1962, 1963, 0, 0,
	0, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1984, 1514, 1514, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 1636, 1636, 0, 0,
	1513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1514, 1996, 0, 0,
	0, 0, 0, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 1992, 0, 1993, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	1998, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 1514,
	0, 0, 1635, 1635, 1635, 0, 0, 0, 0, 1945,
	1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 0, 0, 0, 0, 1974,
	0, 1948, 1994, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 0, 1513, 0, 0, 1635, 0, 0, 0,
	0, 0, 1969, 1983, 1636, 1636, 0, 0, 2001, 0,
	0, 0, 0, 0, 1998, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	1987, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 1987, 1953, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 2000, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 1986, 0,
	0, 1996, 1514, 4939, 1636, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 1993, 0, 0,
	0, 0, 0, 0, 1962, 1963, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	1514, 0, 1984, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 4890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 1636, 1636, 1636, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 1517, 306, 307,
	1518, 1519, 1520, 0, 1521, 689, 1522, 1523, 1524, 308,
	1525, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 1526, 694,
	320, 321, 322, 323, 324, 325, 1527, 1528, 0, 326,
	695, 696, 697, 1529, 327, 328, 698, 1530, 1597, 1531,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 1532,
	338, 339, 340, 337, 341, 1533, 342, 1636, 343, 344,
	345, 346, 347, 348, 1534, 349, 350, 351, 1296, 352,
	353, 354, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 1542,
	365, 361, 363, 1543, 366, 364, 367, 1544, 368, 369,
	370, 1545, 1546, 371, 372, 373, 1547, 374, 375, 376,
	1548, 377, 378, 379, 1549, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 1550, 295, 1551, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 1552, 398, 399,
	400, 1553, 401, 402, 1554, 1297, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	1555, 415, 707, 1556, 708, 416, 1557, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 1299, 424,
	425, 1558, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 1559, 1298, 513, 434, 712, 713,
	1560, 714, 1561, 435, 436, 1300, 715, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 1562, 447, 449, 448, 1563, 450, 716, 1303,
	451, 452, 1304, 1564, 453, 454, 455, 456, 457, 458,
	461, 1565, 1566, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 1567, 297, 1307, 507, 508, 509,
	510, 1568, 717, 511, 718, 514, 515, 1569, 0, 516,
	0, 517, 1570, 1571, 519, 520, 521, 1572, 1573, 522,
	523, 719, 1308, 524, 1309, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 1574, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 1575, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 1576, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 1577, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1578, 606, 607, 605, 608, 609,
	610, 1579, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1580,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1581,
	641, 642, 0, 637, 628, 1582, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1583, 651, 730, 731, 732,
	733, 1584, 662, 1585, 652, 654, 655, 656, 734, 657,
	735, 1586, 658, 659, 660, 661, 653, 663, 664, 1587,
	1588, 665, 666, 668, 670, 671, 667, 669, 672, 1589,
	673, 1590, 0, 674, 675, 676, 736, 737, 738, 1591,
	678, 677, 679, 680, 681, 739, 682, 683, 1592, 1593,
	1594, 1595, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 2963, 0,
	0, 0, 0, 0, 0, 0, 2964, 298, 299, 301,
	300, 302, 303, 304, 305, 1517, 306, 307, 1518, 1519,
	1520, 0, 1521, 689, 1522, 1523, 1524, 308, 1525, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 1526, 694, 320, 321,
	322, 323, 324, 325, 1527, 1528, 0, 326, 695, 696,
	697, 1529, 327, 328, 698, 1530, 1597, 1531, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 1532, 338, 339,
	340, 337, 341, 1533, 342, 0, 343, 344, 345, 346,
	347, 348, 1534, 349, 350, 351, 1296, 352, 353, 354,
	1535, 1536, 1538, 1537, 1539, 1540, 1541, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 1542, 365, 361,
	363, 1543, 366, 364, 367, 1544, 368, 369, 370, 1545,
	1546, 371, 372, 373, 1547, 374, 375, 376, 1548, 377,
	378, 379, 1549, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	1550, 295, 1551, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 1552, 398, 399, 400, 1553,
	401, 402, 1554, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 1555, 415,
	707, 1556, 708, 416, 1557, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 1299, 424, 425, 1558,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 1559, 1298, 513, 434, 712, 713, 1560, 714,
	1561, 435, 436, 1300, 715, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	1562, 447, 449, 448, 1563, 450, 716, 1303, 451, 452,
	1304, 1564, 453, 454, 455, 456, 457, 458, 461, 1565,
	1566, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1567, 297, 1307, 507, 508, 509, 510, 1568,
	717, 511, 718, 514, 515, 1569, 0, 516, 0, 517,
	1570, 1571, 519, 520, 521, 1572, 1573, 522, 523, 719,
	1308, 524, 1309, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 1574, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 1575, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 1576, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 1577, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1578, 606, 607, 605, 608, 609, 610, 1579,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1580, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1581, 641, 642,
	0, 637, 628, 1582, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1583, 651, 730, 731, 732, 733, 1584,
	662, 1585, 652, 654, 655, 656, 734, 657, 735, 1586,
	658, 659, 660, 661, 653, 663, 664, 1587, 1588, 665,
	666, 668, 670, 671, 667, 669, 672, 1589, 673, 1590,
	0, 674, 675, 676, 736, 737, 738, 1591, 678, 677,
	679, 680, 681, 739, 682, 683, 1592, 1593, 1594, 1595,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	4008, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4010, 298, 299, 301, 300, 302, 303, 304,
	305, 1517, 306, 307, 1518, 1519, 1520, 0, 1521, 689,
	1522, 1523, 1524, 308, 1525, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 1526, 694, 320, 321, 322, 323, 324, 325,
	1527, 1528, 0, 326, 695, 696, 697, 1529, 327, 328,
	698, 1530, 1597, 1531, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 1532, 338, 339, 340, 337, 341, 1533,
	342, 0, 343, 344, 345, 346, 347, 348, 1534, 349,
	350, 351, 1296, 352, 353, 354, 1535, 1536, 1538, 1537,
	1539, 1540, 1541, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 1542, 365, 361, 363, 1543, 366, 364,
	367, 1544, 368, 369, 370, 1545, 1546, 371, 372, 373,
	1547, 374, 375, 376, 1548, 377, 378, 379, 1549, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 1550, 295, 1551, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 1552, 398, 399, 400, 1553, 401, 402, 1554, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 1555, 415, 707, 1556, 708, 416,
	1557, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 1299, 424, 425, 1558, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 1559, 1298,
	513, 434, 712, 713, 1560, 714, 1561, 435, 436, 1300,
	715, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 1562, 447, 449, 448,
	1563, 450, 716, 1303, 451, 452, 1304, 1564, 453, 454,
	455, 456, 457, 458, 461, 1565, 1566, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1567, 297,
	1307, 507, 508, 509, 510, 1568, 717, 511, 718, 514,
	515, 1569, 0, 516, 0, 517, 1570, 1571, 519, 520,
	521, 1572, 1573, 522, 523, 719, 1308, 524, 1309, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 1574, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 1575, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 1576, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 1577, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1578, 606,
	607, 605, 608, 609, 610, 1579, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1580, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1581, 641, 642, 0, 637, 628, 1582,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1583,
	651, 730, 731, 732, 733, 1584, 662, 1585, 652, 654,
	655, 656, 734, 657, 735, 1586, 658, 659, 660, 661,
	653, 663, 664, 1587, 1588, 665, 666, 668, 670, 671,
	667, 669, 672, 1589, 673, 1590, 0, 674, 675, 676,
	736, 737, 738, 1591, 678, 677, 679, 680, 681, 739,
	682, 683, 1592, 1593, 1594, 1595, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4446, 298, 299, 301, 300, 302, 303, 304,
	305, 1517, 306, 307, 1518, 1519, 1520, 0, 1521, 689,
	1522, 1523, 1524, 308, 1525, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 1526, 694, 320, 321, 322, 323, 324, 325,
	1527, 1528, 0, 326, 695, 696, 697, 1529, 327, 328,
	698, 1530, 1597, 1531, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 1532, 338, 339, 340, 337, 341, 1533,
	342, 0, 343, 344, 345, 346, 347, 348, 1534, 349,
	350, 351, 1296, 352, 353, 354, 1535, 1536, 1538, 1537,
	1539, 1540, 1541, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 1542, 365, 361, 363, 1543, 366, 364,
	367, 1544, 368, 369, 370, 1545, 1546, 371, 372, 373,
	1547, 374, 375, 376, 1548, 377, 378, 379, 1549, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 1550, 295, 1551, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 1552, 398, 399, 400, 1553, 401, 402, 1554, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 1555, 415, 707, 1556, 708, 416,
	1557, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 1299, 424, 425, 1558, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 1559, 1298,
	513, 434, 712, 713, 1560, 714, 1561, 435, 436, 1300,
	715, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 1562, 447, 449, 448,
	1563, 450, 716, 1303, 451, 452, 1304, 1564, 453, 454,
	455, 456, 457, 458, 461, 1565, 1566, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1567, 297,
	1307, 507, 508, 509, 510, 1568, 717, 511, 718, 514,
	515, 1569, 0, 516, 0, 517, 1570, 1571, 519, 520,
	521, 1572, 1573, 522, 523, 719, 1308, 524, 1309, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 1574, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 1575, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 1576, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 1577, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1578, 606,
	607, 605, 608, 609, 610, 1579, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1580, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1581, 641, 642, 0, 637, 628, 1582,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1583,
	651, 730, 731, 732, 733, 1584, 662, 1585, 652, 654,
	655, 656, 734, 657, 735, 1586, 658, 659, 660, 661,
	653, 663, 664, 1587, 1588, 665, 666, 668, 670, 671,
	667, 669, 672, 1589, 673, 1590, 0, 674, 675, 676,
	736, 737, 738, 1591, 678, 677, 679, 680, 681, 739,
	682, 683, 1592, 1593, 1594, 1595, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4444, 298, 299, 301, 300, 302, 303, 304,
	305, 1517, 306, 307, 1518, 1519, 1520, 0, 1521, 689,
	1522, 1523, 1524, 308, 1525, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 1526, 694, 320, 321, 322, 323, 324, 325,
	1527, 1528, 0, 326, 695, 696, 697, 1529, 327, 328,
	698, 1530, 1597, 1531, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 1532, 338, 339, 340, 337, 341, 1533,
	342, 0, 343, 344, 345, 346, 347, 348, 1534, 349,
	350, 351, 1296, 352, 353, 354, 1535, 1536, 1538, 1537,
	1539, 1540, 1541, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 1542, 365, 361, 363, 1543, 366, 364,
	367, 1544, 368, 369, 370, 1545, 1546, 371, 372, 373,
	1547, 374, 375, 376, 1548, 377, 378, 379, 1549, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 1550, 295, 1551, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 1552, 398, 399, 400, 1553, 401, 402, 1554, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 1555, 415, 707, 1556, 708, 416,
	1557, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 1299, 424, 425, 1558, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 1559, 1298,
	513, 434, 712, 713, 1560, 714, 1561, 435, 436, 1300,
	715, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 1562, 447, 449, 448,
	1563, 450, 716, 1303, 451, 452, 1304, 1564, 453, 454,
	455, 456, 457, 458, 461, 1565, 1566, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1567, 297,
	1307, 507, 508, 509, 510, 1568, 717, 511, 718, 514,
	515, 1569, 0, 516, 0, 517, 1570, 1571, 519, 520,
	521, 1572, 1573, 522, 523, 719, 1308, 524, 1309, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 1574, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 1575, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 1576, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 1577, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1578, 606,
	607, 605, 608, 609, 610, 1579, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1580, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1581, 641, 642, 0, 637, 628, 1582,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1583,
	651, 730, 731, 732, 733, 1584, 662, 1585, 652, 654,
	655, 656, 734, 657, 735, 1586, 658, 659, 660, 661,
	653, 663, 664, 1587, 1588, 665, 666, 668, 670, 671,
	667, 669, 672, 1589, 673, 1590, 0, 674, 675, 676,
	736, 737, 738, 1591, 678, 677, 679, 680, 681, 739,
	682, 683, 1592, 1593, 1594, 1595, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4690, 298, 299, 301,
	300, 302, 303, 304, 305, 1517, 306, 307, 1518, 1519,
	1520, 0, 1521, 689, 1522, 1523, 1524, 308, 1525, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 1526, 694, 320, 321,
	322, 323, 324, 325, 1527, 1528, 0, 326, 695, 696,
	697, 1529, 327, 328, 698, 1530, 1597, 1531, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 1532, 338, 339,
	340, 337, 341, 1533, 342, 0, 343, 344, 345, 346,
	347, 348, 1534, 349, 350, 351, 1296, 352, 353, 354,
	1535, 1536, 1538, 1537, 1539, 1540, 1541, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 1542, 365, 361,
	363, 1543, 366, 364, 367, 1544, 368, 369, 370, 1545,
	1546, 371, 372, 373, 1547, 374, 375, 376, 1548, 377,
	378, 379, 1549, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	1550, 295, 1551, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 1552, 398, 399, 400, 1553,
	401, 402, 1554, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 1555, 415,
	707, 1556, 708, 416, 1557, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 1299, 424, 425, 1558,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 1559, 1298, 513, 434, 712, 713, 1560, 714,
	1561, 435, 436, 1300, 715, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	1562, 447, 449, 448, 1563, 450, 716, 1303, 451, 452,
	1304, 1564, 453, 454, 455, 456, 457, 458, 461, 1565,
	1566, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1567, 297, 1307, 507, 508, 509, 510, 1568,
	717, 511, 718, 514, 515, 1569, 0, 516, 0, 517,
	1570, 1571, 519, 520, 521, 1572, 1573, 522, 523, 719,
	1308, 524, 1309, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 1574, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 1575, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 1576, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 1577, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1578, 606, 607, 605, 608, 609, 610, 1579,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1580, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1581, 641, 642,
	0, 637, 628, 1582, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1583, 651, 730, 731, 732, 733, 1584,
	662, 1585, 652, 654, 655, 656, 734, 657, 735, 1586,
	658, 659, 660, 661, 653, 663, 664, 1587, 1588, 665,
	666, 668, 670, 671, 667, 669, 672, 1589, 673, 1590,
	0, 674, 675, 676, 736, 737, 738, 1591, 678, 677,
	679, 680, 681, 739, 682, 683, 1592, 1593, 1594, 1595,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4550, 298, 299, 301, 300, 302, 303, 304, 305, 1517,
	306, 307, 1518, 1519, 1520, 0, 1521, 689, 1522, 1523,
	1524, 308, 1525, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	1526, 694, 320, 321, 322, 323, 324, 325, 1527, 1528,
	0, 326, 695, 696, 697, 1529, 327, 328, 698, 1530,
	1597, 1531, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 1532, 338, 339, 340, 337, 341, 1533, 342, 0,
	343, 344, 345, 346, 347, 348, 1534, 349, 350, 351,
	1296, 352, 353, 354, 1535, 1536, 1538, 1537, 1539, 1540,
	1541, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 1542, 365, 361, 363, 1543, 366, 364, 367, 1544,
	368, 369, 370, 1545, 1546, 371, 372, 373, 1547, 374,
	375, 376, 1548, 377, 378, 379, 1549, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 1550, 295, 1551, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 1552,
	398, 399, 400, 1553, 401, 402, 1554, 1297, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 1555, 415, 707, 1556, 708, 416, 1557, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	1299, 424, 425, 1558, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 1559, 1298, 513, 434,
	712, 713, 1560, 714, 1561, 435, 436, 1300, 715, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 1562, 447, 449, 448, 1563, 450,
	716, 1303, 451, 452, 1304, 1564, 453, 454, 455, 456,
	457, 458, 461, 1565, 1566, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1567, 297, 1307, 507,
	508, 509, 510, 1568, 717, 511, 718, 514, 515, 1569,
	0, 516, 0, 517, 1570, 1571, 519, 520, 521, 1572,
	1573, 522, 523, 719, 1308, 524, 1309, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	1574, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 1575, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 1576, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	1577, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 1578, 606, 607, 605,
	608, 609, 610, 1579, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 1580, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 1581, 641, 642, 0, 637, 628, 1582, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 1583, 651, 730,
	731, 732, 733, 1584, 662, 1585, 652, 654, 655, 656,
	734, 657, 735, 1586, 658, 659, 660, 661, 653, 663,
	664, 1587, 1588, 665, 666, 668, 670, 671, 667, 669,
	672, 1589, 673, 1590, 0, 674, 675, 676, 736, 737,
	738, 1591, 678, 677, 679, 680, 681, 739, 682, 683,
	1592, 1593, 1594, 1595, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4371, 298, 299, 301, 300, 302,
	303, 304, 305, 1517, 306, 307, 1518, 1519, 1520, 0,
	1521, 689, 1522, 1523, 1524, 308, 1525, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 1526, 694, 320, 321, 322, 323,
	324, 325, 1527, 1528, 0, 326, 695, 696, 697, 1529,
	327, 328, 698, 1530, 1597, 1531, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 1532, 338, 339, 340, 337,
	341, 1533, 342, 0, 343, 344, 345, 346, 347, 348,
	1534, 349, 350, 351, 1296, 352, 353, 354, 1535, 1536,
	1538, 1537, 1539, 1540, 1541, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 1542, 365, 361, 363, 1543,
	366, 364, 367, 1544, 368, 369, 370, 1545, 1546, 371,
	372, 373, 1547, 374, 375, 376, 1548, 377, 378, 379,
	1549, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 1550, 295,
	1551, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 1552, 398, 399, 400, 1553, 401, 402,
	1554, 1297, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 1555, 415, 707, 1556,
	708, 416, 1557, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 1299, 424, 425, 1558, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	1559, 1298, 513, 434, 712, 713, 1560, 714, 1561, 435,
	436, 1300, 715, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 1562, 447,
	449, 448, 1563, 450, 716, 1303, 451, 452, 1304, 1564,
	453, 454, 455, 456, 457, 458, 461, 1565, 1566, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1567, 297, 1307, 507, 508, 509, 510, 1568, 717, 511,
	718, 514, 515, 1569, 0, 516, 0, 517, 1570, 1571,
	519, 520, 521, 1572, 1573, 522, 523, 719, 1308, 524,
	1309, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 1574, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	1575, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 1576,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 1577, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	1578, 606, 607, 605, 608, 609, 610, 1579, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 1580, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 1581, 641, 642, 0, 637,
	628, 1582, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 1583, 651, 730, 731, 732, 733, 1584, 662, 1585,
	652, 654, 655, 656, 734, 657, 735, 1586, 658, 659,
	660, 661, 653, 663, 664, 1587, 1588, 665, 666, 668,
	670, 671, 667, 669, 672, 1589, 673, 1590, 0, 674,
	675, 676, 736, 737, 738, 1591, 678, 677, 679, 680,
	681, 739, 682, 683, 1592, 1593, 1594, 1595, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4026, 298,
	299, 301, 300, 302, 303, 304, 305, 1517, 306, 307,
	1518, 1519, 1520, 0, 1521, 689, 1522, 1523, 1524, 308,
	1525, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 1526, 694,
	320, 321, 322, 323, 324, 325, 1527, 1528, 0, 326,
	695, 696, 697, 1529, 327, 328, 698, 1530, 1597, 1531,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 1532,
	338, 339, 340, 337, 341, 1533, 342, 0, 343, 344,
	345, 346, 347, 348, 1534, 349, 350, 351, 1296, 352,
	353, 354, 1535, 1536, 1538, 1537, 1539, 1540, 1541, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 1542,
	365, 361, 363, 1543, 366, 364, 367, 1544, 368, 369,
	370, 1545, 1546, 371, 372, 373, 1547, 374, 375, 376,
	1548, 377, 378, 379, 1549, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 1550, 295, 1551, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 1552, 398, 399,
	400, 1553, 401, 402, 1554, 1297, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	1555, 415, 707, 1556, 708, 416, 1557, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 1299, 424,
	425, 1558, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 1559, 1298, 513, 434, 712, 713,
	1560, 714, 1561, 435, 436, 1300, 715, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 1562, 447, 449, 448, 1563, 450, 716, 1303,
	451, 452, 1304, 1564, 453, 454, 455, 456, 457, 458,
	461, 1565, 1566, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 1567, 297, 1307, 507, 508, 509,
	510, 1568, 717, 511, 718, 514, 515, 1569, 0, 516,
	0, 517, 1570, 1571, 519, 520, 521, 1572, 1573, 522,
	523, 719, 1308, 524, 1309, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 1574, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 1575, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 1576, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 1577, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1578, 606, 607, 605, 608, 609,
	610, 1579, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1580,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1581,
	641, 642, 0, 637, 628, 1582, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1583, 651, 730, 731, 732,
	733, 1584, 662, 1585, 652, 654, 655, 656, 734, 657,
	735, 1586, 658, 659, 660, 661, 653, 663, 664, 1587,
	1588, 665, 666, 668, 670, 671, 667, 669, 672, 1589,
	673, 1590, 0, 674, 675, 676, 736, 737, 738, 1591,
	678, 677, 679, 680, 681, 739, 682, 683, 1592, 1593,
	1594, 1595, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3837, 298, 299, 301, 300, 302, 303, 304,
	305, 1517, 306, 307, 1518, 1519, 1520, 0, 1521, 689,
	1522, 1523, 1524, 308, 1525, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 1526, 694, 320, 321, 322, 323, 324, 325,
	1527, 1528, 0, 326, 695, 696, 697, 1529, 327, 328,
	698, 1530, 1597, 1531, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 1532, 338, 339, 340, 337, 341, 1533,
	342, 0, 343, 344, 345, 346, 347, 348, 1534, 349,
	350, 351, 1296, 352, 353, 354, 1535, 1536, 1538, 1537,
	1539, 1540, 1541, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 1542, 365, 361, 363, 1543, 366, 364,
	367, 1544, 368, 369, 370, 1545, 1546, 371, 372, 373,
	1547, 374, 375, 376, 1548, 377, 378, 379, 1549, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 1550, 295, 1551, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 1552, 398, 399, 400, 1553, 401, 402, 1554, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 1555, 415, 707, 1556, 708, 416,
	1557, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 1299, 424, 425, 1558, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 1559, 1298,
	513, 434, 712, 713, 1560, 714, 1561, 435, 436, 1300,
	715, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 1562, 447, 449, 448,
	1563, 450, 716, 1303, 451, 452, 1304, 1564, 453, 454,
	455, 456, 457, 458, 461, 1565, 1566, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1567, 297,
	1307, 507, 508, 509, 510, 1568, 717, 511, 718, 514,
	515, 1569, 0, 516, 0, 517, 1570, 1571, 519, 520,
	521, 1572, 1573, 522, 523, 719, 1308, 524, 1309, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 1574, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 1575, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 1576, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 1577, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1578, 606,
	607, 605, 608, 609, 610, 1579, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1580, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1581, 641, 642, 0, 637, 628, 1582,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1583,
	651, 730, 731, 732, 733, 1584, 662, 1585, 652, 654,
	655, 656, 734, 657, 735, 1586, 658, 659, 660, 661,
	653, 663, 664, 1587, 1588, 665, 666, 668, 670, 671,
	667, 669, 672, 1589, 673, 1590, 0, 674, 675, 676,
	736, 737, 738, 1591, 678, 677, 679, 680, 681, 739,
	682, 683, 1592, 1593, 1594, 1595, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2817, 298, 299, 301,
	300, 302, 303, 304, 305, 1517, 306, 307, 1518, 1519,
	1520, 0, 1521, 689, 1522, 1523, 1524, 308, 1525, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 1526, 694, 320, 321,
	322, 323, 324, 325, 1527, 1528, 0, 326, 695, 696,
	697, 1529, 327, 328, 698, 1530, 1597, 1531, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 1532, 338, 339,
	340, 337, 341, 1533, 342, 0, 343, 344, 345, 346,
	347, 348, 1534, 349, 350, 351, 1296, 352, 353, 354,
	1535, 1536, 1538, 1537, 1539, 1540, 1541, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 1542, 365, 361,
	363, 1543, 366, 364, 367, 1544, 368, 369, 370, 1545,
	1546, 371, 372, 373, 1547, 374, 375, 376, 1548, 377,
	378, 379, 1549, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	1550, 295, 1551, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 1552, 398, 399, 400, 1553,
	401, 402, 1554, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 1555, 415,
	707, 1556, 708, 416, 1557, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 1299, 424, 425, 1558,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 1559, 1298, 513, 434, 712, 713, 1560, 714,
	1561, 435, 436, 1300, 715, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	1562, 447, 449, 448, 1563, 450, 716, 1303, 451, 452,
	1304, 1564, 453, 454, 455, 456, 457, 458, 461, 1565,
	1566, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1567, 297, 1307, 507, 508, 509, 510, 1568,
	717, 511, 718, 514, 515, 1569, 0, 516, 0, 517,
	1570, 1571, 519, 520, 521, 1572, 1573, 522, 523, 719,
	1308, 524, 1309, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 1574, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 1575, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 1576, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 1577, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1578, 606, 607, 605, 608, 609, 610, 1579,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1580, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1581, 641, 642,
	0, 637, 628, 1582, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1583, 651, 730, 731, 732, 733, 1584,
	662, 1585, 652, 654, 655, 656, 734, 657, 735, 1586,
	658, 659, 660, 661, 653, 663, 664, 1587, 1588, 665,
	666, 668, 670, 671, 667, 669, 672, 1589, 673, 1590,
	0, 674, 675, 676, 736, 737, 738, 1591, 678, 677,
	679, 680, 681, 739, 682, 683, 1592, 1593, 1594, 1595,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 1508, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2434, 298, 299, 301, 300, 302, 303, 304, 305, 1517,
	306, 307, 1518, 1519, 1520, 0, 1521, 689, 1522, 1523,
	1524, 308, 1525, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	1526, 694, 320, 321, 322, 323, 324, 325, 1527, 1528,
	0, 326, 695, 696, 697, 1529, 327, 328, 698, 1530,
	1597, 1531, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 1532, 338, 339, 340, 337, 341, 1533, 342, 0,
	343, 344, 345, 346, 347, 348, 1534, 349, 350, 351,
	1296, 352, 353, 354, 1535, 1536, 1538, 1537, 1539, 1540,
	1541, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 1542, 365, 361, 363, 1543, 366, 364, 367, 1544,
	368, 369, 370, 1545, 1546, 371, 372, 373, 1547, 374,
	375, 376, 1548, 377, 378, 379, 1549, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 1550, 295, 1551, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 1552,
	398, 399, 400, 1553, 401, 402, 1554, 1297, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 1555, 415, 707, 1556, 708, 416, 1557, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	1299, 424, 425, 1558, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 1559, 1298, 513, 434,
	712, 713, 1560, 714, 1561, 435, 436, 1300, 715, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 1562, 447, 449, 448, 1563, 450,
	716, 1303, 451, 452, 1304, 1564, 453, 454, 455, 456,
	457, 458, 461, 1565, 1566, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1567, 297, 1307, 507,
	508, 509, 510, 1568, 717, 511, 718, 514, 515, 1569,
	0, 516, 0, 517, 1570, 1571, 519, 520, 521, 1572,
	1573, 522, 523, 719, 1308, 524, 1309, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	1574, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 1575, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 1576, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	1577, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 1578, 606, 607, 605,
	608, 609, 610, 1579, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 1580, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 1581, 641, 642, 0, 637, 628, 1582, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 1583, 651, 730,
	731, 732, 733, 1584, 662, 1585, 652, 654, 655, 656,
	734, 657, 735, 1586, 658, 659, 660, 661, 653, 663,
	664, 1587, 1588, 665, 666, 668, 670, 671, 667, 669,
	672, 1589, 673, 1590, 0, 674, 675, 676, 736, 737,
	738, 1591, 678, 677, 679, 680, 681, 739, 682, 683,
	1592, 1593, 1594, 1595, 684, 685, 740, 686, 687, 688,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 1517, 306, 307, 1518, 1519,
	1520, 0, 1521, 689, 1522, 1523, 1524, 308, 1525, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 1526, 694, 320, 321,
	322, 323, 324, 325, 1527, 1528, 0, 326, 695, 696,
	697, 1529, 327, 328, 698, 1530, 1597, 1531, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 1532, 338, 339,
	340, 337, 341, 1533, 342, 0, 343, 344, 345, 346,
	347, 348, 1534, 349, 350, 351, 1296, 352, 353, 354,
	1535, 1536, 1538, 1537, 1539, 1540, 1541, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 1542, 365, 361,
	363, 1543, 366, 364, 367, 1544, 368, 369, 370, 1545,
	1546, 371, 372, 373, 1547, 374, 375, 376, 1548, 377,
	378, 379, 1549, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	1550, 295, 1551, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 1552, 398, 399, 400, 1553,
	401, 402, 1554, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 1555, 415,
	707, 1556, 708, 416, 1557, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 1299, 424, 425, 1558,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 1559, 1298, 513, 434, 712, 713, 1560, 714,
	1561, 435, 436, 1300, 715, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	1562, 447, 449, 448, 1563, 450, 716, 1303, 451, 452,
	1304, 1564, 453, 454, 455, 456, 457, 458, 461, 1565,
	1566, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1567, 297, 1307, 507, 508, 509, 510, 1568,
	717, 511, 718, 514, 515, 1569, 0, 516, 0, 517,
	1570, 1571, 519, 520, 521, 1572, 1573, 522, 523, 719,
	1308, 524, 1309, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 1574, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 1575, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 1576, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 1577, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1578, 606, 607, 605, 608, 609, 610, 1579,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1580, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1581, 641, 642,
	0, 637, 628, 1582, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1583, 651, 730, 731, 732, 733, 1584,
	662, 1585, 652, 654, 655, 656, 734, 657, 735, 1586,
	658, 659, 660, 661, 653, 663, 664, 1587, 1588, 665,
	666, 668, 670, 671, 667, 669, 672, 1589, 673, 1590,
	0, 674, 675, 676, 736, 737, 738, 1591, 678, 677,
	679, 680, 681, 739, 682, 683, 1592, 1593, 1594, 1595,
	684, 685, 740, 686, 687, 688, 2792, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 2789, 306, 307, 0, 0, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 1191, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 2790, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 1197, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1188, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 1198, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 2788, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 2791, 0,
	0, 0, 0, 0, 0, 0, 1215, 2787, 0, 1173,
	1213, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	301, 300, 302, 303, 304, 305, 0, 306, 307, 0,
	0, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 253, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 255, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 1756, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	247, 684, 685, 740, 686, 687, 688, 1189, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 2026,
	2024, 0, 0, 1213, 0, 0, 0, 0, 298, 299,
	301, 300, 302, 303, 304, 305, 0, 306, 307, 0,
	0, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 253, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 255, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 1756, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	247, 684, 685, 740, 686, 687, 688, 1189, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 2026,
	3459, 0, 0, 1213, 0, 0, 0, 0, 298, 299,
	301, 300, 302, 303, 304, 305, 0, 306, 307, 0,
	0, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 253, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 255, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 1756, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	247, 684, 685, 740, 686, 687, 688, 1189, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 2026,
	2024, 0, 0, 1213, 0, 0, 0, 0, 298, 299,
	301, 300, 302, 303, 304, 305, 0, 306, 307, 0,
	0, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 2922, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 2927, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 2923, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 2924, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 736, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1189, 0, 0,
	0, 0, 2837, 0, 1231, 1203, 1204, 1205, 1201, 1202,
	1214, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 298, 299, 301, 300, 302, 303, 304, 305, 1215,
	306, 307, 0, 1213, 0, 0, 0, 1255, 1219, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 1268, 0, 318, 1275, 319, 1274,
	0, 1285, 320, 321, 322, 323, 324, 325, 1221, 1254,
	1186, 326, 1315, 1316, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 1278, 360, 362, 1272,
	1271, 1191, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 1263, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 1197,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 1210, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 1270, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 1283, 1284, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 1220, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1188, 297, 1307, 507,
	508, 509, 510, 1211, 1259, 511, 1273, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	1198, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 1269,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 2835, 0, 2834, 1213, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 301, 300, 302, 303,
	304, 305, 0, 306, 307, 0, 0, 0, 0, 0,
	1255, 1219, 0, 0, 308, 0, 309, 310, 1295, 311,
	312, 313, 314, 315, 316, 317, 690, 1268, 0, 318,
	1275, 319, 1274, 0, 1285, 320, 321, 322, 323, 324,
	325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327,
	328, 1261, 0, 1242, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 0, 0, 338, 339, 340, 337, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 1296, 352, 353, 354, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 355, 356, 357, 358, 359, 1278,
	360, 362, 1272, 1271, 1191, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 1263,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 1197, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 1286, 1287, 393, 1210, 295, 0,
	0, 0, 0, 0, 394, 395, 396, 1270, 0, 0,
	0, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	1297, 403, 404, 405, 1283, 1284, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 1293, 0, 1220,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1256,
	1257, 1260, 512, 1299, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 296, 431, 432, 433, 0,
	1298, 513, 434, 1265, 1266, 0, 1226, 0, 435, 436,
	1300, 1258, 1301, 437, 438, 439, 1302, 440, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 0, 447, 449,
	448, 0, 450, 1294, 1303, 451, 452, 1304, 0, 453,
	454, 455, 456, 457, 458, 461, 1249, 1248, 459, 460,
	462, 463, 0, 464, 465, 467, 470, 466, 468, 469,
	471, 484, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 1305, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 1306, 505, 493, 1188,
	297, 1307, 507, 508, 509, 510, 1211, 1259, 511, 1273,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 719, 1308, 524, 1309,
	1288, 525, 526, 1198, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 721, 538, 539, 540,
	722, 541, 542, 543, 1289, 544, 724, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 1269, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 1199, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1252, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 1267, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1314, 631, 632, 633, 634,
	1290, 638, 639, 640, 0, 641, 642, 1185, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1279, 1280, 1281, 1282, 0, 662, 0, 652,
	654, 655, 656, 1291, 657, 1292, 1209, 658, 659, 660,
	661, 653, 663, 664, 0, 1192, 665, 666, 668, 670,
	671, 667, 669, 672, 1253, 673, 0, 0, 674, 675,
	676, 736, 1276, 1313, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1184, 0,
	0, 0, 0, 0, 0, 1182, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 2832, 0, 2831, 1213,
	1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 1255, 1219, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	1268, 0, 318, 1275, 319, 1274, 0, 1285, 320, 321,
	322, 323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316,
	697, 0, 327, 328, 1261, 0, 1242, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357,
	358, 359, 1278, 360, 362, 1272, 1271, 1191, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 1263, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 1197, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 1286, 1287, 393,
	1210, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	1270, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 1283, 1284, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	1293, 0, 1220, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1256, 1257, 1260, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 1298, 513, 434, 1265, 1266, 0, 1226,
	0, 435, 436, 1300, 1258, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 1294, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 1249,
	1248, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1188, 297, 1307, 507, 508, 509, 510, 1211,
	1259, 511, 1273, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 1288, 525, 526, 1198, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 1289, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 1269, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 2829,
	0, 2828, 1213, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 301, 300, 302, 303, 304, 305, 0, 306,
	307, 0, 0, 0, 0, 0, 1255, 1219, 0, 0,
	308, 0, 309, 310, 1295, 311, 312, 313, 314, 315,
	316, 317, 690, 1268, 0, 318, 1275, 319, 1274, 0,
	1285, 320, 321, 322, 323, 324, 325, 1221, 1254, 1186,
	326, 1315, 1316, 697, 0, 327, 328, 1261, 0, 1242,
	0, 329, 330, 331, 332, 333, 334, 335, 336, 0,
	0, 338, 339, 340, 337, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 0, 349, 350, 351, 1296,
	352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	355, 356, 357, 358, 359, 1278, 360, 362, 1272, 1271,
	1191, 365, 361, 363, 0, 366, 364, 367, 0, 368,
	369, 370, 0, 0, 371, 1263, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 1197, 382,
	383, 384, 386, 388, 385, 387, 389, 390, 391, 392,
	1286, 1287, 393, 1210, 295, 0, 0, 0, 0, 0,
	394, 395, 396, 1270, 0, 0, 0, 397, 0, 398,
	399, 400, 0, 401, 402, 0, 1297, 403, 404, 405,
	1283, 1284, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 0, 415, 1293, 0, 1220, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1256, 1257, 1260, 512, 1299,
	424, 425, 0, 426, 427, 428, 429, 430, 0, 0,
	0, 296, 431, 432, 433, 0, 1298, 513, 434, 1265,
	1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301, 437,
	438, 439, 1302, 440, 0, 0, 0, 441, 442, 443,
	444, 445, 446, 0, 447, 449, 448, 0, 450, 1294,
	1303, 451, 452, 1304, 0, 453, 454, 455, 456, 457,
	458, 461, 1249, 1248, 459, 460, 462, 463, 0, 464,
	465, 467, 470, 466, 468, 469, 471, 484, 485, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 487, 0, 486, 1305, 488, 489, 490, 491, 492,
	499, 501, 502, 497, 498, 500, 503, 504, 506, 494,
	495, 496, 1306, 505, 493, 1188, 297, 1307, 507, 508,
	509, 510, 1211, 1259, 511, 1273, 514, 515, 0, 0,
	516, 0, 517, 0, 0, 519, 520, 521, 0, 0,
	522, 523, 719, 1308, 524, 1309, 1288, 525, 526, 1198,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	536, 537, 721, 538, 539, 540, 722, 541, 542, 543,
	1289, 544, 724, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 1269, 558,
	559, 561, 560, 562, 0, 563, 0, 564, 565, 566,
	0, 0, 0, 0, 0, 567, 568, 570, 0, 571,
	572, 573, 574, 569, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 1199,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1252, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 1267, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1314, 631, 632, 633, 634, 1290, 638, 639, 640,
	0, 641, 642, 1185, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1279, 1280,
	1281, 1282, 0, 662, 0, 652, 654, 655, 656, 1291,
	657, 1292, 1209, 658, 659, 660, 661, 653, 663, 664,
	0, 1192, 665, 666, 668, 670, 671, 667, 669, 672,
	1253, 673, 0, 0, 674, 675, 676, 736, 1276, 1313,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1184, 0, 0, 0, 0, 0,
	0, 1182, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 2826, 0, 1858, 1213, 1231, 1203, 1204, 1205,
	1201, 1202, 1214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 1255,
	1219, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 1268, 0, 318, 1275,
	319, 1274, 0, 1285, 320, 321, 322, 323, 324, 325,
	1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327, 328,
	1261, 0, 1242, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251,
	1247, 1246, 1250, 355, 356, 357, 358, 359, 1278, 360,
	362, 1272, 1271, 1191, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 1263, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 1197, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 1286, 1287, 393, 1210, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 1270, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 1283, 1284, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 1293, 0, 1220, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1256, 1257,
	1260, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 1298,
	513, 434, 1265, 1266, 0, 1226, 0, 435, 436, 1300,
	1258, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 1294, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 1249, 1248, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1188, 297,
	1307, 507, 508, 509, 510, 1211, 1259, 511, 1273, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 1288,
	525, 526, 1198, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 1289, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 1269, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1857, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 1178, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 298, 299, 301, 300,
	302, 303, 304, 305, 1215, 306, 307, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 308, 0, 309, 310,
	1295, 311, 312, 313, 314, 315, 316, 317, 690, 1268,
	0, 318, 1275, 319, 1274, 0, 1285, 320, 321, 322,
	323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697,
	0, 327, 328, 1261, 0, 1242, 0, 329, 330, 331,
	332, 333, 334, 335, 336, 0, 0, 338, 339, 340,
	337, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 0, 349, 350, 351, 1296, 352, 353, 354, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358,
	359, 1278, 360, 362, 1272, 1271, 1191, 365, 361, 363,
	0, 366, 364, 367, 0, 368, 369, 370, 0, 0,
	371, 1263, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 1197, 382, 383, 384, 386, 388,
	385, 387, 389, 390, 391, 392, 1286, 1287, 393, 1210,
	295, 0, 0, 0, 0, 0, 394, 395, 396, 1270,
	0, 0, 0, 397, 0, 398, 399, 400, 0, 401,
	402, 0, 1297, 403, 404, 405, 1283, 1284, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 0, 415, 1293,
	0, 1220, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1256, 1257, 1260, 512, 1299, 424, 425, 0, 426,
	427, 428, 429, 430, 0, 0, 0, 296, 431, 432,
	433, 0, 1298, 513, 434, 1265, 1266, 0, 1226, 0,
	435, 436, 1300, 1258, 1301, 437, 438, 439, 1302, 440,
	0, 0, 0, 441, 442, 443, 444, 445, 446, 0,
	447, 449, 448, 0, 450, 1294, 1303, 451, 452, 1304,
	0, 453, 454, 455, 456, 457, 458, 461, 1249, 1248,
	459, 460, 462, 463, 0, 464, 465, 467, 470, 466,
	468, 469, 471, 484, 485, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 487, 0, 486,
	1305, 488, 489, 490, 491, 492, 499, 501, 502, 497,
	498, 500, 503, 504, 506, 494, 495, 496, 1306, 505,
	493, 1188, 297, 1307, 507, 508, 509, 510, 1211, 1259,
	511, 1273, 514, 515, 0, 0, 516, 0, 517, 1193,
	0, 519, 520, 521, 0, 0, 522, 523, 719, 1308,
	524, 1309, 1288, 525, 526, 1198, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 536, 537, 721, 538,
	539, 540, 722, 541, 542, 543, 1289, 544, 724, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 556, 557, 1269, 558, 559, 561, 560, 562,
	0, 563, 0, 564, 565, 566, 0, 0, 0, 0,
	0, 567, 568, 570, 0, 571, 572, 573, 574, 569,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 1199, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 1267, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1314, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 1185,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1279, 1280, 1281, 1282, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 1209, 658,
	659, 660, 661, 653, 663, 664, 0, 1192, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 1276, 1313, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1189, 0, 0, 0, 0,
	0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0,
	1184, 0, 0, 0, 0, 0, 0, 1182, 1183, 298,
	299, 301, 300, 302, 303, 304, 305, 1215, 306, 307,
	0, 1213, 0, 0, 0, 1255, 1219, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 1268, 0, 318, 1275, 319, 1274, 0, 1285,
	320, 321, 322, 323, 324, 325, 1221, 1254, 1186, 326,
	1315, 1316, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 5065, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 1278, 360, 362, 1272, 1271, 1191,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 1263, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 1197, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 1286,
	1287, 393, 1210, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 1270, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 1283,
	1284, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 1220, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 1265, 1266,
	0, 1226, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 1188, 297, 1307, 507, 508, 509,
	510, 1211, 1259, 511, 1273, 514, 515, 0, 0, 516,
	0, 517, 1193, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 1198, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 1269, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 298, 299, 301, 300, 302, 303, 304, 305,
	1215, 306, 307, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 690, 1268, 0, 318, 1275, 319,
	1274, 0, 1285, 320, 321, 322, 323, 324, 325, 1221,
	1254, 1186, 326, 1315, 1316, 697, 0, 327, 328, 1261,
	0, 1242, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 355, 356, 357, 358, 359, 1278, 360, 362,
	1272, 1271, 1191, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 1263, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	1197, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 1286, 1287, 393, 1210, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 1270, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 1283, 1284, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 1293, 0, 1220, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1256, 1257, 1260,
	512, 1299, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 2667, 431, 432, 433, 0, 1298, 513,
	434, 1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258,
	1301, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 1294, 1303, 451, 452, 1304, 0, 453, 454, 455,
	456, 457, 458, 461, 1249, 1248, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 1188, 297, 1307,
	507, 508, 509, 510, 1211, 1259, 511, 1273, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 1288, 525,
	526, 1198, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 1289, 544, 724, 545, 546, 2666, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	1269, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	663, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	1276, 1313, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1189, 0, 0, 0, 0, 0, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0,
	0, 0, 0, 1182, 1183, 298, 299, 301, 300, 302,
	303, 304, 305, 1215, 306, 307, 0, 1213, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 4785, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 1191, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 1197, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1188, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 1193, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 1198, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 298, 299,
	301, 300, 302, 303, 304, 305, 1215, 306, 307, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 1193, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 736, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1189, 0, 0,
	0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201, 1202,
	1214, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 298, 299, 301, 300, 302, 303, 304, 305, 1215,
	306, 307, 0, 1213, 0, 0, 0, 1255, 1219, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 1268, 0, 318, 1275, 319, 1274,
	0, 1285, 320, 321, 322, 323, 324, 325, 1221, 1254,
	1186, 326, 1315, 1316, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 1278, 360, 362, 1272,
	1271, 1191, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 1263, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 1197,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 1210, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 1270, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 1283, 1284, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 1220, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1188, 4335, 1307, 507,
	508, 509, 510, 1211, 1259, 511, 1273, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	1198, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 1269,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 2096, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 1215, 0, 0, 0, 1213, 0, 0, 0,
	0, 0, 298, 299, 301, 300, 302, 303, 304, 305,
	0, 306, 307, 0, 0, 0, 0, 0, 1255, 1219,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 690, 1268, 0, 318, 1275, 319,
	1274, 0, 1285, 320, 321, 322, 323, 324, 325, 1221,
	1254, 1186, 326, 1315, 1316, 697, 0, 327, 328, 1261,
	0, 1242, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 355, 356, 357, 358, 359, 1278, 360, 362,
	1272, 1271, 1191, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 1263, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	1197, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 1286, 1287, 393, 1210, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 1270, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 1283, 1284, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 1293, 0, 1220, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1256, 1257, 1260,
	512, 1299, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 296, 431, 432, 433, 0, 1298, 513,
	434, 1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258,
	1301, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 1294, 1303, 451, 452, 1304, 0, 453, 454, 455,
	456, 457, 458, 461, 1249, 1248, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 1188, 297, 1307,
	507, 508, 509, 510, 1211, 1259, 511, 1273, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 1288, 525,
	526, 1198, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 1289, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	1269, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	663, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	1276, 1313, 4004, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1189, 0, 0, 0, 0, 0, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0,
	0, 0, 0, 1182, 1183, 298, 299, 301, 300, 302,
	303, 304, 305, 1215, 306, 307, 0, 1213, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 1191, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 1197, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1188, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 1198, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 2096, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 1215, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 298, 299, 301, 300,
	302, 303, 304, 305, 0, 306, 307, 0, 0, 0,
	0, 0, 1255, 1219, 0, 0, 308, 0, 309, 310,
	1295, 311, 312, 313, 314, 315, 316, 317, 690, 1268,
	0, 318, 1275, 319, 1274, 0, 1285, 320, 321, 322,
	323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697,
	0, 327, 328, 1261, 0, 1242, 0, 329, 330, 331,
	332, 333, 334, 335, 336, 0, 0, 338, 339, 340,
	337, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 0, 349, 350, 351, 1296, 352, 353, 354, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358,
	359, 1278, 360, 362, 1272, 1271, 1191, 365, 361, 363,
	0, 366, 364, 367, 0, 368, 369, 370, 0, 0,
	371, 1263, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 1197, 382, 383, 384, 386, 388,
	385, 387, 389, 390, 391, 392, 1286, 1287, 393, 1210,
	295, 0, 0, 0, 0, 0, 394, 395, 396, 1270,
	0, 0, 0, 397, 0, 398, 399, 400, 0, 401,
	402, 2927, 1297, 403, 404, 405, 1283, 1284, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 0, 415, 1293,
	0, 1220, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1256, 1257, 1260, 512, 1299, 424, 425, 0, 426,
	427, 428, 429, 430, 0, 0, 0, 296, 431, 432,
	433, 0, 1298, 513, 434, 1265, 1266, 0, 1226, 0,
	435, 436, 1300, 1258, 1301, 437, 438, 439, 1302, 440,
	0, 0, 0, 441, 442, 443, 444, 445, 446, 0,
	447, 449, 448, 0, 450, 1294, 1303, 451, 452, 1304,
	0, 453, 454, 455, 456, 457, 458, 461, 1249, 1248,
	459, 460, 462, 463, 0, 464, 465, 467, 470, 466,
	468, 469, 471, 484, 485, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 487, 0, 486,
	1305, 488, 489, 490, 491, 492, 499, 501, 502, 497,
	498, 500, 503, 504, 506, 494, 495, 496, 1306, 505,
	493, 1188, 297, 1307, 507, 508, 509, 510, 1211, 1259,
	511, 1273, 514, 515, 0, 0, 516, 0, 517, 0,
	0, 519, 520, 521, 0, 0, 522, 523, 719, 1308,
	524, 1309, 1288, 525, 526, 1198, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 536, 537, 721, 538,
	539, 540, 722, 541, 542, 543, 1289, 544, 724, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 556, 557, 1269, 558, 559, 561, 560, 562,
	0, 563, 0, 564, 565, 566, 0, 0, 0, 0,
	0, 567, 568, 570, 0, 571, 572, 573, 574, 569,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 1199, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 1267, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1314, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 1185,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1279, 1280, 1281, 1282, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 1209, 658,
	659, 660, 661, 653, 663, 664, 0, 1192, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 1276, 1313, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1189, 0, 0, 0, 0,
	0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0,
	1184, 0, 0, 0, 0, 0, 0, 1182, 1183, 298,
	299, 301, 300, 302, 303, 304, 305, 1215, 306, 307,
	0, 1213, 0, 0, 0, 1255, 1219, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 1268, 0, 318, 1275, 319, 1274, 0, 1285,
	320, 321, 322, 323, 324, 325, 1221, 1254, 1186, 326,
	1315, 1316, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 1278, 360, 362, 1272, 1271, 1191,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 1263, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 1197, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 1286,
	1287, 393, 1210, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 1270, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 1283,
	1284, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 1220, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 1265, 1266,
	0, 1226, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 1188, 297, 1307, 507, 508, 509,
	510, 1211, 1259, 511, 1273, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 1198, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 1269, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 2024, 0, 2932, 1213, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 301, 300, 302, 303, 304, 305,
	0, 306, 307, 0, 0, 0, 0, 0, 1255, 1219,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 690, 1268, 0, 318, 1275, 319,
	1274, 0, 1285, 320, 321, 322, 323, 324, 325, 1221,
	1254, 1186, 326, 1315, 1316, 697, 0, 327, 328, 1261,
	0, 1242, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 355, 356, 357, 358, 359, 1278, 360, 362,
	1272, 1271, 1191, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 1263, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	1197, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 1286, 1287, 393, 1210, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 1270, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 1283, 1284, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 1293, 0, 1220, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1256, 1257, 1260,
	512, 1299, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 296, 431, 432, 433, 0, 1298, 513,
	434, 1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258,
	1301, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 1294, 1303, 451, 452, 1304, 0, 453, 454, 455,
	456, 457, 458, 461, 1249, 1248, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 1188, 297, 1307,
	507, 508, 509, 510, 1211, 1259, 511, 1273, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 1288, 525,
	526, 1198, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 1289, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	1269, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	663, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	1276, 1313, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1189, 0, 0, 0, 0, 2930, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0,
	0, 0, 0, 1182, 1183, 298, 299, 301, 300, 302,
	303, 304, 305, 1215, 306, 307, 0, 1213, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 1191, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 1197, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1188, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 1198, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 2918,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 298, 299,
	301, 300, 302, 303, 304, 305, 1215, 306, 307, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 736, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1189, 0, 0,
	0, 0, 2907, 0, 1231, 1203, 1204, 1205, 1201, 1202,
	1214, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 298, 299, 301, 300, 302, 303, 304, 305, 1215,
	306, 307, 0, 1213, 0, 0, 0, 1255, 1219, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 1268, 0, 318, 1275, 319, 1274,
	0, 1285, 320, 321, 322, 323, 324, 325, 1221, 1254,
	1186, 326, 1315, 1316, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 1278, 360, 362, 1272,
	1271, 1191, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 1263, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 1197,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 1210, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 1270, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 1283, 1284, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 1220, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1188, 297, 1307, 507,
	508, 509, 510, 1211, 1259, 511, 1273, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	1198, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 1269,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 2905, 0, 2896, 2903, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 298, 299, 301, 300, 302, 303,
	304, 305, 1215, 306, 307, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 308, 0, 309, 310, 1295, 311,
	312, 313, 314, 315, 316, 317, 690, 1268, 0, 318,
	1275, 319, 1274, 0, 1285, 320, 321, 322, 323, 324,
	325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327,
	328, 1261, 0, 1242, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 0, 0, 338, 339, 340, 337, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 1296, 352, 353, 354, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 355, 356, 357, 358, 359, 1278,
	2899, 362, 1272, 1271, 1191, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 1263,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 1197, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 1286, 1287, 393, 1210, 295, 0,
	0, 0, 0, 0, 394, 395, 396, 1270, 0, 0,
	0, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	1297, 403, 404, 405, 1283, 1284, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 1293, 0, 1220,
	416, 0, 417, 418, 419, 420, 421, 2900, 423, 1256,
	1257, 1260, 512, 1299, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 296, 431, 432, 433, 0,
	1298, 513, 434, 1265, 1266, 0, 1226, 0, 435, 436,
	1300, 1258, 1301, 437, 438, 439, 1302, 440, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 0, 447, 449,
	448, 0, 450, 1294, 1303, 451, 452, 1304, 0, 453,
	454, 455, 456, 457, 458, 461, 1249, 1248, 459, 460,
	462, 463, 0, 464, 465, 467, 470, 466, 468, 2901,
	471, 2898, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 1305, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 1306, 505, 493, 1188,
	297, 1307, 507, 508, 509, 510, 1211, 1259, 511, 1273,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 719, 1308, 524, 1309,
	1288, 525, 526, 1198, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 721, 538, 539, 540,
	722, 541, 542, 543, 1289, 544, 724, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 1269, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 1199, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 2902, 0,
	606, 607, 605, 608, 609, 610, 1252, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 1267, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1314, 631, 632, 633, 634,
	1290, 638, 639, 640, 0, 641, 642, 1185, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1279, 1280, 1281, 1282, 0, 662, 0, 652,
	654, 655, 656, 1291, 657, 1292, 1209, 658, 659, 660,
	661, 653, 663, 664, 0, 1192, 665, 666, 668, 670,
	671, 667, 669, 672, 1253, 673, 0, 0, 674, 675,
	676, 736, 1276, 1313, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 2897, 688, 1189, 0, 0, 0, 0, 2893, 0,
	2896, 2903, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0,
	0, 0, 0, 0, 0, 1182, 1183, 298, 299, 301,
	300, 302, 303, 304, 305, 1215, 306, 307, 0, 1213,
	0, 0, 0, 1255, 1219, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	1268, 0, 318, 1275, 319, 1274, 0, 1285, 320, 321,
	322, 323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316,
	697, 0, 327, 328, 1261, 0, 1242, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357,
	358, 359, 1278, 2899, 362, 1272, 1271, 1191, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 1263, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 1197, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 1286, 1287, 393,
	1210, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	1270, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 1283, 1284, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	1293, 0, 1220, 416, 0, 417, 418, 419, 420, 421,
	2900, 423, 1256, 1257, 1260, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 1298, 513, 434, 1265, 1266, 0, 1226,
	0, 435, 436, 1300, 1258, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 1294, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 1249,
	1248, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 2901, 471, 2898, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1188, 297, 1307, 507, 508, 509, 510, 1211,
	1259, 511, 1273, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 1288, 525, 526, 1198, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 1289, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 1269, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 2902, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 2897, 688, 1189, 0, 0, 0,
	0, 0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	298, 299, 301, 300, 302, 303, 304, 305, 1215, 306,
	307, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	308, 0, 309, 310, 1295, 311, 312, 313, 314, 315,
	316, 317, 690, 1268, 0, 318, 1275, 319, 1274, 0,
	1285, 320, 321, 322, 323, 324, 325, 1221, 1254, 1186,
	326, 1315, 1316, 697, 0, 327, 328, 1261, 0, 1242,
	0, 329, 330, 331, 332, 333, 334, 335, 336, 0,
	0, 338, 339, 340, 337, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 0, 349, 350, 351, 1296,
	352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	355, 356, 357, 358, 359, 1278, 360, 362, 1272, 1271,
	1191, 365, 361, 363, 0, 366, 364, 367, 0, 368,
	369, 370, 0, 0, 371, 1263, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 1197, 382,
	383, 384, 386, 388, 385, 387, 389, 390, 391, 392,
	1286, 1287, 393, 1210, 295, 0, 0, 0, 0, 0,
	394, 395, 396, 1270, 0, 0, 0, 397, 0, 398,
	399, 400, 0, 401, 402, 0, 1297, 403, 404, 405,
	1283, 1284, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 0, 415, 1293, 0, 1220, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1256, 1257, 1260, 512, 1299,
	424, 425, 0, 426, 427, 428, 429, 430, 0, 0,
	0, 296, 431, 432, 433, 0, 1298, 513, 434, 1265,
	1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301, 437,
	438, 439, 1302, 440, 0, 0, 0, 441, 442, 443,
	444, 445, 446, 0, 447, 449, 448, 0, 450, 1294,
	1303, 451, 452, 1304, 0, 453, 454, 455, 456, 457,
	458, 461, 1249, 1248, 459, 460, 462, 463, 0, 464,
	465, 467, 470, 466, 468, 469, 471, 484, 485, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 487, 0, 486, 1305, 488, 489, 490, 491, 492,
	499, 501, 502, 497, 498, 500, 503, 504, 506, 494,
	495, 496, 1306, 505, 493, 1188, 297, 1307, 507, 508,
	509, 510, 1211, 1259, 511, 1273, 514, 515, 0, 0,
	516, 0, 517, 0, 0, 519, 520, 521, 0, 0,
	522, 523, 719, 1308, 524, 1309, 1288, 525, 526, 1198,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	536, 537, 721, 538, 539, 540, 722, 541, 542, 543,
	1289, 544, 724, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 1269, 558,
	559, 561, 560, 562, 0, 563, 0, 564, 565, 566,
	0, 0, 0, 0, 0, 567, 568, 570, 0, 571,
	572, 573, 574, 569, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 1199,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1252, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 1267, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1314, 631, 632, 633, 634, 1290, 638, 639, 640,
	0, 641, 642, 1185, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1279, 1280,
	1281, 1282, 0, 662, 0, 652, 654, 655, 656, 1291,
	657, 1292, 1209, 658, 659, 660, 661, 653, 663, 664,
	0, 1192, 665, 666, 668, 670, 671, 667, 669, 672,
	1253, 673, 0, 0, 674, 675, 676, 736, 1276, 1313,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1184, 0, 0, 0, 0, 0,
	0, 1182, 1183, 0, 0, 0, 0, 0, 0, 2032,
	0, 1215, 0, 0, 0, 1213, 1231, 1203, 1204, 1205,
	1201, 1202, 1214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 2646, 306, 307, 0, 0, 0, 0, 0, 1255,
	1219, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 1268, 0, 318, 1275,
	319, 1274, 0, 1285, 320, 321, 322, 323, 324, 325,
	1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327, 328,
	1261, 0, 1242, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251,
	1247, 1246, 1250, 355, 356, 357, 358, 359, 1278, 360,
	362, 1272, 1271, 1191, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 1263, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 1197, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 1286, 1287, 393, 1210, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 1270, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 1283, 1284, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 1293, 0, 1220, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1256, 1257,
	1260, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 1298,
	513, 434, 1265, 1266, 0, 1226, 0, 435, 436, 1300,
	1258, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 1294, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 1249, 1248, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1188, 297,
	1307, 507, 508, 509, 510, 1211, 1259, 511, 1273, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 1288,
	525, 526, 1198, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 1289, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 1269, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 2607, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 298, 299, 301, 300,
	302, 303, 304, 305, 1215, 306, 307, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 308, 0, 309, 310,
	1295, 311, 312, 313, 314, 315, 316, 317, 690, 1268,
	0, 318, 1275, 319, 1274, 0, 1285, 320, 321, 322,
	323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697,
	0, 327, 328, 1261, 0, 1242, 0, 329, 330, 331,
	332, 333, 334, 335, 336, 0, 0, 338, 339, 340,
	337, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 0, 349, 350, 351, 1296, 352, 353, 354, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358,
	359, 1278, 360, 362, 1272, 1271, 1191, 365, 361, 363,
	0, 366, 364, 367, 0, 368, 369, 370, 0, 0,
	371, 1263, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 1197, 382, 383, 384, 386, 388,
	385, 387, 389, 390, 391, 392, 1286, 1287, 393, 1210,
	295, 0, 0, 0, 0, 0, 394, 395, 396, 1270,
	0, 0, 0, 397, 0, 398, 399, 400, 0, 401,
	402, 0, 1297, 403, 404, 405, 1283, 1284, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 0, 415, 1293,
	0, 1220, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1256, 1257, 1260, 512, 1299, 424, 425, 0, 426,
	427, 428, 429, 430, 0, 0, 0, 296, 431, 432,
	433, 0, 1298, 513, 434, 1265, 1266, 0, 1226, 0,
	435, 436, 1300, 1258, 1301, 437, 438, 439, 1302, 440,
	0, 0, 0, 441, 442, 443, 444, 445, 446, 0,
	447, 449, 448, 0, 450, 1294, 1303, 451, 452, 1304,
	0, 453, 454, 455, 456, 457, 458, 461, 1249, 1248,
	459, 460, 462, 463, 0, 464, 465, 467, 470, 466,
	468, 469, 471, 484, 485, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 487, 0, 486,
	1305, 488, 489, 490, 491, 492, 499, 501, 502, 497,
	498, 500, 503, 504, 506, 494, 495, 496, 1306, 505,
	493, 1188, 297, 1307, 507, 508, 509, 510, 1211, 1259,
	511, 1273, 514, 515, 0, 0, 516, 0, 517, 0,
	0, 519, 520, 521, 0, 0, 522, 523, 719, 1308,
	524, 1309, 1288, 525, 526, 1198, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 536, 537, 721, 538,
	539, 540, 722, 541, 542, 543, 1289, 544, 724, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 556, 557, 1269, 558, 559, 561, 560, 562,
	0, 563, 0, 564, 565, 566, 0, 0, 0, 0,
	0, 567, 568, 570, 0, 571, 572, 573, 574, 569,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 1199, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 1267, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1314, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 1185,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1279, 1280, 1281, 1282, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 1209, 658,
	659, 660, 661, 653, 663, 664, 0, 1192, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 1276, 1313, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1189, 0, 0, 0, 0,
	2578, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0,
	1184, 0, 0, 0, 0, 0, 0, 1182, 1183, 298,
	299, 301, 300, 302, 303, 304, 305, 1215, 306, 307,
	0, 1213, 0, 0, 0, 1255, 1219, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 1268, 0, 318, 1275, 319, 1274, 0, 1285,
	320, 321, 322, 323, 324, 325, 1221, 1254, 1186, 326,
	1315, 1316, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 1278, 360, 362, 1272, 1271, 1191,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 1263, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 1197, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 1286,
	1287, 393, 1210, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 1270, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 1283,
	1284, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 1220, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 1265, 1266,
	0, 1226, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 1188, 297, 1307, 507, 508, 509,
	510, 1211, 1259, 511, 1273, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 1198, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 1269, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 1863, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 298, 299, 301, 300, 302, 303, 304, 305,
	1215, 306, 307, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 690, 1268, 0, 318, 1275, 319,
	1274, 0, 1285, 320, 321, 322, 323, 324, 325, 1221,
	1254, 1186, 326, 1315, 1316, 697, 0, 327, 328, 1261,
	0, 1242, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 355, 356, 357, 358, 359, 1278, 360, 362,
	1272, 1271, 1191, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 1263, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	1197, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 1286, 1287, 393, 1210, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 1270, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 1283, 1284, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 1293, 0, 1220, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1256, 1257, 1260,
	512, 1299, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 296, 431, 432, 433, 0, 1298, 513,
	434, 1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258,
	1301, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 1294, 1303, 451, 452, 1304, 0, 453, 454, 455,
	456, 457, 458, 461, 1249, 1248, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 1188, 297, 1307,
	507, 508, 509, 510, 1211, 1259, 511, 1273, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 1288, 525,
	526, 1198, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 1289, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	1269, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	663, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	1276, 1313, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1189, 0, 0, 0, 0, 1791, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0,
	0, 0, 0, 1182, 1183, 298, 299, 301, 300, 302,
	303, 304, 305, 1215, 306, 307, 0, 1213, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 1191, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 1197, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1188, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 1198, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 1786,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 298, 299,
	301, 300, 302, 303, 304, 305, 1215, 306, 307, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 663, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 736, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1189, 0, 0,
	0, 0, 1772, 0, 1231, 1203, 1204, 1205, 1201, 1202,
	1214, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 298, 299, 301, 300, 302, 303, 304, 305, 1215,
	306, 307, 0, 1213, 0, 0, 0, 1255, 1219, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 1268, 0, 318, 1275, 319, 1274,
	0, 1285, 320, 321, 322, 323, 324, 325, 1221, 1254,
	1186, 326, 1315, 1316, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 1278, 360, 362, 1272,
	1271, 1191, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 1263, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 1197,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 1210, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 1270, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 1283, 1284, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 1220, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1188, 297, 1307, 507,
	508, 509, 510, 1211, 1259, 511, 1273, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	1198, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 1269,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 663,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 1767, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 298, 299, 301, 300, 302, 303,
	304, 305, 1215, 306, 307, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 308, 0, 309, 310, 1295, 311,
	312, 313, 314, 315, 316, 317, 690, 1268, 0, 318,
	1275, 319, 1274, 0, 1285, 320, 321, 322, 323, 324,
	325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327,
	328, 1261, 0, 1242, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 0, 0, 338, 339, 340, 337, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 1296, 352, 353, 354, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 355, 356, 357, 358, 359, 1278,
	360, 362, 1272, 1271, 1191, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 1263,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 1197, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 1286, 1287, 393, 1210, 295, 0,
	0, 0, 0, 0, 394, 395, 396, 1270, 0, 0,
	0, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	1297, 403, 404, 405, 1283, 1284, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 1293, 0, 1220,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1256,
	1257, 1260, 512, 1299, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 296, 431, 432, 433, 0,
	1298, 513, 434, 1265, 1266, 0, 1226, 0, 435, 436,
	1300, 1258, 1301, 437, 438, 439, 1302, 440, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 0, 447, 449,
	448, 0, 450, 1294, 1303, 451, 452, 1304, 0, 453,
	454, 455, 456, 457, 458, 461, 1249, 1248, 459, 460,
	462, 463, 0, 464, 465, 467, 470, 466, 468, 469,
	471, 484, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 1305, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 1306, 505, 493, 1188,
	297, 1307, 507, 508, 509, 510, 1211, 1259, 511, 1273,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 719, 1308, 524, 1309,
	1288, 525, 526, 1198, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 721, 538, 539, 540,
	722, 541, 542, 543, 1289, 544, 724, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 1269, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 1199, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1252, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 1267, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1314, 631, 632, 633, 634,
	1290, 638, 639, 640, 0, 641, 642, 1185, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1279, 1280, 1281, 1282, 0, 662, 0, 652,
	654, 655, 656, 1291, 657, 1292, 1209, 658, 659, 660,
	661, 653, 663, 664, 0, 1192, 665, 666, 668, 670,
	671, 667, 669, 672, 1253, 673, 0, 0, 674, 675,
	676, 736, 1276, 1313, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1189, 0, 0, 0, 0, 1676, 0,
	1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0,
	0, 0, 0, 0, 0, 1182, 1183, 298, 299, 301,
	300, 302, 303, 304, 305, 1215, 306, 307, 0, 1213,
	0, 0, 0, 1255, 1219, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	1268, 0, 318, 1275, 319, 1274, 0, 1285, 320, 321,
	322, 323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316,
	697, 0, 327, 328, 1261, 0, 1242, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357,
	358, 359, 1278, 360, 362, 1272, 1271, 1191, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 1263, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 1197, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 1286, 1287, 393,
	1210, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	1270, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 1283, 1284, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	1293, 0, 1220, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1675, 1257, 1260, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 1298, 513, 434, 1265, 1266, 0, 1226,
	0, 435, 436, 1300, 1258, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 1294, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 1249,
	1248, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1188, 297, 1307, 507, 508, 509, 510, 1211,
	1259, 511, 1273, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 1288, 525, 526, 1198, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 1289, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 1269, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 1670, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	298, 299, 301, 300, 302, 303, 304, 305, 1215, 306,
	307, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	308, 0, 309, 310, 1295, 311, 312, 313, 314, 315,
	316, 317, 690, 1268, 0, 318, 1275, 319, 1274, 0,
	1285, 320, 321, 322, 323, 324, 325, 1221, 1254, 1186,
	326, 1315, 1316, 697, 0, 327, 328, 1261, 0, 1242,
	0, 329, 330, 331, 332, 333, 334, 335, 336, 0,
	0, 338, 339, 340, 337, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 0, 349, 350, 351, 1296,
	352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	355, 356, 357, 358, 359, 1278, 360, 362, 1272, 1271,
	1191, 365, 361, 363, 0, 366, 364, 367, 0, 368,
	369, 370, 0, 0, 371, 1263, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 1197, 382,
	383, 384, 386, 388, 385, 387, 389, 390, 391, 392,
	1286, 1287, 393, 1210, 295, 0, 0, 0, 0, 0,
	394, 395, 396, 1270, 0, 0, 0, 397, 0, 398,
	399, 400, 0, 401, 402, 0, 1297, 403, 404, 405,
	1283, 1284, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 0, 415, 1293, 0, 1220, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1669, 1257, 1260, 512, 1299,
	424, 425, 0, 426, 427, 428, 429, 430, 0, 0,
	0, 296, 431, 432, 433, 0, 1298, 513, 434, 1265,
	1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301, 437,
	438, 439, 1302, 440, 0, 0, 0, 441, 442, 443,
	444, 445, 446, 0, 447, 449, 448, 0, 450, 1294,
	1303, 451, 452, 1304, 0, 453, 454, 455, 456, 457,
	458, 461, 1249, 1248, 459, 460, 462, 463, 0, 464,
	465, 467, 470, 466, 468, 469, 471, 484, 485, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 487, 0, 486, 1305, 488, 489, 490, 491, 492,
	499, 501, 502, 497, 498, 500, 503, 504, 506, 494,
	495, 496, 1306, 505, 493, 1188, 297, 1307, 507, 508,
	509, 510, 1211, 1259, 511, 1273, 514, 515, 0, 0,
	516, 0, 517, 0, 0, 519, 520, 521, 0, 0,
	522, 523, 719, 1308, 524, 1309, 1288, 525, 526, 1198,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	536, 537, 721, 538, 539, 540, 722, 541, 542, 543,
	1289, 544, 724, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 1269, 558,
	559, 561, 560, 562, 0, 563, 0, 564, 565, 566,
	0, 0, 0, 0, 0, 567, 568, 570, 0, 571,
	572, 573, 574, 569, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 1199,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1252, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 1267, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1314, 631, 632, 633, 634, 1290, 638, 639, 640,
	0, 641, 642, 1185, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1279, 1280,
	1281, 1282, 0, 662, 0, 652, 654, 655, 656, 1291,
	657, 1292, 1209, 658, 659, 660, 661, 653, 663, 664,
	0, 1192, 665, 666, 668, 670, 671, 667, 669, 672,
	1253, 673, 0, 0, 674, 675, 676, 736, 1276, 1313,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1189,
	0, 0, 0, 0, 1663, 0, 1231, 1203, 1204, 1205,
	1201, 1202, 1214, 0, 1184, 0, 0, 0, 0, 0,
	0, 1182, 1183, 298, 299, 301, 300, 302, 303, 304,
	305, 1215, 306, 307, 0, 1213, 0, 0, 0, 1255,
	1219, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 1268, 0, 318, 1275,
	319, 1274, 0, 1285, 320, 321, 322, 323, 324, 325,
	1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327, 328,
	1261, 0, 1242, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251,
	1247, 1246, 1250, 355, 356, 357, 358, 359, 1278, 360,
	362, 1272, 1271, 1191, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 1263, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 1197, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 1286, 1287, 393, 1210, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 1270, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 1283, 1284, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 1293, 0, 1220, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1256, 1257,
	1260, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 1298,
	513, 434, 1265, 1266, 0, 1226, 0, 435, 436, 1300,
	1258, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 1294, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 1249, 1248, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1188, 297,
	1307, 507, 508, 509, 510, 1211, 1259, 511, 1273, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 1288,
	525, 526, 1198, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 1289, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 1269, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 1626, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 1182, 1183, 298, 299, 301, 300,
	302, 303, 304, 305, 1215, 306, 307, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 308, 0, 309, 310,
	1295, 311, 312, 313, 314, 315, 316, 317, 690, 1268,
	0, 318, 1275, 319, 1274, 0, 1285, 320, 321, 322,
	323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697,
	0, 327, 328, 1261, 0, 1242, 0, 329, 330, 331,
	332, 333, 334, 335, 336, 0, 0, 338, 339, 340,
	337, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 0, 349, 350, 351, 1296, 352, 353, 354, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358,
	359, 1278, 360, 362, 1272, 1271, 1191, 365, 361, 363,
	0, 366, 364, 367, 0, 368, 369, 370, 0, 0,
	371, 1263, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 1197, 382, 383, 384, 386, 388,
	385, 387, 389, 390, 391, 392, 1286, 1287, 393, 1210,
	295, 0, 0, 0, 0, 0, 394, 395, 396, 1270,
	0, 0, 0, 397, 0, 398, 399, 400, 0, 401,
	402, 0, 1297, 403, 404, 405, 1283, 1284, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 0, 415, 1293,
	0, 1220, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1256, 1257, 1260, 512, 1299, 424, 425, 0, 426,
	427, 428, 429, 430, 0, 0, 0, 296, 431, 432,
	433, 0, 1298, 513, 434, 1265, 1266, 0, 1226, 0,
	435, 436, 1300, 1258, 1301, 437, 438, 439, 1302, 440,
	0, 0, 0, 441, 442, 443, 444, 445, 446, 0,
	447, 449, 448, 0, 450, 1294, 1303, 451, 452, 1304,
	0, 453, 454, 455, 456, 457, 458, 461, 1249, 1248,
	459, 460, 462, 463, 0, 464, 465, 467, 470, 466,
	468, 469, 471, 484, 485, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 487, 0, 486,
	1305, 488, 489, 490, 491, 492, 499, 501, 502, 497,
	498, 500, 503, 504, 506, 494, 495, 496, 1306, 505,
	493, 1188, 297, 1307, 507, 508, 509, 510, 1211, 1259,
	511, 1273, 514, 515, 0, 0, 516, 0, 517, 0,
	0, 519, 520, 521, 0, 0, 522, 523, 719, 1308,
	524, 1309, 1288, 525, 526, 1198, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 536, 537, 721, 538,
	539, 540, 722, 541, 542, 543, 1289, 544, 724, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 556, 557, 1269, 558, 559, 561, 560, 562,
	0, 563, 0, 564, 565, 566, 0, 0, 0, 0,
	0, 567, 568, 570, 0, 571, 572, 573, 574, 569,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 1199, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 1267, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1314, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 1185,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1279, 1280, 1281, 1282, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 1209, 658,
	659, 660, 661, 653, 663, 664, 0, 1192, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 1276, 1313, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1189, 0, 0, 0, 0,
	1608, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0,
	1184, 0, 0, 0, 0, 0, 0, 1182, 1183, 298,
	299, 301, 300, 302, 303, 304, 305, 1215, 306, 307,
	0, 1213, 0, 0, 0, 1255, 1219, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 1268, 0, 318, 1275, 319, 1274, 0, 1285,
	320, 321, 322, 323, 324, 325, 1221, 1254, 1186, 326,
	1315, 1316, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 1278, 360, 362, 1272, 1271, 1191,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 1263, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 1197, 382, 383,
	384, 386, 388, 385, 1612, 389, 390, 391, 392, 1286,
	1287, 393, 1210, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 1270, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 1283,
	1284, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 1220, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 1265, 1266,
	0, 1226, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 1188, 297, 1307, 507, 508, 509,
	510, 1211, 1259, 511, 1273, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 1198, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 1269, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 1613, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 1199, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 1185, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 1611, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	1192, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1189, 0,
	0, 0, 0, 1440, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 1184, 0, 0, 0, 0, 0, 0,
	1182, 1183, 298, 299, 301, 300, 302, 303, 304, 305,
	1215, 306, 307, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 690, 1268, 0, 318, 1275, 319,
	1274, 0, 1285, 320, 321, 322, 323, 324, 325, 1221,
	1254, 1186, 326, 1315, 1316, 697, 0, 327, 328, 1261,
	0, 1242, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 355, 356, 357, 358, 359, 1278, 360, 362,
	1272, 1271, 1191, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 1263, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	1197, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 1286, 1287, 393, 1210, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 1270, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 1283, 1284, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 1293, 0, 1220, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1256, 1257, 1260,
	512, 1299, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 296, 431, 432, 433, 0, 1298, 513,
	434, 1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258,
	1301, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 1294, 1303, 451, 452, 1304, 0, 453, 454, 455,
	456, 457, 458, 461, 1249, 1248, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 1188, 297, 1307,
	507, 508, 509, 510, 1211, 1259, 511, 1273, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 1288, 525,
	526, 1198, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 1289, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	1269, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	663, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	1276, 1313, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1189, 0, 0, 0, 0, 0, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0,
	0, 0, 0, 1182, 1183, 298, 299, 301, 300, 302,
	303, 304, 305, 1215, 306, 307, 0, 1213, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 1191, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 1197, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	1188, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 1198, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 1185, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 1192, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1189, 0, 0, 0, 0, 0,
	0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0, 1184,
	0, 0, 0, 0, 0, 0, 1182, 1183, 298, 299,
	301, 300, 302, 303, 304, 305, 1215, 306, 307, 0,
	1213, 0, 0, 0, 1255, 1219, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 1268, 0, 318, 1275, 319, 1274, 0, 1285, 320,
	321, 322, 323, 324, 325, 1221, 1254, 1186, 326, 1315,
	1316, 697, 0, 327, 328, 1261, 0, 1242, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	5114, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356,
	357, 358, 359, 1278, 360, 362, 1272, 1271, 1191, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 1263, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 1197, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 1286, 1287,
	393, 1210, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 1270, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 1283, 1284,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 1293, 0, 1220, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1256, 1257, 1260, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 296,
	431, 432, 433, 0, 1298, 513, 434, 1265, 1266, 0,
	1226, 0, 435, 436, 1300, 1258, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 1294, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	1249, 1248, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 1188, 297, 1307, 507, 508, 509, 510,
	1211, 1259, 511, 1273, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 1288, 525, 526, 1198, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 1289, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 1269, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 1199, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1252, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 1267, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1314,
	631, 632, 633, 634, 1290, 638, 639, 640, 0, 641,
	642, 1185, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1279, 1280, 1281, 1282,
	0, 662, 0, 652, 654, 655, 656, 1291, 657, 1292,
	1209, 658, 659, 660, 661, 653, 5113, 664, 0, 1192,
	665, 666, 668, 670, 671, 667, 669, 672, 1253, 673,
	0, 0, 674, 675, 676, 736, 1276, 1313, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1189, 0, 0,
	0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201, 1202,
	1214, 0, 1184, 0, 0, 0, 0, 0, 0, 1182,
	1183, 298, 299, 301, 300, 302, 303, 304, 305, 1215,
	306, 307, 0, 1213, 0, 0, 0, 1255, 1219, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 5112, 1268, 0, 318, 1275, 319, 1274,
	0, 1285, 320, 321, 322, 323, 324, 325, 1221, 1254,
	1186, 326, 1315, 1316, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 5114, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 1278, 360, 362, 1272,
	1271, 1191, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 1263, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 1197,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 1210, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 1270, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 1283, 1284, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 1220, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	1265, 1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 1188, 297, 1307, 507,
	508, 509, 510, 1211, 1259, 511, 1273, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	1198, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 1269,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	1199, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 1267, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1314, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 1185, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1279,
	1280, 1281, 1282, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 1209, 658, 659, 660, 661, 653, 5113,
	664, 0, 1192, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 1276,
	1313, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1189, 0, 0, 0, 0, 0, 0, 1231, 1203, 1204,
	1205, 1201, 1202, 1214, 0, 1184, 0, 0, 0, 0,
	0, 0, 1182, 1183, 298, 299, 301, 300, 302, 303,
	304, 305, 1215, 306, 307, 0, 1213, 0, 0, 0,
	1255, 1219, 0, 0, 308, 0, 309, 310, 1295, 311,
	312, 313, 314, 315, 316, 317, 690, 1268, 0, 318,
	1275, 319, 1274, 0, 1285, 320, 321, 322, 323, 324,
	325, 1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327,
	328, 1261, 0, 1242, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 0, 0, 338, 339, 340, 337, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 1296, 352, 4709, 354, 1245, 1243, 1244,
	1251, 1247, 1246, 1250, 355, 356, 357, 358, 359, 1278,
	360, 362, 1272, 1271, 1191, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 1263,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 1197, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 1286, 1287, 393, 1210, 295, 0,
	0, 0, 0, 0, 394, 395, 396, 1270, 0, 0,
	0, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	1297, 403, 404, 405, 1283, 1284, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 1293, 0, 4710,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1256,
	1257, 1260, 512, 1299, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 296, 431, 432, 433, 0,
	1298, 513, 434, 1265, 1266, 0, 1226, 0, 435, 436,
	1300, 1258, 1301, 437, 438, 439, 1302, 440, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 0, 447, 449,
	448, 0, 450, 1294, 1303, 451, 452, 1304, 0, 453,
	454, 455, 456, 457, 458, 461, 1249, 1248, 459, 460,
	462, 463, 0, 464, 465, 467, 470, 466, 468, 469,
	471, 484, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 1305, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 1306, 505, 493, 1188,
	297, 1307, 507, 508, 509, 510, 1211, 1259, 511, 1273,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 719, 1308, 524, 1309,
	1288, 525, 526, 1198, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 721, 538, 539, 540,
	722, 541, 542, 543, 1289, 544, 724, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 1269, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 4708, 587, 1199, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1252, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 1267, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1314, 631, 632, 633, 634,
	1290, 638, 639, 640, 0, 641, 642, 1185, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1279, 1280, 1281, 1282, 0, 662, 0, 652,
	654, 655, 656, 1291, 657, 1292, 1209, 658, 659, 660,
	661, 653, 663, 664, 0, 1192, 665, 666, 668, 670,
	671, 667, 669, 672, 1253, 673, 0, 0, 674, 675,
	676, 736, 1276, 1313, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1189, 0, 0, 0, 0, 0, 0,
	1231, 1203, 1204, 1205, 3425, 3426, 1214, 0, 1184, 0,
	0, 0, 0, 0, 0, 1182, 1183, 298, 299, 301,
	300, 302, 303, 304, 305, 1215, 306, 307, 0, 1213,
	0, 0, 0, 1255, 1219, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	1268, 0, 318, 1275, 319, 1274, 0, 1285, 320, 321,
	322, 323, 324, 325, 1221, 1254, 1186, 326, 1315, 1316,
	697, 0, 327, 328, 1261, 0, 1242, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357,
	358, 359, 1278, 360, 362, 1272, 1271, 1191, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 1263, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 1197, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 1286, 1287, 393,
	1210, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	1270, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 1283, 1284, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	1293, 0, 1220, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1256, 1257, 1260, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 1298, 513, 434, 1265, 1266, 0, 1226,
	0, 435, 436, 1300, 1258, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 1294, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 1249,
	1248, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 1188, 297, 1307, 507, 508, 509, 510, 1211,
	1259, 511, 1273, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 1288, 525, 526, 1198, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 1289, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 1269, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 1199, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 1267, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 1314, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	1185, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 1279, 1280, 1281, 1282, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 1209,
	658, 659, 660, 661, 653, 663, 664, 0, 1192, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 1276, 1313, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1189, 0, 0, 0,
	0, 0, 0, 1231, 1203, 1204, 1205, 3423, 3424, 1214,
	0, 1184, 0, 0, 0, 0, 0, 0, 1182, 1183,
	298, 299, 301, 300, 302, 303, 304, 305, 1215, 306,
	307, 0, 1213, 0, 0, 0, 1255, 1219, 0, 0,
	308, 0, 309, 310, 1295, 311, 312, 313, 314, 315,
	316, 317, 690, 1268, 0, 318, 1275, 319, 1274, 0,
	1285, 320, 321, 322, 323, 324, 325, 1221, 1254, 1186,
	326, 1315, 1316, 697, 0, 327, 328, 1261, 0, 1242,
	0, 329, 330, 331, 332, 333, 334, 335, 336, 0,
	0, 338, 339, 340, 337, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 0, 349, 350, 351, 1296,
	352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250,
	355, 356, 357, 358, 359, 1278, 360, 362, 1272, 1271,
	1191, 365, 361, 363, 0, 366, 364, 367, 0, 368,
	369, 370, 0, 0, 371, 1263, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 1197, 382,
	383, 384, 386, 388, 385, 387, 389, 390, 391, 392,
	1286, 1287, 393, 1210, 295, 0, 0, 0, 0, 0,
	394, 395, 396, 1270, 0, 0, 0, 397, 0, 398,
	399, 400, 0, 401, 402, 0, 1297, 403, 404, 405,
	1283, 1284, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 0, 415, 1293, 0, 1220, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1256, 1257, 1260, 512, 1299,
	424, 425, 0, 426, 427, 428, 429, 430, 0, 0,
	0, 296, 431, 432, 433, 0, 1298, 513, 434, 1265,
	1266, 0, 1226, 0, 435, 436, 1300, 1258, 1301, 437,
	438, 439, 1302, 440, 0, 0, 0, 441, 442, 443,
	444, 445, 446, 0, 447, 449, 448, 0, 450, 1294,
	1303, 451, 452, 1304, 0, 453, 454, 455, 456, 457,
	458, 461, 1249, 1248, 459, 460, 462, 463, 0, 464,
	465, 467, 470, 466, 468, 469, 471, 484, 485, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 487, 0, 486, 1305, 488, 489, 490, 491, 492,
	499, 501, 502, 497, 498, 500, 503, 504, 506, 494,
	495, 496, 1306, 505, 493, 1188, 297, 1307, 507, 508,
	509, 510, 1211, 1259, 511, 1273, 514, 515, 0, 0,
	516, 0, 517, 0, 0, 519, 520, 521, 0, 0,
	522, 523, 719, 1308, 524, 1309, 1288, 525, 526, 1198,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	536, 537, 721, 538, 539, 540, 722, 541, 542, 543,
	1289, 544, 724, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 1269, 558,
	559, 561, 560, 562, 0, 563, 0, 564, 565, 566,
	0, 0, 0, 0, 0, 567, 568, 570, 0, 571,
	572, 573, 574, 569, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 1199,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1252, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 1267, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1314, 631, 632, 633, 634, 1290, 638, 639, 640,
	0, 641, 642, 1185, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1279, 1280,
	1281, 1282, 0, 662, 0, 652, 654, 655, 656, 1291,
	657, 1292, 1209, 658, 659, 660, 661, 653, 663, 664,
	0, 1192, 665, 666, 668, 670, 671, 667, 669, 672,
	1253, 673, 0, 0, 674, 675, 676, 736, 1276, 1313,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1189,
	0, 0, 0, 0, 0, 0, 1231, 1203, 1204, 1205,
	1201, 1202, 1214, 0, 1184, 0, 0, 0, 0, 0,
	0, 1182, 1183, 298, 299, 301, 300, 302, 303, 304,
	305, 1215, 306, 307, 0, 1213, 0, 0, 0, 1255,
	1219, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 1268, 0, 318, 1275,
	319, 1274, 0, 1285, 320, 321, 322, 323, 324, 325,
	1221, 1254, 1186, 326, 1315, 1316, 697, 0, 327, 328,
	1261, 0, 1242, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251,
	1247, 1246, 1250, 355, 356, 357, 358, 359, 1278, 360,
	362, 1272, 1271, 1191, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 1263, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 1197, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 1286, 1287, 393, 1210, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 1270, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 1283, 1284, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 1293, 0, 1220, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1256, 1257,
	1260, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 1298,
	513, 434, 1265, 1266, 0, 1226, 0, 435, 436, 1300,
	1258, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 1294, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 1249, 1248, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 1188, 297,
	1307, 507, 508, 509, 510, 1211, 1259, 511, 1273, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 1288,
	525, 526, 1198, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 1289, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 1269, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 1199, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	1267, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1314, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 1185, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1279, 1280, 1281, 1282, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 1209, 658, 659, 660, 661,
	653, 663, 664, 0, 1192, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	736, 1276, 1313, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1189, 0, 0, 0, 0, 0, 0, 1231,
	1203, 1204, 1205, 1201, 1202, 1214, 0, 1184, 0, 0,
	0, 0, 0, 0, 2654, 2655, 298, 299, 301, 300,
	302, 303, 304, 305, 1215, 306, 307, 0, 1213, 0,
	0, 0, 1255, 1219, 0, 0, 308, 0, 309, 310,
	1295, 311, 312, 313, 314, 315, 316, 317, 690, 1268,
	0, 318, 1275, 319, 1274, 0, 1285, 320, 321, 322,
	323, 324, 325, 1221, 1254, 0, 326, 1315, 1316, 697,
	0, 327, 328, 1261, 0, 1242, 0, 329, 330, 331,
	332, 333, 334, 335, 336, 0, 0, 338, 339, 340,
	337, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 0, 349, 350, 351, 1296, 352, 353, 354, 1245,
	1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358,
	359, 1278, 360, 362, 1272, 1271, 0, 365, 361, 363,
	0, 366, 364, 367, 0, 368, 369, 370, 0, 0,
	371, 1263, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 1197, 382, 383, 384, 386, 388,
	385, 387, 389, 390, 391, 392, 1286, 1287, 393, 1210,
	295, 0, 0, 0, 0, 0, 394, 395, 396, 1270,
	0, 0, 0, 397, 0, 398, 399, 400, 0, 401,
	402, 0, 1297, 403, 404, 405, 1283, 1284, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 0, 415, 1293,
	0, 1220, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1256, 1257, 1260, 512, 1299, 424, 425, 0, 426,
	427, 428, 429, 430, 0, 0, 0, 296, 431, 432,
	433, 0, 1298, 513, 434, 1265, 1266, 0, 1226, 0,
	435, 436, 1300, 1258, 1301, 437, 438, 439, 1302, 440,
	0, 0, 0, 441, 442, 443, 444, 445, 446, 0,
	447, 449, 448, 0, 450, 1294, 1303, 451, 452, 1304,
	0, 453, 454, 455, 456, 457, 458, 461, 1249, 1248,
	459, 460, 462, 463, 0, 464, 465, 467, 470, 466,
	468, 469, 471, 484, 485, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 487, 0, 486,
	1305, 488, 489, 490, 491, 492, 499, 501, 502, 497,
	498, 500, 503, 504, 506, 494, 495, 496, 1306, 505,
	493, 0, 297, 1307, 507, 508, 509, 510, 1211, 1259,
	511, 1273, 514, 515, 0, 0, 516, 0, 517, 0,
	0, 519, 520, 521, 0, 0, 522, 523, 719, 1308,
	524, 1309, 1288, 525, 526, 1198, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 536, 537, 721, 538,
	539, 540, 722, 541, 542, 543, 1289, 544, 724, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 556, 557, 1269, 558, 559, 561, 560, 562,
	0, 563, 0, 564, 565, 566, 0, 0, 0, 0,
	0, 567, 568, 570, 0, 571, 572, 573, 574, 569,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 1199, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1252, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 1267, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1314, 631, 632,
	633, 634, 1290, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1279, 1280, 1281, 1282, 0, 662,
	0, 652, 654, 655, 656, 1291, 657, 1292, 1209, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1253, 673, 0, 0,
	674, 675, 676, 736, 1276, 1313, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 1231, 1203, 1204, 1205, 1201, 1202, 1214, 0,
	2915, 0, 0, 0, 0, 0, 0, 2913, 2914, 298,
	299, 301, 300, 302, 303, 304, 305, 1215, 306, 307,
	0, 1213, 0, 0, 0, 1255, 1219, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 1268, 0, 318, 1275, 319, 1274, 0, 1285,
	320, 321, 322, 323, 324, 325, 1221, 1254, 0, 326,
	1315, 1316, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 1278, 360, 362, 1272, 1271, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 1263, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 1197, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 1286,
	1287, 393, 1210, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 1270, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 1283,
	1284, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 1220, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 1265, 1266,
	0, 1226, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 0, 297, 1307, 507, 508, 509,
	510, 1211, 1259, 511, 1273, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 1269, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 3418, 3419,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 1267, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1314, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1279, 1280, 1281,
	1282, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 1209, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 1276, 1313, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 1231, 1203, 1204, 1205, 1201,
	1202, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	2278, 2279, 298, 299, 301, 300, 302, 303, 304, 305,
	1215, 306, 307, 0, 1213, 0, 0, 0, 1255, 1219,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 0, 1268, 0, 318, 1275, 319,
	1274, 0, 1285, 320, 321, 322, 323, 324, 325, 1221,
	1254, 1186, 326, 1315, 1316, 697, 0, 327, 328, 1261,
	0, 1242, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 5114, 1245, 1243, 1244, 1251, 1247,
	1246, 1250, 355, 356, 357, 358, 359, 1278, 360, 362,
	1272, 1271, 1191, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 1263, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	1197, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 1286, 1287, 393, 1210, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 1270, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 1283, 1284, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 1293, 0, 1220, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1256, 1257, 1260,
	512, 0, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 296, 431, 432, 433, 0, 1298, 513,
	434, 1265, 1266, 0, 1226, 0, 435, 436, 0, 1258,
	0, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 1294, 1303, 451, 452, 0, 0, 453, 454, 455,
	456, 457, 458, 461, 1249, 1248, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 1188, 297, 0,
	507, 508, 509, 510, 1211, 1259, 511, 1273, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 1288, 525,
	526, 1198, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 1289, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	1269, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 1199, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1252, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 1267,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1314, 631, 632, 633, 634, 1290, 638,
	639, 640, 0, 641, 642, 1185, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1279, 1280, 1281, 1282, 0, 662, 0, 652, 654, 655,
	656, 1291, 657, 1292, 1209, 658, 659, 660, 661, 653,
	5113, 664, 0, 1192, 665, 666, 668, 670, 671, 667,
	669, 672, 1253, 673, 0, 0, 674, 675, 676, 736,
	1276, 1313, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 2934, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 1183, 298, 299, 301, 300, 302,
	303, 304, 305, 1215, 306, 307, 0, 1213, 0, 0,
	0, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 0, 1254, 0, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	0, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 1638, 0, 1231, 1203,
	1204, 1205, 1201, 1202, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 1215, 0, 0, 0,
	1213, 1255, 1219, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 1268, 0,
	318, 1275, 319, 1274, 0, 1285, 320, 321, 322, 323,
	324, 325, 0, 1254, 0, 326, 1315, 1316, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	1278, 360, 362, 1272, 1271, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	1263, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 1210, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 1270, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 1283, 1284, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	1220, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 1265, 1266, 0, 1226, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	0, 297, 1307, 507, 508, 509, 510, 1211, 1259, 511,
	1273, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 1269, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 1199, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 1267, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1314, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1279, 1280, 1281, 1282, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 1209, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 1276, 1313, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1173, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 1215, 0, 0, 1255,
	1213, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 1254, 0, 326, 695, 696, 697, 0, 327, 328,
	1261, 0, 1242, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 1245, 1243, 1244, 1251,
	1247, 1246, 1250, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 1286, 1287, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 1293, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1256, 1257,
	1260, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 1298,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 1300,
	1258, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 1340, 447, 449, 448,
	0, 450, 1294, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 1249, 1248, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 0, 297,
	1307, 507, 508, 509, 510, 0, 1259, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 1346, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 1288,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 1289, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 1348, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 253, 606,
	607, 605, 608, 609, 610, 1252, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 1290,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 255,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 1291, 657, 1292, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 1253, 673, 0, 0, 674, 675, 676,
	1756, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 247, 684, 685, 740, 686,
	687, 688, 1354, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 1344, 0, 2120, 1255, 0, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 1254, 0, 326,
	695, 696, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 1286,
	1287, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 1340, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 0, 297, 1307, 507, 508, 509,
	510, 0, 1259, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 1346, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 1348,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 253, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 255, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 1756, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 247, 684, 685, 740, 686, 687, 688, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3583, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	2120, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 1255, 0, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 1254,
	0, 326, 695, 696, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 1340, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 0, 297, 1307, 507,
	508, 509, 510, 0, 1259, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 1346, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 1348, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1336, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	1344, 0, 1342, 0, 0, 1255, 0, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 1254, 0, 326,
	695, 696, 697, 0, 327, 328, 1261, 0, 1242, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 1245, 1243, 1244, 1251, 1247, 1246, 1250, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 1286,
	1287, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 1293, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1256, 1257, 1260, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 1298, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 1300, 1258, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 1340, 447, 449, 448, 0, 450, 1294, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 1249, 1248, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 0, 297, 1307, 507, 508, 509,
	510, 0, 1259, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 1346, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 1288, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 1289,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 1348,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1252, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 1290, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 1291, 657,
	1292, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 1253,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 1344, 0,
	1342, 1255, 0, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 1254, 0, 326, 695, 696, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 1340, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	0, 297, 1307, 507, 508, 509, 510, 0, 1259, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 1346,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 1348, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 1344, 0, 1342, 1255, 0, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 1254,
	0, 326, 695, 696, 697, 0, 327, 328, 1261, 0,
	1242, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 1245, 1243, 1244, 1251, 1247, 1246,
	1250, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 1286, 1287, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 1293, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1256, 1257, 1260, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 1298, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 1300, 1258, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	1294, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 1249, 1248, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 0, 297, 1307, 507,
	508, 509, 510, 0, 1259, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 1288, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 1289, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1252, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 1290, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	1291, 657, 1292, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 1253, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 4520, 1255, 0, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 1254, 0, 326, 695, 696,
	697, 0, 327, 328, 1261, 0, 1242, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	1245, 1243, 1244, 1251, 1247, 1246, 1250, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 1286, 1287, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	1293, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1256, 1257, 1260, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 1298, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 1300, 1258, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 1294, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 1249,
	1248, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 0, 297, 1307, 507, 508, 509, 510, 0,
	1259, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 1288, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 1289, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 1348, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1252,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 1290, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 1291, 657, 1292, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1253, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 292, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 2760, 2761, 2762,
	2779, 2780, 2781, 0, 298, 299, 301, 300, 302, 303,
	304, 305, 0, 306, 307, 0, 0, 0, 2782, 0,
	689, 0, 0, 0, 308, 0, 309, 310, 2016, 311,
	312, 313, 314, 315, 316, 317, 690, 691, 0, 318,
	692, 319, 693, 0, 694, 320, 321, 322, 323, 324,
	325, 0, 0, 2001, 326, 695, 696, 697, 0, 327,
	328, 698, 0, 0, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 2772, 0, 338, 339, 340, 337, 341,
	0, 342, 2768, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 0, 0,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 0,
	360, 362, 699, 700, 0, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 701, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 702, 703, 393, 0, 0, 0,
	2773, 2774, 2775, 2776, 394, 395, 396, 704, 0, 0,
	2767, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	0, 403, 404, 405, 705, 706, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 707, 0, 708,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 709,
	710, 711, 512, 0, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 0, 431, 432, 433, 0,
	0, 513, 434, 712, 713, 0, 714, 0, 435, 436,
	0, 715, 0, 437, 438, 439, 0, 440, 0, 2777,
	2778, 441, 442, 443, 444, 445, 446, 0, 447, 449,
	448, 0, 450, 716, 0, 451, 452, 0, 0, 453,
	454, 455, 456, 457, 458, 461, 0, 0, 459, 460,
	462, 463, 2770, 464, 465, 467, 470, 466, 468, 469,
	471, 484, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 0, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 0, 505, 493, 0,
	0, 0, 507, 508, 509, 510, 0, 717, 511, 718,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 719, 0, 524, 0,
	720, 525, 526, 518, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 721, 538, 539, 540,
	722, 541, 542, 543, 723, 544, 724, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 725, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 2771, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 2000, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 1633, 2757, 2758, 2759, 2783, 2769,
	2763, 0, 2765, 2766, 2764, 2751, 2752, 2753, 2754, 2755,
	2756, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	1597, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 1298, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 1300, 715, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 0, 0, 1307, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 253, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 255, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 1756, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 247, 684, 685, 740, 686, 687, 688,
	0, 1753, 248, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 301, 300, 302, 303, 304, 305, 0, 306,
	307, 0, 203, 0, 0, 0, 689, 0, 0, 0,
	308, 0, 309, 310, 1295, 311, 312, 313, 314, 315,
	316, 317, 690, 691, 0, 318, 692, 319, 693, 0,
	694, 320, 321, 322, 323, 324, 325, 0, 0, 0,
	326, 695, 696, 697, 0, 327, 328, 698, 0, 1597,
	0, 329, 330, 331, 332, 333, 334, 335, 336, 0,
	0, 338, 339, 340, 337, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 0, 349, 350, 351, 1296,
	352, 353, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 358, 359, 0, 360, 362, 699, 700,
	0, 365, 361, 363, 0, 366, 364, 367, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 701, 382,
	383, 384, 386, 388, 385, 387, 389, 390, 391, 392,
	702, 703, 393, 0, 295, 0, 0, 0, 0, 0,
	394, 395, 396, 704, 0, 0, 0, 397, 0, 398,
	399, 400, 0, 401, 402, 0, 1297, 403, 404, 405,
	705, 706, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 0, 415, 707, 0, 708, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 709, 710, 711, 512, 1299,
	424, 425, 0, 426, 427, 428, 429, 430, 0, 0,
	0, 0, 431, 432, 433, 0, 1298, 513, 434, 712,
	713, 0, 714, 0, 435, 436, 1300, 715, 1301, 437,
	438, 439, 1302, 440, 0, 0, 0, 441, 442, 443,
	444, 445, 446, 0, 447, 449, 448, 0, 450, 716,
	1303, 451, 452, 1304, 0, 453, 454, 455, 456, 457,
	458, 461, 0, 0, 459, 460, 462, 463, 0, 464,
	465, 467, 470, 466, 468, 469, 471, 484, 485, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 487, 0, 486, 1305, 488, 489, 490, 491, 492,
	499, 501, 502, 497, 498, 500, 503, 504, 506, 494,
	495, 496, 1306, 505, 493, 0, 0, 1307, 507, 508,
	509, 510, 0, 717, 511, 718, 514, 515, 0, 0,
	516, 0, 517, 0, 0, 519, 520, 521, 0, 0,
	522, 523, 719, 1308, 524, 1309, 720, 525, 526, 518,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	536, 537, 721, 538, 539, 540, 722, 541, 542, 543,
	723, 544, 724, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 725, 558,
	559, 561, 560, 562, 0, 563, 0, 564, 565, 566,
	0, 0, 0, 0, 0, 567, 568, 570, 0, 571,
	572, 573, 574, 569, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 253, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 255, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 1756, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 247, 684, 685, 740, 686, 687, 688, 1633,
	1632, 248, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 301, 300,
	302, 303, 304, 305, 0, 306, 307, 0, 0, 0,
	0, 203, 689, 0, 0, 0, 308, 0, 309, 310,
	1295, 311, 312, 313, 314, 315, 316, 317, 690, 691,
	0, 318, 692, 319, 693, 0, 694, 320, 321, 322,
	323, 324, 325, 0, 0, 0, 326, 695, 696, 697,
	0, 327, 328, 698, 0, 1597, 0, 329, 330, 331,
	332, 333, 334, 335, 336, 0, 0, 338, 339, 340,
	337, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 0, 349, 350, 351, 1296, 352, 353, 354, 0,
	0, 0, 0, 0, 0, 0, 355, 356, 357, 358,
	359, 0, 360, 362, 699, 700, 0, 365, 361, 363,
	0, 366, 364, 367, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 701, 382, 383, 384, 386, 388,
	385, 387, 389, 390, 391, 392, 702, 703, 393, 0,
	295, 0, 0, 0, 0, 0, 394, 395, 396, 704,
	0, 0, 0, 397, 0, 398, 399, 400, 0, 401,
	402, 0, 1297, 403, 404, 405, 705, 706, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 0, 415, 707,
	0, 708, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 709, 710, 711, 512, 1299, 424, 425, 0, 426,
	427, 428, 429, 430, 0, 0, 0, 0, 431, 432,
	433, 0, 1298, 513, 434, 712, 713, 0, 714, 0,
	435, 436, 1300, 715, 1301, 437, 438, 439, 1302, 440,
	0, 0, 0, 441, 442, 443, 444, 445, 446, 0,
	447, 449, 448, 0, 450, 716, 1303, 451, 452, 1304,
	0, 453, 454, 455, 456, 457, 458, 461, 0, 0,
	459, 460, 462, 463, 0, 464, 465, 467, 470, 466,
	468, 469, 471, 484, 485, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 487, 0, 486,
	1305, 488, 489, 490, 491, 492, 499, 501, 502, 497,
	498, 500, 503, 504, 506, 494, 495, 496, 1306, 505,
	493, 0, 0, 1307, 507, 508, 509, 510, 0, 717,
	511, 718, 514, 515, 0, 0, 516, 0, 517, 0,
	0, 519, 520, 521, 0, 0, 522, 523, 719, 1308,
	524, 1309, 720, 525, 526, 518, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 0, 536, 537, 721, 538,
	539, 540, 722, 541, 542, 543, 723, 544, 724, 545,
	546, 0, 547, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 556, 557, 725, 558, 559, 561, 560, 562,
	0, 563, 0, 564, 565, 566, 0, 0, 0, 0,
	0, 567, 568, 570, 0, 571, 572, 573, 574, 569,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1310,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1311, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1633, 1632, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 301, 300, 302, 303, 304, 305,
	0, 306, 307, 0, 0, 0, 0, 1780, 689, 0,
	0, 0, 308, 0, 309, 310, 1295, 311, 312, 313,
	314, 315, 316, 317, 690, 691, 0, 318, 692, 319,
	693, 0, 694, 320, 321, 322, 323, 324, 325, 0,
	0, 0, 326, 695, 696, 697, 0, 327, 328, 698,
	0, 1597, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 1296, 352, 353, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 358, 359, 0, 360, 362,
	699, 700, 0, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	701, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 702, 703, 393, 0, 295, 0, 0, 0,
	0, 0, 394, 395, 396, 704, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 1297, 403,
	404, 405, 705, 706, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 707, 0, 708, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 709, 710, 711,
	512, 1299, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 0, 431, 432, 433, 0, 1298, 513,
	434, 712, 713, 0, 714, 0, 435, 436, 1300, 715,
	1301, 437, 438, 439, 1302, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 716, 1303, 451, 452, 1304, 0, 453, 454, 455,
	456, 457, 458, 461, 0, 0, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 1305, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 1306, 505, 493, 0, 0, 1307,
	507, 508, 509, 510, 0, 717, 511, 718, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 1308, 524, 1309, 720, 525,
	526, 518, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 723, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	725, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1310, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 1311, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1633, 1632, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	301, 300, 302, 303, 304, 305, 0, 306, 307, 0,
	0, 0, 0, 3915, 689, 0, 0, 0, 308, 0,
	309, 310, 1295, 311, 312, 313, 314, 315, 316, 317,
	690, 691, 0, 318, 692, 319, 693, 0, 694, 320,
	321, 322, 323, 324, 325, 0, 0, 0, 326, 695,
	696, 697, 0, 327, 328, 698, 0, 1597, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 1296, 352, 353,
	354, 0, 0, 0, 0, 0, 0, 0, 355, 356,
	357, 358, 359, 0, 360, 362, 699, 700, 0, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 701, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 702, 703,
	393, 0, 295, 0, 0, 0, 0, 0, 394, 395,
	396, 704, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 1297, 403, 404, 405, 705, 706,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 707, 0, 708, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 709, 710, 711, 512, 1299, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 0,
	431, 432, 433, 0, 1298, 513, 434, 712, 713, 0,
	714, 0, 435, 436, 1300, 715, 1301, 437, 438, 439,
	1302, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 716, 1303, 451,
	452, 1304, 0, 453, 454, 455, 456, 457, 458, 461,
	0, 0, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 1305, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	1306, 505, 493, 0, 0, 1307, 507, 508, 509, 510,
	0, 717, 511, 718, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 1308, 524, 1309, 720, 525, 526, 518, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 723, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 725, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	2517, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1310, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1311, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1633, 2426, 0,
	0, 0, 0, 2427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 301, 300, 302, 303,
	304, 305, 0, 306, 307, 0, 0, 0, 0, 1780,
	689, 0, 0, 0, 308, 0, 309, 310, 1295, 311,
	312, 313, 314, 315, 316, 317, 690, 691, 0, 318,
	692, 319, 693, 0, 694, 320, 321, 322, 323, 324,
	325, 0, 0, 0, 326, 695, 696, 697, 0, 327,
	328, 698, 0, 1597, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 0, 0, 338, 339, 340, 337, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 1296, 352, 353, 354, 0, 0, 0,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 0,
	360, 362, 699, 700, 0, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 701, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 702, 703, 393, 0, 295, 0,
	0, 0, 0, 0, 394, 395, 396, 704, 0, 0,
	0, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	1297, 403, 404, 405, 705, 706, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 707, 0, 708,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 709,
	710, 711, 512, 1299, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 0, 431, 432, 433, 0,
	1298, 513, 434, 712, 713, 0, 714, 0, 435, 436,
	1300, 715, 1301, 437, 438, 439, 1302, 440, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 0, 2425, 449,
	448, 0, 450, 716, 1303, 451, 452, 1304, 0, 453,
	454, 455, 456, 457, 458, 461, 0, 0, 459, 460,
	462, 463, 0, 464, 465, 467, 470, 466, 468, 469,
	471, 484, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 1305, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 1306, 505, 493, 0,
	0, 1307, 507, 508, 509, 510, 0, 717, 511, 718,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 719, 1308, 524, 1309,
	720, 525, 526, 518, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 721, 538, 539, 540,
	722, 541, 542, 543, 723, 544, 724, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 725, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1310, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 1311, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1633, 1632, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 301, 300, 302, 303, 304, 305, 0, 306,
	307, 0, 0, 0, 0, 1780, 689, 0, 0, 0,
	308, 0, 309, 310, 1295, 311, 312, 313, 314, 315,
	316, 317, 690, 691, 0, 318, 692, 319, 693, 0,
	694, 320, 321, 322, 323, 324, 325, 0, 0, 0,
	326, 695, 696, 697, 0, 327, 328, 698, 0, 1597,
	0, 329, 330, 331, 332, 333, 334, 335, 336, 0,
	0, 338, 339, 340, 337, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 0, 349, 350, 351, 1296,
	352, 353, 354, 0, 0, 0, 0, 0, 0, 0,
	355, 356, 357, 358, 359, 0, 360, 362, 699, 700,
	0, 365, 361, 363, 0, 366, 364, 367, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 701, 382,
	383, 384, 386, 388, 385, 387, 389, 390, 391, 392,
	702, 703, 393, 0, 295, 0, 0, 0, 0, 0,
	394, 395, 396, 704, 0, 0, 0, 397, 0, 398,
	399, 400, 0, 401, 402, 0, 1297, 403, 404, 405,
	705, 706, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 0, 415, 707, 0, 708, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 709, 710, 711, 512, 1299,
	424, 425, 0, 426, 427, 428, 429, 430, 0, 0,
	0, 0, 431, 432, 433, 0, 1298, 513, 434, 712,
	713, 0, 714, 0, 435, 436, 1300, 715, 1301, 437,
	438, 439, 1302, 440, 0, 0, 0, 441, 442, 443,
	444, 445, 446, 0, 447, 449, 448, 0, 450, 716,
	1303, 451, 452, 1304, 0, 453, 454, 455, 456, 457,
	458, 461, 0, 0, 459, 460, 462, 463, 0, 464,
	465, 467, 470, 466, 468, 469, 471, 484, 485, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 487, 0, 486, 1305, 488, 489, 490, 491, 492,
	499, 501, 502, 497, 498, 500, 503, 504, 506, 494,
	495, 496, 1306, 505, 493, 0, 0, 1307, 507, 508,
	509, 510, 0, 717, 511, 718, 514, 515, 0, 0,
	516, 0, 517, 0, 0, 519, 520, 521, 0, 0,
	522, 523, 719, 1308, 524, 1309, 720, 525, 526, 518,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 0,
	536, 537, 721, 538, 539, 540, 722, 541, 542, 543,
	723, 544, 724, 545, 546, 0, 547, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 725, 558,
	559, 561, 560, 562, 0, 563, 0, 564, 565, 566,
	0, 0, 0, 0, 0, 567, 568, 570, 0, 571,
	572, 573, 574, 569, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1310, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1311,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1173,
	0, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	301, 300, 302, 303, 304, 305, 0, 306, 307, 0,
	0, 1762, 0, 0, 689, 0, 0, 0, 308, 0,
	309, 310, 0, 311, 312, 313, 314, 315, 316, 317,
	690, 691, 0, 318, 692, 319, 693, 0, 694, 320,
	321, 322, 323, 324, 325, 0, 0, 0, 326, 695,
	696, 697, 0, 327, 328, 698, 0, 0, 0, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 0, 338,
	339, 340, 337, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 0, 0, 0, 0, 0, 0, 355, 356,
	357, 358, 359, 0, 360, 362, 699, 700, 0, 365,
	361, 363, 0, 366, 364, 367, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 701, 382, 383, 384,
	386, 388, 385, 387, 389, 390, 391, 392, 702, 703,
	393, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	396, 704, 0, 0, 0, 397, 0, 398, 399, 400,
	0, 401, 402, 0, 0, 403, 404, 405, 705, 706,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 0,
	415, 707, 0, 708, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 709, 710, 711, 512, 0, 424, 425,
	0, 426, 427, 428, 429, 430, 0, 0, 0, 0,
	431, 432, 433, 0, 0, 513, 434, 712, 713, 0,
	714, 0, 435, 436, 0, 715, 0, 437, 438, 439,
	0, 440, 0, 0, 0, 441, 442, 443, 444, 445,
	446, 0, 447, 449, 448, 0, 450, 716, 0, 451,
	452, 0, 0, 453, 454, 455, 456, 457, 458, 461,
	0, 0, 459, 460, 462, 463, 0, 464, 465, 467,
	470, 466, 468, 469, 471, 484, 485, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 487,
	0, 486, 0, 488, 489, 490, 491, 492, 499, 501,
	502, 497, 498, 500, 503, 504, 506, 494, 495, 496,
	0, 505, 493, 0, 0, 0, 507, 508, 509, 510,
	0, 717, 511, 718, 514, 515, 0, 0, 516, 0,
	517, 0, 0, 519, 520, 521, 0, 0, 522, 523,
	719, 0, 524, 0, 720, 525, 526, 518, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 536, 537,
	721, 538, 539, 540, 722, 541, 542, 543, 723, 544,
	724, 545, 546, 0, 547, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 556, 557, 725, 558, 559, 561,
	560, 562, 0, 563, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 567, 568, 570, 0, 571, 572, 573,
	574, 569, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 253, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 255, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 1756, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 292, 0,
	247, 684, 685, 740, 686, 687, 688, 0, 0, 248,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 203,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 292, 3193, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 301, 300, 302, 303, 304, 305,
	0, 306, 307, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 308, 0, 309, 310, 2134, 311, 312, 313,
	314, 315, 316, 317, 690, 691, 0, 318, 692, 319,
	693, 0, 694, 320, 321, 322, 323, 324, 325, 0,
	0, 0, 326, 695, 696, 697, 0, 327, 328, 698,
	0, 0, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 358, 359, 0, 360, 362,
	699, 700, 0, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	701, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 702, 703, 393, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 396, 704, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 0, 403,
	404, 405, 705, 706, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 707, 0, 708, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 709, 710, 711,
	512, 0, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 0, 431, 432, 433, 0, 0, 513,
	434, 712, 713, 0, 714, 0, 435, 436, 0, 715,
	0, 437, 438, 439, 0, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 716, 0, 451, 452, 0, 0, 453, 454, 455,
	456, 457, 458, 461, 0, 0, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 0, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 0, 505, 493, 0, 0, 0,
	507, 508, 509, 510, 0, 717, 511, 718, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 0, 524, 0, 720, 525,
	526, 518, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 723, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	725, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 292, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 5281, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 3865, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 1750, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 292, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 301, 300, 302, 303, 304, 305,
	0, 306, 307, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 308, 0, 309, 310, 3315, 311, 312, 313,
	314, 315, 316, 317, 690, 691, 0, 318, 692, 319,
	693, 0, 694, 320, 321, 322, 323, 324, 325, 0,
	0, 0, 326, 695, 696, 697, 0, 327, 328, 698,
	0, 0, 0, 329, 330, 331, 332, 333, 334, 335,
	336, 0, 0, 338, 339, 340, 337, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 0, 0, 0, 0,
	0, 0, 355, 356, 357, 358, 359, 0, 360, 362,
	699, 700, 0, 365, 361, 363, 0, 366, 364, 367,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	701, 382, 383, 384, 386, 388, 385, 387, 389, 390,
	391, 392, 702, 703, 393, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 396, 704, 0, 0, 0, 397,
	0, 398, 399, 400, 0, 401, 402, 0, 0, 403,
	404, 405, 705, 706, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 0, 415, 707, 0, 708, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 709, 710, 711,
	512, 0, 424, 425, 0, 426, 427, 428, 429, 430,
	0, 0, 0, 0, 431, 432, 433, 0, 0, 513,
	434, 712, 713, 0, 714, 0, 435, 436, 0, 715,
	0, 437, 438, 439, 0, 440, 0, 0, 0, 441,
	442, 443, 444, 445, 446, 0, 447, 449, 448, 0,
	450, 716, 0, 451, 452, 0, 0, 453, 454, 455,
	456, 457, 458, 461, 0, 0, 459, 460, 462, 463,
	0, 464, 465, 467, 470, 466, 468, 469, 471, 484,
	485, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 487, 0, 486, 0, 488, 489, 490,
	491, 492, 499, 501, 502, 497, 498, 500, 503, 504,
	506, 494, 495, 496, 0, 505, 493, 0, 0, 0,
	507, 508, 509, 510, 0, 717, 511, 718, 514, 515,
	0, 0, 516, 0, 517, 0, 0, 519, 520, 521,
	0, 0, 522, 523, 719, 0, 524, 0, 720, 525,
	526, 518, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 0, 536, 537, 721, 538, 539, 540, 722, 541,
	542, 543, 723, 544, 724, 545, 546, 0, 547, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 556, 557,
	725, 558, 559, 561, 560, 562, 0, 563, 0, 564,
	565, 566, 0, 0, 0, 0, 0, 567, 568, 570,
	0, 571, 572, 573, 574, 569, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 292, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 4029, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	2504, 1255, 0, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 1254, 0, 326, 695, 696, 697, 0,
	327, 328, 1261, 0, 1242, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 1245, 1243,
	1244, 1251, 1247, 1246, 1250, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 1286, 1287, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 1293, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1256, 1257, 1260, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 1298, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 1300, 1258, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 1294, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 1249, 1248, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	0, 297, 1307, 507, 508, 509, 510, 0, 1259, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 1288, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 1289, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1252, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 1290, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 1291, 657, 1292, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1253, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 995, 0, 895, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 902, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 992, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 994, 0, 637, 628, 900,
	643, 644, 645, 646, 647, 901, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 2179, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 0, 905, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 0, 2185, 0, 318, 2175, 319, 2191, 0, 2198,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	2201, 2202, 0, 0, 327, 328, 0, 0, 1597, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 1278, 360, 362, 2189, 2188, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 1263, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 0, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 2187, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 2196,
	2197, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 0, 0, 0, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 1298, 513, 434, 2182, 2183,
	0, 2178, 0, 435, 436, 1300, 0, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 0, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 0, 0, 1307, 507, 508, 509,
	510, 0, 0, 511, 2190, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 0, 1308, 524, 1309, 0, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 2172, 538, 539, 540, 2173, 541, 542, 543, 0,
	544, 0, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 2186, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 0, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 2184, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	2200, 631, 632, 633, 634, 0, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 2192, 2193, 2194,
	2195, 0, 662, 0, 652, 654, 655, 656, 0, 657,
	0, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 0, 2176, 2199, 0,
	678, 677, 679, 680, 681, 0, 682, 683, 0, 0,
	0, 0, 684, 685, 0, 686, 687, 688, 895, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 4156, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 2166, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 902, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 4155, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 900, 643, 644, 645, 646, 647, 901, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	4154, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 895, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 2206,
	306, 307, 0, 0, 0, 0, 0, 689, 905, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 902, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 2205, 601, 602, 603, 604, 0, 2207, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 900, 643, 644,
	645, 646, 647, 901, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 2204, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	895, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 2157, 306, 307, 0, 0,
	0, 0, 0, 689, 905, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	902, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 2156, 601, 602,
	603, 604, 0, 2158, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 900, 643, 644, 645, 646, 647, 901,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 2155, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 893, 0, 895, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	905, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 902, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 900, 643, 644, 645, 646, 647, 901, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 895, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 905, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 902, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 900, 643, 644,
	645, 646, 647, 901, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	895, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 905, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	902, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 2557, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 2558, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 900, 643, 644, 645, 646, 647, 901,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 2559, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	905, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1632, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 905, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 1597, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 1298, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 1300, 715, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 0, 0, 1307, 507, 508, 509, 510, 4259,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1633, 1632, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 1597, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 1298,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 1300,
	715, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 0, 0,
	1307, 507, 508, 509, 510, 3815, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1812, 0, 1633, 1632, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 1295, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	1597, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	1296, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 1810, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 1297, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	1299, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 1298, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 1300, 715, 1301,
	437, 438, 439, 1302, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 1303, 451, 452, 1304, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 1305, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 1306, 505, 493, 0, 0, 1307, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 1308, 524, 1309, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 1811, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1310, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 1809, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1311, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1683, 0, 1633, 1632, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 1597, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1685, 710, 711, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 1298, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 1300, 715, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 0, 0, 1307, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1628, 0,
	1633, 1632, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 1295, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 1597, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 1296, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 1297, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 1299, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 1298, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 1300, 715, 1301, 437, 438, 439, 1302,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 1303, 451, 452,
	1304, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 1305, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 1306,
	505, 493, 0, 0, 1307, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	1308, 524, 1309, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1310, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1311, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1633, 1632, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 1295, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 1597, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 1296, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 1297,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 1299, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 1298,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 1300,
	715, 1301, 437, 438, 439, 1302, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 1303, 451, 452, 1304, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 1305, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 1306, 505, 493, 0, 0,
	1307, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 1308, 524, 1309, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1310, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1311, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1633, 1632, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 1295, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 1597, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 1296, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 1297, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 1299, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 1298, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 1300, 715, 1301, 437, 438,
	439, 1302, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 1303,
	451, 452, 1304, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 1305, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 1306, 505, 493, 0, 0, 1307, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 1308, 524, 1309, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1310, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1311, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1633, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 1295,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 1597, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 1296, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 1297, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 1299, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 1298, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 1300, 715, 1301, 437, 438, 439, 1302, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 1303, 451, 452, 1304, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 1305,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 1306, 505, 493,
	0, 0, 1307, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 1308, 524,
	1309, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1310, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 1311, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 3094, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 3857, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 3098, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 3856, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 3097, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 3853, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 3855, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 3852, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 3096, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 3854, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 3094, 327, 328, 698, 0, 0, 3088, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 3090, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 3098, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 3097,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 3087, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 3096, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 3095, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1892, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 1891, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 1890, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 1893, 592, 593, 600, 601, 602, 603, 604,
	0, 1889, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 1887, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 1888, 677, 679, 680,
	681, 739, 682, 683, 1601, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1603, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 1346, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1598, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1600, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 1346, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1504, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1506, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 1346, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 773, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 772, 304, 305, 761, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 764, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 770, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 766, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 760, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 761, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	764, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 765, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	766, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 761,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 764, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 765, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 766, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 761, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 764, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 4269, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 766, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 2462,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 1346, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 292, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 3751, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 3285, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 3284, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 2525, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	2469, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 2468, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 2455, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 2457, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 2419, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 1346, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1728, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1727, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1621, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1614, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1616, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1423, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1422, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1413, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1412, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1410, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1409, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1405, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1404, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 742, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 283, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 764, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 765, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 766, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 2566, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 2564, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 295, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	296, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 297, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 292, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 2562, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 295,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 296, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 297, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 295, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 2475, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 296, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 297, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 295, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 2231, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 296, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 297, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 295, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 2225, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 296, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 297,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 979, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 978, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 977, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	862, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	851, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 860, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 853, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 859, 402, 855, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 856, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 854, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 857, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 858, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 852, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 845, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 851, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 860, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 853,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	859, 402, 855, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 856,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 854,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 857, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 858, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 852, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 3856, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 4605, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1451, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 1454, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 1452, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 833, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 832, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 831, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 1455, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 829,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1451, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 1454, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 1452, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 833, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 832, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 831,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 1455,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 829, 731, 732,
	733, 0, 662, 0, 652, 1453, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 840, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 838, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 751, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 750, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 749, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 3193, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 4911, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 3692, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 4492, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 292, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 4213, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 2969,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 3193, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 3324, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 2363, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 832, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 831, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 829, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 2536, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 2523, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1784, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1776, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 823, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 819, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 824, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 833, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 832, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 831, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 1761, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 829,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1734, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1733, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1718, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1716, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1711, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1688, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1686, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1681, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1642, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1606, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1457, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 832,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 831, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 829, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1428, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 1427, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1419, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 1418, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 1371, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 843, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 823, 0, 292, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 819,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	818, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 824, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 833, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 832, 584, 585,
	586, 587, 820, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 831, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 821, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 829, 731, 732, 733, 0, 662, 0, 652, 825,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 812, 0, 292, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 813, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	775, 0, 292, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 709, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 768, 0,
	292, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 746, 0, 292, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 3888, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 832, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 831, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 829, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 3794, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 292, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	3768, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 3764, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 3716, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 3714, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 3702, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 292, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	3699, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 3295, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	292, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 690,
	691, 0, 318, 692, 319, 693, 0, 694, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 695, 696,
	697, 0, 327, 328, 698, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 0, 360, 362, 699, 700, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 701, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 702, 703, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	704, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 705, 706, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	707, 0, 708, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 709, 710, 711, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 712, 713, 0, 714,
	0, 435, 436, 0, 715, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 716, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	717, 511, 718, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 719,
	0, 524, 0, 720, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 721,
	538, 539, 540, 722, 541, 542, 543, 723, 544, 724,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 725, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 813, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 292, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 689,
	0, 2493, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 690, 691, 0, 318, 692,
	319, 693, 0, 694, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 695, 696, 697, 0, 327, 328,
	698, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 0, 360,
	362, 699, 700, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 701, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 702, 703, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 704, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 705, 706, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 707, 0, 708, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 709, 710,
	711, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 712, 713, 0, 714, 0, 435, 436, 0,
	715, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 716, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 717, 511, 718, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 719, 0, 524, 0, 720,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 721, 538, 539, 540, 722,
	541, 542, 543, 723, 544, 724, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 725, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 0, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 292, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 690, 691, 0, 318, 692, 319, 693, 0, 694,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	695, 696, 697, 0, 327, 328, 698, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 0, 360, 362, 699, 700, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 701, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 702,
	703, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 704, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 705,
	706, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 707, 0, 708, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1390, 710, 711, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 712, 713,
	0, 714, 0, 435, 436, 0, 715, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 716, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 717, 511, 718, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 719, 0, 524, 0, 720, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 721, 538, 539, 540, 722, 541, 542, 543, 723,
	544, 724, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 725, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 292, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 690, 691, 0,
	318, 692, 319, 693, 0, 694, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 695, 696, 697, 0,
	327, 328, 698, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 0, 355, 356, 357, 358, 359,
	0, 360, 362, 699, 700, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 701, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 702, 703, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 704, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 705, 706, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 707, 0,
	708, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	709, 710, 711, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 712, 713, 0, 714, 0, 435,
	436, 0, 715, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 716, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 717, 511,
	718, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 719, 0, 524,
	0, 720, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 721, 538, 539,
	540, 722, 541, 542, 543, 723, 544, 724, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 725, 558, 559, 1319, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 292, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 690, 691, 0, 318, 692, 319, 693,
	0, 694, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 695, 696, 697, 0, 327, 328, 698, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 355, 356, 357, 358, 359, 0, 360, 362, 699,
	700, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 701,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 702, 703, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 704, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 705, 706, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 707, 0, 708, 0, 0, 417,
	418, 419, 420, 421, 422, 423, 709, 710, 711, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	712, 713, 0, 714, 0, 435, 436, 0, 715, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	716, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 717, 511, 718, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 719, 0, 524, 0, 720, 525, 526,
	518, 527, 528, 0, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 721, 538, 539, 540, 722, 541, 542,
	543, 723, 544, 724, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 0, 556, 557, 725,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 0, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1724, 0, 1435, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 301, 300, 302, 303, 304, 305, 0, 306, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 309, 310, 0, 311, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 322, 323, 324, 325, 0, 0, 0, 326,
	0, 0, 0, 0, 327, 328, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 334, 335, 336, 0, 0,
	338, 339, 340, 337, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 0, 0, 0, 0, 0, 1437, 355,
	356, 357, 358, 359, 0, 360, 362, 0, 0, 0,
	365, 361, 363, 0, 366, 364, 367, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 0, 382, 383,
	384, 386, 388, 385, 387, 389, 390, 391, 392, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 0, 0, 0, 0, 397, 0, 398, 399,
	400, 0, 401, 402, 0, 0, 403, 404, 405, 0,
	0, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 1723, 0, 0, 512, 0, 424,
	425, 0, 426, 427, 428, 429, 430, 0, 0, 0,
	0, 431, 432, 433, 0, 0, 513, 434, 0, 0,
	0, 0, 0, 435, 436, 0, 0, 0, 437, 438,
	439, 0, 440, 0, 0, 0, 441, 442, 443, 444,
	445, 446, 0, 447, 449, 448, 0, 450, 0, 0,
	451, 452, 0, 0, 453, 454, 455, 456, 457, 458,
	461, 0, 0, 459, 460, 462, 463, 0, 464, 465,
	467, 470, 466, 468, 469, 471, 484, 485, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	487, 0, 486, 0, 488, 489, 490, 491, 492, 499,
	501, 502, 497, 498, 500, 503, 504, 506, 494, 495,
	496, 0, 505, 493, 0, 0, 0, 507, 508, 509,
	510, 0, 0, 511, 0, 514, 515, 0, 0, 516,
	0, 517, 0, 0, 519, 520, 521, 0, 0, 522,
	523, 0, 0, 524, 0, 0, 525, 526, 518, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 0, 536,
	537, 0, 538, 539, 540, 0, 541, 542, 543, 0,
	544, 0, 545, 546, 0, 547, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 556, 557, 0, 558, 559,
	561, 560, 562, 0, 563, 0, 564, 565, 566, 0,
	0, 0, 0, 0, 567, 568, 570, 0, 571, 572,
	573, 574, 569, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 0, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1438, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 0, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	0, 631, 632, 633, 634, 0, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 0, 0, 0,
	0, 0, 662, 0, 652, 654, 655, 656, 0, 657,
	0, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 0, 0, 0, 0,
	678, 677, 679, 680, 681, 0, 682, 683, 1645, 0,
	1435, 0, 684, 685, 0, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 301,
	300, 302, 303, 304, 305, 0, 306, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 309,
	310, 0, 311, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	322, 323, 324, 325, 0, 0, 0, 326, 0, 0,
	0, 0, 327, 328, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 334, 335, 336, 0, 0, 338, 339,
	340, 337, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 0, 0, 0, 0, 0, 1437, 355, 356, 357,
	358, 359, 0, 360, 362, 0, 0, 0, 365, 361,
	363, 0, 366, 364, 367, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 0, 382, 383, 384, 386,
	388, 385, 387, 389, 390, 391, 392, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	0, 0, 0, 0, 397, 0, 398, 399, 400, 0,
	401, 402, 0, 0, 403, 404, 405, 0, 0, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 1644, 0, 0, 512, 0, 424, 425, 0,
	426, 427, 428, 429, 430, 0, 0, 0, 0, 431,
	432, 433, 0, 0, 513, 434, 0, 0, 0, 0,
	0, 435, 436, 0, 0, 0, 437, 438, 439, 0,
	440, 0, 0, 0, 441, 442, 443, 444, 445, 446,
	0, 447, 449, 448, 0, 450, 0, 0, 451, 452,
	0, 0, 453, 454, 455, 456, 457, 458, 461, 0,
	0, 459, 460, 462, 463, 0, 464, 465, 467, 470,
	466, 468, 469, 471, 484, 485, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 487, 0,
	486, 0, 488, 489, 490, 491, 492, 499, 501, 502,
	497, 498, 500, 503, 504, 506, 494, 495, 496, 0,
	505, 493, 0, 0, 0, 507, 508, 509, 510, 0,
	0, 511, 0, 514, 515, 0, 0, 516, 0, 517,
	0, 0, 519, 520, 521, 0, 0, 522, 523, 0,
	0, 524, 0, 0, 525, 526, 518, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 536, 537, 0,
	538, 539, 540, 0, 541, 542, 543, 0, 544, 0,
	545, 546, 0, 547, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 556, 557, 0, 558, 559, 561, 560,
	562, 0, 563, 0, 564, 565, 566, 0, 0, 0,
	0, 0, 567, 568, 570, 0, 571, 572, 573, 574,
	569, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 0, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 1438,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 0, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 0, 631,
	632, 633, 634, 0, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 0, 0, 0, 0, 0,
	662, 0, 652, 654, 655, 656, 0, 657, 0, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 0, 0, 0, 0, 678, 677,
	679, 680, 681, 0, 682, 683, 1433, 0, 1435, 0,
	684, 685, 0, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 301, 300, 302,
	303, 304, 305, 0, 306, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 309, 310, 0,
	311, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 322, 323,
	324, 325, 0, 0, 0, 326, 0, 0, 0, 0,
	327, 328, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 334, 335, 336, 0, 0, 338, 339, 340, 337,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 0,
	0, 0, 0, 0, 1437, 355, 356, 357, 358, 359,
	0, 360, 362, 0, 0, 0, 365, 361, 363, 0,
	366, 364, 367, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 0, 382, 383, 384, 386, 388, 385,
	387, 389, 390, 391, 392, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 396, 0, 0,
	0, 0, 397, 0, 398, 399, 400, 0, 401, 402,
	0, 0, 403, 404, 405, 0, 0, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1432, 0, 0, 512, 0, 424, 425, 0, 426, 427,
	428, 429, 430, 0, 0, 0, 0, 431, 432, 433,
	0, 0, 513, 434, 0, 0, 0, 0, 0, 435,
	436, 0, 0, 0, 437, 438, 439, 0, 440, 0,
	0, 0, 441, 442, 443, 444, 445, 446, 0, 447,
	449, 448, 0, 450, 0, 0, 451, 452, 0, 0,
	453, 454, 455, 456, 457, 458, 461, 0, 0, 459,
	460, 462, 463, 0, 464, 465, 467, 470, 466, 468,
	469, 471, 484, 485, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 487, 0, 486, 0,
	488, 489, 490, 491, 492, 499, 501, 502, 497, 498,
	500, 503, 504, 506, 494, 495, 496, 0, 505, 493,
	0, 0, 0, 507, 508, 509, 510, 0, 0, 511,
	0, 514, 515, 0, 0, 516, 0, 517, 0, 0,
	519, 520, 521, 0, 0, 522, 523, 0, 0, 524,
	0, 0, 525, 526, 518, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 0, 536, 537, 0, 538, 539,
	540, 0, 541, 542, 543, 0, 544, 0, 545, 546,
	0, 547, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 556, 557, 0, 558, 559, 561, 560, 562, 0,
	563, 0, 564, 565, 566, 0, 0, 0, 0, 0,
	567, 568, 570, 0, 571, 572, 573, 574, 569, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 0, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1438, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 0, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 0, 631, 632, 633,
	634, 0, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 0, 0, 0, 0, 0, 662, 0,
	652, 654, 655, 656, 0, 657, 0, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 0, 0, 0, 0, 678, 677, 679, 680,
	681, 0, 682, 683, 2245, 0, 1435, 0, 684, 685,
	0, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 301, 300, 302, 303, 304,
	305, 0, 306, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 309, 310, 0, 311, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 322, 323, 324, 325,
	0, 0, 0, 326, 0, 0, 0, 0, 327, 328,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 334,
	335, 336, 0, 0, 338, 339, 340, 337, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 0, 0, 0,
	0, 0, 1437, 355, 356, 357, 358, 359, 0, 360,
	362, 0, 0, 0, 365, 361, 363, 0, 366, 364,
	367, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 0, 382, 383, 384, 386, 388, 385, 387, 389,
	390, 391, 392, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 396, 0, 0, 0, 0,
	397, 0, 398, 399, 400, 0, 401, 402, 0, 0,
	403, 404, 405, 0, 0, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 0, 0,
	0, 512, 0, 424, 425, 0, 426, 427, 428, 429,
	430, 0, 0, 0, 0, 431, 432, 433, 0, 0,
	513, 434, 0, 0, 0, 0, 0, 435, 436, 0,
	0, 0, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 442, 443, 444, 445, 446, 0, 447, 449, 448,
	0, 450, 0, 0, 451, 452, 0, 0, 453, 454,
	455, 456, 457, 458, 461, 0, 0, 459, 460, 462,
	463, 0, 464, 465, 467, 470, 466, 468, 469, 471,
	484, 485, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 487, 0, 486, 0, 488, 489,
	490, 491, 492, 499, 501, 502, 497, 498, 500, 503,
	504, 506, 494, 495, 496, 0, 505, 493, 0, 0,
	0, 507, 508, 509, 510, 0, 0, 511, 0, 514,
	515, 0, 0, 516, 0, 517, 0, 0, 519, 520,
	521, 0, 0, 522, 523, 0, 0, 524, 0, 0,
	525, 526, 518, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 0, 536, 537, 0, 538, 539, 540, 0,
	541, 542, 543, 0, 544, 0, 545, 546, 0, 547,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 556,
	557, 0, 558, 559, 561, 560, 562, 0, 563, 0,
	564, 565, 566, 0, 0, 0, 0, 0, 567, 568,
	570, 0, 571, 572, 573, 574, 569, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 0, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1438, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	0, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 0, 631, 632, 633, 634, 0,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 0, 0, 0, 0, 0, 662, 0, 652, 654,
	655, 656, 0, 657, 0, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	0, 0, 0, 0, 678, 677, 679, 680, 681, 0,
	682, 683, 2212, 0, 1435, 0, 684, 685, 0, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 301, 300, 302, 303, 304, 305, 0,
	306, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 309, 310, 0, 311, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 0, 319, 0,
	0, 0, 320, 321, 322, 323, 324, 325, 0, 0,
	0, 326, 0, 0, 0, 0, 327, 328, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 334, 335, 336,
	0, 0, 338, 339, 340, 337, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 0, 0, 0, 0, 0,
	1437, 355, 356, 357, 358, 359, 0, 360, 362, 0,
	0, 0, 365, 361, 363, 0, 366, 364, 367, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 0,
	382, 383, 384, 386, 388, 385, 387, 389, 390, 391,
	392, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 396, 0, 0, 0, 0, 397, 0,
	398, 399, 400, 0, 401, 402, 0, 0, 403, 404,
	405, 0, 0, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 0, 0, 0, 512,
	0, 424, 425, 0, 426, 427, 428, 429, 430, 0,
	0, 0, 0, 431, 432, 433, 0, 0, 513, 434,
	0, 0, 0, 0, 0, 435, 436, 0, 0, 0,
	437, 438, 439, 0, 440, 0, 0, 0, 441, 442,
	443, 444, 445, 446, 0, 447, 449, 448, 0, 450,
	0, 0, 451, 452, 0, 0, 453, 454, 455, 456,
	457, 458, 461, 0, 0, 459, 460, 462, 463, 0,
	464, 465, 467, 470, 466, 468, 469, 471, 484, 485,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 487, 0, 486, 0, 488, 489, 490, 491,
	492, 499, 501, 502, 497, 498, 500, 503, 504, 506,
	494, 495, 496, 0, 505, 493, 0, 0, 0, 507,
	508, 509, 510, 0, 0, 511, 0, 514, 515, 0,
	0, 516, 0, 517, 0, 0, 519, 520, 521, 0,
	0, 522, 523, 0, 0, 524, 0, 0, 525, 526,
	518, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	0, 536, 537, 0, 538, 539, 540, 0, 541, 542,
	543, 0, 544, 0, 545, 546, 0, 547, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 556, 557, 0,
	558, 559, 561, 560, 562, 0, 563, 0, 564, 565,
	566, 0, 0, 0, 0, 0, 567, 568, 570, 0,
	571, 572, 573, 574, 569, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	0, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1438, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 0, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 0, 631, 632, 633, 634, 0, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 0,
	0, 0, 0, 0, 662, 0, 652, 654, 655, 656,
	0, 657, 0, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 0, 0,
	0, 0, 678, 677, 679, 680, 681, 1435, 682, 683,
	0, 0, 0, 0, 684, 685, 0, 686, 687, 688,
	0, 0, 0, 0, 298, 299, 301, 300, 302, 303,
	304, 305, 0, 306, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 309, 310, 0, 311,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 322, 323, 324,
	325, 0, 0, 0, 326, 0, 0, 0, 0, 327,
	328, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	334, 335, 336, 0, 0, 338, 339, 340, 337, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 0, 0,
	0, 0, 0, 1437, 355, 356, 357, 358, 359, 0,
	360, 362, 0, 0, 0, 365, 361, 363, 0, 366,
	364, 367, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 0, 382, 383, 384, 386, 388, 385, 387,
	389, 390, 391, 392, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 396, 0, 0, 0,
	0, 397, 0, 398, 399, 400, 0, 401, 402, 0,
	0, 403, 404, 405, 0, 0, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 0,
	0, 0, 512, 0, 424, 425, 0, 426, 427, 428,
	429, 430, 0, 0, 0, 0, 431, 432, 433, 0,
	0, 513, 434, 0, 0, 0, 0, 0, 435, 436,
	0, 0, 0, 437, 438, 439, 0, 440, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 0, 447, 449,
	448, 0, 450, 0, 0, 451, 452, 0, 0, 453,
	454, 455, 456, 457, 458, 461, 0, 0, 459, 460,
	462, 463, 0, 464, 465, 467, 470, 466, 468, 469,
	471, 484, 485, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 487, 0, 486, 0, 488,
	489, 490, 491, 492, 499, 501, 502, 497, 498, 500,
	503, 504, 506, 494, 495, 496, 0, 505, 493, 0,
	0, 0, 507, 508, 509, 510, 0, 0, 511, 0,
	514, 515, 0, 0, 516, 0, 517, 0, 0, 519,
	520, 521, 0, 0, 522, 523, 0, 0, 524, 0,
	0, 525, 526, 518, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 0, 536, 537, 0, 538, 539, 540,
	0, 541, 542, 543, 0, 544, 0, 545, 546, 0,
	547, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	556, 557, 0, 558, 559, 561, 560, 562, 0, 563,
	0, 564, 565, 566, 0, 0, 0, 0, 0, 567,
	568, 570, 0, 571, 572, 573, 574, 569, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 0, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1438, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 0, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 0, 631, 632, 633, 634,
	0, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 0, 0, 0, 0, 0, 662, 0, 652,
	654, 655, 656, 0, 657, 0, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 0, 0, 0, 0, 678, 677, 679, 680, 681,
	0, 682, 683, 0, 0, 0, 0, 684, 685, 0,
	686, 687, 688, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 1976, 0, 0,
	0, 0, 0, 1945, 1946, 1948, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 1976, 0, 0,
	0, 0, 2001, 0, 0, 1948, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 1982, 1976, 0, 0, 1953,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 1995, 1996, 0, 0, 0, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 1992,
	1947, 1993, 1986, 0, 0, 1996, 0, 0, 1962, 1963,
	0, 1967, 1975, 1977, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 1984, 0, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	1994, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 1998, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	1993, 1974, 0, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 1984, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 1969, 0, 0, 0, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 1982, 1976, 0, 2000, 0, 0, 1994,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 2000, 0, 0, 2001,
	0, 1998, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	1974, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 1985, 0, 0, 4889, 0, 0, 0, 0,
	0, 0, 0, 1969, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 0, 0, 0, 4693, 1970, 1971, 1972, 1973,
	0, 1987, 0, 0, 0, 0, 1953, 0, 0, 1945,
	1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 2000, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 1995, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 1992, 1947, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0,
	1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0,
	0, 0, 0, 0, 4516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 1993, 1974, 0,
	0, 0, 0, 0, 1962, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1968, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 1976,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 2000, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 1998, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 1974, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	0, 0, 4421, 0, 0, 0, 0, 0, 0, 0,
	1969, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1995, 1996, 0, 0,
	0, 0, 2000, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 1992, 1947, 1993, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 4420, 1994, 0, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 1993, 1974, 0, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1968, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 2000, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 0, 1998, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 1974, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 4419, 0, 0,
	0, 0, 0, 0, 0, 1969, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 1945,
	1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 1995, 1996, 0, 0, 0, 0, 2000, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 1992, 1947, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 4034, 1994, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 1993, 1974, 0,
	0, 0, 0, 0, 1962, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1968, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 1976,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 2000, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 1998, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 1974, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	0, 0, 3501, 0, 0, 0, 0, 0, 0, 0,
	1969, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1995, 1996, 0, 0,
	0, 0, 2000, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 1992, 1947, 1993, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 3500, 1994, 0, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 1993, 1974, 0, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 1945, 1946,
	0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0, 0,
	0, 0, 2393, 0, 0, 0, 0, 0, 0, 0,
	0, 1982, 1976, 0, 0, 0, 0, 0, 2000, 0,
	1948, 1994, 0, 0, 0, 0, 0, 0, 0, 0,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 1998, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 1974, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 2394, 0, 0, 3499, 0, 0,
	0, 0, 0, 0, 0, 1969, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 1971, 1972, 1973, 0, 1982,
	1976, 0, 0, 1987, 1953, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 2000, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 1986, 0, 0,
	1996, 0, 0, 0, 0, 1967, 0, 1975, 1977, 2324,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 1993, 0, 0, 0,
	0, 0, 0, 1962, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965,
	1961, 2322, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 1970, 1971, 1972, 1973, 3498, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 1998, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 1993, 0, 0, 0, 0, 0,
	0, 1962, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2395, 0, 1982, 1976, 0, 0, 1987, 0, 0,
	0, 0, 1948, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 2001,
	0, 2000, 0, 0, 0, 1998, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2323, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 1959,
	1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957, 1949,
	1950, 1951, 1952, 1954, 1955, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 1987, 1953, 5190, 0, 1945,
	1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 0, 0, 0, 0, 2000,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 1986,
	2321, 1995, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 1992, 1947, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 1960, 1966,
	1988, 1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 3563, 1983, 0,
	0, 0, 0, 0, 3562, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5189, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 1993, 1974, 0,
	0, 0, 0, 0, 1962, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1968, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 1976,
	0, 0, 0, 0, 3433, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 2000, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 1998, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 3434, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 1974, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 1970, 1971, 1972, 1973, 0, 0, 2942, 0, 0,
	0, 1953, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 1976, 0,
	0, 0, 2941, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1995, 1996, 0, 0,
	0, 0, 2000, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 1992, 1947, 1993, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 0, 1994, 0, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 1993, 1974, 0, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1968, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 2000, 0,
	0, 1994, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 0, 1998, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 1974, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 4794, 1945,
	1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 1976, 0, 0, 0, 0, 0, 0,
	0, 1948, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 1995, 1996, 0, 0, 0, 0, 2000, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 1992, 1947, 1993, 0,
	0, 0, 0, 0, 0, 1962, 1963, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965,
	1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 1970, 1971, 1972, 1973, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 1975, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 1993, 1974, 0,
	0, 0, 0, 0, 1962, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1968, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 1976,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 2000, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 0, 1983, 1170, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 1998, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 1974, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1945, 1946, 0, 1978, 1979, 1980,
	1989, 1990, 1991, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 1976, 0,
	0, 0, 0, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1995, 1996, 0, 0,
	0, 0, 2000, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 1992, 1947, 1993, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956, 1957,
	1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0, 0,
	0, 0, 1994, 0, 0, 0, 0, 0, 0, 0,
	1970, 1971, 1972, 1973, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 1975, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 1993, 1974, 0, 0, 0, 0, 0, 1962,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 1945, 1946, 0, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 1976, 0, 0,
	0, 0, 0, 1945, 1946, 1948, 1978, 1979, 1980, 1989,
	1990, 1991, 0, 0, 0, 1995, 0, 0, 2000, 0,
	0, 1994, 0, 0, 0, 0, 1982, 1976, 0, 0,
	0, 0, 2001, 0, 0, 1948, 0, 4563, 0, 0,
	0, 1947, 1983, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 1967, 1998, 0, 0, 0, 0, 0, 0,
	0, 1964, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 1974, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 0, 0, 0, 0, 1953,
	0, 4237, 1945, 1946, 0, 1978, 1979, 1980, 1989, 1990,
	1991, 0, 0, 1987, 0, 0, 0, 0, 0, 1970,
	1971, 1972, 1973, 0, 0, 1982, 1976, 0, 0, 1953,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 1995, 1996, 0, 2000, 0, 0,
	0, 0, 1975, 1977, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 4238, 0, 0, 1992,
	1947, 1993, 1986, 0, 0, 1996, 0, 0, 1962, 1963,
	0, 1967, 1975, 1977, 0, 0, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 1984, 0, 0, 1992,
	0, 1993, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965,
	1961, 1968, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 0, 1970, 1971,
	1972, 1973, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 1983, 0, 0, 0, 0, 0, 3569, 0, 0,
	1994, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 1998, 0, 1996, 0, 0, 0, 0, 0,
	0, 1975, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	1993, 1974, 0, 0, 0, 0, 0, 1962, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 1984, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 1969, 0, 1945, 1946, 0, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	1976, 0, 1987, 0, 3564, 0, 2000, 0, 1948, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 2001, 2000, 0, 0, 0,
	0, 1998, 0, 0, 1947, 0, 0, 0, 0, 4015,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961,
	1974, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 1959, 1960, 1966, 1988, 1965, 1961,
	0, 1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955,
	0, 0, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	0, 1987, 1953, 0, 0, 1945, 1946, 0, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 1976,
	0, 0, 0, 0, 0, 2000, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 1995, 1996, 0,
	0, 0, 0, 0, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 1992, 1947, 1993, 0, 0, 0, 0, 0,
	0, 1962, 1963, 0, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 0,
	1958, 1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 1993, 1974, 0, 0, 0, 0, 0,
	1962, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 1968, 1978, 1979, 1980, 1989, 1990, 1991,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 1976, 0, 0, 0, 3502,
	0, 0, 0, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 2000,
	0, 0, 1994, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 1998, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 3529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 1960, 1966,
	1988, 1965, 1961, 1974, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1970, 1971, 1972,
	1973, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	1945, 1946, 0, 1978, 1979, 1980, 1989, 1990, 1991, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 1976, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 1995, 1996, 0, 0, 0, 0, 2000, 0,
	1975, 1977, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 1992, 1947, 1993,
	0, 0, 0, 0, 0, 0, 1962, 1963, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 0, 0, 0, 1970, 1971, 1972, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 1975,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 1993, 1974,
	0, 0, 0, 0, 0, 1962, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1968, 1978,
	1979, 1980, 1989, 1990, 1991, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	1976, 0, 0, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 2000, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 1998,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1966, 1988, 1965, 1961, 1974, 1958,
	1956, 1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1970, 1971, 1972, 1973, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 1945, 1946, 0, 1978, 1979,
	1980, 1989, 1990, 1991, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 1995, 1996, 0,
	0, 0, 0, 2000, 0, 1975, 1977, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 1992, 1947, 1993, 0, 0, 0, 0, 0,
	0, 1962, 1963, 0, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 0, 2506, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1966, 1988, 1965, 1961, 0, 1958, 1956,
	1957, 1949, 1950, 1951, 1952, 1954, 1955, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 1970, 1971, 1972, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 1975, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	1098, 1992, 0, 1993, 1974, 0, 0, 0, 0, 0,
	1962, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 1969, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1069, 1968, 1052, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 1110, 0, 1081, 0, 0, 0, 2000,
	0, 0, 1994, 1066, 1067, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 1058, 0, 0, 1998, 0, 0, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1060, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 1960, 1966,
	1988, 1965, 1961, 1974, 1958, 1956, 1957, 1949, 1950, 1951,
	1952, 1954, 1955, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 1063, 1064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1072, 1070, 0,
	0, 0, 0, 0, 0, 1065, 0, 0, 2000, 1082,
	0, 0, 1104, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1966, 1988,
	1965, 1961, 0, 1958, 1956, 1957, 1949, 1950, 1951, 1952,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	0, 0, 1090, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 1088, 0, 0, 0, 0, 0, 0, 0,
	1108, 1083, 0, 0, 1075, 1073, 0, 0, 1078, 0,
	0, 0, 0, 0, 1079, 0, 0, 1048, 0, 1102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 1092, 0, 1080, 0,
	0, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 1085, 0, 0, 0, 0,
	0, 0, 0, 1061, 1105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089,
}

var sqlPact = [...]int{
	332, -1000, -1000, -1000, -1000, 297, -1000, -1000, 294, 293,
	292, 291, 288, 284, 283, 281, 273, 272, 270, -1000,
	-1000, 269, 266, 247, 245, -1000, -1000, 241, -1000, -1000,
	232, -1000, 230, 229, 228, -1000, -1000, 227, -1000, 226,
	-1000, -1000, -1000, -1000, 225, 223, 222, 99424, 98836, 100010,
	2613, 126434, 108814, 2367, 88264, 125846, 87676, 125258, 2480, 9877,
	124670, 3065, 219, -1000, 124082, 218, 217, 215, -1000, 108226,
	123494, 105876, 105288, 2164, -1000, 210, 208, -1000, 9788, 77044,
	203, 201, 195, 194, 2491, 193, -1000, 184, 179, -1000,
	-1000, 171, -1000, 11582, 1690, -1000, 166, 163, -1000, 342,
	104700, 151, 147, 140, 2826, 139, 137, 74102, 132, 131,
	130, 2823, 3212, -1000, -1000, 2353, -1000, -1000, 129, 128,
	122, 120, 119, 117, 113, 112, 110, 109, 108, 107,
	106, -1000, 104, 103, 102, 100, 99, -1000, 98, 94,
	91, -1000, 90, -1000, 89, 84, 82, 79, 78, 77,
	76, 73, 72, 71, 67, 66, 65, 63, 61, 146446,
	-1000, -1000, 56, -1000, 2239, 1884, 1880, 1874, 1870, 1864,
	1139, 55, 54, 53, 52, 49, 48, 47, 45, 43,
	41, 40, 36, 35, 34, 33, 32, 31, 27, 20,
	19, 168, 18, 12, 11, 10, 8, 5, 4, 2478,
	3856, -1000, 1868, 1169, 1371, 33825, 3303, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 135224, 127020, 3,
	-147, 2, -1000, 3656, 1245, 61648, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 396, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 650, 2136, 893, -1000, -1000, -1000, 122906,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2612, -58,
	-1000, 2319, -1000, -1000, -1000, -1000, -1000, 891, -1000, 2610,
	2555, 274, 2546, -1000, -1000, -1000, 3734, 2760, 4156, 4155,
	4154, 4153, 4152, 134638, 2138, 4151, 2831, 4150, 4149, 4148,
	4147, 4146, 4145, 4142, -1000, 98248, 1209, 97660, 97072, 3727,
	122320, 96484, 121732, 137574, 52011, 1022, 3733, -1000, -1000, -1000,
	-1000, -1000, -1000, 127020, -1000, 1208, -1000, -1000, 4139, 2383,
	889, 107638, -1000, -1000, 121144, 2026, -1000, -1000, -1000, 1073,
	1383, 36237, 36237, 36237, 395, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3742, -1000, -1000, -1000, -1000, 127020, 3078, 3078,
	1587, 1596, 1596, 3078, 3078, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4138, 4137, 4134, 4133, 4131, -1000, -1000,
	-1000, 87088, 26400, 86500, 85912, 120556, 51408, 95896, 95308, 4130,
	4129, 4128, 50805, 81796, 59244, 3854, 119968, 136986, 3851, 3849,
	1204, 2317, 1684, -1000, -1000, -1000, -1000, -1000, -1000, -22,
	78802, 3928, 127020, -1000, 388, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 50202, 901, 49599, 849, 48996, 547, 119380, -1000,
	-1000, -1000, -1000, 81198, -1000, 118792, 2756, 4127, 4126, 1304,
	4123, 3606, 2126, 4122, 2167, 1468, 4121, 4120, 4119, 4118,
	4117, 4116, 4115, 1721, 118204, 3300, 1786, 117616, 2019, 136398,
	1203, 94720, 100010, 2931, 117028, 1747, 1694, -1000, -1000, -1000,
	-1000, 3406, 3207, 3182, 1520, -1000, -1000, -1000, -1000, 65229,
	7597, 7078, -1000, -1000, 11894, 116440, 68209, 100010, 100010, -1000,
	-1000, -1000, -1000, -1000, -1000, 48393, 838, 47790, 988, 115852,
	-1000, -1000, 65825, 3233, 1252, -1000, -1000, -1000, -1000, -1000,
	115264, 47187, 344, 46584, 969, 127020, -1000, 3297, 2235, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4018, 1824,
	3922, 3064, 80600, 2373, 1600, 3675, 3405, 3404, 1710, 2312,
	3403, 4114, 2937, 3401, 3394, 3389, 3388, 3386, 1714, 2876,
	394, 2899, 33222, 3285, 2028, 45981, 1771, 1674, 3381, 3379,
	3940, 3791, 2297, 2307, 2400, 2327, 85324, 4112, 4111, 3640,
	3376, 3372, 3128, 3358, 2186, -1000, 3232, 1715, 384, -1000,
	-1000, -1000, -1000, -1000, -1000, 384, 1656, -1000, -1000, -1000,
	-1000, -1000, 90608, -1000, -1000, 1969, -1000, -1000, 1969, -1000,
	-1000, -1000, -1000, -1000, 1632, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1868,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3375, -1000, 2384, -1000, -1000, -1000, 2819, 3559, 3559, 3559,
	3732, 618, 596, -1000, 168, 1026, 1260, -1000, -1000, 146015,
	-1000, -1000, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614,
	2475, -1000, 887, -1000, -1000, 922, -1000, 882, 803, 751,
	-1000, -1000, -1000, -1000, -1000, -1000, 881, -1000, -1000, -1000,
	-1000, -1000, -1000, 3891, -1000, 29467, -1000, -1000, -1000, 635,
	880, 52614, -1000, -1000, 3984, 3980, 1221, -1000, 378, 1112,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3295, 879, 878, -1000, 875, 872, 869, 868,
	867, -1000, 861, -1000, 860, 859, 852, 848, 846, 837,
	835, 834, -1000, 2357, -1000, -1000, -1000, -1000, -1000, -1000,
	786, 785, 785, 785, -1000, 1195, -1000, -1000, -1000, 414,
	783, 383, 782, 781, 780, -1000, 833, 830, 829, 828,
	827, 825, 822, 821, 817, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1194, -1000, -1000, -1000, -1000, 1578, -25, 127020,
	-1000, 650, -25, -1000, -1000, 811, -1000, 38064, 38064, 38064,
	-1000, -1000, 2607, 52614, -1000, 2797, -1000, -12, -12, 1048,
	63436, -1000, 60438, 1048, 518, 943, 69394, -1000, 3230, -1000,
	-1000, 805, 374, -1000, -1000, -1000, -1000, 26996, 3229, 127020,
	127020, 127020, 100010, 100010, 100010, 127020, 4110, 4109, 3505, 52614,
	-1000, -1000, 76456, 139333, 100596, -1000, -1000, 3833, 74688, 75870,
	3293, 139333, 3291, 138750, 4108, -1000, -1000, -1000, -1000, -1000,
	3475, 4105, 4102, 4100, -1000, 127020, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 256, 3474, -1000, -1000, 104112, 256, 3473,
	-1000, 256, 3472, -1000, 103526, -1000, -1000, 2519, 3471, -1000,
	-1000, 262, 3470, -1000, -1000, -1000, 257, 3468, -1000, -1000,
	372, -146, 3467, -1000, -1000, -1000, -1000, -1000, -1000, 146015,
	-1000, -1000, -1000, 138162, -1000, 3644, -1000, 127020, -1000, 52614,
	-1000, -1000, 3831, 1746, 3672, 3764, -1000, -1000, -33, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2808, 2798, 1308, 2640,
	-1000, 3526, 2162, 36237, 3594, -1000, -1000, -1000, -1000, -1000,
	367, 26996, 3150, -1000, -1000, 127020, -1000, 127020, 3078, 3078,
	-1000, -1000, -1000, 3932, 3930, 3078, 3078, 127020, 127020, -1000,
	-1000, -1000, -1000, -1000, -1000, 2316, 3466, 1565, -1000, 2636,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2437,
	3465, -1000, 1803, 3464, 2414, -1000, -1000, 2198, -1000, 142435,
	1527, -1000, -1000, -1000, -1000, 2210, 3463, -8, -1000, -1000,
	2860, -1000, -1000, -1000, -1000, 142287, -1000, 3202, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1949, -1000, -1000,
	2399, 2232, -1000, 1470, 3460, -1000, 3057, 3057, 94132, 3431,
	67613, 65825, 78802, -27, -1000, -1000, -1000, -1000, -1000, -205,
	-1000, 25796, 146015, -1000, -1000, -1000, -1000, 2095, 146015, 1109,
	-1000, -1000, 3457, -1000, 146015, 1107, -1000, -1000, 3456, -1000,
	2873, -1000, 3290, -1000, -1000, 2706, 2705, 1171, -1000, 4098,
	-1000, -1000, 4096, -1000, 4093, 4092, 4090, -1000, 1986, 2300,
	4089, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 93546,
	2606, -1000, -1000, 90022, 3288, -1000, 2704, 3761, -1000, 92958,
	1202, -1000, 1149, 2701, -1000, 102940, 1211, 2700, -1000, 4087,
	3725, 2977, 1149, 2699, -1000, -1000, -1000, -1000, -1000, 1035,
	-1000, 71156, -1000, 71156, -1000, 1914, -1000, 134052, -12, 100010,
	3891, -1000, -52, -1000, -1000, -1000, 1245, -1000, 64630, -1000,
	64630, 107050, 82392, 1117, 3226, 72918, 145729, -1000, 1167, -1000,
	-1000, 146015, -1000, -1000, -1000, 2871, -1000, -179, 3056, -1000,
	82392, 67017, 3224, 2857, -1000, 146015, -1000, -1000, -1000, -1000,
	146015, -1000, -1000, -1000, 82392, 90022, -1000, 114676, 92370, -1000,
	-1000, 1709, 2852, -1000, -1000, -1000, 82392, 3223, 1471, 82392,
	82392, 82392, -1000, 114088, -1000, -1000, 2378, 1706, 3630, 2354,
	100010, -1000, 2097, -1000, -1000, -1000, 3658, 3429, 127020, -1000,
	-1000, 3286, -1000, 78216, 102354, -1000, 101768, -1000, 101182, -1000,
	100010, -1000, 100010, -1000, 4085, 4083, 4081, -1000, -1000, 4080,
	-1000, 4079, 3650, -1000, 754, 45378, 146015, 3649, -1000, 4078,
	2294, 3285, 146015, -1000, 3428, 1902, 1890, 127020, -1000, -1000,
	127020, -1000, 127020, -1000, -1000, -1000, 2627, 1821, -1000, -1000,
	2807, -1000, -1000, -1000, 1161, -1000, -1000, 100010, 100010, 100010,
	100010, 1762, -1000, 44775, -1000, -1000, 3332, 4077, 1973, -1000,
	2063, -1000, 3221, 3651, -1000, 3220, 1703, 2040, 355, 3992,
	355, -1000, -1000, 263, -1000, -1000, -33, -1000, 133466, -1000,
	2819, -1000, 127020, -1000, 2816, 3275, 3284, 1758, 2624, 2904,
	-1000, 44172, 2875, 56232, 2634, 168, -1000, -1000, 168, 168,
	35031, -1000, -1000, 36237, 1026, 74688, 74688, 26996, 1569, 52614,
	52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614,
	52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614,
	52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614,
	52614, 52614, 52614, 52614, 52614, 2473, 52614, 1625, 52614, 52614,
	52614, 52614, 2137, -1000, -1000, 2252, 690, 2355, 803, -1000,
	-1000, -1000, 3890, 3890, 3890, 863, 863, 863, 146194, 146194,
	772, 4076, 922, -1000, 52614, -1000, 138, 64023, 52614, 27594,
	-1000, 596, 9419, 2825, -1000, 595, 28227, -1000, -1000, -1000,
	29467, 751, 43539, 52614, 1179, 146015, -1000, -1000, 1541, 3905,
	25192, 3305, 3117, 802, 989, 980, 32589, 31956, 31323, 30690,
	977, 964, 52614, 52614, 52614, 52614, 52614, 52614, 52614, 52614,
	-1000, -1000, 3929, -1000, 3905, -1000, -1000, -1000, -1000, 3905,
	1537, 1507, 3905, -1000, 3905, 3905, 5570, 5570, 42936, 42333,
	41730, 56835, 41127, 52614, 30087, 40524, 39921, -1000, 58644, 127020,
	-25, 3830, 52614, 207, -1000, 143383, -1000, 207, 207, 801,
	-57, 146015, 3054, 3054, 62244, 2697, 2502, 2502, 2502, -1000,
	1048, 19718, 1048, 112330, 2511, 1048, 1048, 339, 366, 594,
	59842, 2797, 112330, 909, 793, 1, -1, -3, -1000, -1000,
	-5, -6, -1000, -1000, 100010, 791, 27594, 26996, 331, 2279,
	-60, 2914, 2911, -1000, 2908, 2907, -1000, 2905, 2603, -1000,
	-1000, -1000, 2061, -62, 1602, 100010, 127020, 1686, 4075, -48,
	-1000, 6755, -65, -1000, 1494, 329, 3905, -1000, -1000, -1000,
	-1000, -1000, 4073, 4071, -1000, 1192, 788, 787, 371, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 786, 785, 785,
	785, -1000, 414, 783, 383, 782, 781, 780, -1000, -1000,
	-1000, -1000, -1000, 3219, 100010, 127020, 1665, 4070, 88850, -146,
	100596, -71, -1000, -1000, 127020, -1000, -1000, -1000, 4069, -1000,
	100010, -1000, -1000, 100010, 256, 3455, -1000, 100010, -1000, 100010,
	252, 3454, -1000, -1000, 127020, -1000, 100010, 100010, -1000, 127020,
	127020, 127020, 139333, 139333, 250, -1000, 100010, 1026, -68, 1322,
	-33, -1000, -1000, -1000, -1000, 1969, -1000, 2008, -1000, -1000,
	-1000, -1000, -1000, -1000, 1730, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1221, -1000, -1000, -1000, -1000, 3926, 3920,
	-32, -1000, -1000, 26996, -1000, 2127, -1000, -1000, -1000, -1000,
	127020, 127020, -1000, -1000, 127020, 127020, -1000, -1000, -35, 2045,
	706, 1598, -1000, 84736, 2643, 3629, 4068, 2971, 3620, 1908,
	-1000, 1815, 777, -1000, 3729, 90608, 3790, 3816, 1510, -1000,
	3218, -1000, -1000, -1000, 1072, 1962, 2031, 1597, 1592, 90608,
	1803, -1000, 74688, -1000, 2941, 3731, 1596, 1583, 1596, 1596,
	1555, -1000, 90608, 2021, 1591, 1589, 1588, -1000, -1000, 1885,
	1855, -1000, -1000, 113502, 1752, -1000, 1582, 1580, 128192, 3847,
	3375, 2470, 954, 2234, -1000, 1524, 1572, 3217, -1000, -1000,
	-46, 3789, 3800, 1510, -1000, 3216, 1560, -1000, -1000, -1000,
	3722, 100010, 26996, 1770, 1761, 1748, 2020, 1559, -26, -1000,
	3784, 1898, -1000, 90022, 90022, 109400, 127020, 3864, 82392, -1000,
	2727, -1000, -1000, -1000, 3674, 3668, -1000, -1000, 1551, 1535,
	-1000, 1182, 9207, 3566, -1000, 139333, 1182, 1182, 2336, 3448,
	3039, 1792, -1000, 3053, 999, 3052, -1000, -1000, -1000, 999,
	-27, 78802, 127020, 327, -1000, 138, 52614, 52614, 138, 52614,
	138, -1000, 3756, 3447, 3446, 4067, -1000, -1000, -1000, -1000,
	-1000, 4066, 2263, 2830, -1000, -1000, 776, 2696, 3215, 127020,
	114, -1000, 100010, 3321, 77630, 3445, 139333, 1803, 2694, -1000,
	-1000, 91782, -1000, 3444, 650, 2693, -1000, 807, 4065, 3439,
	-1000, 132880, -1000, 3644, 1567, 3436, 1250, 653, 3829, -1000,
	653, 71744, -1000, 127020, -1000, -12, 5970, 83564, -70, -85,
	592, -1000, 112916, 127020, 127020, 3578, 2268, 2260, -1000, 1141,
	65825, -1000, 65825, -86, -1000, -179, 3048, 1779, 65825, -1000,
	1117, -113, 999, -1000, 999, -1000, 100010, 3280, -1000, 82392,
	82392, -1000, 1117, 1117, 1117, -1000, -1000, -1000, -1000, 4064,
	4063, 4061, 4060, -1000, -1000, 1147, 100010, 127020, 100010, -1000,
	3026, 1784, -1000, 322, -1000, 139333, -1000, 139333, 127020, 100010,
	-1000, 1147, 127020, 1147, 127020, 1147, 127020, 1147, 1147, -1000,
	-1000, -1000, -1000, -1000, 138, -1000, -1000, 146015, -1000, 52614,
	-1000, -1000, 1813, 4055, 1926, -1000, 3279, -1000, 3278, -1000,
	29, -1000, -1000, 3918, 2148, -1000, 3975, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4054, 146015, -1000, 2452, -1000,
	-1000, -1000, -1000, 100010, 100010, 100010, 100010, 127020, 3562, -1000,
	127020, 3546, 3549, 100010, -1000, 3991, -1000, -1000, 90608, -1000,
	2816, 3275, -1000, -1000, -1000, -1000, -1000, -1000, 1905, 2569,
	-1000, 2850, -1000, 1862, -1000, -1000, -1000, 146015, 57438, -1000,
	-1000, 146015, 2131, -1000, 55629, 55026, -1000, -1000, 1996, 100010,
	2938, -1000, 2938, -138, -1000, 143204, 2849, 100010, -32, 36237,
	-1000, -1000, -1000, -1000, -1000, 1071, 768, 768, 1533, 1533,
	1533, 1533, 3744, 5350, 433, 1276, 8103, 8103, 615, 615,
	615, 615, 615, 8103, 416, 863, 863, 416, 416, 416,
	416, 416, 863, 863, 863, 8103, 8103, 8103, 863, 146194,
	19078, 13996, 52614, 52614, 1534, 2222, 690, 13505, 52614, 6460,
	6460, 6460, 6460, -1000, 2460, -1000, -1000, -1000, -1000, 3206,
	775, 56835, 56835, -1000, -1000, -1000, -1000, 28847, 52614, -1000,
	-1000, -1000, -1000, 39288, -1000, -1000, 13349, -331, 587, -1000,
	315, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 585, -131, -14, -1000, 52614, 52614,
	52614, 584, -1000, 311, 52614, 127020, -1000, 17307, 907, -188,
	-1000, -94, 1584, -1000, 52614, -1000, -1000, 1532, -1000, 1531,
	1530, 1529, -1000, 774, 581, -1000, 305, -1000, 2499, 773,
	771, 52614, -1000, -1000, -1000, -1000, -1000, 141983, -1000, -1000,
	141804, -1000, -1000, 141518, -1000, -1000, 141339, -1000, -1000, -1000,
	-1000, -1000, 145550, 16472, 14997, 12850, 7162, 12550, 12147, -95,
	578, -96, 567, 1070, 1064, 559, 558, 548, -97, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -102, 545, -1000, 3203, -131, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 541, -1000, 540, -1000, 145264, -131,
	539, 1103, -1000, 56835, 56835, 56835, 56835, 520, -1000, 142918,
	-1000, 145085, 38685, 38685, 38685, 519, 144781, 52614, -131, -105,
	-1000, -108, -1000, -1000, -1000, -1000, 651, -110, 1176, 38064,
	61050, 26996, -1000, 1176, 1176, 52614, -1000, 52614, 2869, -1000,
	-1000, -1000, -1000, 2861, 2639, 3054, 62244, -1000, -1000, -1000,
	-1000, 112330, -1000, 3891, 3001, -1000, 112330, -1000, -1000, 127020,
	650, -1000, 112330, 112330, 26996, 1048, -1000, 1048, 112330, 925,
	-1000, -1000, -1000, -1000, -1000, 512, 73514, -14, 275, 26996,
	1149, -1000, -1000, 3006, 3006, 3006, 3006, 3006, 100010, -1000,
	-1000, 139333, 1528, -30, -103, 3047, -1000, 3860, -1000, 2396,
	-1000, 74688, -1000, 921, 1305, 26996, -1000, -1000, -1000, 769,
	-1000, 3905, 3905, -1000, 3905, 139333, 3196, 190, 3045, -1000,
	2601, -28, 180, 139333, 4053, -1000, -1000, 256, -1000, 100010,
	256, 256, -1000, 100010, 100010, 2519, -1000, 262, -1000, 257,
	-1000, -1000, -146, -1000, 1160, 36237, -1000, 1969, -1000, -1000,
	1754, -1000, 2283, -1000, 1385, -1000, -1000, 36237, -1000, 3584,
	-1000, 2009, -1000, -1000, -1000, -1000, 2448, 127020, 127020, 100010,
	-1000, 110572, 127020, -1000, 2413, 139333, -1000, 2692, 132294, 2672,
	131708, 74688, -1000, -1000, 767, 1080, 2845, 2844, 1246, 127020,
	127020, 2842, 131122, 130536, -1000, 4052, 127020, 2346, 52614, 110572,
	3717, 2496, 2122, 138, 138, -1000, 138, -1000, -1000, 766,
	1452, 100010, 100010, 127020, 139333, 100010, 2296, -1000, -1000, -1000,
	-1000, -1000, 91194, -1000, -1000, 1596, -1000, -1000, -1000, 1596,
	1803, 2290, 127020, 139333, 100010, 139333, 129950, 2233, 129364, 2230,
	-1000, -1000, 2209, 2006, 127020, -1000, -1000, -1000, -1000, -1000,
	1608, -1000, 954, 1519, 3191, 52614, 52614, 2420, 138, 138,
	-1000, 138, 764, 26996, 2227, -1000, 3298, 127020, 3974, 128778,
	3973, 127020, 127020, 127020, 139333, 3642, 127020, -1000, -113, -29,
	-266, -1000, 1021, 1019, -205, -1000, 3864, -1000, 1017, 2383,
	127020, 139333, -1000, 128192, 9207, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2409, 80002, 1256, 127020, 1470, -1000, -1000, 2004,
	1509, 1501, 90608, 2377, 2003, 2109, 139333, 65825, 1143, 65825,
	2987, -1000, -1000, 24588, -1000, 146015, 146015, -1000, 146015, -1000,
	77630, 82392, 127020, -1000, -1000, 1201, 127020, 84150, 1102, 3435,
	70568, -205, 1117, 90022, 82392, 3320, 127020, 2926, 127020, -1000,
	-1000, 1803, 3432, 650, 2689, -1000, 139333, 3828, 3430, 759,
	4051, 4049, -1000, 100010, 2594, 2687, -1000, -1000, 127606, 3438,
	954, 127020, 1176, 62244, 2258, -1000, 68807, 1224, 127020, 2123,
	170, -1000, -1000, -1000, 17, 127020, -1000, 940, -1000, -1000,
	5970, 5970, 1117, -266, 758, 66421, -116, -1000, 264, 757,
	1016, 1015, -1000, 3115, -1000, -179, -1000, 82392, 1141, 65825,
	3188, -179, 3044, 3186, -1000, -1000, 1159, -1000, 1698, 3043,
	1117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -15, -1000, 2001, 2098, 127020, -146, -146, -53,
	-30, -1000, 1147, -1000, 1147, -1000, 1147, -1000, -1000, -1000,
	146015, -1000, -1000, -1000, 1924, 1923, 127020, -1000, 3274, -1000,
	127020, -1000, -1000, 26996, 127020, 100010, 26996, 100010, 3265, 3261,
	-1000, -1000, -1000, 127020, -1000, -1000, 127020, -1000, -1000, -1000,
	-1000, -1000, -1000, 1272, -1000, 2131, 2566, -1000, 751, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2776, -1000,
	-31, 35031, 1052, -1000, -1000, 100010, -17, -32, 52614, 52614,
	10755, 10649, 52614, 56835, 56835, -1000, 52614, 9227, -1000, -1000,
	-1000, -1000, -1000, 3184, 740, 52614, 74688, 8284, 7804, -1000,
	511, 11316, 416, -1000, 52614, -1000, 543, -1000, 509, 37461,
	-1000, 143848, -50, -117, -1000, 20336, -131, -118, -1000, -1000,
	920, -1000, 3486, -1000, 52614, 144632, 2746, 2211, 2124, 1933,
	3905, 3969, 23984, -1000, 72331, 1177, 2526, 141053, -1000, -1000,
	-1000, -1000, 74688, 74688, 52614, 52614, -1000, 52614, 52614, 52614,
	-1000, -1000, -1000, 3905, 1065, -1000, -1000, -1000, 1065, -1000,
	-1000, 1596, -1000, 1596, -1000, 52614, -1000, -1000, 3180, 52614,
	-1000, 74688, 74688, 56835, 56835, 56835, 56835, 56835, 56835, 56835,
	56835, 56835, 56835, 56835, 56835, 56835, 56835, 56835, 56835, 56835,
	56835, 56835, 56835, 2853, 56835, 3882, 3882, 3882, 1237, -1000,
	3249, 3180, 52614, 52614, 74688, 508, 503, 499, -1000, 52614,
	-131, -1000, -1000, 8075, 739, -1000, 2768, -1000, 3114, -1000,
	52614, -1000, -141, -1000, 2797, -1000, -1000, 3114, 3114, -119,
	146015, 62244, 62244, -1000, 737, 52614, 2858, -1000, -1000, 906,
	-329, -1000, 1014, -1000, -1000, -1000, -1000, -1000, -1000, 1012,
	-1000, 650, -1000, -1000, -1000, 191, 112330, 112330, 905, -1000,
	-124, -1000, -1000, -140, -1000, 3826, 497, 26996, -1000, 1176,
	3948, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2884, -267,
	139333, 139333, 1999, 2544, 3968, -1000, 3907, 918, 903, 169,
	3905, 493, 491, 483, -146, 139333, 139333, 1980, 75284, 139333,
	-1000, -1000, -1000, 256, -1000, -1000, -1000, 252, -1000, -1000,
	-1000, -1000, 2939, -1000, -33, -1000, -1000, -1000, 52614, -1000,
	1106, -1000, -1000, 3628, 736, 1495, 1479, -1000, -150, -1000,
	1011, -1000, -1000, -1000, -1000, 3177, -1000, 3424, -1000, 2683,
	-1000, 1229, 2682, 1965, -1000, 52614, 735, 2976, 732, 731,
	4047, 2315, 4043, 1249, 3421, 2519, 3420, 2519, -1000, -1000,
	-1000, 1077, -1000, 146015, -155, -1000, 2496, -1000, 730, 729,
	-1000, -35, 1852, 683, 1458, 1158, -1000, -1000, 52614, 52614,
	111744, -1000, 498, 3627, -18, -1000, -1000, -1000, 1979, 1455,
	1402, -1000, -1000, -1000, -1000, 1803, 1942, 1384, 1374, -1000,
	-1000, -1000, -1000, -1000, 2681, -1000, 127020, -1000, 3414, 127020,
	127020, 1157, -1000, 3339, 3329, 1062, 127020, 52614, 52614, 144602,
	144313, -1000, 1156, -1000, -1000, 52614, -1000, -46, 1370, 3773,
	2679, 100010, -1000, 2519, 3410, 1369, -1000, 1364, -1000, -1000,
	-1000, 3769, 3767, 1381, -1000, 109400, 82392, 82392, 3864, 65825,
	-1000, -1000, -1000, 82392, -1000, -1000, 79406, -1000, -1000, 1182,
	127020, 139333, 100010, 2002, -1000, -1000, 88850, 89436, 127020, 3039,
	-146, 999, -1000, 2698, 999, 1143, 3175, -1000, 2918, -1000,
	1153, 100010, 4042, 480, -156, -47, 74688, -1000, -1000, -1000,
	-1000, 2672, 100010, 127020, 1456, 2975, 127020, 127020, 3825, -1000,
	2620, 688, 100010, 1054, -1000, 3891, -1000, -1000, -1000, 127020,
	-1000, -1000, 1151, -1000, 3760, 100010, 3824, 3402, 1149, 138,
	100010, 3938, -1000, -1000, 3822, 100010, 3370, 2592, 2675, 2804,
	954, 82978, 1149, 2525, -82, -1000, 2123, 36840, 3624, -162,
	-1000, -1000, -1000, 1176, 71744, 62244, 52614, 4041, -164, -1000,
	-1000, -1000, -1000, -1000, 109400, 82392, 1117, 127020, 127020, 4040,
	82392, 82392, 82392, -49, 722, -1000, 1005, 997, 994, -1000,
	-1000, -1000, -1000, -1000, -1000, 993, 992, 984, 979, 1141,
	-1000, -1000, -179, 65825, 1141, 65825, 138, -1000, 2541, 100010,
	82392, -1000, 23380, 127020, 3026, -1000, -1000, -1000, -1000, -1000,
	-1000, 1147, 3967, -205, -1000, -1000, -1000, 2424, 2631, 2424,
	2090, 2083, -1000, -1000, -1000, 2561, -1000, -1000, -1000, -1000,
	2923, 3609, 26996, 3759, 6460, 52614, 52614, 5663, 7690, 6336,
	6460, 52614, 52614, 74688, 7113, -170, 52614, 52614, -1000, 52614,
	900, 146015, -1000, 3966, 52614, 479, 476, -1000, -1000, -1000,
	3900, -1000, -1000, -1000, 146015, 52614, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 475, -1000, 115, -1000, -1000, -1000, 135810,
	-1000, 52614, 474, 3711, -1000, 471, 470, 10196, 582, 140874,
	140588, 140409, 467, -1000, -1000, 464, 461, 146015, 3249, 146015,
	-1000, -1000, 1284, 1284, 1545, 1545, 1545, 1545, 3882, 1067,
	648, 1058, 681, 681, 681, 637, 1237, 1237, 681, 681,
	681, 1237, 3173, 2856, 721, 8570, -1000, -1000, 146015, 146015,
	460, -1000, -1000, -1000, -131, 459, 8075, -1000, 3110, 3702,
	146015, -1000, 62244, 3110, 3110, -1000, -1000, 2639, 127020, 146015,
	62244, -1000, 3001, -1000, 21562, 20952, -1000, 26996, -1000, -1000,
	-1000, -1000, 3891, -1000, 73514, -1000, 720, -1000, 30, -1000,
	3948, -1000, 978, -1000, -1000, 82392, 82392, 4038, 4037, 4035,
	3965, 3960, 2538, 3958, 3006, -1000, 3121, -267, -182, 127020,
	-1000, -1000, 899, 4034, 913, 26996, 455, -1000, -1000, -1000,
	-146, -146, 127020, 3169, 100010, 127020, 1623, -146, -1000, -1000,
	-1000, 3575, 146015, 3248, 3100, 3093, 127020, 127020, -1000, 110572,
	36237, 1751, 111158, 127020, 3368, -1000, 3366, -1000, 1246, 5274,
	140101, 62840, -1000, 62840, 127020, -1000, -1000, -1000, -1000, 2338,
	1697, 4032, 1295, -1000, 3661, 127020, -1000, 127020, -1000, -1000,
	-1000, 110572, -1000, 127020, 127020, 100010, 127020, -1000, 139333, 3348,
	-173, 146015, -51, -1000, 975, -1000, 1568, -1000, 22776, 127020,
	139333, 100010, 127020, 139333, 100010, 3363, 1220, 127020, -1000, 1219,
	2469, -1000, -1000, 3327, -1000, 146015, 144134, 138, 52614, 3347,
	-176, 26996, -1000, 3951, 3950, 3360, 3665, -1000, 127020, 3949,
	127020, 100010, 3573, -1000, -1000, -1000, 1144, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1938, 1350, 1344, 2591, 2590, 2543,
	-53, 2377, 1143, -55, 719, -1000, 973, -1000, -1000, 972,
	970, 1143, -1000, 82392, 65825, 4031, 650, -1000, 2962, -1000,
	106462, 84150, 2576, -1000, -1000, 718, 127020, 127020, 717, -1000,
	138, -1000, 4027, 110572, 716, -1000, 2533, -1000, 897, -1000,
	-1000, 2848, 139333, 1803, 138, 100010, -1000, 1140, 650, 454,
	-67, -1000, 3409, 1243, 26996, 100010, 3359, 2818, 954, 82978,
	-1000, 1567, 2904, -1000, -81, -1000, 797, 138, 2525, -1000,
	-82, 146015, -1000, 968, -181, 453, -1000, 3571, -1000, -1000,
	-183, -1000, -1000, 5251, 5251, 82392, 65825, 82392, 82392, 82392,
	65825, 82392, -1000, 1141, 999, -1000, -179, -1000, 2709, -1000,
	1117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26996, 1937,
	-1000, 713, 712, -1000, -1000, -1000, -1000, 3609, 6460, 6460,
	52614, 52614, 52614, 6460, 7113, -191, -1000, 6460, 6460, -131,
	-1000, -1000, 143848, -1000, -1000, -1000, 146015, -1000, 22172, 2428,
	-1000, 139952, -1000, 35031, -1000, -1000, 52614, 52614, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 56835, 3168, 710, 74688,
	-1000, -1000, 452, 1174, 52614, 54423, 2797, 1174, 1174, -1000,
	-196, -1000, -1000, -1000, 3891, -1000, 3891, 30, -1000, -1000,
	4026, 26996, -1000, 82392, -1000, -1000, -1000, -1000, -1000, -1000,
	4025, 4024, 2661, 4022, 4021, -1000, 2539, -1000, -1000, 3345,
	-203, 911, -1000, 4019, -1000, -1000, 162, 139333, 3167, 153,
	3025, -1000, 138, -1000, -1000, -1000, -1000, -1000, -1000, 3024,
	3818, -1000, 2208, -1000, 127020, 127020, -1000, 127020, -1000, 26996,
	127020, 3123, 1421, -1000, 1080, 2840, 708, 56835, 1271, 100010,
	1089, 3080, 3077, -1000, 3844, 3694, 3073, -198, -1000, 127020,
	52614, 127020, -204, -211, 2645, -1000, -1000, 1270, 1417, 52614,
	1269, -1000, -1000, -1000, 74688, 707, 2519, 2519, -1000, -212,
	-214, -1000, -1000, -1000, 52614, 1341, 127020, 35634, -1000, 4017,
	3627, -1000, -1000, -1000, -1000, -1000, -1000, 127020, 127020, -1000,
	127020, 127020, -1000, 52614, -1000, 143669, 52614, 1340, -1000, -1000,
	-1000, 3943, 2519, 26996, 2519, -1000, 2519, 3665, 1288, 2617,
	127020, 139333, 100010, 2051, 2051, 3245, -1000, -1000, -1000, 2794,
	2794, 82392, 65825, 65825, -1000, -83, 1143, -1000, 3817, 2427,
	4015, -1000, -1000, -1000, -1000, 2839, -1000, -1000, -1000, 127020,
	2837, 3074, 62840, 703, 701, 127020, 1118, -1000, -219, 84150,
	1102, 1099, -1000, -84, 699, -1000, 963, -1000, -1000, -1000,
	-1000, 650, -1000, 2934, 3815, -1000, 3942, 695, 694, 127020,
	2588, 692, 26996, 3622, 954, 82978, -1000, 3438, 2123, -1000,
	2668, 127020, 3616, -1000, 2904, 690, -1000, 1117, 686, 1117,
	-1000, -221, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1141, -91, -1000, 1055, 971, -1000, -1000, -1000, 100010,
	100010, 52614, 52614, -1000, 6460, 6460, 6460, -1000, 435, -1000,
	-1000, 2525, 3690, -1000, -107, 139922, 18774, 5610, 56835, 74688,
	-224, -1000, -1000, 127020, 146015, -115, -1000, 146015, 685, 684,
	580, -1000, -1000, -1000, 896, 649, -1000, -1000, -1000, -1000,
	4012, -1000, -1000, -1000, -1000, 139333, 4011, -1000, 139333, -146,
	139333, 139333, 1918, -1000, 109986, 127020, -1000, -1000, 1965, 2325,
	-1000, -1000, 127020, 2674, -1000, -1000, -1000, 1127, 52614, 8570,
	56835, 680, 52614, -1000, 677, 667, 3814, 3538, -1000, 2951,
	3178, 2265, 62840, -1000, 3609, -1000, 18680, -1000, 1235, 2201,
	-1000, -1000, -1000, -1000, 146015, 56835, 3665, 62840, -1000, -1000,
	666, 665, 146015, 661, 960, 3166, -1000, -1000, -1000, -1000,
	-205, -205, -1000, 146015, 138, 146015, 660, 3773, -1000, -1000,
	-1000, -1000, 2519, 100010, 959, -1000, -1000, -1000, 1331, -1000,
	-1000, -1000, -1000, 4010, 4008, 3162, 88850, -1000, -231, -1000,
	-1000, -1000, 2243, 138, 1102, -1000, -1000, 2576, 659, -1000,
	1116, 2805, 2805, -232, 62840, 62840, -233, 2574, 2930, -1000,
	431, 3813, 1099, -1000, 3895, -1000, 3524, 3524, 52614, 3805,
	3570, -1000, 138, -1000, 3938, 62840, -1000, 100010, 62840, 2583,
	2323, 2792, 82978, -1000, 2804, -1000, -1000, -238, 127020, 2123,
	-1000, -1000, 82392, -1000, -1000, -1000, 2709, -1000, 127020, -1000,
	127020, -1000, -1000, -239, -244, -1000, 2411, 52614, 35031, -1000,
	-1000, 5610, -245, -1000, -130, -1000, 3798, 54423, 4006, 4005,
	4004, -1000, -1000, -1000, -267, -1000, -146, -146, -146, 127020,
	-1000, 2189, -1000, 2672, -1000, -1000, 3357, -1000, 3106, 657,
	18025, 8570, 2770, 127020, 17607, 1803, 1803, -1000, 3796, 3170,
	-1000, -1000, 2420, 654, -1000, -1000, -1000, -1000, 1052, 127020,
	1116, 3105, 100010, 8570, 1244, -246, 2424, 2424, 52614, 34428,
	2443, -1000, 52614, -1000, -1000, 3665, 65825, 139333, -1000, -1000,
	139333, 2579, -1000, 3148, 3886, -1000, 2574, 127020, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1235, -254, -255, -1000, -1000, 3657, -1000, 3568, 2962, 138,
	-1000, -1000, -1000, -256, 146015, 138, 4001, 1140, 429, -264,
	1243, -270, 100010, 2277, -1000, 954, -1000, 2818, 1176, 3500,
	-1000, -276, -1000, -278, -283, -1000, -1000, 419, 53820, 53820,
	53820, -131, -138, -1000, 127020, 652, -1000, -1000, -1000, -1000,
	-1000, 146, -1000, -1000, 3319, 1047, -1000, 974, 2177, 418,
	1261, 401, 400, -1000, -1000, -1000, 3073, -1000, 127020, -1000,
	-1000, -1000, 1047, 650, -1000, 52614, 1235, -285, -1000, 1218,
	-286, -1000, 1216, -292, -1000, 3161, -1000, -294, 2519, -1000,
	-267, 250, 2051, 1121, 3754, -1000, -1000, -1000, 2782, -299,
	-1000, -1000, 2265, 1235, 2420, 2726, -1000, 2427, 1118, -1000,
	-1000, -1000, -1000, -1000, 1235, 646, 2265, 645, 1757, 954,
	-1000, -1000, 1596, 3622, 3496, 1503, 1117, -1000, -1000, -1000,
	3374, -1000, 58041, 2560, 2077, 142739, 3374, 3374, -1000, -1000,
	139333, 127020, 1116, 3730, -1000, 1028, 976, 1692, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1176, -300, -1000, 2770,
	146015, 1116, -1000, 2424, 3009, -1000, 2424, 3159, -1000, 2440,
	-1000, -1000, -1000, -1000, 3158, -1000, 2035, 3869, -1000, -1000,
	1116, 127020, 2420, 2265, 1116, 2053, 2048, 4000, 1102, 2574,
	2265, 62840, 2420, 62840, 2369, -1000, 127020, -1000, 2323, 1499,
	-1000, 1904, -1000, -1000, 2030, 3839, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -146, -1000, -1000, 958, -1000, 3525, -1000,
	1264, 2295, 2295, -1000, -1000, 974, -1000, -1000, 644, -1000,
	621, -1000, 139333, 2532, -1000, -1000, -1000, -1000, 1116, 2420,
	1176, -1000, 3997, -1000, 2574, -1000, 2420, -301, 1116, -302,
	2450, -1000, -1000, -205, 2277, -1000, 1873, 71744, 2068, -1000,
	-1000, 2506, 53217, 52614, -1000, 3866, -1000, -1000, 2878, -1000,
	3073, 52614, 52614, 250, 69981, 1176, 1116, -1000, -1000, 2782,
	1116, 1235, 1176, 2265, -1000, 954, 1757, 71744, -277, -1000,
	-1000, -1000, 146015, -1000, -1000, -1000, -1000, -312, -315, -1000,
	-266, 109400, -1000, 1176, -1000, 1176, 2265, -1000, 2420, 139333,
	2369, -277, -1000, 2420, 1330, -321, -1000, -1000, 2420, 1116,
	-1000, -1000, -1000, -1000, -1000, 620, -1000, 1116, 1176, 52614,
	1176, -1000, -322, -1000, 2420, -1000,
}

var sqlPgo = [...]int{
	0, 4872, 4871, 4868, 4867, 4865, 4864, 4858, 4857, 4852,
	4851, 4848, 4845, 4843, 4838, 157, 4837, 4834, 4833, 4832,
	4831, 4829, 4827, 4826, 4821, 4819, 4818, 4817, 4816, 4815,
	4814, 4813, 4812, 4811, 4810, 4809, 4808, 4801, 4799, 4796,
	4795, 4793, 4792, 4791, 4790, 4789, 4788, 4787, 4781, 4780,
	4779, 4777, 4775, 4774, 4773, 4772, 4771, 4769, 4768, 4767,
	4766, 4765, 4761, 4756, 4755, 4754, 4752, 4748, 4747, 4746,
	4745, 4741, 4739, 64, 4738, 4736, 4735, 4733, 4730, 4728,
	4723, 4722, 4721, 4720, 4718, 4711, 4710, 4708, 4705, 4704,
	4703, 4697, 4696, 4695, 71, 4693, 299, 4688, 4686, 4685,
	4681, 4680, 4676, 4675, 4674, 4672, 4671, 4670, 4669, 297,
	4668, 148, 176, 4667, 4665, 4161, 4658, 4655, 296, 4653,
	4652, 4649, 4647, 4645, 307, 4644, 4638, 4636, 4635, 4634,
	278, 4629, 4628, 4626, 4625, 4624, 4623, 67, 138, 4621,
	4619, 1809, 4618, 4617, 4616, 4615, 4611, 4610, 4609, 277,
	281, 4608, 4607, 4604, 267, 185, 4603, 294, 4600, 4596,
	4595, 4588, 4584, 4581, 4580, 4579, 4578, 4575, 4572, 4570,
	4569, 4568, 4566, 4565, 4563, 4562, 4561, 4560, 4558, 4555,
	4553, 4551, 4544, 4543, 4542, 4540, 4539, 4537, 4534, 4531,
	4529, 4528, 4527, 4526, 4524, 4523, 4522, 4520, 4519, 4518,
	272, 220, 132, 4517, 4516, 291, 287, 4515, 4511, 4506,
	4505, 4504, 3773, 4503, 4502, 4499, 4498, 4496, 4494, 4493,
	4492, 4491, 152, 12, 49, 4490, 4488, 95, 101, 93,
	85, 114, 112, 4487, 4486, 130, 4485, 140, 126, 4481,
	120, 115, 21, 22, 181, 261, 13032, 255, 4480, 4479,
	4477, 265, 214, 4476, 258, 4474, 4469, 4466, 4465, 4464,
	4463, 82, 57, 229, 4462, 4460, 159, 189, 202, 200,
	193, 192, 187, 60, 113, 89, 68, 51, 15, 104,
	231, 23, 1, 282, 4459, 280, 10, 153, 11, 37,
	4458, 4457, 4456, 4455, 3711, 134, 4453, 289, 263, 190,
	4451, 4450, 4447, 954, 4446, 4443, 53, 257, 116, 91,
	128, 20, 142, 4442, 168, 184, 40, 4441, 182, 75,
	4440, 4439, 110, 99, 9399, 12686, 4438, 4434, 125, 79,
	167, 223, 180, 162, 217, 98, 135, 179, 183, 59,
	227, 222, 197, 727, 4431, 273, 4426, 3801, 103, 204,
	172, 6089, 4422, 4415, 4413, 96, 4410, 118, 4408, 4407,
	77, 24, 3, 2, 155, 39, 41, 4, 4406, 29,
	139, 50, 25, 4403, 32, 4402, 4401, 4400, 4398, 48,
	4397, 66, 174, 4396, 4390, 302, 4388, 94, 62, 26,
	4387, 61, 235, 4386, 245, 144, 4383, 4382, 275, 215,
	4381, 76, 249, 4380, 4374, 4373, 4372, 4371, 305, 143,
	7, 141, 4369, 4367, 161, 4366, 54, 259, 216, 4365,
	65, 4364, 4355, 196, 56, 164, 306, 201, 244, 127,
	248, 203, 251, 4354, 4351, 4348, 233, 4346, 4345, 241,
	165, 4344, 4343, 262, 304, 100, 47, 88, 254, 87,
	213, 170, 4341, 218, 4340, 4339, 303, 194, 228, 43,
	8, 14, 106, 119, 4338, 5, 253, 178, 239, 133,
	4337, 7172, 2614, 2768, 246, 4336, 158, 136, 84, 137,
	169, 285, 102, 4334, 4327, 3072, 4326, 4324, 4323, 4317,
	207, 4316, 4314, 4312, 160, 175, 210, 4310, 124, 81,
	55, 27, 154, 268, 293, 129, 237, 208, 271, 4308,
	4307, 4306, 205, 4304, 105, 117, 177, 224, 276, 72,
	4303, 171, 4302, 163, 1337, 78, 173, 4299, 232, 4298,
	4296, 4293, 4291, 4289, 4287, 4281, 872, 252, 4279, 4278,
	4276, 36, 212, 4275, 284, 198, 195, 109, 58, 209,
	107, 3571, 4274, 750, 243, 69, 9, 4272, 74, 4270,
	4925, 63, 4268, 0, 14860, 10094, 12935, 14490, 4264, 8026,
	4263, 4262, 4261, 236, 86, 4260, 4259, 4257, 121, 4256,
	92, 4252, 4249, 83, 4243, 30, 16, 18, 34, 31,
	879, 44, 4241, 4240, 19, 145, 150, 4238, 301, 247,
	4234, 4227, 4223, 4220, 111, 4217, 45, 4214, 52, 4213,
	4211, 46, 17, 33, 4208, 4206, 166, 4205, 131, 225,
	186, 4204, 188, 4202, 90, 156, 4200, 4198, 4195, 73,
	70, 279, 226, 230, 97, 4194, 295, 4193, 219, 4192,
	4191, 28, 4190, 4189, 266, 123, 122, 38, 269, 146,
	42, 199, 240, 4186, 4181, 191, 4180, 4179, 4178, 286,
	4175, 3754, 283, 4174, 35, 4173, 4172, 4170, 13, 4169,
	4167, 221, 3513, 4166, 4165, 6, 4164, 211,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 631, 631, 631,
	632, 632, 633, 633, 633, 26, 51, 19, 20, 20,
	20, 20, 634, 634, 634, 634, 39, 27, 52, 32,
	32, 32, 32, 32, 225, 225, 225, 225, 25, 25,
	47, 47, 269, 269, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 627, 627, 271, 271, 270, 258,
	258, 259, 259, 260, 260, 635, 635, 272, 272, 272,
	273, 273, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 525, 525, 525, 556, 556, 556, 556, 558,
	558, 654, 654, 655, 655, 655, 655, 655, 140, 140,
	422, 422, 422, 61, 61, 61, 61, 61, 622, 622,
	227, 227, 227, 229, 229, 228, 228, 228, 228, 228,
	85, 85, 641, 641, 640, 639, 639, 639, 642, 642,
	642, 226, 226, 226, 136, 136, 136, 136, 136, 136,
	136, 136, 137, 137, 138, 138, 230, 230, 230, 232,
	232, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 237, 18, 18, 18, 119, 119,
	119, 119, 119, 119, 119, 114, 114, 560, 560, 561,
	561, 221, 221, 222, 222, 222, 222, 223, 223, 224,
	224, 224, 76, 76, 234, 234, 236, 236, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 202, 202,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 82, 82, 82, 82, 82, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 657, 657, 658,
	658, 659, 659, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 91,
	91, 383, 383, 346, 346, 92, 92, 92, 93, 93,
	94, 94, 78, 78, 619, 619, 620, 620, 620, 620,
	516, 516, 79, 628, 628, 628, 630, 630, 629, 629,
	96, 96, 421, 421, 97, 97, 97, 97, 97, 97,
	98, 98, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 106, 106, 106, 106, 106, 107, 107, 107, 104,
	104, 104, 101, 101, 101, 100, 100, 100, 105, 105,
	105, 618, 334, 334, 103, 103, 103, 102, 102, 102,
	399, 399, 108, 108, 108, 108, 347, 109, 109, 109,
	109, 109, 109, 109, 109, 112, 112, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	518, 518, 4, 4, 264, 264, 263, 263, 263, 263,
	5, 5, 5, 267, 267, 266, 265, 110, 110, 110,
	483, 483, 115, 115, 115, 437, 437, 116, 116, 116,
	116, 116, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 624, 624, 392, 392, 297, 297, 297,
	297, 128, 128, 128, 128, 129, 129, 129, 129, 130,
	130, 207, 207, 146, 146, 146, 146, 145, 145, 145,
	145, 145, 145, 145, 145, 68, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 73, 73,
	73, 149, 149, 31, 31, 31, 31, 150, 150, 651,
	651, 152, 148, 148, 148, 148, 148, 148, 148, 147,
	147, 151, 151, 151, 151, 153, 155, 155, 155, 155,
	155, 154, 154, 154, 154, 154, 156, 156, 550, 550,
	407, 407, 548, 548, 570, 570, 549, 549, 353, 353,
	353, 353, 353, 354, 354, 354, 559, 559, 559, 559,
	559, 559, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 208, 208,
	208, 209, 209, 214, 214, 215, 215, 215, 216, 216,
	216, 213, 213, 213, 210, 210, 211, 211, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 219, 219,
	217, 217, 218, 218, 662, 662, 661, 661, 220, 220,
	220, 220, 220, 183, 183, 183, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 408,
	408, 186, 186, 186, 170, 170, 158, 158, 158, 158,
	158, 158, 158, 158, 233, 233, 233, 233, 163, 163,
	163, 163, 163, 163, 163, 163, 164, 164, 164, 159,
	159, 172, 172, 172, 172, 172, 165, 165, 166, 166,
	166, 167, 167, 167, 167, 194, 194, 169, 169, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 160, 160,
	160, 160, 174, 174, 174, 174, 444, 444, 444, 200,
	200, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 197, 197, 197,
	197, 197, 197, 643, 643, 644, 644, 644, 190, 190,
	190, 190, 190, 190, 497, 497, 184, 184, 184, 184,
	189, 189, 189, 189, 192, 192, 192, 192, 427, 427,
	181, 181, 181, 182, 182, 182, 187, 187, 199, 188,
	384, 384, 185, 185, 191, 191, 191, 191, 193, 193,
	193, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	162, 162, 162, 162, 195, 195, 180, 180, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 663,
	663, 176, 176, 176, 175, 175, 175, 175, 178, 178,
	179, 179, 179, 179, 179, 179, 179, 177, 168, 198,
	621, 621, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 617, 617, 617, 617, 623, 623, 120, 120, 120,
	120, 120, 120, 120, 131, 131, 131, 131, 131, 131,
	131, 134, 134, 121, 121, 121, 121, 121, 121, 121,
	124, 124, 122, 122, 122, 122, 123, 123, 86, 86,
	86, 86, 86, 17, 17, 17, 87, 87, 288, 288,
	242, 242, 242, 371, 371, 243, 243, 361, 361, 361,
	361, 238, 238, 239, 239, 240, 241, 241, 88, 88,
	664, 664, 664, 636, 636, 636, 637, 637, 637, 637,
	637, 637, 355, 355, 356, 356, 463, 463, 463, 463,
	463, 359, 359, 359, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 369, 370, 370, 362, 362, 368, 367,
	367, 366, 366, 365, 365, 363, 364, 364, 364, 373,
	373, 372, 375, 375, 374, 462, 579, 579, 581, 581,
	581, 581, 581, 581, 581, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 445, 445, 665, 665, 666, 667, 577, 577,
	577, 578, 573, 573, 574, 574, 574, 574, 574, 357,
	357, 358, 358, 358, 358, 575, 576, 390, 390, 501,
	580, 580, 582, 582, 584, 668, 668, 668, 668, 668,
	668, 669, 669, 669, 461, 461, 460, 460, 459, 459,
	381, 381, 585, 585, 585, 585, 586, 586, 586, 586,
	586, 589, 588, 587, 587, 587, 587, 587, 90, 90,
	90, 424, 424, 423, 423, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	204, 204, 300, 300, 300, 84, 84, 84, 14, 14,
	14, 14, 14, 14, 14, 315, 315, 15, 15, 15,
	15, 638, 638, 638, 89, 89, 89, 89, 89, 89,
	379, 379, 379, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 626,
	626, 625, 625, 301, 301, 671, 671, 95, 95, 95,
	95, 95, 95, 95, 95, 519, 519, 520, 520, 83,
	83, 83, 83, 83, 446, 446, 443, 443, 442, 442,
	389, 389, 499, 499, 499, 500, 305, 305, 306, 306,
	261, 261, 261, 34, 33, 24, 24, 28, 28, 29,
	29, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	30, 30, 54, 54, 54, 54, 55, 55, 55, 55,
	58, 58, 59, 59, 53, 53, 53, 53, 56, 56,
	50, 50, 60, 60, 60, 60, 60, 645, 647, 647,
	646, 646, 650, 650, 650, 650, 650, 650, 648, 648,
	336, 336, 649, 649, 652, 652, 653, 653, 127, 127,
	132, 132, 132, 132, 132, 133, 133, 133, 133, 135,
	135, 135, 135, 144, 144, 203, 203, 203, 203, 203,
	203, 203, 62, 62, 62, 62, 75, 75, 75, 75,
	142, 673, 673, 673, 143, 143, 143, 672, 672, 298,
	298, 456, 456, 457, 457, 674, 674, 458, 458, 458,
	458, 458, 291, 290, 292, 292, 293, 293, 81, 81,
	81, 281, 281, 280, 282, 282, 283, 283, 278, 278,
	562, 562, 285, 285, 285, 286, 286, 274, 274, 275,
	275, 276, 276, 277, 277, 289, 289, 557, 557, 675,
	675, 118, 118, 118, 206, 206, 345, 345, 345, 453,
	453, 453, 382, 382, 312, 312, 455, 455, 455, 455,
	455, 420, 420, 420, 205, 205, 397, 397, 410, 410,
	411, 411, 513, 513, 412, 125, 125, 126, 126, 141,
	141, 246, 246, 244, 244, 244, 244, 244, 244, 244,
	244, 251, 251, 252, 252, 253, 253, 254, 255, 255,
	255, 255, 400, 400, 256, 256, 256, 245, 245, 245,
	247, 247, 247, 247, 247, 247, 247, 250, 250, 250,
	250, 257, 257, 257, 249, 249, 596, 596, 596, 598,
	598, 600, 600, 599, 599, 595, 595, 597, 597, 670,
	670, 426, 426, 426, 378, 380, 376, 376, 377, 377,
	387, 387, 385, 386, 386, 388, 388, 498, 498, 498,
	262, 262, 262, 417, 417, 417, 417, 418, 418, 449,
	449, 447, 447, 447, 447, 448, 448, 450, 450, 450,
	451, 451, 452, 452, 414, 414, 415, 415, 416, 416,
	416, 416, 479, 479, 248, 248, 248, 394, 394, 394,
	395, 395, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 470, 470, 468, 468, 468, 468, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 503, 504,
	504, 396, 396, 505, 454, 454, 614, 614, 614, 615,
	615, 496, 496, 506, 506, 506, 506, 506, 506, 494,
	494, 495, 495, 514, 515, 515, 430, 430, 430, 430,
	428, 428, 431, 431, 431, 431, 431, 429, 429, 507,
	507, 507, 507, 419, 419, 508, 508, 508, 508, 509,
	510, 510, 511, 511, 464, 465, 465, 521, 521, 521,
	521, 523, 393, 393, 393, 393, 393, 572, 571, 571,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 538, 538, 538, 538, 538, 538, 538, 524, 524,
	524, 524, 524, 528, 528, 528, 527, 527, 527, 527,
	527, 527, 527, 527, 527, 527, 527, 529, 529, 534,
	534, 535, 535, 535, 530, 531, 536, 536, 536, 536,
	676, 676, 540, 540, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 526, 526, 526, 533, 533, 533, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 438, 438, 440, 440, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 473, 473, 473,
	473, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 590, 590, 590, 590,
	590, 590, 590, 590, 475, 475, 593, 593, 594, 594,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 601, 601, 602, 602, 604, 604, 605, 605, 606,
	607, 607, 607, 608, 609, 609, 603, 603, 610, 610,
	610, 610, 611, 611, 612, 612, 612, 612, 612, 613,
	613, 613, 613, 613, 485, 485, 486, 486, 492, 492,
	492, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 352, 352, 351, 302,
	302, 302, 302, 302, 302, 405, 405, 403, 403, 403,
	406, 406, 404, 404, 402, 402, 401, 401, 482, 482,
	480, 480, 484, 484, 432, 432, 539, 539, 539, 539,
	539, 539, 539, 539, 433, 433, 433, 441, 434, 434,
	435, 435, 435, 435, 435, 476, 477, 436, 436, 436,
	478, 478, 487, 491, 491, 490, 489, 489, 488, 488,
	466, 466, 467, 467, 413, 413, 677, 677, 409, 409,
	512, 512, 512, 512, 349, 349, 398, 398, 348, 348,
	340, 340, 341, 341, 341, 341, 391, 391, 493, 493,
	541, 541, 542, 542, 543, 543, 544, 544, 545, 546,
	547, 481, 481, 323, 322, 309, 310, 321, 320, 319,
	308, 311, 316, 317, 318, 313, 314, 330, 329, 328,
	279, 284, 335, 337, 337, 339, 339, 338, 338, 325,
	326, 327, 517, 307, 342, 342, 343, 343, 343, 344,
	344, 344, 344, 303, 303, 304, 304, 331, 331, 332,
	333, 333, 324, 324, 324, 294, 294, 294, 295, 295,
	296, 296, 555, 555, 552, 552, 552, 553, 553, 553,
	554, 554, 554, 554, 551, 551, 551, 551, 551, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 564, 564, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 566, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 569, 569,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 3, 2, 1, 4, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 3, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 1, 2, 2,
	2, 9, 2, 1, 0, 1, 1, 0, 1, 2,
	0, 2, 2, 0, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	3, 5, 7, 3, 3, 3, 4, 8, 6, 4,
	5, 5, 5, 3, 0, 1, 1, 1, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 5, 7,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 12, 15, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 1, 1, 1, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 3,
	6, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 10, 11,
	9, 5, 3, 1, 5, 9, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 6, 1, 3, 1,
	2, 0, 1, 2, 3, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 3, 0, 4, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 8, 11, 5,
	4, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 14, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 635, -111, -108, -76, -74, -115, -116,
	-97, -117, -110, -139, -144, -125, -126, -127, -140, -146,
	-203, -208, -209, -210, -211, -220, -3, -61, -63, -77,
	-96, -98, -109, -119, -118, -120, -128, -136, -131, -114,
	-68, -141, -145, -157, -204, -205, -206, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -151, -152, 484, -62, -75, -143, -142, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -84, -80, -91, -85, -78,
	-79, -82, -656, 106, -597, -99, -102, -135, -660, 168,
	232, -121, -122, -123, 386, -129, -130, 446, -132, -133,
	-134, 449, 169, -70, -69, 162, -244, -246, -148, -147,
	-149, -207, -158, -159, -160, -161, -162, -164, -165, -167,
	-194, -168, -169, -170, -171, -172, -173, -177, -197, -174,
	-175, -176, -179, -178, -180, -185, -181, -182, -183, -184,
	-186, -187, -189, -190, -191, -192, -193, -195, -196, 489,
	-188, -198, -166, -199, 554, 52, 505, 85, 152, 457,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-60, -4, -5, -81, -83, -86, -87, -88, -95, -89,
	-90, -596, -100, -101, -104, -106, -107, -103, -105, 445,
	606, -247, -245, 632, 611, 570, -163, -21, -26, -22,
	-23, -25, -27, -24, -28, -29, -30, -46, -51, -48,
	-49, -47, -50, -52, -53, -54, -55, -56, -57, -58,
	-59, -33, -39, -40, -34, -35, -36, -37, -38, -41,
	-42, -43, -44, -45, -19, -20, -32, 593, 602, -250,
	-248, -249, -257, 476, 578, 527, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, -347, 2, -325, -331, -332, -333, -324, -294,
	-566, -569, 4, -563, -567, 175, 242, 347, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 46, 47, 48, 49, 50, 51, 52, 56, 58,
	62, 63, 64, 65, 66, 67, 71, 76, 77, 82,
	83, 84, 85, 86, 87, 88, 89, 95, 92, 93,
	94, 96, 98, 100, 101, 102, 103, 104, 105, 107,
	108, 109, 111, 112, 113, 121, 122, 123, 124, 125,
	127, 133, 128, 134, 137, 132, 136, 138, 140, 141,
	142, 145, 146, 147, 149, 150, 151, 153, 154, 155,
	157, 158, 160, 161, 162, 165, 163, 166, 164, 167,
	168, 169, 170, 173, 181, 182, 183, 188, 190, 191,
	192, 194, 195, 198, 199, 200, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 213, 217, 219, 220, 221,
	222, 223, 224, 225, 231, 232, 234, 235, 236, 237,
	238, 243, 244, 245, 249, 255, 256, 260, 261, 262,
	264, 268, 269, 270, 271, 272, 273, 275, 277, 276,
	279, 282, 283, 286, 287, 288, 289, 290, 291, 295,
	296, 292, 297, 298, 300, 301, 304, 302, 305, 306,
	303, 307, 310, 311, 312, 313, 314, 315, 316, 317,
	318, 319, 320, 321, 308, 309, 324, 322, 326, 327,
	328, 329, 330, 345, 340, 341, 342, 334, 335, 331,
	336, 332, 333, 337, 338, 344, 339, 349, 350, 351,
	352, 355, 229, 248, 357, 358, 361, 363, 380, 366,
	367, 368, 371, 372, 375, 378, 379, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 391, 392, 394, 395,
	396, 398, 399, 400, 402, 404, 405, 407, 408, 409,
	411, 412, 413, 414, 415, 416, 417, 418, 420, 421,
	423, 422, 424, 426, 428, 429, 430, 436, 437, 444,
	438, 440, 441, 442, 443, 445, 446, 447, 448, 449,
	451, 452, 453, 455, 456, 457, 458, 459, 461, 463,
	464, 468, 469, 470, 486, 487, 508, 465, 466, 467,
	471, 472, 473, 474, 475, 479, 477, 478, 480, 481,
	482, 484, 485, 488, 489, 491, 492, 493, 494, 495,
	496, 497, 500, 502, 503, 504, 505, 506, 526, 507,
	509, 513, 514, 515, 516, 510, 511, 525, 518, 519,
	520, 522, 523, 528, 529, 530, 531, 532, 533, 535,
	536, 538, 546, 558, 547, 548, 549, 551, 554, 555,
	556, 557, 544, 559, 560, 563, 564, 568, 565, 569,
	566, 567, 570, 572, 575, 576, 577, 583, 582, 584,
	585, 586, 588, 589, 594, 595, 597, 598, 599, 37,
	53, 54, 57, 59, 61, 72, 73, 74, 78, 129,
	130, 159, 171, 172, 184, 201, 202, 214, 216, 226,
	227, 228, 250, 251, 253, 258, 280, 354, 356, 373,
	377, 393, 397, 401, 403, 419, 460, 498, 512, 517,
	539, 540, 541, 542, 550, 552, 578, 579, 580, 587,
	596, -347, 2, -325, 364, -318, 2, -294, -294, 404,
	29, 2, 29, 392, 478, 530, 532, 2, -624, -392,
	2, 29, -297, -294, 106, 212, 476, -318, 2, -624,
	212, -392, 26, 2, -294, 2, 378, 23, 28, 69,
	80, 102, 145, 170, 193, 198, -659, 380, 412, 463,
	480, 525, 536, 551, 2, 582, 301, 477, 527, 242,
	124, 556, 471, -638, 468, 469, 378, 410, 455, 215,
	571, -298, 2, 465, -294, 301, 2, 635, 98, 77,
	460, 481, -154, 2, 291, 547, -155, -156, -153, 539,
	-550, 471, 455, 324, -294, 635, 635, 635, 29, -307,
	2, -294, -307, 2, -212, 2, -307, -661, -219, -218,
	-217, 22, 437, 183, 273, 196, 233, 329, 407, 194,
	50, -212, 2, 527, 242, 471, 124, 523, 635, 635,
	2, 527, 383, 582, 477, 124, 416, 242, 556, 198,
	145, 28, 71, 48, 533, 610, 471, -638, 607, 608,
	301, 131, -622, 2, -616, 4, -567, -563, -341, -340,
	527, 533, 124, -333, -324, 624, -332, 635, 635, 635,
	635, 2, 261, 262, 414, 413, 481, 482, 29, 635,
	635, 635, 635, 468, 2, 170, 23, 28, 69, 97,
	102, 131, 193, 198, 369, -657, 380, 412, 480, 525,
	529, 536, 551, -637, 507, 71, 443, 471, -636, -638,
	301, 556, 145, -442, 124, 291, 210, 564, 532, 530,
	562, 137, 249, 567, 566, 635, 635, -112, 2, 632,
	33, 32, -111, -115, 147, 484, -237, 527, 254, 2,
	-294, 635, 635, 635, 2, 261, 262, 468, 469, 29,
	635, 635, 196, -616, 523, 2, 635, 635, 635, 2,
	29, 261, 262, 468, 469, 254, 2, 71, 473, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 2, -201, 481, 507,
	222, 49, 48, 77, 29, 411, 82, 384, 125, 131,
	154, 557, 213, 242, 243, 269, 97, 98, -444, 46,
	262, 71, 261, 469, -643, 468, -497, 528, 472, 478,
	522, 89, 273, 465, 547, 549, 106, 572, 456, 599,
	416, 417, 520, 430, 518, 292, 163, 197, 4, 124,
	324, 455, 483, 277, 276, 558, 539, 291, 464, 387,
	87, 635, -670, 2, 527, -672, 2, 547, 547, 2,
	-672, 2, -672, 2, -672, 2, -673, 547, 596, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, -245,
	-247, -246, 635, 635, 635, 635, 635, 635, 635, -201,
	481, 2, 77, 29, 29, -385, -387, 561, 252, 156,
	370, -244, -246, 2, -596, 558, 481, -548, 2, -471,
	-570, -473, 622, 623, 615, 524, 70, -351, 346, 600,
	-485, 131, 562, 364, -569, -474, -487, 159, 380, 460,
	-406, 8, 9, 5, 6, 7, -303, -475, -481, 553,
	174, 353, -344, 636, 10, 632, -593, -246, -486, 38,
	216, 68, -552, -343, -304, -524, 253, -342, -324, -590,
	-591, 4, -563, -564, -553, -527, -535, -531, -532, -538,
	-294, -566, 80, 115, 116, 114, 119, 118, 294, 293,
	120, 117, 483, 571, 69, 37, 226, 227, 258, 354,
	228, 78, -592, 146, -565, 250, 251, 498, 54, 419,
	184, 130, 129, 356, 59, 57, 579, -536, 126, 539,
	540, 541, 542, 201, 202, 61, 171, 172, 377, 401,
	517, 550, 552, 214, 280, 45, 110, 197, 247, 230,
	257, 259, 263, 281, 284, 325, 343, 348, 374, 376,
	454, 490, -676, 580, 512, 72, 73, 189, -598, 422,
	-599, -318, -598, 635, 635, 637, 635, -376, -378, -380,
	2, 29, 143, 632, 2, -502, 2, -503, -507, -246,
	274, -506, 632, -504, 630, -325, 365, -594, 461, -590,
	-591, -303, -324, -343, 4, -563, -565, 634, -381, 632,
	124, 471, 527, 81, 242, 97, 170, 198, -437, 632,
	-294, 29, 364, 543, 637, -377, 409, -483, 632, 364,
	367, 196, 367, 63, 305, 2, 2, 2, 2, 2,
	226, -294, 527, 123, 2, 272, 2, 2, 2, 2,
	2, 2, 2, -399, 226, 2, -325, 582, -399, 226,
	2, -399, 226, 2, -443, 2, 91, -308, 226, 2,
	-294, -334, 226, 2, -329, -331, -339, 226, 2, -337,
	-294, -558, 226, 2, -556, 4, -563, 120, 483, -471,
	2, -141, 2, 63, -294, 582, 2, 486, 2, 632,
	-154, 2, 74, 547, 45, 481, -155, 2, -457, 2,
	-458, -290, -291, -292, -514, -293, 260, 408, 418, 603,
	135, 346, 599, -651, 196, 614, 543, -548, -548, -548,
	-407, 634, -214, 56, -307, -662, -661, -662, -546, 29,
	-541, 8, -542, 622, 623, -546, -546, -662, -662, 2,
	2, 2, 2, 2, 2, -507, 226, -325, 2, -322,
	-551, 4, -563, -567, -564, -568, -566, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 60, 68, 69, 75,
	79, 81, 91, 97, 106, 114, 115, 117, 116, 118,
	119, 120, 131, 135, 139, 143, 144, 148, 152, 156,
	174, 176, 189, 193, 196, 212, 215, 218, 233, 246,
	252, 254, 274, 278, 285, 293, 294, 346, 353, 359,
	364, 365, 369, 370, 390, 406, 425, 450, 476, 483,
	501, 521, 527, 537, 543, 545, 553, 561, 562, 571,
	573, 581, 590, 591, 592, 593, -569, 80, 2, -507,
	226, 2, -328, 226, -507, -331, 2, -308, 2, -471,
	-631, 535, 166, 438, 2, -348, 226, -325, -327, -331,
	-329, 2, 2, 2, 2, -471, 2, -560, 2, -555,
	10, -554, 5, 4, -563, -567, -564, -474, 2, -485,
	29, -337, 2, -556, 226, 2, 29, 29, 582, 409,
	254, 543, 637, -398, -340, -341, -547, 4, 8, -391,
	-294, 634, -471, 2, -141, -124, 2, 189, -471, 226,
	2, -141, 226, 2, -471, 226, 2, -141, 226, 2,
	-294, 2, -639, 2, -560, 226, 226, -294, 2, 305,
	2, 2, 551, 2, 102, 527, 123, 2, 442, -658,
	463, 555, 2, 2, 2, 2, 2, 2, 2, 527,
	-313, 2, -294, 189, 510, -337, 226, -338, 2, 477,
	-671, 422, -556, 226, 2, 582, -329, 226, 2, -329,
	242, 256, -308, 226, 2, 532, 530, 532, 530, 196,
	2, 254, 2, 254, 2, -508, 2, -509, -503, -510,
	630, 365, -518, 2, -517, -554, 578, -112, 632, -112,
	632, 481, 632, -560, -325, -325, -471, 2, -141, -124,
	2, -471, 2, -141, 2, -294, 2, -138, -560, -137,
	632, 196, 572, -294, 2, -471, 2, -141, -124, 2,
	-471, 2, -141, 2, -237, 189, 2, 124, 527, -201,
	2, 189, 573, 2, 8, 2, 233, -233, -560, 472,
	181, 417, 2, 486, 2, 487, 77, -444, 599, 77,
	196, 2, 196, 2, -427, 2, 593, 409, 196, 2,
	2, -621, 2, 364, 196, 2, 196, 2, 196, 2,
	196, 2, 196, 2, -200, 482, 548, 526, 413, 262,
	2, -141, 590, -124, 262, 261, -471, 590, 2, -644,
	189, 469, -471, 2, 546, 271, 164, 196, -427, 2,
	196, 2, 196, 2, 5, 2, 43, 414, 508, 2,
	260, 408, 508, 2, 506, 2, -325, 527, 582, 477,
	124, 29, 2, 468, 2, 2, 92, 93, 196, 2,
	196, 2, 211, 196, 2, 430, 196, 527, -408, 634,
	-408, 599, 2, -419, -507, -456, -457, -456, 543, -385,
	-387, -201, 486, 2, -251, -417, -253, 189, -447, -448,
	-254, 285, 176, 359, -255, -426, 29, 143, -426, -426,
	63, 633, 633, -651, 558, 11, 12, 79, 43, 622,
	623, 624, 625, 187, 626, 627, 620, 621, 619, 612,
	613, 617, 266, 267, 99, 616, 614, 90, 299, 462,
	177, 178, 179, 180, 439, 240, 35, 241, 14, 15,
	16, -351, 34, 369, 284, 600, 230, 490, 615, 17,
	18, 19, 257, 259, 348, 53, 233, -302, 380, -350,
	524, 70, -471, -471, -471, -471, -471, -471, -471, -471,
	376, 632, -413, -466, 630, -246, 632, 632, 632, 632,
	-547, -246, -471, -485, 633, -404, 632, -246, -485, -480,
	632, 460, 630, 632, -488, -471, 5, 5, 5, 632,
	634, -601, 594, 189, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	403, -529, 632, -528, 632, -528, -528, 583, -526, 632,
	602, 595, 632, -526, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 583, 533, 637,
	-598, -381, 632, -409, -512, -471, 624, -409, -409, 364,
	-401, -471, 110, -430, 263, 325, 197, 281, 454, 247,
	-468, 636, -468, -496, 602, -246, -504, -324, -246, -506,
	632, -502, -496, -113, -547, -96, -109, -118, -141, -157,
	-205, -206, 624, -325, 632, 196, 632, 634, -551, 196,
	-391, -308, -335, -294, -325, -342, -343, -348, -319, -294,
	2, 2, 142, -401, -616, 556, 471, 29, 477, -558,
	-297, 39, -482, -521, -522, -572, 636, -571, -524, -534,
	-530, -533, 393, 397, -553, 57, 579, -536, 253, 4,
	-563, -565, 250, 251, 498, 54, 419, 184, 130, 129,
	356, 59, 539, 540, 541, 542, 201, 202, 61, 580,
	512, 72, 73, -616, 556, 471, 29, 477, 189, -558,
	189, -558, 2, 2, 159, 2, 2, 2, -294, -272,
	637, 67, 447, 159, -399, 226, -272, 159, -272, 159,
	-349, 226, -348, -272, 159, -272, 637, 159, -272, 637,
	159, 634, 637, 159, -558, 2, -443, -550, -401, 39,
	-457, 2, 131, 4, 5, -674, 637, 283, -354, 298,
	345, 221, 365, 597, 357, 135, -559, 5, 4, -481,
	-493, 131, 291, 253, -541, -543, 9, -544, 622, 623,
	-549, -548, 113, 634, -551, -215, 248, 41, -307, -307,
	-662, -662, 8, 8, -662, -662, -307, -307, -269, 440,
	484, 379, -268, 25, 30, 147, 244, 330, 576, 165,
	-366, 245, 445, -363, 383, 159, 502, 565, -631, -634,
	467, 535, 166, 438, 94, 357, 484, 379, 440, 159,
	-423, -425, 39, 122, 330, 378, 64, 236, 303, 304,
	505, 587, 159, 484, 379, 440, 379, -15, -283, 25,
	147, -285, -280, 484, 30, -634, 103, 440, 611, 606,
	445, 389, 519, 406, -634, -631, 279, -633, 589, 344,
	-271, 502, 565, -631, -634, 467, 440, -270, -368, -363,
	383, 159, 636, 25, 147, 440, 484, 379, -654, -655,
	30, -264, -263, 25, 147, 484, 568, -267, 233, -266,
	25, -150, -130, -149, 445, 484, -150, 2, 440, 379,
	-625, -315, -595, 233, 593, 159, -315, -315, -507, 226,
	-648, 189, 2, -641, -137, 275, 5, 10, -560, -137,
	-398, 637, 637, -551, 624, 469, 468, 159, 159, 159,
	159, 262, 189, 346, 346, 593, 2, 2, 2, 2,
	2, 198, -636, -659, 2, 2, -325, 226, -383, 364,
	-619, -620, 527, -325, 189, 346, 45, -328, 226, 2,
	-331, 582, -625, 346, -330, 226, -325, 39, 632, 346,
	2, -443, 2, 242, -595, 346, -508, -345, -325, -503,
	-345, 484, -318, 39, -468, -325, 633, 637, -518, -518,
	-560, -224, 593, 196, 632, -237, 593, 593, 262, -515,
	637, -514, 233, -561, -560, -138, -560, 443, 196, 262,
	-560, -619, -308, 2, -325, 2, 527, 264, -560, 196,
	233, -224, -560, -560, -560, -550, 29, 487, 2, -200,
	482, 548, 93, 487, 2, -325, 527, 124, 242, 83,
	-648, 189, 2, -294, -623, 189, -617, 455, 471, 556,
	-616, -325, 124, -325, 124, -325, 124, -325, -325, 2,
	2, 2, 2, 2, 88, 2, -141, -471, 2, 88,
	2, 48, 503, -644, 189, 2, 546, 2, 546, 2,
	-294, -294, -294, 359, 507, 283, 593, -325, -325, -325,
	-326, -331, 472, 528, 557, 469, -471, 2, -663, 2,
	196, 189, 2, 527, 242, 527, 242, 124, 196, 77,
	124, 29, 196, 527, 466, 634, 4, -272, 637, -298,
	-251, -417, -550, -418, -417, -252, -251, -254, 189, 418,
	566, 330, 488, 268, -448, -447, 29, -471, -452, 183,
	329, -471, -450, -473, 622, 623, -542, -544, -400, 357,
	-245, -245, -245, -388, -498, -471, 406, 242, -549, -651,
	-523, -521, -521, -323, -551, 539, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, -471, 284, 230, 490, 53, 233, -471, 543, -471,
	-471, -471, -471, 322, 346, 353, 553, 174, 563, 143,
	357, -677, 521, 42, -478, -246, -405, 632, -492, 36,
	501, 29, -485, 632, 2, -466, -471, -467, -352, -350,
	-294, 622, 623, 624, 625, 626, 627, 612, 613, 614,
	14, 15, 16, 617, 621, 619, 620, 187, 99, 616,
	299, 462, 90, 177, 178, 179, 180, 266, 267, 17,
	18, 19, 35, 615, -402, -401, -401, 633, 581, 29,
	143, 624, 2, 633, 637, 39, 633, -471, -402, -484,
	-480, -401, -491, -490, 590, -438, -439, 598, 308, 127,
	224, 306, -440, 475, -545, 8, -551, 624, -602, 182,
	215, 632, 633, 2, 633, 2, 633, -471, 2, 633,
	-471, 2, 633, -471, 2, 633, -471, 2, 633, 2,
	633, 2, -471, -471, -471, -471, -471, -471, -471, -401,
	8, -545, -545, 539, 539, -545, -545, -545, -537, 393,
	394, 395, 396, 286, 287, 288, 289, 397, 398, 399,
	400, 314, 315, 316, 317, 310, 311, 312, 313, 318,
	319, 320, 321, 206, 207, 208, 209, 202, 203, 204,
	205, -537, -432, 2, -539, -401, 4, 598, 308, 127,
	224, 306, 475, 5, -432, 2, -433, 2, -471, -401,
	-434, -472, -473, 622, 623, 615, -351, -435, 2, -471,
	-402, -471, 60, 278, 545, -436, -471, 196, -401, -401,
	2, -401, 2, -474, 2, -599, 39, -401, -394, 637,
	196, 39, 4, -394, -394, 632, 633, 637, -431, 219,
	302, 297, 256, -431, -502, -430, 263, -428, 374, -428,
	-428, -496, -309, 630, 638, -551, -496, -495, -494, 39,
	-318, 371, -496, -496, 634, 633, -495, 631, -614, 632,
	635, 635, 635, 635, 635, -325, 632, -401, -551, 634,
	509, 2, 633, 257, 257, 257, 257, 257, 364, 461,
	633, 543, -618, -334, -339, 528, 2, 593, -111, 366,
	633, 637, -393, 38, 630, 634, -545, 2, 2, -540,
	583, 632, 632, -439, 632, 196, -618, -339, 528, 2,
	-624, -392, -392, 543, -294, 2, -325, -399, -272, 159,
	-399, -399, -272, 637, 159, -308, -329, -334, -337, -339,
	-294, -556, -558, -272, -330, -651, 633, 547, -458, -353,
	418, 500, 441, 479, 523, 9, 9, 637, -551, -216,
	470, 330, -307, -307, -307, -307, 637, -652, 97, 543,
	81, 632, 471, -287, 292, 543, -462, 226, 81, -573,
	97, -311, -574, -294, 75, 562, 406, 193, 157, -652,
	97, 406, -652, 97, 2, 244, 97, 484, 507, 632,
	29, 63, -507, 43, 43, 29, -632, -633, 279, 196,
	599, 527, 242, 471, 543, 543, -507, -425, -521, 122,
	303, 304, 63, -546, -546, 63, -546, -546, -546, 593,
	-328, -507, 471, 543, 543, 543, 428, 518, 428, 518,
	-280, -155, 518, 543, 543, -155, 29, -201, 448, 131,
	-675, 614, 428, 279, -633, 543, 196, 637, 43, 43,
	29, -632, 196, 543, -348, -309, 577, 44, 577, 44,
	577, 543, 44, 471, 543, 637, 44, -263, -619, -619,
	-223, -222, -294, 5, -391, -266, -560, -265, 328, 77,
	543, 543, -15, 484, -626, -299, 109, 336, 296, 337,
	101, 333, 100, 332, 107, 334, 108, 335, 584, 349,
	585, 350, 66, 331, 307, 338, 504, 339, 586, 351,
	-300, -301, 150, 385, 575, 124, -556, -15, -15, 484,
	379, 440, 159, -649, 233, 29, -638, 233, -515, 233,
	-515, -340, -294, 634, -141, -471, -471, -141, -471, -141,
	48, 159, 159, 2, 2, -671, 272, 632, -357, 346,
	196, -391, -516, 637, 254, -325, 175, -616, 159, -556,
	-424, -423, 346, -330, 226, 2, 159, -381, 346, 153,
	632, 416, 2, 159, -310, 226, -295, -294, -443, -274,
	531, 159, -421, 573, -453, -141, 632, 131, 39, -453,
	-410, -411, -513, -412, -311, 632, -318, -468, -112, -517,
	633, 633, 633, -223, 368, -237, -382, -312, -311, 123,
	420, 420, -230, 593, -137, -138, 633, 637, -515, 233,
	510, -138, -560, -224, -224, -515, -515, -325, 189, -560,
	-560, -224, -224, -224, 2, 2, 2, 2, -427, -325,
	-308, -348, -325, -336, 233, 29, 634, -558, -558, -339,
	-334, -427, -308, -427, -308, -427, -308, -427, -427, -141,
	-471, 507, 2, 481, 189, 189, 634, -427, 8, -384,
	450, 5, 2, 416, 124, 527, 383, 242, -325, -348,
	-325, -348, -308, 124, -308, 125, 124, -325, 4, -507,
	-418, -252, 365, 268, 488, -450, -451, -473, 460, 461,
	-451, 460, 461, 8, 9, 8, 9, -256, 492, 352,
	-399, 637, -261, 40, 139, 268, -325, -549, 599, 155,
	-471, -471, 543, -677, 521, -478, 155, -471, 322, 353,
	553, 174, 563, 143, 357, 196, 632, -472, -472, 633,
	-403, -471, -471, 631, 640, 633, 634, 633, -387, 637,
	-385, -471, -401, -401, 633, 634, -401, -391, 631, 631,
	637, 633, -489, -490, 148, -471, 543, 543, 543, 543,
	632, 633, 634, -607, 375, 632, 632, -471, 633, 633,
	633, 633, 39, 637, 637, 637, 633, 637, 637, 637,
	633, 633, 633, 637, 633, 599, 599, 633, 633, 633,
	633, 637, 633, 637, 633, 196, 633, 633, -441, 390,
	633, 11, 12, 622, 623, 624, 625, 187, 626, 627,
	620, 621, 619, 612, 613, 614, 90, 299, 462, 14,
	15, 16, -351, 257, 233, -472, -472, -472, -472, 633,
	-476, -477, 196, 189, 39, -436, -436, -436, 633, 196,
	-401, 633, 633, 632, -600, 301, 346, 633, -465, -464,
	591, -512, -395, 2, -502, -320, -551, -465, -465, -401,
	-471, 263, 263, -429, 573, 364, -431, -502, -495, -547,
	-470, -469, 191, 40, 139, 340, 341, 342, 229, 192,
	-495, -318, -381, -495, -495, -551, -496, -496, -494, 633,
	-615, -547, 633, -396, -505, -594, -387, 634, -551, -234,
	-595, -202, 5, 353, -202, -202, -202, -202, -325, -558,
	543, 543, 233, 26, 391, -521, 630, 631, 8, -551,
	632, -545, -545, -545, -558, 196, 196, 233, 364, 196,
	-556, 2, -272, -399, -272, -272, -348, -349, -272, -272,
	-272, -422, 593, -548, -457, 560, 86, 418, 539, -548,
	121, 470, -268, 440, 484, -311, -311, -325, -241, -240,
	-238, -294, 5, -335, 210, 429, -556, 346, -462, 226,
	-273, 346, 226, -319, -521, 632, -445, 595, 268, 268,
	573, -311, -319, 268, 226, -311, 226, -319, 2, -319,
	-627, 418, 358, -471, -239, -238, 63, -364, 290, 416,
	347, -269, 440, 484, 379, -141, -141, -141, 632, -651,
	573, 142, -325, -348, -325, -335, -556, -330, 484, 379,
	440, 343, -342, -546, -546, -423, 484, 379, 440, -335,
	-556, -328, -556, -279, 226, -294, 428, -279, 226, 428,
	428, 471, -308, 428, 599, 47, -675, 543, 196, -471,
	-471, -270, -141, -141, -141, 632, -309, -271, 440, 5,
	226, -311, 5, -311, 226, 5, -294, -311, -335, -556,
	-655, 25, 147, -311, -224, 637, 614, 614, -267, 614,
	-335, -556, -299, 385, -560, 353, 569, -308, -625, -315,
	471, 543, 543, -507, -645, -646, 212, 453, 471, 456,
	-558, -137, -227, 593, -137, -221, 237, 624, -622, -560,
	-294, 582, -294, -355, -358, -356, -311, -463, -462, -577,
	-578, -573, 284, 242, 562, 256, 175, 97, -242, -243,
	595, 593, 159, -346, -325, 630, -224, -620, -560, 175,
	-316, -294, -516, -337, -338, 159, -381, 346, -556, 39,
	159, 632, 2, 2, -329, 364, 346, -310, 226, -275,
	149, -675, -308, -465, -395, -420, -455, 450, 364, -382,
	578, -318, -420, -397, 637, 196, 614, 634, -382, -511,
	624, -112, -112, -224, 632, 632, -560, 633, 637, 634,
	632, 614, 614, -232, 368, -231, 151, 270, 255, 494,
	495, 496, 497, 141, 493, 128, 327, 238, 533, -515,
	-560, -230, -138, 196, -515, 233, 196, -71, 593, 527,
	233, -224, 636, 471, 456, -294, -427, -427, -427, 481,
	481, -294, 189, -391, -321, -551, -308, -325, -322, -348,
	189, 189, -308, -308, 566, -451, 365, 295, -498, -262,
	601, -325, 636, -471, -471, 155, 155, -471, -472, -472,
	-471, 155, 196, 632, -471, -482, 34, 34, 633, 637,
	-467, -471, -350, 633, 581, -387, -387, 633, 624, -551,
	636, 633, -480, 152, -471, 537, 308, 224, 306, -440,
	306, -440, -440, -545, 5, -551, 624, -608, -314, 632,
	-294, 591, -386, 370, 633, -523, -521, -471, -471, -471,
	-471, -471, -545, -526, -526, -541, -541, -471, -476, -471,
	-523, -521, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, 143, 346, 357, -472, -477, -476, -471, -471,
	-521, 633, 633, 633, -401, -111, 632, 301, -414, 215,
	-471, -515, 637, -414, -414, 633, -502, -502, 632, -471,
	263, 631, 637, 639, 614, 614, -381, 634, -494, -495,
	631, 633, 637, 633, 637, -454, 39, 633, -551, -465,
	-236, -235, 140, 56, 111, 138, 353, 361, 195, 220,
	415, 155, 190, 149, 257, -647, 593, -558, -558, 471,
	367, 5, 8, 630, 631, 634, -545, 633, 633, 633,
	-558, -558, 471, -616, 556, 471, 29, -558, -272, -272,
	123, 330, -471, -213, 593, 595, 543, 543, 633, 637,
	614, 63, 233, 159, 346, 575, 346, -574, 157, -579,
	-471, 632, 242, 632, 632, 2, -258, -259, -260, 147,
	484, 25, -653, 2, 573, 159, -272, 159, -272, 597,
	633, 637, -364, 632, 632, 543, 471, -287, 543, 593,
	-401, -471, -225, 131, -550, -634, 636, -634, 636, 471,
	543, 543, 471, 543, 543, 346, -294, 159, -294, -294,
	593, 173, 173, 599, -279, -471, -471, 189, 543, 593,
	-401, 543, -525, 51, 27, 346, -329, -272, 159, 543,
	543, 556, 484, -222, -560, -560, -137, -560, -560, 353,
	-15, -335, -556, -330, 484, 379, 440, -624, -624, 212,
	-339, -649, -515, -229, 368, -228, 151, 452, 141, 270,
	238, -515, -227, 196, 254, 593, -330, 2, 633, 633,
	637, 637, -580, -273, -325, -310, 242, 242, -317, -295,
	39, 361, 361, 632, -325, -92, 593, -514, -547, -316,
	-628, 593, 45, -328, 39, 159, -625, -141, -330, -519,
	-520, 5, 39, -325, 159, 364, 346, -276, 277, -675,
	-555, -595, -387, -420, -409, 347, 95, 633, -465, -411,
	-395, -471, 2, 633, -223, -560, -224, -237, -312, 2,
	-561, -560, -560, 637, 632, 614, 614, 614, 614, 614,
	614, 614, -230, -515, -137, -230, -138, -141, 368, -325,
	-560, 624, -335, -336, -427, 5, -370, -369, 383, 357,
	-370, 460, 460, 365, 183, 273, -261, -309, -471, -471,
	155, 34, 34, -471, -471, -482, 633, -471, -471, -401,
	631, 5, -471, 633, 633, 8, -471, 633, 634, -609,
	-294, -471, 633, 63, 633, 633, 637, 637, 633, 633,
	633, 633, 633, 633, 633, -477, 196, 143, 357, 632,
	633, 633, -111, -479, 218, 63, -502, -479, -479, -429,
	-391, -502, -469, -309, 630, -309, 630, -551, -547, -505,
	632, 634, -235, 614, -560, -560, 2, 2, 2, 5,
	5, 415, 346, 353, 5, -202, 212, -647, -647, 593,
	-339, 631, 2, 630, -551, 633, -339, 196, -618, -339,
	528, 123, 189, 223, 223, -311, -311, -240, -548, 527,
	460, -279, 406, -462, 159, 159, -581, 97, -583, 79,
	175, 106, 346, 353, 562, 406, 75, 131, 364, 425,
	-665, -666, -667, 39, 604, 605, 633, -389, -499, -594,
	632, -294, -389, -391, 346, 515, 131, 364, 346, 131,
	364, 588, 123, 2, 556, 82, -311, -319, -238, -391,
	-391, -325, -335, -556, 167, 633, 637, 614, 2, 624,
	624, -335, -556, -330, -335, -556, -328, 159, 578, -279,
	578, 381, 173, 543, -141, -471, 167, 633, -309, 5,
	5, 159, -306, 79, -311, 5, -311, -329, 123, 593,
	471, 543, 543, 364, 364, 367, -645, -646, -227, 637,
	632, 614, 614, 614, -227, -561, -137, 2, -381, -371,
	244, -311, -578, -575, -576, 406, -463, -582, -584, 175,
	406, -359, 632, -310, -295, 632, -141, 2, -241, 632,
	-357, 368, 631, -630, 368, -629, 121, 141, -556, -424,
	-141, -330, -379, 593, -381, 633, 637, 153, -446, 573,
	-309, -325, 159, -277, 276, -675, -555, -274, -449, -447,
	144, 632, 364, -141, -387, 614, 633, 633, 123, 633,
	-231, -232, -560, -137, -560, -560, -560, -137, -560, -230,
	-515, -515, -72, -73, 242, 97, 388, -224, -322, 527,
	242, 632, 632, -261, -471, -471, -471, 633, -387, -551,
	624, -603, 383, 633, -498, -471, -471, -472, 196, 632,
	-482, 633, -604, 592, -471, -415, -416, -471, 458, 112,
	216, -604, -604, 633, -547, -547, 2, -560, 2, 2,
	353, 2, 2, 367, 2, 543, 630, 2, 196, -558,
	196, 196, 233, -141, 233, 39, 428, -462, -319, -319,
	-323, -316, 175, 226, 353, 588, -445, 268, 632, -472,
	566, -325, 632, 2, 225, 225, 31, 63, -668, 135,
	246, 633, 637, -500, -305, -294, -471, -500, 633, 633,
	353, 566, 353, 588, -471, 566, -521, 632, -272, -272,
	633, 633, -471, 543, -550, 104, -548, 2, -634, -279,
	-391, -391, -308, -471, 189, -471, 543, 5, -272, -323,
	-272, -272, -306, 556, 363, -335, -556, -330, -650, 528,
	478, 557, 472, 199, 459, -650, 189, -228, -229, -560,
	-137, -137, -227, 39, -365, -366, 2, -580, 268, -316,
	268, 235, 158, -389, 632, 632, -391, -664, 593, 633,
	-355, -242, -93, -94, 544, -514, 637, 632, 614, -381,
	330, 123, 39, 5, 632, 632, -294, 364, 632, -309,
	-289, 96, -675, -555, -275, -420, 347, -391, 97, -449,
	-478, -224, 632, -224, 633, -230, 637, 29, 632, 29,
	632, -325, -348, -401, -401, 633, -387, 63, 637, 633,
	633, -472, -482, 633, -605, -606, -314, 637, 632, 632,
	485, 631, 631, 2, -558, 2, -558, -558, -558, 471,
	-279, 406, -294, -574, -583, -316, 346, -243, 573, 593,
	-471, -472, -296, 632, -471, 632, 632, 39, 131, 246,
	136, 231, -461, -669, 105, 516, 234, -499, -261, 633,
	-460, 573, 425, -472, -306, -389, 632, 632, 632, 614,
	196, -141, 632, -525, -272, -329, 614, 543, 2, 2,
	196, -624, 633, -640, 423, -141, -242, 632, -243, -360,
	84, 98, 132, 225, 200, 243, 507, 513, 29, -360,
	633, -389, -389, 633, -361, 364, 123, 330, 633, 39,
	-94, 9, -629, -630, -471, 39, 123, -141, -519, -389,
	-325, -389, 364, -281, -280, 285, -555, -276, 633, -319,
	-420, -561, -73, -391, -391, 633, 633, -610, 416, 461,
	217, -401, -388, 633, 637, 39, -416, 2, 2, 2,
	-647, -339, 428, -273, 159, 219, 633, -585, 300, -294,
	633, -424, -424, 39, 136, 231, -367, -363, 632, -262,
	-500, -243, 219, -325, -635, 573, 633, -373, -372, -369,
	-375, -374, -369, -401, -548, 104, 381, -401, -306, -137,
	-558, -558, 364, -642, 197, -641, 5, 10, -361, -390,
	-501, -311, -460, 633, 633, 85, 123, -371, -141, 633,
	-141, 2, -379, 633, 633, -446, 633, -325, -278, -562,
	428, 430, -675, -277, -465, 144, 633, 633, 633, 633,
	-611, -612, 53, 559, 113, -471, -611, -611, -606, -608,
	196, 175, -459, 602, -586, -589, -588, 609, 491, 197,
	382, 633, 515, 587, 633, 633, -668, -391, -459, -381,
	-471, -460, 633, 637, 578, 633, 637, 578, 633, 196,
	633, -272, -647, -272, -650, -226, 593, 48, -288, -287,
	633, 637, -461, -460, -367, 405, 137, 147, -365, -664,
	-460, 632, -461, 632, -286, -285, -675, -541, -289, 144,
	347, 566, -224, -613, 157, -612, 402, 188, 460, 402,
	188, -613, -613, -558, -316, -243, 58, -588, 609, -589,
	609, 566, 137, -465, 633, -585, -243, -372, 233, -374,
	196, 381, 196, 468, -641, 31, -243, -501, -367, -461,
	-243, 461, 461, 2, -242, -361, -461, -389, -367, -389,
	-282, -283, -284, -391, -281, 347, 566, 484, 113, 215,
	538, 330, 34, 614, -587, 330, 447, 67, 484, -587,
	-586, 632, 632, -558, 368, -243, -367, -465, 2, -361,
	-367, 633, -243, 633, -557, 379, -278, 484, -410, 460,
	372, -612, -471, 24, 353, 131, -668, -401, -401, -272,
	-223, 632, -465, -243, -288, -243, -460, -465, -461, -675,
	-286, -410, -465, 633, 633, -223, -465, -465, -461, -367,
	-556, -282, -465, -362, -363, 543, 633, -367, -243, 632,
	-243, -465, -401, -465, 633, -362,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 597, 598, 600, 601,
	602, 604, 605, 607, 609, 611, 612, 613, 615, 616,
	618, 619, 620, 621, 622, 624, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 713, 715, 0, 1565, 1567, 1569, 1571, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 419, 421, -2, 0, 530, 531, 533, 535, -2,
	0, 1147, 1149, 1151, 0, 701, 703, 0, 1154, 1156,
	1158, 0, 0, 725, 726, 0, 1679, -2, 717, 719,
	721, 723, 802, 804, 806, 808, 810, 812, 814, 816,
	818, 820, 821, 823, 825, 827, 829, 831, 832, 834,
	836, 838, 839, 841, 842, 844, 846, 848, 850, 852,
	854, 856, 858, 860, 862, 864, 866, 868, 870, -2,
	873, 874, 875, 877, -2, -2, 0, -2, -2, -2,
	1583, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 472, 474, 476, 478, 480, 483, 485,
	487, 1737, 537, 539, 541, 543, 545, 547, 549, 0,
	0, -2, 1751, 0, 0, 0, 966, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 127, 128, 129,
	130, 131, 132, 133, 86, 87, 88, 90, 91, 92,
	93, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 124, 125, 84, 0, 0, 1710,
	1712, 1714, 1716, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 27, 29, 33, 35,
	37, 39, 599, 603, 606, 608, 610, 614, 617, 623,
	625, 627, 582, 583, 586, 2449, 2467, 2468, 2469, 2472,
	2473, 2474, 2475, 2476, 2477, 2962, 3043, 3044, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930,
	2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940,
	2941, 584, 585, 1341, 0, 666, 664, 2434, 667, 2746,
	669, 671, 524, 525, 526, 527, 528, 529, 0, 694,
	680, 1749, 695, 697, 698, 699, 700, 661, 659, 0,
	699, 694, 2504, 692, 1563, 1564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 451, 1401, 1402,
	1403, 1548, 1549, 2798, 1590, 0, 259, 714, -2, -2,
	2927, -2, 756, 757, -2, -2, 771, 775, 766, 2931,
	0, 2801, 2784, -2, 778, 1566, 1568, 1570, 878, 879,
	880, 2453, 884, 882, 894, 895, 898, 0, 915, -2,
	0, 2500, 2769, -2, -2, 916, 917, -2, -2, -2,
	-2, 896, 897, 0, 0, 0, 0, 0, 44, 46,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 269, -2, -2, -2, -2, 0,
	0, 2849, 2559, 2402, 2469, 2405, 2400, 373, 375, 377,
	379, 380, 0, 0, 0, 0, 0, 0, 0, 411,
	414, 416, 420, -2, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1221, 1213, 1214,
	1468, 0, 0, 0, -2, 532, 534, 587, 588, 0,
	1738, 1738, 595, 596, -2, 0, 0, 0, 0, 334,
	324, 1148, 1150, 1152, 1153, 0, 0, 0, 0, 0,
	702, 704, 0, 0, 2843, 301, 1155, 1157, 1159, 1160,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 718,
	720, 722, 724, 803, 805, 807, 809, 811, 813, 815,
	817, 819, 822, 824, 826, 828, 830, 833, 835, 837,
	840, 843, 845, 847, 849, 851, 853, 855, 857, 859,
	861, 863, 865, 867, 869, 871, 872, 923, 0, 0,
	0, 0, -2, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 1035, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 0, 1127, 0, 0, 926, 929,
	930, 931, 932, 933, 934, 935, 0, 1008, 1033, 1034,
	1044, 876, 0, 1381, 1739, 1592, 1573, 1587, 1592, 1575,
	1576, 1577, 1578, 1579, 1584, 1586, 1580, 1581, 1582, 50,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 473, 475, 477, 479, 481, 484, 486, 488, -2,
	1708, 1709, 538, 540, 542, 544, 546, 548, 550, 705,
	0, 708, 0, 928, 707, -2, 0, 1743, 1743, 1743,
	0, 0, 1709, 1707, 0, 0, 0, 711, 712, 782,
	783, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 2104, 0, 784, -2, 2137, 2139, 2902, 2719, 2927,
	2275, 2141, 2142, 2143, 2144, 2145, 0, 2147, 2148, 2149,
	2150, 2151, 2152, 0, 2154, 0, 2159, 2160, 2161, 0,
	2909, 2379, 2463, -2, 0, 0, 2915, 2459, 0, 2242,
	2177, -2, -2, 2486, 2465, 1948, 1949, 1950, 1951, 1952,
	-2, -2, 2945, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 0, 2890, 2910, 2911, 2916, 2918,
	2912, 2899, 2202, 2573, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1975, 1984, -2,
	-2, -2, -2, -2, -2, -2, 2903, 2904, 2921, 2924,
	2930, 2935, 2936, 2908, 2917, 2944, 2946, 2947, 2948, 2949,
	2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
	2960, 2961, 1976, -2, -2, -2, -2, 0, 1726, 2762,
	1729, 1341, 1727, 1711, 1713, 0, 1715, 0, 0, 0,
	1720, 1746, 1744, 0, 1795, 1724, 1725, 1818, 1818, 1842,
	0, 1823, 0, 1842, 1738, 1869, 0, 1829, 2789, 2178,
	2179, 0, 2469, 2464, -2, -2, 2942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	668, 670, 0, 0, 0, 693, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 454, 455, 456, 457, 458,
	2910, 0, 0, 0, 463, 0, 465, 466, 467, 468,
	469, 470, 471, 229, 2910, 555, 580, 0, 229, 2910,
	558, 229, 2910, 561, 0, 564, 1466, 229, 2910, 567,
	2430, 229, 2910, 570, 572, 2438, 229, 2910, 576, 2445,
	2443, 577, 0, 579, 249, 245, 246, 247, 248, 1559,
	1560, 1561, 1562, 0, 1589, 1467, 716, 0, 742, 0,
	754, 755, 2898, -2, 0, 2810, 759, 760, -2, 762,
	1593, 1597, 1598, 1599, 1600, 1601, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 749, 750, 769, 770, 776,
	779, 0, 887, 883, 899, 0, 914, 0, 915, 915,
	2419, 2410, 2411, 0, 0, 915, 915, 0, 0, 918,
	919, 920, 921, 922, 83, 0, 2910, 1869, 85, 0,
	2424, 2494, 2495, 2496, 2497, 2498, 2943, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
	2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 2945, 89, 0,
	2910, 94, 0, 2910, 0, -2, 110, 0, 126, 0,
	153, -2, -2, -2, 134, 0, 2910, 0, 2399, -2,
	0, 241, 325, 326, 327, 0, 643, 0, 652, 337,
	338, 2482, 2483, 2490, 2491, 2492, 2493, 0, 745, 2276,
	0, 0, 1185, -2, 0, 1394, 1396, 1396, 0, -2,
	0, 0, 0, 1137, 2396, 2401, 1138, 1139, 2420, 1140,
	2406, 0, 381, 382, 383, 384, 385, 0, 386, 2910,
	388, 389, 0, 391, 392, 2910, 394, 395, 0, 397,
	0, 399, 0, 281, 285, 2910, 2910, 424, 427, 0,
	429, 430, 0, 432, 0, 0, 0, 436, -2, 452,
	0, 449, 439, 440, 442, 443, 444, 445, 446, 0,
	492, 490, 2435, 0, 0, -2, 2910, 0, 1182, 0,
	0, 1446, -2, 0, 1387, 0, 1453, 2910, 1449, 0,
	-2, 0, 1736, 2910, 1610, 1217, 1218, 1219, 1220, 1881,
	521, 0, 1643, 0, 1645, 0, 1665, 1875, 1818, 0,
	0, 1880, 0, -2, 640, 2452, -2, 590, 0, 591,
	0, -2, 0, 351, 0, 0, 1163, 1165, 1166, 1168,
	1169, 1172, 1173, 1174, 1175, 0, 1177, 1855, 302, 304,
	0, 0, 0, 0, 1162, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 0, 0, 727, 0, 0, 924,
	925, 0, 0, 943, 944, 945, 0, 0, 351, -2,
	-2, -2, 953, 0, 960, 963, -2, 0, 0, 0,
	0, 970, 0, 975, 976, 977, 0, -2, 0, 984,
	986, 1146, 988, 0, 0, 990, 0, 994, 0, 997,
	0, 999, 0, 1001, -2, -2, -2, 1009, 1010, -2,
	1015, -2, 0, 1019, -2, 0, 1022, 0, 1025, -2,
	0, 1035, 1031, 1032, 0, 0, 0, 0, 1052, 1053,
	0, 1062, 0, 1065, 1066, 1067, 0, 0, 1072, 1073,
	0, 1075, 1076, 1077, 1079, 1080, 1081, 0, 2879, 2807,
	2559, 0, 1089, -2, 1095, 1097, 0, -2, 0, 1113,
	0, 1117, 0, 0, 1126, 0, 0, 0, 927, 0,
	936, 937, 938, 229, 1873, 1572, -2, 1574, 0, -2,
	0, 706, 0, 710, 1768, 1694, 1691, 0, 1765, 1766,
	1695, 0, 0, 0, 1702, 0, 1741, 1742, 0, 0,
	0, 1681, 1682, 0, 0, 0, 0, 0, 0, 2281,
	2282, 2283, 2284, 2297, 2285, 2286, 2296, 2294, 2295, 2287,
	2288, 2293, 2307, 2308, 2298, 2299, 2289, 2302, 2300, 2301,
	2303, 2304, 2305, 2306, 0, 0, 2312, 0, 2290, 2291,
	2292, 2320, 0, 0, 2321, 0, 2323, 0, 2313, 2309,
	2310, 2311, 0, 2083, 2085, 2387, 0, 0, 0, 2319,
	2314, 2315, 2021, 2022, 2023, 2024, 2025, 2058, 2062, 2063,
	0, 0, 2138, 2384, 2383, 2140, 0, 0, 2335, 0,
	2153, -2, 0, 2276, 2330, 0, 0, 2162, 2163, 2164,
	0, 0, 2335, 0, 0, 2378, 2174, 2175, 2013, 0,
	0, 2244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 1961, 0, 1963, 0, 1964, 1965, 1972, 1985, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 2359, -2, 0, 0, 0, 0, 1977, 0, 0,
	1728, 0, 0, 1799, 2388, 2392, 2393, 1799, 1799, 0,
	0, 2336, 1866, 1866, 0, 0, 1861, 1861, 1861, 1859,
	1842, 0, 1842, 1852, 0, 1842, 1842, 0, -2, 1823,
	0, 0, 1852, 0, 1836, 628, 630, 632, 634, 635,
	636, 638, 1870, 1871, 0, 0, 0, 0, 2470, 0,
	0, 0, 0, 2442, 0, 0, 2455, 0, 0, 2429,
	406, 407, 0, 0, 0, 2861, 2801, 0, -2, 673,
	696, 1738, 0, 2338, 1896, 1900, 0, 1902, 1903, 1904,
	1905, 1906, 0, 0, 1897, -2, 1973, 1975, 1996, 2487,
	2488, 2489, 1956, 1957, 1958, 1959, 1960, 1968, 1955, 1955,
	1955, 1966, 1995, 1987, 1995, 1991, 1941, 1942, 1943, 1978,
	1979, 1980, 1981, 0, 2861, 2801, 0, -2, 0, 683,
	0, 0, 1676, 453, 0, 460, 461, 462, 0, 551,
	0, 227, 228, 0, 229, 2910, 556, 0, 559, 0,
	229, 2910, 2394, 565, 0, 568, 0, 0, 574, 0,
	0, 0, 0, 0, 229, 1678, 0, 0, 0, 0,
	-2, 764, 772, 773, 774, 0, 1595, 0, 1602, 793,
	794, 795, 1604, 1605, 0, 1607, 767, 796, 797, 798,
	799, 800, 801, 0, 2408, 2409, 2414, 2415, 0, 0,
	765, 786, 768, 0, 780, 890, 885, 886, 900, 901,
	0, 0, 2412, 2413, 0, 0, 906, 907, 135, 1545,
	0, 0, 182, 0, 1545, 1545, 0, 0, 0, 0,
	210, 0, 0, 1251, 0, 0, 0, 0, 153, 167,
	178, 147, 148, 149, 0, 0, 0, 0, 0, 0,
	95, 1363, 0, 1366, 0, 0, 0, 0, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 112, 113, 0,
	0, 118, 119, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 1640, 0, 157, 153, 0, 0, 152, 154,
	137, 0, 0, 153, 168, 180, 0, 216, 218, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 251,
	0, 642, 644, 0, 0, 0, 0, 650, 0, 653,
	0, 743, 747, 748, 0, 0, 744, 746, 0, 0,
	1388, 0, 0, 0, 1735, 0, 0, 0, 0, 2910,
	1543, 0, 1526, 0, 1855, 2648, -2, -2, 302, 1855,
	1136, 0, 0, 2470, 2404, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 428, 431, 433, 434,
	435, 0, 1445, 0, 441, 482, 1310, 2910, 0, 0,
	511, 504, 0, 507, 0, 0, 0, 1362, 2910, 1360,
	2439, 0, 1385, 0, 1341, 2910, 2437, 0, 0, 0,
	1454, 2479, 1463, 1467, 1628, 0, 523, 0, 1646, 1648,
	0, 0, 1876, 0, 1878, 1818, 1738, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 1176, 308,
	0, 1854, 0, 0, 339, 1855, 302, 2775, 0, 1161,
	351, 351, 1855, 729, 1855, 731, 0, 0, 946, 0,
	0, 949, 351, 351, 351, 958, 959, 961, 962, -2,
	-2, -2, -2, 964, 965, 1059, 0, 0, 0, 1058,
	1541, 0, 980, 983, 987, 0, 1130, 2784, 2801, 2861,
	1144, 1059, 2559, 1059, 2559, 1059, 2559, 1059, 1059, 1003,
	1047, 1055, 1014, 1021, 0, 1016, 1020, 1023, 1026, 0,
	1028, 1036, 0, -2, 0, 1039, 0, 1041, 0, 1043,
	1059, 1060, 1063, 0, 1071, 1074, 0, 1082, 1083, 1084,
	1085, 2450, 1086, 1087, 1088, -2, 1092, 1093, 0, 1104,
	1109, 1110, 1106, 0, 0, 0, 0, 0, 0, 1120,
	1121, 0, 0, 0, 1129, 0, 939, 1380, 0, 1585,
	1768, 1694, 709, 1685, 1767, 1686, 1693, 1696, 0, 0,
	1698, 0, 1700, 0, 1763, 1764, 1771, 1772, 0, 1782,
	1783, 1775, 0, -2, 0, 0, 1778, 1779, 1704, 0,
	1721, 1722, 1723, 1752, 1755, 1482, 0, 3043, 752, 0,
	2017, 1891, 2018, 2019, 2423, 0, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, -2, -2, -2, -2,
	-2, -2, -2, -2, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, -2, -2, -2, 2059, 2060,
	2061, -2, 2322, 2324, 0, 2387, 0, -2, 0, -2,
	-2, -2, -2, 2080, 0, 2082, 2087, 2089, 2091, 0,
	0, 0, 0, 2386, 2101, 2370, 2371, 0, 0, 2278,
	2279, 2280, 2086, 0, 2105, 2385, 2382, 0, 0, 2316,
	0, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 0, 2334, 1751, 2166, 0, 0,
	0, 0, 2173, 2158, 2332, 0, 2331, 0, 0, 0,
	2342, 0, 2377, 2373, 0, 2421, 2012, 1999, 2000, 2001,
	2002, 2003, 2004, 2014, 0, 2418, 2456, 2462, 2252, 0,
	0, 0, 2203, 2204, 2205, 2206, 2207, 0, 2209, 2210,
	0, 2212, 2213, 0, 2215, 2216, 0, 2218, 2219, 2220,
	2221, 2222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 0, 0, 2224, 0, 2345, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2226, 0, 2228, 2336, 2356,
	0, 0, 2106, 0, 0, 0, 0, 0, 2231, 2336,
	2364, 0, 0, 0, 0, 0, 2336, 0, 2369, 0,
	2238, 0, 2240, 967, 968, 1730, 0, 0, 1886, 0,
	0, 0, 2391, 1886, 1886, 0, 1794, 0, 0, 1862,
	1863, 1864, 1865, 0, 0, 1866, 0, 1856, 1860, 1857,
	1858, 1852, 1815, 0, 0, 2425, 1852, 1821, 1851, 0,
	1341, 1841, 1852, 1852, 0, -2, 1825, 1842, 0, 0,
	629, 631, 633, 637, 639, 0, 0, 1751, -2, 0,
	-2, 353, 1340, 0, 0, 0, 0, 0, 0, 663,
	665, 0, 0, 571, 0, 0, 679, 0, 657, 0,
	660, 0, 1887, 1890, 0, 0, 1901, 1907, 1908, 0,
	-2, 0, 0, 1997, 0, 0, 0, 0, 0, 691,
	0, 694, 0, 0, 0, 464, 581, 229, 553, 0,
	229, 229, 562, 0, 0, 229, 573, 229, 2446, 229,
	2444, 250, 578, 1677, 262, 0, 751, 0, 1594, 1603,
	0, 790, 0, 792, 0, 2416, 2417, 0, 781, 0,
	888, 0, 902, 903, 904, 905, 0, 0, 0, 0,
	1544, 0, 0, 1489, 0, 0, 186, 2910, 0, 231,
	0, 0, 1303, 2431, 0, 1293, 0, 0, 2581, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 150, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 1364, 1365, 1367,
	1374, 1376, 0, 1370, 1371, 0, 1373, 1375, 1377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 1397, 0, 0, 0, 1398, 1399, 1400, 1616, 1617,
	0, 1639, 1640, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 2398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 351, 647,
	648, 347, 344, 346, 649, 654, 0, 655, 0, 0,
	0, 0, 1390, 0, 1441, 1439, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 0, 0, 0, 0, -2, 1392, 1393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	342, 2397, 2407, 0, 1170, 1171, 387, 390, 393, 396,
	268, 0, 0, 426, 437, 0, 0, 1223, 1195, 0,
	0, 491, 351, 0, 0, 506, 0, 511, 2448, 1180,
	1358, 1361, 0, 1341, 2910, 1409, 0, 0, 0, 0,
	0, 0, 1452, 0, 0, 2910, 2426, 2478, 2479, 1630,
	1640, 0, 1886, 0, 1663, 1649, 0, 0, 0, 1663,
	1667, 1668, 1670, 1671, 0, 0, 1877, 1883, 589, 641,
	1738, 1738, 351, 349, 2722, 0, 0, 1652, 1654, 0,
	0, 0, 294, 0, 305, 1855, 303, 0, 308, 0,
	0, 1855, 302, 0, 503, 728, 733, 941, 0, 0,
	351, 950, 951, 952, 1005, 1049, 1057, 1108, 969, 971,
	972, 973, 0, 978, 0, 0, 0, 1145, 1141, 1142,
	1143, 989, 1059, 992, 1059, 995, 1059, 998, 1000, 1018,
	1024, 1037, 1030, 1038, 0, 0, 0, 1051, 0, 1069,
	0, 1078, 1091, 0, 0, 0, 0, 0, 0, 0,
	1114, 1115, 1116, 1118, 1123, 1122, 0, 1128, 940, 1874,
	1689, 1690, 1692, 0, 1701, 0, 0, 1777, -2, -2,
	1776, 1780, 1781, -2, -2, -2, -2, 1697, 0, 1706,
	1703, 0, 1762, 1480, 1481, 0, 0, 753, 0, 0,
	-2, -2, 0, 0, 0, 2102, 0, -2, 2081, 2084,
	2088, 2090, 2092, 0, 0, 0, 0, 0, 0, 2325,
	0, 2327, 2103, 2380, 2383, 2318, 0, 2274, 0, 0,
	1750, 1751, 1751, 0, 2172, 0, 2333, 0, 2340, 2341,
	0, 2165, 0, 2374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2176, 0, 0, 0, 0, 2208, 2211,
	2214, 2217, 0, 0, 0, 0, 2197, 0, 0, 0,
	2201, 1967, 1953, 0, 1995, 1993, 1994, 1988, 1995, 1992,
	1945, 0, 1944, 0, 2223, 0, 2225, 2227, 0, 0,
	2229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2109, 2110, 2111, 2131, 2230,
	2362, 2363, 0, 0, 0, 0, 0, 0, 2236, 0,
	2368, 2237, 2239, 1738, 0, 1731, 0, 1796, 1785, 1885,
	0, 2389, 1855, 1798, 1800, 2390, 2428, 1785, 1785, 0,
	2337, 0, 0, 1846, 0, 0, 0, 1848, 1819, 0,
	0, 1813, 0, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1820, 1341, 1850, 1822, 1826, 2456, 0, 1852, 0, 1837,
	0, 1839, 1872, 0, 1831, 1834, 0, 0, 2471, 1886,
	0, 400, 408, 409, 401, 402, 403, 404, 0, 1529,
	0, 0, 0, 0, 0, 2339, 0, 1892, 0, 1898,
	0, 0, 0, 0, 681, 0, 0, 0, 0, 0,
	1675, 459, 552, 229, 557, 560, 2395, 229, 566, 569,
	575, 258, 0, 741, -2, 788, 789, 791, 0, 787,
	893, 889, 183, 1545, 0, 0, 0, 1485, 0, 1206,
	0, 1201, 1202, 1487, 1491, 1497, 1500, 0, 188, 2910,
	200, 0, 2910, 0, 1267, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 2910, 229, 2910, 229, 204, 206,
	209, 0, 215, 211, 0, 1203, 0, 1255, 0, 0,
	1258, 136, 1545, 0, 0, 139, 143, 155, 0, 0,
	0, 165, 0, 0, 0, 1502, 1506, 1514, 0, 0,
	0, 1368, 1369, 1372, 1378, 96, 0, 0, 0, 1510,
	1512, 1518, 111, 114, 2910, 2440, 0, 116, 2910, 0,
	0, 0, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 141, 145, 156, 0, 1520, 138, 0, 244,
	0, 0, 234, 229, 2910, 0, 236, 0, 237, 238,
	252, 0, 0, 0, 646, 0, 0, 0, 651, 0,
	1183, 1184, 1440, 0, 1383, 1384, 0, 1395, 1389, 0,
	0, 0, 0, 0, 1522, 1523, 0, 0, 0, 1543,
	1538, 1855, 264, 0, 1855, 272, 0, 2403, 0, 286,
	423, 0, 0, 0, 0, 1222, 1321, 1224, 1226, 1227,
	1228, 231, 0, 2479, 1293, 2637, 2479, 0, 0, 1190,
	0, 0, 0, 497, 493, 0, 502, 505, 510, 0,
	509, 2432, 515, -2, 0, 0, 0, 0, -2, 0,
	0, 1456, 1450, 1451, 0, 0, 0, 0, 2910, 1632,
	1640, 0, 1736, 1751, 522, 1641, 1663, 0, 0, 0,
	1651, 1647, 1644, 1886, 0, 0, 0, 0, 0, 1879,
	1882, 592, 593, 328, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 306, 0, 309, 0, 0, 0, 314,
	315, 316, 317, 318, 319, 0, 0, 0, 0, 308,
	340, 296, 1855, 0, 308, 0, 0, 730, 0, 0,
	0, 948, 0, 0, 1541, 982, 991, 993, 996, 1040,
	1042, 1059, 0, 1070, 1098, 2427, 1099, 1245, 0, 1245,
	0, 0, 1119, 1125, 1699, 0, 1774, 1705, 1756, 1757,
	0, 1482, 0, 2020, 2065, 0, 0, -2, 0, 0,
	2069, 0, 0, 0, -2, 0, 0, 0, 2326, 2328,
	0, 2382, 2317, 2167, 0, 0, 0, 2171, 2155, 2156,
	0, 2277, 2343, 2372, 2376, 0, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 0, 2422, 2457, 2461, 2250, 2251, 2255,
	2436, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 1990, 0, 0, 2344, 2355, 2357,
	2107, 2108, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, -2, -2, -2, 2125, 2126, 2127, -2, -2,
	-2, 2132, 0, 0, 0, 2358, 2360, 2361, 2365, 2366,
	0, 2233, 2234, 2235, 2367, 0, 1738, 1732, 1793, 0,
	1884, 1797, 0, 1793, 1793, 1745, 1844, 0, 0, 1868,
	0, 1816, 0, 1817, 0, 0, 1849, 0, 1824, 1827,
	1828, 1838, 0, 1830, 0, 1833, 0, 2167, -2, 352,
	354, 356, 0, 359, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 1529, 1529, 0,
	674, 658, 0, 0, 1894, 0, 0, 1970, 1974, 1998,
	685, 687, 0, 0, 2861, 2801, 0, 684, 554, 563,
	260, 0, 1853, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 230, 0, 1302, 0, 1265,
	0, 0, 1292, 0, 0, 1308, 190, 191, 192, 0,
	0, 0, 0, 202, 0, 0, 198, 0, 208, 214,
	213, 0, 1252, 0, 0, 0, 0, 1490, 0, 0,
	0, 162, 163, 164, 0, 169, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 1622, 1623, 0, 1613, 159, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 1479, 254, 0, 0,
	0, 0, 0, 348, 343, 345, 0, 1382, 1443, 1444,
	1391, 1503, 1507, 1515, 0, 0, 0, 0, 0, 699,
	1542, 0, 272, 270, 0, 273, 0, 276, 277, 0,
	0, 272, 266, 0, 0, 0, 1341, 438, 1193, 1309,
	0, 0, 1311, 1229, 1233, 0, 2479, 2479, 0, 2433,
	0, 1191, 0, 0, 1310, 489, 0, 496, 0, 508,
	512, 0, 0, 1362, 0, 0, 1386, 1412, 1341, 0,
	1455, 1457, 0, 1465, 0, 0, 0, 1634, 1640, 0,
	1627, 1628, 1770, 1642, 1661, -2, 0, 0, 1751, 1669,
	1666, 1672, 1673, 0, 0, 0, 331, 0, 1653, 1655,
	0, 1164, 1167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 308, 1855, 298, 1855, 335, 0, 942,
	351, 974, 1540, 979, 1050, 1068, 1100, 1244, 0, 0,
	1102, 0, 0, 1773, 1760, 1761, 1758, 1482, 2067, 2071,
	0, 0, 0, 2073, -2, 0, 2095, -2, -2, 2329,
	2381, 2146, 1751, 2168, 2170, 2157, 2375, 2015, 0, 2257,
	2254, 0, 2241, 0, 2192, 2193, 0, 0, 2196, 2198,
	2199, 2200, 1954, 1947, 1946, 2354, 0, 0, 0, 0,
	2232, 1733, 0, 2246, 0, 0, 1801, 2246, 2246, 1845,
	0, 1847, 1814, 1802, 0, 1811, 0, 2457, 1840, 1832,
	0, 0, 357, 0, 361, 362, 363, 364, 365, 366,
	0, 0, 0, 0, 0, 405, 0, 675, 676, 0,
	0, 1888, 1893, 0, 1899, 1969, 0, 0, 0, 0,
	0, 261, 0, 891, 892, 184, 185, 1207, 1205, 1494,
	1498, 1495, 0, 187, 0, 0, 1266, 0, 1269, 0,
	0, 0, 0, 1276, 1293, 0, 0, 0, 0, 0,
	0, 1295, 0, 1294, 0, 0, 1325, 0, 1470, 1477,
	0, -2, 0, 0, 0, 194, 220, 0, 0, 0,
	0, 223, 1546, 196, 0, 0, 229, 229, 1204, 0,
	0, 1486, 1488, 1501, 0, 0, 0, 0, 172, 0,
	0, 1504, 1508, 1516, 1511, 1513, 1519, 0, 0, 117,
	0, 0, 1624, 0, 158, 0, 0, 0, 1521, 242,
	243, 0, 229, 0, 229, 235, 229, 1479, 0, 0,
	0, 0, 0, 0, 0, 0, 1524, 1525, 263, 0,
	0, 0, 0, 0, 265, 341, 272, 425, 0, 1254,
	0, 1321, 1313, 1314, 1315, 0, 1225, 1320, 1322, 0,
	0, 1230, 0, 0, 0, 0, 1210, 1192, 0, 1223,
	1195, 0, 494, 513, 0, 516, 0, 519, 1181, 1359,
	1404, 1341, 1407, 0, 0, 1447, 0, 0, 0, 0,
	0, 0, 0, 1636, 1640, 0, 1629, 1630, 1663, 1769,
	0, 0, 0, 1650, 1770, 0, 350, 351, 0, 351,
	310, 0, 311, 312, 313, 320, 321, 322, 323, 297,
	300, 308, 732, 734, 0, 0, 740, 947, 1243, 0,
	0, 0, 0, 1759, 2075, -2, -2, 2096, 0, 2458,
	2460, 1751, 0, 2243, 1753, 0, 0, -2, 0, 0,
	0, 1734, 1717, 0, 1792, 1784, 1786, 1788, 2787, 2554,
	2909, 1718, 1719, 1867, 0, 0, 1835, 358, 367, 368,
	0, 370, 371, 1528, 677, 0, 0, 1895, 0, 682,
	0, 0, 0, 881, 0, 0, 1496, 189, 0, 0,
	1270, 1271, 1273, 0, 1275, 1277, 1278, 1195, 0, 1282,
	0, 2481, 0, 1287, 1290, 1291, 0, 0, 1304, 1326,
	0, 1335, 0, 1472, 1482, 1476, 0, 1474, 1337, 0,
	193, 222, 195, 224, 219, 0, 1479, 0, 197, 207,
	0, 0, 140, 0, 0, 2548, 175, 173, 171, 115,
	121, 123, 1483, 161, 0, 142, 0, 244, 253, 1478,
	255, 239, 229, 0, 0, 1505, 1509, 1517, 0, 1532,
	1533, 1534, 1535, 0, 0, 0, 0, 274, 0, 275,
	278, 279, 0, 0, 1195, 1253, 1194, 1312, 0, 1323,
	1195, 0, 0, 0, 0, 0, 0, 1197, 0, 1196,
	0, 0, 495, 498, 0, 501, 0, 0, 0, 0,
	0, 1411, 0, 1458, 1456, 0, 1464, 0, 0, 0,
	1612, 0, 0, 1631, 1632, 520, 1656, 0, 0, 1663,
	1674, 330, 0, 333, 307, 299, 0, 736, 0, 738,
	0, 1101, 1103, 0, 0, 2169, 2261, 0, 0, 2194,
	2195, -2, 0, 2135, 2245, 2247, 0, 0, 0, 0,
	0, 1803, 1812, 369, 1529, 1889, 689, 686, 688, 0,
	1492, 0, 1499, 231, 1268, 1272, 0, 1279, 0, 0,
	0, 1283, 1345, 0, 0, 1362, 1362, 1296, 0, 0,
	1329, 1330, 1250, 0, 1331, 1332, 1333, 1471, 1762, 1477,
	1195, 0, 0, 221, 226, 0, 0, 0, 0, 0,
	0, 160, 0, 233, 256, 1479, 0, 0, 1536, 1537,
	0, 0, 271, 290, 0, 1405, 1197, 0, 1324, 1231,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1232,
	1337, 0, 0, 1301, 1208, 0, 1211, 0, 1193, 0,
	499, 500, 517, 0, 518, 0, 0, 1412, 0, 0,
	1465, 0, 0, 1619, 1611, 1640, 1633, 1634, 1886, 0,
	1664, 0, 735, 0, 0, 1111, 1112, 0, 0, 0,
	0, 2256, 1754, 2136, 0, 0, 1787, 1789, 1790, 1791,
	678, 0, 1493, 201, 0, 1339, 1281, 1350, 0, 0,
	0, 0, 0, 1297, 1327, 1328, 1325, 1249, 0, 1475,
	1473, 1306, 1339, 1341, 199, 0, 1337, 0, 1259, 0,
	0, 1262, 0, 0, 176, 2548, 174, 0, 229, 656,
	1529, 229, 0, 293, 0, 284, 282, 283, 1189, 0,
	1317, 1319, 1335, 1337, 1250, 0, 1212, 1254, 1210, 514,
	1406, 1410, 1408, 1448, 1337, 0, 1335, 0, 1626, 1640,
	1620, 1621, 0, 1636, 0, 0, 351, 737, 739, 2253,
	2273, 2262, -2, 2864, 2555, 0, 2273, 2273, 2248, 2249,
	0, 0, 1195, 0, 1284, 1346, 1347, 0, 1342, 1343,
	1344, 2480, 1285, 1286, 1288, 1289, 1886, 0, 1336, 1345,
	225, 1195, 1256, 0, 0, 1257, 0, 0, 179, 0,
	181, 257, 1527, 1530, 0, 280, 0, 0, 1186, 1188,
	1195, 0, 1250, 1335, 1195, 0, 0, 0, 1195, 1197,
	1335, 0, 1250, 0, 1615, 1625, 0, 1635, 1612, 0,
	1659, 0, 332, 2258, 0, 0, 2264, 2265, 2266, 2267,
	2268, 2259, 2260, 690, 1274, 1280, 0, 1348, 0, 1349,
	0, 0, 0, 1305, 1334, 1350, 205, 1260, 0, 1263,
	0, 177, 0, 0, 288, 289, 1316, 1318, 1195, 1250,
	1886, 1198, 0, 1200, 1197, 1209, 1250, 0, 1195, 0,
	1638, 1614, 1618, 2441, 1619, 1657, 0, 0, 0, 2270,
	2271, 0, 0, 0, 1351, 0, 1354, 1355, 0, 1352,
	1325, 0, 0, 229, 0, 1886, 1195, 1300, 1199, 1189,
	1195, 1337, 1886, 1335, 1608, 1640, 1626, 0, 1886, 2269,
	2272, 2263, 1338, 1353, 1356, 1357, 1307, 0, 0, 1531,
	291, 0, 1298, 1886, 1187, 1886, 1335, 1461, 1250, 0,
	1615, 1886, 1660, 1247, 0, 0, 1299, 1459, 1250, 1195,
	1637, 1609, 1658, 1261, 1246, 0, 292, 1195, 1886, 0,
	1886, 1462, 0, 1460, 1247, 1264,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 620, 3, 626, 621, 3,
	632, 633, 624, 622, 637, 623, 634, 625, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 640, 3,
	612, 614, 613, 617, 636, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 630, 3, 631, 627, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 638, 619, 639, 615,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 616,
	57955, 618, 57956, 628, 57957, 629, 57958, 635, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1597
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1623
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1743
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1786
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1797
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1809
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1927
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1959
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1983
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1992
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2013
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2057
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2068
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2080
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2101
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2163
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2172
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2183
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2191
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2202
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2212
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2222
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2231
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2242
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2248
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2274
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2279
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2370
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2414
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2424
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2427
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2433
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2485
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2680
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2684
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2876
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3335
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3344
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3350
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3355
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3360
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3468
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3554
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3700
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3726
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3731
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "CREATE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "create access method")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplemented(sqllex, "create cast")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplemented(sqllex, "create publication")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3787
		{
			return unimplemented(sqllex, "create rule")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			return unimplemented(sqllex, "create server")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3791
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3796
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3800
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3804
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return unimplemented(sqllex, "drop server")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3825
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3832
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3836
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3951
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4007
		{

			sqlVAL.union.val = nil
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4094
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "DROP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4386
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4410
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4418
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "DELETE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "INSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "DELETE")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "INSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4608
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4732
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4748
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "GRANT")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4844
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "RESET")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "RESET")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "USE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5075
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5113
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5119
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return unimplemented(sqllex, "set from current")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = tree.Low
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = tree.Normal
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.High
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
			return helpWith(sqllex, "SHOW")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = false
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = false
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "FETCH")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			return helpWith(sqllex, "MOVE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5573
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = int64(1)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = int64(-1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = int64(1)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = int64(1)
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = int64(-1)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5632
		{
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5633
		{
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5647
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.str = "client_encoding"
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5689
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.str = "timezone"
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5725
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.expr(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5867
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5881
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = true
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = true
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = false
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6106
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6108
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6176
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6220
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6225
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6227
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6231
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = true
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = false
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = true
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = false
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6344
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6354
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6365
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6431
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6436
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6446
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6475
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6480
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6502
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6520
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6528
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6549
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6554
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6559
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6572
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6595
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6607
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6673
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6683
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6942
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6955
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6968
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7041
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7160
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7175
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{

			sqlVAL.union.val = nil
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.str = ""
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = nil
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7242
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7246
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7282
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7295
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7409
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7548
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7655
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7700
		{

			sqlVAL.union.val = true
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = false
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7814
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7852
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7935
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7936
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7938
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8107
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8116
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8124
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8135
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8165
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8169
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8172
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8175
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.str = ""
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = true
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{

			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = false
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8313
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8327
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8339
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8351
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8361
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8371
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8375
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = true
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = true
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = nil
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8519
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8546
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8548
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8550
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8554
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8589
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8606
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8624
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8640
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8656
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = false
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = true
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = false
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = true
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = false
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.str = ""
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.str = ""
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8793
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8799
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9024
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9030
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9042
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9048
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9062
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9068
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = true
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.Types
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9191
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.str = ""
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9226
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9227
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9231
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9260
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9327
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9397
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9461
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.str = ""
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9578
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{

		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9615
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.str = ""
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.str = ""
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.str = ""
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.str = ""
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9670
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9696
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9850
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9888
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9941
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9956
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10136
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10312
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = nil
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = true
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = false
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = false
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = true
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10356
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10413
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10418
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10477
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10573
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10603
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10605
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10642
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10689
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10720
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10762
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10772
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10818
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10848
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10881
		{
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10883
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = nil
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = true
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = false
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.str = tree.AstFull
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.str = tree.AstRight
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.str = tree.AstInner
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11001
		{
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.str = tree.AstHash
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.str = ""
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11105
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = true
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = false
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = true
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = false
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11164
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11177
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11185
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11204
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11214
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11234
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11283
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11296
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = types.Geography
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11345
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11353
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11379
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11387
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = nil
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = types.Int2
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = types.Int
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = types.Float4
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = types.Float
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11430
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11438
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11446
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = types.Bool
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = types.Float
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11479
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11485
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11507
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = types.String
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = true
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = false
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = types.Date
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11556
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11564
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11578
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11587
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11595
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11612
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = true
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = false
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = false
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = types.Interval
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11636
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11735
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = nil
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11765
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11825
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11974
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11982
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12169
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12191
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12299
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12307
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12408
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12434
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12458
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12492
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12503
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12504
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12519
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12528
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12594
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12733
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12751
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12760
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12765
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12780
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12795
		{
			return unimplemented(sqllex, "treat")
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12816
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12821
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12868
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.str = ""
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12957
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12970
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13067
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13143
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13361
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13369
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13373
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13399
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13417
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13440
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13457
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13468
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13483
		{
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13484
		{
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13498
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13515
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13523
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13556
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13564
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13596
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13600
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13604
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13608
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13614
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13637
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13649
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13653
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13662
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13673
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13682
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13690
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13707
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13800
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13810
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13822
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13864
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13882
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13886
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13899
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13908
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13926
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13939
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13946
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13971
		{
			sqlVAL.str = ""
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
