// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONED = lex.PARTITIONED
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONED",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12957

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1497,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 385,
	-2, 0,
	-1, 74,
	241, 228,
	506, 228,
	-2, 0,
	-1, 87,
	229, 1238,
	243, 1238,
	259, 381,
	386, 381,
	396, 1008,
	432, 381,
	444, 1008,
	490, 1008,
	517, 381,
	543, 1008,
	-2, 0,
	-1, 93,
	133, 1497,
	236, 1497,
	528, 1497,
	529, 1497,
	-2, 0,
	-1, 109,
	151, 1468,
	170, 1468,
	183, 1468,
	239, 1468,
	272, 1468,
	337, 1468,
	347, 1468,
	523, 1468,
	-2, 1439,
	-1, 148,
	159, 866,
	258, 866,
	389, 833,
	449, 833,
	489, 833,
	509, 866,
	511, 833,
	-2, 0,
	-1, 150,
	4, 1499,
	21, 1499,
	22, 1499,
	23, 1499,
	24, 1499,
	25, 1499,
	26, 1499,
	27, 1499,
	28, 1499,
	30, 1499,
	31, 1499,
	37, 1499,
	42, 1499,
	43, 1499,
	45, 1499,
	46, 1499,
	47, 1499,
	48, 1499,
	49, 1499,
	50, 1499,
	51, 1499,
	52, 1499,
	54, 1499,
	55, 1499,
	56, 1499,
	57, 1499,
	59, 1499,
	60, 1499,
	61, 1499,
	62, 1499,
	63, 1499,
	64, 1499,
	65, 1499,
	69, 1499,
	70, 1499,
	71, 1499,
	72, 1499,
	74, 1499,
	75, 1499,
	76, 1499,
	80, 1499,
	81, 1499,
	82, 1499,
	83, 1499,
	84, 1499,
	85, 1499,
	86, 1499,
	89, 1499,
	90, 1499,
	91, 1499,
	92, 1499,
	93, 1499,
	95, 1499,
	97, 1499,
	98, 1499,
	99, 1499,
	100, 1499,
	101, 1499,
	102, 1499,
	104, 1499,
	105, 1499,
	106, 1499,
	108, 1499,
	109, 1499,
	110, 1499,
	118, 1499,
	119, 1499,
	120, 1499,
	121, 1499,
	122, 1499,
	124, 1499,
	125, 1499,
	126, 1499,
	128, 1499,
	129, 1499,
	130, 1499,
	132, 1499,
	133, 1499,
	134, 1499,
	136, 1499,
	137, 1499,
	138, 1499,
	141, 1499,
	142, 1499,
	143, 1499,
	145, 1499,
	146, 1499,
	148, 1499,
	149, 1499,
	150, 1499,
	152, 1499,
	153, 1499,
	154, 1499,
	155, 1499,
	156, 1499,
	157, 1499,
	158, 1499,
	159, 1499,
	160, 1499,
	161, 1499,
	162, 1499,
	163, 1499,
	164, 1499,
	165, 1499,
	166, 1499,
	167, 1499,
	169, 1499,
	175, 1499,
	176, 1499,
	177, 1499,
	178, 1499,
	182, 1499,
	184, 1499,
	185, 1499,
	189, 1499,
	190, 1499,
	191, 1499,
	192, 1499,
	193, 1499,
	194, 1499,
	195, 1499,
	196, 1499,
	197, 1499,
	198, 1499,
	199, 1499,
	200, 1499,
	201, 1499,
	203, 1499,
	204, 1499,
	206, 1499,
	207, 1499,
	209, 1499,
	210, 1499,
	211, 1499,
	212, 1499,
	213, 1499,
	214, 1499,
	215, 1499,
	216, 1499,
	217, 1499,
	219, 1499,
	220, 1499,
	222, 1499,
	223, 1499,
	224, 1499,
	225, 1499,
	229, 1499,
	230, 1499,
	231, 1499,
	232, 1499,
	233, 1499,
	236, 1499,
	237, 1499,
	238, 1499,
	240, 1499,
	242, 1499,
	243, 1499,
	245, 1499,
	247, 1499,
	248, 1499,
	249, 1499,
	251, 1499,
	255, 1499,
	256, 1499,
	257, 1499,
	258, 1499,
	259, 1499,
	260, 1499,
	262, 1499,
	263, 1499,
	264, 1499,
	266, 1499,
	267, 1499,
	269, 1499,
	270, 1499,
	273, 1499,
	277, 1499,
	278, 1499,
	279, 1499,
	282, 1499,
	283, 1499,
	284, 1499,
	285, 1499,
	287, 1499,
	288, 1499,
	289, 1499,
	290, 1499,
	291, 1499,
	292, 1499,
	293, 1499,
	294, 1499,
	295, 1499,
	296, 1499,
	297, 1499,
	298, 1499,
	299, 1499,
	300, 1499,
	301, 1499,
	302, 1499,
	303, 1499,
	304, 1499,
	305, 1499,
	306, 1499,
	307, 1499,
	308, 1499,
	310, 1499,
	312, 1499,
	313, 1499,
	314, 1499,
	315, 1499,
	316, 1499,
	317, 1499,
	318, 1499,
	319, 1499,
	320, 1499,
	321, 1499,
	322, 1499,
	323, 1499,
	325, 1499,
	327, 1499,
	329, 1499,
	330, 1499,
	332, 1499,
	333, 1499,
	334, 1499,
	335, 1499,
	336, 1499,
	339, 1499,
	342, 1499,
	343, 1499,
	344, 1499,
	345, 1499,
	348, 1499,
	349, 1499,
	350, 1499,
	352, 1499,
	354, 1499,
	355, 1499,
	356, 1499,
	357, 1499,
	358, 1499,
	359, 1499,
	360, 1499,
	361, 1499,
	362, 1499,
	363, 1499,
	364, 1499,
	365, 1499,
	366, 1499,
	368, 1499,
	369, 1499,
	370, 1499,
	371, 1499,
	372, 1499,
	373, 1499,
	374, 1499,
	375, 1499,
	376, 1499,
	377, 1499,
	378, 1499,
	379, 1499,
	380, 1499,
	381, 1499,
	382, 1499,
	384, 1499,
	385, 1499,
	387, 1499,
	388, 1499,
	389, 1499,
	390, 1499,
	391, 1499,
	392, 1499,
	393, 1499,
	394, 1499,
	395, 1499,
	396, 1499,
	397, 1499,
	398, 1499,
	400, 1499,
	402, 1499,
	403, 1499,
	404, 1499,
	409, 1499,
	411, 1499,
	412, 1499,
	413, 1499,
	414, 1499,
	415, 1499,
	416, 1499,
	417, 1499,
	418, 1499,
	419, 1499,
	421, 1499,
	422, 1499,
	423, 1499,
	425, 1499,
	426, 1499,
	427, 1499,
	428, 1499,
	429, 1499,
	430, 1499,
	432, 1499,
	433, 1499,
	434, 1499,
	435, 1499,
	436, 1499,
	437, 1499,
	438, 1499,
	439, 1499,
	440, 1499,
	441, 1499,
	442, 1499,
	444, 1499,
	445, 1499,
	446, 1499,
	447, 1499,
	448, 1499,
	449, 1499,
	451, 1499,
	452, 1499,
	453, 1499,
	454, 1499,
	455, 1499,
	456, 1499,
	458, 1499,
	459, 1499,
	460, 1499,
	461, 1499,
	462, 1499,
	463, 1499,
	464, 1499,
	466, 1499,
	468, 1499,
	469, 1499,
	470, 1499,
	471, 1499,
	472, 1499,
	473, 1499,
	474, 1499,
	475, 1499,
	476, 1499,
	477, 1499,
	478, 1499,
	479, 1499,
	480, 1499,
	481, 1499,
	482, 1499,
	483, 1499,
	485, 1499,
	486, 1499,
	488, 1499,
	489, 1499,
	491, 1499,
	492, 1499,
	493, 1499,
	494, 1499,
	495, 1499,
	496, 1499,
	497, 1499,
	498, 1499,
	499, 1499,
	501, 1499,
	502, 1499,
	503, 1499,
	504, 1499,
	505, 1499,
	507, 1499,
	509, 1499,
	510, 1499,
	511, 1499,
	512, 1499,
	513, 1499,
	514, 1499,
	516, 1499,
	517, 1499,
	518, 1499,
	519, 1499,
	521, 1499,
	522, 1499,
	525, 1499,
	526, 1499,
	527, 1499,
	528, 1499,
	529, 1499,
	530, 1499,
	531, 1499,
	533, 1499,
	536, 1499,
	537, 1499,
	538, 1499,
	539, 1499,
	540, 1499,
	541, 1499,
	543, 1499,
	544, 1499,
	545, 1499,
	546, 1499,
	552, 1499,
	553, 1499,
	554, 1499,
	555, 1499,
	556, 1499,
	557, 1499,
	-2, 0,
	-1, 151,
	1, 1354,
	131, 1354,
	247, 1354,
	326, 1354,
	384, 1354,
	393, 1354,
	561, 1354,
	585, 1354,
	-2, 0,
	-1, 153,
	1, 1354,
	585, 1354,
	-2, 0,
	-1, 154,
	1, 1354,
	585, 1354,
	-2, 0,
	-1, 155,
	1, 1354,
	506, 1354,
	585, 1354,
	-2, 0,
	-1, 183,
	151, 1467,
	170, 1467,
	183, 1467,
	239, 1467,
	272, 1467,
	337, 1467,
	347, 1467,
	523, 1467,
	-2, 1442,
	-1, 229,
	4, 1506,
	5, 1506,
	6, 1506,
	7, 1506,
	8, 1506,
	9, 1506,
	10, 1506,
	21, 1506,
	22, 1506,
	23, 1506,
	24, 1506,
	25, 1506,
	26, 1506,
	27, 1506,
	28, 1506,
	30, 1506,
	31, 1506,
	37, 1506,
	38, 1506,
	42, 1506,
	43, 1506,
	44, 1506,
	45, 1506,
	46, 1506,
	47, 1506,
	48, 1506,
	49, 1506,
	50, 1506,
	51, 1506,
	52, 1506,
	54, 1506,
	55, 1506,
	56, 1506,
	57, 1506,
	59, 1506,
	60, 1506,
	61, 1506,
	62, 1506,
	63, 1506,
	64, 1506,
	65, 1506,
	66, 1506,
	67, 1506,
	68, 1506,
	69, 1506,
	70, 1506,
	71, 1506,
	72, 1506,
	74, 1506,
	75, 1506,
	76, 1506,
	78, 1506,
	80, 1506,
	81, 1506,
	82, 1506,
	83, 1506,
	84, 1506,
	85, 1506,
	86, 1506,
	89, 1506,
	90, 1506,
	91, 1506,
	92, 1506,
	93, 1506,
	95, 1506,
	97, 1506,
	98, 1506,
	99, 1506,
	100, 1506,
	101, 1506,
	102, 1506,
	104, 1506,
	105, 1506,
	106, 1506,
	107, 1506,
	108, 1506,
	109, 1506,
	110, 1506,
	111, 1506,
	112, 1506,
	113, 1506,
	114, 1506,
	115, 1506,
	116, 1506,
	117, 1506,
	118, 1506,
	119, 1506,
	120, 1506,
	121, 1506,
	122, 1506,
	123, 1506,
	124, 1506,
	125, 1506,
	126, 1506,
	127, 1506,
	128, 1506,
	129, 1506,
	130, 1506,
	132, 1506,
	133, 1506,
	134, 1506,
	136, 1506,
	137, 1506,
	138, 1506,
	141, 1506,
	142, 1506,
	143, 1506,
	145, 1506,
	146, 1506,
	148, 1506,
	149, 1506,
	150, 1506,
	152, 1506,
	153, 1506,
	154, 1506,
	155, 1506,
	156, 1506,
	157, 1506,
	158, 1506,
	159, 1506,
	160, 1506,
	161, 1506,
	162, 1506,
	163, 1506,
	164, 1506,
	165, 1506,
	166, 1506,
	167, 1506,
	168, 1506,
	169, 1506,
	175, 1506,
	176, 1506,
	177, 1506,
	178, 1506,
	182, 1506,
	184, 1506,
	185, 1506,
	188, 1506,
	189, 1506,
	190, 1506,
	191, 1506,
	192, 1506,
	193, 1506,
	194, 1506,
	195, 1506,
	196, 1506,
	197, 1506,
	198, 1506,
	199, 1506,
	200, 1506,
	201, 1506,
	203, 1506,
	204, 1506,
	206, 1506,
	207, 1506,
	209, 1506,
	210, 1506,
	211, 1506,
	212, 1506,
	213, 1506,
	214, 1506,
	215, 1506,
	216, 1506,
	217, 1506,
	218, 1506,
	219, 1506,
	220, 1506,
	222, 1506,
	223, 1506,
	224, 1506,
	225, 1506,
	229, 1506,
	230, 1506,
	231, 1506,
	232, 1506,
	233, 1506,
	235, 1506,
	236, 1506,
	237, 1506,
	238, 1506,
	240, 1506,
	242, 1506,
	243, 1506,
	244, 1506,
	245, 1506,
	246, 1506,
	247, 1506,
	248, 1506,
	249, 1506,
	250, 1506,
	251, 1506,
	255, 1506,
	256, 1506,
	257, 1506,
	258, 1506,
	259, 1506,
	260, 1506,
	262, 1506,
	263, 1506,
	264, 1506,
	266, 1506,
	267, 1506,
	268, 1506,
	269, 1506,
	270, 1506,
	271, 1506,
	273, 1506,
	277, 1506,
	278, 1506,
	279, 1506,
	280, 1506,
	281, 1506,
	282, 1506,
	283, 1506,
	284, 1506,
	285, 1506,
	287, 1506,
	288, 1506,
	289, 1506,
	290, 1506,
	291, 1506,
	292, 1506,
	293, 1506,
	294, 1506,
	295, 1506,
	296, 1506,
	297, 1506,
	298, 1506,
	299, 1506,
	300, 1506,
	301, 1506,
	302, 1506,
	303, 1506,
	304, 1506,
	305, 1506,
	306, 1506,
	307, 1506,
	308, 1506,
	310, 1506,
	311, 1506,
	312, 1506,
	313, 1506,
	314, 1506,
	315, 1506,
	316, 1506,
	317, 1506,
	318, 1506,
	319, 1506,
	320, 1506,
	321, 1506,
	322, 1506,
	323, 1506,
	324, 1506,
	325, 1506,
	326, 1506,
	327, 1506,
	328, 1506,
	329, 1506,
	330, 1506,
	331, 1506,
	332, 1506,
	333, 1506,
	334, 1506,
	335, 1506,
	336, 1506,
	339, 1506,
	343, 1506,
	344, 1506,
	345, 1506,
	348, 1506,
	349, 1506,
	350, 1506,
	351, 1506,
	352, 1506,
	353, 1506,
	354, 1506,
	355, 1506,
	356, 1506,
	357, 1506,
	358, 1506,
	359, 1506,
	360, 1506,
	361, 1506,
	362, 1506,
	363, 1506,
	364, 1506,
	365, 1506,
	366, 1506,
	368, 1506,
	369, 1506,
	370, 1506,
	371, 1506,
	372, 1506,
	373, 1506,
	374, 1506,
	375, 1506,
	376, 1506,
	377, 1506,
	378, 1506,
	379, 1506,
	380, 1506,
	381, 1506,
	382, 1506,
	384, 1506,
	385, 1506,
	387, 1506,
	388, 1506,
	389, 1506,
	390, 1506,
	391, 1506,
	392, 1506,
	393, 1506,
	394, 1506,
	395, 1506,
	396, 1506,
	397, 1506,
	398, 1506,
	400, 1506,
	402, 1506,
	403, 1506,
	404, 1506,
	409, 1506,
	411, 1506,
	412, 1506,
	413, 1506,
	414, 1506,
	415, 1506,
	416, 1506,
	417, 1506,
	418, 1506,
	419, 1506,
	421, 1506,
	422, 1506,
	423, 1506,
	424, 1506,
	425, 1506,
	426, 1506,
	427, 1506,
	428, 1506,
	429, 1506,
	430, 1506,
	432, 1506,
	433, 1506,
	434, 1506,
	435, 1506,
	436, 1506,
	437, 1506,
	438, 1506,
	439, 1506,
	440, 1506,
	441, 1506,
	442, 1506,
	444, 1506,
	445, 1506,
	446, 1506,
	447, 1506,
	448, 1506,
	449, 1506,
	450, 1506,
	451, 1506,
	452, 1506,
	453, 1506,
	454, 1506,
	455, 1506,
	456, 1506,
	457, 1506,
	458, 1506,
	459, 1506,
	460, 1506,
	461, 1506,
	462, 1506,
	463, 1506,
	464, 1506,
	466, 1506,
	468, 1506,
	469, 1506,
	470, 1506,
	471, 1506,
	472, 1506,
	473, 1506,
	474, 1506,
	475, 1506,
	476, 1506,
	477, 1506,
	478, 1506,
	479, 1506,
	480, 1506,
	481, 1506,
	482, 1506,
	483, 1506,
	485, 1506,
	486, 1506,
	487, 1506,
	488, 1506,
	489, 1506,
	491, 1506,
	492, 1506,
	493, 1506,
	494, 1506,
	495, 1506,
	496, 1506,
	497, 1506,
	498, 1506,
	499, 1506,
	501, 1506,
	502, 1506,
	503, 1506,
	504, 1506,
	505, 1506,
	507, 1506,
	509, 1506,
	510, 1506,
	511, 1506,
	512, 1506,
	513, 1506,
	514, 1506,
	515, 1506,
	516, 1506,
	517, 1506,
	518, 1506,
	519, 1506,
	521, 1506,
	522, 1506,
	524, 1506,
	525, 1506,
	526, 1506,
	527, 1506,
	528, 1506,
	529, 1506,
	530, 1506,
	531, 1506,
	532, 1506,
	533, 1506,
	536, 1506,
	537, 1506,
	538, 1506,
	539, 1506,
	540, 1506,
	541, 1506,
	543, 1506,
	544, 1506,
	545, 1506,
	546, 1506,
	552, 1506,
	553, 1506,
	554, 1506,
	555, 1506,
	556, 1506,
	557, 1506,
	558, 1506,
	566, 1506,
	573, 1506,
	574, 1506,
	575, 1506,
	582, 1506,
	586, 1506,
	-2, 0,
	-1, 725,
	4, 1236,
	21, 1236,
	22, 1236,
	23, 1236,
	24, 1236,
	25, 1236,
	26, 1236,
	27, 1236,
	28, 1236,
	30, 1236,
	31, 1236,
	37, 1236,
	42, 1236,
	43, 1236,
	45, 1236,
	46, 1236,
	47, 1236,
	48, 1236,
	49, 1236,
	50, 1236,
	51, 1236,
	52, 1236,
	54, 1236,
	55, 1236,
	56, 1236,
	57, 1236,
	59, 1236,
	60, 1236,
	61, 1236,
	62, 1236,
	63, 1236,
	64, 1236,
	65, 1236,
	69, 1236,
	70, 1236,
	71, 1236,
	72, 1236,
	74, 1236,
	75, 1236,
	76, 1236,
	80, 1236,
	81, 1236,
	82, 1236,
	83, 1236,
	84, 1236,
	85, 1236,
	86, 1236,
	89, 1236,
	90, 1236,
	91, 1236,
	92, 1236,
	93, 1236,
	95, 1236,
	97, 1236,
	98, 1236,
	99, 1236,
	100, 1236,
	101, 1236,
	102, 1236,
	104, 1236,
	105, 1236,
	106, 1236,
	108, 1236,
	109, 1236,
	110, 1236,
	118, 1236,
	119, 1236,
	120, 1236,
	121, 1236,
	122, 1236,
	124, 1236,
	125, 1236,
	126, 1236,
	128, 1236,
	129, 1236,
	130, 1236,
	132, 1236,
	133, 1236,
	134, 1236,
	136, 1236,
	137, 1236,
	138, 1236,
	141, 1236,
	142, 1236,
	143, 1236,
	145, 1236,
	146, 1236,
	148, 1236,
	149, 1236,
	150, 1236,
	152, 1236,
	153, 1236,
	154, 1236,
	155, 1236,
	156, 1236,
	157, 1236,
	158, 1236,
	159, 1236,
	160, 1236,
	161, 1236,
	162, 1236,
	163, 1236,
	164, 1236,
	165, 1236,
	166, 1236,
	167, 1236,
	169, 1236,
	175, 1236,
	176, 1236,
	177, 1236,
	178, 1236,
	182, 1236,
	184, 1236,
	185, 1236,
	189, 1236,
	190, 1236,
	191, 1236,
	192, 1236,
	193, 1236,
	194, 1236,
	195, 1236,
	196, 1236,
	197, 1236,
	198, 1236,
	199, 1236,
	200, 1236,
	201, 1236,
	203, 1236,
	204, 1236,
	206, 1236,
	207, 1236,
	209, 1236,
	210, 1236,
	211, 1236,
	212, 1236,
	213, 1236,
	214, 1236,
	215, 1236,
	216, 1236,
	217, 1236,
	219, 1236,
	220, 1236,
	222, 1236,
	223, 1236,
	224, 1236,
	225, 1236,
	229, 1236,
	230, 1236,
	231, 1236,
	232, 1236,
	233, 1236,
	236, 1236,
	237, 1236,
	238, 1236,
	240, 1236,
	242, 1236,
	243, 1236,
	245, 1236,
	247, 1236,
	248, 1236,
	249, 1236,
	251, 1236,
	255, 1236,
	256, 1236,
	257, 1236,
	258, 1236,
	259, 1236,
	260, 1236,
	262, 1236,
	263, 1236,
	264, 1236,
	266, 1236,
	267, 1236,
	269, 1236,
	270, 1236,
	273, 1236,
	277, 1236,
	278, 1236,
	279, 1236,
	282, 1236,
	283, 1236,
	284, 1236,
	285, 1236,
	287, 1236,
	288, 1236,
	289, 1236,
	290, 1236,
	291, 1236,
	292, 1236,
	293, 1236,
	294, 1236,
	295, 1236,
	296, 1236,
	297, 1236,
	298, 1236,
	299, 1236,
	300, 1236,
	301, 1236,
	302, 1236,
	303, 1236,
	304, 1236,
	305, 1236,
	306, 1236,
	307, 1236,
	308, 1236,
	310, 1236,
	312, 1236,
	313, 1236,
	314, 1236,
	315, 1236,
	316, 1236,
	317, 1236,
	318, 1236,
	319, 1236,
	320, 1236,
	321, 1236,
	322, 1236,
	323, 1236,
	325, 1236,
	327, 1236,
	329, 1236,
	330, 1236,
	332, 1236,
	333, 1236,
	334, 1236,
	335, 1236,
	336, 1236,
	339, 1236,
	343, 1236,
	344, 1236,
	345, 1236,
	348, 1236,
	349, 1236,
	350, 1236,
	352, 1236,
	354, 1236,
	355, 1236,
	356, 1236,
	357, 1236,
	358, 1236,
	359, 1236,
	360, 1236,
	361, 1236,
	362, 1236,
	363, 1236,
	364, 1236,
	365, 1236,
	366, 1236,
	368, 1236,
	369, 1236,
	370, 1236,
	371, 1236,
	372, 1236,
	373, 1236,
	374, 1236,
	375, 1236,
	376, 1236,
	377, 1236,
	378, 1236,
	379, 1236,
	380, 1236,
	381, 1236,
	382, 1236,
	384, 1236,
	385, 1236,
	387, 1236,
	388, 1236,
	389, 1236,
	390, 1236,
	391, 1236,
	392, 1236,
	393, 1236,
	394, 1236,
	395, 1236,
	396, 1236,
	397, 1236,
	398, 1236,
	400, 1236,
	402, 1236,
	403, 1236,
	404, 1236,
	409, 1236,
	411, 1236,
	412, 1236,
	413, 1236,
	414, 1236,
	415, 1236,
	416, 1236,
	417, 1236,
	418, 1236,
	419, 1236,
	421, 1236,
	422, 1236,
	423, 1236,
	425, 1236,
	426, 1236,
	427, 1236,
	428, 1236,
	429, 1236,
	430, 1236,
	432, 1236,
	433, 1236,
	434, 1236,
	435, 1236,
	436, 1236,
	437, 1236,
	438, 1236,
	439, 1236,
	440, 1236,
	441, 1236,
	442, 1236,
	444, 1236,
	445, 1236,
	446, 1236,
	447, 1236,
	448, 1236,
	449, 1236,
	451, 1236,
	452, 1236,
	453, 1236,
	454, 1236,
	455, 1236,
	456, 1236,
	458, 1236,
	459, 1236,
	460, 1236,
	461, 1236,
	462, 1236,
	463, 1236,
	464, 1236,
	466, 1236,
	468, 1236,
	469, 1236,
	470, 1236,
	471, 1236,
	472, 1236,
	473, 1236,
	474, 1236,
	475, 1236,
	476, 1236,
	477, 1236,
	478, 1236,
	479, 1236,
	480, 1236,
	481, 1236,
	482, 1236,
	483, 1236,
	485, 1236,
	486, 1236,
	488, 1236,
	489, 1236,
	491, 1236,
	492, 1236,
	493, 1236,
	494, 1236,
	495, 1236,
	496, 1236,
	497, 1236,
	498, 1236,
	499, 1236,
	501, 1236,
	502, 1236,
	503, 1236,
	504, 1236,
	505, 1236,
	507, 1236,
	509, 1236,
	510, 1236,
	511, 1236,
	512, 1236,
	513, 1236,
	514, 1236,
	516, 1236,
	517, 1236,
	518, 1236,
	519, 1236,
	521, 1236,
	522, 1236,
	525, 1236,
	526, 1236,
	527, 1236,
	528, 1236,
	529, 1236,
	530, 1236,
	531, 1236,
	533, 1236,
	536, 1236,
	537, 1236,
	538, 1236,
	539, 1236,
	540, 1236,
	541, 1236,
	543, 1236,
	544, 1236,
	545, 1236,
	546, 1236,
	552, 1236,
	553, 1236,
	554, 1236,
	555, 1236,
	556, 1236,
	557, 1236,
	-2, 0,
	-1, 744,
	187, 2264,
	506, 2264,
	565, 2264,
	584, 2264,
	-2, 0,
	-1, 745,
	187, 2369,
	506, 2369,
	565, 2369,
	584, 2369,
	-2, 0,
	-1, 746,
	187, 2251,
	506, 2251,
	565, 2251,
	584, 2251,
	-2, 0,
	-1, 748,
	187, 2500,
	506, 2500,
	565, 2500,
	584, 2500,
	-2, 0,
	-1, 750,
	187, 2540,
	506, 2540,
	565, 2540,
	584, 2540,
	-2, 0,
	-1, 757,
	187, 2396,
	506, 2396,
	565, 2396,
	584, 2396,
	-2, 668,
	-1, 787,
	584, 2199,
	587, 2199,
	-2, 939,
	-1, 788,
	584, 2201,
	587, 2201,
	-2, 940,
	-1, 789,
	584, 2200,
	587, 2200,
	-2, 941,
	-1, 790,
	587, 2126,
	-2, 942,
	-1, 813,
	183, 242,
	-2, 0,
	-1, 837,
	44, 2173,
	-2, 0,
	-1, 838,
	543, 1214,
	-2, 1009,
	-1, 854,
	4, 1635,
	21, 1635,
	22, 1635,
	23, 1635,
	24, 1635,
	25, 1635,
	26, 1635,
	27, 1635,
	28, 1635,
	30, 1635,
	31, 1635,
	37, 1635,
	42, 1635,
	43, 1635,
	45, 1635,
	46, 1635,
	47, 1635,
	48, 1635,
	49, 1635,
	50, 1635,
	51, 1635,
	52, 1635,
	54, 1635,
	55, 1635,
	56, 1635,
	57, 1635,
	59, 1635,
	60, 1635,
	61, 1635,
	62, 1635,
	63, 1635,
	64, 1635,
	65, 1635,
	69, 1635,
	70, 1635,
	71, 1635,
	72, 1635,
	74, 1635,
	75, 1635,
	76, 1635,
	80, 1635,
	81, 1635,
	82, 1635,
	83, 1635,
	84, 1635,
	85, 1635,
	86, 1635,
	89, 1635,
	90, 1635,
	91, 1635,
	92, 1635,
	93, 1635,
	95, 1635,
	97, 1635,
	98, 1635,
	99, 1635,
	100, 1635,
	101, 1635,
	102, 1635,
	104, 1635,
	105, 1635,
	106, 1635,
	108, 1635,
	109, 1635,
	110, 1635,
	118, 1635,
	119, 1635,
	120, 1635,
	121, 1635,
	122, 1635,
	124, 1635,
	125, 1635,
	126, 1635,
	128, 1635,
	129, 1635,
	130, 1635,
	132, 1635,
	133, 1635,
	134, 1635,
	136, 1635,
	137, 1635,
	138, 1635,
	141, 1635,
	142, 1635,
	143, 1635,
	145, 1635,
	146, 1635,
	148, 1635,
	149, 1635,
	150, 1635,
	152, 1635,
	153, 1635,
	154, 1635,
	155, 1635,
	156, 1635,
	157, 1635,
	158, 1635,
	159, 1635,
	160, 1635,
	161, 1635,
	162, 1635,
	163, 1635,
	164, 1635,
	165, 1635,
	166, 1635,
	167, 1635,
	169, 1635,
	175, 1635,
	176, 1635,
	177, 1635,
	178, 1635,
	182, 1635,
	184, 1635,
	185, 1635,
	189, 1635,
	190, 1635,
	191, 1635,
	192, 1635,
	193, 1635,
	194, 1635,
	195, 1635,
	196, 1635,
	197, 1635,
	198, 1635,
	199, 1635,
	200, 1635,
	201, 1635,
	203, 1635,
	204, 1635,
	206, 1635,
	207, 1635,
	209, 1635,
	210, 1635,
	211, 1635,
	212, 1635,
	213, 1635,
	214, 1635,
	215, 1635,
	216, 1635,
	217, 1635,
	219, 1635,
	220, 1635,
	222, 1635,
	223, 1635,
	224, 1635,
	225, 1635,
	229, 1635,
	230, 1635,
	231, 1635,
	232, 1635,
	233, 1635,
	236, 1635,
	237, 1635,
	238, 1635,
	240, 1635,
	242, 1635,
	243, 1635,
	245, 1635,
	247, 1635,
	248, 1635,
	249, 1635,
	251, 1635,
	255, 1635,
	256, 1635,
	257, 1635,
	258, 1635,
	259, 1635,
	260, 1635,
	262, 1635,
	263, 1635,
	264, 1635,
	266, 1635,
	267, 1635,
	269, 1635,
	270, 1635,
	273, 1635,
	277, 1635,
	278, 1635,
	279, 1635,
	282, 1635,
	283, 1635,
	284, 1635,
	285, 1635,
	287, 1635,
	288, 1635,
	289, 1635,
	290, 1635,
	291, 1635,
	292, 1635,
	293, 1635,
	294, 1635,
	295, 1635,
	296, 1635,
	297, 1635,
	298, 1635,
	299, 1635,
	300, 1635,
	301, 1635,
	302, 1635,
	303, 1635,
	304, 1635,
	305, 1635,
	306, 1635,
	307, 1635,
	308, 1635,
	310, 1635,
	312, 1635,
	313, 1635,
	314, 1635,
	315, 1635,
	316, 1635,
	317, 1635,
	318, 1635,
	319, 1635,
	320, 1635,
	321, 1635,
	322, 1635,
	323, 1635,
	325, 1635,
	327, 1635,
	329, 1635,
	330, 1635,
	332, 1635,
	333, 1635,
	334, 1635,
	335, 1635,
	336, 1635,
	339, 1635,
	343, 1635,
	344, 1635,
	345, 1635,
	348, 1635,
	349, 1635,
	350, 1635,
	352, 1635,
	354, 1635,
	355, 1635,
	356, 1635,
	357, 1635,
	358, 1635,
	359, 1635,
	360, 1635,
	361, 1635,
	362, 1635,
	363, 1635,
	364, 1635,
	365, 1635,
	366, 1635,
	368, 1635,
	369, 1635,
	370, 1635,
	371, 1635,
	372, 1635,
	373, 1635,
	374, 1635,
	375, 1635,
	376, 1635,
	377, 1635,
	378, 1635,
	379, 1635,
	380, 1635,
	381, 1635,
	382, 1635,
	384, 1635,
	385, 1635,
	387, 1635,
	388, 1635,
	389, 1635,
	390, 1635,
	391, 1635,
	392, 1635,
	393, 1635,
	394, 1635,
	395, 1635,
	396, 1635,
	397, 1635,
	398, 1635,
	400, 1635,
	402, 1635,
	403, 1635,
	404, 1635,
	409, 1635,
	411, 1635,
	412, 1635,
	413, 1635,
	414, 1635,
	415, 1635,
	416, 1635,
	417, 1635,
	418, 1635,
	419, 1635,
	421, 1635,
	422, 1635,
	423, 1635,
	425, 1635,
	426, 1635,
	427, 1635,
	428, 1635,
	429, 1635,
	430, 1635,
	432, 1635,
	433, 1635,
	434, 1635,
	435, 1635,
	436, 1635,
	437, 1635,
	438, 1635,
	439, 1635,
	440, 1635,
	441, 1635,
	442, 1635,
	444, 1635,
	445, 1635,
	446, 1635,
	447, 1635,
	448, 1635,
	449, 1635,
	451, 1635,
	452, 1635,
	453, 1635,
	454, 1635,
	455, 1635,
	456, 1635,
	458, 1635,
	459, 1635,
	460, 1635,
	461, 1635,
	462, 1635,
	463, 1635,
	464, 1635,
	466, 1635,
	468, 1635,
	469, 1635,
	470, 1635,
	471, 1635,
	472, 1635,
	473, 1635,
	474, 1635,
	475, 1635,
	476, 1635,
	477, 1635,
	478, 1635,
	479, 1635,
	480, 1635,
	481, 1635,
	482, 1635,
	483, 1635,
	485, 1635,
	486, 1635,
	488, 1635,
	489, 1635,
	491, 1635,
	492, 1635,
	493, 1635,
	494, 1635,
	495, 1635,
	496, 1635,
	497, 1635,
	498, 1635,
	499, 1635,
	501, 1635,
	502, 1635,
	503, 1635,
	504, 1635,
	505, 1635,
	507, 1635,
	509, 1635,
	510, 1635,
	511, 1635,
	512, 1635,
	513, 1635,
	514, 1635,
	516, 1635,
	517, 1635,
	518, 1635,
	519, 1635,
	521, 1635,
	522, 1635,
	525, 1635,
	526, 1635,
	527, 1635,
	528, 1635,
	529, 1635,
	530, 1635,
	531, 1635,
	533, 1635,
	536, 1635,
	537, 1635,
	538, 1635,
	539, 1635,
	540, 1635,
	541, 1635,
	543, 1635,
	544, 1635,
	545, 1635,
	546, 1635,
	552, 1635,
	553, 1635,
	554, 1635,
	555, 1635,
	556, 1635,
	557, 1635,
	-2, 0,
	-1, 862,
	259, 385,
	-2, 0,
	-1, 933,
	389, 834,
	449, 834,
	489, 834,
	511, 834,
	-2, 0,
	-1, 934,
	389, 833,
	449, 833,
	489, 833,
	511, 833,
	-2, 773,
	-1, 938,
	1, 880,
	581, 880,
	583, 880,
	585, 880,
	-2, 0,
	-1, 939,
	1, 808,
	581, 808,
	583, 808,
	585, 808,
	-2, 0,
	-1, 940,
	1, 812,
	581, 812,
	583, 812,
	585, 812,
	-2, 0,
	-1, 941,
	1, 938,
	183, 938,
	581, 938,
	583, 938,
	585, 938,
	-2, 0,
	-1, 949,
	1, 839,
	581, 839,
	583, 839,
	585, 839,
	-2, 0,
	-1, 955,
	1, 880,
	581, 880,
	583, 880,
	585, 880,
	-2, 0,
	-1, 956,
	1, 882,
	581, 882,
	583, 882,
	585, 882,
	-2, 0,
	-1, 957,
	1, 885,
	581, 885,
	583, 885,
	585, 885,
	-2, 0,
	-1, 963,
	1, 903,
	581, 903,
	583, 903,
	585, 903,
	-2, 0,
	-1, 964,
	1, 905,
	581, 905,
	583, 905,
	585, 905,
	-2, 0,
	-1, 969,
	1, 933,
	581, 933,
	583, 933,
	585, 933,
	-2, 0,
	-1, 1015,
	170, 1510,
	183, 1510,
	272, 1510,
	337, 1510,
	-2, 1446,
	-1, 1030,
	170, 1509,
	183, 1509,
	272, 1509,
	337, 1509,
	-2, 1443,
	-1, 1056,
	584, 2198,
	-2, 676,
	-1, 1084,
	5, 2190,
	582, 2188,
	-2, 2179,
	-1, 1092,
	5, 2211,
	582, 2208,
	-2, 2199,
	-1, 1093,
	5, 2212,
	582, 2209,
	-2, 2200,
	-1, 1101,
	584, 2196,
	-2, 2178,
	-1, 1102,
	582, 2622,
	-2, 2197,
	-1, 1125,
	582, 2621,
	-2, 2213,
	-1, 1126,
	5, 1710,
	-2, 2592,
	-1, 1127,
	5, 1711,
	-2, 2593,
	-1, 1128,
	5, 1712,
	-2, 2607,
	-1, 1129,
	5, 1713,
	-2, 2571,
	-1, 1130,
	5, 1714,
	-2, 2605,
	-1, 1131,
	5, 1722,
	-2, 2584,
	-1, 1132,
	5, 1709,
	-2, 2580,
	-1, 1133,
	5, 1709,
	-2, 2579,
	-1, 1134,
	5, 1709,
	-2, 2598,
	-1, 1135,
	5, 1720,
	-2, 2573,
	-1, 1136,
	5, 1725,
	-2, 2572,
	-1, 1137,
	5, 1727,
	-2, 2617,
	-1, 1140,
	5, 1749,
	-2, 2610,
	-1, 1141,
	5, 1741,
	-2, 2611,
	-1, 1142,
	5, 1749,
	-2, 2612,
	-1, 1143,
	5, 1745,
	-2, 2613,
	-1, 1144,
	5, 1695,
	-2, 2585,
	-1, 1145,
	5, 1696,
	-2, 2586,
	-1, 1146,
	5, 1697,
	-2, 2574,
	-1, 1174,
	5, 1732,
	-2, 2618,
	-1, 1175,
	5, 1733,
	-2, 2608,
	-1, 1176,
	5, 1734,
	544, 1734,
	-2, 2575,
	-1, 1177,
	5, 1735,
	544, 1735,
	-2, 2576,
	-1, 1214,
	582, 2208,
	-2, 2199,
	-1, 1215,
	582, 2209,
	-2, 2200,
	-1, 1315,
	187, 2540,
	506, 2540,
	565, 2540,
	584, 2540,
	-2, 0,
	-1, 1318,
	1, 654,
	585, 654,
	-2, 1362,
	-1, 1446,
	356, 2174,
	411, 2174,
	451, 2174,
	575, 2174,
	-2, 2164,
	-1, 1457,
	586, 2174,
	-2, 2175,
	-1, 1463,
	1, 1211,
	581, 1211,
	583, 1211,
	585, 1211,
	-2, 1495,
	-1, 1511,
	396, 1008,
	543, 1008,
	-2, 380,
	-1, 1528,
	44, 2172,
	-2, 974,
	-1, 1535,
	1, 1211,
	581, 1211,
	583, 1211,
	585, 1211,
	-2, 1495,
	-1, 1543,
	4, 1236,
	21, 1236,
	22, 1236,
	23, 1236,
	24, 1236,
	25, 1236,
	26, 1236,
	27, 1236,
	28, 1236,
	30, 1236,
	31, 1236,
	37, 1236,
	42, 1236,
	43, 1236,
	45, 1236,
	46, 1236,
	47, 1236,
	48, 1236,
	49, 1236,
	50, 1236,
	51, 1236,
	52, 1236,
	54, 1236,
	55, 1236,
	56, 1236,
	57, 1236,
	59, 1236,
	60, 1236,
	61, 1236,
	62, 1236,
	63, 1236,
	64, 1236,
	65, 1236,
	69, 1236,
	70, 1236,
	71, 1236,
	72, 1236,
	74, 1236,
	75, 1236,
	76, 1236,
	80, 1236,
	81, 1236,
	82, 1236,
	83, 1236,
	84, 1236,
	85, 1236,
	86, 1236,
	89, 1236,
	90, 1236,
	91, 1236,
	92, 1236,
	93, 1236,
	95, 1236,
	97, 1236,
	98, 1236,
	99, 1236,
	100, 1236,
	101, 1236,
	102, 1236,
	104, 1236,
	105, 1236,
	106, 1236,
	108, 1236,
	109, 1236,
	110, 1236,
	118, 1236,
	119, 1236,
	120, 1236,
	121, 1236,
	122, 1236,
	124, 1236,
	125, 1236,
	126, 1236,
	128, 1236,
	129, 1236,
	130, 1236,
	132, 1236,
	133, 1236,
	134, 1236,
	136, 1236,
	137, 1236,
	138, 1236,
	141, 1236,
	142, 1236,
	143, 1236,
	145, 1236,
	146, 1236,
	148, 1236,
	149, 1236,
	150, 1236,
	152, 1236,
	153, 1236,
	154, 1236,
	155, 1236,
	156, 1236,
	157, 1236,
	158, 1236,
	159, 1236,
	160, 1236,
	161, 1236,
	162, 1236,
	163, 1236,
	164, 1236,
	165, 1236,
	166, 1236,
	167, 1236,
	175, 1236,
	176, 1236,
	177, 1236,
	178, 1236,
	182, 1236,
	184, 1236,
	185, 1236,
	189, 1236,
	190, 1236,
	191, 1236,
	192, 1236,
	193, 1236,
	194, 1236,
	195, 1236,
	196, 1236,
	197, 1236,
	198, 1236,
	199, 1236,
	200, 1236,
	201, 1236,
	203, 1236,
	204, 1236,
	206, 1236,
	207, 1236,
	209, 1236,
	210, 1236,
	211, 1236,
	212, 1236,
	213, 1236,
	214, 1236,
	215, 1236,
	216, 1236,
	217, 1236,
	219, 1236,
	220, 1236,
	222, 1236,
	223, 1236,
	224, 1236,
	225, 1236,
	230, 1236,
	231, 1236,
	232, 1236,
	233, 1236,
	236, 1236,
	237, 1236,
	238, 1236,
	240, 1236,
	242, 1236,
	243, 1236,
	245, 1236,
	247, 1236,
	248, 1236,
	249, 1236,
	251, 1236,
	255, 1236,
	256, 1236,
	257, 1236,
	258, 1236,
	259, 1236,
	260, 1236,
	262, 1236,
	263, 1236,
	264, 1236,
	266, 1236,
	267, 1236,
	269, 1236,
	270, 1236,
	273, 1236,
	277, 1236,
	278, 1236,
	279, 1236,
	282, 1236,
	283, 1236,
	284, 1236,
	285, 1236,
	287, 1236,
	288, 1236,
	289, 1236,
	290, 1236,
	291, 1236,
	292, 1236,
	293, 1236,
	294, 1236,
	295, 1236,
	296, 1236,
	297, 1236,
	298, 1236,
	299, 1236,
	300, 1236,
	301, 1236,
	302, 1236,
	303, 1236,
	304, 1236,
	305, 1236,
	306, 1236,
	307, 1236,
	308, 1236,
	310, 1236,
	312, 1236,
	313, 1236,
	314, 1236,
	315, 1236,
	316, 1236,
	317, 1236,
	318, 1236,
	319, 1236,
	320, 1236,
	321, 1236,
	322, 1236,
	323, 1236,
	325, 1236,
	329, 1236,
	330, 1236,
	332, 1236,
	333, 1236,
	334, 1236,
	335, 1236,
	336, 1236,
	339, 1236,
	341, 1236,
	343, 1236,
	344, 1236,
	345, 1236,
	348, 1236,
	349, 1236,
	350, 1236,
	352, 1236,
	354, 1236,
	355, 1236,
	356, 1236,
	357, 1236,
	358, 1236,
	359, 1236,
	360, 1236,
	361, 1236,
	362, 1236,
	363, 1236,
	364, 1236,
	365, 1236,
	366, 1236,
	368, 1236,
	369, 1236,
	370, 1236,
	371, 1236,
	372, 1236,
	373, 1236,
	374, 1236,
	375, 1236,
	376, 1236,
	377, 1236,
	378, 1236,
	379, 1236,
	380, 1236,
	381, 1236,
	382, 1236,
	384, 1236,
	385, 1236,
	387, 1236,
	388, 1236,
	389, 1236,
	390, 1236,
	391, 1236,
	392, 1236,
	393, 1236,
	394, 1236,
	395, 1236,
	396, 1236,
	397, 1236,
	398, 1236,
	400, 1236,
	402, 1236,
	403, 1236,
	404, 1236,
	409, 1236,
	411, 1236,
	412, 1236,
	413, 1236,
	414, 1236,
	415, 1236,
	416, 1236,
	417, 1236,
	418, 1236,
	419, 1236,
	421, 1236,
	422, 1236,
	423, 1236,
	425, 1236,
	426, 1236,
	427, 1236,
	428, 1236,
	429, 1236,
	430, 1236,
	432, 1236,
	433, 1236,
	434, 1236,
	435, 1236,
	436, 1236,
	437, 1236,
	438, 1236,
	439, 1236,
	440, 1236,
	441, 1236,
	442, 1236,
	444, 1236,
	445, 1236,
	446, 1236,
	447, 1236,
	448, 1236,
	449, 1236,
	451, 1236,
	452, 1236,
	453, 1236,
	454, 1236,
	455, 1236,
	456, 1236,
	458, 1236,
	459, 1236,
	460, 1236,
	461, 1236,
	462, 1236,
	463, 1236,
	464, 1236,
	466, 1236,
	468, 1236,
	469, 1236,
	470, 1236,
	471, 1236,
	472, 1236,
	473, 1236,
	474, 1236,
	475, 1236,
	476, 1236,
	477, 1236,
	478, 1236,
	479, 1236,
	480, 1236,
	481, 1236,
	482, 1236,
	483, 1236,
	485, 1236,
	486, 1236,
	488, 1236,
	489, 1236,
	491, 1236,
	492, 1236,
	493, 1236,
	494, 1236,
	495, 1236,
	496, 1236,
	497, 1236,
	498, 1236,
	499, 1236,
	501, 1236,
	502, 1236,
	503, 1236,
	504, 1236,
	505, 1236,
	507, 1236,
	509, 1236,
	510, 1236,
	511, 1236,
	512, 1236,
	513, 1236,
	514, 1236,
	516, 1236,
	517, 1236,
	518, 1236,
	519, 1236,
	521, 1236,
	522, 1236,
	525, 1236,
	526, 1236,
	527, 1236,
	528, 1236,
	529, 1236,
	530, 1236,
	531, 1236,
	533, 1236,
	536, 1236,
	537, 1236,
	538, 1236,
	539, 1236,
	540, 1236,
	541, 1236,
	543, 1236,
	544, 1236,
	545, 1236,
	546, 1236,
	552, 1236,
	553, 1236,
	554, 1236,
	555, 1236,
	556, 1236,
	557, 1236,
	-2, 0,
	-1, 1566,
	1, 525,
	581, 525,
	583, 525,
	585, 525,
	-2, 1466,
	-1, 1569,
	4, 2616,
	11, 2616,
	12, 2616,
	14, 2616,
	15, 2616,
	16, 2616,
	17, 2616,
	18, 2616,
	19, 2616,
	21, 2616,
	22, 2616,
	23, 2616,
	24, 2616,
	25, 2616,
	26, 2616,
	27, 2616,
	28, 2616,
	30, 2616,
	31, 2616,
	34, 2616,
	35, 2616,
	37, 2616,
	39, 2616,
	42, 2616,
	43, 2616,
	45, 2616,
	46, 2616,
	47, 2616,
	48, 2616,
	49, 2616,
	50, 2616,
	51, 2616,
	52, 2616,
	54, 2616,
	55, 2616,
	56, 2616,
	57, 2616,
	59, 2616,
	60, 2616,
	61, 2616,
	62, 2616,
	63, 2616,
	64, 2616,
	65, 2616,
	69, 2616,
	70, 2616,
	71, 2616,
	72, 2616,
	74, 2616,
	75, 2616,
	76, 2616,
	77, 2616,
	80, 2616,
	81, 2616,
	82, 2616,
	83, 2616,
	84, 2616,
	85, 2616,
	86, 2616,
	87, 2616,
	89, 2616,
	90, 2616,
	91, 2616,
	92, 2616,
	93, 2616,
	95, 2616,
	96, 2616,
	97, 2616,
	98, 2616,
	99, 2616,
	100, 2616,
	101, 2616,
	102, 2616,
	104, 2616,
	105, 2616,
	106, 2616,
	107, 2616,
	108, 2616,
	109, 2616,
	110, 2616,
	118, 2616,
	119, 2616,
	120, 2616,
	121, 2616,
	122, 2616,
	124, 2616,
	125, 2616,
	126, 2616,
	128, 2616,
	129, 2616,
	130, 2616,
	132, 2616,
	133, 2616,
	134, 2616,
	136, 2616,
	137, 2616,
	138, 2616,
	141, 2616,
	142, 2616,
	143, 2616,
	145, 2616,
	146, 2616,
	148, 2616,
	149, 2616,
	150, 2616,
	152, 2616,
	153, 2616,
	154, 2616,
	155, 2616,
	156, 2616,
	157, 2616,
	158, 2616,
	159, 2616,
	160, 2616,
	161, 2616,
	162, 2616,
	163, 2616,
	164, 2616,
	165, 2616,
	166, 2616,
	167, 2616,
	171, 2616,
	172, 2616,
	173, 2616,
	174, 2616,
	175, 2616,
	176, 2616,
	177, 2616,
	178, 2616,
	181, 2616,
	182, 2616,
	184, 2616,
	185, 2616,
	188, 2616,
	189, 2616,
	190, 2616,
	191, 2616,
	192, 2616,
	193, 2616,
	194, 2616,
	195, 2616,
	196, 2616,
	197, 2616,
	198, 2616,
	199, 2616,
	200, 2616,
	201, 2616,
	203, 2616,
	204, 2616,
	206, 2616,
	207, 2616,
	209, 2616,
	210, 2616,
	211, 2616,
	212, 2616,
	213, 2616,
	214, 2616,
	215, 2616,
	216, 2616,
	217, 2616,
	218, 2616,
	219, 2616,
	220, 2616,
	221, 2616,
	222, 2616,
	223, 2616,
	224, 2616,
	225, 2616,
	227, 2616,
	228, 2616,
	230, 2616,
	231, 2616,
	232, 2616,
	233, 2616,
	235, 2616,
	236, 2616,
	237, 2616,
	238, 2616,
	240, 2616,
	242, 2616,
	243, 2616,
	244, 2616,
	245, 2616,
	246, 2616,
	247, 2616,
	248, 2616,
	249, 2616,
	250, 2616,
	251, 2616,
	253, 2616,
	254, 2616,
	255, 2616,
	256, 2616,
	257, 2616,
	258, 2616,
	259, 2616,
	260, 2616,
	262, 2616,
	263, 2616,
	264, 2616,
	266, 2616,
	267, 2616,
	268, 2616,
	269, 2616,
	270, 2616,
	271, 2616,
	273, 2616,
	277, 2616,
	278, 2616,
	279, 2616,
	282, 2616,
	283, 2616,
	284, 2616,
	285, 2616,
	286, 2616,
	287, 2616,
	288, 2616,
	289, 2616,
	290, 2616,
	291, 2616,
	292, 2616,
	293, 2616,
	294, 2616,
	295, 2616,
	296, 2616,
	297, 2616,
	298, 2616,
	299, 2616,
	300, 2616,
	301, 2616,
	302, 2616,
	303, 2616,
	304, 2616,
	305, 2616,
	306, 2616,
	307, 2616,
	308, 2616,
	310, 2616,
	311, 2616,
	312, 2616,
	313, 2616,
	314, 2616,
	315, 2616,
	316, 2616,
	317, 2616,
	318, 2616,
	319, 2616,
	320, 2616,
	321, 2616,
	322, 2616,
	323, 2616,
	325, 2616,
	328, 2616,
	329, 2616,
	330, 2616,
	332, 2616,
	333, 2616,
	334, 2616,
	335, 2616,
	336, 2616,
	339, 2616,
	343, 2616,
	344, 2616,
	345, 2616,
	346, 2616,
	348, 2616,
	349, 2616,
	350, 2616,
	352, 2616,
	354, 2616,
	355, 2616,
	356, 2616,
	357, 2616,
	358, 2616,
	359, 2616,
	360, 2616,
	361, 2616,
	362, 2616,
	363, 2616,
	364, 2616,
	365, 2616,
	366, 2616,
	368, 2616,
	369, 2616,
	370, 2616,
	371, 2616,
	372, 2616,
	373, 2616,
	374, 2616,
	375, 2616,
	376, 2616,
	377, 2616,
	378, 2616,
	379, 2616,
	380, 2616,
	381, 2616,
	382, 2616,
	384, 2616,
	385, 2616,
	387, 2616,
	388, 2616,
	389, 2616,
	390, 2616,
	391, 2616,
	392, 2616,
	393, 2616,
	394, 2616,
	395, 2616,
	396, 2616,
	397, 2616,
	398, 2616,
	400, 2616,
	402, 2616,
	403, 2616,
	404, 2616,
	409, 2616,
	410, 2616,
	411, 2616,
	412, 2616,
	413, 2616,
	414, 2616,
	415, 2616,
	416, 2616,
	417, 2616,
	418, 2616,
	419, 2616,
	421, 2616,
	422, 2616,
	423, 2616,
	424, 2616,
	425, 2616,
	426, 2616,
	427, 2616,
	428, 2616,
	429, 2616,
	430, 2616,
	431, 2616,
	432, 2616,
	433, 2616,
	434, 2616,
	435, 2616,
	436, 2616,
	437, 2616,
	438, 2616,
	439, 2616,
	440, 2616,
	441, 2616,
	442, 2616,
	444, 2616,
	445, 2616,
	446, 2616,
	447, 2616,
	448, 2616,
	449, 2616,
	451, 2616,
	452, 2616,
	453, 2616,
	454, 2616,
	455, 2616,
	456, 2616,
	457, 2616,
	458, 2616,
	459, 2616,
	460, 2616,
	461, 2616,
	462, 2616,
	463, 2616,
	464, 2616,
	466, 2616,
	468, 2616,
	469, 2616,
	470, 2616,
	471, 2616,
	472, 2616,
	473, 2616,
	474, 2616,
	475, 2616,
	476, 2616,
	477, 2616,
	478, 2616,
	479, 2616,
	480, 2616,
	481, 2616,
	482, 2616,
	483, 2616,
	485, 2616,
	486, 2616,
	488, 2616,
	489, 2616,
	491, 2616,
	492, 2616,
	493, 2616,
	494, 2616,
	495, 2616,
	496, 2616,
	497, 2616,
	498, 2616,
	499, 2616,
	501, 2616,
	502, 2616,
	503, 2616,
	504, 2616,
	505, 2616,
	507, 2616,
	509, 2616,
	510, 2616,
	511, 2616,
	512, 2616,
	513, 2616,
	514, 2616,
	516, 2616,
	517, 2616,
	518, 2616,
	519, 2616,
	521, 2616,
	522, 2616,
	525, 2616,
	526, 2616,
	527, 2616,
	528, 2616,
	529, 2616,
	530, 2616,
	531, 2616,
	533, 2616,
	536, 2616,
	537, 2616,
	538, 2616,
	539, 2616,
	540, 2616,
	541, 2616,
	543, 2616,
	544, 2616,
	545, 2616,
	546, 2616,
	552, 2616,
	553, 2616,
	554, 2616,
	555, 2616,
	556, 2616,
	557, 2616,
	558, 2616,
	560, 2616,
	563, 2616,
	564, 2616,
	565, 2616,
	566, 2616,
	567, 2616,
	568, 2616,
	570, 2616,
	571, 2616,
	572, 2616,
	573, 2616,
	574, 2616,
	575, 2616,
	576, 2616,
	577, 2616,
	578, 2616,
	580, 2616,
	583, 2616,
	584, 2616,
	586, 2616,
	587, 2616,
	-2, 0,
	-1, 1574,
	187, 2500,
	506, 2500,
	565, 2500,
	584, 2500,
	-2, 0,
	-1, 1623,
	389, 834,
	449, 834,
	489, 834,
	511, 834,
	-2, 0,
	-1, 1650,
	1, 829,
	581, 829,
	583, 829,
	585, 829,
	-2, 0,
	-1, 1651,
	1, 867,
	581, 867,
	583, 867,
	585, 867,
	-2, 0,
	-1, 1652,
	1, 875,
	581, 875,
	583, 875,
	585, 875,
	-2, 0,
	-1, 1655,
	1, 838,
	581, 838,
	583, 838,
	585, 838,
	-2, 0,
	-1, 1657,
	1, 842,
	581, 842,
	583, 842,
	585, 842,
	-2, 0,
	-1, 1663,
	1, 849,
	581, 849,
	583, 849,
	585, 849,
	-2, 0,
	-1, 1692,
	1, 2562,
	581, 2562,
	583, 2562,
	584, 2562,
	585, 2562,
	-2, 901,
	-1, 1693,
	1, 2497,
	581, 2497,
	583, 2497,
	584, 2497,
	585, 2497,
	-2, 902,
	-1, 1697,
	1, 914,
	581, 914,
	583, 914,
	585, 914,
	-2, 0,
	-1, 1711,
	1, 1357,
	585, 1357,
	-2, 1362,
	-1, 1714,
	170, 1509,
	183, 1509,
	272, 1509,
	337, 1509,
	-2, 1447,
	-1, 1808,
	151, 1468,
	170, 1468,
	183, 1468,
	239, 1468,
	272, 1468,
	337, 1468,
	347, 1468,
	523, 1468,
	-2, 1910,
	-1, 1868,
	583, 2060,
	-2, 0,
	-1, 1903,
	151, 1468,
	170, 1468,
	183, 1468,
	239, 1468,
	272, 1468,
	337, 1468,
	347, 1468,
	523, 1468,
	-2, 1596,
	-1, 1937,
	506, 2497,
	584, 2497,
	587, 2497,
	-2, 0,
	-1, 1954,
	582, 1737,
	-2, 1725,
	-1, 1985,
	187, 2497,
	584, 2497,
	587, 2497,
	-2, 0,
	-1, 2033,
	1, 656,
	585, 656,
	-2, 1362,
	-1, 2159,
	221, 243,
	-2, 2207,
	-1, 2160,
	221, 244,
	-2, 289,
	-1, 2264,
	1, 831,
	581, 831,
	583, 831,
	585, 831,
	-2, 0,
	-1, 2265,
	1, 869,
	581, 869,
	583, 869,
	585, 869,
	-2, 0,
	-1, 2266,
	1, 877,
	581, 877,
	583, 877,
	585, 877,
	-2, 0,
	-1, 2267,
	1, 916,
	581, 916,
	583, 916,
	585, 916,
	-2, 0,
	-1, 2300,
	1, 851,
	581, 851,
	583, 851,
	585, 851,
	-2, 0,
	-1, 2355,
	429, 1536,
	430, 1536,
	-2, 1770,
	-1, 2386,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1790,
	-1, 2387,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1791,
	-1, 2388,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1792,
	-1, 2389,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1793,
	-1, 2390,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1794,
	-1, 2391,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1795,
	-1, 2392,
	96, 0,
	253, 0,
	254, 0,
	567, 0,
	568, 0,
	-2, 1796,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1797,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1809,
	-1, 2406,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1810,
	-1, 2407,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1811,
	-1, 2410,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1816,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1820,
	-1, 2418,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1828,
	-1, 2419,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1829,
	-1, 2420,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1830,
	-1, 2421,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1831,
	-1, 2557,
	5, 2211,
	187, 2071,
	582, 2208,
	-2, 2199,
	-1, 2558,
	187, 2072,
	-2, 2567,
	-1, 2559,
	187, 2073,
	-2, 2395,
	-1, 2560,
	187, 2074,
	-2, 2282,
	-1, 2561,
	187, 2075,
	-2, 2336,
	-1, 2562,
	187, 2076,
	-2, 2380,
	-1, 2563,
	187, 2077,
	-2, 2495,
	-1, 2564,
	187, 2078,
	-2, 1893,
	-1, 2634,
	1, 1597,
	2, 1597,
	107, 1597,
	151, 1597,
	170, 1597,
	183, 1597,
	188, 1597,
	205, 1597,
	208, 1597,
	235, 1597,
	239, 1597,
	250, 1597,
	268, 1597,
	272, 1597,
	311, 1597,
	337, 1597,
	341, 1597,
	347, 1597,
	420, 1597,
	424, 1597,
	523, 1597,
	534, 1597,
	549, 1597,
	550, 1597,
	551, 1597,
	561, 1597,
	581, 1597,
	583, 1597,
	585, 1597,
	587, 1597,
	-2, 1596,
	-1, 2647,
	582, 2180,
	-2, 2194,
	-1, 2649,
	1, 305,
	549, 305,
	-2, 1495,
	-1, 2675,
	582, 1736,
	-2, 1726,
	-1, 2857,
	1, 1211,
	581, 1211,
	583, 1211,
	585, 1211,
	-2, 1495,
	-1, 3026,
	342, 1539,
	-2, 2606,
	-1, 3027,
	342, 1540,
	-2, 2481,
	-1, 3031,
	429, 2137,
	430, 2137,
	-2, 1891,
	-1, 3032,
	429, 2141,
	430, 2141,
	-2, 1892,
	-1, 3033,
	429, 2138,
	430, 2138,
	-2, 1891,
	-1, 3034,
	429, 2142,
	430, 2142,
	-2, 1892,
	-1, 3047,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1818,
	-1, 3048,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1822,
	-1, 3054,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1824,
	-1, 3270,
	1, 653,
	581, 653,
	583, 653,
	585, 653,
	-2, 1362,
	-1, 3426,
	44, 2172,
	-2, 975,
	-1, 3431,
	1, 1211,
	581, 1211,
	583, 1211,
	585, 1211,
	-2, 1495,
	-1, 3536,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1826,
	-1, 3543,
	244, 0,
	246, 0,
	328, 0,
	-2, 1845,
	-1, 3610,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1874,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1875,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1876,
	-1, 3616,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1880,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1881,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	563, 0,
	564, 0,
	565, 0,
	-2, 1882,
	-1, 3664,
	582, 2181,
	-2, 2195,
	-1, 3836,
	584, 2724,
	-2, 1421,
	-1, 3894,
	244, 0,
	246, 0,
	328, 0,
	-2, 1846,
	-1, 3897,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1849,
	-1, 3898,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1851,
	-1, 3999,
	584, 2196,
	-2, 1246,
	-1, 4141,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1850,
	-1, 4142,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	218, 0,
	221, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 1852,
	-1, 4153,
	244, 0,
	-2, 1883,
	-1, 4327,
	244, 0,
	-2, 1884,
	-1, 4516,
	51, 0,
	218, 0,
	271, 0,
	457, 0,
	558, 0,
	566, 0,
	-2, 2570,
}

const sqlPrivate = 57344

const sqlLast = 123206

var sqlAct = [...]int{
	265, 4698, 4509, 4249, 3415, 2935, 4612, 3181, 4367, 2922,
	4202, 4568, 4508, 4515, 4497, 4526, 4639, 3414, 4389, 4484,
	4359, 4410, 4468, 4465, 3995, 2081, 4527, 3877, 4385, 2156,
	4528, 4188, 4448, 2807, 2783, 4280, 4256, 3575, 4581, 1475,
	1218, 4331, 4097, 1040, 4514, 4058, 2231, 4038, 4092, 4207,
	4162, 3528, 2365, 4130, 1291, 3820, 2240, 3297, 3828, 4072,
	3448, 4079, 4265, 4081, 3980, 1207, 3996, 3764, 1280, 3040,
	3355, 4294, 1095, 2589, 3442, 789, 2433, 2819, 2015, 1723,
	3400, 2741, 4102, 2373, 3410, 3801, 3784, 755, 2089, 4158,
	3786, 3300, 1942, 1351, 2366, 1287, 2957, 2944, 3487, 2881,
	2911, 789, 3667, 2946, 2238, 3489, 1909, 2892, 1031, 3204,
	3224, 3196, 3187, 1941, 2204, 3876, 2954, 3164, 2937, 3185,
	3933, 1443, 2943, 2923, 2800, 2150, 2151, 2100, 1590, 4613,
	2906, 2908, 864, 1878, 1039, 174, 2743, 2626, 3635, 3319,
	4, 1854, 2627, 4332, 2446, 1816, 2370, 3024, 3163, 3294,
	784, 2953, 1285, 1530, 2475, 2885, 1450, 2629, 2834, 2146,
	2127, 2134, 1198, 2782, 2893, 1334, 1088, 2069, 2073, 2013,
	2607, 1711, 2466, 3231, 1879, 2430, 2337, 259, 2059, 1084,
	3281, 2354, 2335, 3412, 1282, 258, 1567, 1093, 2916, 1273,
	2659, 1259, 2191, 1270, 1588, 1533, 1631, 2586, 786, 790,
	791, 2477, 4411, 2725, 686, 1320, 2947, 672, 1849, 2658,
	2469, 694, 1898, 2616, 1888, 2519, 1180, 2597, 1895, 1724,
	1201, 2553, 1801, 2447, 183, 1725, 184, 737, 174, 1663,
	1650, 2217, 1215, 2336, 857, 749, 2338, 1197, 1558, 1470,
	2088, 1565, 4569, 2190, 2359, 1069, 1091, 1991, 1988, 689,
	1203, 1178, 795, 44, 43, 41, 32, 30, 28, 697,
	798, 1730, 927, 3075, 1710, 712, 3649, 1481, 3650, 947,
	1738, 1739, 3071, 838, 2004, 4711, 2004, 2004, 795, 2606,
	1138, 2004, 3183, 2004, 4701, 108, 798, 2004, 3467, 4686,
	1035, 73, 4685, 2606, 1769, 3458, 2606, 3254, 4675, 879,
	4657, 1741, 2165, 4655, 4206, 4600, 4557, 4206, 74, 2165,
	4558, 4550, 4548, 4545, 4542, 2606, 2606, 4546, 4543, 4512,
	3457, 4511, 4510, 2165, 78, 2165, 2025, 4505, 4504, 4495,
	4493, 2025, 2025, 4206, 4206, 4490, 1740, 3253, 4463, 4268,
	3136, 3137, 4206, 4435, 1195, 4428, 1760, 2666, 4427, 2606,
	4422, 1329, 2606, 4421, 4206, 1757, 4415, 4206, 1035, 2599,
	2165, 4381, 1738, 1739, 87, 4049, 4329, 4311, 4308, 4305,
	2666, 3863, 2165, 4206, 4258, 4222, 4221, 2239, 4259, 2165,
	2165, 1181, 1181, 4213, 4212, 4205, 1769, 2165, 4206, 4206,
	4169, 4143, 4121, 1741, 2165, 2666, 2025, 3467, 4110, 1016,
	2662, 1015, 3467, 4033, 862, 2165, 4018, 2606, 3896, 3890,
	2606, 1213, 2666, 3844, 3239, 3838, 3799, 3484, 107, 3484,
	3800, 3659, 3657, 93, 104, 3660, 3658, 1329, 1740, 3039,
	1763, 1764, 1765, 1766, 3642, 3559, 2165, 3555, 2606, 2165,
	1746, 2606, 3483, 3474, 3084, 1025, 3484, 3475, 1030, 2815,
	3085, 1738, 1739, 3639, 1771, 1772, 1773, 1781, 1782, 1783,
	3180, 3175, 3174, 3127, 2606, 2606, 2606, 3128, 3125, 3117,
	2686, 1036, 3126, 3118, 1774, 1769, 1182, 1237, 1210, 3115,
	3086, 94, 1741, 2606, 2606, 2961, 1768, 1770, 2606, 2025,
	2933, 1787, 1738, 1739, 2227, 2022, 2932, 2709, 2665, 2656,
	2227, 2606, 2666, 2606, 2650, 2605, 1230, 2919, 2165, 2606,
	3142, 2226, 1755, 1756, 4436, 2227, 1769, 1740, 1184, 4333,
	1185, 4324, 4312, 1741, 4268, 2025, 3639, 1760, 2598, 4090,
	2606, 4049, 1746, 4019, 3863, 3475, 1757, 2810, 1474, 2724,
	1738, 1739, 229, 2093, 2038, 1761, 2003, 2019, 2022, 2887,
	2164, 2685, 2829, 2722, 1874, 1469, 3747, 3531, 1740, 3507,
	1896, 2139, 3459, 1633, 1769, 2643, 2642, 2641, 2640, 3136,
	3137, 1741, 3154, 3155, 3156, 2639, 229, 1186, 1768, 1770,
	1183, 3460, 1474, 1024, 1023, 2901, 1022, 1231, 1021, 231,
	1020, 1019, 3892, 1018, 1014, 1013, 3001, 3949, 3074, 1012,
	1011, 1010, 1009, 1008, 2664, 1007, 1740, 1006, 1005, 3136,
	3137, 1763, 1764, 1765, 1766, 3152, 1760, 1004, 1003, 1002,
	1001, 1746, 1000, 231, 999, 97, 229, 2005, 998, 2005,
	2005, 925, 924, 923, 2005, 922, 2005, 1761, 230, 921,
	2005, 920, 919, 918, 917, 3151, 916, 915, 914, 913,
	223, 912, 911, 910, 909, 908, 907, 906, 1778, 224,
	905, 1788, 1746, 904, 903, 902, 901, 1768, 1770, 1767,
	1656, 900, 230, 231, 1597, 899, 898, 182, 100, 897,
	103, 185, 1738, 1739, 1784, 3151, 1785, 896, 1090, 895,
	1762, 894, 93, 1755, 1756, 3457, 893, 1231, 892, 882,
	1763, 1764, 1765, 1766, 229, 881, 877, 2002, 1768, 1770,
	1746, 1776, 863, 1741, 1583, 185, 876, 148, 2502, 870,
	869, 856, 230, 855, 1495, 812, 1761, 811, 810, 809,
	1296, 1093, 801, 800, 223, 2488, 799, 2022, 770, 3142,
	761, 760, 759, 224, 743, 253, 252, 251, 1740, 250,
	249, 231, 248, 247, 1093, 246, 1768, 1770, 1093, 2598,
	3153, 245, 244, 243, 242, 185, 241, 1761, 1786, 240,
	239, 238, 237, 236, 1354, 235, 2472, 150, 1354, 3142,
	234, 233, 1762, 1296, 232, 3908, 1775, 4104, 3680, 3653,
	3485, 3227, 186, 3136, 3137, 1818, 2696, 1333, 2003, 2022,
	230, 1338, 3157, 2019, 1093, 2685, 1093, 1324, 1093, 2330,
	3097, 3080, 223, 2984, 1296, 1761, 2868, 2670, 1857, 2648,
	3178, 224, 2633, 229, 2486, 1856, 1758, 1754, 2903, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 1857, 1601,
	1296, 2067, 2024, 185, 3152, 1856, 1587, 1860, 1458, 1899,
	1767, 1483, 1746, 1922, 1827, 1483, 1477, 1453, 3179, 2234,
	1296, 1340, 1217, 4533, 2473, 1296, 4513, 1855, 4315, 4492,
	231, 1762, 1737, 1093, 4396, 1093, 4321, 1231, 4157, 1296,
	4313, 1067, 4111, 4089, 3152, 1093, 4200, 1093, 3958, 3931,
	3930, 3924, 1086, 3923, 3922, 1483, 4336, 1779, 3915, 3914,
	1473, 3146, 3138, 3139, 3140, 3141, 3143, 3144, 3136, 3137,
	1539, 1542, 1762, 3912, 3907, 1264, 1267, 3904, 1277, 230,
	1209, 3903, 1318, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	3798, 223, 3684, 1296, 1461, 1347, 1494, 1440, 1445, 1767,
	224, 3804, 3683, 2233, 3682, 2474, 1819, 2471, 1817, 2207,
	3663, 1093, 3630, 3629, 1093, 3628, 3551, 3136, 3137, 3547,
	1762, 3222, 2918, 3142, 3171, 3162, 1448, 3136, 3137, 3135,
	795, 3132, 3131, 229, 3129, 3124, 3123, 3122, 798, 3119,
	3116, 3096, 3079, 3072, 1313, 2934, 148, 2634, 4106, 3153,
	1528, 1825, 1472, 1471, 2459, 174, 174, 1737, 1777, 1736,
	1194, 1570, 1572, 1752, 1753, 1759, 1780, 1758, 1754, 1489,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 2902,
	231, 1602, 3245, 3918, 1482, 1818, 1820, 3917, 4705, 3153,
	4649, 4648, 3805, 4614, 1545, 4567, 2172, 4565, 3745, 2170,
	1219, 1324, 3577, 4455, 1324, 4388, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 4377, 1742, 1743, 1744, 1745, 1747, 1748,
	4374, 4373, 1304, 1038, 4372, 858, 4353, 4335, 3152, 230,
	4334, 4309, 4293, 4292, 2436, 4278, 4275, 1093, 3142, 4274,
	4269, 223, 4218, 1093, 4196, 4155, 4138, 4137, 4118, 4117,
	224, 4075, 1561, 73, 2476, 861, 860, 4050, 3948, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 3929, 3864,
	74, 229, 185, 1211, 3176, 229, 1738, 1739, 3858, 3855,
	3733, 3148, 3149, 3150, 1715, 3732, 78, 3142, 3147, 3145,
	3146, 3138, 3139, 3140, 3141, 3143, 3144, 3142, 3718, 3717,
	1769, 1582, 3715, 3645, 1709, 1036, 3633, 1741, 3542, 1805,
	3136, 3137, 1672, 1596, 3486, 229, 1559, 3219, 231, 3468,
	3434, 3369, 231, 3330, 3299, 229, 87, 3247, 3147, 3145,
	3146, 3138, 3139, 3140, 3141, 3143, 3144, 3101, 2442, 3100,
	4337, 1807, 1740, 3152, 3805, 3095, 3063, 2880, 1093, 1093,
	1093, 1607, 1863, 1862, 1093, 1861, 1858, 1850, 1848, 2677,
	2676, 1215, 231, 1215, 1624, 1483, 862, 230, 2470, 2645,
	2638, 230, 231, 3153, 2604, 2484, 1658, 1659, 1354, 223,
	107, 1488, 1876, 223, 1921, 93, 104, 1093, 224, 4105,
	789, 1877, 224, 1872, 2679, 1871, 1959, 789, 1870, 1869,
	1296, 1868, 3152, 1867, 1742, 1743, 1744, 1745, 1747, 1748,
	185, 230, 1712, 2767, 185, 1866, 1865, 1864, 1845, 1925,
	1990, 230, 1844, 223, 1016, 1720, 1015, 1885, 1719, 1843,
	1938, 1842, 224, 223, 1841, 1840, 1839, 1986, 1838, 1714,
	229, 1837, 224, 94, 1859, 1836, 1746, 229, 1835, 1716,
	1834, 1833, 1832, 1831, 185, 1733, 1734, 1820, 4078, 2501,
	1933, 1806, 1930, 1804, 185, 1799, 1296, 1312, 1953, 1738,
	1739, 1235, 1226, 1093, 2668, 1906, 2487, 1296, 3954, 3900,
	3142, 3679, 1882, 1883, 3656, 3648, 3083, 231, 3153, 2636,
	4173, 3956, 1768, 1770, 231, 1093, 2058, 1181, 2235, 174,
	1741, 1354, 1851, 1852, 257, 1564, 3136, 3137, 3678, 1819,
	2083, 3243, 3147, 3145, 3146, 3138, 3139, 3140, 3141, 3143,
	3144, 1802, 1036, 3463, 1917, 2058, 4646, 2056, 4638, 2808,
	1738, 1739, 1324, 4375, 4270, 1740, 230, 4021, 2065, 1337,
	1213, 4261, 1213, 230, 4260, 4109, 2031, 3153, 223, 1928,
	4052, 1761, 4051, 4020, 3951, 223, 1293, 224, 2030, 3867,
	3866, 1741, 1929, 3865, 224, 2485, 3651, 795, 3470, 1329,
	1926, 3469, 1899, 1857, 795, 798, 1907, 1897, 3529, 185,
	1856, 4316, 798, 1904, 1707, 39, 185, 97, 1934, 4266,
	229, 1875, 2058, 4314, 3333, 1982, 1740, 3759, 1336, 2044,
	3121, 3730, 3808, 3363, 3120, 2093, 1623, 1210, 3301, 1210,
	229, 1901, 1329, 3045, 996, 2007, 2136, 2769, 1916, 1915,
	1914, 1912, 1911, 1910, 1840, 229, 4199, 1840, 1296, 1296,
	3138, 3139, 3140, 3141, 3143, 3144, 1332, 231, 1354, 182,
	100, 1939, 103, 1329, 3417, 2787, 3416, 2033, 1036, 1673,
	1829, 1632, 2208, 4579, 2232, 4159, 1564, 231, 997, 2256,
	4257, 2029, 3479, 229, 229, 1335, 229, 4192, 4553, 4538,
	4525, 3401, 231, 2958, 863, 1633, 1956, 2152, 3812, 148,
	3795, 3140, 3141, 3143, 3144, 3761, 230, 3145, 3146, 3138,
	3139, 3140, 3141, 3143, 3144, 3756, 1762, 2121, 223, 2126,
	1746, 3738, 2131, 3504, 3268, 3183, 230, 224, 3579, 3089,
	231, 231, 2467, 231, 2027, 4534, 2675, 1873, 223, 1853,
	3408, 230, 2201, 1538, 2036, 4547, 1466, 224, 1826, 185,
	1307, 1263, 1296, 223, 1296, 4544, 1296, 2061, 2051, 150,
	1193, 2826, 224, 1563, 3453, 2823, 3710, 4368, 2821, 185,
	4093, 4462, 1296, 1296, 186, 3244, 2157, 2162, 4350, 230,
	230, 3304, 230, 1296, 185, 1611, 3725, 2941, 2099, 2915,
	3393, 223, 223, 4598, 223, 1296, 851, 1296, 1296, 1296,
	224, 224, 4535, 224, 4597, 3774, 3523, 2345, 3272, 2154,
	4239, 4008, 4628, 3992, 1505, 1513, 1670, 994, 992, 2710,
	789, 990, 185, 185, 4700, 859, 4232, 795, 2306, 977,
	1467, 2119, 2045, 988, 2197, 798, 985, 4224, 2304, 4183,
	3274, 2202, 2255, 4047, 2034, 4046, 3772, 3988, 3771, 1472,
	1471, 3763, 2214, 3753, 1671, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 2728, 3752, 2343, 2242, 3750, 2728,
	3749, 2118, 3773, 3737, 2130, 3694, 2050, 2049, 3693, 2726,
	2058, 2060, 3397, 3396, 2726, 3238, 3094, 3093, 2260, 2163,
	3092, 2237, 3138, 3139, 3140, 3141, 3143, 3144, 2222, 852,
	1514, 3989, 3091, 4193, 3049, 2832, 2831, 1093, 2828, 1093,
	2817, 2806, 2805, 2797, 1563, 1669, 1093, 2211, 2796, 1959,
	1959, 1354, 2795, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 2183, 1093,
	2224, 1093, 1093, 1093, 1093, 2182, 1609, 2243, 2220, 2090,
	1561, 2216, 2219, 1330, 2219, 2248, 2774, 2773, 2736, 3361,
	2657, 2417, 1337, 1093, 2347, 2334, 1093, 1093, 1330, 1713,
	1313, 1953, 1953, 2228, 1093, 2229, 2515, 795, 1093, 2053,
	1093, 1093, 2086, 2472, 1337, 798, 3301, 2344, 1354, 2232,
	3332, 2371, 2372, 4629, 1093, 1093, 1093, 1093, 2282, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 2247, 2514, 2375,
	2912, 2091, 2092, 2313, 1509, 2264, 2669, 1036, 1551, 1036,
	1550, 1336, 1549, 1887, 1548, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 982, 1034, 1748, 2181, 1093, 2448,
	2449, 2087, 4136, 1336, 1249, 4633, 1319, 3963, 3505, 1209,
	1215, 1209, 2328, 2448, 2464, 2300, 2252, 1354, 2731, 2717,
	2342, 2784, 2785, 2745, 1522, 2124, 1215, 2358, 2791, 1326,
	1604, 2473, 2345, 3144, 4361, 1468, 2432, 2432, 2771, 2510,
	3984, 2964, 1093, 1354, 1326, 3985, 1527, 2323, 1625, 1917,
	2784, 2785, 2055, 2733, 1744, 1745, 1747, 1748, 2556, 2556,
	2570, 2331, 2448, 2346, 1891, 2590, 2592, 2339, 3962, 2333,
	4022, 2596, 2332, 2467, 3362, 1016, 1682, 2362, 1016, 1016,
	2363, 2364, 2759, 1033, 2320, 2463, 2649, 2310, 2713, 3022,
	2054, 2343, 2009, 1654, 2621, 2011, 2269, 3987, 1718, 1706,
	4634, 2016, 3713, 1738, 1739, 2018, 1668, 2715, 1331, 4004,
	2021, 1894, 2474, 3990, 2471, 2646, 3037, 2784, 2785, 4659,
	3721, 2758, 2613, 1331, 1311, 2263, 1889, 1769, 4597, 1621,
	2221, 854, 853, 3513, 1741, 1330, 2748, 1654, 1906, 1956,
	1956, 2716, 2732, 2444, 1892, 3512, 1296, 1296, 2998, 1605,
	1534, 2476, 1181, 2265, 4363, 2322, 4642, 4045, 1633, 1686,
	1633, 2714, 2272, 2461, 2825, 2635, 1327, 3751, 2735, 1740,
	2341, 4531, 2512, 3748, 3395, 1328, 3568, 2513, 3004, 2612,
	2516, 1327, 2517, 2518, 3781, 3359, 3271, 1890, 1354, 1213,
	1328, 1035, 1281, 1653, 1665, 174, 2824, 1651, 1532, 2552,
	2822, 2663, 1211, 2820, 1211, 1213, 2827, 2565, 2699, 4636,
	1036, 2594, 2581, 890, 1324, 2266, 3992, 3198, 2794, 1036,
	2602, 2603, 1959, 1036, 4609, 2614, 2618, 2619, 2620, 2734,
	2625, 3734, 2344, 2631, 2632, 1859, 2727, 1653, 3986, 3782,
	1446, 2660, 2705, 1457, 1281, 3036, 1904, 4617, 1947, 2772,
	3988, 1326, 2169, 2168, 3981, 2101, 1210, 1610, 2428, 1652,
	1354, 2476, 4616, 4135, 2707, 986, 986, 2671, 2655, 986,
	2273, 3979, 1210, 1746, 1296, 2305, 3993, 1303, 2105, 3780,
	3983, 987, 4662, 684, 986, 2303, 3007, 2426, 2678, 2682,
	1093, 1093, 2737, 1093, 1953, 2701, 2414, 1851, 1852, 2770,
	1893, 849, 4586, 848, 3989, 2342, 1281, 1281, 4002, 3971,
	679, 1036, 2684, 2681, 2777, 789, 2708, 1296, 2690, 1768,
	1770, 2730, 2693, 771, 2694, 2476, 3882, 2698, 2702, 2440,
	1331, 2700, 972, 2747, 3349, 2102, 2438, 2818, 4432, 3881,
	3341, 2093, 4532, 1329, 1508, 2319, 3982, 2776, 1296, 2884,
	1480, 3451, 1487, 2792, 1493, 3450, 2859, 1029, 1329, 1511,
	1296, 1222, 1296, 2711, 2802, 2899, 2804, 1032, 2762, 3029,
	3030, 1608, 3707, 972, 1248, 2470, 1568, 1296, 1761, 883,
	4689, 2775, 2863, 2137, 3706, 2062, 2063, 2865, 1327, 3350,
	2786, 2788, 2789, 2790, 2793, 3342, 4635, 1328, 1029, 2750,
	2753, 2740, 2113, 1220, 1683, 4640, 768, 2004, 3283, 2074,
	3197, 2860, 4362, 2965, 2966, 2075, 2321, 3006, 1093, 1581,
	2731, 1586, 3698, 2926, 2972, 2973, 2974, 2422, 3722, 3348,
	3450, 1595, 3287, 1600, 3372, 3340, 2895, 2985, 2955, 2986,
	2106, 4530, 776, 2803, 3565, 2423, 1224, 2074, 3003, 973,
	2424, 2858, 4444, 2075, 2429, 2733, 4499, 2114, 4500, 4369,
	2096, 4003, 795, 2412, 4442, 1052, 2415, 2624, 2962, 2731,
	798, 1093, 2982, 2967, 2746, 2968, 4383, 1093, 1093, 3051,
	2431, 174, 983, 4180, 1472, 2866, 2940, 2930, 2959, 4177,
	973, 3060, 795, 1534, 3273, 1657, 3316, 2112, 2878, 2149,
	798, 2928, 1956, 3984, 2733, 2888, 2107, 2108, 3985, 4641,
	780, 1223, 3972, 2889, 766, 2097, 2411, 2809, 1606, 3009,
	3058, 3011, 4430, 1762, 1680, 3566, 735, 2910, 2076, 2921,
	2103, 2271, 1093, 1093, 2931, 2799, 2329, 2140, 1093, 2942,
	2798, 1684, 4643, 2147, 2732, 2080, 1681, 3005, 2268, 1717,
	778, 1093, 1093, 3315, 2148, 2095, 2960, 1093, 1093, 1891,
	3987, 4431, 733, 1093, 2929, 1329, 2076, 1233, 2125, 3285,
	2735, 2104, 1093, 1093, 1093, 1310, 3990, 2262, 1093, 3735,
	1620, 1622, 2981, 2080, 891, 2987, 4067, 2979, 1093, 4585,
	1846, 3241, 2988, 2732, 2990, 2137, 2992, 2084, 2994, 3878,
	2989, 4148, 2991, 3320, 2993, 1093, 1894, 4608, 702, 783,
	2137, 3284, 3052, 3017, 4482, 4473, 2077, 2082, 3082, 2735,
	4132, 2615, 3028, 3789, 3002, 884, 885, 2728, 2729, 1685,
	3019, 2734, 3787, 3012, 2425, 3018, 3014, 3695, 974, 1892,
	1798, 4030, 2751, 3099, 2427, 2458, 3077, 3078, 3497, 2358,
	680, 3081, 3023, 3322, 2077, 2082, 2141, 3490, 2617, 4663,
	3055, 2133, 4303, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 2630, 4560, 3038, 2476, 3675, 1035, 3581, 3073, 974,
	2734, 773, 4561, 3056, 4082, 2132, 2109, 3061, 1457, 4650,
	4077, 3872, 1238, 3883, 1638, 1093, 1093, 1093, 1209, 2078,
	3525, 3986, 2413, 4083, 1093, 1093, 1093, 3020, 4390, 1093,
	3050, 4529, 777, 4596, 1209, 4295, 4594, 3321, 2128, 1093,
	1215, 1354, 4409, 767, 4277, 1093, 681, 1093, 4296, 3826,
	3190, 3191, 3438, 4690, 2189, 1457, 1215, 2078, 1884, 3993,
	2572, 3326, 1236, 3790, 1229, 2084, 734, 2091, 2092, 671,
	1913, 1947, 1947, 3492, 1354, 4131, 1994, 3803, 3088, 781,
	2005, 4297, 2110, 1728, 3879, 775, 1215, 2439, 3491, 1354,
	1044, 769, 1221, 2361, 682, 765, 683, 2129, 975, 2072,
	2094, 2046, 3173, 2084, 3789, 3927, 4584, 1959, 4215, 3232,
	3212, 1354, 3619, 3787, 4214, 1893, 3324, 3696, 3192, 4668,
	4068, 4286, 4349, 3827, 3767, 3709, 1296, 1296, 1727, 3295,
	1727, 772, 871, 886, 887, 3439, 3430, 3237, 4007, 975,
	3291, 1722, 1994, 4299, 2900, 4006, 2894, 2882, 2215, 1093,
	976, 3225, 2074, 1994, 2070, 2691, 3325, 4391, 2075, 779,
	3251, 2695, 1036, 1093, 2209, 2203, 4298, 2083, 3200, 3202,
	2195, 2175, 3690, 736, 3564, 2706, 3488, 1296, 2778, 1953,
	3669, 1502, 1959, 4300, 774, 3221, 3206, 3057, 742, 2144,
	2351, 976, 3269, 1240, 2071, 3226, 3634, 3059, 3201, 3242,
	1093, 4449, 3526, 3210, 1727, 2083, 3275, 1324, 3497, 3213,
	3214, 1211, 4133, 3184, 1296, 3262, 3230, 3490, 4412, 1213,
	3218, 3168, 3169, 3170, 3790, 3199, 3211, 1211, 3788, 4181,
	1726, 4080, 1726, 3973, 3670, 1213, 1296, 4098, 1296, 2043,
	3289, 4559, 2079, 3829, 2142, 3288, 2311, 3278, 3279, 3306,
	802, 2752, 3311, 2136, 1953, 3313, 2039, 3697, 1354, 2879,
	3671, 2136, 3668, 3884, 1251, 1213, 3234, 3235, 3236, 1296,
	4255, 2076, 3305, 1296, 3296, 3309, 4253, 3292, 4195, 1798,
	2079, 3207, 3307, 3364, 2143, 3303, 1210, 3216, 2080, 3217,
	3335, 3493, 3494, 3495, 3496, 1728, 1296, 1728, 2116, 3620,
	3302, 3928, 1210, 1296, 3043, 1296, 1726, 3263, 3621, 1354,
	3357, 3021, 3785, 3492, 2041, 2253, 789, 2200, 3248, 3249,
	3647, 3250, 3270, 4667, 3259, 3195, 2352, 1296, 3491, 3339,
	3194, 3205, 1210, 3276, 1655, 3370, 2654, 2653, 2652, 1296,
	1027, 2651, 972, 3375, 4005, 3377, 3885, 1543, 3381, 2779,
	2780, 4392, 3387, 1639, 2042, 3794, 1215, 2886, 3353, 2077,
	2082, 1544, 3446, 3209, 1033, 2093, 3691, 1029, 3358, 4203,
	3323, 2608, 3422, 1557, 2122, 3331, 3429, 1555, 872, 873,
	889, 1296, 1296, 4356, 4250, 4059, 3444, 1956, 3344, 3788,
	2756, 3345, 3716, 3337, 3480, 3346, 2213, 3347, 3404, 4605,
	4115, 1929, 3413, 4387, 1296, 2611, 4175, 4459, 1568, 2963,
	1568, 2864, 3365, 1028, 3437, 3351, 2862, 2117, 2241, 3371,
	1614, 3466, 3455, 3394, 4301, 4446, 4190, 3934, 3636, 3384,
	4302, 3399, 3390, 3402, 1947, 3233, 3360, 3373, 4452, 2483,
	2955, 4357, 2078, 1702, 1354, 4607, 2610, 1354, 3382, 2955,
	4477, 2609, 3388, 4549, 4376, 4154, 3926, 3672, 3506, 973,
	1704, 2776, 1956, 3793, 3398, 3165, 3406, 1701, 1699, 3208,
	4114, 4191, 4204, 2315, 741, 3447, 1677, 1675, 1649, 1647,
	1093, 3440, 1645, 3426, 3427, 3425, 1093, 1093, 2084, 1643,
	1093, 1093, 1093, 795, 1093, 3541, 803, 804, 3502, 3499,
	3501, 798, 3252, 1093, 1959, 3498, 1641, 174, 174, 3130,
	3452, 3062, 1093, 3464, 3465, 1093, 2883, 1635, 3454, 3461,
	3478, 1354, 1630, 1628, 3482, 4453, 3519, 1553, 4358, 2816,
	1093, 3493, 3494, 3495, 3496, 1213, 2768, 3476, 1354, 3277,
	3518, 2680, 2324, 3445, 1924, 1920, 1705, 1592, 1959, 1959,
	1093, 1093, 2801, 1093, 1093, 1093, 3166, 2302, 2482, 3521,
	3520, 1352, 1722, 3000, 2999, 1451, 874, 875, 2970, 2340,
	1664, 1093, 2277, 2194, 3527, 1093, 1953, 1959, 1959, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 1093, 1093, 3500, 1093,
	3515, 3593, 1210, 3594, 2174, 1987, 1093, 1093, 1959, 1830,
	1603, 3524, 1556, 1093, 1526, 4524, 1554, 3544, 1887, 888,
	1953, 1953, 4031, 3758, 1093, 3553, 3554, 3509, 3757, 3510,
	2115, 3511, 4445, 4032, 3516, 1215, 1215, 806, 805, 1093,
	2371, 3584, 4017, 3522, 1036, 1703, 3374, 984, 974, 1953,
	1953, 4096, 1700, 1698, 2317, 4037, 3549, 2125, 2316, 3977,
	3825, 1676, 1674, 1648, 1646, 2079, 3816, 1644, 1354, 2371,
	3599, 3560, 3770, 3728, 1642, 4582, 3726, 3665, 3708, 4091,
	1953, 3433, 3428, 3576, 3418, 2123, 3631, 3567, 3569, 3570,
	2913, 1640, 3652, 2905, 3583, 2898, 807, 808, 2890, 1891,
	3627, 3591, 1634, 2876, 2861, 3592, 2697, 1629, 1627, 3443,
	2692, 2173, 1552, 2171, 2153, 1093, 2138, 2111, 3673, 3674,
	1281, 3623, 3596, 3598, 2098, 2120, 2085, 2026, 1209, 2023,
	3638, 2020, 3685, 3686, 3687, 2017, 2012, 3571, 2301, 2010,
	1093, 2006, 1997, 3561, 1209, 4573, 1894, 3643, 3644, 3385,
	1190, 174, 1932, 3624, 4082, 2147, 2124, 3632, 3041, 1731,
	3590, 1889, 4598, 2047, 3015, 3013, 4487, 2327, 1281, 3640,
	3641, 1093, 1093, 4083, 1209, 4120, 4113, 1191, 4112, 1892,
	4044, 3959, 2956, 2066, 1956, 1507, 1026, 4288, 975, 2757,
	4281, 2728, 2728, 3837, 2093, 3655, 2267, 3702, 1272, 3654,
	2212, 989, 991, 993, 1281, 1281, 2726, 2754, 1696, 1697,
	1093, 4486, 2297, 2325, 1213, 1213, 1271, 2296, 729, 4039,
	2274, 4009, 1890, 2760, 1626, 4323, 3935, 3913, 1956, 1956,
	3318, 2761, 2781, 1735, 1296, 1305, 1239, 1296, 3258, 4601,
	976, 3260, 3261, 4592, 3739, 3766, 3264, 4554, 3265, 2875,
	3266, 2299, 685, 3042, 1959, 2761, 254, 1956, 1956, 2326,
	3743, 3813, 1810, 3744, 3746, 2196, 1815, 3765, 3386, 1732,
	1738, 1739, 1738, 1739, 3712, 3760, 1316, 2823, 2821, 2830,
	2813, 1210, 1210, 3762, 3768, 1296, 1272, 1192, 1956, 3681,
	2161, 1093, 782, 2812, 2811, 3736, 1446, 2891, 3731, 1215,
	1093, 1741, 1272, 668, 3839, 2765, 839, 696, 2763, 4437,
	1296, 1296, 1296, 4403, 3846, 2776, 3809, 3830, 2764, 4397,
	3754, 1211, 3755, 1457, 3792, 4355, 1953, 1296, 4342, 4272,
	4248, 4184, 4182, 4176, 3967, 1893, 1740, 1211, 1740, 3831,
	3966, 3823, 1296, 3815, 3783, 3802, 3296, 3791, 1354, 3662,
	3834, 3432, 3779, 2920, 2766, 2595, 2032, 1940, 4637, 3850,
	4201, 3975, 3974, 3796, 3705, 4479, 3286, 1211, 3810, 3240,
	4480, 4666, 1354, 3136, 3137, 1093, 1093, 1738, 1739, 2926,
	4479, 1093, 1093, 1959, 1474, 4480, 1093, 1093, 3819, 1093,
	3814, 4611, 4399, 1093, 3905, 3833, 2814, 3817, 2478, 1947,
	2720, 2721, 2718, 2719, 1093, 1923, 2955, 1613, 3677, 2720,
	2718, 2511, 3832, 1612, 1679, 3822, 3777, 1678, 3841, 4273,
	1093, 3840, 3862, 4233, 3835, 4041, 3845, 4036, 4035, 3901,
	3676, 3572, 3379, 1994, 2869, 3868, 3376, 2872, 3853, 2874,
	3886, 3860, 1824, 1823, 1209, 3869, 3851, 3852, 4652, 3887,
	3856, 4618, 3857, 4441, 4440, 1953, 3859, 4439, 1457, 4338,
	4251, 4228, 3899, 4174, 1568, 4171, 1281, 4070, 4056, 3955,
	3870, 3861, 3843, 3797, 1947, 3880, 3724, 3719, 1213, 3436,
	1215, 3435, 3312, 2917, 3257, 1101, 2917, 2997, 1215, 2978,
	2977, 2976, 1354, 2975, 1354, 2904, 3895, 2877, 2755, 2688,
	2683, 1215, 2673, 2672, 2661, 1457, 2443, 1457, 2318, 2298,
	2295, 2294, 1296, 1296, 2293, 2292, 2291, 2210, 2184, 2180,
	2179, 1354, 2178, 2177, 2176, 3940, 2000, 1999, 2068, 1998,
	1996, 261, 261, 261, 1956, 674, 675, 1931, 690, 674,
	690, 700, 1695, 1694, 740, 1210, 1636, 1521, 758, 1520,
	1519, 3875, 1518, 764, 3925, 1517, 1215, 1516, 1215, 1515,
	261, 1510, 2995, 1506, 1504, 1503, 3225, 1460, 1345, 3943,
	1344, 1343, 1342, 1341, 1309, 1308, 1258, 1257, 1296, 1256,
	868, 1255, 4000, 1254, 1253, 1252, 261, 1250, 1354, 1245,
	1296, 1244, 3936, 1296, 1243, 1242, 3939, 1241, 4001, 3942,
	3941, 3937, 3938, 1173, 1354, 3946, 2037, 3964, 174, 3950,
	3969, 3947, 4012, 4013, 3932, 3960, 3961, 995, 981, 4360,
	3991, 3997, 2314, 3997, 1688, 92, 4011, 1512, 825, 86,
	2145, 3723, 952, 4476, 1296, 1296, 1496, 1211, 4382, 833,
	4461, 3811, 3314, 2833, 2276, 1637, 3976, 2278, 4010, 3220,
	2637, 4429, 3909, 3098, 1296, 4330, 4147, 2481, 1828, 1213,
	3177, 88, 1077, 1956, 1123, 2166, 1354, 1213, 4066, 4065,
	3978, 1296, 3711, 2945, 4063, 4062, 1944, 4057, 1946, 1043,
	1213, 4034, 4043, 1357, 4498, 2048, 1083, 2064, 2057, 2674,
	2555, 1100, 4040, 1097, 4042, 1948, 1215, 1950, 1099, 1098,
	4088, 1949, 1847, 4099, 4048, 4026, 1296, 1296, 1296, 674,
	674, 1096, 4053, 1943, 3821, 4029, 2924, 261, 3462, 1354,
	4116, 1562, 4060, 1209, 1209, 4100, 1210, 1560, 954, 4054,
	2052, 1093, 1093, 1093, 1210, 1213, 2437, 1213, 4119, 2465,
	3087, 1821, 1058, 4094, 4061, 1079, 4076, 1210, 2462, 1354,
	1234, 1068, 1057, 4103, 1093, 3203, 4015, 1093, 1093, 3182,
	3449, 3997, 4085, 4055, 3661, 2350, 843, 1093, 3133, 4024,
	1959, 4087, 4027, 4101, 2468, 1093, 1093, 1225, 2578, 2571,
	2567, 3267, 2914, 1708, 4161, 1800, 3255, 3256, 4108, 2925,
	1354, 1339, 1296, 1061, 2435, 1812, 1947, 4139, 3067, 2360,
	3456, 3223, 1210, 4123, 1210, 2667, 4127, 3688, 4483, 4122,
	3580, 3689, 4134, 2188, 1189, 4128, 1188, 1232, 1187, 4467,
	4464, 2135, 1354, 3854, 3411, 2040, 2712, 1790, 3419, 1073,
	1093, 1456, 3188, 3481, 1523, 4125, 763, 3290, 4208, 1093,
	1947, 1947, 1953, 1085, 1789, 2854, 2853, 1093, 4150, 1959,
	4352, 4144, 1325, 1323, 1322, 1321, 4625, 3727, 1093, 3729,
	4688, 1093, 3720, 228, 3035, 1729, 1721, 4167, 4168, 1947,
	1947, 225, 227, 1093, 3338, 1213, 226, 4186, 4071, 3666,
	1354, 1457, 1457, 4156, 3229, 4552, 3741, 1296, 3403, 4211,
	23, 4170, 1296, 1296, 22, 21, 3352, 112, 3354, 42,
	1947, 20, 128, 147, 4227, 4187, 146, 120, 145, 144,
	143, 142, 149, 141, 140, 4185, 1211, 1211, 4194, 135,
	139, 1953, 1994, 1994, 138, 3769, 137, 136, 2374, 3383,
	134, 4238, 132, 3389, 4263, 133, 127, 1354, 131, 4254,
	1296, 4217, 1210, 130, 129, 126, 125, 4225, 124, 123,
	122, 121, 4229, 119, 118, 117, 1457, 116, 1215, 1215,
	115, 114, 113, 4235, 754, 751, 61, 60, 4271, 111,
	110, 19, 4282, 1994, 4267, 40, 4247, 4244, 1093, 1093,
	4243, 2200, 4306, 4307, 2441, 4287, 4252, 1209, 14, 65,
	66, 18, 13, 35, 4283, 1093, 1959, 3413, 4291, 1810,
	4262, 91, 4242, 4285, 102, 101, 36, 99, 4310, 98,
	1994, 34, 17, 16, 4279, 2479, 4284, 15, 96, 95,
	1290, 4246, 33, 3997, 3997, 31, 4290, 4304, 4103, 3327,
	3328, 4289, 1994, 3329, 1994, 11, 9, 1093, 8, 37,
	1093, 1908, 12, 5, 179, 178, 181, 1215, 177, 180,
	1956, 4319, 4320, 2577, 90, 4318, 176, 175, 89, 1215,
	4230, 29, 4348, 10, 171, 1994, 4240, 4264, 1953, 1994,
	3807, 81, 173, 1463, 172, 170, 169, 3366, 3367, 168,
	82, 3368, 79, 4371, 167, 85, 4339, 166, 80, 84,
	1281, 4347, 2083, 83, 4344, 27, 4322, 6, 64, 7,
	4129, 1093, 1093, 3503, 1498, 4370, 105, 106, 38, 4328,
	2647, 1093, 3997, 4364, 77, 4386, 1215, 76, 4365, 1215,
	75, 26, 63, 1296, 3997, 25, 212, 211, 210, 1956,
	1535, 209, 208, 1296, 1296, 207, 206, 1213, 1213, 205,
	4406, 4378, 200, 4408, 4394, 4395, 1947, 199, 4380, 204,
	1296, 202, 201, 203, 4420, 1576, 198, 215, 214, 4393,
	220, 4267, 1227, 219, 1093, 1093, 218, 4398, 1209, 1589,
	4405, 4401, 4400, 217, 1093, 216, 1209, 4413, 213, 222,
	1211, 3997, 197, 4414, 3997, 196, 4416, 195, 193, 1209,
	4417, 189, 1457, 188, 4425, 1247, 4426, 192, 194, 191,
	190, 187, 221, 4454, 1210, 1210, 4424, 261, 72, 261,
	261, 4458, 1276, 261, 1286, 1093, 1093, 4434, 1093, 2355,
	164, 165, 71, 1615, 4438, 1306, 1213, 163, 4418, 4419,
	162, 161, 160, 159, 758, 158, 157, 4433, 1213, 70,
	4466, 4469, 24, 4481, 1209, 4423, 1209, 2, 1, 0,
	0, 0, 0, 4478, 0, 2723, 4457, 4456, 261, 4471,
	261, 261, 1276, 4503, 261, 261, 0, 1286, 4475, 0,
	4507, 1093, 1093, 1093, 0, 1947, 1956, 0, 261, 0,
	1476, 4506, 4488, 0, 0, 0, 4501, 0, 4470, 0,
	0, 4474, 0, 1210, 0, 1213, 4494, 4502, 1213, 0,
	0, 1500, 0, 1093, 0, 1210, 0, 4536, 0, 0,
	4485, 0, 4541, 0, 0, 4523, 4520, 4521, 4522, 0,
	1525, 0, 0, 1286, 0, 0, 0, 261, 261, 0,
	1276, 0, 4562, 0, 0, 4537, 0, 0, 0, 0,
	4555, 4539, 4564, 0, 0, 0, 0, 0, 0, 758,
	4576, 261, 261, 4578, 0, 0, 4566, 1093, 2573, 0,
	0, 1211, 1210, 0, 0, 1210, 4563, 0, 4577, 1211,
	4583, 0, 4570, 0, 868, 0, 4571, 0, 4572, 0,
	0, 0, 1211, 0, 1209, 4603, 0, 4599, 0, 0,
	0, 4574, 4575, 0, 0, 4595, 4591, 4580, 4593, 4589,
	4590, 0, 0, 0, 0, 2083, 1215, 4604, 1215, 4606,
	4623, 4466, 4602, 0, 4469, 0, 0, 0, 4615, 0,
	0, 4631, 4620, 0, 4610, 4621, 4632, 0, 4386, 4630,
	4622, 4619, 4624, 0, 4627, 0, 0, 1211, 0, 1211,
	0, 0, 0, 0, 0, 0, 0, 4645, 261, 0,
	4626, 0, 0, 0, 0, 4644, 0, 0, 4647, 0,
	0, 0, 0, 0, 0, 4654, 0, 261, 0, 0,
	0, 3997, 0, 3997, 0, 4660, 4656, 4653, 1093, 1093,
	4485, 0, 4658, 0, 4661, 0, 0, 1093, 0, 1093,
	1093, 4664, 0, 0, 4651, 0, 4673, 3778, 4670, 0,
	0, 4679, 0, 0, 4678, 0, 4684, 4677, 4683, 4682,
	4681, 0, 4676, 0, 0, 0, 0, 0, 4680, 0,
	4687, 0, 4692, 4691, 4695, 0, 0, 4694, 4699, 0,
	4696, 0, 4697, 0, 0, 0, 2577, 4703, 0, 4693,
	4702, 0, 0, 0, 0, 0, 1093, 0, 4704, 4707,
	0, 4709, 0, 4713, 4699, 4710, 4706, 4712, 4219, 4220,
	1281, 0, 4671, 4672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 2926, 0, 0, 0, 1213, 4234, 1213, 4236, 0,
	4237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2200, 0, 0, 2577, 2577, 0, 4708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 1209, 0, 0,
	0, 0, 1210, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3136,
	3137, 0, 3154, 3155, 3156, 0, 261, 0, 261, 0,
	0, 0, 261, 0, 0, 0, 73, 0, 3818, 0,
	0, 0, 3891, 0, 0, 1476, 1276, 261, 0, 261,
	0, 2849, 0, 74, 0, 261, 1476, 690, 0, 0,
	0, 0, 261, 1476, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 1209, 0, 2001, 0, 0,
	0, 1947, 0, 0, 2841, 2839, 0, 1209, 0, 261,
	0, 2843, 2845, 2835, 0, 3151, 261, 0, 0, 0,
	2577, 2577, 2577, 0, 0, 0, 0, 0, 3871, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4379, 0, 3189, 0,
	0, 263, 0, 0, 0, 0, 758, 0, 0, 0,
	0, 0, 0, 0, 1209, 0, 0, 1209, 0, 862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3215, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 3228, 0, 4016, 1211,
	1211, 3025, 0, 0, 0, 0, 0, 0, 0, 3142,
	4025, 0, 0, 4028, 0, 0, 0, 0, 3246, 0,
	0, 0, 0, 0, 0, 0, 2230, 0, 0, 0,
	0, 0, 0, 0, 3136, 3137, 0, 3154, 3155, 3156,
	0, 0, 1290, 2244, 0, 0, 94, 0, 1947, 0,
	0, 3064, 3065, 2246, 0, 0, 0, 3546, 0, 0,
	0, 0, 0, 0, 0, 2254, 0, 2257, 2258, 2259,
	0, 0, 3157, 0, 4084, 0, 0, 0, 0, 0,
	0, 2573, 2573, 0, 0, 0, 0, 0, 1211, 0,
	2837, 0, 0, 0, 0, 0, 0, 0, 2200, 0,
	1211, 2851, 0, 0, 0, 0, 0, 0, 0, 0,
	3151, 0, 261, 0, 3152, 261, 0, 0, 1281, 0,
	0, 0, 2850, 2842, 2840, 2844, 2846, 2836, 2838, 2852,
	0, 0, 0, 0, 1994, 0, 2848, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 1994, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	2855, 0, 261, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 4551, 261, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 3159, 3160, 3161, 0, 0,
	261, 0, 261, 0, 3142, 0, 674, 0, 261, 0,
	1994, 0, 0, 0, 0, 0, 3228, 0, 0, 0,
	758, 0, 0, 0, 868, 2573, 2573, 2573, 4069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4086, 182, 100, 0, 103, 0, 0, 0, 261,
	0, 1276, 261, 0, 1209, 0, 1209, 0, 0, 3153,
	0, 0, 0, 0, 4107, 0, 758, 3157, 0, 229,
	0, 0, 0, 261, 0, 0, 0, 863, 0, 0,
	2275, 0, 148, 0, 0, 261, 261, 0, 261, 0,
	261, 0, 261, 0, 261, 0, 0, 0, 0, 3136,
	3137, 0, 3154, 3155, 3156, 0, 0, 4241, 0, 3152,
	0, 0, 0, 0, 0, 0, 231, 2307, 0, 0,
	2308, 0, 2309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 150, 2856, 0, 0, 0, 0, 0, 0,
	0, 1451, 2847, 0, 1352, 0, 0, 186, 0, 740,
	0, 0, 0, 758, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3151, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 3148, 3149, 3150, 0, 0, 2577, 2577, 3147, 3145,
	3146, 3138, 3139, 3140, 3141, 3143, 3144, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3557, 0,
	0, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 3573, 0, 1211, 0, 1211,
	0, 0, 0, 0, 3153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3142,
	0, 0, 0, 0, 0, 0, 2704, 1290, 0, 0,
	0, 1457, 0, 0, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 2577, 2577, 0, 2577, 0, 0, 0, 0, 3158,
	0, 0, 0, 3136, 3137, 0, 3154, 3155, 3156, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3157, 0, 0, 261, 3545, 0, 0, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 261, 0, 674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 3152, 3664, 0, 0, 0, 0,
	0, 261, 1286, 0, 1281, 0, 3148, 3149, 3150, 3151,
	0, 0, 0, 3147, 3145, 3146, 3138, 3139, 3140, 3141,
	3143, 3144, 0, 0, 2857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 261,
	1286, 0, 0, 690, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 2687, 0, 0, 0, 0, 0, 261,
	0, 0, 261, 0, 0, 78, 261, 0, 261, 0,
	0, 0, 0, 1276, 0, 261, 261, 0, 1286, 1286,
	2703, 3537, 3538, 0, 4384, 261, 0, 0, 0, 0,
	0, 0, 0, 3142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 4404, 0,
	0, 2573, 2573, 0, 0, 1056, 0, 2971, 0, 1056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3153,
	2744, 0, 0, 0, 0, 1438, 0, 0, 0, 1438,
	0, 261, 0, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 3157, 0, 0, 107,
	0, 0, 0, 0, 93, 104, 0, 261, 0, 3600,
	3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610,
	3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 0, 3622,
	0, 0, 0, 0, 261, 0, 0, 0, 3152, 2573,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 0, 2573,
	261, 2867, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4489, 0, 0, 0, 0, 0, 4491,
	0, 0, 0, 0, 0, 1476, 0, 0, 261, 0,
	261, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 3148, 3149, 3150, 0, 0, 0, 2909, 3147, 3145,
	3146, 3138, 3139, 3140, 3141, 3143, 3144, 2744, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 2938, 868,
	0, 2744, 2744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1276, 261,
	0, 0, 0, 1476, 0, 1476, 1286, 261, 0, 0,
	1276, 0, 1276, 3153, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 261, 261, 261, 1276,
	0, 0, 1276, 0, 261, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3945, 0, 0, 0, 0, 0, 261, 182, 100,
	0, 103, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3957, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 863, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3148, 3149, 3150, 0, 0,
	0, 0, 3147, 3145, 3146, 3138, 3139, 3140, 3141, 3143,
	3144, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1476, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 1438,
	0, 0, 74, 0, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 78, 0,
	1042, 1738, 1739, 0, 0, 0, 0, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 1352, 0, 87, 0,
	0, 1787, 0, 0, 0, 0, 1478, 0, 1484, 0,
	1490, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4145, 1740, 0, 0,
	0, 261, 0, 0, 0, 0, 674, 1760, 862, 0,
	0, 674, 2577, 0, 674, 0, 1757, 674, 674, 0,
	0, 0, 107, 674, 0, 0, 1056, 93, 104, 0,
	0, 261, 1438, 0, 0, 0, 0, 4145, 0, 0,
	0, 0, 0, 1476, 0, 1579, 3391, 1584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 1598,
	0, 0, 0, 0, 0, 0, 1476, 0, 0, 2374,
	0, 0, 0, 0, 0, 2577, 0, 3423, 261, 0,
	0, 0, 261, 261, 0, 94, 0, 0, 0, 3431,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2744, 2744, 261, 0, 3282, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 2744, 1666, 2374, 3298, 0,
	0, 3472, 3473, 0, 0, 0, 2744, 3298, 1778, 2744,
	3298, 1788, 0, 3298, 0, 0, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 261, 261, 3282, 0,
	261, 0, 0, 0, 0, 0, 1738, 1739, 0, 1438,
	0, 0, 0, 1755, 1756, 0, 0, 0, 0, 0,
	3282, 0, 261, 0, 3356, 3356, 0, 0, 0, 0,
	1769, 1776, 1276, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 2744, 0, 2744,
	0, 3380, 2744, 3282, 0, 0, 2744, 3282, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 0, 0, 0, 0, 97,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	2577, 0, 1760, 0, 0, 0, 0, 261, 0, 1809,
	0, 1757, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 261, 3407, 0, 0, 3409, 2744, 0, 0, 261,
	0, 0, 0, 261, 0, 0, 1286, 0, 0, 0,
	0, 182, 100, 0, 103, 0, 0, 4153, 0, 0,
	0, 261, 0, 0, 0, 0, 2909, 0, 0, 1276,
	0, 261, 0, 0, 2744, 3540, 674, 0, 229, 0,
	0, 0, 0, 2744, 0, 0, 863, 2573, 0, 3136,
	3137, 148, 3154, 3155, 3156, 0, 1763, 1764, 1765, 1766,
	1767, 0, 0, 0, 261, 2909, 1746, 0, 2909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4197, 1762, 0, 0, 0, 231, 0, 0, 0, 0,
	1880, 1880, 1880, 0, 0, 0, 0, 0, 0, 0,
	3508, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	2573, 150, 1768, 1770, 0, 0, 0, 3514, 0, 0,
	1276, 261, 0, 261, 0, 3151, 186, 0, 0, 1276,
	0, 0, 0, 0, 230, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 261,
	0, 0, 1438, 0, 0, 0, 1738, 1739, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 1571, 0, 2548,
	2549, 2550, 2551, 2544, 2545, 2546, 2547, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 3578, 1780, 1758, 1754, 3142,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 1740, 0, 0, 0, 0, 1042, 0, 0,
	0, 0, 1760, 0, 0, 4327, 0, 0, 0, 1438,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	2524, 2525, 2526, 2527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2573, 0, 0, 0, 0,
	0, 0, 3157, 2536, 2537, 2538, 2539, 2532, 2533, 2534,
	2535, 2540, 2541, 2542, 2543, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3535, 0, 0, 0, 0,
	261, 261, 0, 0, 3775, 0, 1762, 0, 1438, 0,
	0, 0, 0, 0, 3152, 0, 1763, 1764, 1765, 1766,
	0, 0, 674, 674, 0, 0, 1746, 0, 0, 0,
	0, 0, 3136, 3137, 1438, 3154, 3155, 3156, 0, 0,
	0, 0, 0, 0, 1476, 1476, 0, 2520, 2521, 2522,
	2523, 2528, 2529, 2530, 2531, 0, 0, 0, 1476, 1476,
	1476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 1125, 0,
	3847, 3848, 3849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3356, 0, 0, 0, 0, 1290, 1755, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 3151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 758, 0,
	0, 0, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 3153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3356, 0, 0, 0, 0, 0, 0, 0, 0, 1438,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3282, 3142, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 1438, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 2744, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 2938, 2938, 0, 1762, 0, 0, 868,
	868, 2744, 3952, 3953, 0, 2909, 2909, 0, 0, 868,
	2744, 3148, 3149, 3150, 0, 0, 0, 0, 3147, 3145,
	3146, 3138, 3139, 3140, 3141, 3143, 3144, 3152, 0, 0,
	1216, 261, 0, 0, 0, 0, 0, 0, 0, 2349,
	0, 2353, 0, 0, 0, 0, 0, 0, 2367, 0,
	0, 0, 0, 0, 0, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	0, 2416, 0, 2418, 2419, 2420, 2421, 0, 0, 0,
	0, 0, 0, 3910, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2445, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 1809, 0, 0, 0,
	2460, 0, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 2490, 2493, 2496, 2499,
	0, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 1476, 3153, 261, 0, 0, 0, 0, 0, 2569,
	0, 2580, 2582, 2587, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4124, 0, 4126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2744,
	2744, 0, 3356, 0, 0, 3356, 0, 0, 0, 0,
	0, 0, 0, 0, 2744, 0, 0, 0, 0, 0,
	0, 3999, 0, 3999, 1476, 0, 0, 0, 0, 0,
	0, 0, 2744, 0, 3298, 0, 1738, 1739, 1476, 1476,
	261, 3282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3282, 0, 261, 3282, 0, 261,
	1769, 0, 4172, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 2744, 0, 2744, 261,
	0, 0, 0, 0, 3148, 3149, 3150, 0, 0, 0,
	0, 3147, 3145, 3146, 3138, 3139, 3140, 3141, 3143, 3144,
	0, 0, 1740, 0, 0, 0, 2744, 0, 0, 0,
	0, 4073, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3999, 4245, 0, 1476, 0, 0, 0, 0, 0,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 1763, 1764, 1765, 1766,
	0, 1741, 0, 0, 0, 0, 1746, 0, 0, 0,
	1787, 0, 1438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 1438, 1760, 0, 0, 0,
	0, 0, 1768, 1770, 0, 1757, 0, 0, 0, 0,
	1438, 0, 2870, 2871, 0, 2873, 0, 0, 0, 0,
	0, 0, 4178, 4179, 0, 0, 0, 0, 1755, 1756,
	0, 0, 1438, 2744, 0, 3298, 0, 0, 4189, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 4209, 0, 4209, 0, 0, 1216, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 758, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 1056, 0, 1276, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3282, 1216, 261, 0, 0, 1216, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4189, 0, 0, 0, 1778, 0, 0,
	1788, 2744, 0, 0, 0, 0, 1768, 1770, 0, 0,
	2996, 0, 1216, 0, 0, 0, 0, 0, 0, 4276,
	0, 0, 0, 1290, 1290, 0, 0, 0, 0, 0,
	0, 1476, 1755, 1756, 0, 0, 0, 0, 1216, 0,
	1290, 0, 0, 3999, 3999, 0, 0, 0, 0, 1438,
	1776, 0, 0, 0, 0, 1767, 0, 0, 1216, 0,
	0, 261, 261, 1216, 0, 1761, 0, 0, 0, 1791,
	1792, 0, 0, 0, 0, 0, 1762, 1216, 0, 0,
	0, 0, 0, 0, 0, 3578, 0, 0, 0, 0,
	0, 1738, 1739, 0, 0, 0, 0, 0, 0, 0,
	1438, 3356, 4341, 0, 0, 0, 0, 0, 4343, 3356,
	4346, 0, 0, 0, 0, 1769, 4189, 0, 0, 0,
	0, 0, 1741, 0, 3047, 3048, 0, 0, 0, 0,
	3054, 1216, 3999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3999, 0, 0, 0, 0, 3068,
	3069, 0, 0, 0, 0, 2460, 0, 1740, 0, 0,
	0, 0, 0, 0, 3076, 261, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	3090, 0, 0, 0, 0, 4073, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 3102, 0, 0,
	0, 3999, 0, 261, 3999, 0, 0, 0, 0, 0,
	1762, 0, 1758, 1754, 3298, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	3534, 0, 0, 0, 0, 1438, 1779, 0, 1438, 0,
	1476, 0, 1476, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 4443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4209, 0, 0, 261, 2587, 2587, 2587, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 1770, 0,
	0, 1880, 1438, 0, 2744, 0, 0, 0, 0, 3193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1438,
	0, 0, 0, 1755, 1756, 261, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	0, 0, 3578, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1476, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1216,
	0, 1216, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 1774, 1769, 0, 0, 1216, 0, 0, 0,
	1741, 1042, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1960, 1042, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4189, 0, 0, 0, 0, 1740, 0, 0, 0, 1438,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 3317, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2744, 0, 0, 0, 0, 0,
	1767, 3999, 0, 3999, 0, 0, 1476, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1216,
	1476, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2938, 0, 0, 0,
	0, 0, 0, 0, 0, 2744, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1778, 0, 0, 1788,
	2938, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 1078, 109, 0, 0, 1769, 0,
	0, 0, 1784, 0, 1785, 1741, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 0, 1758, 1754, 1776,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	1740, 0, 0, 0, 1761, 0, 1216, 1216, 1769, 0,
	1760, 0, 0, 0, 0, 1741, 1216, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 109, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1775, 0, 0, 0, 0, 1757,
	0, 0, 0, 3053, 0, 0, 0, 0, 0, 1438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2367, 0, 1763, 1764, 1765, 1766, 3532, 3533,
	0, 0, 3536, 1438, 1746, 0, 3539, 0, 0, 0,
	1216, 0, 1216, 0, 1216, 3543, 0, 0, 0, 0,
	0, 0, 0, 3046, 3550, 0, 0, 3193, 1767, 1017,
	1216, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	1037, 1216, 3562, 0, 1763, 1764, 1765, 1766, 0, 1762,
	1768, 1770, 0, 1216, 1746, 1216, 1216, 1216, 0, 0,
	0, 0, 3585, 3586, 0, 3587, 3588, 3589, 0, 0,
	0, 0, 0, 0, 0, 1779, 1755, 1756, 0, 0,
	0, 0, 0, 3595, 0, 0, 1199, 3597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 1770, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 3625, 3626,
	0, 0, 0, 1438, 0, 1438, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 3637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3646, 1438, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1960, 1960, 1216,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 3111, 0, 0, 0, 3112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1438,
	0, 0, 0, 0, 0, 0, 0, 3692, 0, 0,
	1205, 0, 0, 1767, 0, 1438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3714, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 256, 670, 0,
	0, 0, 0, 1767, 3740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1438, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	1438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 3842, 0, 0, 0, 0, 0, 0, 0,
	0, 1438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 1438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3888, 3889, 0,
	0, 0, 1056, 3893, 3894, 0, 0, 0, 3897, 3898,
	0, 0, 0, 0, 0, 3902, 1216, 0, 0, 0,
	0, 1438, 0, 0, 0, 0, 3906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 3911, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 703, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 705, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	1774, 1769, 0, 0, 0, 1216, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 726, 0, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 109, 0, 708, 1216, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 1216, 0,
	1216, 0, 0, 1760, 0, 0, 0, 0, 709, 0,
	0, 0, 1757, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 0, 0, 711, 1037, 109, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 735,
	109, 0, 1056, 1056, 0, 0, 0, 0, 1102, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 262, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 722, 262, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	1784, 0, 1785, 4140, 4141, 4142, 0, 1056, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2367, 1776, 0, 4151,
	4152, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 713, 1761, 0, 0, 0, 0, 4160, 4163, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 0, 714, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 734,
	0, 4210, 1262, 0, 1262, 1262, 715, 0, 0, 4216,
	730, 731, 728, 0, 0, 0, 0, 0, 723, 0,
	4223, 716, 0, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 1767, 0, 0, 1455,
	0, 0, 717, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 1216, 1216,
	0, 0, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 1216, 1900, 736, 1903, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 1578, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 1216, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 704, 0, 4351,
	0, 0, 4354, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 1216, 0, 0, 0, 2456,
	1960, 0, 0, 2457, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 1042, 1042, 0, 0, 0, 707, 0,
	0, 0, 0, 4402, 814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 1216, 0, 0, 0,
	726, 0, 0, 0, 816, 0, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	708, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 2367, 0, 0,
	0, 0, 0, 709, 0, 0, 4163, 0, 0, 818,
	0, 835, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 1216, 0, 1216, 0, 710, 0, 1216, 711, 0,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 0,
	0, 820, 0, 0, 735, 1216, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 725, 821,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1216,
	1216, 0, 0, 4519, 4519, 4519, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 722, 822, 0,
	0, 823, 0, 0, 0, 4540, 0, 0, 0, 0,
	0, 0, 846, 0, 0, 0, 1037, 735, 1037, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 1216, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 1927, 0, 1455, 0, 0, 0, 0, 0,
	262, 0, 262, 262, 0, 0, 262, 0, 1299, 4519,
	0, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	845, 1455, 1960, 0, 0, 733, 0, 714, 0, 0,
	840, 262, 1299, 262, 262, 0, 1299, 262, 262, 1216,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 1960, 1960, 0, 0,
	0, 715, 1299, 0, 0, 730, 731, 728, 0, 0,
	0, 0, 0, 723, 0, 0, 716, 0, 824, 0,
	0, 0, 0, 0, 0, 1960, 1960, 0, 1299, 826,
	262, 262, 0, 0, 0, 1017, 0, 0, 1017, 1017,
	4519, 4665, 0, 0, 0, 0, 0, 0, 1299, 4669,
	0, 0, 0, 1299, 262, 262, 1960, 717, 0, 724,
	827, 0, 0, 0, 0, 0, 0, 1299, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 1216, 1216, 0, 836, 727, 0, 0,
	0, 0, 0, 2434, 0, 0, 0, 734, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 813, 1037,
	837, 0, 721, 0, 0, 0, 1216, 0, 1808, 828,
	0, 1299, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 834, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 0, 0, 830, 849, 0, 848, 0, 0,
	262, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 832, 0, 0, 0, 0,
	841, 0, 0, 0, 1199, 0, 850, 0, 847, 0,
	0, 0, 0, 2186, 736, 0, 0, 2193, 0, 0,
	1903, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2218, 0, 2218, 0, 0,
	0, 0, 0, 2225, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 2193, 1216, 0, 2250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 2270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2283, 0, 2285, 0, 2287, 0, 2289, 0, 2290,
	0, 0, 0, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 1216,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 2312,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 109, 0, 262, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	262, 262, 262, 0, 0, 0, 0, 0, 262, 0,
	1216, 0, 0, 0, 0, 262, 0, 0, 1299, 0,
	0, 1960, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 109, 0, 0, 1216, 1299,
	0, 109, 0, 0, 0, 0, 1216, 0, 0, 0,
	1216, 0, 1216, 0, 0, 0, 0, 0, 0, 1216,
	260, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	1216, 1216, 0, 0, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2644, 109, 0, 0, 1216, 796, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 1216, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 262, 1299, 1299, 262, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 1216, 2689, 0, 0, 1262, 0, 0,
	0, 1262, 0, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	2206, 262, 0, 0, 1216, 262, 0, 0, 0, 1216,
	2434, 262, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 1212, 0, 0, 0,
	0, 1808, 0, 262, 1216, 262, 0, 0, 0, 0,
	0, 262, 0, 0, 1216, 1216, 1216, 0, 0, 0,
	1299, 0, 1299, 0, 1299, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 262, 0, 0, 262, 0, 1216, 0, 0,
	0, 0, 0, 1299, 0, 1299, 1299, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 1960, 1455,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 262,
	0, 262, 0, 262, 0, 262, 0, 262, 1216, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 2193, 0, 0, 0, 262, 0, 0,
	0, 0, 2206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 1216, 1299,
	0, 0, 0, 2969, 0, 1216, 0, 0, 0, 0,
	1216, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2980, 0, 2983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3008, 1455, 3010, 1455, 0, 0, 1216, 1216, 0, 3016,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 1960, 0, 0, 0, 0, 0,
	3044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 109,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 262, 0,
	0, 1299, 0, 0, 0, 0, 109, 109, 0, 0,
	109, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 1216, 0, 0,
	0, 1216, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 262, 0, 0, 1216, 262,
	0, 262, 0, 0, 0, 0, 0, 0, 262, 262,
	0, 0, 0, 0, 1299, 1299, 0, 0, 262, 0,
	1199, 0, 0, 1037, 0, 0, 260, 0, 260, 260,
	0, 0, 260, 0, 0, 0, 0, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 260, 0, 260,
	260, 0, 0, 260, 260, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 796, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 260, 260, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 0, 1262, 0, 0, 0, 1455, 1455, 0,
	0, 262, 0, 262, 0, 1299, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3280, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 0,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 3334, 3336, 0, 1216, 2206, 1216, 0, 0, 0,
	262, 0, 262, 0, 0, 0, 0, 260, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	1199, 0, 0, 0, 0, 0, 266, 0, 262, 262,
	262, 262, 0, 0, 0, 0, 0, 262, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 3420, 0, 0, 0, 3424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3477,
	0, 0, 1774, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 3517, 0, 1455, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1902, 0, 1212, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3530, 0, 260, 1902, 260, 0,
	0, 0, 0, 0, 796, 0, 0, 109, 0, 0,
	0, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 260, 1763,
	1764, 1765, 1766, 0, 0, 260, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 1788,
	0, 0, 1299, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 1299, 1299, 0, 0, 0, 0,
	0, 262, 0, 0, 1761, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 262,
	262, 0, 1299, 262, 0, 0, 0, 0, 0, 0,
	262, 260, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 262, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 1299, 0, 0, 0, 0, 0, 260, 0, 1762,
	0, 260, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 260, 1299, 0, 0, 0, 0, 0,
	262, 1299, 0, 1299, 0, 1779, 0, 1299, 0, 260,
	0, 260, 0, 0, 262, 0, 0, 260, 0, 0,
	0, 0, 262, 0, 0, 1299, 262, 0, 2206, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 2206,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 3806,
	0, 0, 0, 0, 0, 0, 0, 109, 260, 0,
	0, 260, 0, 0, 2206, 0, 0, 0, 0, 3824,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	1299, 0, 260, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 109, 796, 260, 0, 260, 0, 260,
	0, 260, 1299, 260, 0, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3873, 0, 0, 0,
	0, 0, 1299, 260, 262, 1299, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 1297, 0, 0, 0,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 1299,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	1355, 1787, 0, 0, 1355, 0, 1299, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	1297, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773, 1781,
	1782, 1783, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1769, 0, 0,
	0, 0, 0, 0, 1741, 0, 1297, 0, 0, 0,
	0, 1297, 0, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 1740,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 1760,
	1212, 1746, 0, 0, 2434, 4014, 1299, 0, 1757, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 2206, 0, 0, 0, 0, 0, 0, 0, 1297,
	260, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 1788, 0, 0, 0, 0, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 1785, 0, 0, 0,
	0, 0, 0, 1755, 1756, 1298, 0, 0, 260, 0,
	0, 0, 0, 1763, 1764, 1765, 1766, 2206, 0, 0,
	0, 1776, 0, 1746, 0, 0, 0, 4095, 260, 0,
	0, 260, 0, 0, 0, 260, 1761, 260, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 1356,
	0, 0, 0, 1356, 260, 0, 0, 0, 1298, 0,
	1778, 0, 0, 1788, 0, 0, 0, 0, 0, 1768,
	1770, 0, 0, 109, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 262, 0, 1784, 0, 1785, 1298,
	0, 0, 0, 0, 0, 1755, 1756, 109, 0, 0,
	0, 0, 1299, 0, 0, 1299, 262, 0, 0, 0,
	260, 0, 0, 1776, 0, 1298, 0, 262, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 262, 1761, 0,
	0, 0, 0, 0, 0, 1298, 260, 262, 0, 0,
	1298, 0, 262, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 1299, 1298, 0, 0, 0, 0, 0,
	1767, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 1299, 1299,
	1299, 1762, 0, 0, 0, 0, 0, 0, 1775, 796,
	0, 4198, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 1298, 0,
	1299, 0, 0, 0, 262, 0, 1299, 260, 0, 796,
	0, 0, 109, 0, 0, 0, 260, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 0, 1355, 0, 0, 0, 2206, 0,
	0, 0, 1767, 0, 0, 0, 788, 0, 0, 0,
	0, 0, 0, 788, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 260, 1779,
	0, 0, 0, 0, 0, 0, 260, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 1297, 0, 0, 0, 4317, 1455, 0, 0,
	0, 0, 0, 1297, 260, 260, 260, 260, 0, 0,
	0, 0, 0, 260, 0, 260, 0, 0, 0, 0,
	1299, 0, 1299, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 1299, 0, 0, 0, 0, 260, 0, 0, 1299,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 3916,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 1299, 262,
	0, 1299, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 4407, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 1297, 1297, 0, 0, 0, 0,
	0, 0, 1299, 1299, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 262, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4460, 0, 0, 0, 1299, 1299, 1299, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 1297, 0,
	1297, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	4496, 0, 0, 0, 0, 0, 1356, 1299, 1297, 1297,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 1297, 0, 1297, 1297, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 0,
	1299, 0, 0, 0, 0, 0, 788, 0, 0, 0,
	1902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4556, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 1298, 0, 0, 0, 1299, 0,
	0, 0, 260, 1356, 0, 1299, 262, 0, 0, 0,
	1299, 1299, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 260, 0, 0, 260,
	0, 0, 0, 0, 0, 1299, 1902, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 262, 0, 1298, 0, 1298,
	0, 1298, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	1298, 0, 1298, 1298, 1298, 0, 0, 0, 0, 0,
	796, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 260, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 1355, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	1212, 0, 0, 0, 0, 1741, 0, 0, 262, 1355,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	1760, 1299, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 1299, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 262, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 1778, 0, 0, 1788, 0, 0, 0, 0, 0,
	1768, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	0, 0, 0, 0, 156, 0, 1355, 0, 0, 0,
	0, 0, 1356, 73, 1776, 46, 45, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	74, 262, 0, 151, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 1212,
	1212, 788, 0, 1297, 48, 0, 153, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 0, 87, 0, 0, 1775,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 1297, 0,
	0, 0, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 1297, 0, 0, 57, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	107, 1298, 1298, 0, 0, 93, 104, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	260, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1356, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 260, 0, 0, 0, 0, 260, 1757,
	0, 1777, 0, 260, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 1298, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 1212, 0, 0, 0, 0, 0, 0,
	3548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 1298, 0, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	260, 0, 1298, 0, 1763, 1764, 1765, 1766, 56, 0,
	0, 0, 0, 59, 1746, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 58, 182,
	100, 0, 103, 0, 0, 0, 54, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	0, 1778, 0, 0, 1788, 0, 229, 0, 0, 0,
	1768, 1770, 0, 0, 62, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1785,
	0, 0, 0, 152, 0, 0, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 231, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	1355, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	0, 0, 1212, 0, 186, 1355, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 1902, 0, 0, 0, 0,
	0, 1786, 0, 0, 223, 0, 0, 1355, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 1775,
	0, 0, 1297, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 3, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1902, 0, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 260, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 260, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 1297, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 1297, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	1902, 0, 1297, 0, 0, 0, 0, 0, 0, 1297,
	0, 1297, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 788, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 1356, 1297, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 1356, 0, 0, 0,
	3114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 1298, 0, 926, 0, 972, 1297, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 932,
	931, 0, 1298, 0, 0, 260, 0, 0, 0, 0,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	1355, 0, 0, 1355, 0, 0, 0, 933, 0, 0,
	0, 0, 936, 1774, 1769, 0, 0, 980, 0, 1298,
	0, 1741, 0, 0, 0, 0, 945, 946, 0, 0,
	1787, 0, 0, 0, 0, 962, 0, 0, 0, 0,
	0, 1298, 260, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 973, 938, 0, 1740, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 1298, 1757, 0, 1355, 1298, 0,
	0, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 1298, 0,
	1298, 0, 1902, 1902, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 1298, 0, 0, 941, 0, 0, 0, 0,
	0, 0, 0, 930, 1298, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 942, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	950, 949, 0, 0, 0, 0, 1298, 1298, 944, 0,
	0, 0, 959, 0, 0, 0, 0, 1778, 0, 0,
	1788, 1902, 0, 0, 0, 0, 1768, 1770, 0, 1298,
	977, 970, 0, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1355, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 260, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 1356,
	1776, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	1902, 0, 260, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 935,
	0, 0, 0, 966, 967, 1775, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 260, 978, 960, 0, 953, 951,
	0, 956, 0, 0, 0, 0, 0, 957, 0, 0,
	928, 0, 975, 0, 0, 0, 0, 0, 0, 1767,
	1297, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 929, 260, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 968, 0, 958, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 976, 0, 1779, 0, 0, 0,
	0, 1297, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 1297, 1297, 1297, 0,
	0, 0, 0, 1356, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	1902, 0, 1902, 0, 0, 0, 3113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 1298, 0, 0, 0, 0, 0, 1355, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 1297,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 1298, 1298, 1298, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 1740, 1297, 1298, 0, 1297,
	0, 0, 0, 1356, 0, 1760, 0, 0, 0, 0,
	1355, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 1297, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 1356, 0, 1356,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 1298, 1298, 0,
	0, 1755, 1756, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 1355, 0, 1297, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 1298, 1786, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 1298,
	1298, 0, 0, 1297, 0, 0, 0, 0, 1297, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 1298, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 0, 1297, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 1298, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1356, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 3110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 1297,
	1297, 0, 1298, 0, 0, 0, 0, 1298, 1298, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 1298,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 1358,
	278, 279, 1359, 1360, 1361, 1298, 1362, 616, 1363, 1364,
	1365, 1366, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 1367, 621,
	290, 291, 292, 293, 294, 295, 1368, 1369, 0, 296,
	622, 623, 624, 1370, 297, 298, 625, 1371, 1300, 1372,
	299, 300, 301, 302, 303, 304, 305, 0, 1373, 307,
	308, 309, 306, 310, 1374, 311, 0, 312, 313, 314,
	315, 316, 317, 1375, 318, 319, 320, 1157, 321, 322,
	323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 1383, 333, 330,
	331, 1384, 334, 332, 335, 1385, 336, 337, 338, 1386,
	1387, 339, 340, 341, 1388, 342, 343, 1389, 344, 345,
	346, 1390, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 1391, 267,
	1392, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 1393, 365, 366, 1394, 1395, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1396, 378, 634, 1397, 635, 379, 1398, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 1399, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1400, 1159, 394, 639, 640, 1401,
	641, 1402, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1403, 408, 410, 409, 1404, 411, 643, 1164, 412,
	413, 1165, 1405, 414, 0, 0, 0, 415, 416, 419,
	1406, 1407, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1408, 269, 1168, 458,
	459, 1409, 644, 460, 645, 462, 463, 1410, 0, 464,
	0, 1411, 1412, 466, 467, 468, 1413, 1414, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 1415, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 1416, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 1417,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1418, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1419, 544, 545, 543, 546, 547, 548,
	1420, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 1421, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 1422, 575, 576, 0, 572, 563,
	1423, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	1424, 585, 657, 658, 659, 660, 1425, 594, 1426, 586,
	587, 588, 661, 589, 662, 1427, 590, 591, 592, 593,
	0, 595, 596, 1428, 1429, 597, 598, 599, 601, 602,
	600, 603, 1430, 604, 1431, 0, 605, 606, 607, 663,
	664, 665, 1432, 609, 608, 610, 666, 1433, 1434, 1435,
	1436, 1437, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	2622, 0, 0, 0, 0, 0, 0, 0, 2623, 270,
	272, 271, 273, 274, 275, 276, 277, 1358, 278, 279,
	1359, 1360, 1361, 0, 1362, 616, 1363, 1364, 1365, 1366,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 1367, 621, 290, 291,
	292, 293, 294, 295, 1368, 1369, 0, 296, 622, 623,
	624, 1370, 297, 298, 625, 1371, 1300, 1372, 299, 300,
	301, 302, 303, 304, 305, 0, 1373, 307, 308, 309,
	306, 310, 1374, 311, 0, 312, 313, 314, 315, 316,
	317, 1375, 318, 319, 320, 1157, 321, 322, 323, 1376,
	1377, 1379, 1378, 1380, 1381, 1382, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 1383, 333, 330, 331, 1384,
	334, 332, 335, 1385, 336, 337, 338, 1386, 1387, 339,
	340, 341, 1388, 342, 343, 1389, 344, 345, 346, 1390,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 1391, 267, 1392, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 1393, 365, 366, 1394, 1395, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1396, 378, 634, 1397, 635, 379, 1398, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 1160, 385, 386, 1399,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 1400, 1159, 394, 639, 640, 1401, 641, 1402,
	396, 397, 1161, 642, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1403,
	408, 410, 409, 1404, 411, 643, 1164, 412, 413, 1165,
	1405, 414, 0, 0, 0, 415, 416, 419, 1406, 1407,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1408, 269, 1168, 458, 459, 1409,
	644, 460, 645, 462, 463, 1410, 0, 464, 0, 1411,
	1412, 466, 467, 468, 1413, 1414, 469, 470, 646, 1169,
	471, 1170, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 1415, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 1416, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 1417, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 1418, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 1419, 544, 545, 543, 546, 547, 548, 1420, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 1421, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 1422, 575, 576, 0, 572, 563, 1423, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 1424, 585,
	657, 658, 659, 660, 1425, 594, 1426, 586, 587, 588,
	661, 589, 662, 1427, 590, 591, 592, 593, 0, 595,
	596, 1428, 1429, 597, 598, 599, 601, 602, 600, 603,
	1430, 604, 1431, 0, 605, 606, 607, 663, 664, 665,
	1432, 609, 608, 610, 666, 1433, 1434, 1435, 1436, 1437,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 3556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3558, 270, 272, 271, 273, 274,
	275, 276, 277, 1358, 278, 279, 1359, 1360, 1361, 0,
	1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 1367, 621, 290, 291, 292, 293, 294, 295,
	1368, 1369, 0, 296, 622, 623, 624, 1370, 297, 298,
	625, 1371, 1300, 1372, 299, 300, 301, 302, 303, 304,
	305, 0, 1373, 307, 308, 309, 306, 310, 1374, 311,
	0, 312, 313, 314, 315, 316, 317, 1375, 318, 319,
	320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378, 1380,
	1381, 1382, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 1383, 333, 330, 331, 1384, 334, 332, 335, 1385,
	336, 337, 338, 1386, 1387, 339, 340, 341, 1388, 342,
	343, 1389, 344, 345, 346, 1390, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 1391, 267, 1392, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 1393, 365, 366,
	1394, 1395, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1396, 378, 634, 1397,
	635, 379, 1398, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 1399, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1400, 1159,
	394, 639, 640, 1401, 641, 1402, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1403, 408, 410, 409, 1404,
	411, 643, 1164, 412, 413, 1165, 1405, 414, 0, 0,
	0, 415, 416, 419, 1406, 1407, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1408, 269, 1168, 458, 459, 1409, 644, 460, 645, 462,
	463, 1410, 0, 464, 0, 1411, 1412, 466, 467, 468,
	1413, 1414, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 1415, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 1416, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 1417, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1418, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1419, 544, 545,
	543, 546, 547, 548, 1420, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 1421, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 1422, 575,
	576, 0, 572, 563, 1423, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 1424, 585, 657, 658, 659, 660,
	1425, 594, 1426, 586, 587, 588, 661, 589, 662, 1427,
	590, 591, 592, 593, 0, 595, 596, 1428, 1429, 597,
	598, 599, 601, 602, 600, 603, 1430, 604, 1431, 0,
	605, 606, 607, 663, 664, 665, 1432, 609, 608, 610,
	666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3944, 270, 272, 271, 273, 274,
	275, 276, 277, 1358, 278, 279, 1359, 1360, 1361, 0,
	1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 1367, 621, 290, 291, 292, 293, 294, 295,
	1368, 1369, 0, 296, 622, 623, 624, 1370, 297, 298,
	625, 1371, 1300, 1372, 299, 300, 301, 302, 303, 304,
	305, 0, 1373, 307, 308, 309, 306, 310, 1374, 311,
	0, 312, 313, 314, 315, 316, 317, 1375, 318, 319,
	320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378, 1380,
	1381, 1382, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 1383, 333, 330, 331, 1384, 334, 332, 335, 1385,
	336, 337, 338, 1386, 1387, 339, 340, 341, 1388, 342,
	343, 1389, 344, 345, 346, 1390, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 1391, 267, 1392, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 1393, 365, 366,
	1394, 1395, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1396, 378, 634, 1397,
	635, 379, 1398, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 1399, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1400, 1159,
	394, 639, 640, 1401, 641, 1402, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1403, 408, 410, 409, 1404,
	411, 643, 1164, 412, 413, 1165, 1405, 414, 0, 0,
	0, 415, 416, 419, 1406, 1407, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1408, 269, 1168, 458, 459, 1409, 644, 460, 645, 462,
	463, 1410, 0, 464, 0, 1411, 1412, 466, 467, 468,
	1413, 1414, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 1415, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 1416, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 1417, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1418, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1419, 544, 545,
	543, 546, 547, 548, 1420, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 1421, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 1422, 575,
	576, 0, 572, 563, 1423, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 1424, 585, 657, 658, 659, 660,
	1425, 594, 1426, 586, 587, 588, 661, 589, 662, 1427,
	590, 591, 592, 593, 0, 595, 596, 1428, 1429, 597,
	598, 599, 601, 602, 600, 603, 1430, 604, 1431, 0,
	605, 606, 607, 663, 664, 665, 1432, 609, 608, 610,
	666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667, 613,
	614, 615, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4146,
	270, 272, 271, 273, 274, 275, 276, 277, 1358, 278,
	279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364, 1365,
	1366, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 1367, 621, 290,
	291, 292, 293, 294, 295, 1368, 1369, 0, 296, 622,
	623, 624, 1370, 297, 298, 625, 1371, 1300, 1372, 299,
	300, 301, 302, 303, 304, 305, 0, 1373, 307, 308,
	309, 306, 310, 1374, 311, 0, 312, 313, 314, 315,
	316, 317, 1375, 318, 319, 320, 1157, 321, 322, 323,
	1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 1383, 333, 330, 331,
	1384, 334, 332, 335, 1385, 336, 337, 338, 1386, 1387,
	339, 340, 341, 1388, 342, 343, 1389, 344, 345, 346,
	1390, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 1391, 267, 1392,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 1393, 365, 366, 1394, 1395, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1396, 378, 634, 1397, 635, 379, 1398, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	1399, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 1400, 1159, 394, 639, 640, 1401, 641,
	1402, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1403, 408, 410, 409, 1404, 411, 643, 1164, 412, 413,
	1165, 1405, 414, 0, 0, 0, 415, 416, 419, 1406,
	1407, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1408, 269, 1168, 458, 459,
	1409, 644, 460, 645, 462, 463, 1410, 0, 464, 0,
	1411, 1412, 466, 467, 468, 1413, 1414, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 1415, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 1416, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 1417, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1418,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 1419, 544, 545, 543, 546, 547, 548, 1420,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 1421, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 1422, 575, 576, 0, 572, 563, 1423,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 1424,
	585, 657, 658, 659, 660, 1425, 594, 1426, 586, 587,
	588, 661, 589, 662, 1427, 590, 591, 592, 593, 0,
	595, 596, 1428, 1429, 597, 598, 599, 601, 602, 600,
	603, 1430, 604, 1431, 0, 605, 606, 607, 663, 664,
	665, 1432, 609, 608, 610, 666, 1433, 1434, 1435, 1436,
	1437, 611, 612, 667, 613, 614, 615, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4023, 270, 272, 271, 273, 274,
	275, 276, 277, 1358, 278, 279, 1359, 1360, 1361, 0,
	1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 1367, 621, 290, 291, 292, 293, 294, 295,
	1368, 1369, 0, 296, 622, 623, 624, 1370, 297, 298,
	625, 1371, 1300, 1372, 299, 300, 301, 302, 303, 304,
	305, 0, 1373, 307, 308, 309, 306, 310, 1374, 311,
	0, 312, 313, 314, 315, 316, 317, 1375, 318, 319,
	320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378, 1380,
	1381, 1382, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 1383, 333, 330, 331, 1384, 334, 332, 335, 1385,
	336, 337, 338, 1386, 1387, 339, 340, 341, 1388, 342,
	343, 1389, 344, 345, 346, 1390, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 1391, 267, 1392, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 1393, 365, 366,
	1394, 1395, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1396, 378, 634, 1397,
	635, 379, 1398, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 1399, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1400, 1159,
	394, 639, 640, 1401, 641, 1402, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1403, 408, 410, 409, 1404,
	411, 643, 1164, 412, 413, 1165, 1405, 414, 0, 0,
	0, 415, 416, 419, 1406, 1407, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1408, 269, 1168, 458, 459, 1409, 644, 460, 645, 462,
	463, 1410, 0, 464, 0, 1411, 1412, 466, 467, 468,
	1413, 1414, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 1415, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 1416, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 1417, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1418, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1419, 544, 545,
	543, 546, 547, 548, 1420, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 1421, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 1422, 575,
	576, 0, 572, 563, 1423, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 1424, 585, 657, 658, 659, 660,
	1425, 594, 1426, 586, 587, 588, 661, 589, 662, 1427,
	590, 591, 592, 593, 0, 595, 596, 1428, 1429, 597,
	598, 599, 601, 602, 600, 603, 1430, 604, 1431, 0,
	605, 606, 607, 663, 664, 665, 1432, 609, 608, 610,
	666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667, 613,
	614, 615, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3874,
	270, 272, 271, 273, 274, 275, 276, 277, 1358, 278,
	279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364, 1365,
	1366, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 1367, 621, 290,
	291, 292, 293, 294, 295, 1368, 1369, 0, 296, 622,
	623, 624, 1370, 297, 298, 625, 1371, 1300, 1372, 299,
	300, 301, 302, 303, 304, 305, 0, 1373, 307, 308,
	309, 306, 310, 1374, 311, 0, 312, 313, 314, 315,
	316, 317, 1375, 318, 319, 320, 1157, 321, 322, 323,
	1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 1383, 333, 330, 331,
	1384, 334, 332, 335, 1385, 336, 337, 338, 1386, 1387,
	339, 340, 341, 1388, 342, 343, 1389, 344, 345, 346,
	1390, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 1391, 267, 1392,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 1393, 365, 366, 1394, 1395, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1396, 378, 634, 1397, 635, 379, 1398, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	1399, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 1400, 1159, 394, 639, 640, 1401, 641,
	1402, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1403, 408, 410, 409, 1404, 411, 643, 1164, 412, 413,
	1165, 1405, 414, 0, 0, 0, 415, 416, 419, 1406,
	1407, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1408, 269, 1168, 458, 459,
	1409, 644, 460, 645, 462, 463, 1410, 0, 464, 0,
	1411, 1412, 466, 467, 468, 1413, 1414, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 1415, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 1416, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 1417, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1418,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 1419, 544, 545, 543, 546, 547, 548, 1420,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 1421, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 1422, 575, 576, 0, 572, 563, 1423,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 1424,
	585, 657, 658, 659, 660, 1425, 594, 1426, 586, 587,
	588, 661, 589, 662, 1427, 590, 591, 592, 593, 0,
	595, 596, 1428, 1429, 597, 598, 599, 601, 602, 600,
	603, 1430, 604, 1431, 0, 605, 606, 607, 663, 664,
	665, 1432, 609, 608, 610, 666, 1433, 1434, 1435, 1436,
	1437, 611, 612, 667, 613, 614, 615, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3574, 270, 272, 271, 273, 274,
	275, 276, 277, 1358, 278, 279, 1359, 1360, 1361, 0,
	1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 1367, 621, 290, 291, 292, 293, 294, 295,
	1368, 1369, 0, 296, 622, 623, 624, 1370, 297, 298,
	625, 1371, 1300, 1372, 299, 300, 301, 302, 303, 304,
	305, 0, 1373, 307, 308, 309, 306, 310, 1374, 311,
	0, 312, 313, 314, 315, 316, 317, 1375, 318, 319,
	320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378, 1380,
	1381, 1382, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 1383, 333, 330, 331, 1384, 334, 332, 335, 1385,
	336, 337, 338, 1386, 1387, 339, 340, 341, 1388, 342,
	343, 1389, 344, 345, 346, 1390, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 1391, 267, 1392, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 1393, 365, 366,
	1394, 1395, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1396, 378, 634, 1397,
	635, 379, 1398, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 1399, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1400, 1159,
	394, 639, 640, 1401, 641, 1402, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1403, 408, 410, 409, 1404,
	411, 643, 1164, 412, 413, 1165, 1405, 414, 0, 0,
	0, 415, 416, 419, 1406, 1407, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1408, 269, 1168, 458, 459, 1409, 644, 460, 645, 462,
	463, 1410, 0, 464, 0, 1411, 1412, 466, 467, 468,
	1413, 1414, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 1415, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 1416, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 1417, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1418, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1419, 544, 545,
	543, 546, 547, 548, 1420, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 1421, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 1422, 575,
	576, 0, 572, 563, 1423, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 1424, 585, 657, 658, 659, 660,
	1425, 594, 1426, 586, 587, 588, 661, 589, 662, 1427,
	590, 591, 592, 593, 0, 595, 596, 1428, 1429, 597,
	598, 599, 601, 602, 600, 603, 1430, 604, 1431, 0,
	605, 606, 607, 663, 664, 665, 1432, 609, 608, 610,
	666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667, 613,
	614, 615, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3405,
	270, 272, 271, 273, 274, 275, 276, 277, 1358, 278,
	279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364, 1365,
	1366, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 1367, 621, 290,
	291, 292, 293, 294, 295, 1368, 1369, 0, 296, 622,
	623, 624, 1370, 297, 298, 625, 1371, 1300, 1372, 299,
	300, 301, 302, 303, 304, 305, 0, 1373, 307, 308,
	309, 306, 310, 1374, 311, 0, 312, 313, 314, 315,
	316, 317, 1375, 318, 319, 320, 1157, 321, 322, 323,
	1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 1383, 333, 330, 331,
	1384, 334, 332, 335, 1385, 336, 337, 338, 1386, 1387,
	339, 340, 341, 1388, 342, 343, 1389, 344, 345, 346,
	1390, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 1391, 267, 1392,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 1393, 365, 366, 1394, 1395, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1396, 378, 634, 1397, 635, 379, 1398, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	1399, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 1400, 1159, 394, 639, 640, 1401, 641,
	1402, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1403, 408, 410, 409, 1404, 411, 643, 1164, 412, 413,
	1165, 1405, 414, 0, 0, 0, 415, 416, 419, 1406,
	1407, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1408, 269, 1168, 458, 459,
	1409, 644, 460, 645, 462, 463, 1410, 0, 464, 0,
	1411, 1412, 466, 467, 468, 1413, 1414, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 1415, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 1416, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 1417, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 1418,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 1419, 544, 545, 543, 546, 547, 548, 1420,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 1421, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 1422, 575, 576, 0, 572, 563, 1423,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 1424,
	585, 657, 658, 659, 660, 1425, 594, 1426, 586, 587,
	588, 661, 589, 662, 1427, 590, 591, 592, 593, 0,
	595, 596, 1428, 1429, 597, 598, 599, 601, 602, 600,
	603, 1430, 604, 1431, 0, 605, 606, 607, 663, 664,
	665, 1432, 609, 608, 610, 666, 1433, 1434, 1435, 1436,
	1437, 611, 612, 667, 613, 614, 615, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2480, 270, 272, 271, 273, 274,
	275, 276, 277, 1358, 278, 279, 1359, 1360, 1361, 0,
	1362, 616, 1363, 1364, 1365, 1366, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 1367, 621, 290, 291, 292, 293, 294, 295,
	1368, 1369, 0, 296, 622, 623, 624, 1370, 297, 298,
	625, 1371, 1300, 1372, 299, 300, 301, 302, 303, 304,
	305, 0, 1373, 307, 308, 309, 306, 310, 1374, 311,
	0, 312, 313, 314, 315, 316, 317, 1375, 318, 319,
	320, 1157, 321, 322, 323, 1376, 1377, 1379, 1378, 1380,
	1381, 1382, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 1383, 333, 330, 331, 1384, 334, 332, 335, 1385,
	336, 337, 338, 1386, 1387, 339, 340, 341, 1388, 342,
	343, 1389, 344, 345, 346, 1390, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 1391, 267, 1392, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 1393, 365, 366,
	1394, 1395, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1396, 378, 634, 1397,
	635, 379, 1398, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 1399, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1400, 1159,
	394, 639, 640, 1401, 641, 1402, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1403, 408, 410, 409, 1404,
	411, 643, 1164, 412, 413, 1165, 1405, 414, 0, 0,
	0, 415, 416, 419, 1406, 1407, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1408, 269, 1168, 458, 459, 1409, 644, 460, 645, 462,
	463, 1410, 0, 464, 0, 1411, 1412, 466, 467, 468,
	1413, 1414, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 1415, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 1416, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 1417, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1418, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1419, 544, 545,
	543, 546, 547, 548, 1420, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 1421, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 1422, 575,
	576, 0, 572, 563, 1423, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 1424, 585, 657, 658, 659, 660,
	1425, 594, 1426, 586, 587, 588, 661, 589, 662, 1427,
	590, 591, 592, 593, 0, 595, 596, 1428, 1429, 597,
	598, 599, 601, 602, 600, 603, 1430, 604, 1431, 0,
	605, 606, 607, 663, 664, 665, 1432, 609, 608, 610,
	666, 1433, 1434, 1435, 1436, 1437, 611, 612, 667, 613,
	614, 615, 1449, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2167,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 1358,
	278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364,
	1365, 1366, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 1367, 621,
	290, 291, 292, 293, 294, 295, 1368, 1369, 0, 296,
	622, 623, 624, 1370, 297, 298, 625, 1371, 1300, 1372,
	299, 300, 301, 302, 303, 304, 305, 0, 1373, 307,
	308, 309, 306, 310, 1374, 311, 0, 312, 313, 314,
	315, 316, 317, 1375, 318, 319, 320, 1157, 321, 322,
	323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 1383, 333, 330,
	331, 1384, 334, 332, 335, 1385, 336, 337, 338, 1386,
	1387, 339, 340, 341, 1388, 342, 343, 1389, 344, 345,
	346, 1390, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 1391, 267,
	1392, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 1393, 365, 366, 1394, 1395, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1396, 378, 634, 1397, 635, 379, 1398, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 1399, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1400, 1159, 394, 639, 640, 1401,
	641, 1402, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1403, 408, 410, 409, 1404, 411, 643, 1164, 412,
	413, 1165, 1405, 414, 0, 0, 0, 415, 416, 419,
	1406, 1407, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1408, 269, 1168, 458,
	459, 1409, 644, 460, 645, 462, 463, 1410, 0, 464,
	0, 1411, 1412, 466, 467, 468, 1413, 1414, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 1415, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 1416, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 1417,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1418, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1419, 544, 545, 543, 546, 547, 548,
	1420, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 1421, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 1422, 575, 576, 0, 572, 563,
	1423, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	1424, 585, 657, 658, 659, 660, 1425, 594, 1426, 586,
	587, 588, 661, 589, 662, 1427, 590, 591, 592, 593,
	0, 595, 596, 1428, 1429, 597, 598, 599, 601, 602,
	600, 603, 1430, 604, 1431, 0, 605, 606, 607, 663,
	664, 665, 1432, 609, 608, 610, 666, 1433, 1434, 1435,
	1436, 1437, 611, 612, 667, 613, 614, 615, 1350, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 1358, 278, 279, 1359, 1360,
	1361, 0, 1362, 616, 1363, 1364, 1365, 1366, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 1367, 621, 290, 291, 292, 293,
	294, 295, 1368, 1369, 0, 296, 622, 623, 624, 1370,
	297, 298, 625, 1371, 1300, 1372, 299, 300, 301, 302,
	303, 304, 305, 0, 1373, 307, 308, 309, 306, 310,
	1374, 311, 0, 312, 313, 314, 315, 316, 317, 1375,
	318, 319, 320, 1157, 321, 322, 323, 1376, 1377, 1379,
	1378, 1380, 1381, 1382, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 1383, 333, 330, 331, 1384, 334, 332,
	335, 1385, 336, 337, 338, 1386, 1387, 339, 340, 341,
	1388, 342, 343, 1389, 344, 345, 346, 1390, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 1391, 267, 1392, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 1393,
	365, 366, 1394, 1395, 1158, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1396, 378,
	634, 1397, 635, 379, 1398, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 1160, 385, 386, 1399, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	1400, 1159, 394, 639, 640, 1401, 641, 1402, 396, 397,
	1161, 642, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1403, 408, 410,
	409, 1404, 411, 643, 1164, 412, 413, 1165, 1405, 414,
	0, 0, 0, 415, 416, 419, 1406, 1407, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1408, 269, 1168, 458, 459, 1409, 644, 460,
	645, 462, 463, 1410, 0, 464, 0, 1411, 1412, 466,
	467, 468, 1413, 1414, 469, 470, 646, 1169, 471, 1170,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 1415, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 1416,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 1417, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 1418, 521, 522, 523,
	1171, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 1419,
	544, 545, 543, 546, 547, 548, 1420, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 1421, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	1422, 575, 576, 0, 572, 563, 1423, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 1424, 585, 657, 658,
	659, 660, 1425, 594, 1426, 586, 587, 588, 661, 589,
	662, 1427, 590, 591, 592, 593, 0, 595, 596, 1428,
	1429, 597, 598, 599, 601, 602, 600, 603, 1430, 604,
	1431, 0, 605, 606, 607, 663, 664, 665, 1432, 609,
	608, 610, 666, 1433, 1434, 1435, 1436, 1437, 611, 612,
	667, 613, 614, 615, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 1358,
	278, 279, 1359, 1360, 1361, 0, 1362, 616, 1363, 1364,
	1365, 1366, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 1367, 621,
	290, 291, 292, 293, 294, 295, 1368, 1369, 0, 296,
	622, 623, 624, 1370, 297, 298, 625, 1371, 1300, 1372,
	299, 300, 301, 302, 303, 304, 305, 0, 1373, 307,
	308, 309, 306, 310, 1374, 311, 0, 312, 313, 314,
	315, 316, 317, 1375, 318, 319, 320, 1157, 321, 322,
	323, 1376, 1377, 1379, 1378, 1380, 1381, 1382, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 1383, 333, 330,
	331, 1384, 334, 332, 335, 1385, 336, 337, 338, 1386,
	1387, 339, 340, 341, 1388, 342, 343, 1389, 344, 345,
	346, 1390, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 1391, 267,
	1392, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 1393, 365, 366, 1394, 1395, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1396, 378, 634, 1397, 635, 379, 1398, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 1160, 385,
	386, 1399, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1400, 1159, 394, 639, 640, 1401,
	641, 1402, 396, 397, 1161, 642, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1403, 408, 410, 409, 1404, 411, 643, 1164, 412,
	413, 1165, 1405, 414, 0, 0, 0, 415, 416, 419,
	1406, 1407, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1408, 269, 1168, 458,
	459, 1409, 644, 460, 645, 462, 463, 1410, 0, 464,
	0, 1411, 1412, 466, 467, 468, 1413, 1414, 469, 470,
	646, 1169, 471, 1170, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 1415, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 1416, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 1417,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1418, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1419, 544, 545, 543, 546, 547, 548,
	1420, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 1421, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 1422, 575, 576, 0, 572, 563,
	1423, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	1424, 585, 657, 658, 659, 660, 1425, 594, 1426, 586,
	587, 588, 661, 589, 662, 1427, 590, 591, 592, 593,
	0, 595, 596, 1428, 1429, 597, 598, 599, 601, 602,
	600, 603, 1430, 604, 1431, 0, 605, 606, 607, 663,
	664, 665, 1432, 609, 608, 610, 666, 1433, 1434, 1435,
	1436, 1437, 611, 612, 667, 613, 614, 615, 2455, 0,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 2452, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 2453, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 2451, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 2454, 0, 0, 0, 0, 0, 0, 1076, 2450,
	0, 1038, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 229, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 231,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 1569, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	223, 611, 612, 667, 613, 614, 615, 1051, 0, 224,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 1813, 1811, 0, 0, 1074, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 229, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	231, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 1569,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 223, 611, 612, 667, 613, 614, 615, 1051, 0,
	224, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 1813, 3066, 0, 0, 1074, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 229, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 231, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	1569, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 223, 611, 612, 667, 613, 614, 615, 1051,
	0, 224, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1813, 1811, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	2583, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 2588,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 2584, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	2585, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 2500, 1074, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	0, 0, 0, 0, 0, 0, 0, 1076, 2498, 0,
	2497, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 0, 0, 0, 0, 0, 0, 0,
	1076, 2495, 0, 2494, 1074, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1051,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 0, 0, 0, 0,
	0, 0, 0, 1076, 2492, 0, 2491, 1074, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 0,
	0, 0, 0, 0, 0, 0, 1076, 2489, 0, 1662,
	1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 1081, 379, 0, 380, 381, 382, 383,
	384, 1117, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 0,
	609, 608, 610, 666, 0, 1661, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 1041, 1074, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 1055, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1051, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 1076, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 4472, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 1055, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1051,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 2369, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 2368, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 1055, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 4226, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 1055, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 3836, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	1881, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	0, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	3552, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	1076, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 1881, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 0, 1074, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 2588,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 0, 0,
	0, 0, 0, 0, 0, 1076, 1811, 0, 2593, 1074,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 2591, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 2579, 1074, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 2568, 1074, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	0, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	2566, 1074, 2557, 2564, 1065, 1066, 1062, 1063, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 2560, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	2561, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 2562, 429, 2559, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	2563, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 2558, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 2554, 1074, 2557, 2564, 1065, 1066, 1062,
	1063, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 2560, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 2561, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 2562, 429, 2559, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 2563, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 2558, 615, 1051,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 0, 0, 0,
	0, 0, 1819, 0, 1076, 0, 0, 0, 1074, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 2348, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 595, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	0, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	1667, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 1599, 1074, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 1049,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 1053, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 1050, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	1060, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 1048, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 1054, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1051,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 0, 0, 0, 1045, 1046, 0, 0, 0, 0,
	0, 0, 0, 1076, 0, 0, 1594, 1074, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 595, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 0,
	0, 0, 0, 0, 0, 0, 1076, 0, 0, 1585,
	1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 1081, 379, 0, 380, 381, 382, 383,
	384, 1117, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 1580, 1074, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 1049, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 1053, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 1050, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 1048, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 1054, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 1051, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 1045, 1046, 0, 0, 0, 0, 0,
	0, 0, 1076, 0, 0, 1492, 1074, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1491, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 1486, 1074,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 1081, 379, 0, 380, 381, 382, 383, 384,
	1485, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 1479, 1074, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1045, 1046, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 1302, 1074, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	1168, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 595, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1051, 0, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1092, 1064, 1065,
	1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1116, 1080, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 1129, 0, 288, 1136, 289,
	1135, 0, 1146, 290, 291, 292, 293, 294, 295, 1082,
	1115, 1049, 296, 1176, 1177, 624, 0, 297, 298, 1122,
	0, 1103, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107,
	1111, 324, 325, 326, 327, 328, 1139, 329, 1133, 1132,
	1053, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1059, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1147, 1148,
	360, 1071, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1131, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1144, 1145, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1154, 0, 1081,
	379, 0, 380, 381, 382, 383, 384, 1117, 1118, 1121,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1159, 394,
	1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	1155, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 1110, 1109, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 1050,
	269, 1168, 458, 459, 1072, 1120, 460, 1134, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 1149, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 1150, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1130, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 1060, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1113, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1128, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1175,
	566, 567, 568, 569, 1151, 573, 574, 0, 575, 576,
	1048, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1140, 1141, 1142, 1143, 0,
	594, 0, 586, 587, 588, 1152, 589, 1153, 1070, 590,
	591, 592, 593, 0, 595, 596, 0, 1054, 597, 598,
	599, 601, 602, 600, 603, 1114, 604, 0, 0, 605,
	606, 607, 663, 1137, 1174, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1051, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 0, 0, 1045, 1046, 1092, 1064,
	1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1116, 1080, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 1129, 0, 288, 1136,
	289, 1135, 0, 1146, 290, 291, 292, 293, 294, 295,
	1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 4518, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 1139, 329, 1133,
	1132, 1053, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1124, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1059, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 1071, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1131, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 1144, 1145, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	1081, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 1126, 1127, 0, 1087, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1130, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 1060, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 1128, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1175, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 1048, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 1140, 1141, 1142, 1143,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 1070,
	590, 591, 592, 593, 0, 4517, 596, 0, 1054, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 1137, 1174, 0, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 1051, 0, 0, 0, 0, 0, 0, 0,
	1047, 0, 0, 0, 0, 0, 0, 1045, 1046, 1092,
	1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 1080, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 4516, 1129, 0, 288,
	1136, 289, 1135, 0, 1146, 290, 291, 292, 293, 294,
	295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 4518, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 1139, 329,
	1133, 1132, 1053, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1124, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1059,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 1071, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1131, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 1144, 1145, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 1081, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 1126, 1127, 0, 1087, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 1050, 269, 1168, 458, 459, 1072, 1120, 460, 1134,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 1130,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 1060, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 1128,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 1175, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 1048, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 1140, 1141, 1142,
	1143, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	1070, 590, 591, 592, 593, 0, 4517, 596, 0, 1054,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 1137, 1174, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1051, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 1045, 1046,
	1092, 1064, 1065, 1066, 1062, 1063, 1075, 1076, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1116, 1080, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 1129, 0,
	288, 1136, 289, 1135, 0, 1146, 290, 291, 292, 293,
	294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624, 0,
	297, 298, 1122, 0, 1103, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 4165, 323, 1106, 1104, 1105,
	1112, 1108, 1107, 1111, 324, 325, 326, 327, 328, 1139,
	329, 1133, 1132, 1053, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1124, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1059, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1147, 1148, 360, 1071, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1131, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 1144, 1145, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1154, 0, 4166, 379, 0, 380, 381, 382, 383, 384,
	1117, 1118, 1121, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1159, 394, 1126, 1127, 0, 1087, 0, 396, 397,
	1161, 1119, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1155, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 1110, 1109, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120, 460,
	1134, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	1149, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 1150, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1130, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 4164, 1060, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1113, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	1128, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1175, 566, 567, 568, 569, 1151, 573, 574,
	0, 575, 576, 1048, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 1140, 1141,
	1142, 1143, 0, 594, 0, 586, 587, 588, 1152, 589,
	1153, 1070, 590, 591, 592, 593, 0, 595, 596, 0,
	1054, 597, 598, 599, 601, 602, 600, 603, 1114, 604,
	0, 0, 605, 606, 607, 663, 1137, 1174, 0, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 1051, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 1045,
	1046, 1092, 1064, 1065, 1066, 3033, 3034, 1075, 1076, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1116, 1080, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 1129,
	0, 288, 1136, 289, 1135, 0, 1146, 290, 291, 292,
	293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177, 624,
	0, 297, 298, 1122, 0, 1103, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 1106, 1104,
	1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327, 328,
	1139, 329, 1133, 1132, 1053, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1124,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1059, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1147, 1148, 360, 1071, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1131, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 1144, 1145,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1154, 0, 1081, 379, 0, 380, 381, 382, 383,
	384, 1117, 1118, 1121, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1159, 394, 1126, 1127, 0, 1087, 0, 396,
	397, 1161, 1119, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1155, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 1110, 1109, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 1050, 269, 1168, 458, 459, 1072, 1120,
	460, 1134, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 1149, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 1150, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1130, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 1060, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1113, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 1128, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1175, 566, 567, 568, 569, 1151, 573,
	574, 0, 575, 576, 1048, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 1140,
	1141, 1142, 1143, 0, 594, 0, 586, 587, 588, 1152,
	589, 1153, 1070, 590, 591, 592, 593, 0, 595, 596,
	0, 1054, 597, 598, 599, 601, 602, 600, 603, 1114,
	604, 0, 0, 605, 606, 607, 663, 1137, 1174, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1051, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 0, 0,
	1045, 1046, 1092, 1064, 1065, 1066, 3031, 3032, 1075, 1076,
	0, 0, 0, 1074, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 1080, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	1129, 0, 288, 1136, 289, 1135, 0, 1146, 290, 291,
	292, 293, 294, 295, 1082, 1115, 1049, 296, 1176, 1177,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 1139, 329, 1133, 1132, 1053, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1124, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1059, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 1071, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1131, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 1144,
	1145, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 1081, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 1126, 1127, 0, 1087, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 1050, 269, 1168, 458, 459, 1072,
	1120, 460, 1134, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1130, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 1060, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 1128, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1175, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 1048, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	1140, 1141, 1142, 1143, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 1070, 590, 591, 592, 593, 0, 595,
	596, 0, 1054, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 1137, 1174,
	0, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 1051, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 0, 0,
	0, 1045, 1046, 1092, 1064, 1065, 1066, 1062, 1063, 1075,
	1076, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1116, 1080, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 1129, 0, 288, 1136, 289, 1135, 0, 1146, 290,
	291, 292, 293, 294, 295, 1082, 1115, 1049, 296, 1176,
	1177, 624, 0, 297, 298, 1122, 0, 1103, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326,
	327, 328, 1139, 329, 1133, 1132, 1053, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1124, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1059, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1147, 1148, 360, 1071, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1131, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	1144, 1145, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1154, 0, 1081, 379, 0, 380, 381,
	382, 383, 384, 1117, 1118, 1121, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1159, 394, 1126, 1127, 0, 1087,
	0, 396, 397, 1161, 1119, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1155, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 1110,
	1109, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 1050, 269, 1168, 458, 459,
	1072, 1120, 460, 1134, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 1149, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 1150, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 1130, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 1060, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1113,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 1128, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 1175, 566, 567, 568, 569,
	1151, 573, 574, 0, 575, 576, 1048, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 1140, 1141, 1142, 1143, 0, 594, 0, 586, 587,
	588, 1152, 589, 1153, 1070, 590, 591, 592, 593, 0,
	595, 596, 0, 1054, 597, 598, 599, 601, 602, 600,
	603, 1114, 604, 0, 0, 605, 606, 607, 663, 1137,
	1174, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1051, 0, 0,
	0, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 2356, 2357, 1092, 1064, 1065, 1066, 1062, 1063,
	1075, 1076, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 1080, 0,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 1129, 0, 288, 1136, 289, 1135, 0, 1146,
	290, 291, 292, 293, 294, 295, 1082, 1115, 0, 296,
	1176, 1177, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 1139, 329, 1133, 1132, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1124, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1059, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 1071, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1131, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 1144, 1145, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 1081, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 1126, 1127, 0,
	1087, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 0, 269, 1168, 458,
	459, 1072, 1120, 460, 1134, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1130, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 1060,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 1128, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1175, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 1140, 1141, 1142, 1143, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 1070, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	1137, 1174, 0, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 2576, 0, 0, 0,
	0, 0, 0, 2574, 2575, 1092, 1064, 1065, 1066, 1062,
	1063, 1075, 1076, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1116, 1080,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 1129, 0, 288, 1136, 289, 1135, 0,
	1146, 290, 291, 292, 293, 294, 295, 1082, 1115, 0,
	296, 1176, 1177, 624, 0, 297, 298, 1122, 0, 1103,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324,
	325, 326, 327, 328, 1139, 329, 1133, 1132, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1124, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1059, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1147, 1148, 360, 1071,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1131,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 1144, 1145, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1154, 0, 1081, 379, 0,
	380, 381, 382, 383, 384, 1117, 1118, 1121, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 1159, 394, 1126, 1127,
	0, 1087, 0, 396, 397, 1161, 1119, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 1155, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 1110, 1109, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 269, 1168,
	458, 459, 1072, 1120, 460, 1134, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 1149, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 1150,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 1130, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	3026, 3027, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 1113, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 1128, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 1175, 566, 567,
	568, 569, 1151, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 1140, 1141, 1142, 1143, 0, 594, 0,
	586, 587, 588, 1152, 589, 1153, 1070, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 1114, 604, 0, 0, 605, 606, 607,
	663, 1137, 1174, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2063, 1092, 1064, 1065, 1066,
	1062, 1063, 1075, 1076, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1116,
	1080, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 0, 1129, 0, 288, 1136, 289, 1135,
	0, 1146, 290, 291, 292, 293, 294, 295, 1082, 1115,
	1049, 296, 1176, 1177, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 4518, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 1139, 329, 1133, 1132, 1053,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1124, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1059, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	1071, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1131, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 1144, 1145, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 1081, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 1126,
	1127, 0, 1087, 0, 396, 397, 0, 1119, 0, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 1050, 269,
	0, 458, 459, 1072, 1120, 460, 1134, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1130, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 1060, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 1128, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1175, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 1048,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 1140, 1141, 1142, 1143, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 1070, 590, 591,
	592, 593, 0, 4517, 596, 0, 1054, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 1137, 1174, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1038, 0, 1214, 0, 0, 1045, 1046, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 0, 1074, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1116, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 1115, 0, 296, 622, 623,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1200,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 269, 1168, 458, 459, 0,
	1120, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	1206, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 1208, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 229, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 0, 572, 563, 231, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 1569, 664, 665,
	0, 609, 608, 610, 666, 0, 1214, 0, 0, 223,
	611, 612, 667, 613, 614, 615, 0, 0, 224, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 1204, 1116,
	1905, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 1115,
	0, 296, 622, 623, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 639,
	640, 0, 641, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1200, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 269,
	1168, 458, 459, 0, 1120, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 1206, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 653, 1208, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 0,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 1569, 664, 665, 0, 609, 608, 610, 666, 0,
	3186, 0, 1214, 223, 611, 612, 667, 613, 614, 615,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 1204, 0, 1905, 1116, 0, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 1115, 0, 296, 622, 623,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1200,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 269, 1168, 458, 459, 0,
	1120, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	1206, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 1208, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 0, 1196, 0, 1214, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 1204, 0,
	1202, 1116, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 1115, 0, 296, 622, 623, 624, 0, 297, 298,
	1122, 0, 1103, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112, 1108,
	1107, 1111, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1147,
	1148, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1154, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 1117, 1118,
	1121, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1159,
	394, 639, 640, 0, 641, 0, 396, 397, 1161, 1119,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1200, 408, 410, 409, 0,
	411, 1155, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 1110, 1109, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 269, 1168, 458, 459, 0, 1120, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 1206, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 1149, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 1150, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 1208, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1113, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 1151, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 1152, 589, 1153, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 1114, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 0, 1214, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 1204, 1116, 1202, 0, 0, 0,
	280, 281, 1156, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 1115, 0, 296, 622, 623,
	624, 0, 297, 298, 1122, 0, 1103, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1157, 321, 322, 323, 1106,
	1104, 1105, 1112, 1108, 1107, 1111, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1147, 1148, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1158, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1154, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 1117, 1118, 1121, 461, 1160, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1159, 394, 639, 640, 0, 641, 0,
	396, 397, 1161, 1119, 1162, 398, 399, 400, 1163, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1200,
	408, 410, 409, 0, 411, 1155, 1164, 412, 413, 1165,
	0, 414, 0, 0, 0, 415, 416, 419, 1110, 1109,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1166,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1167, 448, 0, 269, 1168, 458, 459, 0,
	1120, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	1206, 466, 467, 468, 0, 0, 469, 470, 646, 1169,
	471, 1170, 1149, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 1150, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1171, 524, 525, 526, 527, 653, 1208, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1113, 549,
	550, 533, 534, 551, 552, 1172, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 1151,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	1152, 589, 1153, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	1114, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 0, 1214, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 1204, 1116,
	1202, 0, 0, 0, 280, 281, 1156, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 1115,
	0, 296, 622, 623, 624, 0, 297, 298, 1122, 0,
	1103, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1157,
	321, 322, 323, 1106, 1104, 1105, 1112, 1108, 1107, 1111,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1147, 1148, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1158, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1154, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 1117, 1118, 1121, 461,
	1160, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1159, 394, 639,
	640, 0, 641, 0, 396, 397, 1161, 1119, 1162, 398,
	399, 400, 1163, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1155,
	1164, 412, 413, 1165, 0, 414, 0, 0, 0, 415,
	416, 419, 1110, 1109, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1166, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1167, 448, 0, 269,
	1168, 458, 459, 0, 1120, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 1169, 471, 1170, 1149, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	1150, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1171, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1113, 549, 550, 533, 534, 551, 552, 1172,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 1151, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 1152, 589, 1153, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1114, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 1214,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1116, 0, 3998, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 1115, 0, 296, 622, 623, 624, 0, 297,
	298, 1122, 0, 1103, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 1106, 1104, 1105, 1112,
	1108, 1107, 1111, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1147, 1148, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1154,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1117,
	1118, 1121, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1159, 394, 639, 640, 0, 641, 0, 396, 397, 1161,
	1119, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 1155, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 1110, 1109, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 0, 269, 1168, 458, 459, 0, 1120, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 1149,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 1150, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 1208, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1113, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 1151, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 1152, 589, 1153,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 1114, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 0, 1038, 0, 1295, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 1804, 616, 0,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 1300,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1159, 394, 639, 640,
	0, 641, 0, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 0, 1168,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 229, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 231, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	1569, 664, 665, 0, 609, 608, 610, 666, 0, 1566,
	0, 1295, 223, 611, 612, 667, 613, 614, 615, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 185, 616, 0, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 1300, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1159, 394, 639, 640, 0, 641, 0, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 0, 0, 1168, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	229, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 231, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 1569, 664, 665, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 223, 611,
	612, 667, 613, 614, 615, 0, 0, 224, 0, 0,
	0, 0, 0, 1295, 1294, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 1300, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 0, 1168, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 1294, 0, 0, 0,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 1300,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1159, 394, 639, 640,
	0, 641, 0, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 0, 1168,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 1294, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3471, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 1300, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1159, 394,
	639, 640, 0, 641, 0, 396, 397, 1161, 642, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	0, 1168, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 2245, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	2159, 0, 0, 0, 0, 2160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1591, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 1300, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1159, 394, 639, 640, 0, 641, 0, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 2158, 410, 409,
	0, 411, 643, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 0, 0, 1168, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1591, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 1300, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1159, 394, 639, 640, 0, 641, 0, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 0, 0, 1168, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 1214, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1116, 0, 1575,
	0, 0, 280, 281, 1156, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 1115, 0, 296,
	622, 623, 624, 0, 297, 298, 1122, 0, 1103, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1157, 321, 322,
	323, 1106, 1104, 1105, 1112, 1108, 1107, 1111, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1147, 1148, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1158, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1154, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1117, 1118, 1121, 461, 1160, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1159, 394, 639, 640, 0,
	641, 0, 396, 397, 1161, 1119, 1162, 398, 399, 400,
	1163, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1155, 1164, 412,
	413, 1165, 0, 414, 0, 0, 0, 415, 416, 419,
	1110, 1109, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1166, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1167, 448, 0, 269, 1168, 458,
	459, 0, 1120, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 1169, 471, 1170, 1149, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 1150, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1171, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1113, 549, 550, 533, 534, 551, 552, 1172, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 1151, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 1152, 589, 1153, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 1114, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1038, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 229, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 231, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 1569, 664, 665, 0, 609, 608,
	610, 666, 264, 0, 0, 0, 223, 611, 612, 667,
	613, 614, 615, 0, 0, 224, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 185, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 264, 2939, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	1919, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 4674, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 264, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 3421,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	0, 264, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 1563, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 2927,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 3577, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	0, 880, 0, 787, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 2236, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	794, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 878, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 792,
	577, 578, 579, 580, 581, 793, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 785, 0, 787,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 797, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 794, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 792, 577, 578, 579, 580,
	581, 793, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 1958, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	797, 0, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 0, 1964, 0, 288, 1954, 289,
	1970, 0, 1977, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 1980, 1981, 0, 0, 297, 298, 0,
	0, 1300, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 1139, 329, 1968, 1967,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1124, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 1966, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 1975, 1976, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 0, 380, 381, 382, 383, 384, 0, 0, 0,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1159, 394,
	1961, 1962, 0, 1957, 0, 396, 397, 1161, 0, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	0, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	0, 1168, 458, 459, 0, 0, 460, 1969, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 0, 1169, 471, 1170, 0, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 1951, 485, 486, 487, 1952, 488, 489,
	490, 0, 491, 0, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 1965, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 0, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 1963, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 1979,
	566, 567, 568, 569, 0, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 1971, 1972, 1973, 1974, 0,
	594, 0, 586, 587, 588, 0, 589, 0, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 0, 1955, 1978, 0, 609, 608, 610, 787,
	0, 0, 0, 0, 0, 611, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 1945,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 794, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 792, 577, 578, 579, 580,
	581, 793, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 787, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	797, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 794,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 2279, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 2280, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 792, 577,
	578, 579, 580, 581, 793, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 2281, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 0, 2028, 0, 1295, 1995,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 797, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 1156, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 1300, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1157, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 1992, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1158, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 1160, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1159,
	394, 639, 640, 0, 641, 0, 396, 397, 1161, 642,
	1162, 398, 399, 400, 1163, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 1164, 412, 413, 1165, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1166, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1167, 448,
	0, 0, 1168, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 1169, 471, 1170, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1171, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1993, 549, 550, 533, 534, 551,
	552, 1172, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 1989, 0, 1295, 1995, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 1300, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 1992, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 0, 1168, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1993,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 787, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 794, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 1984, 539, 540, 541, 542,
	0, 1985, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 792, 577, 578,
	579, 580, 581, 793, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 1983, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 787, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 797, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 794, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 1936, 539,
	540, 541, 542, 0, 1937, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	792, 577, 578, 579, 580, 581, 793, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 1935, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1295, 1995, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 797, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 1300, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	1992, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1159, 394,
	639, 640, 0, 641, 0, 396, 397, 1161, 642, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	0, 1168, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1993, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 1300, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1159, 394, 639, 640, 0, 641, 0, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 0, 0, 1168, 458, 459, 3776, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1295, 1294, 0, 0, 0,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 1300,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1159, 394, 639, 640,
	0, 641, 0, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 0, 1168,
	458, 459, 3392, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1619, 0, 1295,
	1294, 0, 0, 0, 0, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 1156,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 1300, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1157, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	1618, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1158, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 1160, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1159, 394, 639, 640, 0, 641, 0, 396, 397, 1161,
	642, 1162, 398, 399, 400, 1163, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 1164, 412, 413, 1165, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1166, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1167,
	448, 0, 0, 1168, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 1169, 471, 1170, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 1617, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1171,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 1616, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 1172, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 1537, 0, 1295, 1294, 0, 0, 0,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 1156, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 1300,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1157, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1158,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 1536, 637, 638, 461, 1160,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1159, 394, 639, 640,
	0, 641, 0, 396, 397, 1161, 642, 1162, 398, 399,
	400, 1163, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 1164,
	412, 413, 1165, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1166, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1167, 448, 0, 0, 1168,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 1169, 471, 1170, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1171, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 1172, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 1497,
	0, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 1300, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1159, 394, 639, 640, 0, 641, 0, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 0, 0, 1168, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 1465, 0, 1295, 1294, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 1300, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 1464, 637, 638,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1159, 394,
	639, 640, 0, 641, 0, 396, 397, 1161, 642, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	0, 1168, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 1289, 0, 1295, 1294, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 1300, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 1288, 637, 638, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 0, 1168, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 1295, 1294, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 1156, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 1300, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1157, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1158, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 1160, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 1159, 394,
	639, 640, 0, 641, 0, 396, 397, 1161, 642, 1162,
	398, 399, 400, 1163, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 1164, 412, 413, 1165, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1166, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1167, 448, 0,
	0, 1168, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 1169, 471, 1170, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1171, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	1172, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	1295, 1995, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	1156, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 1300, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1157, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 2035, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1158, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 1160, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1159, 394, 639, 640, 0, 641, 0, 396, 397,
	1161, 642, 1162, 398, 399, 400, 1163, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 1164, 412, 413, 1165, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1166, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1167, 448, 0, 0, 1168, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 1169, 471, 1170,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1171, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 1172, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 1295, 1294, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 1156, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 1300, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1157, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1158, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 1160, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 1159, 394, 639, 640, 0, 641,
	0, 396, 397, 1161, 642, 1162, 398, 399, 400, 1163,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 1164, 412, 413,
	1165, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1166, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1167, 448, 0, 0, 1168, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	1169, 471, 1170, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1171, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 1172, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 1295, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 1156, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 1300, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1157, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1158, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 1160, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1159, 394, 639, 640, 0, 641, 0, 396,
	397, 1161, 642, 1162, 398, 399, 400, 1163, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 1164, 412, 413, 1165, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1166, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1167, 448, 0, 0, 1168, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 1169, 471,
	1170, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1171, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1172, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 2745, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 2742,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 2749, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 2952, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 2748, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 2949, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 2951, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 2948, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 2747, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 2950,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 2745, 297, 298, 625,
	0, 0, 2739, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 2742, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 2749, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 2748,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 2738, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 2747, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 2746, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	1690, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 1689, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 1693, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 1691, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 1692, 608, 610, 666, 1442, 0, 264, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 1444, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 1206, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	1439, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 1441, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	1206, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 1346, 0, 264, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 1348, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	269, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 1206, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	699, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 698, 275, 276, 277, 688, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 691, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	692, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 693, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 687, 0, 264, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 688, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 691, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 692, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 693, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 264, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 269, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 1206, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 264, 609, 608, 610, 666, 0, 0,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 3343, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 0, 609, 608, 610, 666, 2897, 0, 264, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 2896, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 2251, 0, 264, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	617, 618, 0, 288, 619, 289, 620, 0, 621, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 622,
	623, 624, 0, 297, 298, 625, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 626, 627, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 628, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 629, 630, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 631, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	632, 633, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 634, 0, 635, 379, 0, 380, 381,
	382, 383, 384, 636, 637, 638, 461, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 639, 640, 0, 641,
	0, 396, 397, 0, 642, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 643, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 448, 0, 269, 0, 458, 459,
	0, 644, 460, 645, 462, 463, 0, 0, 464, 0,
	0, 0, 466, 467, 468, 0, 0, 469, 470, 646,
	0, 471, 0, 647, 472, 473, 465, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 648,
	485, 486, 487, 649, 488, 489, 490, 650, 491, 651,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 652, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 653, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 654, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 655, 566, 567, 568, 569,
	656, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 354, 584, 0,
	585, 657, 658, 659, 660, 0, 594, 0, 586, 587,
	588, 661, 589, 662, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 663, 664,
	665, 264, 609, 608, 610, 666, 0, 0, 0, 0,
	0, 611, 612, 667, 613, 614, 615, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 2192, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 0,
	609, 608, 610, 666, 2199, 0, 264, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 2198, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 2185,
	0, 264, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 2187, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 269, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 2155,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 1206, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1541, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1540, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1459, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1452, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1454, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1279, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1278,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1269, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1268, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1266, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1265,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1261, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1260, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 669, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 269, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 255, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 264, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 3700, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	3701, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 3703,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 3704, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 3699, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 691, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 692, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 693, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 2288, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 2286, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 269, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 264, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 2284,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 269, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	2205, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 269, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 2014, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 269, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 2008, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 269,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 867,
	0, 264, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 866, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 468, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 865, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 2952, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 4064, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 3968, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 3970, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	756, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 1316, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	1314, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 757, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 753, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 1317, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	752, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 756, 0, 264, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 1316, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 1314, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 757, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 753, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 1317, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 752, 658, 659, 660, 0,
	594, 0, 586, 1315, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 0, 609, 608, 610, 666,
	678, 0, 264, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 677, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 676,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	0, 609, 608, 610, 666, 264, 2939, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 264, 4074,
	0, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 4345, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 4340, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 264, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 3965, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 3742, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 2628, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 0, 609, 608, 610,
	666, 264, 2939, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 617, 618,
	0, 288, 619, 289, 620, 0, 621, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 622, 623, 624,
	0, 297, 298, 625, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 626, 627, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 628, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 629, 630, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 631, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 632, 633,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 634, 0, 635, 379, 0, 380, 381, 382, 383,
	384, 636, 637, 638, 461, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 639, 640, 0, 641, 0, 396,
	397, 0, 642, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 643, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 448, 0, 0, 0, 458, 459, 0, 644,
	460, 645, 462, 463, 0, 0, 464, 0, 0, 0,
	466, 467, 2936, 0, 0, 469, 470, 646, 0, 471,
	0, 647, 472, 473, 465, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 648, 485, 486,
	487, 649, 488, 489, 490, 650, 491, 651, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 652, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 653, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 654, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 655, 566, 567, 568, 569, 656, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 354, 584, 0, 585, 657,
	658, 659, 660, 0, 594, 0, 586, 587, 588, 661,
	589, 662, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 663, 664, 665, 264,
	609, 608, 610, 666, 0, 0, 0, 0, 0, 611,
	612, 667, 613, 614, 615, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 2261, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 2249, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 756, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	746, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 757, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 753, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 1574, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 752, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1547, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1546, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1531, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1529,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1524, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1501, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1499,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1462, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1447, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 636,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 0, 609, 608,
	610, 666, 1284, 0, 264, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 1283, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 0, 609, 608, 610, 666, 1275, 0, 264,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 617, 618, 0, 288,
	619, 289, 620, 0, 621, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 622, 623, 624, 0, 297,
	298, 625, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	626, 627, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 628,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	629, 630, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 631, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 632, 633, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 634,
	0, 635, 379, 0, 380, 381, 382, 383, 384, 1274,
	637, 638, 461, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 639, 640, 0, 641, 0, 396, 397, 0,
	642, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 643, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	448, 0, 0, 0, 458, 459, 0, 644, 460, 645,
	462, 463, 0, 0, 464, 0, 0, 0, 466, 467,
	468, 0, 0, 469, 470, 646, 0, 471, 0, 647,
	472, 473, 465, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 648, 485, 486, 487, 649,
	488, 489, 490, 650, 491, 651, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 652,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 653, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 654,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 655, 566, 567, 568, 569, 656, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 354, 584, 0, 585, 657, 658, 659,
	660, 0, 594, 0, 586, 587, 588, 661, 589, 662,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 663, 664, 665, 264, 609, 608,
	610, 666, 0, 0, 0, 0, 0, 611, 612, 667,
	613, 614, 615, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 1228, 278, 279, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 617, 618, 0, 288, 619, 289,
	620, 0, 621, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 622, 623, 624, 0, 297, 298, 625,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 626, 627,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 628, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 629, 630,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 631, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 632, 633, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 634, 0, 635,
	379, 0, 380, 381, 382, 383, 384, 636, 637, 638,
	461, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	639, 640, 0, 641, 0, 396, 397, 0, 642, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	643, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 448, 0,
	0, 0, 458, 459, 0, 644, 460, 645, 462, 463,
	0, 0, 464, 0, 0, 0, 466, 467, 468, 0,
	0, 469, 470, 646, 0, 471, 0, 647, 472, 473,
	465, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 648, 485, 486, 487, 649, 488, 489,
	490, 650, 491, 651, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 652, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 653, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 654, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 655,
	566, 567, 568, 569, 656, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 354, 584, 0, 585, 657, 658, 659, 660, 0,
	594, 0, 586, 587, 588, 661, 589, 662, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 663, 664, 665, 264, 609, 608, 610, 666,
	0, 0, 0, 0, 0, 611, 612, 667, 613, 614,
	615, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	762, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 756, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 746, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 744, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 745, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 757, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 747, 528, 0, 529, 530,
	536, 537, 531, 532, 753, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 748, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 752, 658,
	659, 660, 0, 594, 0, 586, 750, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 738, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 739, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 701, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 0, 609,
	608, 610, 666, 695, 0, 264, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 617, 618, 0, 288, 619, 289, 620, 0,
	621, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 622, 623, 624, 0, 297, 298, 625, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 626, 627, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 628, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 629, 630, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 631,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 632, 633, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 634, 0, 635, 379, 0,
	380, 381, 382, 383, 384, 636, 637, 638, 461, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 639, 640,
	0, 641, 0, 396, 397, 0, 642, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 643, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 448, 0, 0, 0,
	458, 459, 0, 644, 460, 645, 462, 463, 0, 0,
	464, 0, 0, 0, 466, 467, 468, 0, 0, 469,
	470, 646, 0, 471, 0, 647, 472, 473, 465, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 648, 485, 486, 487, 649, 488, 489, 490, 650,
	491, 651, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 652, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	653, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 654, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 655, 566, 567,
	568, 569, 656, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 354,
	584, 0, 585, 657, 658, 659, 660, 0, 594, 0,
	586, 587, 588, 661, 589, 662, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	663, 664, 665, 0, 609, 608, 610, 666, 673, 0,
	264, 0, 0, 611, 612, 667, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	636, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 3441, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 3378, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 264, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 3310, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	3308, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 3293, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 379,
	0, 380, 381, 382, 383, 384, 2907, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 264, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 617, 618, 0, 288, 619, 289, 620, 0, 621,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	622, 623, 624, 0, 297, 298, 625, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 626, 627, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 628, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 629, 630, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 631, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 632, 633, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 634, 0, 635, 379, 0, 380,
	381, 382, 383, 384, 636, 637, 638, 461, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 639, 640, 0,
	641, 0, 396, 397, 0, 642, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 643, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 448, 0, 0, 0, 458,
	459, 0, 644, 460, 645, 462, 463, 0, 0, 464,
	0, 0, 0, 466, 467, 468, 0, 0, 469, 470,
	646, 0, 471, 0, 647, 472, 473, 465, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	648, 485, 486, 487, 649, 488, 489, 490, 650, 491,
	651, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 652, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 653,
	528, 0, 529, 530, 739, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 654, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 655, 566, 567, 568,
	569, 656, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 354, 584,
	0, 585, 657, 658, 659, 660, 0, 594, 0, 586,
	587, 588, 661, 589, 662, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 663,
	664, 665, 264, 609, 608, 610, 666, 0, 0, 0,
	0, 0, 611, 612, 667, 613, 614, 615, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 616, 0, 2223, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 617,
	618, 0, 288, 619, 289, 620, 0, 621, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 622, 623,
	624, 0, 297, 298, 625, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 626, 627, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 628, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 629, 630, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 631, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 632,
	633, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 634, 0, 635, 379, 0, 380, 381, 382,
	383, 384, 636, 637, 638, 461, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 639, 640, 0, 641, 0,
	396, 397, 0, 642, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 643, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 448, 0, 0, 0, 458, 459, 0,
	644, 460, 645, 462, 463, 0, 0, 464, 0, 0,
	0, 466, 467, 468, 0, 0, 469, 470, 646, 0,
	471, 0, 647, 472, 473, 465, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 648, 485,
	486, 487, 649, 488, 489, 490, 650, 491, 651, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 652, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 653, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 0,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 654, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 655, 566, 567, 568, 569, 656,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 354, 584, 0, 585,
	657, 658, 659, 660, 0, 594, 0, 586, 587, 588,
	661, 589, 662, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 663, 664, 665,
	264, 609, 608, 610, 666, 0, 0, 0, 0, 0,
	611, 612, 667, 613, 614, 615, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 617, 618, 0,
	288, 619, 289, 620, 0, 621, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 622, 623, 624, 0,
	297, 298, 625, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 626, 627, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	628, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 629, 630, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 631, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 632, 633, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	634, 0, 635, 379, 0, 380, 381, 382, 383, 384,
	1246, 637, 638, 461, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 639, 640, 0, 641, 0, 396, 397,
	0, 642, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 643, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 448, 0, 0, 0, 458, 459, 0, 644, 460,
	645, 462, 463, 0, 0, 464, 0, 0, 0, 466,
	467, 468, 0, 0, 469, 470, 646, 0, 471, 0,
	647, 472, 473, 465, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 648, 485, 486, 487,
	649, 488, 489, 490, 650, 491, 651, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	652, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 653, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	654, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 655, 566, 567, 568, 569, 656, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 354, 584, 0, 585, 657, 658,
	659, 660, 0, 594, 0, 586, 587, 588, 661, 589,
	662, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 663, 664, 665, 264, 609,
	608, 610, 666, 0, 0, 0, 0, 0, 611, 612,
	667, 613, 614, 615, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 617, 618, 0, 288, 619,
	289, 620, 0, 621, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 622, 623, 624, 0, 297, 298,
	625, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 626,
	627, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 628, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 629,
	630, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 631, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 632, 633, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 634, 0,
	635, 379, 0, 380, 381, 382, 383, 384, 636, 637,
	638, 461, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 639, 640, 0, 641, 0, 396, 397, 0, 642,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 643, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 448,
	0, 0, 0, 458, 459, 0, 644, 460, 645, 462,
	463, 0, 0, 464, 0, 0, 0, 466, 467, 468,
	0, 0, 469, 470, 646, 0, 471, 0, 647, 472,
	473, 465, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 648, 485, 486, 487, 649, 488,
	489, 490, 650, 491, 651, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 652, 503,
	1179, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 653, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 654, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	655, 566, 567, 568, 569, 656, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 354, 584, 0, 585, 657, 658, 659, 660,
	0, 594, 0, 586, 587, 588, 661, 589, 662, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 663, 664, 665, 264, 609, 608, 610,
	666, 0, 0, 0, 0, 0, 611, 612, 667, 613,
	614, 615, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 617, 618, 0, 288, 619, 289, 620,
	0, 621, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 622, 623, 624, 0, 297, 298, 625, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 626, 627, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 628, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 629, 630, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	631, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 632, 633, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 634, 0, 635, 0,
	0, 380, 381, 382, 383, 384, 636, 637, 638, 461,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 639,
	640, 0, 641, 0, 396, 397, 0, 642, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 643,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 448, 0, 0,
	0, 458, 459, 0, 644, 460, 645, 462, 463, 0,
	0, 464, 0, 0, 0, 466, 467, 468, 0, 0,
	469, 470, 646, 0, 471, 0, 647, 472, 473, 465,
	474, 475, 0, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 648, 485, 486, 487, 649, 488, 489, 490,
	650, 491, 651, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 0, 501, 502, 652, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 653, 0, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 654, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 655, 566,
	567, 568, 569, 656, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	354, 584, 0, 585, 657, 658, 659, 660, 0, 594,
	0, 586, 587, 588, 661, 589, 662, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 663, 664, 665, 0, 609, 608, 610, 666, 0,
	0, 0, 0, 0, 611, 612, 667, 613, 614, 615,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1787, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 1740, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 1760, 0, 1787, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 1774, 1769, 1760, 0, 0, 0, 0, 0,
	1741, 0, 0, 1757, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 1760, 0, 0, 0, 0,
	1746, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 1778, 1746, 0,
	1788, 0, 0, 0, 0, 0, 1768, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 1778, 0, 0, 1788, 1763,
	1764, 1765, 1766, 0, 1768, 1770, 0, 0, 0, 1746,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 1761, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 1776, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 1786, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1762, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1769, 0, 0, 0, 1779, 0, 0, 1741, 1767, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1779, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 3109, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 3108, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 1778, 0, 2457, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1784,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 1774, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 1776, 1738, 1739, 1787,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1769, 0, 0, 0, 1740, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 1760, 0, 1787, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 1778, 1746, 0, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 1761, 0, 0, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 1775, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 4451, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 1774, 1769,
	0, 0, 0, 0, 0, 0, 1741, 1762, 0, 0,
	0, 0, 0, 1738, 1739, 1787, 1771, 1772, 1773, 1781,
	1782, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 1774, 1769, 0, 0,
	0, 1740, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 1760, 0, 1787, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 1777, 0, 1757, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 4447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1763, 1764, 1765, 1766, 1752,
	1753, 1759, 1780, 1758, 1754, 1746, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 4366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 1764, 1765, 1766, 0, 0, 0,
	0, 0, 1778, 1746, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	1778, 0, 0, 1788, 0, 0, 0, 0, 0, 1768,
	1770, 0, 0, 0, 0, 1776, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 1784, 0, 1785, 0,
	1761, 0, 0, 0, 0, 1755, 1756, 0, 0, 1774,
	1769, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 1776, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 1778, 0, 0, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 1774, 1769, 1779,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 1784,
	0, 1785, 0, 0, 1787, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1761, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 4326, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 1775, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 4325, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 1774, 1769, 0,
	0, 1778, 0, 0, 1788, 1741, 0, 0, 0, 0,
	1768, 1770, 0, 0, 1787, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	1740, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1776, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 1777, 1746, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 4149, 0,
	0, 0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782,
	1783, 1778, 0, 0, 1788, 0, 0, 0, 0, 0,
	1768, 1770, 0, 1767, 0, 1774, 1769, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 1784, 0, 1785,
	0, 0, 1787, 0, 1762, 0, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 1740, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 1760, 1761,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 1777, 1746, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 3994, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 1778,
	0, 0, 1788, 0, 0, 0, 0, 0, 1768, 1770,
	0, 0, 0, 0, 1762, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 1784, 0, 1785, 0, 0,
	0, 0, 0, 0, 1755, 1756, 0, 0, 1774, 1769,
	1779, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 1776, 1738, 1739, 1787, 1771, 1772, 1773, 1781,
	1782, 1783, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1769, 0, 0,
	0, 1740, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 1760, 0, 1787, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 3921, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 1763, 1764, 1765, 1766, 0, 0, 0,
	0, 0, 1778, 1746, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	1778, 0, 0, 1788, 0, 0, 0, 0, 0, 1768,
	1770, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 1785, 0,
	1761, 0, 0, 0, 0, 1755, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	1775, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 3920, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 1774, 1769, 0, 0, 0, 0,
	0, 0, 1741, 1762, 0, 0, 0, 0, 0, 1738,
	1739, 1787, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 1774, 1769, 0, 0, 0, 1740, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 1760, 0, 1787,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 1777, 0, 1757, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 3919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1763, 1764, 1765, 1766, 1752, 1753, 1759, 1780, 1758,
	1754, 1746, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 3582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 1778, 1746,
	0, 1788, 0, 0, 0, 0, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 1785, 0, 0, 0,
	0, 0, 0, 1755, 1756, 0, 1778, 0, 0, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 1776, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782,
	1783, 0, 1784, 0, 1785, 0, 1761, 0, 0, 0,
	0, 1755, 1756, 0, 0, 1774, 1769, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 1776,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 1778,
	0, 0, 1788, 0, 0, 0, 0, 0, 1768, 1770,
	0, 0, 0, 1774, 1769, 1779, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 1784, 0, 1785, 0, 0,
	1787, 0, 0, 0, 1755, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1761, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 0, 3106, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 1775, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 3105, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 1774, 1769, 0, 0, 1778, 0, 0,
	1788, 1741, 0, 0, 0, 0, 1768, 1770, 0, 0,
	1787, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 1740, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	1776, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 1777,
	1746, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 3104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	1788, 0, 0, 0, 0, 0, 1768, 1770, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 1785, 0, 0, 0, 0,
	1762, 0, 1755, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 1738, 1739, 1779, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	0, 0, 3103, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 4588, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1779, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 1778, 0, 0, 1788, 1741, 0, 0, 0, 0,
	1768, 1770, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1776, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	3070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 0, 3166, 0, 0, 0,
	3165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4587, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 1788, 0, 0, 0, 1774, 1769,
	1768, 1770, 0, 1767, 3041, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1784, 0, 1785,
	0, 0, 0, 0, 1762, 0, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 1776, 0, 0, 0, 0, 0,
	1779, 1760, 0, 0, 0, 0, 0, 0, 0, 1761,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3042,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 1767, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2601,
	1779, 0, 0, 0, 0, 1776, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1769, 0, 0, 0, 2600, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 1762, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 1774, 1769,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 1779, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 1788, 0, 0, 0,
	0, 1740, 1768, 1770, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 1784,
	1757, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 1786, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 1788, 0, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 1774, 1769, 0, 0, 1767, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 1776, 1738, 1739, 1787, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 1762, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1769, 0, 0, 0, 1740, 0, 0, 1741, 0, 0,
	0, 0, 1779, 0, 1760, 0, 1787, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	1775, 1035, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 1777, 1767, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 1762, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 1778, 1746, 0, 1788, 0,
	0, 0, 3172, 0, 1768, 1770, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 1778, 0, 0, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 1761, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 1775, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 1767, 3167, 0, 0, 1741,
	0, 0, 0, 0, 1779, 0, 1738, 1739, 1787, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1769, 0, 0, 0, 1740, 0, 0, 1741, 0, 0,
	0, 0, 1779, 0, 1760, 0, 1787, 3563, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 1778, 1746, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 1778, 0, 0, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 1776, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1784,
	0, 1785, 0, 1761, 0, 0, 0, 0, 1755, 1756,
	0, 0, 1774, 1769, 0, 0, 0, 3107, 0, 0,
	1741, 0, 0, 0, 0, 0, 1776, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3134, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1762, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 1774, 1769, 0, 0, 1767, 0, 0, 0, 1741,
	0, 0, 0, 0, 1779, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 1788,
	0, 0, 0, 0, 1740, 1768, 1770, 0, 0, 0,
	0, 0, 1779, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 1784, 1757, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 1786, 0, 1746, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 1775, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1767, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748,
}

var sqlPact = [...]int{
	13653, -1000, -1000, -1000, -1000, 199, -1000, -1000, 196, 195,
	190, 188, 187, 186, 185, 184, 181, 179, 178, -1000,
	-1000, -1000, -1000, -1000, -1000, 177, -1000, -1000, 176, -1000,
	170, 168, 167, -1000, -1000, 165, -1000, 164, -1000, -1000,
	-1000, -1000, 162, 161, 160, 88100, 87555, 88638, 2288, 110306,
	96198, 2161, 78863, 109761, 78318, 109216, 2133, 9004, 108671, 2746,
	159, -1000, 108126, 157, 156, 155, -1000, 107581, -1000, 2165,
	-1000, 153, -1000, 2201, 63575, 151, 148, 147, 2808, 144,
	-1000, 143, 142, -1000, -1000, 140, -1000, 9702, 1483, -1000,
	138, 136, -1000, 1063, 93487, 135, 134, 2690, 131, 121,
	63029, 120, 114, 2257, 2938, -1000, -1000, 2024, -1000, -1000,
	113, 111, 106, 104, 102, 94, 91, 90, 86, 81,
	80, -1000, 79, 78, 75, 72, 71, -1000, 70, 69,
	68, -1000, 67, -1000, 66, 64, 63, 62, 61, 59,
	58, 57, 56, 54, 50, 48, 47, 46, 14472, -1000,
	1872, 1654, 1651, 1639, 1636, 1635, 944, 43, 39, 37,
	35, 34, 33, 32, 23, 22, 20, 18, 17, 16,
	15, 14, 10, 9, 133, 8, 6, 5, 3, 1,
	-1, -2, 2898, -1000, 1724, 1061, 29100, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 116224, 110844, -5, -67, -8, -1000, 3308,
	998, 52074, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	278, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	458, 2162, 730, -1000, -1000, -1000, 107043, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2283, 0, -1000, 2062, -1000,
	-1000, -1000, -1000, -1000, 729, -1000, 2281, 290, 2228, -1000,
	-1000, -1000, 3335, 2461, 3755, 3753, 3752, 3749, 3747, 115686,
	1764, 3745, 2565, 3743, 3742, 3741, 3739, 3737, 3735, 3734,
	-1000, 87010, 1028, 86465, 85920, 3374, 106505, 85375, 105960, 72339,
	44162, 1060, 3334, -1000, -1000, -1000, -1000, -1000, -1000, 110844,
	-1000, 1027, -1000, -1000, 3733, 3732, 2002, 725, 95653, -1000,
	1884, -1000, 919, 30813, -1000, 1318, -1000, 30813, 277, -1000,
	-1000, -1000, -1000, -1000, -1000, 3731, 3730, 3729, 3728, 3726,
	-1000, -1000, 77773, 22196, 77228, 76683, 105415, 21640, 84830, 84285,
	3725, 104870, 71783, 1023, 1409, -1000, -1000, -1000, -1000, -1000,
	-1000, -32, 69559, 3536, 110844, -1000, 272, -1000, -1000, -1000,
	-1000, -1000, -1000, 43579, 1022, 42996, 1007, 42413, 722, -1000,
	-1000, -1000, -1000, 71227, -1000, 104325, 2449, 3723, 3722, 1121,
	3721, 3246, 1734, 3719, 1826, 1203, 3717, 3715, 3713, 3710,
	3708, 3707, 3705, 1414, 103780, 2991, 1452, 103235, 1634, 70671,
	1020, 83740, 88638, 2678, 102690, 1369, 1365, -1000, -1000, -1000,
	-1000, 3085, 2935, 2931, 1154, -1000, -1000, -1000, -1000, 54797,
	6125, 5592, 9599, 102145, 57607, 88638, 88638, -1000, -1000, -1000,
	-1000, -1000, 41830, 712, 41247, 844, -1000, -1000, 55359, 2920,
	-1000, -1000, -1000, -1000, 40664, 672, 40081, 837, 110844, -1000,
	2987, 1908, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2249, 1603,
	3565, 2759, 70115, 2007, 1371, 3309, 3081, 3080, 1489, 3075,
	3704, 2572, 3064, 3047, 3040, 3037, 3036, 1628, 2645, 668,
	28517, 2947, 1637, 39498, 1477, 1487, 3035, 3034, 3572, 2014,
	1954, 2037, 76138, 3701, 3700, 3279, 3026, 3025, 2802, 3018,
	-1000, 2919, -1000, -1000, -1000, -1000, 1422, -1000, -1000, -1000,
	-1000, 79401, -1000, -1000, 1677, -1000, -1000, 1677, -1000, -1000,
	-1000, -1000, -1000, 1303, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1724, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2208, -1000, 1976, -1000,
	-1000, 2518, 3290, 3290, 3290, 3332, 416, 414, -1000, 133,
	-1000, -1000, 122627, -1000, -1000, 44733, 44733, 44733, 44733, 44733,
	44733, 44733, 2167, -1000, 723, -1000, -1000, 781, -1000, 721,
	567, -1000, -1000, -1000, -1000, -1000, -1000, 719, -1000, -1000,
	-1000, -1000, -1000, -1000, 3536, -1000, 25031, -1000, -1000, -1000,
	366, 715, 44733, -1000, -1000, 3598, 3597, 986, -1000, 270,
	938, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2986, 711, 710, -1000, 709, 708, 706,
	703, 699, -1000, -1000, -1000, 696, 694, 693, 692, 689,
	687, 680, 676, -1000, 2090, -1000, -1000, -1000, -1000, -1000,
	-1000, 616, 615, 615, 615, -1000, 1015, -1000, -1000, -1000,
	285, 614, 265, 613, 611, 610, -1000, 675, 674, 673,
	661, 659, 657, 656, 653, 651, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1013, -1000, -1000, -1000, -1000, -33, 110844,
	-1000, 458, -33, -1000, -1000, 649, -1000, 33109, 33109, 33109,
	-1000, -1000, 2277, 44733, -1000, 3071, -1000, -26, -26, 852,
	53705, -1000, 50982, 852, 530, 789, 59238, -1000, 2918, -1000,
	-1000, 642, 269, -1000, -1000, -1000, -1000, 22750, 2917, 110844,
	110844, 88638, 88638, 88638, 3695, 3174, 44733, -1000, -1000, 67370,
	110844, 89714, -1000, -1000, 3478, 64113, 66827, 110844, 2982, 66289,
	3688, -1000, -1000, -1000, -1000, -1000, 3148, 3687, 3685, 3684,
	-1000, 110844, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 211,
	3147, -1000, -1000, 92942, 211, 3145, -1000, 211, 3142, -1000,
	92404, -1000, -1000, 2222, 3141, -1000, -1000, 216, 3137, -1000,
	-1000, -1000, 212, 3135, -1000, -1000, 258, -62, 3133, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 122627, -1000, -1000, -1000, 65744, -1000, 3270, -1000, -1000,
	110844, -1000, 44733, -1000, 3477, 1662, 73436, 3392, -43, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2546, 2589, 1097, 2326,
	-1000, 3192, 1692, -1000, 30813, 3233, -1000, -1000, -1000, 257,
	22750, -1000, -1000, -1000, -1000, -1000, -1000, 2303, 3132, 1354,
	-1000, 2325, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1984, 3130, -1000, 2096, 3123, 1926, -1000, -1000, 2834, -1000,
	3263, -1000, -1000, 2130, 3122, -25, -1000, -1000, 2393, -1000,
	-1000, 2023, -1000, 966, 3120, -1000, 83195, 57045, 55359, 69559,
	-37, -1000, -1000, -1000, -1000, -182, -1000, 21084, 122627, -1000,
	-1000, -1000, -1000, 1696, 122627, 885, -1000, -1000, 3119, -1000,
	122627, 882, -1000, -1000, 3117, -1000, 2981, -1000, -1000, 2405,
	-1000, -1000, 3682, -1000, -1000, 3681, -1000, 3680, 3678, 3677,
	-1000, 1688, 2056, 3676, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 82657, 2273, -1000, -1000, 81567, 2950, -1000, 2404,
	3381, -1000, 82112, 1019, -1000, 966, 2399, -1000, 91866, 910,
	2398, -1000, 3675, 3358, 2727, 966, 2382, -1000, -1000, -1000,
	-1000, -1000, 1003, -1000, 60863, -1000, 60863, -1000, 1559, -1000,
	115148, -26, 88638, 3536, -1000, -72, -1000, -1000, -1000, 998,
	-1000, 54251, -1000, 54251, 95108, 72893, 943, 756, 62483, 122627,
	-1000, -1000, -1000, -1000, 122627, -1000, -1000, -1000, -210, 2757,
	-1000, 72893, 56483, 122627, -1000, -1000, -1000, -1000, 122627, -1000,
	-1000, -1000, 72893, 81567, -1000, 101600, 81029, -1000, -1000, 1406,
	2624, -1000, -1000, -1000, 72893, 1278, 72893, 72893, 72893, -1000,
	101055, -1000, -1000, 2003, 1584, 3266, 1974, 88638, -1000, 1921,
	-1000, -1000, -1000, 3299, 110844, -1000, -1000, 2949, -1000, 65198,
	91328, -1000, 90790, -1000, 90252, -1000, 88638, -1000, 88638, -1000,
	3674, 3673, 3672, -1000, -1000, 3669, -1000, 3668, 3291, -1000,
	122627, 3286, -1000, 3667, 3364, 2947, 122627, -1000, 3115, 1656,
	1646, 110844, -1000, -1000, 110844, -1000, 110844, -1000, -1000, -1000,
	1496, -1000, -1000, 2536, -1000, -1000, -1000, -1000, 88638, 1362,
	-1000, -1000, -1000, -1000, -1000, -1000, 3031, 3666, 1735, -1000,
	1806, -1000, 2915, 3298, -1000, 1402, -1000, -1000, 222, -1000,
	-1000, -43, -1000, 114610, -1000, 2518, -1000, 110844, -1000, 2520,
	2939, 2946, 1657, 2306, 2594, -1000, 38915, 2573, 48159, 2318,
	133, -1000, -1000, 133, 133, 30242, -1000, -1000, 64113, 64113,
	22750, 1347, 44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733,
	44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733,
	44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733, 44733,
	44733, 44733, 44733, 44733, 44733, 44733, 44733, 2125, 44733, 1295,
	44733, 44733, 44733, 44733, 1999, -1000, -1000, 1876, 492, 2180,
	-1000, 3526, 3526, 3526, 671, 671, 12260, 12260, 596, 3664,
	781, -1000, 44733, -1000, 99, 44733, 23306, -1000, 414, 9076,
	2486, -1000, 411, 23889, -1000, -1000, -1000, 25031, 567, 38332,
	44733, 1004, 122627, -1000, -1000, 1699, 3550, 20529, 2942, 2794,
	633, 822, 733, 27934, 27351, 26768, 26185, 716, 44733, 44733,
	44733, 44733, 44733, 44733, 44733, 44733, -1000, -1000, 3563, -1000,
	3550, -1000, -1000, -1000, -1000, 3550, 1346, 1314, 3550, -1000,
	3550, 3550, 6517, 6517, 37761, 37178, 36595, 48730, 36012, 44733,
	25602, 35429, 34846, -1000, 110844, -33, 3476, 44733, 172, -1000,
	121435, -1000, 172, 172, 632, -78, 122627, 2722, 2722, 52618,
	2251, 2187, 2187, 2187, -1000, 852, 16060, 852, 99974, 2203,
	852, 852, 238, 289, 404, 50438, 3071, 99974, 748, 628,
	-10, -17, -18, -1000, -1000, -19, -20, -1000, -1000, 88638,
	627, 23306, 22750, 235, 1493, -79, 2657, 2654, 2653, -1000,
	2652, -1000, 1718, -84, 1294, 88638, 110844, 3662, -151, -1000,
	261, -85, -1000, 1276, 233, 3550, -1000, -1000, -1000, -1000,
	-1000, 3661, 3660, -1000, 1012, 618, 617, 652, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 616, 615, 615, 615,
	-1000, 285, 614, 265, 613, 611, 610, -1000, -1000, -1000,
	-1000, -1000, 2914, 88638, 110844, 3658, -182, 89714, -36, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 110844, -1000, -1000,
	-1000, 3657, -1000, 88638, -1000, -1000, 88638, 211, 3116, -1000,
	88638, -1000, 88638, 209, 3112, -1000, -1000, 110844, -1000, 88638,
	88638, -1000, 110844, 110844, 110844, 72893, 72893, 218, -1000, 88638,
	873, -86, 1129, -43, -1000, -1000, -1000, 1677, -1000, 1575,
	-1000, -1000, -1000, -1000, -1000, -1000, 1413, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 986, -1000, -1000, -1000, -1000,
	-1000, -1000, 3554, 3552, -34, -1000, -1000, 22750, -1000, -48,
	1610, 2070, 1292, -1000, 75593, 2428, 3273, 3656, 2719, 3255,
	1550, -1000, 1491, -1000, 3354, 79401, 3426, 3436, 987, -1000,
	2909, -1000, -1000, 900, 1689, 1691, 1291, 1290, 79401, 2096,
	-1000, 64113, -1000, 2619, 3331, 1328, 1424, 1328, 1328, 1357,
	-1000, 79401, 1660, 1236, 1232, 1227, 2018, 2013, 2928, 2928,
	2065, 2928, 1226, 1225, 804, 1995, -1000, -50, 3412, 3411,
	183, -1000, 2902, 1224, -1000, -1000, -1000, 3330, 88638, 22750,
	1545, 1542, 1538, 1648, 1222, -35, -1000, 3396, 1220, 1219,
	-1000, 4807, -1000, 72893, 1880, 3110, 2755, 848, 2750, -1000,
	-1000, -1000, 848, -37, 69559, 110844, 232, -1000, 99, 44733,
	44733, 99, 44733, 99, 3362, 3109, -1000, -1000, -1000, -1000,
	-1000, 3655, 1977, 2560, -1000, -1000, 605, 2381, 2889, 110844,
	2676, -38, 88638, -1000, 64655, 3104, 67913, 2096, 2380, -1000,
	-1000, 80484, -1000, 3101, 458, 2378, -1000, 437, 3653, 3099,
	-1000, 114072, -1000, 3270, 1356, 3096, 1075, 380, 3474, -1000,
	380, 61407, -1000, 110844, -1000, -26, 4826, 74517, -87, -93,
	402, -1000, 100517, 110844, 1073, 75055, 110844, 3222, 962, 55359,
	-1000, 55359, -98, -210, 2748, 1447, 943, 943, 848, -1000,
	848, -1000, 88638, 2945, -1000, -1000, 72893, 943, 943, 943,
	-1000, -1000, -1000, -1000, 3651, 3649, 3648, 3647, -1000, -1000,
	964, 88638, 110844, 88638, -1000, 229, -1000, 110844, -1000, 110844,
	110844, 88638, -1000, 964, 110844, 964, 110844, 964, 110844, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 99, 44733, -1000, -1000,
	3645, 1580, -1000, 2941, -1000, 2940, -1000, 12, -1000, -1000,
	-1000, -1000, -1000, -1000, 1937, -1000, -1000, -1000, -1000, 88638,
	88638, 88638, 88638, 110844, 3204, -1000, 110844, 3202, 88638, -1000,
	79401, -1000, 2520, 2939, -1000, -1000, -1000, -1000, -1000, -1000,
	1372, 2245, -1000, 2616, -1000, 1514, -1000, -1000, -1000, 122627,
	49301, -1000, -1000, 122627, 1820, -1000, 47588, 47017, -1000, -1000,
	1666, 88638, 2685, -1000, 2685, -158, -1000, 121174, 2609, 88638,
	-1000, -1000, -1000, -1000, -1000, 896, 1359, 1359, 1298, 1298,
	1298, 1298, 3419, 351, 481, 1972, 6180, 6180, 529, 529,
	529, 529, 529, 6180, 1105, 671, 671, 1105, 1105, 1105,
	1105, 1105, 671, 671, 671, 6180, 6180, 6180, 12260, 11628,
	8353, 44733, 44733, 1218, 1875, 492, 8303, 44733, 7365, 7365,
	7365, 7365, -1000, 2232, -1000, -1000, -1000, -1000, 2884, 604,
	48730, 48730, -1000, -1000, -1000, -1000, 24460, 44733, -1000, -1000,
	-1000, -1000, 34263, -1000, -1000, 120539, -318, 400, -99, 11,
	-1000, 44733, 44733, 44733, 399, -1000, 227, 44733, 110844, -1000,
	117398, 745, -137, -1000, -103, 1405, -1000, 44733, -1000, -1000,
	1216, -1000, 1204, 1201, 1200, -1000, 603, 398, -1000, 226,
	-1000, 2171, 597, 595, 44733, -1000, -1000, -1000, -1000, -1000,
	120359, -1000, -1000, 120161, -1000, -1000, 119938, -1000, -1000, 119900,
	-1000, -1000, -1000, 122478, 117347, 117309, 15208, 8098, 14519, 13873,
	-104, 397, -114, 396, 887, 883, 394, 393, 392, -115,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -120, 391, -1000, 2882, -99, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 389, -1000, 388, -1000, 122255,
	-99, 386, 5288, -1000, 48730, 48730, 48730, -1000, 382, -1000,
	120983, -1000, 122217, 33692, 33692, 33692, 381, 121845, 44733, -99,
	-121, -1000, -122, -1000, -1000, 532, -123, 996, 33109, 51528,
	22750, -1000, 996, 996, 44733, -1000, 44733, 2640, -1000, -1000,
	-1000, -1000, 2635, 1756, 2722, 52618, -1000, -1000, -1000, -1000,
	99974, -1000, 3536, 2706, -1000, 99974, -1000, -1000, 110844, 458,
	-1000, 99974, 99974, 22750, 852, -1000, 852, 99974, 574, -1000,
	-1000, -1000, -1000, -1000, 378, 58150, 11, 207, 22750, 966,
	-1000, 2664, 2664, 2664, 2664, -1000, -1000, 110844, 1199, -40,
	-92, -1000, 3504, -1000, 2103, -1000, 64113, -1000, 771, 1014,
	22750, -1000, -1000, -1000, 585, -1000, 3550, 3550, -1000, 3550,
	110844, 2875, 150, -1000, 110, 67913, 67913, 3642, -1000, -1000,
	211, -1000, 88638, 211, 211, -1000, 88638, 88638, 2222, -1000,
	216, -1000, 212, -1000, -1000, -62, -1000, 993, 30813, -1000,
	1677, -1000, -1000, 1544, -1000, 1981, -1000, 1158, -1000, -1000,
	-1000, -1000, 30813, -1000, 2688, 110844, 110844, 88638, -1000, 110844,
	-1000, 2088, 3500, 1909, 2535, 2530, 67913, -1000, 2374, 113534,
	2363, 64113, 110844, -1000, -1000, 582, 895, 2605, 2590, 1067,
	110844, 110844, 2587, 112996, 112458, -1000, 3640, 110844, 2040, 44733,
	3329, 2206, 2265, 99, 99, -1000, -1000, 99, 581, 1296,
	88638, 88638, 110844, 67913, 88638, 1864, -1000, -1000, -1000, -1000,
	-1000, 79939, -1000, -1000, 3562, 3561, -1000, 1328, -1000, -1000,
	-1000, 1328, 2096, 1858, 110844, 67913, 88638, 67913, 110844, 110844,
	-1000, -1000, -1000, 2928, -1000, 1627, 110844, 1397, -1000, 804,
	2115, 99, 99, -1000, -1000, 99, 579, 22750, 1903, -1000,
	2992, 110844, 3591, 111920, 3587, 110844, 110844, 110844, 67913, 3285,
	110844, 110844, 67913, 4807, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 69021, 1080, 966, 1616, 1197,
	1196, 79401, 55359, 960, 55359, 2733, -1000, -1000, 19974, -1000,
	122627, 122627, -1000, 122627, -1000, 64655, 110844, -1000, 1017, 110844,
	75055, 933, 3090, 60319, -182, 943, 72893, 88638, -38, 2676,
	110844, -1000, -1000, 2096, 3088, 458, 2370, -1000, 72893, 3472,
	3087, 578, 3639, 3637, -1000, 88638, 2271, 2369, -1000, -1000,
	111382, 3124, 804, 110844, 996, 52618, 1890, -1000, 58695, 1045,
	110844, 1815, 108, -1000, -1000, -1000, -3, 110844, -1000, 788,
	-1000, -1000, 4826, 4826, 943, -190, 577, -1000, 846, 843,
	55921, 72893, -140, -1000, -1000, -1000, -1000, 2363, 88638, 110844,
	1273, 2725, 110844, -141, -1000, 206, 572, -1000, 2391, -1000,
	-210, -1000, 962, 55359, 2873, 2871, -1000, -1000, 992, -1000,
	1398, 943, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -27, 110844, -182, -182, -39, -40, -1000,
	964, -1000, 964, -1000, 964, -1000, 122627, -1000, -1000, 1577,
	1565, 110844, -1000, 22750, 110844, 88638, 22750, 88638, 2937, 2936,
	-1000, -1000, -1000, 110844, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1098, -1000, 1820, 2238, -1000, 567, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2480, -1000, -41, 30242,
	859, -1000, -1000, 88638, -29, 44733, 44733, 7800, 6685, 44733,
	48730, 48730, -1000, 44733, 6415, -1000, -1000, -1000, -1000, -1000,
	2868, 566, 44733, 64113, 5502, 5023, -1000, 376, 13413, 1105,
	-1000, 44733, -1000, 373, 32538, -1000, 121584, -57, -146, -1000,
	16628, -99, -148, -1000, -1000, 769, -1000, 3156, -1000, 44733,
	121807, 2439, 2112, 1763, 1589, 3550, 3586, 19419, -1000, 61945,
	999, 2210, 119512, -1000, -1000, -1000, -1000, 64113, 64113, 44733,
	44733, -1000, 44733, 44733, 44733, -1000, -1000, -1000, 3550, 860,
	-1000, -1000, -1000, 860, -1000, -1000, 1328, -1000, 1328, -1000,
	44733, -1000, -1000, 2838, 44733, -1000, 64113, 64113, 48730, 48730,
	48730, 48730, 48730, 48730, 48730, 48730, 48730, 48730, 48730, 48730,
	48730, 48730, 48730, 48730, 48730, 48730, 48730, 2533, 48730, 3522,
	3522, 3522, -1000, 2933, 2838, 44733, 44733, 64113, 372, 370,
	369, -1000, 44733, -99, -1000, -1000, 4826, 564, -1000, 2468,
	-1000, 2783, -1000, 44733, -1000, -134, -1000, 3071, -1000, -1000,
	2783, 2783, -149, 122627, 52618, 52618, -1000, 561, 44733, 2630,
	-1000, -1000, 744, -321, -1000, 841, -1000, -1000, -1000, -1000,
	-1000, 458, -1000, -1000, -1000, 205, 99974, 99974, 743, -1000,
	-161, -1000, -1000, -162, -1000, 3470, 367, 22750, -1000, 996,
	2686, -1000, -1000, -1000, -1000, -1000, -1000, -182, 110844, 110844,
	2211, 3585, -1000, 3560, 768, 740, 204, 3550, 361, 359,
	349, -182, 110844, 110844, 110844, -1000, -1000, -1000, -1000, 211,
	-1000, -1000, -1000, 209, -1000, -1000, -1000, -1000, 2612, -1000,
	-43, -1000, -1000, -1000, 44733, -1000, -1000, 3272, 1192, 1189,
	-1000, -1000, -1000, -1000, 2456, 1899, 89176, 3498, 1861, 1849,
	-1000, 3084, -1000, 2359, -1000, 1050, -1000, 1830, -1000, 44733,
	560, 2723, 557, 556, 3635, 1857, 3634, 1072, 3082, 2222,
	3079, 2222, -1000, -1000, -1000, 886, -1000, 122627, 2206, -1000,
	543, 538, -1000, -48, 1605, 2021, 1187, 990, -1000, -1000,
	44733, 44733, 99436, -1000, 452, 3263, -30, -1000, -1000, -1000,
	1615, 1184, 1182, -1000, -1000, -1000, -1000, 2096, 1609, 1179,
	1167, -1000, -1000, -1000, -1000, 2928, -1000, 2928, -1000, 984,
	-1000, 3021, 3016, 880, 110844, -1000, 974, -1000, -1000, 44733,
	-1000, -50, 1165, 3378, 2358, 88638, -1000, 2222, 3078, 1162,
	-1000, 1160, -1000, -1000, -1000, 3395, 3394, 1174, -1000, -1000,
	-1000, -1000, -1000, 68467, -1000, 110844, 67913, 88638, 1708, 848,
	-1000, 2527, 848, 960, 2836, -1000, 2674, 969, 88638, 3631,
	347, -167, -52, 64113, 3466, -1000, 2298, 602, 88638, 891,
	-1000, 3536, -1000, -1000, -1000, 967, -1000, 3377, 88638, 3464,
	3072, 966, 99, 88638, 3570, -1000, -1000, 3462, 88638, 3066,
	2268, 2357, 2539, 804, 73979, 966, 2209, -61, -1000, 1815,
	31955, 3261, -168, -1000, -1000, -1000, 996, 61407, 52618, 44733,
	3630, -170, -1000, -1000, -1000, -1000, -1000, 96741, 96741, 72893,
	72893, 72893, 943, 110844, 110844, 75055, -1000, -1000, 537, 110844,
	110844, 536, -1000, 110844, 110844, 3629, 72893, -53, 527, -1000,
	838, 835, 834, -1000, -1000, -1000, -1000, -1000, 962, -1000,
	-210, 55359, 99, -1000, 2226, 88638, -1000, 18864, -1000, -1000,
	-1000, -1000, -1000, -1000, 964, -1000, -1000, 2119, 2309, 2119,
	1790, 1777, -1000, -1000, 2231, -1000, -1000, -1000, -1000, 2646,
	3278, 22750, 3421, 7365, 44733, 44733, 259, 4828, 558, 7365,
	44733, 44733, 64113, 7499, -175, 44733, 44733, -1000, 44733, 738,
	122627, 3584, 44733, 338, 334, -1000, -1000, -1000, 3546, -1000,
	-1000, -1000, 122627, 44733, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 331, -1000, 201, -1000, -1000, -1000, 116762, -1000, 44733,
	330, 3326, -1000, 316, 315, 12352, 440, 119474, 119251, 119053,
	311, -1000, -1000, 310, 308, 122627, 2933, 122627, -1000, -1000,
	946, 946, 1335, 1335, 1335, 1335, 3522, 329, 897, 956,
	598, 598, 598, 782, 1139, 1139, 598, 598, 598, 2829,
	2526, 526, 6568, -1000, -1000, 122627, 122627, 307, -1000, -1000,
	-1000, -99, 306, 4826, -1000, 2779, 3325, 122627, -1000, 52618,
	2779, 2779, -1000, -1000, 1756, 110844, 122627, 52618, -1000, 2706,
	-1000, 17194, -1000, 22750, -1000, -1000, -1000, -1000, 3536, -1000,
	58150, -1000, 516, -1000, 13, -1000, 2686, -1000, 829, -1000,
	-1000, 72893, 72893, -182, -182, -1000, -1000, 737, 3627, 751,
	22750, 305, -1000, -1000, -1000, -182, -182, -182, -1000, -1000,
	-1000, 3221, 122627, 110844, 110844, 1458, 98898, 3461, 3455, 94563,
	1760, -1000, -1000, 1990, 2523, -1000, 3496, 3495, 110844, 3065,
	-1000, 2057, -1000, 1067, 118873, 53162, -1000, 53162, 110844, -1000,
	-1000, 1862, 2578, 1113, -1000, 3301, 110844, -1000, 110844, -1000,
	-1000, -1000, 110844, 110844, 88638, 110844, -1000, 67913, 3041, -177,
	122627, -54, -1000, 828, -1000, 1375, -1000, 18309, 110844, 67913,
	88638, 110844, 67913, 88638, -1000, -1000, 2163, -1000, -1000, 3015,
	-1000, 3032, -180, 22750, -1000, 3583, 3582, 3061, 3302, -1000,
	110844, 3580, 110844, 88638, 3220, -1000, -1000, -1000, -1000, -1000,
	1599, 1159, 1157, 960, -56, 515, -1000, 827, -1000, -1000,
	825, 960, -1000, 72893, 55359, 3626, 458, -1000, 2714, -1000,
	94025, 2297, 99, -1000, 3625, 97284, 509, -1000, 2225, -1000,
	717, -1000, 2446, 67913, 2096, 99, 88638, -1000, -1000, 458,
	300, -58, -1000, 3091, 1056, 22750, 88638, 3057, 2534, 804,
	73979, -1000, 1356, 2594, -1000, -59, -1000, 647, 99, 2209,
	-1000, -61, 122627, -1000, 820, -1000, -185, -1000, -1000, 299,
	-1000, 3218, 3216, -1000, 2807, 53162, 507, 506, 110844, 3215,
	-1000, -1000, -191, 2631, 2631, 72893, 55359, 72893, -1000, 962,
	848, -1000, 2406, -1000, -1000, -1000, -1000, -1000, 22750, 1653,
	-1000, 505, 504, -1000, -1000, -1000, -1000, 3278, 7365, 7365,
	44733, 44733, 44733, 7365, 7499, -192, -1000, 7365, 7365, -99,
	-1000, -1000, 121584, -1000, -1000, -1000, 122627, -1000, 17754, 2121,
	-1000, 118675, -1000, 30242, -1000, -1000, 44733, 44733, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48730, 2828, 503, 64113,
	-1000, -1000, 295, 945, 44733, 46446, 3071, 945, 945, -1000,
	-193, -1000, -1000, -1000, 3536, 13, -1000, -1000, 3623, 22750,
	-1000, 72893, -1000, -1000, 750, -1000, 3621, -1000, -1000, -1000,
	-1000, -1000, 2745, 3454, -1000, 1967, 110844, 110844, -1000, -1000,
	1961, 2519, -1000, 3453, 1153, 3452, -1000, 110844, -1000, 110844,
	-1000, 22750, 110844, 2817, 1176, -1000, 895, 2583, 502, 48730,
	88638, 884, -1000, 3489, 2798, -198, -1000, 110844, 44733, 110844,
	-199, -200, 2343, -1000, -1000, 2337, 44733, -1000, 64113, 500,
	2222, 2222, -207, -208, -1000, -1000, -1000, 44733, 1151, 110844,
	31384, -1000, 3619, 3263, -1000, -1000, -1000, -1000, -1000, -1000,
	110844, -1000, 44733, 1140, -1000, -1000, -1000, 3578, 2222, 22750,
	2222, -1000, 2222, 3302, 1112, 110844, 67913, 88638, -1000, 2366,
	2366, 72893, 55359, -1000, -62, 960, -1000, 3451, 2711, 3618,
	-1000, -1000, -1000, -1000, 2581, -1000, -1000, 110844, 2575, 949,
	-1000, -209, -1000, 819, 816, 75055, 933, 922, -1000, -63,
	498, -1000, 809, -1000, -1000, -1000, -1000, 458, 3450, -1000,
	3574, 497, 494, 110844, 2263, 493, 22750, 3257, 804, 73979,
	-1000, 3124, 1815, -1000, 2354, 110844, 3253, -1000, 2594, 492,
	-1000, 943, 491, 490, 2513, 2513, -214, 53162, 53162, -215,
	489, 943, -1000, -216, -1000, -1000, -1000, -1000, -1000, -65,
	-1000, 851, 839, -1000, -1000, 88638, 88638, 44733, 44733, -1000,
	7365, 7365, 7365, -1000, 293, -1000, -1000, 2209, 3324, -1000,
	-66, 118452, 118414, 6861, 48730, 64113, -217, -1000, -1000, 110844,
	122627, -68, -1000, 122627, 488, 485, 444, -1000, -1000, -1000,
	599, -1000, -1000, 3617, -1000, 98360, 110844, -1000, -1000, -1000,
	-1000, 3449, 110844, 97822, 110844, -1000, 1594, -1000, -1000, -1000,
	110844, 2356, -1000, -1000, -1000, 1064, 44733, 6568, 484, 44733,
	-1000, 3446, -1000, 2709, 2869, 1812, 53162, -1000, 3278, -1000,
	118026, -1000, 1053, 1940, -1000, -1000, 122627, 3302, 53162, -1000,
	-1000, 482, 479, 122627, 478, 808, 2827, -1000, -1000, -1000,
	-1000, 122627, 471, 3378, -1000, -1000, -1000, -1000, 2222, 88638,
	-1000, -1000, -1000, -1000, -222, -1000, -1000, 1959, 99, 2117,
	2742, -1000, 2297, 463, -1000, -1000, 2247, 2597, -1000, 97284,
	30813, 30813, 291, 3440, 922, -1000, 3543, -1000, 3196, 3196,
	44733, 3434, 99, -1000, 3570, 53162, -1000, 88638, 53162, 2261,
	2065, 2506, 73979, -1000, 2539, -1000, -1000, -227, 110844, 1815,
	-1000, -1000, 72893, 72893, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1053, -230, -233, -1000, 72893,
	-1000, -1000, 2406, -1000, 110844, -1000, 110844, -1000, -1000, -235,
	-238, -1000, 2011, 44733, 30242, -1000, -1000, 6861, -240, -1000,
	-73, -1000, 3430, 46446, 3615, 3612, 3611, -1000, -1000, -1000,
	1942, -1000, 110844, -1000, -1000, 1930, -1000, -1000, -1000, 3038,
	2776, 117988, 2474, 110844, 117765, -1000, 2866, -1000, -1000, 2711,
	461, -1000, -1000, -1000, -1000, 859, 110844, 2711, 2758, 88638,
	1057, -245, 2119, 2119, 44733, 29671, 2137, 44733, -1000, -1000,
	3302, -1000, 2822, 3535, -1000, 933, -1000, 2136, 110844, -1000,
	3288, -1000, 3206, -1000, -1000, -1000, 2714, 99, -1000, -1000,
	-1000, -248, 122627, 99, -1000, 286, -253, 1056, -254, 88638,
	1934, -1000, 804, -1000, 2534, 996, -1000, -1000, -255, -256,
	1812, 1053, 2115, -261, -1000, -262, -264, -1000, -1000, 283,
	45875, 45875, 45875, -99, -158, -1000, 110844, 460, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3006, 959, -1000, 2250, 1863,
	280, 1076, -1000, -1000, 2115, 110844, -1000, -1000, -1000, 958,
	458, -1000, 44733, 1053, -269, -1000, 1036, -270, -1000, 1026,
	-271, -1000, 2826, -1000, -272, 2222, 957, 3360, -1000, -1000,
	-1000, 2247, 88638, -277, -1000, -1000, 2419, -1000, 2711, 949,
	-1000, -1000, -1000, 1053, 455, 1812, 453, 1423, 804, -1000,
	-1000, 1328, 3257, 3165, 943, 943, 2711, 1812, 942, -1000,
	943, -1000, -1000, -1000, 3083, -1000, 49872, 2287, 1753, 120803,
	3083, 3083, -1000, -1000, 110844, 3347, -1000, 2255, 2252, 1480,
	-1000, -1000, -1000, -1000, -1000, -1000, 2798, -278, 3343, 2474,
	122627, 2711, -1000, 2119, 2738, -1000, 2119, 2818, -1000, 2129,
	-1000, -1000, -1000, 1668, 3520, 1619, 451, -1000, 110844, 1712,
	1697, 3609, 2117, 2247, 1812, 53162, 2711, 53162, -1000, -1000,
	110844, -1000, 2065, 1305, -1000, -1000, 2115, 2711, 996, 450,
	-1000, -1000, 1775, 3484, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 803, -1000, 3189, -1000, 1096, 1971, 1971, 996,
	-1000, 801, 2250, -1000, -1000, 449, -1000, 448, -1000, 2224,
	-1000, -1000, -1000, -1000, 110844, -1000, -1000, 3606, -1000, 933,
	-1000, 2711, -280, 2115, -283, -1000, -182, 1934, -1000, 1548,
	942, 2115, -1000, 1733, -1000, -1000, 2190, 45304, 44733, -1000,
	3508, -1000, -1000, 2552, -1000, -1000, 44733, 2798, 44733, 44733,
	59781, -285, -1000, 2247, 2115, 1053, 942, 1812, 1423, 61407,
	996, 942, -1000, -1000, -1000, 122627, -1000, -1000, -1000, 122627,
	-1000, -291, -294, -190, 96741, 2195, 1619, 942, 1812, 996,
	2711, -1000, -267, -1000, 996, 2115, 1138, -299, -1000, -1000,
	-1000, -1000, 996, 2711, -1000, 2115, -1000, -1000, -1000, -1000,
	446, -1000, -1000, 2115, 942, 44733, 942, 996, -308, 996,
	-1000, 2115, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4408, 4407, 4402, 4399, 4396, 4395, 4393, 4392, 4391,
	4390, 4387, 4382, 4381, 4380, 4368, 4362, 4361, 4360, 4359,
	4358, 4357, 4353, 4351, 4348, 4347, 4345, 4342, 4339, 4338,
	4335, 4333, 4326, 4323, 4320, 4318, 4317, 4316, 4313, 4312,
	4311, 4309, 4307, 4302, 4299, 4296, 4295, 4292, 4291, 4288,
	4287, 4286, 4285, 4282, 4281, 4280, 4277, 4274, 4268, 4267,
	4266, 4263, 4260, 53, 4259, 4258, 4257, 4255, 4253, 4249,
	4248, 4247, 4245, 4244, 4242, 4240, 4239, 4236, 4235, 4234,
	4232, 4231, 4230, 4227, 62, 4224, 258, 4223, 4221, 4218,
	4217, 4216, 4214, 4209, 4208, 4206, 4205, 4204, 4203, 257,
	4202, 140, 4201, 4199, 4198, 4196, 4195, 256, 4185, 4182,
	4179, 4178, 267, 4177, 4173, 4172, 4171, 4169, 4167, 4166,
	4165, 4164, 4161, 4153, 128, 194, 4152, 4151, 1425, 4150,
	4149, 4148, 4135, 4131, 4130, 4129, 4127, 4126, 4125, 235,
	4124, 255, 4122, 4121, 4120, 4117, 4115, 4114, 4113, 4111,
	4110, 4109, 4108, 4106, 4105, 4104, 4103, 4098, 4096, 4095,
	4092, 4090, 4087, 4086, 4084, 4080, 4079, 4074, 4073, 4072,
	4071, 4070, 4069, 4068, 4067, 4066, 4063, 4062, 230, 262,
	173, 4061, 4059, 254, 253, 4057, 4055, 4054, 4050, 4048,
	118, 5, 46, 4046, 4045, 80, 90, 86, 96, 105,
	98, 4044, 102, 4039, 132, 59, 4038, 17, 4, 285,
	226, 8334, 224, 4036, 4032, 4031, 236, 176, 4026, 225,
	4025, 4024, 4023, 4022, 69, 51, 168, 167, 161, 160,
	707, 4020, 149, 100, 74, 58, 42, 14, 70, 202,
	21, 4016, 242, 11, 129, 6, 35, 4015, 4014, 4013,
	4012, 3645, 131, 4010, 249, 227, 158, 4006, 4005, 4004,
	881, 4003, 3998, 47, 3996, 189, 77, 130, 81, 116,
	3994, 143, 31, 3993, 157, 57, 3992, 156, 93, 83,
	10534, 8710, 3991, 121, 68, 114, 1344, 185, 177, 190,
	180, 152, 153, 184, 200, 199, 166, 179, 3989, 231,
	3988, 3416, 78, 169, 3987, 3986, 3985, 84, 183, 99,
	3984, 3983, 71, 18, 3, 1, 2, 139, 28, 25,
	12, 3981, 27, 115, 45, 23, 3980, 22, 3979, 3978,
	3977, 3976, 3974, 40, 151, 3973, 263, 3970, 108, 52,
	24, 3968, 39, 204, 3965, 217, 119, 3961, 3960, 239,
	192, 191, 3959, 73, 223, 3958, 3955, 3954, 3953, 3951,
	133, 9, 123, 3949, 3945, 138, 3944, 50, 233, 182,
	3943, 60, 3942, 3941, 164, 107, 127, 261, 196, 213,
	111, 214, 170, 221, 3940, 3939, 3938, 197, 3937, 3934,
	210, 154, 3928, 3926, 193, 269, 91, 48, 124, 79,
	219, 82, 181, 147, 3925, 188, 3924, 3920, 264, 171,
	205, 8, 20, 97, 122, 3919, 7, 222, 144, 218,
	109, 3915, 5432, 2620, 2650, 3912, 3911, 148, 117, 76,
	120, 145, 245, 113, 3910, 3908, 2345, 3905, 3902, 3901,
	3900, 172, 3899, 3896, 3890, 142, 137, 212, 3888, 94,
	66, 49, 19, 112, 237, 250, 110, 220, 162, 238,
	3887, 3881, 3878, 174, 3876, 56, 104, 155, 186, 241,
	55, 3874, 92, 3873, 146, 892, 67, 141, 3871, 208,
	3862, 3861, 3859, 3858, 3857, 3855, 3853, 280, 215, 3851,
	3850, 3849, 34, 178, 3848, 244, 201, 163, 106, 43,
	3847, 87, 2347, 3846, 72, 1396, 54, 247, 1260, 248,
	3845, 3450, 95, 3844, 0, 11785, 6918, 9218, 11536, 3843,
	4951, 3839, 3838, 3836, 206, 136, 3835, 3834, 3833, 103,
	3832, 85, 3830, 3829, 64, 3828, 32, 15, 16, 30,
	26, 688, 246, 3824, 3822, 65, 126, 134, 3821, 251,
	216, 3820, 3818, 3817, 3816, 89, 3815, 41, 3813, 37,
	3812, 3811, 44, 13, 38, 3810, 3809, 198, 3807, 209,
	243, 3805, 150, 3804, 3412, 125, 3803, 3802, 3801, 63,
	61, 240, 88, 3800, 273, 3799, 3378, 3798, 3796, 29,
	3793, 3792, 229, 165, 203, 3791, 3790, 159, 3789, 3788,
	3787, 265, 3785, 3784, 3782, 36, 3780, 10, 3779, 3778,
	195, 3207, 3777, 3766, 33, 3763, 175,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 581, 581, 22, 42, 23, 43, 16, 582,
	582, 582, 582, 35, 24, 44, 28, 28, 28, 28,
	28, 398, 398, 193, 193, 193, 193, 21, 21, 38,
	38, 227, 227, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 577, 577, 229,
	229, 228, 223, 223, 583, 583, 230, 230, 230, 232,
	232, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 476, 476, 476, 509, 509, 508, 508, 508, 507,
	507, 596, 596, 597, 597, 597, 597, 597, 127, 127,
	373, 373, 373, 52, 52, 52, 52, 52, 572, 572,
	195, 195, 195, 197, 197, 196, 196, 196, 196, 75,
	75, 588, 588, 589, 589, 587, 590, 590, 590, 194,
	194, 194, 123, 123, 123, 123, 123, 123, 124, 124,
	125, 125, 198, 198, 198, 200, 200, 199, 199, 199,
	199, 199, 199, 199, 199, 204, 15, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 103, 103, 511, 511,
	512, 512, 189, 189, 190, 190, 190, 190, 191, 191,
	192, 192, 192, 66, 201, 201, 203, 203, 202, 202,
	202, 202, 202, 54, 54, 54, 54, 54, 54, 54,
	55, 55, 55, 55, 55, 56, 56, 56, 56, 56,
	56, 57, 57, 57, 57, 57, 57, 64, 64, 64,
	64, 64, 180, 180, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 72, 72, 72,
	72, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	599, 599, 600, 600, 601, 601, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 81, 81, 335, 335, 300, 300, 82, 82,
	82, 83, 83, 84, 84, 68, 68, 570, 570, 350,
	350, 467, 467, 69, 578, 578, 578, 580, 580, 579,
	579, 86, 86, 372, 372, 87, 87, 87, 87, 87,
	87, 88, 88, 88, 88, 88, 88, 88, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 96, 96, 96, 96, 96, 97, 97, 97,
	94, 94, 94, 91, 91, 91, 90, 90, 90, 95,
	95, 95, 569, 289, 289, 93, 93, 93, 92, 92,
	92, 351, 351, 98, 98, 98, 98, 301, 99, 99,
	99, 99, 99, 99, 99, 99, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 469,
	469, 100, 100, 100, 434, 434, 104, 104, 104, 388,
	388, 105, 105, 105, 105, 105, 106, 106, 106, 106,
	106, 106, 106, 126, 126, 126, 126, 126, 126, 126,
	574, 574, 343, 343, 254, 254, 254, 254, 116, 116,
	116, 116, 117, 117, 117, 118, 118, 185, 185, 133,
	133, 133, 133, 133, 132, 132, 132, 132, 132, 132,
	58, 58, 58, 59, 59, 60, 60, 61, 61, 62,
	62, 63, 63, 63, 63, 63, 135, 135, 593, 593,
	137, 134, 134, 134, 136, 136, 136, 136, 138, 139,
	139, 139, 139, 139, 139, 139, 139, 140, 140, 501,
	501, 359, 359, 499, 499, 521, 521, 500, 500, 305,
	305, 305, 305, 305, 306, 306, 306, 510, 510, 510,
	510, 510, 510, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 186, 186, 187, 188, 188, 188, 188, 188, 164,
	164, 164, 179, 179, 179, 179, 179, 179, 179, 167,
	167, 167, 151, 151, 142, 142, 142, 142, 142, 142,
	142, 146, 146, 146, 146, 146, 146, 146, 146, 143,
	143, 153, 153, 153, 153, 153, 147, 147, 148, 148,
	148, 148, 174, 174, 150, 150, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 144, 144, 144, 144, 155,
	155, 155, 155, 395, 395, 395, 178, 178, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 177,
	177, 177, 177, 177, 177, 591, 591, 592, 592, 171,
	171, 171, 171, 171, 171, 448, 448, 165, 165, 165,
	165, 170, 170, 170, 170, 173, 173, 173, 173, 378,
	378, 162, 162, 162, 163, 163, 163, 168, 168, 169,
	166, 166, 172, 172, 172, 172, 145, 145, 145, 145,
	603, 603, 603, 175, 175, 161, 161, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 604, 604,
	157, 157, 157, 156, 156, 156, 156, 159, 159, 160,
	160, 160, 160, 160, 160, 158, 149, 571, 571, 567,
	567, 567, 567, 567, 567, 567, 567, 568, 568, 568,
	568, 573, 573, 109, 109, 109, 109, 109, 119, 119,
	119, 119, 119, 110, 110, 110, 110, 110, 112, 112,
	111, 111, 111, 111, 76, 76, 76, 76, 76, 14,
	14, 14, 77, 77, 245, 245, 207, 207, 207, 324,
	324, 208, 208, 313, 313, 313, 313, 205, 205, 206,
	206, 78, 78, 605, 605, 605, 584, 584, 584, 585,
	585, 585, 585, 585, 585, 307, 307, 308, 308, 414,
	414, 414, 414, 414, 311, 311, 311, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 314, 314, 231, 231,
	231, 322, 323, 323, 315, 315, 321, 320, 320, 319,
	319, 318, 318, 316, 317, 317, 317, 326, 326, 325,
	328, 328, 327, 413, 530, 530, 532, 532, 532, 532,
	532, 532, 532, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 396, 396, 606, 606, 528,
	528, 528, 529, 524, 524, 525, 525, 525, 525, 525,
	309, 309, 310, 310, 310, 310, 526, 527, 341, 341,
	452, 531, 531, 533, 533, 535, 607, 607, 607, 607,
	607, 607, 608, 608, 608, 412, 412, 411, 411, 333,
	333, 536, 536, 536, 536, 537, 537, 537, 537, 537,
	540, 539, 538, 538, 538, 538, 538, 80, 80, 80,
	375, 375, 374, 374, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 182,
	182, 257, 257, 74, 74, 74, 12, 12, 12, 586,
	586, 586, 79, 79, 79, 79, 79, 79, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 576, 576,
	575, 575, 258, 258, 610, 610, 85, 85, 85, 85,
	85, 85, 85, 85, 470, 470, 471, 471, 73, 73,
	73, 73, 73, 397, 397, 394, 394, 393, 393, 340,
	340, 450, 450, 450, 451, 262, 262, 263, 263, 224,
	224, 224, 30, 29, 20, 20, 25, 25, 26, 26,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 27, 27,
	46, 46, 46, 46, 47, 47, 47, 47, 50, 50,
	51, 51, 45, 45, 45, 45, 48, 48, 41, 41,
	594, 594, 595, 595, 115, 115, 120, 120, 120, 120,
	120, 121, 121, 121, 121, 122, 122, 122, 122, 131,
	131, 181, 181, 181, 181, 181, 181, 181, 53, 53,
	53, 53, 65, 65, 65, 65, 129, 612, 612, 612,
	130, 130, 130, 611, 611, 255, 255, 408, 408, 409,
	409, 613, 613, 410, 410, 410, 410, 410, 248, 247,
	249, 249, 250, 250, 71, 71, 71, 240, 240, 239,
	237, 237, 513, 513, 242, 242, 242, 243, 243, 233,
	233, 234, 234, 235, 235, 236, 236, 246, 246, 614,
	614, 107, 107, 107, 184, 184, 299, 299, 299, 405,
	405, 405, 334, 334, 269, 269, 407, 407, 407, 407,
	371, 371, 371, 183, 183, 348, 348, 361, 361, 362,
	362, 464, 464, 363, 113, 113, 114, 114, 128, 128,
	211, 211, 209, 209, 209, 209, 209, 209, 209, 209,
	216, 216, 217, 217, 218, 218, 219, 220, 220, 220,
	220, 352, 352, 221, 221, 221, 210, 210, 210, 212,
	212, 212, 212, 212, 212, 212, 215, 215, 215, 215,
	222, 222, 222, 214, 214, 547, 547, 547, 549, 549,
	551, 551, 550, 550, 546, 546, 548, 548, 609, 609,
	377, 377, 377, 331, 332, 329, 329, 330, 330, 338,
	338, 336, 337, 337, 339, 339, 449, 449, 449, 225,
	225, 225, 368, 368, 368, 368, 369, 369, 401, 401,
	399, 399, 399, 399, 400, 400, 402, 402, 402, 403,
	403, 404, 404, 365, 365, 366, 366, 367, 367, 367,
	367, 430, 430, 213, 213, 213, 345, 345, 345, 346,
	346, 420, 420, 420, 420, 420, 420, 421, 421, 419,
	419, 419, 419, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 454, 455, 455, 347, 347, 456, 406, 406,
	565, 565, 565, 566, 566, 447, 447, 457, 457, 457,
	457, 457, 457, 445, 445, 446, 446, 465, 466, 466,
	381, 381, 381, 381, 379, 379, 382, 382, 382, 382,
	382, 380, 380, 458, 458, 458, 458, 370, 370, 459,
	459, 459, 459, 460, 461, 461, 462, 462, 415, 416,
	416, 472, 472, 472, 472, 474, 344, 344, 344, 344,
	344, 523, 522, 522, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 489, 489, 489, 489, 489,
	489, 489, 475, 475, 475, 475, 475, 479, 479, 479,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 480, 480, 485, 485, 486, 486, 486, 481, 482,
	487, 487, 487, 487, 615, 615, 491, 491, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 477, 477, 477,
	484, 484, 484, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 389, 389, 391, 391,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 424, 424, 424,
	424, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 541, 541, 541, 541,
	541, 541, 541, 541, 426, 426, 544, 544, 545, 545,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 552,
	552, 553, 553, 555, 555, 556, 556, 557, 558, 558,
	558, 559, 560, 560, 554, 554, 561, 561, 561, 561,
	562, 562, 563, 563, 563, 563, 563, 564, 564, 564,
	564, 564, 436, 436, 437, 437, 443, 443, 443, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 259, 259, 259, 259, 259,
	357, 357, 355, 355, 355, 358, 358, 356, 356, 354,
	354, 353, 353, 433, 433, 431, 431, 435, 435, 383,
	383, 490, 490, 490, 490, 490, 490, 490, 490, 384,
	384, 384, 392, 385, 385, 386, 386, 386, 386, 386,
	427, 428, 387, 387, 387, 429, 429, 438, 442, 442,
	441, 440, 440, 439, 439, 417, 417, 418, 418, 364,
	364, 616, 616, 360, 360, 463, 463, 463, 463, 303,
	303, 349, 349, 302, 302, 294, 294, 295, 295, 295,
	295, 342, 342, 444, 444, 492, 492, 493, 493, 494,
	494, 495, 495, 496, 497, 498, 432, 432, 279, 278,
	266, 267, 277, 276, 275, 265, 268, 272, 273, 274,
	270, 271, 285, 284, 283, 238, 241, 290, 291, 291,
	293, 293, 292, 292, 281, 282, 468, 264, 296, 296,
	297, 297, 297, 298, 298, 298, 298, 260, 260, 261,
	261, 286, 286, 287, 288, 288, 280, 280, 280, 251,
	251, 251, 252, 252, 253, 253, 506, 506, 503, 503,
	503, 504, 504, 504, 505, 505, 505, 505, 502, 502,
	502, 502, 502, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 515, 515, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 517, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 520, 520,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 7, 7, 5, 5, 6, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 5, 4, 4, 7, 7, 9, 8,
	9, 1, 0, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 3, 3, 0, 4,
	6, 0, 5, 7, 6, 8, 8, 2, 1, 3,
	1, 3, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 5, 2, 6, 4, 7, 7, 7, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	4, 3, 3, 5, 3, 4, 3, 5, 3, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 3, 2, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 13, 16, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 2, 8, 4,
	2, 5, 5, 5, 2, 2, 0, 1, 3, 11,
	12, 9, 5, 3, 1, 5, 10, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 5, 2, 4, 4, 6, 3,
	5, 3, 5, 4, 4, 5, 5, 7, 3, 3,
	4, 4, 6, 3, 6, 7, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 12, 15, 3, 1, 0, 4,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 585, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 33, 32, 101, 81, 155,
	129, 138, 202, 381, 423, 434, 395, 143, 415, 400,
	-136, -137, 451, -53, -65, -130, -129, 74, 130, 409,
	-4, -12, -15, 30, 47, -55, -56, -57, 63, -74,
	-70, -81, -75, -68, -69, -72, -598, 103, -548, -89,
	-92, -122, -602, 162, 220, -110, -111, 364, -117, -118,
	417, -120, -121, 419, 163, -60, -59, 157, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 456, -169,
	516, 50, 470, 83, 147, 427, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -547, -90, -91, -94, -96, -97,
	-93, -95, 416, -212, -210, 582, 531, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 551, 560, -215, -213, -214, -222, 443,
	539, 490, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, -301, 2, -281, -286, -287, -288,
	-280, -251, -517, -520, 4, -514, -518, 169, 229, 327,
	21, 23, 22, 24, 25, 26, 27, 28, 30, 31,
	42, 43, 45, 46, 47, 48, 49, 50, 54, 56,
	60, 61, 62, 63, 64, 65, 69, 74, 75, 80,
	81, 82, 83, 84, 85, 86, 92, 89, 90, 91,
	93, 95, 97, 98, 99, 100, 101, 102, 104, 105,
	106, 108, 109, 110, 118, 119, 120, 121, 122, 124,
	129, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 498, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 189, 190, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 203, 207,
	209, 210, 211, 212, 213, 219, 220, 222, 223, 224,
	225, 230, 231, 232, 236, 233, 242, 243, 247, 248,
	249, 251, 255, 256, 257, 258, 259, 260, 262, 264,
	263, 266, 269, 270, 273, 277, 278, 282, 283, 279,
	284, 285, 287, 288, 291, 289, 292, 293, 290, 294,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 295, 310, 308, 312, 313, 314, 325, 323,
	318, 319, 315, 320, 316, 317, 321, 322, 329, 330,
	333, 217, 335, 336, 339, 357, 343, 344, 345, 348,
	349, 352, 355, 356, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 368, 369, 371, 372, 373, 375, 376,
	377, 379, 381, 382, 384, 385, 387, 388, 389, 390,
	391, 392, 393, 395, 397, 396, 398, 400, 402, 403,
	404, 409, 415, 411, 412, 413, 414, 416, 417, 418,
	419, 421, 422, 423, 425, 426, 427, 428, 430, 432,
	433, 436, 437, 453, 454, 472, 434, 435, 438, 439,
	440, 441, 442, 446, 444, 445, 447, 448, 449, 451,
	452, 455, 456, 458, 459, 460, 461, 462, 463, 466,
	468, 469, 470, 489, 471, 473, 477, 478, 479, 480,
	474, 475, 488, 482, 483, 485, 486, 491, 492, 493,
	494, 495, 496, 497, 499, 501, 509, 510, 511, 513,
	516, 517, 518, 519, 507, 521, 522, 525, 526, 527,
	530, 528, 529, 531, 533, 536, 537, 538, 544, 543,
	545, 552, 553, 555, 556, 557, 37, 51, 52, 55,
	57, 59, 70, 71, 72, 76, 125, 126, 154, 165,
	166, 178, 191, 192, 204, 206, 214, 215, 216, 237,
	238, 240, 245, 267, 332, 334, 350, 354, 370, 374,
	378, 380, 394, 429, 464, 476, 481, 502, 503, 504,
	505, 512, 514, 539, 540, 541, 546, 554, -301, 2,
	-281, 341, -274, 2, -251, -251, 381, 29, 2, 29,
	369, 445, 493, 495, 2, -574, -343, 2, 29, -254,
	-251, 103, 202, 443, -274, 2, -574, -343, 25, 2,
	-251, 2, 355, 22, 28, 67, 78, 99, 141, 164,
	186, 189, -601, 357, 388, 432, 447, 488, 499, 513,
	2, 543, 288, 444, 490, 229, 121, 518, 438, -586,
	436, 437, 355, 386, 425, 205, 532, -255, 2, 434,
	-251, 288, 2, 585, 95, 278, 75, 429, 448, -139,
	510, -138, 502, 438, -140, -501, 2, 310, -251, 585,
	585, 585, 29, -264, -251, 490, 229, 438, 121, 486,
	585, 2, 490, 360, 543, 444, 121, 391, 229, 518,
	189, 438, -586, 288, -572, 2, -567, 4, -518, -514,
	-295, -294, 490, 496, 121, -288, -280, 575, -287, 585,
	585, 585, 2, 248, 249, 390, 389, 448, 449, 585,
	585, 585, 585, 436, 2, 164, 22, 28, 67, 94,
	99, 127, 186, 189, 346, -599, 357, 388, 447, 488,
	492, 499, 513, -585, 471, 69, 414, 438, -584, -586,
	288, 518, 141, -393, 121, 278, 200, 526, 495, 493,
	524, 133, 236, 529, 528, 585, 585, -101, 2, 582,
	33, 32, 143, 451, -204, 490, 241, 2, -251, 585,
	585, 2, 248, 249, 436, 437, 585, 585, 187, -567,
	2, 585, 585, 2, 248, 249, 436, 437, 241, 2,
	69, 440, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 2, -179, 448, 471,
	211, 48, 47, 75, 29, 387, 80, 362, 122, 149,
	519, 203, 229, 230, 256, 94, 95, -395, 45, 249,
	248, 437, -591, 436, -448, 491, 439, 445, 485, 260,
	434, 510, 103, 533, 426, 557, 391, 392, 483, 404,
	279, 158, 4, 121, 310, 450, 502, 278, 433, 365,
	85, -609, 2, 490, -611, 2, 510, 510, 2, -611,
	2, -611, 2, -611, 2, -612, 510, 554, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, -210, -212, -211, 585, 585,
	585, 585, 585, 585, 585, -179, 448, 2, 75, 29,
	-336, -338, 523, 239, 151, 347, -209, -211, 2, -547,
	-499, 2, -422, -521, -424, 573, 574, 566, 487, 68,
	326, 558, -436, 127, 524, 341, -520, -425, -438, 154,
	429, -358, 8, 9, 5, 6, 7, -260, -426, -432,
	515, 168, 331, -298, 586, 10, 582, -544, -211, -437,
	38, 206, 66, -503, -297, -261, -475, 240, -296, -280,
	-541, -542, 4, -514, -515, -504, -478, -486, -482, -483,
	-489, -251, -517, 78, 112, 113, 111, 116, 115, 281,
	280, 117, 114, 450, 532, 67, 37, 214, 215, 245,
	332, 216, 76, -543, 142, -516, 237, 238, 464, 52,
	394, 178, 126, 125, 334, 57, 55, 540, -487, 123,
	502, 503, 504, 505, 191, 192, 59, 165, 166, 354,
	378, 481, 512, 514, 204, 267, 44, 107, 188, 235,
	218, 244, 246, 250, 268, 271, 311, 324, 328, 351,
	353, 424, 457, -615, 541, 476, 70, 71, -549, 396,
	-550, -274, -549, 585, 585, 587, 585, -329, -331, -332,
	2, 29, 139, 582, 2, -453, 2, -454, -458, -211,
	261, -457, 582, -455, 580, -281, 342, -545, 430, -541,
	-542, -260, -280, -297, 4, -514, -516, 584, -333, 582,
	121, 490, 79, 229, 164, -388, 582, -251, 29, 341,
	506, 587, -330, 385, -434, 582, 341, 187, 344, 61,
	292, 2, 2, 2, 2, 2, 214, -251, 490, 120,
	2, 259, 2, 2, 2, 2, 2, 2, 2, -351,
	214, 2, -281, 543, -351, 214, 2, -351, 214, 2,
	-394, 2, 88, -265, 214, 2, -251, -289, 214, 2,
	-284, -286, -293, 214, 2, -291, -251, -512, 214, 2,
	-511, -506, 10, -505, 5, 4, -514, -518, -515, -517,
	78, -422, 2, -128, 2, 61, -251, 543, 2, 2,
	453, 2, 582, -139, 72, 510, 44, 448, -409, 2,
	-410, -247, -248, -249, -465, -250, 247, 384, 393, 561,
	131, 326, 557, -499, -593, 187, 565, 506, -499, -359,
	584, 2, 2, 2, 2, 2, 2, -458, 214, -281,
	2, -278, -502, 4, -514, -518, -515, -519, 29, 32,
	33, 34, 36, 38, 39, 40, 41, 58, 66, 67,
	73, 77, 79, 88, 94, 103, 111, 112, 114, 113,
	115, 116, 117, 127, 131, 135, 139, 140, 144, 147,
	151, 168, 170, 183, 186, 187, 202, 205, 208, 221,
	234, 239, 241, 261, 265, 272, 280, 281, 326, 331,
	337, 341, 342, 346, 347, 367, 383, 399, 420, 443,
	450, 467, 484, 490, 500, 506, 508, 515, 523, 524,
	532, 534, 542, 547, 548, 549, 550, 551, -520, 2,
	-458, 214, 2, -283, 214, -458, -286, 2, -265, 2,
	-277, -502, 2, -302, 214, -281, -282, -286, -284, 2,
	2, -291, 2, -511, 214, 2, 543, 241, 506, 587,
	-349, -294, -295, -498, 8, -342, -251, 584, -422, 2,
	-128, -112, 2, 183, -422, 214, 2, -128, 214, 2,
	-422, 214, 2, -128, 214, 2, -588, 2, -511, 214,
	-251, 2, 292, 2, 2, 513, 2, 99, 490, 120,
	2, 413, -600, 432, 517, 2, 2, 2, 2, 2,
	2, 2, 490, -270, 2, -251, 183, 474, -291, 214,
	-292, 2, 444, -610, 396, -511, 214, 2, 543, -284,
	214, 2, -284, 229, 243, -265, 214, 2, 495, 493,
	495, 493, 187, 2, 241, 2, 241, 2, -459, 2,
	-460, -454, -461, 580, 342, -469, 2, -468, -505, 539,
	-101, 582, -101, 582, 448, 582, -511, -281, -281, -422,
	2, -128, -112, 2, -422, 2, -128, 2, -125, -511,
	-124, 582, 187, -422, 2, -128, -112, 2, -422, 2,
	-128, 2, -204, 183, 2, 121, 490, -179, 2, 183,
	534, 2, 8, 2, 221, -511, 439, 392, 175, 2,
	453, 2, 454, 75, -395, 557, 75, 187, 2, 187,
	2, -378, 2, 551, 187, 2, 2, -571, 2, 341,
	187, 2, 187, 2, 187, 2, 187, 2, 187, 2,
	-178, 449, 511, 489, 389, 249, 2, -128, 548, -112,
	-422, 548, 2, -592, 183, 437, -422, 2, 509, 258,
	159, 187, -378, 2, 187, 2, 187, 2, 5, 2,
	390, 472, 2, 247, 384, 472, 2, -281, -603, 29,
	2, 490, 543, 444, 2, 2, 89, 90, 187, 2,
	187, 2, 201, 187, 2, 187, 557, 2, -370, -458,
	-408, -409, -408, 506, -336, -338, -179, 453, 2, -216,
	-368, -218, 183, -399, -400, -219, 272, 170, 337, -220,
	-377, 29, 139, -377, -377, 61, 583, 583, 11, 12,
	77, 42, 573, 574, 575, 576, 181, 577, 578, 571,
	572, 570, 563, 564, 568, 253, 254, 96, 567, 565,
	87, 286, 431, 171, 172, 173, 174, 410, 227, 35,
	228, 14, 15, 16, 34, 346, 271, 558, 218, 457,
	566, 17, 18, 19, 244, 246, 328, 51, 221, -259,
	-304, -422, -422, -422, -422, -422, -422, -422, 353, 582,
	-364, -417, 580, -211, 582, 582, 582, -498, -211, -422,
	-436, 583, -356, 582, -211, -436, -431, 582, 429, 580,
	582, -439, -422, 5, 5, 5, 582, 584, -552, 552,
	183, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 380, -480, 582, -479,
	582, -479, -479, 544, -477, 582, 560, 553, 582, -477,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 544, 587, -549, -333, 582, -360, -463,
	-422, 575, -360, -360, 341, -353, -422, 107, -381, 250,
	311, 188, 268, 424, 235, -419, 586, -419, -447, 560,
	-211, -455, -280, -211, -457, 582, -453, -447, -102, -498,
	-86, -99, -107, -128, -141, -183, -184, 575, -281, 582,
	187, 582, 584, -502, 187, -342, -265, -281, -296, -297,
	-302, 2, 138, -353, -567, 518, 438, 444, -342, -254,
	39, -433, -472, -473, -523, 586, -522, -475, -485, -481,
	-484, 370, 374, -504, 55, 540, -487, 240, 4, -514,
	-516, 237, 238, 464, 52, 394, 178, 126, 125, 334,
	57, 502, 503, 504, 505, 191, 192, 59, 541, 476,
	70, 71, -567, 518, 438, 444, -342, 183, -509, 2,
	-508, -507, 117, 450, -505, 5, 2, 154, 2, 2,
	2, -251, -230, 587, 65, 418, 154, -351, 214, -230,
	154, -230, 154, -303, 214, -302, -230, 154, -230, 587,
	154, -230, 587, 154, 584, 587, 154, -509, 2, -394,
	-501, -353, 39, -409, 2, 127, -507, -613, 587, 270,
	-306, 285, 325, 210, 342, 555, 335, 131, -510, 5,
	4, -432, -444, 127, 278, 240, -492, -494, 8, -493,
	9, -495, 573, 574, -500, -499, 110, 584, -502, -227,
	411, 451, 356, -226, 24, 30, 143, 231, 314, 537,
	160, -319, 232, -316, 360, 154, 468, 527, -581, -582,
	435, 497, 498, 91, 335, 451, 356, 411, 154, -374,
	-376, 39, 119, 314, 355, 62, 224, 290, 291, 470,
	546, 154, 451, 356, 411, 356, 24, 143, -242, -239,
	451, -582, 100, 411, 482, 383, -582, -229, 468, 527,
	-581, -582, 435, 411, -228, -321, -316, 360, 154, 586,
	24, 143, 411, 451, 356, -596, -597, 30, 411, 356,
	-575, -546, 551, 154, -458, 214, -589, -124, 262, 5,
	10, -511, -124, -349, 587, 587, -502, 575, 437, 436,
	154, 154, 154, 154, 183, 326, 2, 2, 2, 2,
	2, 189, -584, -601, 2, 2, -281, 214, -335, 341,
	-570, -350, 490, -281, 183, 326, 44, -283, 214, 2,
	-286, 543, -575, 326, -285, 214, -281, 39, 582, 326,
	2, -394, 2, 229, -546, 326, -459, -299, -281, -454,
	-299, 451, -274, 39, -419, -281, 583, 587, -469, -469,
	-511, -192, 551, 187, 103, 582, 582, -204, -466, 587,
	-465, 221, -512, -125, -511, 414, -511, -570, -265, 2,
	-281, 2, 490, 251, -511, -192, 221, -511, -511, -511,
	-501, 29, 454, 2, -178, 449, 511, 90, 454, 2,
	-281, 490, 121, 229, 81, -251, -573, 183, -568, 425,
	438, 518, -567, -281, 121, -281, 121, -281, 121, -281,
	-281, 2, 2, 2, 2, 2, 86, 86, 2, 47,
	-592, 183, 2, 509, 2, 509, 2, -251, -251, -251,
	471, 270, -281, 491, -604, 2, 187, 183, 2, 490,
	229, 490, 229, 121, 187, 75, 121, 29, 490, -230,
	587, -255, -216, -368, -501, -369, -368, -217, -216, -219,
	183, 393, 528, 314, 455, 255, -400, -399, 29, -422,
	-404, 177, 313, -422, -402, -424, 573, 574, -493, -495,
	-352, 335, -210, -210, -210, -339, -449, -422, 383, 229,
	-474, -472, -472, -279, -502, 502, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, 271, 218, 457, 51, 221, -422, 506, -422, -422,
	-422, -422, 308, 326, 331, 515, 168, 525, 139, 335,
	-616, 484, 41, -429, -211, -357, 582, -443, 36, 467,
	29, -436, 582, 2, -417, -422, -418, -354, -353, -353,
	583, 542, 29, 139, 575, 2, 583, 587, 39, 583,
	-422, -354, -435, -431, -353, -442, -441, 548, -389, -390,
	556, 295, 124, 212, 293, -391, 442, -496, 8, -502,
	575, -553, 176, 205, 582, 583, 2, 583, 2, 583,
	-422, 2, 583, -422, 2, 583, -422, 2, 583, -422,
	2, 583, 2, -422, -422, -422, -422, -422, -422, -422,
	-353, 8, -496, -496, 502, 502, -496, -496, -496, -488,
	370, 371, 372, 373, 273, 274, 275, 276, 374, 375,
	376, 377, 300, 301, 302, 303, 296, 297, 298, 299,
	304, 305, 306, 307, 196, 197, 198, 199, 192, 193,
	194, 195, -488, -383, 2, -490, -353, 4, 556, 295,
	124, 212, 293, 442, 5, -383, 2, -384, 2, -422,
	-353, -385, -423, -424, 573, 574, 566, -436, -386, 2,
	-422, -354, -422, 58, 265, 508, -387, -422, 187, -353,
	-353, 2, -353, 2, -550, 39, -353, -345, 587, 187,
	39, 4, -345, -345, 582, 583, 587, -382, 209, 289,
	284, 243, -382, -453, -381, 250, -379, 351, -379, -379,
	-447, -266, 580, 588, -502, -447, -446, -445, 39, -274,
	348, -447, -447, 584, 583, -446, 581, -565, 582, 585,
	585, 585, 585, 585, -281, 582, -353, -502, 584, 473,
	583, 244, 244, 244, 244, 430, 583, 506, -569, -289,
	-293, 2, 551, -101, 343, 583, 587, -344, 38, 580,
	584, -496, 2, 2, -491, 544, 582, 582, -390, 582,
	187, -569, -293, 2, -343, 587, 506, -251, 2, -281,
	-351, -230, 154, -351, -351, -230, 587, 154, -265, -284,
	-289, -291, -293, -251, -511, -512, -230, -285, -593, 583,
	510, -410, -305, 393, 466, 412, 446, 486, 8, 9,
	8, 9, 587, -502, 587, -594, 94, 506, 79, 438,
	-244, 279, 403, 314, 490, 429, 506, -413, 214, 79,
	-524, -268, 94, -525, -251, 73, 524, 383, 186, 152,
	-594, 94, 383, -594, 94, 2, 231, 94, 451, 471,
	29, 61, -458, 42, 42, 29, -128, 266, 187, 557,
	490, 229, 438, 506, 506, -458, -376, -472, 119, 290,
	291, 61, -497, -492, 573, 574, -497, 61, -497, -497,
	-497, 551, -283, -458, 438, 506, 506, 506, 402, 402,
	-398, 184, -398, -239, -398, 506, 506, -614, 565, 402,
	587, 42, 42, 29, -128, 266, 187, 506, -302, -266,
	538, 43, 538, 43, 538, 506, 43, 438, 506, 587,
	43, 506, 506, -576, -256, 106, 320, 283, 321, 98,
	317, 97, 316, 104, 318, 105, 319, 545, 329, 64,
	315, 294, 322, -257, -258, 363, 536, -511, 451, 356,
	411, 154, 221, -466, 221, -466, -294, -251, 584, -128,
	-422, -422, -128, -422, -128, 47, 154, 2, -610, 259,
	582, -309, 326, 187, -342, -467, 241, 587, -350, -567,
	154, -508, -375, -374, 326, -285, 214, 2, 154, -333,
	326, 148, 582, 391, 2, 154, -267, 214, -252, -251,
	-394, -233, 494, 154, -372, 534, -405, -128, 582, 127,
	39, -405, -361, -362, -464, -363, -268, 582, -274, -419,
	-101, -468, 583, 583, 583, -191, 345, -190, -251, 5,
	-204, 534, -308, -414, -413, -528, -529, -524, 271, 229,
	524, 243, 169, -334, -269, -268, 120, -198, 551, -124,
	-125, 583, -466, 221, 474, -192, -192, -466, -466, -281,
	183, -511, -192, -192, -192, 2, 2, 2, 2, -378,
	-281, -265, -302, -281, 584, -342, -342, -293, -289, -378,
	-265, -378, -265, -378, -265, -128, -422, 2, 448, 183,
	183, 584, -378, 391, 121, 490, 360, 229, -281, -302,
	-281, -302, -265, 121, -265, 122, -281, -458, -369, -217,
	342, 255, 455, -402, -403, -424, 429, 430, -403, 429,
	430, 8, 9, 8, 9, -221, 459, 330, -351, 587,
	-224, 40, 135, 255, -281, 557, 150, -422, -422, 506,
	-616, 484, -429, 150, -422, 308, 331, 515, 168, 525,
	139, 335, 187, 582, -423, -423, 583, -355, -422, -422,
	581, 590, 583, -338, 587, -336, -422, -353, -353, 583,
	584, -353, -342, 581, 581, 587, 583, -440, -441, 144,
	-422, 506, 506, 506, 506, 582, 583, 584, -558, 352,
	582, 582, -422, 583, 583, 583, 583, 39, 587, 587,
	587, 583, 587, 587, 587, 583, 583, 583, 587, 583,
	557, 557, 583, 583, 583, 583, 587, 583, 587, 583,
	187, 583, 583, -392, 367, 583, 11, 12, 573, 574,
	575, 576, 181, 577, 578, 571, 572, 570, 563, 564,
	565, 87, 286, 431, 14, 15, 16, 244, 221, -423,
	-423, -423, 583, -427, -428, 187, 183, 39, -387, -387,
	-387, 583, 187, -353, 583, 583, 582, -551, 288, 326,
	583, -416, -415, 549, -463, -346, 2, -453, -276, -502,
	-416, -416, -353, -422, 250, 250, -380, 534, 341, -382,
	-453, -446, -498, -421, -420, 185, 40, 135, 323, 217,
	-446, -274, -333, -446, -446, -502, -447, -447, -445, 583,
	-566, -498, 583, -347, -456, -545, -338, 584, -502, -201,
	-546, -180, 5, 331, -180, -180, -180, -342, 506, 506,
	25, 368, -472, 580, 581, 8, -502, 582, -496, -496,
	-496, -342, 187, 187, 187, -508, -508, 2, -230, -351,
	-230, -230, -302, -303, -230, -230, -230, -373, 551, -499,
	-409, 522, 84, 393, 502, -499, -226, 411, -268, -268,
	-281, -290, -251, 200, 403, 361, 26, 403, 270, 270,
	-508, 326, -413, 214, -232, 326, -472, -275, -251, 582,
	-396, 553, 255, 255, 534, -268, -275, 255, 214, -268,
	214, -275, 2, -275, -577, 393, 336, -422, 61, -317,
	277, 391, 327, -227, 411, 451, 356, -128, -128, -128,
	582, -593, 534, 138, -281, -302, -281, -290, -508, -285,
	451, 356, 411, 324, -296, -497, -497, -374, 451, 356,
	411, -290, -508, -283, -508, -238, -251, -238, -398, 438,
	-265, 402, 557, 46, -614, -228, -128, -128, -128, 582,
	-266, -229, 411, 5, 214, -268, 5, -268, 214, 5,
	-251, -268, -290, -508, -597, 24, 143, -268, -290, -508,
	-256, -511, 331, 530, -575, 438, 506, 506, -458, -124,
	-195, 551, -124, -189, 225, 575, -572, -251, 543, -251,
	-307, -310, -308, -268, -207, -208, 553, 551, 154, -300,
	-281, 580, -192, -511, -281, -467, -291, -292, 154, -333,
	326, -511, 39, 154, 582, 2, 2, -284, 341, 326,
	-267, 214, -234, 145, -614, -265, -416, -346, -371, -407,
	420, 341, -334, 539, -274, -371, -348, 587, 187, 565,
	584, -334, -462, 575, -101, -101, -192, 587, 582, 565,
	565, 582, -511, -511, 583, 587, -232, -281, -267, 229,
	229, -273, -252, 583, 587, 584, 582, -200, 345, -199,
	146, 257, 242, 460, 461, 462, 463, 137, -466, -198,
	-125, 187, 187, -61, 551, 490, -192, 586, -251, -378,
	-378, -378, 448, 448, -251, -277, -265, -281, -278, -302,
	183, 183, -265, 528, -403, 342, 282, -449, -225, 559,
	-281, 586, -422, -422, 150, 150, -422, -423, -423, -422,
	150, 187, 582, -422, -433, 34, 34, 583, 587, -418,
	-422, 583, 542, -338, -338, 583, 575, -502, 586, 583,
	-431, 147, -422, 500, 295, 212, 293, -391, 293, -391,
	-391, -496, 5, -502, 575, -559, -271, 582, -251, 549,
	-337, 347, 583, -474, -472, -422, -422, -422, -422, -422,
	-496, -477, -477, -492, -492, -422, -427, -422, -474, -472,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, 139,
	326, 335, -423, -428, -427, -422, -422, -472, 583, 583,
	583, -353, -101, 582, 288, -365, 205, -422, -466, 587,
	-365, -365, 583, -453, -453, 582, -422, 250, 581, 587,
	589, 565, -333, 584, -445, -446, 581, 583, 587, 583,
	587, -406, 39, 583, -502, -416, -203, -202, 136, 54,
	108, 134, 331, -342, -342, 344, 5, 8, 580, 581,
	584, -496, 583, 583, 583, -342, -342, -342, -230, -230,
	120, 314, -422, 506, 506, 61, 221, 361, 403, 506,
	42, 324, -238, 383, 429, 26, 403, 403, 154, 326,
	536, -530, -525, 152, -422, 582, 229, 582, 582, 2,
	-223, 143, 451, -595, 2, 534, 154, -230, 154, -230,
	555, -317, 582, 582, 506, 438, -244, 506, 551, -353,
	-422, -193, 127, -501, -582, 586, -582, 586, 438, 506,
	506, 438, 506, 506, -398, -398, 551, 167, 167, 557,
	-238, 551, -353, 506, -476, 49, 27, 326, -284, -230,
	154, 506, 506, 518, 451, -511, 331, -290, -508, -285,
	451, 356, 411, -466, -197, 345, -196, 146, 422, 137,
	257, -466, -195, 187, 241, 551, -285, 2, 583, 583,
	587, -531, 39, 339, 339, 582, -281, -82, 551, -465,
	-498, -578, 551, 44, -283, 39, 154, -575, -128, -285,
	-470, -471, 5, 39, -281, 154, 341, 326, -235, 264,
	-614, -506, -546, -338, -371, -360, 327, 92, 583, -416,
	-362, -346, -422, 2, 583, -190, -191, -511, -511, -511,
	-192, -204, -204, -414, -311, 582, -267, -252, 582, -204,
	-269, 2, -512, 587, 582, 565, 565, 565, -198, -466,
	-124, -128, 345, -281, 575, -378, -323, -322, 360, 335,
	-323, 429, 429, 342, 177, 260, -224, -266, -422, -422,
	150, 34, 34, -422, -422, -433, 583, -422, -422, -353,
	581, 5, -422, 583, 583, 8, -422, 583, 584, -560,
	-251, -422, 583, 61, 583, 583, 587, 587, 583, 583,
	583, 583, 583, 583, 583, -428, 187, 139, 335, 582,
	583, 583, -101, -430, 208, 61, -453, -430, -430, -380,
	-342, -453, -420, -266, 580, -502, -498, -456, 582, 584,
	-202, 565, -511, -511, 581, 2, 580, -502, 583, 120,
	-268, -268, 490, 429, -238, 383, 39, 39, 324, -238,
	383, 429, 402, 270, 26, 26, -413, 154, -532, 94,
	-534, 77, 169, 103, 326, 331, 524, 383, 73, 127,
	399, -606, 39, 562, 583, -340, -450, -545, 582, -251,
	-340, -342, 326, 479, 127, 326, 127, 120, 518, 80,
	-268, -275, -342, -342, -281, -290, -508, 161, 583, 587,
	565, 2, 575, 575, -290, -508, -285, -290, -508, -283,
	358, 167, 161, 583, -266, 5, 5, 154, -263, 77,
	-268, 5, -268, -284, 120, 438, 506, 506, -195, 587,
	582, 565, 565, -195, -512, -124, 2, -333, -324, 231,
	-268, -529, -526, -527, 383, -533, -535, 169, 383, -128,
	2, -206, -205, -251, 5, 582, -309, 345, 581, -580,
	345, -579, 118, 137, -508, -375, -128, -285, -333, 583,
	587, 148, -397, 534, -266, -281, 154, -236, 263, -614,
	-506, -233, -401, -399, 140, 582, 341, -128, -338, 565,
	583, 583, 120, 120, 223, 153, -340, 582, 582, -342,
	120, 583, -199, -200, -511, -124, -511, -198, -466, -62,
	-63, 229, 94, 366, -278, 490, 229, 582, 582, -224,
	-422, -422, -422, 583, -338, -502, 575, -554, 360, 583,
	-449, -422, -422, -423, 187, 582, -433, 583, -555, 550,
	-422, -366, -367, -422, 428, 109, 206, -555, -555, 583,
	-498, 2, -511, 580, 2, 221, 39, 402, -251, -251,
	402, 270, 39, 506, 39, -413, -275, -279, -272, -251,
	169, 214, 331, 547, -396, 255, 582, -423, -281, 582,
	2, 31, -607, 131, 234, 583, 587, -451, -262, -251,
	-422, -451, 583, 583, 331, 331, -422, -472, 582, -230,
	-230, 583, 583, -422, 506, -501, 101, -499, 2, -582,
	-265, -422, 506, 5, -230, -279, -230, -230, -263, 518,
	-290, -508, -285, -196, -197, -511, -124, -195, 39, -314,
	233, 2, -531, 255, -272, 255, -605, 551, 583, 587,
	565, 565, -307, -207, -83, -84, 507, -465, 587, 582,
	565, -333, 39, 5, 582, 582, -251, 341, 582, -266,
	-246, 93, -614, -506, -234, -371, 327, -342, 94, -401,
	-429, -192, 582, 582, -312, 82, 95, 128, 213, 190,
	230, 471, 477, 29, -312, 583, -340, -340, 583, 582,
	-192, 583, 587, 29, 582, 29, 582, -281, -302, -353,
	-353, 583, -338, 61, 587, 583, 583, -423, -433, 583,
	-556, -557, -271, 587, 582, 582, 452, 581, 2, -238,
	383, -251, 39, -251, -238, 383, -251, -534, -272, 326,
	534, -422, -253, 582, -422, 39, 234, 132, 219, -412,
	-608, 102, 480, 222, -450, -224, 583, -411, 534, 399,
	-263, -340, 582, 582, 582, 565, 187, 582, -476, -230,
	-284, 583, -587, 397, -128, -318, -319, 221, 582, -313,
	341, 120, 314, -205, -499, -499, 583, 39, -84, 9,
	-579, -580, -422, 39, -128, -470, -340, -281, -340, 341,
	-240, -239, 272, -506, -235, 583, -275, -371, -512, -512,
	-411, 583, 583, -512, -63, -342, -342, 583, 583, -561,
	391, 430, 207, -353, -339, 583, 587, 39, -367, 2,
	2, 2, 402, -251, 402, 154, 209, 583, -536, 287,
	-251, 583, 132, 219, -314, 582, -225, -451, -314, 209,
	-281, -583, 534, 583, -326, -325, -322, -328, -327, -322,
	-353, -499, 101, 358, -353, -263, -590, 188, -589, 5,
	10, -207, 358, -341, -452, -268, 83, 120, -324, -128,
	583, -128, 583, 583, -397, 583, -281, -237, -513, 402,
	404, -614, -236, -416, 583, 583, -412, -411, -320, -316,
	583, 583, 583, 583, -562, -563, 51, 521, 110, -422,
	-562, -562, -557, -559, 169, 551, -537, -540, -539, 341,
	458, 188, 359, 583, 479, 546, -320, -342, 551, -333,
	-422, -411, 583, 587, 539, 583, 587, 539, 583, 187,
	583, -230, -194, 551, 47, -313, -281, 583, 587, 382,
	133, 143, -314, -605, -411, 582, -412, 582, -243, -242,
	-614, -492, -246, 140, -192, -192, -314, -412, -208, 551,
	-192, -564, 152, -563, 379, 182, 429, 379, 182, -564,
	-564, -272, 56, -539, 341, -540, 341, 528, 133, -607,
	583, 56, -536, -314, -325, 221, -327, 187, 358, 436,
	-589, 31, -245, -244, 582, -452, 430, 430, 2, -318,
	-313, -412, -340, -314, -340, -241, -342, -240, 327, 528,
	-320, -314, -416, 110, 205, 501, 314, 34, 565, -538,
	314, 418, 65, 451, -538, -416, 565, -537, 582, 582,
	345, -342, 2, -207, -314, 583, -320, 583, -237, 451,
	-208, -320, 429, 349, -563, -422, 23, 331, 127, -422,
	-607, -353, -353, -191, 582, 583, -313, -320, -411, -208,
	-412, -243, -361, -416, -208, 583, 583, -191, -231, 65,
	418, -245, -208, -412, -416, -314, -416, -416, -315, -316,
	506, 583, -416, -314, -320, 582, -320, -208, -353, -208,
	-416, 583, -416, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 526, 527, 529, 530, 531, 533,
	534, 536, 538, 540, 541, 542, 544, 545, 547, 548,
	549, 550, 551, 553, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	619, 621, 0, 1331, 1333, 1335, 1337, 0, 763, 0,
	36, 37, 39, 0, -2, 313, 315, 317, 0, 344,
	346, 347, 349, 351, 352, 353, 355, -2, 0, 461,
	462, 464, 466, -2, 0, 953, 955, 0, 608, 610,
	0, 958, 960, 0, 0, 630, 631, 0, 1438, -2,
	624, 626, 628, 693, 695, 697, 699, 701, 703, 705,
	707, 709, 710, 712, 714, 716, 718, 720, 721, 723,
	725, 727, 728, 730, 731, 733, 735, 737, 739, 741,
	743, 745, 747, 749, 751, 753, 755, 757, -2, 760,
	-2, -2, 0, -2, -2, -2, 1349, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 405, 407, 409, 411,
	413, 416, 418, 420, 1496, 468, 470, 472, 474, 476,
	478, 480, 0, -2, 1510, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1469, 1471, 1473, 1475, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 528, 532, 535, 537, 539, 543,
	546, 552, 554, 556, 513, 514, 517, 2174, 2191, 2192,
	2193, 2196, 2197, 2198, 2199, 2200, 2201, 2641, 2723, 2724,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 515, 516,
	1130, 0, 580, 578, 2159, 581, 2445, 583, 585, 455,
	456, 457, 458, 459, 460, 0, 601, 592, 1508, 602,
	604, 605, 606, 607, 575, 573, 0, 601, 2227, 599,
	1329, 1330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 384, 1179, 1180, 1181, 1314, 1315, 2489,
	1356, 0, 219, 620, -2, -2, -2, 2606, -2, 652,
	-2, 659, 2610, 2491, 664, 0, 666, -2, 669, 1332,
	1334, 1336, 761, 762, 2177, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 229, -2, -2, -2,
	-2, 0, 0, 2535, 2280, 2127, 2193, 2130, 2125, 314,
	316, 318, 319, 0, 0, 0, 0, 0, 0, 345,
	348, 350, 354, -2, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1014, 1006, 1007,
	1237, 0, 0, 0, -2, 463, 465, 518, 519, 0,
	1497, 1497, -2, 0, 0, 0, 0, 285, 275, 954,
	956, 957, 0, 0, 0, 0, 609, 611, 0, 0,
	257, 959, 961, 962, 0, 0, 0, 0, 0, 287,
	0, 0, 625, 627, 629, 694, 696, 698, 700, 702,
	704, 706, 708, 711, 713, 715, 717, 719, 722, 724,
	726, 729, 732, 734, 736, 738, 740, 742, 744, 746,
	748, 750, 752, 754, 756, 758, 759, 769, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 857, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	935, 0, 772, 774, 775, 776, 0, 835, 855, 856,
	865, 0, 1170, 1498, 1358, 1339, 1353, 1358, 1341, 1342,
	1343, 1344, 1345, 1350, 1352, 1346, 1347, 1348, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 406, 408, 410,
	412, 414, 417, 419, 421, -2, 1467, 1468, 469, 471,
	473, 475, 477, 479, 481, 612, 0, 614, 0, 773,
	-2, 0, 1502, 1502, 1502, 0, 0, 1468, 1466, 0,
	617, 618, 673, 674, 1770, 0, 0, 0, 0, 0,
	0, 0, 2024, 1856, 0, 675, -2, 1887, 1889, 2581,
	2606, 2023, 1891, 1892, 1893, 1894, 1895, 0, 1897, 1898,
	1899, 1900, 1901, 1902, 0, 1904, 0, 1909, 1910, 1911,
	0, 2588, 2104, 2187, -2, 0, 0, 2594, 2183, 0,
	1990, 1927, -2, -2, 2210, 2189, 1702, 1703, 1704, 1705,
	1706, -2, -2, 2624, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 0, 2569, 2589, 2590, 2595,
	2597, 2591, 2578, 1952, 2293, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1729, 1738,
	-2, -2, -2, -2, -2, -2, -2, 2582, 2583, 2600,
	2603, 2609, 2614, 2615, 2587, 2596, 2623, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 1730, -2, -2, -2, -2, 1485, 2458,
	1488, 1130, 1486, 1470, 1472, 0, 1474, 0, 0, 0,
	1479, 1505, 1503, 0, 1554, 1483, 1484, 1572, 1572, 1596,
	0, 1577, 0, 1596, 1497, 1623, 0, 1583, 2481, 1928,
	1929, 0, 2193, 2188, -2, -2, 2621, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 582, 584, 0,
	0, 0, 600, 1507, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 389, 390, 391, 2589, 0, 0, 0,
	396, 0, 398, 399, 400, 401, 402, 403, 404, 188,
	2589, 486, 511, 0, 188, 2589, 489, 188, 2589, 492,
	0, 495, 1235, 188, 2589, 498, 2155, 188, 2589, 501,
	503, 2163, 188, 2589, 507, 2170, 2168, 508, 2589, 510,
	290, 288, 289, 2206, 2207, 2214, 2215, 2216, 2217, 2622,
	2624, 1325, 1326, 1327, 1328, 0, 1355, 1236, 622, 623,
	0, 647, 0, 651, 2577, -2, 0, 2500, -2, 655,
	1359, 1363, 1364, 1365, 1366, 1367, 0, 0, 0, 0,
	1372, 0, 0, 661, 0, 0, 648, 649, 667, 670,
	0, 764, 765, 766, 767, 768, 70, 0, 2589, 1623,
	72, 0, 2149, 2218, 2219, 2220, 2221, 2222, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 76,
	0, 2589, 81, 0, 2589, 0, -2, 92, 0, 100,
	0, 2152, 109, 0, 2589, 0, 2124, -2, 0, 200,
	276, 0, 981, -2, 2589, 1178, 0, 0, 0, 0,
	944, 2121, 2126, 945, 2145, 946, 2131, 0, 320, 321,
	322, 323, 324, 0, 325, 2589, 327, 328, 0, 330,
	331, 2589, 333, 334, 0, 336, 0, 240, 241, 2589,
	358, 360, 0, 362, 363, 0, 365, 0, 0, 0,
	369, -2, 385, 0, 382, 372, 373, 375, 376, 377,
	378, 379, 0, 425, 423, 2160, 0, 0, -2, 2589,
	0, 978, 0, 0, 1215, -2, 2589, 1175, 0, 1222,
	2589, 1218, 0, -2, 0, 1495, 2589, 1376, 1010, 1011,
	1012, 1013, 1635, 452, 0, 1403, 0, 1405, 0, 1424,
	1629, 1572, 0, 0, 1634, 0, -2, 569, 2176, -2,
	521, 0, 522, 0, -2, 0, 302, 0, 0, 963,
	964, 965, 966, 967, 970, 971, 972, 973, 1609, 258,
	260, 0, 0, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 0, 0, 632, 0, 0, 770, 771, 0,
	0, 781, 782, 783, 0, 302, 2492, 2454, 2314, 790,
	0, 793, 796, -2, 0, 0, 0, 0, 800, 0,
	805, 806, 807, 0, 0, 811, 813, 952, 815, 0,
	0, 817, 0, 821, 0, 824, 0, 826, 0, 828,
	-2, -2, -2, 836, 837, -2, 841, -2, 0, 844,
	846, 0, 848, -2, 0, 857, 853, 854, 0, 0,
	0, 0, 873, 874, 0, 883, 0, 886, 887, 888,
	0, 890, 891, 0, 893, 894, 895, 896, 0, 0,
	899, 900, -2, -2, 904, 906, 0, -2, 0, 922,
	0, 926, 0, 0, 934, 0, 777, 778, 188, 1627,
	1338, -2, 1340, 0, -2, 0, 613, 0, 616, 1527,
	1453, 1450, 0, 1524, 1525, 1454, 0, 0, 0, 1461,
	0, 1500, 1501, 0, 0, 0, 1440, 1441, 0, 0,
	0, 0, 2029, 2030, 2031, 2032, 2033, 2034, 2037, 2038,
	2035, 2036, 2039, 2040, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 2043, 2044, 0, 0, 2046, 0, 2048, 0,
	0, 0, 0, 0, 0, 1835, 1837, 2112, 0, 0,
	2045, 1775, 1776, 1777, 1778, 1779, 1814, 1815, 0, 0,
	1888, 2109, 2108, 1890, 0, 2060, 0, 1903, -2, 0,
	2024, 2055, 0, 0, 1912, 1913, 1914, 0, 0, 2060,
	0, 0, 2103, 1924, 1925, 1767, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 1715, 0, 1717,
	0, 1718, 1719, 1726, 1739, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 2084, -2, 0,
	0, 0, 0, 1731, 0, 1487, 0, 0, 1558, 2113,
	2117, 2118, 1558, 1558, 0, 0, 2061, 1620, 1620, 0,
	0, 1615, 1615, 1615, 1613, 1596, 0, 1596, 1606, 0,
	1596, 1596, 0, -2, 1577, 0, 0, 1606, 0, 1590,
	557, 559, 561, 563, 564, 565, 567, 1624, 1625, 0,
	0, 0, 0, 2194, 0, 0, 0, 0, 0, 2179,
	0, 341, 0, 0, 0, 2545, 2491, -2, 587, 603,
	1497, 0, 2063, 1650, 1654, 0, 1656, 1657, 1658, 1659,
	1660, 0, 0, 1651, -2, 1727, 1729, 1750, 2211, 2212,
	2213, 1710, 1711, 1712, 1713, 1714, 1722, 1709, 1709, 1709,
	1720, 1749, 1741, 1749, 1745, 1695, 1696, 1697, 1732, 1733,
	1734, 1735, 0, 2545, 2491, -2, 594, 0, 0, 1435,
	204, 206, 207, 208, 209, 210, 386, 0, 393, 394,
	395, 0, 482, 0, 186, 187, 0, 188, 2589, 487,
	0, 490, 0, 188, 2589, 2119, 496, 0, 499, 0,
	0, 505, 0, 0, 0, 0, 0, 188, 1437, 0,
	0, 0, 0, -2, 657, 662, 663, 0, 1361, 0,
	1368, 684, 685, 686, 1370, 1371, 0, 1373, 660, 687,
	688, 689, 690, 691, 692, 0, 2133, 2134, 2135, 2136,
	2139, 2140, 0, 0, 658, 677, 665, 0, 671, 110,
	1311, 0, 0, 151, 0, 1311, 1311, 0, 0, 0,
	0, 175, 0, 1049, 0, 0, 0, 0, 0, 134,
	147, 122, 123, 0, 0, 0, 0, 0, 0, 82,
	1152, 0, 1155, 0, 0, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 0, 0, 0, 0, 142, 142,
	0, 142, 0, 0, 1400, 0, 128, 112, 0, 0,
	0, 135, 149, 0, 179, 181, 1046, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 211, 0, 0, 0,
	1176, 0, 1494, 0, 0, 2589, 0, 1609, 2361, -2,
	-2, 258, 1609, 943, 0, 0, 2194, 2129, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 364, 366, 367,
	368, 0, 1214, 0, 374, 415, 1101, 2589, 0, 0,
	442, 437, 0, 439, 0, 0, 0, 1151, 2589, 1149,
	2164, 0, 1173, 0, 1130, 2589, 2162, 0, 0, 0,
	1223, 2203, 1232, 1236, 1390, 0, 454, 0, 1406, 1408,
	0, 0, 1630, 0, 1632, 1572, 1497, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 264, 0,
	1608, 0, 0, 1609, 258, 2469, 302, 302, 1609, 634,
	1609, 636, 0, 0, 784, 785, 0, 302, 302, 302,
	791, 792, 794, 795, -2, -2, -2, -2, 797, 798,
	880, 0, 0, 0, 879, 810, 814, 0, 937, 2477,
	2491, 2545, 950, 880, 2280, 880, 2280, 880, 2280, 825,
	827, 830, 868, 876, 840, 845, 0, 0, 850, 858,
	-2, 0, 860, 0, 862, 0, 864, 880, 881, 884,
	889, 892, 897, 898, 0, 913, 918, 919, 915, 0,
	0, 0, 0, 0, 0, 929, 930, 0, 0, 1169,
	0, 1351, 1527, 1453, 615, 1444, 1526, 1445, 1452, 1455,
	0, 0, 1457, 0, 1459, 0, 1522, 1523, 1530, 1531,
	0, 1541, 1542, 1534, 0, -2, 0, 0, 1537, 1538,
	1463, 0, 1480, 1481, 1482, 1511, 1514, 1251, 0, 2723,
	1771, 1645, 1772, 1773, 2148, 0, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, -2, -2, -2, -2,
	-2, -2, -2, -2, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, -2, -2, -2, 1812, 1813,
	-2, 2047, 2049, 0, 2112, 0, -2, 0, -2, -2,
	-2, -2, 1832, 0, 1834, 1839, 1841, 1843, 0, 0,
	0, 0, 2111, 1853, 2095, 2096, 0, 0, 2026, 2027,
	2028, 1838, 0, 1857, 2110, 2107, 0, 0, 2059, 1510,
	1916, 0, 0, 0, 0, 1923, 1908, 2057, 0, 2056,
	0, 0, 0, 2067, 0, 2102, 2098, 0, 2146, 1766,
	1753, 1754, 1755, 1756, 1757, 1758, 1768, 0, 2143, 2180,
	2186, 2000, 0, 0, 0, 1953, 1954, 1955, 1956, 1957,
	0, 1959, 1960, 0, 1962, 1963, 0, 1965, 1966, 0,
	1968, 1969, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 0, 0, 1972, 0, 2070, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1974, 0, 1976, 2061,
	2081, 0, 0, 1858, 0, 0, 0, 2024, 0, 1979,
	2061, 2089, 0, 0, 0, 0, 0, 2061, 0, 2094,
	0, 1986, 0, 1988, 1489, 0, 0, 1640, 0, 0,
	0, 2116, 1640, 1640, 0, 1553, 0, 0, 1616, 1617,
	1618, 1619, 0, 0, 1620, 0, 1610, 1614, 1611, 1612,
	1606, 1569, 0, 0, 2150, 1606, 1575, 1605, 0, 1130,
	1595, 1606, 1606, 0, -2, 1579, 1596, 0, 0, 558,
	560, 562, 566, 568, 0, 0, 1510, -2, 0, -2,
	1129, 0, 0, 0, 0, 577, 579, 0, 0, 502,
	0, 591, 0, 571, 0, 574, 0, 1641, 1644, 0,
	0, 1655, 1661, 1662, 0, -2, 0, 0, 1751, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 397, 512,
	188, 484, 0, 188, 188, 493, 0, 0, 188, 504,
	188, 2171, 188, 2169, 291, 509, 1436, 222, 0, 650,
	0, 1360, 1369, 0, 681, 0, 683, 0, 2137, 2141,
	2138, 2142, 0, 672, 0, 0, 0, 0, 1310, 0,
	1258, 0, 0, 0, 0, 0, 0, 155, 2589, 0,
	190, 0, 0, 1094, 2156, 0, 1086, 0, 0, 2300,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1153, 1154, 1156, 1163,
	1165, 0, 1159, 2144, 0, 0, 1160, 0, 1162, 1164,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 141, 97, 142, 133, 0, 0, 0, 1399, 1400,
	0, 0, 0, 121, 125, 0, 0, 0, 0, 2123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 1208, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 0, 0, -2, 0, 0,
	0, 0, 0, 232, 0, 293, 2122, 2132, 0, 968,
	969, 326, 329, 332, 335, 228, 0, 370, 0, 0,
	1016, 991, 0, 0, 424, 302, 0, 0, 438, 442,
	2173, 976, 1147, 1150, 0, 1130, 2589, 1187, 0, 0,
	0, 0, 0, 0, 1221, 0, 0, 2589, 2151, 2202,
	2203, 1392, 1400, 0, 1640, 0, 1422, 1409, 0, 0,
	0, 1422, 1426, 1427, 1429, 1430, 0, 0, 1631, 1637,
	520, 570, 1497, 1497, 302, 300, 2421, 298, 295, 297,
	0, 0, 0, 1017, 1019, 1020, 1021, 190, 0, 2203,
	1086, 2350, 2203, 0, 1412, 1414, 0, 252, 0, 261,
	1609, 259, 264, 0, 0, 0, 436, 633, 638, 779,
	0, 302, 787, 788, 789, 832, 870, 878, 917, 799,
	801, 802, 803, 0, 0, 951, 947, 948, 949, 816,
	880, 819, 880, 822, 880, 843, 847, 852, 859, 0,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	923, 924, 925, 927, 932, 931, 936, 1628, 1448, 1449,
	1451, 0, 1460, 0, 0, 1536, -2, -2, 1535, 1539,
	1540, -2, -2, -2, -2, 1456, 0, 1465, 1462, 0,
	1521, 1249, 1250, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1854, 0, -2, 1833, 1836, 1840, 1842, 1844,
	0, 0, 0, 0, 0, 0, 2050, 0, 2052, 1855,
	2105, 2108, 2022, 0, 0, 1509, 1510, 1510, 0, 1922,
	0, 2058, 0, 2065, 2066, 0, 1915, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 1958, 1961, 1964, 1967, 0, 0, 0,
	0, 1947, 0, 0, 0, 1951, 1721, 1707, 0, 1749,
	1747, 1748, 1742, 1749, 1746, 1699, 0, 1698, 0, 1971,
	0, 1973, 1975, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1862, 1863, 1978, 2087, 2088, 0, 0, 0, 0, 0,
	0, 1984, 0, 2093, 1985, 1987, 1497, 0, 1490, 0,
	1555, 1544, 1639, 0, 2114, 1609, 1557, 1559, 2115, 2153,
	1544, 1544, 0, 2062, 0, 0, 1600, 0, 0, 0,
	1602, 1573, 0, 0, 1567, 0, 1563, 1564, 1565, 1566,
	1574, 1130, 1604, 1576, 1580, 2180, 0, 1606, 0, 1591,
	0, 1593, 1626, 0, 1585, 1588, 0, 0, 2195, 1640,
	0, 337, 342, 343, 338, 339, 340, 586, 0, 0,
	0, 0, 2064, 0, 1646, 0, 1652, 0, 0, 0,
	0, 593, 0, 0, 0, 205, 1434, 392, 483, 188,
	488, 491, 2120, 188, 497, 500, 506, 218, 0, 646,
	-2, 679, 680, 682, 0, 678, 152, 1311, 0, 0,
	1254, 1256, 2167, 1260, 1265, 0, 0, 0, 0, 0,
	1288, 0, 157, 2589, 166, 0, 1065, 0, 2154, 0,
	0, 0, 0, 0, 0, 1313, 0, 0, 2589, 188,
	2589, 188, 169, 171, 174, 0, 178, 176, 0, 1053,
	0, 0, 1056, 111, 1311, 0, 0, 114, 118, 126,
	0, 0, 0, 132, 0, 0, 0, 1290, 1294, 1302,
	0, 0, 0, 1157, 1158, 1161, 1167, 83, 0, 0,
	0, 1298, 1300, 1306, 93, 142, 2165, 142, 98, 0,
	1253, 0, 0, 0, 0, 180, 116, 120, 127, 0,
	1308, 113, 0, 203, 0, 0, 193, 188, 2589, 0,
	195, 0, 196, 197, 212, 0, 0, 0, 979, 980,
	1209, 1171, 1172, 0, 1177, 0, 0, 0, 0, 1609,
	224, 0, 1609, 232, 0, 2128, 0, 357, 0, 0,
	0, 0, 1015, 1112, 0, 986, 0, 0, 0, 430,
	426, 0, 435, 441, 440, 446, -2, 0, 0, 0,
	0, -2, 0, 0, 1225, 1219, 1220, 0, 0, 0,
	0, 2589, 1394, 1400, 0, 1495, 1510, 453, 1401, 1422,
	0, 0, 0, 1411, 1407, 1404, 1640, 0, 0, 0,
	0, 0, 1633, 1636, 523, 524, 277, 0, 0, 0,
	0, 0, 302, 0, 0, 0, 1022, 1026, 0, 2203,
	2203, 0, 2158, 0, 0, 0, 0, 262, 0, 265,
	0, 0, 0, 270, 271, 272, 273, 274, 264, 254,
	1609, 0, 0, 635, 0, 0, 786, 0, 809, 818,
	820, 823, 861, 863, 880, 907, 908, 1043, 0, 1043,
	0, 0, 928, 1458, 0, 1533, 1464, 1515, 1516, 0,
	1251, 0, 1774, 1817, 0, 0, -2, 0, 0, 1821,
	0, 0, 0, -2, 0, 0, 0, 2051, 2053, 0,
	2107, 1917, 0, 0, 0, 1921, 1905, 1906, 0, 2025,
	2068, 2097, 2101, 0, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 0, 2147, 2181, 2185, 1998, 1999, 2003, 2161, 0,
	0, 0, 1930, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 1744, 0, 0, 2069, 2080, 2082, 1859, 1860,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	-2, -2, -2, 1877, 1878, 1879, -2, -2, -2, 0,
	0, 0, 2083, 2085, 2086, 2090, 2091, 0, 1981, 1982,
	1983, 2092, 0, 1497, 1491, 1552, 0, 1638, 1556, 0,
	1552, 1552, 1504, 1598, 0, 0, 1622, 0, 1570, 0,
	1571, 0, 1603, 0, 1578, 1581, 1582, 1592, 0, 1584,
	0, 1587, 0, 1917, -2, 303, 304, 306, 0, 309,
	310, 0, 0, 589, 590, 588, 572, 0, 0, 1648,
	0, 0, 1724, 1728, 1752, 596, 597, 595, 485, 494,
	220, 0, 1607, 0, 0, 0, 0, 1269, 1271, 0,
	2233, 1278, 1279, 0, 2606, 1283, 0, 0, 0, 0,
	189, 1063, 1093, 0, 0, 0, 1085, 0, 0, 1099,
	159, 0, 0, 0, 167, 0, 0, 164, 0, 173,
	177, 1050, 0, 0, 0, 0, 1259, 0, 0, 0,
	129, 130, 131, 0, 136, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 94, 95, 0, 1384, 1385, 0,
	1379, 0, 0, 0, 191, 0, 0, 0, 1248, 214,
	0, 0, 0, 0, 0, 1212, 1213, 1291, 1295, 1303,
	0, 0, 0, 232, 230, 0, 233, 0, 236, 237,
	0, 232, 226, 0, 0, 0, 1130, 371, 989, 1100,
	0, 1102, 0, 987, 0, 0, 1101, 422, 0, 429,
	0, 443, 0, 0, 1151, 0, 0, 1174, 1185, 1130,
	0, 1224, 1226, 0, 1234, 0, 0, 0, 1396, 1400,
	0, 1389, 1390, 1529, 1402, 1420, -2, 0, 0, 1510,
	1428, 1425, 1431, 1432, 0, 299, 0, 294, 296, 0,
	280, 0, 0, 1018, 1023, 0, 0, 0, 0, 0,
	1413, 1415, 0, 0, 0, 0, 0, 0, 253, 264,
	1609, 286, 0, 780, 804, 871, 909, 1042, 0, 0,
	911, 0, 0, 1532, 1519, 1520, 1517, 1251, 1819, 1823,
	0, 0, 0, 1825, -2, 0, 1847, -2, -2, 2054,
	2106, 1896, 1510, 1918, 1920, 1907, 2100, 1769, 0, 2005,
	2002, 0, 1989, 0, 1942, 1943, 0, 0, 1946, 1948,
	1949, 1950, 1708, 1701, 1700, 2079, 0, 0, 0, 0,
	1980, 1492, 0, 1994, 0, 0, 1560, 1994, 1994, 1599,
	0, 1601, 1568, 1561, 0, 2181, 1594, 1586, 0, 0,
	307, 0, 311, 312, 1642, 1647, 0, 1653, 1723, 221,
	153, 154, 1266, 1267, 1263, 0, 0, 0, 1273, 1274,
	0, 0, 1280, 1281, 0, 1286, 156, 0, 1064, 0,
	1067, 0, 0, 0, 0, 1074, 1086, 0, 0, 0,
	0, 0, 1087, 0, 1116, 0, 1239, 1246, 0, -2,
	0, 0, 0, 161, 183, 0, 0, 1312, 0, 0,
	188, 188, 0, 0, 1255, 1257, 1289, 0, 0, 0,
	0, 139, 0, 0, 1292, 1296, 1304, 1299, 1301, 1307,
	0, 1386, 0, 0, 1309, 201, 202, 0, 188, 0,
	188, 194, 188, 1248, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 225, 292, 232, 359, 0, 1037, 0,
	1112, 1104, 1105, 1106, 0, 1111, 1113, 0, 0, 1003,
	988, 0, 999, 0, 0, 1016, 991, 0, 427, 444,
	0, 447, 0, 450, 977, 1148, 1182, 1130, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 1398, 1400, 0,
	1391, 1392, 1422, 1528, 0, 0, 0, 1410, 1529, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 266, 0, 267, 268, 269, 255, 256, 637,
	639, 0, 0, 645, 1041, 0, 0, 0, 0, 1518,
	1827, -2, -2, 1848, 0, 2182, 2184, 1510, 0, 1991,
	1512, 0, 0, -2, 0, 0, 0, 1493, 1476, 0,
	1551, 1543, 1545, 1547, 2480, 2275, 2588, 1477, 1478, 1621,
	0, 1589, 308, 0, 1649, 0, 0, 1264, 1270, 1272,
	1275, 1276, 0, 0, 0, 158, 0, 1068, 1069, 2157,
	1071, 0, 1073, 1075, 1076, 1077, 0, 1080, 2205, 0,
	1084, 0, 1095, 1117, 0, 1126, 0, 1241, 1251, 1245,
	0, 1243, 1128, 0, 160, 162, 182, 1248, 0, 163,
	172, 0, 0, 115, 0, 0, 2269, 144, 140, 138,
	1252, 117, 0, 203, 213, 1247, 215, 198, 188, 0,
	1293, 1297, 1305, 234, 0, 235, 238, 0, 0, 1052,
	0, 990, 1103, 0, 1114, 1115, 993, 0, 992, 0,
	0, 0, 0, 0, 428, 431, 0, 434, 0, 0,
	0, 0, 0, 1227, 1225, 0, 1233, 0, 0, 0,
	1378, 0, 0, 1393, 1394, 451, 1416, 0, 0, 1422,
	1433, 279, 0, 0, 1024, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1025, 1128, 0, 0, 1092, 0,
	284, 263, 0, 641, 0, 643, 0, 910, 912, 0,
	0, 1919, 2009, 0, 0, 1944, 1945, -2, 0, 1885,
	1993, 1995, 0, 0, 0, 0, 0, 1562, 1643, 1261,
	0, 1268, 0, 1282, 1284, 0, 1287, 1066, 1070, 0,
	0, 0, 1134, 0, 0, 1088, 0, 1120, 1121, 1037,
	0, 1122, 1123, 1124, 1240, 1521, 1246, 1037, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 192, 216,
	1248, 231, 248, 0, 1183, 991, 1051, 0, 0, 1001,
	0, 1004, 0, 1000, 997, 998, 989, 0, 432, 433,
	448, 0, 449, 0, 1186, 0, 0, 1234, 0, 0,
	1381, 1377, 1400, 1395, 1396, 1640, 1419, 1423, 0, 0,
	1126, 1128, 1048, 0, 640, 0, 0, 920, 921, 0,
	0, 0, 0, 2004, 1513, 1886, 0, 0, 1546, 1548,
	1549, 1550, 1262, 1277, 1285, 0, 0, 1079, 1139, 0,
	0, 0, 1118, 1119, 1048, 0, 1244, 1242, 1097, 0,
	1130, 165, 0, 1128, 0, 1057, 0, 0, 1060, 0,
	0, 145, 2269, 143, 0, 188, 251, 0, 245, 243,
	244, 993, 0, 0, 1108, 1110, 0, 1005, 1037, 1003,
	445, 1184, 1217, 1128, 0, 1126, 0, 1388, 1400, 1382,
	1383, 0, 1398, 0, 302, 302, 1037, 1126, 991, 1047,
	302, 642, 644, 2001, 2021, 2010, -2, 2548, 2276, 0,
	2021, 2021, 1996, 1997, 0, 0, 1081, 1135, 1136, 0,
	1131, 1132, 1133, 2204, 1082, 1083, 1116, 0, 0, 1134,
	184, 1037, 1054, 0, 0, 1055, 0, 0, 148, 0,
	150, 217, 239, 0, 0, 985, 0, 1107, 0, 0,
	0, 0, 1052, 993, 1126, 0, 1037, 0, 1374, 1387,
	0, 1397, 1378, 0, 281, 282, 1048, 1037, 1640, 0,
	283, 2006, 0, 0, 2012, 2013, 2014, 2015, 2016, 2007,
	2008, 1072, 0, 1137, 0, 1138, 0, 0, 0, 1640,
	1125, 0, 1139, 170, 1058, 0, 1061, 0, 146, 0,
	246, 247, 982, 984, 0, 1109, 994, 0, 996, 991,
	1002, 1037, 0, 1048, 0, 1380, 2166, 1381, 1417, 0,
	991, 1048, 1091, 0, 2018, 2019, 0, 0, 0, 1140,
	0, 1143, 1144, 0, 1141, 1096, 0, 1116, 0, 0,
	0, 0, 995, 993, 1048, 1128, 991, 1126, 1388, 0,
	1640, 991, 2017, 2020, 2011, 1078, 1142, 1145, 1146, 1127,
	1098, 0, 0, 249, 0, 1040, 985, 991, 1126, 1640,
	1037, 1375, 1640, 1089, 1640, 1045, 0, 0, 1036, 1038,
	1039, 983, 1640, 1037, 1230, 1048, 1418, 1090, 1059, 1044,
	0, 250, 1228, 1048, 991, 0, 991, 1640, 0, 1640,
	1231, 1045, 1229, 1062,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 571, 3, 577, 572, 3,
	582, 583, 575, 573, 587, 574, 584, 576, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 590, 3,
	563, 565, 564, 568, 586, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 580, 3, 581, 578, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 588, 570, 589, 566,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 567, 57906, 569, 57907, 579, 57908, 585, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1304
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1331
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1438
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1452
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
				Force:  sqlDollar[7].union.bool(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1524
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
				Force:  sqlDollar[7].union.bool(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
				Force:        sqlDollar[5].union.bool(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
				Force:         sqlDollar[5].union.bool(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1552
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
				Force:         sqlDollar[6].union.bool(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1643
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1682
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1707
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1714
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1761
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			s.Force = sqlDollar[5].union.bool()
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1770
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1791
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1801
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1810
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1821
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1827
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = true
		}
	case 142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = false
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1864
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1869
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1992
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = nil
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 191:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2213
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2217
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2255
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2267
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2306
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2389
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2397
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2424
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = nil
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2553
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2669
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2713
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return unimplemented(sqllex, "alter function")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2800
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2809
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2815
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2820
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2825
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2830
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2835
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2866
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = nil
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2942
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3007
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3118
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3162
		{
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3163
		{
			return helpWith(sqllex, "CREATE")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "create access method")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "create cast")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3185
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3187
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			return unimplemented(sqllex, "create operator")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return unimplemented(sqllex, "create publication")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "create rule")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "create server")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3202
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3206
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3209
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3210
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "drop server")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3240
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3311
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3322
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3357
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3392
		{

			sqlVAL.union.val = nil
		}
	case 443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DELETE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3479
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3504
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "DROP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3705
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3771
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3795
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3803
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "DELETE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "INSERT")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DELETE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "INSERT")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3880
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3913
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4002
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "GRANT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4053
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "RESET")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "RESET")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "USE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "USE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			return unimplemented(sqllex, "set from current")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4382
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.Low
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.Normal
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = tree.High
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4533
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4559
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.str = "client_encoding"
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.str = "timezone"
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4628
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4691
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4700
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4837
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = true
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = true
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = false
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5045
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = true
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = false
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = true
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = false
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5162
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5211
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5264
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5272
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
		}
	case 920:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5316
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5339
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5420
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5560
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5612
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			return helpWith(sqllex, "RESUME")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5844
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5860
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{

			sqlVAL.union.val = nil
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.str = ""
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5905
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = nil
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5928
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5932
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5958
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5972
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5987
		{
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5988
		{
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6081
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6084
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6088
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6094
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.str = ""
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6258
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6358
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = true
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = false
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6393
		{
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6495
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6506
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6523
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6533
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6613
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6614
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6615
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6617
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6690
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6774
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6783
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6820
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6822
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6824
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = true
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6895
		{

			sqlVAL.union.val = true
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = false
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6910
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6924
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6936
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6948
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6958
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6968
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = nil
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7078
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7106
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7108
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7110
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7114
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7152
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7170
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7189
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7206
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7223
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7227
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = false
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = true
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = true
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = false
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7287
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7360
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7366
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7713
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7719
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7731
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7737
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7751
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7757
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7775
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7779
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7790
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7808
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7886
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7891
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7892
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7945
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7965
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7966
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8013
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8100
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.str = ""
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8126
		{

		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8141
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.str = ""
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8196
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8210
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8239
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8319
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8346
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8441
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8456
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8742
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8758
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = true
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = false
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8812
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = nil
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8826
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = false
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = false
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = true
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8856
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8860
		{
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8922
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8927
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9045
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9049
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9084
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9115
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9117
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9154
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9206
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9245
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9255
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9301
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9331
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9364
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = nil
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.str = tree.AstFull
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.str = tree.AstRight
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.str = tree.AstInner
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9484
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.str = tree.AstHash
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.str = ""
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = true
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = true
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = false
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9647
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9660
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9668
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9669
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9687
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9689
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9697
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9717
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9778
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = types.Geography
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9828
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9836
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9870
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = nil
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = types.Int2
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = types.Int
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = types.Float4
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = types.Float
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9913
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9921
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9929
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.Bool
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = types.Float
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9962
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9968
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9990
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = types.String
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = true
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = false
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = types.Date
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10039
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10047
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10061
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10070
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10078
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10095
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = true
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = false
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = false
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = types.Interval
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10119
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = nil
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10248
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10308
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10626
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10847
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10873
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10897
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10927
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10938
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10939
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10963
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11029
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11154
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11225
		{
			return unimplemented(sqllex, "treat")
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11251
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.str = ""
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11400
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11497
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.Any
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.Some
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.All
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.Div
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.LT
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.GT
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = tree.LE
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = tree.GE
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.NE
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = tree.Like
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11859
		{
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12012
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12028
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12048
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12077
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12310
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.str = ""
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
