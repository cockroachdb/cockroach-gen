// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12893

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1492,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 396,
	-2, 0,
	-1, 74,
	241, 234,
	507, 234,
	-2, 0,
	-1, 87,
	229, 1252,
	243, 1252,
	259, 392,
	386, 392,
	396, 1022,
	432, 392,
	445, 1022,
	491, 1022,
	518, 392,
	544, 1022,
	-2, 0,
	-1, 93,
	132, 1492,
	236, 1492,
	529, 1492,
	530, 1492,
	-2, 0,
	-1, 109,
	150, 1463,
	169, 1463,
	182, 1463,
	239, 1463,
	272, 1463,
	338, 1463,
	348, 1463,
	524, 1463,
	-2, 1434,
	-1, 148,
	158, 879,
	258, 879,
	389, 846,
	450, 846,
	490, 846,
	510, 879,
	512, 846,
	-2, 0,
	-1, 151,
	4, 1494,
	21, 1494,
	22, 1494,
	23, 1494,
	24, 1494,
	25, 1494,
	26, 1494,
	27, 1494,
	29, 1494,
	30, 1494,
	36, 1494,
	41, 1494,
	42, 1494,
	44, 1494,
	45, 1494,
	46, 1494,
	47, 1494,
	48, 1494,
	49, 1494,
	50, 1494,
	51, 1494,
	53, 1494,
	54, 1494,
	55, 1494,
	56, 1494,
	58, 1494,
	59, 1494,
	60, 1494,
	61, 1494,
	62, 1494,
	63, 1494,
	64, 1494,
	68, 1494,
	69, 1494,
	70, 1494,
	71, 1494,
	73, 1494,
	74, 1494,
	75, 1494,
	79, 1494,
	80, 1494,
	81, 1494,
	82, 1494,
	83, 1494,
	84, 1494,
	85, 1494,
	88, 1494,
	89, 1494,
	90, 1494,
	91, 1494,
	92, 1494,
	94, 1494,
	96, 1494,
	97, 1494,
	98, 1494,
	99, 1494,
	100, 1494,
	101, 1494,
	103, 1494,
	104, 1494,
	105, 1494,
	107, 1494,
	108, 1494,
	109, 1494,
	117, 1494,
	118, 1494,
	119, 1494,
	120, 1494,
	121, 1494,
	123, 1494,
	124, 1494,
	125, 1494,
	127, 1494,
	128, 1494,
	129, 1494,
	131, 1494,
	132, 1494,
	133, 1494,
	135, 1494,
	136, 1494,
	137, 1494,
	140, 1494,
	141, 1494,
	142, 1494,
	144, 1494,
	145, 1494,
	147, 1494,
	148, 1494,
	149, 1494,
	151, 1494,
	152, 1494,
	153, 1494,
	154, 1494,
	155, 1494,
	156, 1494,
	157, 1494,
	158, 1494,
	159, 1494,
	160, 1494,
	161, 1494,
	162, 1494,
	163, 1494,
	164, 1494,
	165, 1494,
	166, 1494,
	168, 1494,
	174, 1494,
	175, 1494,
	176, 1494,
	177, 1494,
	181, 1494,
	183, 1494,
	184, 1494,
	188, 1494,
	189, 1494,
	190, 1494,
	191, 1494,
	192, 1494,
	193, 1494,
	194, 1494,
	195, 1494,
	196, 1494,
	197, 1494,
	198, 1494,
	199, 1494,
	200, 1494,
	202, 1494,
	203, 1494,
	205, 1494,
	206, 1494,
	208, 1494,
	209, 1494,
	210, 1494,
	211, 1494,
	212, 1494,
	213, 1494,
	214, 1494,
	215, 1494,
	216, 1494,
	218, 1494,
	219, 1494,
	221, 1494,
	222, 1494,
	223, 1494,
	224, 1494,
	225, 1494,
	229, 1494,
	230, 1494,
	231, 1494,
	232, 1494,
	233, 1494,
	236, 1494,
	237, 1494,
	238, 1494,
	240, 1494,
	242, 1494,
	243, 1494,
	245, 1494,
	247, 1494,
	248, 1494,
	249, 1494,
	251, 1494,
	255, 1494,
	256, 1494,
	257, 1494,
	258, 1494,
	259, 1494,
	260, 1494,
	262, 1494,
	263, 1494,
	264, 1494,
	266, 1494,
	267, 1494,
	269, 1494,
	270, 1494,
	273, 1494,
	277, 1494,
	278, 1494,
	279, 1494,
	282, 1494,
	283, 1494,
	284, 1494,
	285, 1494,
	287, 1494,
	288, 1494,
	289, 1494,
	290, 1494,
	291, 1494,
	292, 1494,
	293, 1494,
	294, 1494,
	295, 1494,
	296, 1494,
	297, 1494,
	298, 1494,
	299, 1494,
	300, 1494,
	301, 1494,
	302, 1494,
	303, 1494,
	304, 1494,
	305, 1494,
	306, 1494,
	307, 1494,
	308, 1494,
	310, 1494,
	312, 1494,
	313, 1494,
	314, 1494,
	315, 1494,
	316, 1494,
	317, 1494,
	318, 1494,
	319, 1494,
	320, 1494,
	321, 1494,
	322, 1494,
	323, 1494,
	325, 1494,
	326, 1494,
	328, 1494,
	330, 1494,
	331, 1494,
	333, 1494,
	334, 1494,
	335, 1494,
	336, 1494,
	337, 1494,
	340, 1494,
	343, 1494,
	344, 1494,
	345, 1494,
	346, 1494,
	349, 1494,
	350, 1494,
	351, 1494,
	353, 1494,
	355, 1494,
	356, 1494,
	357, 1494,
	358, 1494,
	359, 1494,
	360, 1494,
	361, 1494,
	362, 1494,
	363, 1494,
	364, 1494,
	365, 1494,
	366, 1494,
	368, 1494,
	369, 1494,
	370, 1494,
	371, 1494,
	372, 1494,
	373, 1494,
	374, 1494,
	375, 1494,
	376, 1494,
	377, 1494,
	378, 1494,
	379, 1494,
	380, 1494,
	381, 1494,
	382, 1494,
	384, 1494,
	385, 1494,
	387, 1494,
	388, 1494,
	389, 1494,
	390, 1494,
	391, 1494,
	392, 1494,
	393, 1494,
	394, 1494,
	395, 1494,
	396, 1494,
	397, 1494,
	398, 1494,
	400, 1494,
	402, 1494,
	403, 1494,
	404, 1494,
	409, 1494,
	411, 1494,
	412, 1494,
	413, 1494,
	414, 1494,
	415, 1494,
	416, 1494,
	417, 1494,
	418, 1494,
	419, 1494,
	421, 1494,
	422, 1494,
	423, 1494,
	425, 1494,
	426, 1494,
	427, 1494,
	428, 1494,
	429, 1494,
	430, 1494,
	432, 1494,
	433, 1494,
	434, 1494,
	435, 1494,
	436, 1494,
	437, 1494,
	438, 1494,
	439, 1494,
	440, 1494,
	441, 1494,
	442, 1494,
	443, 1494,
	445, 1494,
	446, 1494,
	447, 1494,
	448, 1494,
	449, 1494,
	450, 1494,
	452, 1494,
	453, 1494,
	454, 1494,
	455, 1494,
	456, 1494,
	457, 1494,
	459, 1494,
	460, 1494,
	461, 1494,
	462, 1494,
	463, 1494,
	464, 1494,
	465, 1494,
	467, 1494,
	469, 1494,
	470, 1494,
	471, 1494,
	472, 1494,
	473, 1494,
	474, 1494,
	475, 1494,
	476, 1494,
	477, 1494,
	478, 1494,
	479, 1494,
	480, 1494,
	481, 1494,
	482, 1494,
	483, 1494,
	484, 1494,
	486, 1494,
	487, 1494,
	489, 1494,
	490, 1494,
	492, 1494,
	493, 1494,
	494, 1494,
	495, 1494,
	496, 1494,
	497, 1494,
	498, 1494,
	499, 1494,
	500, 1494,
	502, 1494,
	503, 1494,
	504, 1494,
	505, 1494,
	506, 1494,
	508, 1494,
	510, 1494,
	511, 1494,
	512, 1494,
	513, 1494,
	514, 1494,
	515, 1494,
	517, 1494,
	518, 1494,
	519, 1494,
	520, 1494,
	522, 1494,
	523, 1494,
	526, 1494,
	527, 1494,
	528, 1494,
	529, 1494,
	530, 1494,
	531, 1494,
	532, 1494,
	534, 1494,
	537, 1494,
	538, 1494,
	539, 1494,
	540, 1494,
	541, 1494,
	542, 1494,
	544, 1494,
	545, 1494,
	546, 1494,
	547, 1494,
	549, 1494,
	554, 1494,
	555, 1494,
	556, 1494,
	557, 1494,
	558, 1494,
	559, 1494,
	-2, 0,
	-1, 152,
	1, 1349,
	130, 1349,
	247, 1349,
	327, 1349,
	384, 1349,
	393, 1349,
	563, 1349,
	587, 1349,
	-2, 0,
	-1, 154,
	1, 1349,
	587, 1349,
	-2, 0,
	-1, 155,
	1, 1349,
	587, 1349,
	-2, 0,
	-1, 156,
	1, 1349,
	507, 1349,
	587, 1349,
	-2, 0,
	-1, 184,
	150, 1462,
	169, 1462,
	182, 1462,
	239, 1462,
	272, 1462,
	338, 1462,
	348, 1462,
	524, 1462,
	-2, 1437,
	-1, 230,
	4, 1501,
	5, 1501,
	6, 1501,
	7, 1501,
	8, 1501,
	9, 1501,
	10, 1501,
	21, 1501,
	22, 1501,
	23, 1501,
	24, 1501,
	25, 1501,
	26, 1501,
	27, 1501,
	29, 1501,
	30, 1501,
	36, 1501,
	37, 1501,
	41, 1501,
	42, 1501,
	43, 1501,
	44, 1501,
	45, 1501,
	46, 1501,
	47, 1501,
	48, 1501,
	49, 1501,
	50, 1501,
	51, 1501,
	53, 1501,
	54, 1501,
	55, 1501,
	56, 1501,
	58, 1501,
	59, 1501,
	60, 1501,
	61, 1501,
	62, 1501,
	63, 1501,
	64, 1501,
	65, 1501,
	66, 1501,
	67, 1501,
	68, 1501,
	69, 1501,
	70, 1501,
	71, 1501,
	73, 1501,
	74, 1501,
	75, 1501,
	77, 1501,
	79, 1501,
	80, 1501,
	81, 1501,
	82, 1501,
	83, 1501,
	84, 1501,
	85, 1501,
	88, 1501,
	89, 1501,
	90, 1501,
	91, 1501,
	92, 1501,
	94, 1501,
	96, 1501,
	97, 1501,
	98, 1501,
	99, 1501,
	100, 1501,
	101, 1501,
	103, 1501,
	104, 1501,
	105, 1501,
	106, 1501,
	107, 1501,
	108, 1501,
	109, 1501,
	110, 1501,
	111, 1501,
	112, 1501,
	113, 1501,
	114, 1501,
	115, 1501,
	116, 1501,
	117, 1501,
	118, 1501,
	119, 1501,
	120, 1501,
	121, 1501,
	122, 1501,
	123, 1501,
	124, 1501,
	125, 1501,
	126, 1501,
	127, 1501,
	128, 1501,
	129, 1501,
	131, 1501,
	132, 1501,
	133, 1501,
	135, 1501,
	136, 1501,
	137, 1501,
	140, 1501,
	141, 1501,
	142, 1501,
	144, 1501,
	145, 1501,
	147, 1501,
	148, 1501,
	149, 1501,
	151, 1501,
	152, 1501,
	153, 1501,
	154, 1501,
	155, 1501,
	156, 1501,
	157, 1501,
	158, 1501,
	159, 1501,
	160, 1501,
	161, 1501,
	162, 1501,
	163, 1501,
	164, 1501,
	165, 1501,
	166, 1501,
	167, 1501,
	168, 1501,
	174, 1501,
	175, 1501,
	176, 1501,
	177, 1501,
	181, 1501,
	183, 1501,
	184, 1501,
	187, 1501,
	188, 1501,
	189, 1501,
	190, 1501,
	191, 1501,
	192, 1501,
	193, 1501,
	194, 1501,
	195, 1501,
	196, 1501,
	197, 1501,
	198, 1501,
	199, 1501,
	200, 1501,
	202, 1501,
	203, 1501,
	205, 1501,
	206, 1501,
	208, 1501,
	209, 1501,
	210, 1501,
	211, 1501,
	212, 1501,
	213, 1501,
	214, 1501,
	215, 1501,
	216, 1501,
	217, 1501,
	218, 1501,
	219, 1501,
	221, 1501,
	222, 1501,
	223, 1501,
	224, 1501,
	225, 1501,
	229, 1501,
	230, 1501,
	231, 1501,
	232, 1501,
	233, 1501,
	235, 1501,
	236, 1501,
	237, 1501,
	238, 1501,
	240, 1501,
	242, 1501,
	243, 1501,
	244, 1501,
	245, 1501,
	246, 1501,
	247, 1501,
	248, 1501,
	249, 1501,
	250, 1501,
	251, 1501,
	255, 1501,
	256, 1501,
	257, 1501,
	258, 1501,
	259, 1501,
	260, 1501,
	262, 1501,
	263, 1501,
	264, 1501,
	266, 1501,
	267, 1501,
	268, 1501,
	269, 1501,
	270, 1501,
	271, 1501,
	273, 1501,
	277, 1501,
	278, 1501,
	279, 1501,
	280, 1501,
	281, 1501,
	282, 1501,
	283, 1501,
	284, 1501,
	285, 1501,
	287, 1501,
	288, 1501,
	289, 1501,
	290, 1501,
	291, 1501,
	292, 1501,
	293, 1501,
	294, 1501,
	295, 1501,
	296, 1501,
	297, 1501,
	298, 1501,
	299, 1501,
	300, 1501,
	301, 1501,
	302, 1501,
	303, 1501,
	304, 1501,
	305, 1501,
	306, 1501,
	307, 1501,
	308, 1501,
	310, 1501,
	311, 1501,
	312, 1501,
	313, 1501,
	314, 1501,
	315, 1501,
	316, 1501,
	317, 1501,
	318, 1501,
	319, 1501,
	320, 1501,
	321, 1501,
	322, 1501,
	323, 1501,
	324, 1501,
	325, 1501,
	326, 1501,
	327, 1501,
	328, 1501,
	329, 1501,
	330, 1501,
	331, 1501,
	332, 1501,
	333, 1501,
	334, 1501,
	335, 1501,
	336, 1501,
	337, 1501,
	340, 1501,
	344, 1501,
	345, 1501,
	346, 1501,
	349, 1501,
	350, 1501,
	351, 1501,
	352, 1501,
	353, 1501,
	354, 1501,
	355, 1501,
	356, 1501,
	357, 1501,
	358, 1501,
	359, 1501,
	360, 1501,
	361, 1501,
	362, 1501,
	363, 1501,
	364, 1501,
	365, 1501,
	366, 1501,
	368, 1501,
	369, 1501,
	370, 1501,
	371, 1501,
	372, 1501,
	373, 1501,
	374, 1501,
	375, 1501,
	376, 1501,
	377, 1501,
	378, 1501,
	379, 1501,
	380, 1501,
	381, 1501,
	382, 1501,
	384, 1501,
	385, 1501,
	387, 1501,
	388, 1501,
	389, 1501,
	390, 1501,
	391, 1501,
	392, 1501,
	393, 1501,
	394, 1501,
	395, 1501,
	396, 1501,
	397, 1501,
	398, 1501,
	400, 1501,
	402, 1501,
	403, 1501,
	404, 1501,
	409, 1501,
	411, 1501,
	412, 1501,
	413, 1501,
	414, 1501,
	415, 1501,
	416, 1501,
	417, 1501,
	418, 1501,
	419, 1501,
	421, 1501,
	422, 1501,
	423, 1501,
	424, 1501,
	425, 1501,
	426, 1501,
	427, 1501,
	428, 1501,
	429, 1501,
	430, 1501,
	432, 1501,
	433, 1501,
	434, 1501,
	435, 1501,
	436, 1501,
	437, 1501,
	438, 1501,
	439, 1501,
	440, 1501,
	441, 1501,
	442, 1501,
	443, 1501,
	445, 1501,
	446, 1501,
	447, 1501,
	448, 1501,
	449, 1501,
	450, 1501,
	451, 1501,
	452, 1501,
	453, 1501,
	454, 1501,
	455, 1501,
	456, 1501,
	457, 1501,
	458, 1501,
	459, 1501,
	460, 1501,
	461, 1501,
	462, 1501,
	463, 1501,
	464, 1501,
	465, 1501,
	467, 1501,
	469, 1501,
	470, 1501,
	471, 1501,
	472, 1501,
	473, 1501,
	474, 1501,
	475, 1501,
	476, 1501,
	477, 1501,
	478, 1501,
	479, 1501,
	480, 1501,
	481, 1501,
	482, 1501,
	483, 1501,
	484, 1501,
	486, 1501,
	487, 1501,
	488, 1501,
	489, 1501,
	490, 1501,
	492, 1501,
	493, 1501,
	494, 1501,
	495, 1501,
	496, 1501,
	497, 1501,
	498, 1501,
	499, 1501,
	500, 1501,
	502, 1501,
	503, 1501,
	504, 1501,
	505, 1501,
	506, 1501,
	508, 1501,
	510, 1501,
	511, 1501,
	512, 1501,
	513, 1501,
	514, 1501,
	515, 1501,
	516, 1501,
	517, 1501,
	518, 1501,
	519, 1501,
	520, 1501,
	522, 1501,
	523, 1501,
	525, 1501,
	526, 1501,
	527, 1501,
	528, 1501,
	529, 1501,
	530, 1501,
	531, 1501,
	532, 1501,
	533, 1501,
	534, 1501,
	537, 1501,
	538, 1501,
	539, 1501,
	540, 1501,
	541, 1501,
	542, 1501,
	544, 1501,
	545, 1501,
	546, 1501,
	547, 1501,
	549, 1501,
	554, 1501,
	555, 1501,
	556, 1501,
	557, 1501,
	558, 1501,
	559, 1501,
	560, 1501,
	568, 1501,
	575, 1501,
	576, 1501,
	577, 1501,
	584, 1501,
	588, 1501,
	-2, 0,
	-1, 728,
	4, 1250,
	21, 1250,
	22, 1250,
	23, 1250,
	24, 1250,
	25, 1250,
	26, 1250,
	27, 1250,
	29, 1250,
	30, 1250,
	36, 1250,
	41, 1250,
	42, 1250,
	44, 1250,
	45, 1250,
	46, 1250,
	47, 1250,
	48, 1250,
	49, 1250,
	50, 1250,
	51, 1250,
	53, 1250,
	54, 1250,
	55, 1250,
	56, 1250,
	58, 1250,
	59, 1250,
	60, 1250,
	61, 1250,
	62, 1250,
	63, 1250,
	64, 1250,
	68, 1250,
	69, 1250,
	70, 1250,
	71, 1250,
	73, 1250,
	74, 1250,
	75, 1250,
	79, 1250,
	80, 1250,
	81, 1250,
	82, 1250,
	83, 1250,
	84, 1250,
	85, 1250,
	88, 1250,
	89, 1250,
	90, 1250,
	91, 1250,
	92, 1250,
	94, 1250,
	96, 1250,
	97, 1250,
	98, 1250,
	99, 1250,
	100, 1250,
	101, 1250,
	103, 1250,
	104, 1250,
	105, 1250,
	107, 1250,
	108, 1250,
	109, 1250,
	117, 1250,
	118, 1250,
	119, 1250,
	120, 1250,
	121, 1250,
	123, 1250,
	124, 1250,
	125, 1250,
	127, 1250,
	128, 1250,
	129, 1250,
	131, 1250,
	132, 1250,
	133, 1250,
	135, 1250,
	136, 1250,
	137, 1250,
	140, 1250,
	141, 1250,
	142, 1250,
	144, 1250,
	145, 1250,
	147, 1250,
	148, 1250,
	149, 1250,
	151, 1250,
	152, 1250,
	153, 1250,
	154, 1250,
	155, 1250,
	156, 1250,
	157, 1250,
	158, 1250,
	159, 1250,
	160, 1250,
	161, 1250,
	162, 1250,
	163, 1250,
	164, 1250,
	165, 1250,
	166, 1250,
	168, 1250,
	174, 1250,
	175, 1250,
	176, 1250,
	177, 1250,
	181, 1250,
	183, 1250,
	184, 1250,
	188, 1250,
	189, 1250,
	190, 1250,
	191, 1250,
	192, 1250,
	193, 1250,
	194, 1250,
	195, 1250,
	196, 1250,
	197, 1250,
	198, 1250,
	199, 1250,
	200, 1250,
	202, 1250,
	203, 1250,
	205, 1250,
	206, 1250,
	208, 1250,
	209, 1250,
	210, 1250,
	211, 1250,
	212, 1250,
	213, 1250,
	214, 1250,
	215, 1250,
	216, 1250,
	218, 1250,
	219, 1250,
	221, 1250,
	222, 1250,
	223, 1250,
	224, 1250,
	225, 1250,
	229, 1250,
	230, 1250,
	231, 1250,
	232, 1250,
	233, 1250,
	236, 1250,
	237, 1250,
	238, 1250,
	240, 1250,
	242, 1250,
	243, 1250,
	245, 1250,
	247, 1250,
	248, 1250,
	249, 1250,
	251, 1250,
	255, 1250,
	256, 1250,
	257, 1250,
	258, 1250,
	259, 1250,
	260, 1250,
	262, 1250,
	263, 1250,
	264, 1250,
	266, 1250,
	267, 1250,
	269, 1250,
	270, 1250,
	273, 1250,
	277, 1250,
	278, 1250,
	279, 1250,
	282, 1250,
	283, 1250,
	284, 1250,
	285, 1250,
	287, 1250,
	288, 1250,
	289, 1250,
	290, 1250,
	291, 1250,
	292, 1250,
	293, 1250,
	294, 1250,
	295, 1250,
	296, 1250,
	297, 1250,
	298, 1250,
	299, 1250,
	300, 1250,
	301, 1250,
	302, 1250,
	303, 1250,
	304, 1250,
	305, 1250,
	306, 1250,
	307, 1250,
	308, 1250,
	310, 1250,
	312, 1250,
	313, 1250,
	314, 1250,
	315, 1250,
	316, 1250,
	317, 1250,
	318, 1250,
	319, 1250,
	320, 1250,
	321, 1250,
	322, 1250,
	323, 1250,
	325, 1250,
	326, 1250,
	328, 1250,
	330, 1250,
	331, 1250,
	333, 1250,
	334, 1250,
	335, 1250,
	336, 1250,
	337, 1250,
	340, 1250,
	344, 1250,
	345, 1250,
	346, 1250,
	349, 1250,
	350, 1250,
	351, 1250,
	353, 1250,
	355, 1250,
	356, 1250,
	357, 1250,
	358, 1250,
	359, 1250,
	360, 1250,
	361, 1250,
	362, 1250,
	363, 1250,
	364, 1250,
	365, 1250,
	366, 1250,
	368, 1250,
	369, 1250,
	370, 1250,
	371, 1250,
	372, 1250,
	373, 1250,
	374, 1250,
	375, 1250,
	376, 1250,
	377, 1250,
	378, 1250,
	379, 1250,
	380, 1250,
	381, 1250,
	382, 1250,
	384, 1250,
	385, 1250,
	387, 1250,
	388, 1250,
	389, 1250,
	390, 1250,
	391, 1250,
	392, 1250,
	393, 1250,
	394, 1250,
	395, 1250,
	396, 1250,
	397, 1250,
	398, 1250,
	400, 1250,
	402, 1250,
	403, 1250,
	404, 1250,
	409, 1250,
	411, 1250,
	412, 1250,
	413, 1250,
	414, 1250,
	415, 1250,
	416, 1250,
	417, 1250,
	418, 1250,
	419, 1250,
	421, 1250,
	422, 1250,
	423, 1250,
	425, 1250,
	426, 1250,
	427, 1250,
	428, 1250,
	429, 1250,
	430, 1250,
	432, 1250,
	433, 1250,
	434, 1250,
	435, 1250,
	436, 1250,
	437, 1250,
	438, 1250,
	439, 1250,
	440, 1250,
	441, 1250,
	442, 1250,
	443, 1250,
	445, 1250,
	446, 1250,
	447, 1250,
	448, 1250,
	449, 1250,
	450, 1250,
	452, 1250,
	453, 1250,
	454, 1250,
	455, 1250,
	456, 1250,
	457, 1250,
	459, 1250,
	460, 1250,
	461, 1250,
	462, 1250,
	463, 1250,
	464, 1250,
	465, 1250,
	467, 1250,
	469, 1250,
	470, 1250,
	471, 1250,
	472, 1250,
	473, 1250,
	474, 1250,
	475, 1250,
	476, 1250,
	477, 1250,
	478, 1250,
	479, 1250,
	480, 1250,
	481, 1250,
	482, 1250,
	483, 1250,
	484, 1250,
	486, 1250,
	487, 1250,
	489, 1250,
	490, 1250,
	492, 1250,
	493, 1250,
	494, 1250,
	495, 1250,
	496, 1250,
	497, 1250,
	498, 1250,
	499, 1250,
	500, 1250,
	502, 1250,
	503, 1250,
	504, 1250,
	505, 1250,
	506, 1250,
	508, 1250,
	510, 1250,
	511, 1250,
	512, 1250,
	513, 1250,
	514, 1250,
	515, 1250,
	517, 1250,
	518, 1250,
	519, 1250,
	520, 1250,
	522, 1250,
	523, 1250,
	526, 1250,
	527, 1250,
	528, 1250,
	529, 1250,
	530, 1250,
	531, 1250,
	532, 1250,
	534, 1250,
	537, 1250,
	538, 1250,
	539, 1250,
	540, 1250,
	541, 1250,
	542, 1250,
	544, 1250,
	545, 1250,
	546, 1250,
	547, 1250,
	549, 1250,
	554, 1250,
	555, 1250,
	556, 1250,
	557, 1250,
	558, 1250,
	559, 1250,
	-2, 0,
	-1, 747,
	186, 2258,
	507, 2258,
	567, 2258,
	586, 2258,
	-2, 0,
	-1, 748,
	186, 2364,
	507, 2364,
	567, 2364,
	586, 2364,
	-2, 0,
	-1, 749,
	186, 2245,
	507, 2245,
	567, 2245,
	586, 2245,
	-2, 0,
	-1, 751,
	186, 2496,
	507, 2496,
	567, 2496,
	586, 2496,
	-2, 0,
	-1, 753,
	186, 2536,
	507, 2536,
	567, 2536,
	586, 2536,
	-2, 0,
	-1, 760,
	186, 2391,
	507, 2391,
	567, 2391,
	586, 2391,
	-2, 680,
	-1, 793,
	586, 2194,
	589, 2194,
	-2, 953,
	-1, 794,
	586, 2196,
	589, 2196,
	-2, 954,
	-1, 795,
	586, 2195,
	589, 2195,
	-2, 955,
	-1, 796,
	589, 2121,
	-2, 956,
	-1, 819,
	182, 249,
	-2, 0,
	-1, 843,
	43, 2168,
	-2, 0,
	-1, 844,
	544, 1228,
	-2, 1023,
	-1, 860,
	4, 1630,
	21, 1630,
	22, 1630,
	23, 1630,
	24, 1630,
	25, 1630,
	26, 1630,
	27, 1630,
	29, 1630,
	30, 1630,
	36, 1630,
	41, 1630,
	42, 1630,
	44, 1630,
	45, 1630,
	46, 1630,
	47, 1630,
	48, 1630,
	49, 1630,
	50, 1630,
	51, 1630,
	53, 1630,
	54, 1630,
	55, 1630,
	56, 1630,
	58, 1630,
	59, 1630,
	60, 1630,
	61, 1630,
	62, 1630,
	63, 1630,
	64, 1630,
	68, 1630,
	69, 1630,
	70, 1630,
	71, 1630,
	73, 1630,
	74, 1630,
	75, 1630,
	79, 1630,
	80, 1630,
	81, 1630,
	82, 1630,
	83, 1630,
	84, 1630,
	85, 1630,
	88, 1630,
	89, 1630,
	90, 1630,
	91, 1630,
	92, 1630,
	94, 1630,
	96, 1630,
	97, 1630,
	98, 1630,
	99, 1630,
	100, 1630,
	101, 1630,
	103, 1630,
	104, 1630,
	105, 1630,
	107, 1630,
	108, 1630,
	109, 1630,
	117, 1630,
	118, 1630,
	119, 1630,
	120, 1630,
	121, 1630,
	123, 1630,
	124, 1630,
	125, 1630,
	127, 1630,
	128, 1630,
	129, 1630,
	131, 1630,
	132, 1630,
	133, 1630,
	135, 1630,
	136, 1630,
	137, 1630,
	140, 1630,
	141, 1630,
	142, 1630,
	144, 1630,
	145, 1630,
	147, 1630,
	148, 1630,
	149, 1630,
	151, 1630,
	152, 1630,
	153, 1630,
	154, 1630,
	155, 1630,
	156, 1630,
	157, 1630,
	158, 1630,
	159, 1630,
	160, 1630,
	161, 1630,
	162, 1630,
	163, 1630,
	164, 1630,
	165, 1630,
	166, 1630,
	168, 1630,
	174, 1630,
	175, 1630,
	176, 1630,
	177, 1630,
	181, 1630,
	183, 1630,
	184, 1630,
	188, 1630,
	189, 1630,
	190, 1630,
	191, 1630,
	192, 1630,
	193, 1630,
	194, 1630,
	195, 1630,
	196, 1630,
	197, 1630,
	198, 1630,
	199, 1630,
	200, 1630,
	202, 1630,
	203, 1630,
	205, 1630,
	206, 1630,
	208, 1630,
	209, 1630,
	210, 1630,
	211, 1630,
	212, 1630,
	213, 1630,
	214, 1630,
	215, 1630,
	216, 1630,
	218, 1630,
	219, 1630,
	221, 1630,
	222, 1630,
	223, 1630,
	224, 1630,
	225, 1630,
	229, 1630,
	230, 1630,
	231, 1630,
	232, 1630,
	233, 1630,
	236, 1630,
	237, 1630,
	238, 1630,
	240, 1630,
	242, 1630,
	243, 1630,
	245, 1630,
	247, 1630,
	248, 1630,
	249, 1630,
	251, 1630,
	255, 1630,
	256, 1630,
	257, 1630,
	258, 1630,
	259, 1630,
	260, 1630,
	262, 1630,
	263, 1630,
	264, 1630,
	266, 1630,
	267, 1630,
	269, 1630,
	270, 1630,
	273, 1630,
	277, 1630,
	278, 1630,
	279, 1630,
	282, 1630,
	283, 1630,
	284, 1630,
	285, 1630,
	287, 1630,
	288, 1630,
	289, 1630,
	290, 1630,
	291, 1630,
	292, 1630,
	293, 1630,
	294, 1630,
	295, 1630,
	296, 1630,
	297, 1630,
	298, 1630,
	299, 1630,
	300, 1630,
	301, 1630,
	302, 1630,
	303, 1630,
	304, 1630,
	305, 1630,
	306, 1630,
	307, 1630,
	308, 1630,
	310, 1630,
	312, 1630,
	313, 1630,
	314, 1630,
	315, 1630,
	316, 1630,
	317, 1630,
	318, 1630,
	319, 1630,
	320, 1630,
	321, 1630,
	322, 1630,
	323, 1630,
	325, 1630,
	326, 1630,
	328, 1630,
	330, 1630,
	331, 1630,
	333, 1630,
	334, 1630,
	335, 1630,
	336, 1630,
	337, 1630,
	340, 1630,
	344, 1630,
	345, 1630,
	346, 1630,
	349, 1630,
	350, 1630,
	351, 1630,
	353, 1630,
	355, 1630,
	356, 1630,
	357, 1630,
	358, 1630,
	359, 1630,
	360, 1630,
	361, 1630,
	362, 1630,
	363, 1630,
	364, 1630,
	365, 1630,
	366, 1630,
	368, 1630,
	369, 1630,
	370, 1630,
	371, 1630,
	372, 1630,
	373, 1630,
	374, 1630,
	375, 1630,
	376, 1630,
	377, 1630,
	378, 1630,
	379, 1630,
	380, 1630,
	381, 1630,
	382, 1630,
	384, 1630,
	385, 1630,
	387, 1630,
	388, 1630,
	389, 1630,
	390, 1630,
	391, 1630,
	392, 1630,
	393, 1630,
	394, 1630,
	395, 1630,
	396, 1630,
	397, 1630,
	398, 1630,
	400, 1630,
	402, 1630,
	403, 1630,
	404, 1630,
	409, 1630,
	411, 1630,
	412, 1630,
	413, 1630,
	414, 1630,
	415, 1630,
	416, 1630,
	417, 1630,
	418, 1630,
	419, 1630,
	421, 1630,
	422, 1630,
	423, 1630,
	425, 1630,
	426, 1630,
	427, 1630,
	428, 1630,
	429, 1630,
	430, 1630,
	432, 1630,
	433, 1630,
	434, 1630,
	435, 1630,
	436, 1630,
	437, 1630,
	438, 1630,
	439, 1630,
	440, 1630,
	441, 1630,
	442, 1630,
	443, 1630,
	445, 1630,
	446, 1630,
	447, 1630,
	448, 1630,
	449, 1630,
	450, 1630,
	452, 1630,
	453, 1630,
	454, 1630,
	455, 1630,
	456, 1630,
	457, 1630,
	459, 1630,
	460, 1630,
	461, 1630,
	462, 1630,
	463, 1630,
	464, 1630,
	465, 1630,
	467, 1630,
	469, 1630,
	470, 1630,
	471, 1630,
	472, 1630,
	473, 1630,
	474, 1630,
	475, 1630,
	476, 1630,
	477, 1630,
	478, 1630,
	479, 1630,
	480, 1630,
	481, 1630,
	482, 1630,
	483, 1630,
	484, 1630,
	486, 1630,
	487, 1630,
	489, 1630,
	490, 1630,
	492, 1630,
	493, 1630,
	494, 1630,
	495, 1630,
	496, 1630,
	497, 1630,
	498, 1630,
	499, 1630,
	500, 1630,
	502, 1630,
	503, 1630,
	504, 1630,
	505, 1630,
	506, 1630,
	508, 1630,
	510, 1630,
	511, 1630,
	512, 1630,
	513, 1630,
	514, 1630,
	515, 1630,
	517, 1630,
	518, 1630,
	519, 1630,
	520, 1630,
	522, 1630,
	523, 1630,
	526, 1630,
	527, 1630,
	528, 1630,
	529, 1630,
	530, 1630,
	531, 1630,
	532, 1630,
	534, 1630,
	537, 1630,
	538, 1630,
	539, 1630,
	540, 1630,
	541, 1630,
	542, 1630,
	544, 1630,
	545, 1630,
	546, 1630,
	547, 1630,
	549, 1630,
	554, 1630,
	555, 1630,
	556, 1630,
	557, 1630,
	558, 1630,
	559, 1630,
	-2, 0,
	-1, 868,
	259, 396,
	-2, 0,
	-1, 939,
	389, 847,
	450, 847,
	490, 847,
	512, 847,
	-2, 0,
	-1, 940,
	389, 846,
	450, 846,
	490, 846,
	512, 846,
	-2, 786,
	-1, 944,
	1, 893,
	583, 893,
	585, 893,
	587, 893,
	-2, 0,
	-1, 945,
	1, 821,
	583, 821,
	585, 821,
	587, 821,
	-2, 0,
	-1, 946,
	1, 825,
	583, 825,
	585, 825,
	587, 825,
	-2, 0,
	-1, 947,
	1, 952,
	182, 952,
	583, 952,
	585, 952,
	587, 952,
	-2, 0,
	-1, 955,
	1, 852,
	583, 852,
	585, 852,
	587, 852,
	-2, 0,
	-1, 961,
	1, 893,
	583, 893,
	585, 893,
	587, 893,
	-2, 0,
	-1, 962,
	1, 895,
	583, 895,
	585, 895,
	587, 895,
	-2, 0,
	-1, 963,
	1, 898,
	583, 898,
	585, 898,
	587, 898,
	-2, 0,
	-1, 969,
	1, 916,
	583, 916,
	585, 916,
	587, 916,
	-2, 0,
	-1, 970,
	1, 918,
	583, 918,
	585, 918,
	587, 918,
	-2, 0,
	-1, 975,
	1, 946,
	583, 946,
	585, 946,
	587, 946,
	-2, 0,
	-1, 1022,
	169, 1505,
	182, 1505,
	272, 1505,
	338, 1505,
	-2, 1441,
	-1, 1037,
	169, 1504,
	182, 1504,
	272, 1504,
	338, 1504,
	-2, 1438,
	-1, 1063,
	586, 2193,
	-2, 688,
	-1, 1091,
	5, 2185,
	584, 2183,
	-2, 2174,
	-1, 1099,
	5, 2206,
	584, 2203,
	-2, 2194,
	-1, 1100,
	5, 2207,
	584, 2204,
	-2, 2195,
	-1, 1108,
	586, 2191,
	-2, 2173,
	-1, 1109,
	584, 2619,
	-2, 2192,
	-1, 1132,
	584, 2618,
	-2, 2208,
	-1, 1133,
	5, 1705,
	-2, 2589,
	-1, 1134,
	5, 1706,
	-2, 2590,
	-1, 1135,
	5, 1707,
	-2, 2604,
	-1, 1136,
	5, 1708,
	-2, 2568,
	-1, 1137,
	5, 1709,
	-2, 2602,
	-1, 1138,
	5, 1717,
	-2, 2581,
	-1, 1139,
	5, 1704,
	-2, 2577,
	-1, 1140,
	5, 1704,
	-2, 2576,
	-1, 1141,
	5, 1704,
	-2, 2595,
	-1, 1142,
	5, 1715,
	-2, 2570,
	-1, 1143,
	5, 1720,
	-2, 2569,
	-1, 1144,
	5, 1722,
	-2, 2614,
	-1, 1147,
	5, 1744,
	-2, 2607,
	-1, 1148,
	5, 1736,
	-2, 2608,
	-1, 1149,
	5, 1744,
	-2, 2609,
	-1, 1150,
	5, 1740,
	-2, 2610,
	-1, 1151,
	5, 1690,
	-2, 2582,
	-1, 1152,
	5, 1691,
	-2, 2583,
	-1, 1153,
	5, 1692,
	-2, 2571,
	-1, 1181,
	5, 1727,
	-2, 2615,
	-1, 1182,
	5, 1728,
	-2, 2605,
	-1, 1183,
	5, 1729,
	545, 1729,
	-2, 2572,
	-1, 1184,
	5, 1730,
	545, 1730,
	-2, 2573,
	-1, 1221,
	584, 2203,
	-2, 2194,
	-1, 1222,
	584, 2204,
	-2, 2195,
	-1, 1322,
	186, 2536,
	507, 2536,
	567, 2536,
	586, 2536,
	-2, 0,
	-1, 1325,
	1, 666,
	587, 666,
	-2, 1357,
	-1, 1453,
	357, 2169,
	411, 2169,
	452, 2169,
	577, 2169,
	-2, 2159,
	-1, 1464,
	588, 2169,
	-2, 2170,
	-1, 1473,
	1, 1225,
	583, 1225,
	585, 1225,
	587, 1225,
	-2, 1490,
	-1, 1521,
	396, 1022,
	544, 1022,
	-2, 391,
	-1, 1538,
	43, 2167,
	-2, 988,
	-1, 1545,
	1, 1225,
	583, 1225,
	585, 1225,
	587, 1225,
	-2, 1490,
	-1, 1553,
	4, 1250,
	21, 1250,
	22, 1250,
	23, 1250,
	24, 1250,
	25, 1250,
	26, 1250,
	27, 1250,
	29, 1250,
	30, 1250,
	36, 1250,
	41, 1250,
	42, 1250,
	44, 1250,
	45, 1250,
	46, 1250,
	47, 1250,
	48, 1250,
	49, 1250,
	50, 1250,
	51, 1250,
	53, 1250,
	54, 1250,
	55, 1250,
	56, 1250,
	58, 1250,
	59, 1250,
	60, 1250,
	61, 1250,
	62, 1250,
	63, 1250,
	64, 1250,
	68, 1250,
	69, 1250,
	70, 1250,
	71, 1250,
	73, 1250,
	74, 1250,
	75, 1250,
	79, 1250,
	80, 1250,
	81, 1250,
	82, 1250,
	83, 1250,
	84, 1250,
	85, 1250,
	88, 1250,
	89, 1250,
	90, 1250,
	91, 1250,
	92, 1250,
	94, 1250,
	96, 1250,
	97, 1250,
	98, 1250,
	99, 1250,
	100, 1250,
	101, 1250,
	103, 1250,
	104, 1250,
	105, 1250,
	107, 1250,
	108, 1250,
	109, 1250,
	117, 1250,
	118, 1250,
	119, 1250,
	120, 1250,
	121, 1250,
	123, 1250,
	124, 1250,
	125, 1250,
	127, 1250,
	128, 1250,
	129, 1250,
	131, 1250,
	132, 1250,
	133, 1250,
	135, 1250,
	136, 1250,
	137, 1250,
	140, 1250,
	141, 1250,
	142, 1250,
	144, 1250,
	145, 1250,
	147, 1250,
	148, 1250,
	149, 1250,
	151, 1250,
	152, 1250,
	153, 1250,
	154, 1250,
	155, 1250,
	156, 1250,
	157, 1250,
	158, 1250,
	159, 1250,
	160, 1250,
	161, 1250,
	162, 1250,
	163, 1250,
	164, 1250,
	165, 1250,
	166, 1250,
	174, 1250,
	175, 1250,
	176, 1250,
	177, 1250,
	181, 1250,
	183, 1250,
	184, 1250,
	188, 1250,
	189, 1250,
	190, 1250,
	191, 1250,
	192, 1250,
	193, 1250,
	194, 1250,
	195, 1250,
	196, 1250,
	197, 1250,
	198, 1250,
	199, 1250,
	200, 1250,
	202, 1250,
	203, 1250,
	205, 1250,
	206, 1250,
	208, 1250,
	209, 1250,
	210, 1250,
	211, 1250,
	212, 1250,
	213, 1250,
	214, 1250,
	215, 1250,
	216, 1250,
	218, 1250,
	219, 1250,
	221, 1250,
	222, 1250,
	223, 1250,
	224, 1250,
	225, 1250,
	230, 1250,
	231, 1250,
	232, 1250,
	233, 1250,
	236, 1250,
	237, 1250,
	238, 1250,
	240, 1250,
	242, 1250,
	243, 1250,
	245, 1250,
	247, 1250,
	248, 1250,
	249, 1250,
	251, 1250,
	255, 1250,
	256, 1250,
	257, 1250,
	258, 1250,
	259, 1250,
	260, 1250,
	262, 1250,
	263, 1250,
	264, 1250,
	266, 1250,
	267, 1250,
	269, 1250,
	270, 1250,
	273, 1250,
	277, 1250,
	278, 1250,
	279, 1250,
	282, 1250,
	283, 1250,
	284, 1250,
	285, 1250,
	287, 1250,
	288, 1250,
	289, 1250,
	290, 1250,
	291, 1250,
	292, 1250,
	293, 1250,
	294, 1250,
	295, 1250,
	296, 1250,
	297, 1250,
	298, 1250,
	299, 1250,
	300, 1250,
	301, 1250,
	302, 1250,
	303, 1250,
	304, 1250,
	305, 1250,
	306, 1250,
	307, 1250,
	308, 1250,
	310, 1250,
	312, 1250,
	313, 1250,
	314, 1250,
	315, 1250,
	316, 1250,
	317, 1250,
	318, 1250,
	319, 1250,
	320, 1250,
	321, 1250,
	322, 1250,
	323, 1250,
	325, 1250,
	326, 1250,
	330, 1250,
	331, 1250,
	333, 1250,
	334, 1250,
	335, 1250,
	336, 1250,
	337, 1250,
	340, 1250,
	342, 1250,
	344, 1250,
	345, 1250,
	346, 1250,
	349, 1250,
	350, 1250,
	351, 1250,
	353, 1250,
	355, 1250,
	356, 1250,
	357, 1250,
	358, 1250,
	359, 1250,
	360, 1250,
	361, 1250,
	362, 1250,
	363, 1250,
	364, 1250,
	365, 1250,
	366, 1250,
	368, 1250,
	369, 1250,
	370, 1250,
	371, 1250,
	372, 1250,
	373, 1250,
	374, 1250,
	375, 1250,
	376, 1250,
	377, 1250,
	378, 1250,
	379, 1250,
	380, 1250,
	381, 1250,
	382, 1250,
	384, 1250,
	385, 1250,
	387, 1250,
	388, 1250,
	389, 1250,
	390, 1250,
	391, 1250,
	392, 1250,
	393, 1250,
	394, 1250,
	395, 1250,
	396, 1250,
	397, 1250,
	398, 1250,
	400, 1250,
	402, 1250,
	403, 1250,
	404, 1250,
	409, 1250,
	411, 1250,
	412, 1250,
	413, 1250,
	414, 1250,
	415, 1250,
	416, 1250,
	417, 1250,
	418, 1250,
	419, 1250,
	421, 1250,
	422, 1250,
	423, 1250,
	425, 1250,
	426, 1250,
	427, 1250,
	428, 1250,
	429, 1250,
	430, 1250,
	432, 1250,
	433, 1250,
	434, 1250,
	435, 1250,
	436, 1250,
	437, 1250,
	438, 1250,
	439, 1250,
	440, 1250,
	441, 1250,
	442, 1250,
	443, 1250,
	445, 1250,
	446, 1250,
	447, 1250,
	448, 1250,
	449, 1250,
	450, 1250,
	452, 1250,
	453, 1250,
	454, 1250,
	455, 1250,
	456, 1250,
	457, 1250,
	459, 1250,
	460, 1250,
	461, 1250,
	462, 1250,
	463, 1250,
	464, 1250,
	465, 1250,
	467, 1250,
	469, 1250,
	470, 1250,
	471, 1250,
	472, 1250,
	473, 1250,
	474, 1250,
	475, 1250,
	476, 1250,
	477, 1250,
	478, 1250,
	479, 1250,
	480, 1250,
	481, 1250,
	482, 1250,
	483, 1250,
	484, 1250,
	486, 1250,
	487, 1250,
	489, 1250,
	490, 1250,
	492, 1250,
	493, 1250,
	494, 1250,
	495, 1250,
	496, 1250,
	497, 1250,
	498, 1250,
	499, 1250,
	500, 1250,
	502, 1250,
	503, 1250,
	504, 1250,
	505, 1250,
	506, 1250,
	508, 1250,
	510, 1250,
	511, 1250,
	512, 1250,
	513, 1250,
	514, 1250,
	515, 1250,
	517, 1250,
	518, 1250,
	519, 1250,
	520, 1250,
	522, 1250,
	523, 1250,
	526, 1250,
	527, 1250,
	528, 1250,
	529, 1250,
	530, 1250,
	531, 1250,
	532, 1250,
	534, 1250,
	537, 1250,
	538, 1250,
	539, 1250,
	540, 1250,
	541, 1250,
	542, 1250,
	544, 1250,
	545, 1250,
	546, 1250,
	547, 1250,
	549, 1250,
	554, 1250,
	555, 1250,
	556, 1250,
	557, 1250,
	558, 1250,
	559, 1250,
	-2, 0,
	-1, 1576,
	1, 536,
	583, 536,
	585, 536,
	587, 536,
	-2, 1461,
	-1, 1579,
	4, 2613,
	11, 2613,
	12, 2613,
	14, 2613,
	15, 2613,
	16, 2613,
	17, 2613,
	18, 2613,
	19, 2613,
	21, 2613,
	22, 2613,
	23, 2613,
	24, 2613,
	25, 2613,
	26, 2613,
	27, 2613,
	29, 2613,
	30, 2613,
	33, 2613,
	34, 2613,
	36, 2613,
	38, 2613,
	41, 2613,
	42, 2613,
	44, 2613,
	45, 2613,
	46, 2613,
	47, 2613,
	48, 2613,
	49, 2613,
	50, 2613,
	51, 2613,
	53, 2613,
	54, 2613,
	55, 2613,
	56, 2613,
	58, 2613,
	59, 2613,
	60, 2613,
	61, 2613,
	62, 2613,
	63, 2613,
	64, 2613,
	68, 2613,
	69, 2613,
	70, 2613,
	71, 2613,
	73, 2613,
	74, 2613,
	75, 2613,
	76, 2613,
	79, 2613,
	80, 2613,
	81, 2613,
	82, 2613,
	83, 2613,
	84, 2613,
	85, 2613,
	86, 2613,
	88, 2613,
	89, 2613,
	90, 2613,
	91, 2613,
	92, 2613,
	94, 2613,
	95, 2613,
	96, 2613,
	97, 2613,
	98, 2613,
	99, 2613,
	100, 2613,
	101, 2613,
	103, 2613,
	104, 2613,
	105, 2613,
	106, 2613,
	107, 2613,
	108, 2613,
	109, 2613,
	117, 2613,
	118, 2613,
	119, 2613,
	120, 2613,
	121, 2613,
	123, 2613,
	124, 2613,
	125, 2613,
	127, 2613,
	128, 2613,
	129, 2613,
	131, 2613,
	132, 2613,
	133, 2613,
	135, 2613,
	136, 2613,
	137, 2613,
	140, 2613,
	141, 2613,
	142, 2613,
	144, 2613,
	145, 2613,
	147, 2613,
	148, 2613,
	149, 2613,
	151, 2613,
	152, 2613,
	153, 2613,
	154, 2613,
	155, 2613,
	156, 2613,
	157, 2613,
	158, 2613,
	159, 2613,
	160, 2613,
	161, 2613,
	162, 2613,
	163, 2613,
	164, 2613,
	165, 2613,
	166, 2613,
	170, 2613,
	171, 2613,
	172, 2613,
	173, 2613,
	174, 2613,
	175, 2613,
	176, 2613,
	177, 2613,
	180, 2613,
	181, 2613,
	183, 2613,
	184, 2613,
	187, 2613,
	188, 2613,
	189, 2613,
	190, 2613,
	191, 2613,
	192, 2613,
	193, 2613,
	194, 2613,
	195, 2613,
	196, 2613,
	197, 2613,
	198, 2613,
	199, 2613,
	200, 2613,
	202, 2613,
	203, 2613,
	205, 2613,
	206, 2613,
	208, 2613,
	209, 2613,
	210, 2613,
	211, 2613,
	212, 2613,
	213, 2613,
	214, 2613,
	215, 2613,
	216, 2613,
	217, 2613,
	218, 2613,
	219, 2613,
	220, 2613,
	221, 2613,
	222, 2613,
	223, 2613,
	224, 2613,
	225, 2613,
	227, 2613,
	228, 2613,
	230, 2613,
	231, 2613,
	232, 2613,
	233, 2613,
	235, 2613,
	236, 2613,
	237, 2613,
	238, 2613,
	240, 2613,
	242, 2613,
	243, 2613,
	244, 2613,
	245, 2613,
	246, 2613,
	247, 2613,
	248, 2613,
	249, 2613,
	250, 2613,
	251, 2613,
	253, 2613,
	254, 2613,
	255, 2613,
	256, 2613,
	257, 2613,
	258, 2613,
	259, 2613,
	260, 2613,
	262, 2613,
	263, 2613,
	264, 2613,
	266, 2613,
	267, 2613,
	268, 2613,
	269, 2613,
	270, 2613,
	271, 2613,
	273, 2613,
	277, 2613,
	278, 2613,
	279, 2613,
	282, 2613,
	283, 2613,
	284, 2613,
	285, 2613,
	286, 2613,
	287, 2613,
	288, 2613,
	289, 2613,
	290, 2613,
	291, 2613,
	292, 2613,
	293, 2613,
	294, 2613,
	295, 2613,
	296, 2613,
	297, 2613,
	298, 2613,
	299, 2613,
	300, 2613,
	301, 2613,
	302, 2613,
	303, 2613,
	304, 2613,
	305, 2613,
	306, 2613,
	307, 2613,
	308, 2613,
	310, 2613,
	311, 2613,
	312, 2613,
	313, 2613,
	314, 2613,
	315, 2613,
	316, 2613,
	317, 2613,
	318, 2613,
	319, 2613,
	320, 2613,
	321, 2613,
	322, 2613,
	323, 2613,
	325, 2613,
	326, 2613,
	329, 2613,
	330, 2613,
	331, 2613,
	333, 2613,
	334, 2613,
	335, 2613,
	336, 2613,
	337, 2613,
	340, 2613,
	344, 2613,
	345, 2613,
	346, 2613,
	347, 2613,
	349, 2613,
	350, 2613,
	351, 2613,
	353, 2613,
	355, 2613,
	356, 2613,
	357, 2613,
	358, 2613,
	359, 2613,
	360, 2613,
	361, 2613,
	362, 2613,
	363, 2613,
	364, 2613,
	365, 2613,
	366, 2613,
	368, 2613,
	369, 2613,
	370, 2613,
	371, 2613,
	372, 2613,
	373, 2613,
	374, 2613,
	375, 2613,
	376, 2613,
	377, 2613,
	378, 2613,
	379, 2613,
	380, 2613,
	381, 2613,
	382, 2613,
	384, 2613,
	385, 2613,
	387, 2613,
	388, 2613,
	389, 2613,
	390, 2613,
	391, 2613,
	392, 2613,
	393, 2613,
	394, 2613,
	395, 2613,
	396, 2613,
	397, 2613,
	398, 2613,
	400, 2613,
	402, 2613,
	403, 2613,
	404, 2613,
	409, 2613,
	410, 2613,
	411, 2613,
	412, 2613,
	413, 2613,
	414, 2613,
	415, 2613,
	416, 2613,
	417, 2613,
	418, 2613,
	419, 2613,
	421, 2613,
	422, 2613,
	423, 2613,
	424, 2613,
	425, 2613,
	426, 2613,
	427, 2613,
	428, 2613,
	429, 2613,
	430, 2613,
	431, 2613,
	432, 2613,
	433, 2613,
	434, 2613,
	435, 2613,
	436, 2613,
	437, 2613,
	438, 2613,
	439, 2613,
	440, 2613,
	441, 2613,
	442, 2613,
	443, 2613,
	445, 2613,
	446, 2613,
	447, 2613,
	448, 2613,
	449, 2613,
	450, 2613,
	452, 2613,
	453, 2613,
	454, 2613,
	455, 2613,
	456, 2613,
	457, 2613,
	458, 2613,
	459, 2613,
	460, 2613,
	461, 2613,
	462, 2613,
	463, 2613,
	464, 2613,
	465, 2613,
	467, 2613,
	469, 2613,
	470, 2613,
	471, 2613,
	472, 2613,
	473, 2613,
	474, 2613,
	475, 2613,
	476, 2613,
	477, 2613,
	478, 2613,
	479, 2613,
	480, 2613,
	481, 2613,
	482, 2613,
	483, 2613,
	484, 2613,
	486, 2613,
	487, 2613,
	489, 2613,
	490, 2613,
	492, 2613,
	493, 2613,
	494, 2613,
	495, 2613,
	496, 2613,
	497, 2613,
	498, 2613,
	499, 2613,
	500, 2613,
	502, 2613,
	503, 2613,
	504, 2613,
	505, 2613,
	506, 2613,
	508, 2613,
	510, 2613,
	511, 2613,
	512, 2613,
	513, 2613,
	514, 2613,
	515, 2613,
	517, 2613,
	518, 2613,
	519, 2613,
	520, 2613,
	522, 2613,
	523, 2613,
	526, 2613,
	527, 2613,
	528, 2613,
	529, 2613,
	530, 2613,
	531, 2613,
	532, 2613,
	534, 2613,
	537, 2613,
	538, 2613,
	539, 2613,
	540, 2613,
	541, 2613,
	542, 2613,
	544, 2613,
	545, 2613,
	546, 2613,
	547, 2613,
	549, 2613,
	554, 2613,
	555, 2613,
	556, 2613,
	557, 2613,
	558, 2613,
	559, 2613,
	560, 2613,
	562, 2613,
	565, 2613,
	566, 2613,
	567, 2613,
	568, 2613,
	569, 2613,
	570, 2613,
	572, 2613,
	573, 2613,
	574, 2613,
	575, 2613,
	576, 2613,
	577, 2613,
	578, 2613,
	579, 2613,
	580, 2613,
	582, 2613,
	585, 2613,
	586, 2613,
	588, 2613,
	589, 2613,
	-2, 0,
	-1, 1584,
	186, 2496,
	507, 2496,
	567, 2496,
	586, 2496,
	-2, 0,
	-1, 1633,
	389, 847,
	450, 847,
	490, 847,
	512, 847,
	-2, 0,
	-1, 1660,
	1, 842,
	583, 842,
	585, 842,
	587, 842,
	-2, 0,
	-1, 1661,
	1, 880,
	583, 880,
	585, 880,
	587, 880,
	-2, 0,
	-1, 1662,
	1, 888,
	583, 888,
	585, 888,
	587, 888,
	-2, 0,
	-1, 1665,
	1, 851,
	583, 851,
	585, 851,
	587, 851,
	-2, 0,
	-1, 1667,
	1, 855,
	583, 855,
	585, 855,
	587, 855,
	-2, 0,
	-1, 1673,
	1, 862,
	583, 862,
	585, 862,
	587, 862,
	-2, 0,
	-1, 1702,
	1, 2558,
	583, 2558,
	585, 2558,
	586, 2558,
	587, 2558,
	-2, 914,
	-1, 1703,
	1, 2493,
	583, 2493,
	585, 2493,
	586, 2493,
	587, 2493,
	-2, 915,
	-1, 1707,
	1, 927,
	583, 927,
	585, 927,
	587, 927,
	-2, 0,
	-1, 1722,
	1, 1352,
	587, 1352,
	-2, 1357,
	-1, 1725,
	169, 1504,
	182, 1504,
	272, 1504,
	338, 1504,
	-2, 1442,
	-1, 1819,
	150, 1463,
	169, 1463,
	182, 1463,
	239, 1463,
	272, 1463,
	338, 1463,
	348, 1463,
	524, 1463,
	-2, 1905,
	-1, 1879,
	585, 2055,
	-2, 0,
	-1, 1914,
	150, 1463,
	169, 1463,
	182, 1463,
	239, 1463,
	272, 1463,
	338, 1463,
	348, 1463,
	524, 1463,
	-2, 1591,
	-1, 1948,
	507, 2493,
	586, 2493,
	589, 2493,
	-2, 0,
	-1, 1965,
	584, 1732,
	-2, 1720,
	-1, 1996,
	186, 2493,
	586, 2493,
	589, 2493,
	-2, 0,
	-1, 2044,
	1, 668,
	587, 668,
	-2, 1357,
	-1, 2170,
	220, 250,
	-2, 2202,
	-1, 2171,
	220, 251,
	-2, 299,
	-1, 2275,
	1, 844,
	583, 844,
	585, 844,
	587, 844,
	-2, 0,
	-1, 2276,
	1, 882,
	583, 882,
	585, 882,
	587, 882,
	-2, 0,
	-1, 2277,
	1, 890,
	583, 890,
	585, 890,
	587, 890,
	-2, 0,
	-1, 2278,
	1, 929,
	583, 929,
	585, 929,
	587, 929,
	-2, 0,
	-1, 2311,
	1, 864,
	583, 864,
	585, 864,
	587, 864,
	-2, 0,
	-1, 2367,
	429, 1531,
	430, 1531,
	-2, 1765,
	-1, 2398,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1785,
	-1, 2399,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1786,
	-1, 2400,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1787,
	-1, 2401,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1788,
	-1, 2402,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1789,
	-1, 2403,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1790,
	-1, 2404,
	95, 0,
	253, 0,
	254, 0,
	569, 0,
	570, 0,
	-2, 1791,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1792,
	-1, 2417,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1804,
	-1, 2418,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1805,
	-1, 2419,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1806,
	-1, 2422,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1811,
	-1, 2428,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1815,
	-1, 2430,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1823,
	-1, 2431,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1824,
	-1, 2432,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1825,
	-1, 2433,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1826,
	-1, 2569,
	5, 2206,
	186, 2066,
	584, 2203,
	-2, 2194,
	-1, 2570,
	186, 2067,
	-2, 2564,
	-1, 2571,
	186, 2068,
	-2, 2390,
	-1, 2572,
	186, 2069,
	-2, 2276,
	-1, 2573,
	186, 2070,
	-2, 2330,
	-1, 2574,
	186, 2071,
	-2, 2375,
	-1, 2575,
	186, 2072,
	-2, 2491,
	-1, 2576,
	186, 2073,
	-2, 1888,
	-1, 2646,
	1, 1592,
	2, 1592,
	106, 1592,
	150, 1592,
	169, 1592,
	182, 1592,
	187, 1592,
	204, 1592,
	207, 1592,
	235, 1592,
	239, 1592,
	250, 1592,
	268, 1592,
	272, 1592,
	311, 1592,
	338, 1592,
	342, 1592,
	348, 1592,
	420, 1592,
	424, 1592,
	524, 1592,
	535, 1592,
	551, 1592,
	552, 1592,
	553, 1592,
	563, 1592,
	583, 1592,
	585, 1592,
	587, 1592,
	589, 1592,
	-2, 1591,
	-1, 2659,
	584, 2175,
	-2, 2189,
	-1, 2661,
	1, 316,
	551, 316,
	-2, 1490,
	-1, 2688,
	584, 1731,
	-2, 1721,
	-1, 2865,
	1, 1225,
	583, 1225,
	585, 1225,
	587, 1225,
	-2, 1490,
	-1, 3034,
	343, 1534,
	-2, 2603,
	-1, 3035,
	343, 1535,
	-2, 2476,
	-1, 3039,
	429, 2132,
	430, 2132,
	-2, 1886,
	-1, 3040,
	429, 2136,
	430, 2136,
	-2, 1887,
	-1, 3041,
	429, 2133,
	430, 2133,
	-2, 1886,
	-1, 3042,
	429, 2137,
	430, 2137,
	-2, 1887,
	-1, 3055,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1813,
	-1, 3056,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1817,
	-1, 3062,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1819,
	-1, 3278,
	1, 665,
	583, 665,
	585, 665,
	587, 665,
	-2, 1357,
	-1, 3432,
	43, 2167,
	-2, 989,
	-1, 3437,
	1, 1225,
	583, 1225,
	585, 1225,
	587, 1225,
	-2, 1490,
	-1, 3542,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1821,
	-1, 3549,
	244, 0,
	246, 0,
	329, 0,
	-2, 1840,
	-1, 3616,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1869,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1870,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1871,
	-1, 3622,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1875,
	-1, 3623,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1876,
	-1, 3624,
	14, 0,
	15, 0,
	16, 0,
	565, 0,
	566, 0,
	567, 0,
	-2, 1877,
	-1, 3670,
	584, 2176,
	-2, 2190,
	-1, 3832,
	586, 2721,
	-2, 1416,
	-1, 3890,
	244, 0,
	246, 0,
	329, 0,
	-2, 1841,
	-1, 3893,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1844,
	-1, 3894,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1846,
	-1, 3986,
	586, 2191,
	-2, 1260,
	-1, 4130,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1845,
	-1, 4131,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 1847,
	-1, 4142,
	244, 0,
	-2, 1878,
	-1, 4311,
	244, 0,
	-2, 1879,
	-1, 4493,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	560, 0,
	568, 0,
	-2, 2567,
}

const sqlPrivate = 57344

const sqlLast = 122452

var sqlAct = [...]int{
	266, 4589, 3421, 2930, 4675, 3189, 4486, 2943, 4545, 4185,
	3420, 4368, 4503, 4346, 4233, 4492, 4485, 4338, 4474, 4616,
	2092, 4389, 4364, 2167, 4445, 4425, 3873, 2750, 4461, 1214,
	4442, 4504, 4240, 4505, 4171, 2794, 3581, 4264, 4491, 4315,
	4086, 4558, 2242, 1225, 3982, 4081, 4047, 4190, 4027, 4151,
	2377, 3534, 2814, 4119, 1091, 3824, 3454, 1294, 4068, 3983,
	4070, 3816, 4249, 3759, 3967, 4278, 4061, 2445, 1051, 1098,
	1047, 1298, 3048, 2601, 1287, 795, 3360, 1734, 3448, 3300,
	4091, 3416, 3797, 1038, 2385, 3779, 2827, 2251, 3406, 2100,
	3781, 3303, 2378, 4147, 3493, 3289, 1358, 758, 1920, 2952,
	3495, 795, 1485, 2954, 3673, 2919, 1952, 2965, 2889, 2900,
	1450, 3872, 3195, 3204, 3232, 3172, 2962, 3212, 2914, 2951,
	2215, 1600, 2026, 2249, 1102, 3322, 2945, 3929, 2931, 2162,
	1889, 2161, 2916, 4590, 3171, 870, 2752, 2382, 3297, 2111,
	3193, 4316, 3641, 1953, 2638, 1827, 1046, 175, 2639, 4,
	3032, 1540, 1865, 2893, 2458, 2138, 2842, 1292, 790, 1457,
	2080, 2157, 260, 2489, 1205, 2145, 2901, 1095, 2001, 2961,
	1341, 2084, 1722, 1909, 1266, 1280, 2487, 2024, 2641, 2442,
	2349, 2619, 1890, 259, 3239, 2478, 1641, 2070, 1100, 2366,
	1289, 2347, 3418, 1577, 2672, 2924, 2202, 2793, 1543, 792,
	2775, 796, 4390, 2598, 2955, 1327, 797, 1598, 2738, 1860,
	689, 2481, 2671, 1145, 1208, 108, 1899, 2628, 1187, 2459,
	2609, 2531, 1812, 1093, 1906, 2565, 1735, 1736, 675, 1660,
	1673, 2348, 697, 1222, 740, 184, 752, 801, 1575, 2350,
	175, 1568, 185, 863, 1277, 2201, 1480, 2099, 2228, 4546,
	2371, 1076, 2002, 1999, 692, 1210, 44, 43, 804, 41,
	32, 30, 39, 801, 28, 700, 715, 1185, 1741, 933,
	3083, 1204, 1721, 953, 3655, 1491, 3656, 2015, 844, 3079,
	3191, 2015, 2015, 1336, 804, 1042, 3464, 1220, 1336, 1484,
	2015, 2015, 2015, 4688, 1666, 4678, 3262, 2618, 3261, 3473,
	885, 4663, 1217, 4662, 4652, 2618, 4634, 2618, 2176, 2250,
	4189, 4632, 4577, 1097, 3645, 4189, 2176, 4534, 3463, 4527,
	4525, 4535, 4522, 2618, 2618, 4519, 4523, 4489, 4488, 4520,
	4487, 2176, 2176, 4482, 2036, 4481, 4472, 2036, 4470, 2036,
	4189, 3950, 4189, 4467, 4440, 1202, 4414, 4252, 4189, 4407,
	2679, 1749, 1750, 2618, 1782, 1783, 1784, 1792, 1793, 1794,
	4406, 4401, 4400, 4394, 2618, 4189, 4189, 2176, 4360, 1042,
	2611, 4313, 4038, 1785, 1780, 2679, 4295, 2176, 4292, 4289,
	3859, 1752, 2176, 4189, 4242, 4206, 3247, 4205, 4243, 2176,
	1798, 2176, 4196, 4195, 4188, 4158, 2176, 4189, 4189, 2176,
	3092, 4132, 1043, 1188, 1188, 2679, 3093, 3473, 2176, 3144,
	3145, 1023, 3162, 3163, 3164, 4110, 1751, 4099, 1022, 2036,
	4022, 3473, 2699, 4007, 2618, 3892, 1771, 2618, 3840, 2679,
	3834, 3888, 3490, 3795, 3490, 1768, 3665, 3796, 3047, 1237,
	3666, 3663, 93, 1749, 1750, 3664, 3648, 3565, 3561, 1244,
	2618, 2176, 2618, 1032, 3489, 3480, 1037, 3188, 3490, 3481,
	3183, 2618, 2618, 3182, 2618, 3135, 1780, 2618, 2033, 3136,
	2675, 3133, 3125, 1752, 1493, 3134, 3126, 3123, 3094, 1749,
	1750, 2618, 2618, 2969, 3159, 2941, 2940, 2036, 2722, 2238,
	2238, 2678, 2618, 1189, 4415, 2679, 2669, 1749, 1750, 2663,
	2618, 2617, 1780, 2176, 2698, 2618, 2176, 4317, 1751, 1752,
	1774, 1775, 1776, 1777, 1191, 2237, 1192, 4308, 2484, 2238,
	1757, 1238, 4296, 4252, 2036, 3645, 2618, 1752, 2610, 4079,
	4038, 4008, 3859, 3481, 2817, 2104, 1749, 1750, 2737, 2049,
	2014, 2030, 2033, 2895, 1751, 2175, 1216, 2837, 2735, 1885,
	1479, 3744, 3537, 3513, 1771, 1749, 1750, 1789, 230, 1780,
	1799, 1907, 1751, 1768, 2150, 1643, 1752, 1779, 1781, 3465,
	2655, 2654, 3144, 3145, 2653, 3162, 3163, 3164, 3150, 2652,
	2651, 1193, 1190, 1031, 1795, 1752, 1796, 1030, 3466, 4093,
	1029, 1028, 1027, 1766, 1767, 1026, 1025, 1021, 3009, 2514,
	1020, 1751, 1019, 1018, 230, 232, 2485, 1749, 1750, 1017,
	3082, 1787, 1757, 1016, 1015, 1014, 1013, 3886, 1012, 1011,
	1751, 1010, 1009, 1008, 1007, 1006, 1772, 1005, 931, 930,
	1780, 2016, 929, 928, 1074, 2016, 2016, 1752, 1774, 1775,
	1776, 1777, 3165, 927, 2016, 2016, 2016, 3159, 1757, 926,
	925, 232, 924, 923, 231, 922, 921, 920, 919, 1779,
	1781, 918, 917, 916, 915, 914, 1757, 224, 913, 1797,
	912, 911, 1751, 910, 909, 908, 225, 907, 906, 905,
	904, 903, 1771, 902, 3160, 901, 900, 1786, 2486, 3463,
	2483, 1768, 3144, 3145, 899, 1779, 1781, 3945, 186, 1238,
	231, 2033, 898, 888, 887, 1757, 883, 882, 876, 875,
	862, 861, 818, 817, 816, 815, 807, 806, 1772, 805,
	2013, 1766, 1767, 773, 1757, 230, 764, 763, 762, 746,
	254, 253, 252, 1303, 1100, 864, 230, 1611, 148, 251,
	250, 3150, 249, 248, 186, 3546, 247, 2500, 246, 245,
	1778, 244, 1779, 1781, 1772, 243, 242, 1100, 241, 240,
	239, 1100, 73, 238, 867, 866, 1774, 1775, 1776, 1777,
	237, 1773, 232, 2610, 1607, 236, 1757, 1361, 235, 74,
	234, 1361, 233, 232, 3904, 3686, 3659, 3491, 3235, 1303,
	3105, 3186, 4095, 1484, 3088, 78, 2992, 2876, 1790, 1910,
	2683, 2660, 2709, 4320, 2498, 3165, 2014, 2033, 2645, 2078,
	1100, 1772, 1100, 1829, 1100, 2030, 2698, 2342, 2035, 2245,
	1303, 231, 1748, 1779, 1781, 1933, 1868, 1340, 1838, 3161,
	3187, 1345, 231, 1867, 224, 87, 1487, 1347, 2488, 1224,
	4510, 1331, 1668, 225, 1868, 224, 1303, 3160, 2909, 1766,
	1767, 1867, 1238, 4490, 225, 1871, 1593, 1465, 4469, 4375,
	4305, 3150, 4299, 1773, 4183, 186, 1303, 1218, 4146, 4100,
	4078, 1303, 3955, 1866, 1836, 868, 186, 1829, 1778, 1100,
	3927, 1100, 1772, 3144, 3145, 1303, 4297, 3926, 3920, 107,
	3919, 1100, 3918, 1100, 93, 104, 3911, 3910, 1483, 1773,
	1788, 1271, 1274, 2244, 1460, 1763, 1764, 1770, 1791, 1769,
	1765, 3908, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 3903, 1549, 1552, 3900, 1284, 1325, 3899, 3794, 3912,
	3690, 3689, 3688, 3669, 1831, 2218, 3636, 3635, 3634, 1303,
	1354, 3557, 1447, 1452, 3553, 1471, 3230, 3800, 3144, 3145,
	3179, 3170, 94, 2482, 1493, 1455, 1773, 1100, 3143, 3140,
	1100, 801, 3139, 3156, 3157, 3158, 1830, 3160, 1828, 2183,
	3155, 3153, 3154, 3146, 3147, 3148, 3149, 3151, 3152, 2692,
	1201, 1505, 804, 2181, 3137, 3132, 3131, 3130, 1320, 3127,
	3124, 1499, 3161, 3104, 3087, 3080, 2942, 1310, 73, 2646,
	1482, 1538, 2471, 1748, 1747, 1481, 1778, 1753, 1754, 1755,
	1756, 1758, 1759, 175, 175, 74, 1580, 1582, 4682, 1492,
	4626, 4625, 3801, 4591, 4544, 4542, 1555, 1773, 1226, 3253,
	1612, 78, 2454, 3742, 4094, 3583, 1493, 1769, 1765, 4432,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 4367,
	4356, 4353, 3150, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	4352, 1753, 1754, 1755, 1756, 1758, 1759, 4351, 4332, 3144,
	3145, 87, 4319, 1490, 4318, 1497, 4293, 1503, 4277, 1331,
	4276, 1043, 1331, 2448, 1100, 4262, 4259, 3184, 1300, 4258,
	1100, 4253, 2911, 4202, 4179, 4144, 4127, 97, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 1726, 3144, 3145, 4321,
	2927, 868, 3161, 4126, 4107, 4106, 4064, 3150, 1597, 1311,
	4039, 1755, 1756, 1758, 1759, 107, 3156, 3157, 3158, 1045,
	93, 104, 1571, 3155, 3153, 3154, 3146, 3147, 3148, 3149,
	3151, 3152, 1591, 3944, 1596, 4067, 3144, 3145, 1682, 183,
	100, 3925, 103, 1720, 1605, 1592, 1610, 3860, 3854, 3851,
	3730, 3729, 3713, 3712, 3710, 1769, 1765, 1606, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 230, 3651, 230,
	1818, 3951, 2513, 3639, 3548, 869, 1816, 3492, 94, 3474,
	148, 3801, 1504, 3440, 3375, 1100, 1100, 1100, 3335, 1493,
	3302, 1100, 1498, 3255, 1617, 3109, 3108, 3103, 1222, 3071,
	1222, 2888, 1874, 1873, 1634, 1872, 230, 1869, 1667, 1861,
	1859, 2690, 2689, 3160, 232, 1361, 232, 2657, 2650, 2616,
	2496, 1669, 1887, 1932, 1100, 1888, 1883, 795, 3150, 1882,
	1881, 1880, 1879, 1970, 795, 1878, 1877, 1303, 1876, 1875,
	151, 1856, 1855, 3155, 3153, 3154, 3146, 3147, 3148, 3149,
	3151, 3152, 1220, 232, 1220, 187, 1854, 1723, 1853, 1852,
	1731, 1851, 1850, 231, 1896, 231, 3150, 1217, 1730, 1217,
	1849, 1848, 1023, 1847, 1940, 2910, 224, 1846, 224, 1022,
	1845, 1844, 1843, 1725, 1842, 225, 1831, 225, 230, 1043,
	1817, 2246, 1870, 1727, 1815, 1810, 1569, 1944, 1319, 1744,
	1745, 1242, 231, 1303, 1233, 3150, 2681, 865, 4163, 186,
	1100, 3896, 1917, 3685, 1303, 224, 1893, 1894, 1574, 1936,
	2499, 3662, 3654, 97, 225, 3091, 2648, 3953, 3144, 3145,
	1949, 3684, 1100, 1830, 3160, 232, 3251, 1997, 1361, 1813,
	1862, 1863, 2069, 1941, 2069, 3469, 186, 2069, 175, 1928,
	4010, 2094, 1344, 1342, 4623, 1188, 4615, 1964, 3161, 1336,
	3227, 2815, 1749, 1750, 4354, 2067, 4254, 4245, 4244, 4098,
	4041, 4040, 3160, 1910, 1918, 183, 100, 2497, 103, 4009,
	3947, 3863, 3862, 2042, 231, 3861, 3657, 1939, 3476, 801,
	1851, 3804, 1752, 1937, 3475, 3535, 801, 224, 1718, 2798,
	1331, 1336, 2076, 230, 1851, 2041, 225, 1633, 4300, 3754,
	804, 869, 1343, 230, 1915, 1043, 148, 804, 230, 4250,
	1908, 2055, 1868, 230, 3129, 3128, 1945, 1751, 186, 1867,
	3053, 2780, 4298, 1993, 1339, 2018, 4182, 3146, 3147, 3148,
	3149, 3151, 3152, 1837, 1886, 1337, 1967, 3727, 1003, 3304,
	232, 230, 3423, 1912, 3422, 3338, 1958, 2147, 1927, 1926,
	232, 1925, 1923, 1922, 1924, 232, 1921, 3485, 1303, 1303,
	232, 2219, 1840, 3367, 1336, 4556, 151, 2243, 1361, 3161,
	2267, 2104, 1642, 1950, 4241, 2044, 4530, 4515, 4502, 3407,
	4148, 187, 2966, 1004, 1683, 1643, 2163, 3808, 232, 231,
	3153, 3154, 3146, 3147, 3148, 3149, 3151, 3152, 3791, 231,
	3756, 1216, 224, 1216, 231, 3751, 3735, 3161, 3510, 231,
	3276, 225, 224, 3191, 3585, 2688, 3097, 224, 2479, 4511,
	1884, 225, 224, 1864, 3414, 2132, 225, 2137, 2212, 1548,
	2142, 225, 1476, 186, 1314, 1270, 2834, 231, 4524, 2040,
	230, 230, 1200, 186, 4521, 3459, 2038, 1573, 2926, 2831,
	224, 230, 1333, 186, 2829, 3705, 2047, 4347, 4082, 225,
	4439, 4329, 1303, 3307, 1303, 2823, 1303, 3722, 2061, 2060,
	2072, 2062, 2069, 2071, 3399, 2949, 2923, 4574, 3995, 2168,
	2173, 186, 1303, 1303, 3252, 3993, 4512, 232, 232, 3529,
	4575, 3280, 4198, 1303, 4223, 4605, 3997, 2110, 232, 857,
	3769, 984, 1621, 1515, 2723, 1303, 1477, 1303, 1303, 1303,
	1523, 2777, 3154, 3146, 3147, 3148, 3149, 3151, 3152, 1680,
	2317, 2165, 801, 1001, 2822, 2056, 2315, 1574, 3979, 999,
	795, 4677, 1338, 2208, 997, 4175, 231, 231, 2130, 2253,
	4216, 995, 992, 804, 4208, 4036, 2357, 231, 2266, 224,
	224, 3146, 3147, 3148, 3149, 3151, 3152, 2213, 225, 225,
	224, 1482, 3975, 2045, 1344, 2225, 1481, 3768, 1681, 225,
	2776, 4035, 3767, 3766, 3758, 3750, 3749, 3747, 3746, 3734,
	186, 186, 3700, 3699, 2741, 2129, 3403, 3402, 2141, 1334,
	2064, 186, 3148, 3149, 3151, 3152, 1524, 3246, 1335, 2739,
	3102, 3101, 3100, 858, 2248, 2355, 2174, 2741, 2271, 3099,
	2754, 3057, 2840, 2839, 2836, 2825, 3976, 1326, 1100, 1679,
	1100, 2813, 2739, 2812, 1343, 2808, 2807, 1100, 2806, 2233,
	1970, 1970, 1361, 2785, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 2194,
	1100, 2259, 1100, 1100, 1100, 1100, 2235, 1043, 2222, 1043,
	2193, 2784, 1619, 3304, 2227, 2745, 3992, 2670, 2367, 3708,
	2254, 1337, 801, 2359, 1100, 2231, 4606, 1100, 1100, 2429,
	2239, 1320, 2240, 2243, 2066, 1100, 2346, 1724, 4199, 1100,
	2484, 1100, 1100, 804, 1571, 1344, 2230, 2101, 2230, 1361,
	3365, 4610, 1218, 2757, 1218, 1100, 1100, 1100, 1100, 2293,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 2440, 2258,
	3282, 2682, 2065, 3337, 2275, 1337, 2527, 2356, 2778, 2526,
	2097, 4176, 2387, 2920, 1964, 1964, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1614, 1573, 2438, 1336, 1100,
	2460, 2461, 1478, 2383, 2384, 1343, 1041, 2802, 3511, 2102,
	2103, 1222, 1635, 2339, 2460, 2476, 2311, 3152, 1361, 2192,
	1561, 1559, 1560, 1558, 2778, 2334, 2324, 1222, 2485, 2795,
	2796, 2795, 2796, 2263, 2795, 2796, 989, 2370, 1333, 2098,
	2522, 1716, 1519, 1100, 1361, 4011, 4611, 3971, 1532, 2283,
	2354, 1759, 3972, 2479, 2730, 2357, 2135, 2585, 4125, 2568,
	2568, 2582, 3960, 2460, 1578, 1220, 2602, 2604, 2345, 2343,
	2351, 2358, 2608, 1967, 1967, 1717, 2344, 2782, 4340, 2331,
	1217, 1220, 1256, 1958, 1958, 2444, 2475, 1023, 1928, 2972,
	1023, 1023, 1333, 771, 2374, 1040, 1217, 2375, 2376, 2444,
	1229, 1678, 2020, 3974, 2633, 2022, 1537, 3366, 3144, 3145,
	2486, 2027, 2483, 1615, 2355, 2029, 2658, 4574, 1338, 3977,
	2032, 1664, 3991, 2625, 3959, 1692, 860, 859, 2662, 2768,
	2321, 2833, 1696, 2726, 2333, 2524, 3030, 3994, 2434, 1917,
	2525, 1043, 1227, 2528, 2456, 2529, 2530, 1303, 1303, 1664,
	1043, 2756, 2728, 1643, 1043, 4636, 4613, 2435, 2284, 2280,
	2473, 3279, 2436, 2832, 1729, 1643, 2441, 2767, 3045, 2232,
	3519, 2452, 1338, 2647, 1188, 1334, 2830, 4508, 2450, 3776,
	2274, 2828, 2276, 3159, 1335, 1231, 1631, 2729, 3518, 1361,
	2632, 2624, 2637, 2353, 979, 2643, 2644, 2744, 4342, 1318,
	3571, 3006, 769, 4034, 1042, 2718, 2564, 2727, 175, 2593,
	1661, 2676, 2577, 2744, 2606, 2712, 2488, 3748, 1036, 3745,
	2426, 3401, 1663, 1970, 2614, 2615, 3574, 3363, 2626, 1334,
	2684, 2630, 2631, 3777, 2835, 3354, 896, 3719, 1335, 4586,
	2805, 1915, 1043, 3731, 2277, 3973, 1331, 1870, 2673, 3979,
	1663, 1230, 687, 3346, 2783, 2340, 2356, 1675, 2316, 3068,
	2488, 1361, 993, 1544, 2314, 1620, 2740, 2867, 993, 2073,
	2074, 2720, 1662, 993, 3775, 1303, 4619, 3150, 682, 2124,
	994, 993, 3572, 3975, 3980, 2584, 4639, 3968, 3066, 3355,
	2691, 1100, 1100, 2755, 1100, 2746, 2695, 3044, 2085, 1862,
	1863, 2714, 2703, 2086, 3966, 4594, 2706, 3347, 2707, 4593,
	980, 2104, 1542, 3970, 2711, 3012, 795, 2694, 1303, 2697,
	4124, 2868, 2721, 3989, 1216, 855, 2743, 854, 2668, 2354,
	3353, 4563, 1034, 2125, 979, 2715, 2713, 3976, 3878, 2781,
	1216, 2330, 3877, 2803, 4612, 3456, 2437, 1964, 3345, 1303,
	4509, 1521, 889, 3457, 1336, 3717, 2439, 3732, 1036, 4666,
	2787, 1303, 2866, 1303, 2724, 2148, 2788, 808, 4421, 2907,
	2934, 2771, 4167, 2742, 2123, 2482, 2488, 1693, 1303, 3969,
	1039, 2816, 2826, 3160, 2786, 2963, 2015, 2424, 2180, 2179,
	2427, 3037, 3038, 4476, 2810, 4477, 2332, 2804, 3291, 2809,
	2749, 2107, 2871, 4362, 1035, 2759, 2762, 2873, 1336, 2160,
	2973, 2974, 770, 2892, 1518, 3378, 2087, 4348, 3319, 1100,
	2282, 2980, 2981, 2982, 3015, 2797, 2799, 2800, 2801, 3063,
	2151, 3456, 2488, 2091, 1544, 2158, 1967, 1690, 1240, 2112,
	1618, 2423, 979, 2903, 2811, 2005, 1958, 3784, 801, 4507,
	980, 3281, 2821, 3064, 1255, 2108, 3782, 3069, 4341, 736,
	772, 2136, 2116, 2159, 768, 4562, 1036, 4056, 1857, 804,
	3323, 4411, 3249, 1100, 3318, 4537, 3990, 2148, 801, 1100,
	1100, 2095, 2967, 3874, 1616, 4538, 2899, 1482, 2970, 4137,
	2948, 4585, 2874, 2975, 175, 2976, 2106, 2938, 4459, 804,
	981, 2993, 2886, 2994, 4450, 2088, 2093, 4019, 705, 2470,
	2896, 2005, 1809, 1228, 1694, 2897, 4121, 2990, 3107, 2113,
	2642, 3325, 2005, 2936, 2741, 990, 4617, 2629, 3161, 4640,
	3059, 1042, 4071, 3786, 1100, 1100, 3587, 2929, 3971, 2760,
	1100, 3033, 2939, 3972, 2443, 3879, 4627, 4066, 2152, 2950,
	2341, 4072, 2877, 1100, 1100, 2880, 3014, 2882, 980, 1100,
	1100, 3868, 3681, 1245, 3017, 1100, 3019, 3531, 3785, 2989,
	2968, 2937, 877, 3028, 1100, 1100, 1100, 4369, 2987, 2918,
	1100, 2998, 2148, 3000, 3324, 3002, 3011, 4506, 2089, 4573,
	1100, 2997, 2995, 2999, 3974, 3001, 1691, 2996, 890, 891,
	2661, 2925, 3292, 1695, 2925, 3060, 1648, 1100, 1898, 897,
	3977, 2451, 2279, 809, 810, 3010, 1728, 3025, 4571, 683,
	3020, 2585, 2585, 3022, 4388, 2117, 3799, 3036, 2425, 4261,
	4618, 3329, 2144, 2273, 3822, 2095, 3027, 3065, 1630, 1632,
	981, 982, 3444, 2200, 1895, 1218, 3026, 3067, 3085, 3086,
	1243, 1317, 4120, 3089, 1902, 3081, 4409, 2143, 3046, 1236,
	2370, 1218, 3031, 4561, 4620, 3718, 674, 1739, 3625, 3155,
	3153, 3154, 3146, 3147, 3148, 3149, 3151, 3152, 3875, 4645,
	3003, 2373, 4057, 3090, 3923, 3327, 3013, 2105, 2057, 1902,
	2139, 2118, 2119, 983, 3240, 4410, 684, 1100, 1100, 1100,
	4197, 1738, 1905, 2127, 4270, 3503, 1100, 1100, 1100, 4328,
	2054, 1100, 3823, 4667, 3496, 2114, 3058, 2627, 3762, 2102,
	2103, 1100, 1222, 1361, 3704, 4536, 3328, 1100, 4370, 1100,
	3198, 3199, 3298, 3783, 3445, 1903, 3973, 1905, 1222, 3436,
	2016, 3503, 3570, 2636, 685, 3294, 686, 2908, 981, 2140,
	3496, 2902, 1900, 2890, 812, 811, 1361, 2115, 2226, 2220,
	2214, 4069, 2206, 2155, 2186, 2585, 2585, 2585, 1222, 2104,
	1903, 1361, 1512, 3096, 1043, 3980, 1220, 1247, 2133, 1033,
	1578, 982, 1578, 1898, 3181, 3696, 2052, 892, 893, 4122,
	1970, 1217, 1220, 745, 1361, 3220, 3640, 3233, 2363, 4426,
	3200, 3532, 2744, 4391, 1737, 2322, 2050, 1217, 3825, 1303,
	1303, 3498, 2090, 1901, 813, 814, 2887, 2153, 878, 879,
	2789, 2128, 1220, 4087, 1258, 1809, 3497, 2053, 1738, 2761,
	4239, 4237, 1100, 983, 4178, 3310, 3880, 1217, 3306, 3305,
	3051, 3029, 3675, 3210, 3206, 2264, 1100, 3498, 3653, 2704,
	3208, 3203, 3234, 3202, 2094, 2708, 1303, 3626, 2154, 3229,
	1665, 1970, 3497, 2667, 1902, 2666, 3627, 2665, 2664, 2719,
	1739, 3790, 2120, 1567, 1565, 3214, 3286, 3287, 2620, 1100,
	2894, 1738, 3924, 3245, 895, 4644, 1040, 3209, 2094, 982,
	1553, 1904, 3218, 4048, 1733, 1303, 3676, 3308, 3221, 3222,
	3312, 3238, 3277, 3192, 1554, 1059, 3259, 4335, 3226, 3176,
	3177, 3178, 1905, 2623, 1964, 3494, 3283, 1303, 3207, 1303,
	3881, 1331, 3677, 4371, 3674, 4186, 1904, 1900, 3784, 3219,
	3224, 1737, 3225, 3250, 2147, 2364, 1361, 3782, 4234, 2765,
	3711, 983, 3270, 2147, 3486, 1903, 1649, 1303, 2121, 2224,
	3309, 1303, 3410, 3314, 2622, 4582, 3316, 1940, 3295, 2621,
	3242, 3243, 3244, 3256, 3257, 4366, 3258, 3381, 4104, 3383,
	3215, 4165, 3387, 3701, 1303, 2971, 3393, 3263, 3264, 3368,
	3697, 1303, 2872, 1303, 1737, 1964, 2870, 1361, 1901, 3342,
	3267, 2252, 2790, 2791, 795, 1624, 4436, 3362, 3271, 4429,
	3930, 3379, 4173, 1967, 3299, 1303, 3278, 880, 881, 4423,
	4336, 3356, 3642, 1958, 3786, 3340, 3344, 1303, 2495, 3284,
	3213, 3241, 3376, 1712, 3293, 4454, 3419, 1714, 3358, 4187,
	3499, 3500, 3501, 3502, 1222, 1216, 2126, 3205, 3452, 4103,
	2326, 3388, 3326, 4584, 4526, 3394, 3428, 4174, 4355, 3785,
	1739, 1216, 3217, 4143, 2313, 1711, 1709, 3435, 1687, 1303,
	1303, 3336, 2136, 3343, 2963, 3174, 3499, 3500, 3501, 3502,
	3349, 3922, 3789, 2963, 1967, 3173, 3547, 3508, 3507, 744,
	3352, 1216, 1303, 3450, 1958, 3357, 4430, 3359, 1220, 3260,
	2134, 3138, 3377, 3369, 3070, 3472, 3461, 4337, 3443, 3364,
	2891, 1904, 3405, 1217, 3408, 2824, 3350, 3400, 3396, 3390,
	3351, 2779, 1566, 1564, 2693, 3389, 2335, 1685, 1935, 3395,
	1659, 3678, 1361, 894, 1657, 1361, 1655, 1653, 1651, 1931,
	1715, 2131, 3512, 3702, 1645, 1640, 1638, 1563, 3780, 1602,
	3527, 3526, 1733, 3008, 3404, 3330, 3331, 3446, 3332, 3333,
	3334, 2787, 3412, 3007, 2978, 2352, 801, 1674, 1100, 3216,
	3433, 3431, 2135, 2288, 1100, 1100, 3432, 2205, 1100, 1100,
	1100, 2185, 1100, 1998, 3453, 1841, 1613, 804, 2494, 1536,
	4501, 1100, 1970, 4020, 3753, 3752, 3484, 4021, 3505, 4006,
	1100, 3370, 3371, 1100, 3372, 3373, 3374, 175, 175, 1361,
	3470, 3471, 3504, 3488, 3482, 991, 3458, 3451, 1100, 3380,
	4422, 1713, 4085, 4026, 3783, 3467, 1361, 3460, 3964, 3821,
	2328, 3524, 3812, 3765, 2327, 3725, 1970, 1970, 1100, 1100,
	3723, 1100, 1100, 1100, 2312, 3703, 3439, 2585, 2585, 1710,
	1708, 3434, 1686, 3424, 2921, 2913, 2906, 2898, 3525, 1100,
	3533, 2884, 1043, 1100, 2869, 1970, 1970, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 2710, 1100, 3559, 3560,
	3599, 3521, 3600, 2705, 1100, 1100, 1970, 4559, 3550, 3506,
	2184, 1100, 3530, 2182, 2164, 3515, 2149, 3516, 3522, 3517,
	2085, 1684, 1100, 2122, 1658, 2086, 1964, 3528, 1656, 2109,
	1654, 1652, 1650, 1222, 1222, 2096, 2037, 1100, 1644, 1639,
	1637, 1562, 2034, 2031, 2028, 2585, 2585, 2585, 2585, 2585,
	2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585, 2585,
	2585, 2585, 2585, 2585, 3555, 2585, 1361, 1216, 2023, 3566,
	1964, 1964, 2021, 3671, 2017, 2008, 1218, 4080, 3567, 3582,
	996, 998, 1000, 3589, 3637, 3449, 3391, 1220, 1220, 2383,
	3590, 2158, 1218, 3658, 4550, 1197, 1943, 3577, 1742, 1964,
	1964, 4575, 1217, 1217, 4071, 258, 3602, 3573, 3575, 3576,
	3597, 2058, 3604, 1100, 3598, 1967, 3049, 3629, 2383, 3605,
	3596, 1198, 1218, 4072, 3023, 1958, 2005, 3021, 2338, 4464,
	1964, 4109, 4102, 1100, 4101, 4033, 3956, 3630, 2087, 2964,
	2077, 1517, 4272, 2741, 2766, 3649, 3650, 3644, 4265, 3633,
	2741, 3833, 2223, 2104, 2308, 2091, 2278, 1578, 2739, 1967,
	1967, 175, 1706, 1707, 3638, 2763, 1100, 1100, 732, 1958,
	1958, 3646, 3647, 1279, 2336, 2307, 1278, 4463, 2285, 3679,
	3680, 3998, 1749, 1750, 4028, 1636, 1749, 1750, 1967, 1967,
	2769, 4307, 3931, 3691, 3692, 3693, 2085, 2172, 1958, 1958,
	3661, 2086, 3909, 3660, 3392, 3321, 1100, 2770, 1743, 2792,
	3761, 3050, 1752, 1746, 1312, 1246, 4578, 688, 4569, 1967,
	2337, 255, 2770, 4531, 2883, 2310, 3809, 2088, 2093, 1958,
	1303, 1199, 3760, 1303, 2207, 1323, 2831, 1279, 2829, 3736,
	1359, 2838, 788, 2818, 1458, 2772, 4416, 1751, 4382, 3687,
	1970, 1751, 4376, 4334, 3266, 4256, 845, 3268, 3269, 3741,
	3743, 1279, 3272, 2820, 3273, 3740, 3274, 3707, 671, 2774,
	4232, 4166, 699, 4184, 3819, 3755, 2819, 3728, 3811, 3757,
	3798, 1303, 2773, 3668, 3438, 2928, 3763, 1100, 2607, 2043,
	1951, 4614, 3733, 3248, 4456, 1222, 1100, 4643, 3835, 4457,
	4456, 3144, 3145, 1749, 1750, 4457, 1303, 1303, 1303, 4378,
	2089, 1484, 3842, 3901, 2087, 2733, 2734, 2731, 2732, 4588,
	1623, 2934, 2787, 1303, 2490, 3683, 1622, 3772, 3788, 2733,
	2731, 2091, 3826, 2523, 1689, 3818, 4257, 1688, 1303, 4217,
	4030, 4025, 3830, 3805, 1361, 4024, 1216, 1216, 2963, 1220,
	3897, 3846, 3827, 3682, 3774, 3578, 3806, 2095, 3385, 3778,
	3382, 1835, 3787, 1834, 1217, 3792, 3829, 4629, 1361, 4595,
	4420, 1100, 1100, 1108, 1964, 3810, 4419, 1100, 1100, 1970,
	3858, 4418, 1100, 1100, 4322, 1100, 4235, 4212, 1218, 1100,
	3815, 4164, 4162, 3299, 4160, 4059, 4045, 3996, 3952, 3813,
	1100, 3773, 3857, 2088, 2093, 3839, 3793, 3285, 3721, 3714,
	3442, 3828, 3441, 3315, 3265, 3005, 1100, 3831, 2986, 262,
	262, 262, 3836, 677, 678, 2985, 693, 677, 693, 703,
	3841, 3849, 743, 2984, 3852, 3837, 761, 3856, 2983, 3882,
	2912, 767, 3864, 2885, 2764, 3847, 3848, 2701, 262, 3853,
	2696, 2686, 2685, 4287, 3883, 3855, 2674, 2455, 3895, 3866,
	3865, 2329, 2309, 1967, 2306, 2305, 2304, 3876, 874, 2303,
	2302, 2221, 2195, 1958, 262, 2191, 1222, 2190, 2189, 2188,
	2187, 2011, 2010, 2009, 1222, 3891, 2089, 2007, 1361, 1942,
	1361, 1705, 1704, 1646, 1531, 1530, 1529, 1222, 1528, 1527,
	1526, 1525, 1520, 1964, 1516, 1514, 4279, 1513, 1303, 1303,
	1470, 1469, 1468, 1467, 1352, 1351, 1350, 1361, 1349, 4280,
	1348, 1316, 1315, 1265, 1264, 1263, 3233, 1262, 1261, 2083,
	1220, 3814, 1260, 2095, 2090, 1259, 1257, 3871, 1220, 1252,
	1251, 1222, 1250, 1222, 1249, 1217, 1248, 1180, 3921, 2048,
	1002, 1220, 4281, 1217, 988, 4339, 3978, 3957, 3958, 2325,
	1698, 92, 1522, 831, 86, 1303, 1217, 2156, 3720, 958,
	3984, 4453, 3984, 1506, 3939, 1361, 4361, 1303, 839, 4438,
	1303, 3999, 3807, 2081, 3936, 3317, 2841, 3987, 3932, 1361,
	2287, 1647, 1967, 3942, 3935, 1220, 3937, 1220, 677, 677,
	2289, 3867, 1958, 3938, 3933, 3934, 262, 3946, 1216, 3961,
	1217, 3943, 1217, 3228, 4283, 2649, 175, 2005, 2005, 3928,
	1303, 1303, 4408, 4029, 2082, 4031, 3905, 3106, 4314, 4136,
	2493, 1839, 3185, 3963, 88, 4000, 1084, 4282, 1130, 4055,
	1303, 4054, 3965, 3706, 2953, 4052, 3988, 4051, 1955, 1957,
	1050, 1364, 1361, 4475, 4049, 4284, 2059, 1303, 4004, 1090,
	2075, 2068, 4001, 4002, 2005, 2687, 4046, 1218, 1218, 2567,
	1107, 4013, 1104, 4032, 4016, 4023, 1959, 4043, 1961, 1106,
	1105, 1960, 1222, 1858, 1103, 1954, 3817, 2932, 1934, 4077,
	3468, 4018, 1303, 1303, 1303, 1572, 1570, 4037, 4015, 960,
	2063, 2449, 2477, 2005, 3095, 1361, 4042, 1832, 4088, 1821,
	2090, 3984, 1065, 1826, 1086, 2474, 1241, 1100, 1100, 1100,
	1075, 1064, 3211, 3190, 3455, 2005, 4105, 2005, 4089, 3667,
	4050, 2362, 849, 4005, 3141, 1361, 1220, 4092, 4083, 2480,
	1100, 4065, 4044, 1100, 1100, 4014, 1232, 2590, 4017, 4097,
	4074, 1217, 2583, 1100, 2579, 2005, 1970, 3275, 2922, 2005,
	1719, 1100, 1100, 4076, 4090, 4150, 1811, 2933, 1346, 1068,
	2447, 1823, 3075, 2372, 3462, 3231, 1361, 2680, 1303, 4460,
	3586, 2199, 1196, 1195, 1239, 4112, 4128, 4108, 1194, 1216,
	4111, 4444, 4441, 2146, 3850, 3417, 2051, 1216, 2725, 1361,
	1801, 4123, 3425, 4116, 1080, 1463, 3196, 1100, 4073, 3487,
	1216, 2079, 4133, 1533, 4114, 766, 1100, 4191, 3694, 1092,
	4117, 2585, 3695, 1800, 1100, 2862, 2861, 4331, 1970, 1332,
	1330, 1329, 4139, 1328, 4602, 4665, 1288, 1100, 3716, 3715,
	1100, 229, 3043, 1740, 1732, 226, 228, 227, 4060, 3672,
	3237, 4529, 1100, 3738, 1216, 3409, 1216, 4156, 4157, 1361,
	23, 22, 4145, 3724, 4194, 3726, 1303, 21, 112, 4159,
	42, 1303, 1303, 20, 150, 2585, 4169, 128, 147, 146,
	1964, 120, 145, 4170, 1453, 144, 143, 1464, 1288, 142,
	149, 4058, 141, 140, 4168, 4177, 135, 4285, 139, 138,
	137, 136, 134, 4286, 4075, 132, 4247, 133, 127, 131,
	4211, 4222, 130, 129, 126, 125, 1361, 124, 123, 1303,
	122, 4238, 3419, 121, 119, 118, 117, 4096, 116, 1218,
	1297, 115, 4213, 114, 3764, 113, 4209, 1222, 1222, 757,
	754, 61, 60, 4219, 111, 110, 19, 40, 14, 65,
	4255, 2177, 1964, 1288, 1288, 4228, 66, 1100, 1100, 4227,
	4224, 18, 4236, 4231, 13, 35, 3984, 3984, 91, 1967,
	4266, 4201, 102, 4275, 1100, 1970, 4246, 101, 4269, 1958,
	36, 4290, 4291, 4294, 4251, 99, 1473, 4226, 98, 34,
	4267, 1220, 1220, 4230, 17, 1216, 4274, 16, 15, 4268,
	4288, 96, 4263, 95, 33, 4092, 1217, 1217, 4273, 31,
	1100, 11, 9, 1100, 8, 37, 1919, 1508, 12, 5,
	1222, 180, 179, 182, 178, 4214, 181, 4271, 90, 177,
	4303, 4304, 176, 1222, 4225, 89, 29, 10, 4327, 172,
	4248, 1967, 2585, 1545, 3803, 81, 174, 173, 171, 3984,
	4306, 1958, 170, 1234, 169, 82, 79, 168, 85, 167,
	80, 84, 3984, 83, 4326, 27, 6, 64, 1586, 7,
	2094, 4118, 4323, 3509, 1220, 1100, 1100, 4350, 4302, 4343,
	4349, 4312, 1599, 105, 4365, 1100, 1254, 1220, 106, 1217,
	1222, 38, 77, 1222, 4344, 76, 75, 1303, 262, 1964,
	262, 262, 1217, 1283, 262, 1293, 26, 1303, 1303, 63,
	1218, 4357, 25, 213, 212, 211, 1313, 210, 1218, 3984,
	209, 208, 3984, 207, 1303, 761, 206, 201, 4359, 200,
	205, 1218, 203, 4399, 4385, 202, 1625, 4387, 1100, 1100,
	4372, 4377, 4380, 4379, 1220, 4373, 4374, 1220, 1100, 262,
	4384, 262, 262, 1283, 4393, 262, 262, 204, 199, 1217,
	4396, 1293, 1217, 216, 4397, 4398, 4251, 215, 4392, 221,
	220, 219, 262, 218, 1486, 1218, 217, 1218, 214, 223,
	4403, 4402, 4395, 4431, 1100, 1100, 198, 1100, 1967, 4413,
	197, 4435, 196, 194, 190, 1510, 189, 4417, 1958, 193,
	195, 192, 191, 188, 222, 4458, 72, 165, 4443, 4446,
	166, 4412, 71, 164, 1535, 2386, 4455, 1293, 163, 162,
	161, 262, 262, 4434, 1283, 4462, 4433, 160, 159, 158,
	4480, 4404, 70, 4405, 24, 2, 1, 0, 4452, 0,
	1100, 1100, 1100, 761, 4484, 262, 262, 4483, 0, 0,
	1216, 1216, 4465, 0, 0, 4448, 0, 4447, 0, 0,
	4451, 0, 4471, 0, 4479, 0, 0, 0, 874, 0,
	1100, 0, 0, 0, 4478, 0, 0, 0, 4513, 4497,
	4498, 0, 0, 4500, 4518, 4499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4532, 0, 2491, 0, 0, 0, 0, 0, 0, 0,
	4539, 4516, 0, 0, 4541, 0, 1218, 0, 4555, 0,
	4543, 2005, 1749, 1750, 1100, 4363, 0, 0, 4553, 4540,
	0, 0, 4554, 1216, 0, 0, 1464, 0, 0, 4560,
	0, 0, 262, 0, 4548, 1780, 1216, 4549, 0, 4383,
	0, 0, 1752, 4576, 4551, 4552, 0, 0, 4547, 0,
	4557, 0, 262, 4580, 0, 4514, 4568, 4572, 4570, 4566,
	4567, 0, 4579, 1222, 0, 1222, 2094, 4443, 4583, 0,
	4446, 4581, 4597, 1464, 0, 4587, 0, 1751, 4600, 4598,
	4365, 4609, 4596, 4462, 4592, 0, 0, 2659, 0, 4608,
	4607, 4604, 3984, 1216, 3984, 0, 1216, 0, 0, 0,
	0, 0, 4622, 0, 0, 0, 0, 4599, 0, 4601,
	0, 0, 4624, 0, 0, 4621, 0, 1220, 0, 1220,
	0, 0, 0, 0, 0, 2453, 0, 4630, 0, 0,
	4637, 0, 1217, 4631, 1217, 1100, 1100, 4633, 3072, 3073,
	1821, 0, 0, 4635, 1100, 4638, 1100, 1100, 0, 0,
	4641, 0, 0, 0, 4647, 4650, 4656, 0, 0, 4466,
	4659, 4661, 4653, 4660, 4658, 4468, 4655, 0, 4654, 0,
	4603, 0, 4657, 0, 0, 4668, 0, 4669, 0, 4664,
	0, 1757, 4671, 0, 2934, 4673, 0, 4674, 0, 4676,
	0, 0, 4672, 4670, 2589, 4679, 0, 0, 0, 0,
	0, 0, 0, 1100, 4684, 4680, 4686, 0, 0, 4681,
	4687, 0, 4689, 4690, 4628, 4676, 0, 4683, 0, 4648,
	4649, 0, 0, 0, 0, 0, 0, 0, 1779, 1781,
	0, 0, 2736, 0, 0, 0, 0, 0, 0, 0,
	4203, 4204, 0, 0, 1749, 1750, 0, 0, 0, 0,
	677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1218, 1218, 0, 0, 0, 0, 1780, 4218, 0,
	4220, 262, 4221, 262, 1752, 0, 4685, 262, 0, 0,
	0, 0, 3167, 3168, 3169, 0, 0, 1772, 0, 0,
	1486, 1283, 262, 0, 262, 0, 0, 0, 0, 0,
	262, 1486, 693, 0, 0, 0, 0, 262, 1486, 1751,
	1749, 1750, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 2012, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 1780, 262, 0, 0, 0, 2211, 0,
	1752, 262, 0, 2005, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 1218, 2005, 0,
	0, 0, 0, 0, 0, 3144, 3145, 0, 3162, 3163,
	3164, 0, 0, 0, 0, 1751, 1216, 0, 1216, 0,
	0, 761, 3541, 0, 0, 1771, 0, 3887, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 264, 0, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 1218, 0, 0, 1218, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	3159, 0, 0, 0, 0, 0, 0, 0, 3540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 1781, 0, 4358, 0, 0, 0, 0, 0, 1774,
	1775, 1776, 1777, 2241, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 1297,
	2255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2265, 0, 2268, 2269, 2270, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 1779, 1781, 0, 0,
	0, 0, 0, 0, 3150, 0, 0, 0, 0, 0,
	262, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 1772, 0, 0, 0, 1063,
	0, 0, 0, 0, 0, 0, 262, 0, 3165, 0,
	262, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	262, 0, 0, 0, 677, 0, 262, 0, 0, 0,
	3160, 0, 0, 1778, 2005, 0, 0, 0, 761, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 2589, 1283,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4528, 761, 0, 0, 1218, 0, 1218,
	0, 262, 0, 0, 0, 0, 0, 0, 2286, 1778,
	0, 0, 0, 262, 262, 0, 262, 0, 262, 0,
	262, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 0, 2318, 0, 0, 2319, 0,
	2320, 0, 0, 0, 3543, 3544, 0, 0, 2589, 2589,
	0, 0, 262, 0, 0, 0, 3197, 0, 0, 0,
	0, 0, 0, 0, 1749, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3161, 0, 0, 743, 2857,
	1288, 0, 761, 0, 1085, 109, 0, 1780, 0, 3223,
	0, 0, 1769, 1765, 1752, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 3236, 0, 0, 0, 0, 0,
	0, 0, 2849, 2847, 0, 0, 1288, 1288, 0, 2851,
	2853, 2843, 0, 0, 0, 0, 0, 3254, 0, 1751,
	0, 0, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613,
	3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623,
	3624, 0, 3628, 0, 0, 0, 0, 0, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2589, 2589, 2589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1453, 3156,
	3157, 3158, 0, 0, 2717, 1297, 3155, 3153, 3154, 3146,
	3147, 3148, 3149, 3151, 3152, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 1464, 0, 3144, 3145, 677,
	3162, 3163, 3164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 3552,
	1024, 0, 0, 677, 0, 0, 0, 0, 0, 0,
	262, 1044, 677, 0, 0, 1749, 1750, 0, 0, 0,
	1779, 1781, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 2845,
	262, 1293, 0, 0, 0, 1752, 0, 0, 0, 0,
	2859, 0, 3159, 0, 0, 0, 0, 1206, 0, 0,
	3236, 1749, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 2858, 2850, 2848, 2852, 2854, 2844, 2846, 2860, 1772,
	1751, 0, 2865, 0, 1780, 0, 2856, 0, 262, 1293,
	1771, 1752, 693, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 2700, 0, 0, 0, 0, 0, 262, 0,
	1464, 262, 0, 0, 0, 262, 0, 262, 1288, 2863,
	0, 0, 1283, 0, 262, 262, 1751, 1293, 1293, 2716,
	0, 0, 0, 73, 262, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 3150, 0, 0, 0,
	74, 0, 0, 3061, 0, 0, 0, 1464, 0, 1464,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 1774, 1775, 1776, 1777, 0, 2753,
	0, 0, 0, 0, 1757, 2979, 0, 0, 1063, 0,
	262, 0, 1063, 0, 0, 1458, 0, 0, 1359, 3054,
	0, 0, 0, 262, 0, 0, 87, 0, 1445, 0,
	3165, 0, 1445, 0, 0, 0, 262, 0, 0, 0,
	1774, 1775, 1776, 1777, 1773, 0, 0, 0, 0, 0,
	1757, 1779, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 868, 0, 0, 0,
	0, 0, 3160, 0, 0, 0, 0, 1766, 1767, 0,
	107, 0, 0, 0, 0, 93, 104, 0, 0, 262,
	2875, 0, 3563, 0, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3579,
	1772, 0, 0, 2864, 1486, 0, 0, 262, 0, 262,
	0, 0, 2855, 1766, 1767, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2917, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 2753, 0, 677, 0,
	0, 0, 0, 0, 0, 0, 1772, 2946, 874, 0,
	2753, 2753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 262, 1283, 262, 0,
	0, 0, 1486, 0, 1486, 1293, 262, 0, 0, 1283,
	0, 1283, 0, 1283, 0, 0, 0, 3161, 0, 0,
	0, 0, 0, 0, 2589, 2589, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 0, 3670,
	0, 0, 0, 0, 262, 262, 262, 262, 1283, 0,
	0, 1283, 0, 262, 0, 1773, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 262, 97, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589,
	2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589, 2589,
	2589, 0, 2589, 0, 0, 0, 0, 0, 0, 0,
	183, 100, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 3156, 3157, 3158, 0, 1464, 1464, 0, 3155, 3153,
	3154, 3146, 3147, 3148, 3149, 3151, 3152, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 109,
	0, 148, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 1765, 0, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	1765, 151, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 2211, 0, 109, 187, 109, 0, 109,
	0, 0, 0, 0, 231, 0, 0, 0, 4142, 0,
	0, 0, 0, 0, 0, 0, 1445, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3144, 3145, 0,
	3162, 3163, 3164, 0, 0, 0, 0, 0, 186, 0,
	1044, 109, 109, 0, 0, 0, 0, 0, 0, 3551,
	0, 0, 4180, 0, 109, 262, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 109, 0,
	0, 262, 0, 1749, 1750, 0, 677, 0, 0, 0,
	0, 677, 0, 0, 677, 0, 0, 677, 677, 1288,
	0, 0, 0, 677, 0, 0, 1780, 0, 0, 0,
	0, 262, 3159, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 1063, 0, 0, 0, 0, 0, 1445,
	109, 3397, 0, 0, 0, 0, 0, 1486, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 262,
	0, 0, 0, 262, 262, 0, 0, 1768, 0, 0,
	0, 0, 3429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3437, 0, 0, 0, 0, 0,
	0, 0, 2753, 2753, 262, 0, 3290, 0, 0, 0,
	0, 1464, 2753, 3941, 0, 3301, 3150, 0, 0, 0,
	0, 0, 0, 2753, 3301, 0, 2753, 3301, 0, 0,
	3301, 0, 0, 0, 0, 0, 3478, 3479, 0, 4311,
	3954, 1024, 0, 0, 0, 262, 262, 3290, 0, 262,
	0, 0, 1774, 1775, 1776, 1777, 0, 0, 0, 0,
	0, 1814, 1757, 0, 0, 0, 0, 0, 0, 3290,
	0, 262, 0, 3361, 3361, 0, 0, 1283, 1819, 0,
	3165, 0, 1825, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 2753, 0, 2753, 0, 3386, 2753, 3290,
	0, 0, 2753, 3290, 0, 0, 73, 0, 0, 1779,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3160, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 1766, 1767, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 262, 3413, 0,
	0, 3415, 2753, 0, 0, 262, 0, 0, 0, 262,
	0, 0, 1293, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 87,
	0, 0, 2917, 0, 0, 1283, 0, 262, 0, 0,
	2753, 0, 677, 0, 0, 0, 0, 0, 0, 2753,
	0, 0, 1911, 0, 1914, 0, 109, 0, 0, 0,
	0, 1897, 0, 0, 0, 0, 0, 0, 0, 868,
	262, 2917, 0, 0, 2917, 0, 0, 0, 1359, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3514, 0, 4134, 0,
	0, 0, 0, 1749, 1750, 0, 0, 3161, 0, 1792,
	1793, 1794, 0, 3520, 0, 0, 1283, 262, 0, 262,
	0, 0, 0, 0, 0, 1283, 1780, 0, 0, 0,
	0, 0, 1778, 1752, 0, 0, 94, 0, 0, 4134,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 262, 0, 0, 0, 0,
	0, 0, 2386, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 3144, 3145,
	0, 3162, 3163, 3164, 0, 0, 0, 0, 0, 0,
	0, 3584, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 2386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1049,
	0, 3156, 3157, 3158, 0, 0, 0, 0, 3155, 3153,
	3154, 3146, 3147, 3148, 3149, 3151, 3152, 0, 0, 0,
	0, 0, 1774, 1775, 1776, 1777, 0, 0, 0, 0,
	2211, 0, 1757, 3159, 0, 0, 0, 0, 2589, 0,
	1445, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 0, 0, 0, 262, 262, 0, 1789,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 1779,
	1781, 0, 0, 0, 0, 0, 0, 3770, 677, 677,
	0, 0, 2589, 183, 100, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 1767, 0, 0, 1445,
	1486, 1486, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 230, 0, 1787, 1486, 1486, 1486, 3150, 0, 869,
	0, 0, 0, 74, 148, 1445, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3843, 3844, 3845, 0, 3166, 232, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 1044, 0,
	1297, 0, 3144, 3145, 0, 3162, 3163, 3164, 0, 87,
	0, 3165, 0, 0, 151, 0, 0, 0, 1749, 1750,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 1752, 868,
	224, 0, 3361, 3160, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 107, 0, 262, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 3159, 0, 2589,
	0, 1583, 1778, 1751, 0, 3290, 0, 262, 0, 0,
	1212, 0, 0, 1771, 0, 0, 0, 0, 262, 0,
	1445, 0, 0, 1773, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 262, 0, 0, 94, 0, 262, 0,
	1790, 0, 0, 0, 0, 0, 257, 257, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 2753, 262, 0,
	0, 0, 0, 0, 0, 0, 1024, 2946, 2946, 1024,
	1024, 0, 0, 874, 874, 2753, 2211, 0, 0, 2917,
	2917, 3150, 1445, 874, 2753, 0, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 1288, 3948, 3949, 1757, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 3161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 1788, 0, 1779, 1781, 0, 0, 0, 1819,
	1791, 1769, 1765, 1819, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3906, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 3160, 0, 0,
	0, 0, 0, 0, 0, 1132, 0, 0, 774, 0,
	0, 0, 0, 1772, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 183, 100, 0, 103, 0, 0, 262,
	0, 1914, 3156, 3157, 3158, 1486, 0, 262, 0, 3155,
	3153, 3154, 3146, 3147, 3148, 3149, 3151, 3152, 0, 0,
	262, 230, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 0, 0, 148, 1308, 109, 0, 0, 4113,
	0, 4115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2753, 2753, 0, 3361, 2753, 1049, 0,
	0, 0, 1049, 0, 3986, 0, 3986, 1486, 232, 0,
	0, 0, 0, 0, 0, 0, 779, 2753, 0, 3301,
	0, 0, 786, 1486, 1486, 262, 3290, 1778, 0, 0,
	0, 0, 3161, 0, 151, 0, 784, 0, 0, 3290,
	0, 262, 3290, 0, 262, 0, 0, 0, 1773, 187,
	0, 1488, 0, 1494, 0, 1500, 0, 231, 0, 2753,
	0, 2753, 262, 0, 0, 4161, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 783, 0, 0, 0, 0, 0,
	2753, 0, 0, 0, 0, 4062, 0, 0, 0, 0,
	738, 1581, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	1589, 0, 1594, 0, 0, 781, 0, 0, 1223, 0,
	0, 0, 1603, 0, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3986, 0, 0, 1486, 0,
	0, 1464, 0, 0, 0, 0, 0, 0, 4229, 0,
	0, 0, 0, 0, 0, 0, 3156, 3157, 3158, 0,
	0, 0, 0, 3155, 3153, 3154, 3146, 3147, 3148, 3149,
	3151, 3152, 0, 0, 789, 0, 0, 0, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 1670, 0,
	0, 1676, 0, 0, 109, 0, 0, 109, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 820, 1288,
	0, 0, 0, 109, 0, 0, 109, 776, 2753, 0,
	3301, 0, 109, 4172, 0, 0, 0, 0, 822, 0,
	0, 262, 0, 823, 0, 0, 0, 1445, 4192, 0,
	4192, 0, 0, 0, 0, 0, 0, 780, 0, 0,
	0, 0, 1445, 0, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 1283, 841, 1445, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 1820, 0, 0, 3290, 0,
	262, 1833, 109, 0, 0, 787, 0, 0, 0, 825,
	0, 778, 0, 0, 826, 0, 0, 0, 0, 0,
	4172, 0, 0, 1063, 0, 0, 0, 0, 2753, 0,
	0, 0, 0, 0, 0, 0, 850, 1063, 0, 0,
	0, 0, 827, 0, 0, 0, 4260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 848, 775, 1486, 0,
	0, 0, 0, 0, 1297, 1297, 0, 0, 0, 0,
	3986, 3986, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 1297, 0, 0, 0, 782, 0, 0, 262, 262,
	0, 0, 0, 0, 0, 1269, 0, 1269, 1269, 739,
	0, 828, 0, 0, 829, 0, 1891, 1891, 1891, 0,
	777, 0, 3584, 0, 0, 852, 0, 0, 0, 0,
	738, 0, 2446, 0, 0, 0, 0, 1445, 0, 3361,
	4325, 0, 0, 0, 0, 0, 0, 4172, 0, 0,
	0, 0, 0, 1819, 0, 0, 1356, 0, 0, 0,
	0, 0, 1462, 3986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 846, 0, 0, 4062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3986, 0, 262, 3986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3301, 0, 0, 0,
	0, 0, 1587, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 830, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4427, 0, 1223, 0,
	0, 0, 0, 0, 833, 0, 1206, 0, 0, 4192,
	0, 0, 262, 1445, 0, 0, 1445, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 0,
	842, 2753, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 737, 1223, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 262, 819, 1223, 843, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3584,
	0, 0, 0, 0, 0, 1223, 0, 0, 840, 0,
	1445, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 1445, 0, 836,
	855, 1223, 854, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 723, 0, 0,
	838, 1223, 0, 0, 0, 847, 1223, 0, 0, 0,
	0, 856, 0, 853, 0, 0, 0, 706, 0, 739,
	1223, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4172, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 0, 0, 0, 0, 0, 0, 0, 2753,
	0, 0, 709, 0, 1223, 0, 3986, 0, 3986, 0,
	0, 1486, 0, 109, 109, 0, 109, 109, 109, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1929, 0, 0, 0, 712, 0,
	0, 2946, 0, 0, 0, 0, 0, 0, 0, 1938,
	2753, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 714, 0, 2946, 0, 0, 1206, 0,
	0, 1044, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 0, 0, 0, 109, 109, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 1462, 2361,
	0, 2365, 0, 0, 728, 0, 0, 0, 2379, 0,
	0, 0, 0, 0, 0, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	0, 2428, 0, 2430, 2431, 2432, 2433, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	2472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2502, 2505, 2508, 2511,
	0, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 0, 0,
	0, 0, 0, 1223, 0, 1223, 0, 0, 0, 0,
	0, 735, 0, 716, 0, 0, 0, 0, 0, 2581,
	1223, 2592, 2594, 2599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 736, 1223, 717, 0, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 733, 734, 731, 0, 0, 0, 0, 0,
	726, 0, 0, 719, 0, 0, 0, 0, 1223, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 1206, 1206, 0,
	0, 0, 0, 2197, 0, 0, 0, 2204, 0, 0,
	0, 0, 0, 1223, 720, 0, 727, 0, 0, 2217,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2229, 0, 2229, 0, 722,
	0, 0, 0, 2236, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 1445,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2204, 0, 0, 2261, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2560, 2561, 2562, 2563, 2556, 2557, 2558, 2559, 2281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2294, 0, 2296, 0, 2298, 0, 2300, 0, 2301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 1223, 0, 1445, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 2323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2536, 2537, 2538, 2539, 0, 0, 0, 0,
	0, 0, 2878, 2879, 0, 2881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2548, 2549, 2550, 2551, 2544,
	2545, 2546, 2547, 2552, 2553, 2554, 2555, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 1223,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 1223, 1223, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 1223, 2532,
	2533, 2534, 2535, 2540, 2541, 2542, 2543, 0, 0, 0,
	1223, 0, 1223, 1223, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3004, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 1780, 0, 0, 1445, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 2656, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 1063, 0, 0, 0, 1971, 1971, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 109, 3055, 3056, 0, 0, 0,
	1206, 3062, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3076, 3077, 0, 0, 0, 0, 2472, 0, 0, 0,
	0, 0, 0, 0, 0, 3084, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 2702, 0, 1445, 1269, 0,
	1757, 3098, 1269, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 3110, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 1789, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 706, 0, 0, 0, 0,
	707, 0, 0, 0, 1795, 0, 1796, 0, 0, 0,
	0, 0, 0, 1766, 1767, 0, 1223, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 1787, 1223, 0, 0, 0, 0, 0, 0, 708,
	0, 0, 0, 109, 0, 0, 1772, 0, 0, 1223,
	709, 0, 0, 0, 0, 0, 109, 2599, 2599, 2599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1462, 710, 1891, 0, 0, 0, 0, 0, 0, 109,
	3201, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 729, 0, 0, 1063, 1063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2204, 0, 0, 0, 0, 0,
	0, 0, 0, 2217, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 1223, 0, 0, 0, 0, 713, 0,
	0, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 1049, 2977, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 1223, 0, 0, 1049, 0, 0,
	0, 0, 728, 2988, 0, 2991, 1063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	3320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3016, 1462, 3018, 1462, 0, 0, 0, 0, 0,
	3024, 725, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 3052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 1223, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 716, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 2446, 0, 3914, 0, 0, 0, 3913,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 736,
	0, 717, 0, 0, 0, 0, 1223, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	733, 734, 731, 0, 0, 0, 0, 0, 726, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 739, 0, 0, 2379,
	0, 0, 0, 0, 0, 3538, 3539, 724, 0, 3542,
	0, 0, 0, 3545, 0, 0, 0, 0, 0, 0,
	0, 0, 3549, 0, 0, 0, 0, 0, 0, 0,
	0, 3556, 0, 0, 3201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3591,
	3592, 0, 3593, 3594, 3595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3601, 0, 0, 0, 3603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 1269, 109, 0, 0,
	1462, 1462, 0, 0, 0, 3631, 3632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3643, 0, 0, 0, 0, 0, 0,
	0, 3288, 0, 0, 0, 0, 0, 0, 3652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 3339, 3341, 0, 0, 2217, 0, 0, 73,
	0, 46, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 1223, 1223, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 1223, 3698, 0, 0, 0, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 0, 0, 0,
	48, 1223, 154, 0, 3709, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 1223, 0, 0, 0,
	47, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 3737, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 68,
	0, 0, 3426, 0, 1223, 1223, 3430, 51, 0, 0,
	0, 0, 57, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3483, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1891, 0,
	0, 0, 1223, 0, 1223, 0, 0, 3838, 0, 0,
	0, 0, 0, 0, 3523, 0, 1462, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 1223, 0, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3536, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 1223, 0, 1223, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3884, 3885, 263, 263, 263, 0, 3889, 3890,
	1223, 0, 0, 3893, 3894, 0, 0, 0, 0, 0,
	3898, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 3902, 0, 263, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 97, 0, 0, 3907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 53, 0, 0, 1223, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 1223, 0, 69,
	0, 0, 0, 0, 0, 58, 183, 100, 0, 103,
	0, 0, 0, 54, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 1223, 0, 0,
	1223, 0, 62, 0, 0, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	231, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1971, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 1971, 0, 0, 186, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 1223,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3802, 0, 0, 4129, 4130,
	4131, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 3820, 0, 0, 0, 0,
	0, 2379, 0, 0, 4140, 4141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4149, 4152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4193, 0, 0,
	0, 0, 0, 0, 0, 4200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4207, 0,
	0, 1049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 0, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 1223, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4330, 0, 0, 4333, 0, 0, 0, 0, 0,
	0, 0, 4003, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 263, 263, 0, 0, 263,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1049, 1049, 0, 0,
	0, 0, 0, 0, 0, 0, 4381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2217, 263, 1306, 263, 263, 0, 1306,
	263, 263, 0, 4084, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 1223,
	2379, 0, 0, 1223, 0, 1223, 0, 0, 1306, 4152,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 1223, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 1306, 0, 263, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 1049, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 1223, 0, 1223, 1306,
	263, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 1223, 0, 0, 1223, 0, 0, 0, 0,
	0, 4496, 4496, 4496, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 4181, 0,
	0, 4517, 0, 0, 0, 1223, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 4496, 0, 2217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 1223, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 4301, 1462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4496, 4642, 0, 0,
	0, 0, 0, 0, 1223, 4646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 1749, 1750, 0, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 1780,
	0, 0, 0, 0, 1223, 0, 1752, 0, 0, 0,
	0, 1223, 0, 0, 0, 1798, 1223, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 4386, 1306, 0, 0, 0, 263, 263, 263,
	0, 1771, 0, 0, 0, 263, 0, 0, 0, 0,
	1768, 1223, 263, 0, 1223, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 1223, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 4437,
	0, 1306, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 1306, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 1306, 0, 0, 4473,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 0,
	0, 0, 1789, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 1779, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 1796, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 1787, 0, 1223, 0,
	4533, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1223, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 263, 1306, 1306, 263, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 263, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 1773, 0, 0, 0,
	1306, 0, 1306, 0, 1306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 1306, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 1306, 263, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 1306, 1306, 1306, 1096, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 263,
	0, 263, 0, 263, 0, 263, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1223, 0,
	1223, 0, 0, 802, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0, 802,
	3119, 0, 0, 0, 3120, 0, 0, 0, 0, 0,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 1780, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1775, 1776, 1777, 0, 0, 0, 1306, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1789, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 1779, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 1796, 0, 0, 0, 0,
	0, 0, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 1772, 263, 0, 0, 0,
	263, 0, 263, 0, 0, 0, 0, 0, 0, 263,
	263, 0, 0, 0, 0, 1306, 1306, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 263, 0, 1306, 0, 0, 1749,
	1750, 263, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 1780, 0, 0, 0, 0, 1306, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1306,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 263, 0, 263, 1771, 0, 0, 0, 0, 1788,
	0, 263, 0, 1768, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 0, 0, 0, 2468, 0, 0, 0, 2469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	263, 263, 263, 0, 0, 0, 0, 0, 263, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 261, 261, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1776, 1777, 263, 0, 0, 0, 0, 0, 1757, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 261, 261, 0, 0,
	261, 261, 0, 0, 0, 1789, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 1779, 1781, 802, 0, 0,
	0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 1795, 0, 1796, 0, 0, 0, 0, 0,
	0, 1766, 1767, 1785, 1780, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 1787,
	1798, 0, 0, 0, 0, 0, 261, 261, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	261, 261, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 261, 0, 0,
	1757, 0, 267, 0, 0, 0, 0, 0, 1778, 0,
	0, 1306, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 0, 0, 1306, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 1306,
	0, 0, 0, 0, 1795, 0, 1796, 0, 0, 0,
	0, 0, 0, 1766, 1767, 0, 0, 794, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 1306, 1306, 0,
	0, 0, 0, 794, 263, 0, 1772, 0, 263, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 1306, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	263, 263, 0, 1306, 263, 0, 0, 3554, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 263, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 1306, 1913, 0, 1219, 1306,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 261, 1913, 261,
	0, 0, 1306, 0, 0, 802, 0, 0, 263, 1306,
	0, 1306, 802, 0, 0, 1306, 0, 0, 1790, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 1306, 263, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 1306, 261, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 1306, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 263, 1306, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 1780, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 1306, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1306, 261, 0, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792,
	1793, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 261, 1780, 0, 0, 0,
	0, 261, 0, 1752, 0, 0, 0, 261, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 261, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 1751, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 1771, 0,
	1757, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 1306, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 0, 0, 0, 0, 261, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 802, 261,
	0, 261, 0, 261, 1795, 261, 1796, 261, 0, 0,
	0, 0, 0, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 1774, 1775, 1776, 1777, 0, 0, 0, 0,
	0, 1787, 1757, 0, 0, 0, 0, 0, 0, 0,
	1363, 0, 0, 0, 1363, 0, 1772, 261, 0, 0,
	0, 0, 1305, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 1779,
	1781, 0, 0, 1305, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 1795, 0, 1796, 1362,
	263, 0, 0, 1362, 0, 1766, 1767, 1786, 0, 1305,
	0, 1304, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 1306, 263, 1787, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 263, 1305, 0, 0, 0, 1772, 0,
	0, 0, 1304, 263, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 1304, 1306,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 1773, 0, 1304, 1306, 1306, 1306, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 1304, 0, 0,
	0, 1306, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	263, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 1304, 1778, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 261, 0, 0, 0, 0, 0, 3122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 261, 0, 0, 0,
	261, 0, 261, 0, 0, 0, 1306, 0, 1306, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 1306, 1306, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 1763, 1764, 1770,
	1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	263, 0, 0, 1306, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 1306, 0, 1306, 263, 0, 1306, 263,
	0, 261, 0, 0, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 1306,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 802, 0, 0, 0, 1306, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 263, 0, 0, 0, 1306, 0, 1362, 0, 0,
	0, 0, 261, 0, 802, 0, 0, 0, 0, 794,
	0, 261, 0, 0, 0, 0, 794, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	1306, 1306, 1306, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 261, 0, 1304, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 1306, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	261, 261, 261, 0, 0, 0, 0, 1306, 261, 0,
	0, 261, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 1305, 0, 0, 0, 0, 1306, 0, 0,
	0, 1363, 0, 0, 1306, 263, 0, 0, 0, 1306,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 1304, 0, 0, 1306, 0, 0, 1306, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	0, 0, 0, 263, 263, 1305, 0, 1305, 0, 1305,
	1785, 1780, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 1305, 1305, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	1305, 1305, 1305, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 1304, 0, 1304, 0, 1304, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 1304, 0, 1304,
	1304, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 0, 1219, 0, 0, 0,
	263, 0, 0, 0, 0, 1306, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 1306, 1306, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 1913, 0, 0, 0,
	0, 0, 1306, 0, 0, 1363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 261, 261,
	0, 1795, 0, 1796, 0, 0, 0, 263, 0, 0,
	1766, 1767, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 261,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0,
	0, 0, 1363, 1772, 0, 0, 0, 263, 0, 0,
	0, 0, 1785, 1780, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	261, 261, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 261, 0, 0, 0,
	0, 1362, 0, 0, 1786, 1771, 0, 0, 0, 0,
	0, 1363, 0, 0, 1768, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	1362, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 261, 0, 0, 0, 1773, 1774,
	1775, 1776, 1777, 0, 0, 0, 1362, 0, 0, 1757,
	0, 0, 261, 1749, 1750, 0, 1782, 1783, 1784, 1792,
	1793, 1794, 1219, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 1780, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 1789, 0, 0, 1799,
	1305, 1305, 1798, 0, 0, 261, 1779, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 1796, 0, 0, 1751, 0,
	0, 0, 1766, 1767, 0, 0, 0, 0, 1771, 0,
	0, 0, 1363, 0, 0, 0, 0, 1768, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	1304, 0, 261, 0, 261, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	261, 1362, 0, 0, 0, 0, 3121, 0, 1797, 0,
	0, 0, 0, 0, 1363, 0, 0, 0, 0, 0,
	0, 0, 1774, 1775, 1776, 1777, 1786, 0, 1305, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 1305, 1799, 1362, 0, 0, 0, 0, 0, 1779,
	1781, 0, 0, 0, 0, 0, 0, 1304, 0, 1778,
	0, 0, 0, 0, 0, 0, 1795, 0, 1796, 0,
	0, 0, 1305, 0, 0, 1766, 1767, 0, 0, 0,
	1773, 0, 0, 0, 1305, 0, 1305, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 794, 0,
	1304, 1305, 0, 0, 0, 0, 0, 1790, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 1219, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 1304, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 0, 1778, 0, 0, 0, 0, 0, 3118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 0, 1782, 1783,
	1784, 1792, 1793, 1794, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 1785, 1780, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	261, 0, 0, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 261, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 261, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 1219, 0, 0, 0, 1763, 1764, 1770,
	1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 3117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1775, 1776, 1777, 0, 0,
	261, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 1799, 0, 0, 0, 0, 1363,
	0, 1779, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 0, 0, 0, 1795, 0,
	1796, 0, 0, 0, 0, 1362, 0, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 1305, 1305, 0, 0, 0, 0, 1362, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 0, 0, 0, 0,
	0, 0, 1219, 0, 0, 0, 1362, 0, 0, 1305,
	0, 0, 0, 1797, 0, 1913, 0, 0, 0, 0,
	0, 1304, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1913,
	0, 1913, 0, 0, 0, 0, 0, 0, 1304, 0,
	1305, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 1778, 0, 261, 0, 0, 261,
	1305, 0, 0, 0, 1305, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 1304,
	0, 1304, 0, 0, 1305, 0, 1305, 0, 0, 0,
	1363, 0, 1790, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 1304,
	0, 261, 0, 1304, 0, 0, 0, 0, 0, 0,
	1305, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 0, 1304, 0, 1304, 0, 0, 0, 1362,
	1913, 0, 0, 0, 0, 0, 794, 0, 0, 0,
	0, 0, 1305, 1305, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 1763,
	1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0, 0,
	0, 1304, 1304, 3116, 0, 1363, 0, 0, 1363, 0,
	0, 0, 0, 0, 1749, 1750, 0, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1780, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 1363, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 0, 1913, 1913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 1799, 0, 0, 0, 0, 0, 1363,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 1796,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 0, 0, 0, 1362, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 1913, 0,
	261, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 1304, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 261, 0, 1305,
	1305, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 0, 1304, 0, 0, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 1304,
	1304, 1363, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 0, 1788, 0, 0, 1362, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1362, 0, 2469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0,
	0, 1913, 0, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 1363, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 1305, 0, 0, 1751, 0, 0, 0, 0,
	1363, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	1304, 1304, 0, 0, 0, 0, 0, 0, 1363, 1362,
	1305, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1775, 1776, 1777, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 1305, 1305, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 1304,
	0, 0, 1304, 1305, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 1363, 1789, 0, 0, 1799,
	1305, 0, 0, 0, 0, 0, 1779, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 1767, 0, 1305, 1305, 1305, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 1363, 0,
	1787, 0, 0, 0, 1362, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 1304, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 1363, 0, 0, 0, 0, 0, 0, 1305,
	1773, 0, 0, 0, 1305, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 1362, 1305, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 1304, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1305, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	1304, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1365, 278, 279, 1366, 1367, 1368, 1304, 1369, 619, 1370,
	1371, 1372, 1373, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 1374,
	624, 290, 291, 292, 293, 294, 295, 1375, 1376, 0,
	296, 625, 626, 627, 1377, 297, 298, 628, 1378, 1307,
	1379, 299, 300, 301, 302, 303, 304, 305, 0, 1380,
	307, 308, 309, 306, 310, 1381, 311, 0, 312, 313,
	314, 315, 316, 317, 1382, 318, 319, 320, 1164, 321,
	322, 323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 1390, 333,
	330, 331, 1391, 334, 332, 335, 1392, 336, 337, 338,
	1393, 1394, 339, 340, 341, 1395, 342, 343, 1396, 344,
	345, 346, 1397, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 1398,
	268, 1399, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 1400, 365, 366, 1401, 1402, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1403, 378, 637, 1404, 638, 379, 1405,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 1406, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1407, 1166, 395, 642,
	643, 1408, 644, 1409, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1410, 409, 411, 410, 1411, 412, 646,
	1171, 413, 414, 1172, 1412, 415, 0, 0, 0, 416,
	417, 420, 1413, 1414, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1415,
	270, 1175, 460, 461, 1416, 647, 462, 648, 464, 465,
	1417, 0, 466, 0, 1418, 1419, 468, 469, 470, 1420,
	1421, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1422,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 1423, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 1424, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1425, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1426, 546, 547, 545,
	548, 549, 550, 1427, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	1428, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 1429, 577, 578,
	0, 574, 565, 1430, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 1431, 587, 660, 661, 662, 663, 1432,
	596, 1433, 588, 589, 590, 664, 591, 665, 1434, 592,
	593, 594, 595, 0, 597, 598, 1435, 1436, 599, 600,
	601, 603, 604, 602, 605, 1437, 606, 1438, 0, 607,
	608, 609, 666, 667, 668, 1439, 611, 610, 612, 669,
	1440, 613, 1441, 1442, 1443, 1444, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 2634, 0, 0, 0, 0, 0,
	0, 0, 2635, 271, 273, 272, 274, 275, 276, 277,
	1365, 278, 279, 1366, 1367, 1368, 0, 1369, 619, 1370,
	1371, 1372, 1373, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 1374,
	624, 290, 291, 292, 293, 294, 295, 1375, 1376, 0,
	296, 625, 626, 627, 1377, 297, 298, 628, 1378, 1307,
	1379, 299, 300, 301, 302, 303, 304, 305, 0, 1380,
	307, 308, 309, 306, 310, 1381, 311, 0, 312, 313,
	314, 315, 316, 317, 1382, 318, 319, 320, 1164, 321,
	322, 323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 1390, 333,
	330, 331, 1391, 334, 332, 335, 1392, 336, 337, 338,
	1393, 1394, 339, 340, 341, 1395, 342, 343, 1396, 344,
	345, 346, 1397, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 1398,
	268, 1399, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 1400, 365, 366, 1401, 1402, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1403, 378, 637, 1404, 638, 379, 1405,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 1406, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1407, 1166, 395, 642,
	643, 1408, 644, 1409, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1410, 409, 411, 410, 1411, 412, 646,
	1171, 413, 414, 1172, 1412, 415, 0, 0, 0, 416,
	417, 420, 1413, 1414, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1415,
	270, 1175, 460, 461, 1416, 647, 462, 648, 464, 465,
	1417, 0, 466, 0, 1418, 1419, 468, 469, 470, 1420,
	1421, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1422,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 1423, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 1424, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1425, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1426, 546, 547, 545,
	548, 549, 550, 1427, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	1428, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 1429, 577, 578,
	0, 574, 565, 1430, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 1431, 587, 660, 661, 662, 663, 1432,
	596, 1433, 588, 589, 590, 664, 591, 665, 1434, 592,
	593, 594, 595, 0, 597, 598, 1435, 1436, 599, 600,
	601, 603, 604, 602, 605, 1437, 606, 1438, 0, 607,
	608, 609, 666, 667, 668, 1439, 611, 610, 612, 669,
	1440, 613, 1441, 1442, 1443, 1444, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 0, 0, 0, 0, 3562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3564, 271, 273, 272, 274, 275, 276, 277, 1365, 278,
	279, 1366, 1367, 1368, 0, 1369, 619, 1370, 1371, 1372,
	1373, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 1374, 624, 290,
	291, 292, 293, 294, 295, 1375, 1376, 0, 296, 625,
	626, 627, 1377, 297, 298, 628, 1378, 1307, 1379, 299,
	300, 301, 302, 303, 304, 305, 0, 1380, 307, 308,
	309, 306, 310, 1381, 311, 0, 312, 313, 314, 315,
	316, 317, 1382, 318, 319, 320, 1164, 321, 322, 323,
	1383, 1384, 1386, 1385, 1387, 1388, 1389, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 1390, 333, 330, 331,
	1391, 334, 332, 335, 1392, 336, 337, 338, 1393, 1394,
	339, 340, 341, 1395, 342, 343, 1396, 344, 345, 346,
	1397, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 1398, 268, 1399,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 1400, 365, 366, 1401, 1402, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1403, 378, 637, 1404, 638, 379, 1405, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1167, 385, 386,
	1406, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1407, 1166, 395, 642, 643, 1408,
	644, 1409, 397, 398, 1168, 645, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1410, 409, 411, 410, 1411, 412, 646, 1171, 413,
	414, 1172, 1412, 415, 0, 0, 0, 416, 417, 420,
	1413, 1414, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1415, 270, 1175,
	460, 461, 1416, 647, 462, 648, 464, 465, 1417, 0,
	466, 0, 1418, 1419, 468, 469, 470, 1420, 1421, 471,
	472, 649, 1176, 473, 1177, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1422, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 1423, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 1424,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1425, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1426, 546, 547, 545, 548, 549,
	550, 1427, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 1428, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 1429, 577, 578, 0, 574,
	565, 1430, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 1431, 587, 660, 661, 662, 663, 1432, 596, 1433,
	588, 589, 590, 664, 591, 665, 1434, 592, 593, 594,
	595, 0, 597, 598, 1435, 1436, 599, 600, 601, 603,
	604, 602, 605, 1437, 606, 1438, 0, 607, 608, 609,
	666, 667, 668, 1439, 611, 610, 612, 669, 1440, 613,
	1441, 1442, 1443, 1444, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3940, 271, 273, 272, 274, 275, 276, 277,
	1365, 278, 279, 1366, 1367, 1368, 0, 1369, 619, 1370,
	1371, 1372, 1373, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 1374,
	624, 290, 291, 292, 293, 294, 295, 1375, 1376, 0,
	296, 625, 626, 627, 1377, 297, 298, 628, 1378, 1307,
	1379, 299, 300, 301, 302, 303, 304, 305, 0, 1380,
	307, 308, 309, 306, 310, 1381, 311, 0, 312, 313,
	314, 315, 316, 317, 1382, 318, 319, 320, 1164, 321,
	322, 323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 1390, 333,
	330, 331, 1391, 334, 332, 335, 1392, 336, 337, 338,
	1393, 1394, 339, 340, 341, 1395, 342, 343, 1396, 344,
	345, 346, 1397, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 1398,
	268, 1399, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 1400, 365, 366, 1401, 1402, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1403, 378, 637, 1404, 638, 379, 1405,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 1406, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1407, 1166, 395, 642,
	643, 1408, 644, 1409, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1410, 409, 411, 410, 1411, 412, 646,
	1171, 413, 414, 1172, 1412, 415, 0, 0, 0, 416,
	417, 420, 1413, 1414, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1415,
	270, 1175, 460, 461, 1416, 647, 462, 648, 464, 465,
	1417, 0, 466, 0, 1418, 1419, 468, 469, 470, 1420,
	1421, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1422,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 1423, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 1424, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1425, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1426, 546, 547, 545,
	548, 549, 550, 1427, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	1428, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 1429, 577, 578,
	0, 574, 565, 1430, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 1431, 587, 660, 661, 662, 663, 1432,
	596, 1433, 588, 589, 590, 664, 591, 665, 1434, 592,
	593, 594, 595, 0, 597, 598, 1435, 1436, 599, 600,
	601, 603, 604, 602, 605, 1437, 606, 1438, 0, 607,
	608, 609, 666, 667, 668, 1439, 611, 610, 612, 669,
	1440, 613, 1441, 1442, 1443, 1444, 614, 615, 670, 616,
	617, 618, 0, 1360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4135,
	271, 273, 272, 274, 275, 276, 277, 1365, 278, 279,
	1366, 1367, 1368, 0, 1369, 619, 1370, 1371, 1372, 1373,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 1374, 624, 290, 291,
	292, 293, 294, 295, 1375, 1376, 0, 296, 625, 626,
	627, 1377, 297, 298, 628, 1378, 1307, 1379, 299, 300,
	301, 302, 303, 304, 305, 0, 1380, 307, 308, 309,
	306, 310, 1381, 311, 0, 312, 313, 314, 315, 316,
	317, 1382, 318, 319, 320, 1164, 321, 322, 323, 1383,
	1384, 1386, 1385, 1387, 1388, 1389, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 1390, 333, 330, 331, 1391,
	334, 332, 335, 1392, 336, 337, 338, 1393, 1394, 339,
	340, 341, 1395, 342, 343, 1396, 344, 345, 346, 1397,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 1398, 268, 1399, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 1400, 365, 366, 1401, 1402, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1403, 378, 637, 1404, 638, 379, 1405, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 1167, 385, 386, 1406,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1407, 1166, 395, 642, 643, 1408, 644,
	1409, 397, 398, 1168, 645, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1410, 409, 411, 410, 1411, 412, 646, 1171, 413, 414,
	1172, 1412, 415, 0, 0, 0, 416, 417, 420, 1413,
	1414, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1415, 270, 1175, 460,
	461, 1416, 647, 462, 648, 464, 465, 1417, 0, 466,
	0, 1418, 1419, 468, 469, 470, 1420, 1421, 471, 472,
	649, 1176, 473, 1177, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1422, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 1423, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 1424, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1425,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1426, 546, 547, 545, 548, 549, 550,
	1427, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 1428, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 1429, 577, 578, 0, 574, 565,
	1430, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	1431, 587, 660, 661, 662, 663, 1432, 596, 1433, 588,
	589, 590, 664, 591, 665, 1434, 592, 593, 594, 595,
	0, 597, 598, 1435, 1436, 599, 600, 601, 603, 604,
	602, 605, 1437, 606, 1438, 0, 607, 608, 609, 666,
	667, 668, 1439, 611, 610, 612, 669, 1440, 613, 1441,
	1442, 1443, 1444, 614, 615, 670, 616, 617, 618, 0,
	1360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4012, 271, 273, 272,
	274, 275, 276, 277, 1365, 278, 279, 1366, 1367, 1368,
	0, 1369, 619, 1370, 1371, 1372, 1373, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 1374, 624, 290, 291, 292, 293, 294,
	295, 1375, 1376, 0, 296, 625, 626, 627, 1377, 297,
	298, 628, 1378, 1307, 1379, 299, 300, 301, 302, 303,
	304, 305, 0, 1380, 307, 308, 309, 306, 310, 1381,
	311, 0, 312, 313, 314, 315, 316, 317, 1382, 318,
	319, 320, 1164, 321, 322, 323, 1383, 1384, 1386, 1385,
	1387, 1388, 1389, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 1390, 333, 330, 331, 1391, 334, 332, 335,
	1392, 336, 337, 338, 1393, 1394, 339, 340, 341, 1395,
	342, 343, 1396, 344, 345, 346, 1397, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 1398, 268, 1399, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 1400, 365,
	366, 1401, 1402, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1403, 378, 637,
	1404, 638, 379, 1405, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 1406, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1407, 1166, 395, 642, 643, 1408, 644, 1409, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1410, 409, 411,
	410, 1411, 412, 646, 1171, 413, 414, 1172, 1412, 415,
	0, 0, 0, 416, 417, 420, 1413, 1414, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 1415, 270, 1175, 460, 461, 1416, 647,
	462, 648, 464, 465, 1417, 0, 466, 0, 1418, 1419,
	468, 469, 470, 1420, 1421, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1422, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 1423,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 1424, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1425, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1426, 546, 547, 545, 548, 549, 550, 1427, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 1428, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 1429, 577, 578, 0, 574, 565, 1430, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 1431, 587, 660,
	661, 662, 663, 1432, 596, 1433, 588, 589, 590, 664,
	591, 665, 1434, 592, 593, 594, 595, 0, 597, 598,
	1435, 1436, 599, 600, 601, 603, 604, 602, 605, 1437,
	606, 1438, 0, 607, 608, 609, 666, 667, 668, 1439,
	611, 610, 612, 669, 1440, 613, 1441, 1442, 1443, 1444,
	614, 615, 670, 616, 617, 618, 0, 1360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3870, 271, 273, 272, 274, 275, 276,
	277, 1365, 278, 279, 1366, 1367, 1368, 0, 1369, 619,
	1370, 1371, 1372, 1373, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	1374, 624, 290, 291, 292, 293, 294, 295, 1375, 1376,
	0, 296, 625, 626, 627, 1377, 297, 298, 628, 1378,
	1307, 1379, 299, 300, 301, 302, 303, 304, 305, 0,
	1380, 307, 308, 309, 306, 310, 1381, 311, 0, 312,
	313, 314, 315, 316, 317, 1382, 318, 319, 320, 1164,
	321, 322, 323, 1383, 1384, 1386, 1385, 1387, 1388, 1389,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 1390,
	333, 330, 331, 1391, 334, 332, 335, 1392, 336, 337,
	338, 1393, 1394, 339, 340, 341, 1395, 342, 343, 1396,
	344, 345, 346, 1397, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	1398, 268, 1399, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 1400, 365, 366, 1401, 1402,
	1165, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1403, 378, 637, 1404, 638, 379,
	1405, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1167, 385, 386, 1406, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1407, 1166, 395,
	642, 643, 1408, 644, 1409, 397, 398, 1168, 645, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1410, 409, 411, 410, 1411, 412,
	646, 1171, 413, 414, 1172, 1412, 415, 0, 0, 0,
	416, 417, 420, 1413, 1414, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1415, 270, 1175, 460, 461, 1416, 647, 462, 648, 464,
	465, 1417, 0, 466, 0, 1418, 1419, 468, 469, 470,
	1420, 1421, 471, 472, 649, 1176, 473, 1177, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1422, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 1423, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 1424, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1425, 522, 523, 524, 1178, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1426, 546, 547,
	545, 548, 549, 550, 1427, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 1428, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 1429, 577,
	578, 0, 574, 565, 1430, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 1431, 587, 660, 661, 662, 663,
	1432, 596, 1433, 588, 589, 590, 664, 591, 665, 1434,
	592, 593, 594, 595, 0, 597, 598, 1435, 1436, 599,
	600, 601, 603, 604, 602, 605, 1437, 606, 1438, 0,
	607, 608, 609, 666, 667, 668, 1439, 611, 610, 612,
	669, 1440, 613, 1441, 1442, 1443, 1444, 614, 615, 670,
	616, 617, 618, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3580, 271, 273, 272, 274, 275, 276, 277, 1365, 278,
	279, 1366, 1367, 1368, 0, 1369, 619, 1370, 1371, 1372,
	1373, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 1374, 624, 290,
	291, 292, 293, 294, 295, 1375, 1376, 0, 296, 625,
	626, 627, 1377, 297, 298, 628, 1378, 1307, 1379, 299,
	300, 301, 302, 303, 304, 305, 0, 1380, 307, 308,
	309, 306, 310, 1381, 311, 0, 312, 313, 314, 315,
	316, 317, 1382, 318, 319, 320, 1164, 321, 322, 323,
	1383, 1384, 1386, 1385, 1387, 1388, 1389, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 1390, 333, 330, 331,
	1391, 334, 332, 335, 1392, 336, 337, 338, 1393, 1394,
	339, 340, 341, 1395, 342, 343, 1396, 344, 345, 346,
	1397, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 1398, 268, 1399,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 1400, 365, 366, 1401, 1402, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1403, 378, 637, 1404, 638, 379, 1405, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1167, 385, 386,
	1406, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1407, 1166, 395, 642, 643, 1408,
	644, 1409, 397, 398, 1168, 645, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1410, 409, 411, 410, 1411, 412, 646, 1171, 413,
	414, 1172, 1412, 415, 0, 0, 0, 416, 417, 420,
	1413, 1414, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1415, 270, 1175,
	460, 461, 1416, 647, 462, 648, 464, 465, 1417, 0,
	466, 0, 1418, 1419, 468, 469, 470, 1420, 1421, 471,
	472, 649, 1176, 473, 1177, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1422, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 1423, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 1424,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1425, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1426, 546, 547, 545, 548, 549,
	550, 1427, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 1428, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 1429, 577, 578, 0, 574,
	565, 1430, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 1431, 587, 660, 661, 662, 663, 1432, 596, 1433,
	588, 589, 590, 664, 591, 665, 1434, 592, 593, 594,
	595, 0, 597, 598, 1435, 1436, 599, 600, 601, 603,
	604, 602, 605, 1437, 606, 1438, 0, 607, 608, 609,
	666, 667, 668, 1439, 611, 610, 612, 669, 1440, 613,
	1441, 1442, 1443, 1444, 614, 615, 670, 616, 617, 618,
	0, 1360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3411, 271, 273,
	272, 274, 275, 276, 277, 1365, 278, 279, 1366, 1367,
	1368, 0, 1369, 619, 1370, 1371, 1372, 1373, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 1374, 624, 290, 291, 292, 293,
	294, 295, 1375, 1376, 0, 296, 625, 626, 627, 1377,
	297, 298, 628, 1378, 1307, 1379, 299, 300, 301, 302,
	303, 304, 305, 0, 1380, 307, 308, 309, 306, 310,
	1381, 311, 0, 312, 313, 314, 315, 316, 317, 1382,
	318, 319, 320, 1164, 321, 322, 323, 1383, 1384, 1386,
	1385, 1387, 1388, 1389, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 1390, 333, 330, 331, 1391, 334, 332,
	335, 1392, 336, 337, 338, 1393, 1394, 339, 340, 341,
	1395, 342, 343, 1396, 344, 345, 346, 1397, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 1398, 268, 1399, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 1400,
	365, 366, 1401, 1402, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1403, 378,
	637, 1404, 638, 379, 1405, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 1406, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1407, 1166, 395, 642, 643, 1408, 644, 1409, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1410, 409,
	411, 410, 1411, 412, 646, 1171, 413, 414, 1172, 1412,
	415, 0, 0, 0, 416, 417, 420, 1413, 1414, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1415, 270, 1175, 460, 461, 1416,
	647, 462, 648, 464, 465, 1417, 0, 466, 0, 1418,
	1419, 468, 469, 470, 1420, 1421, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1422, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	1423, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 1424, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1425, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1426, 546, 547, 545, 548, 549, 550, 1427, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 1428, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 1429, 577, 578, 0, 574, 565, 1430, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 1431, 587,
	660, 661, 662, 663, 1432, 596, 1433, 588, 589, 590,
	664, 591, 665, 1434, 592, 593, 594, 595, 0, 597,
	598, 1435, 1436, 599, 600, 601, 603, 604, 602, 605,
	1437, 606, 1438, 0, 607, 608, 609, 666, 667, 668,
	1439, 611, 610, 612, 669, 1440, 613, 1441, 1442, 1443,
	1444, 614, 615, 670, 616, 617, 618, 0, 1360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2492, 271, 273, 272, 274, 275,
	276, 277, 1365, 278, 279, 1366, 1367, 1368, 0, 1369,
	619, 1370, 1371, 1372, 1373, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 1374, 624, 290, 291, 292, 293, 294, 295, 1375,
	1376, 0, 296, 625, 626, 627, 1377, 297, 298, 628,
	1378, 1307, 1379, 299, 300, 301, 302, 303, 304, 305,
	0, 1380, 307, 308, 309, 306, 310, 1381, 311, 0,
	312, 313, 314, 315, 316, 317, 1382, 318, 319, 320,
	1164, 321, 322, 323, 1383, 1384, 1386, 1385, 1387, 1388,
	1389, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	1390, 333, 330, 331, 1391, 334, 332, 335, 1392, 336,
	337, 338, 1393, 1394, 339, 340, 341, 1395, 342, 343,
	1396, 344, 345, 346, 1397, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 1398, 268, 1399, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 1400, 365, 366, 1401,
	1402, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1403, 378, 637, 1404, 638,
	379, 1405, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1167, 385, 386, 1406, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1407, 1166,
	395, 642, 643, 1408, 644, 1409, 397, 398, 1168, 645,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1410, 409, 411, 410, 1411,
	412, 646, 1171, 413, 414, 1172, 1412, 415, 0, 0,
	0, 416, 417, 420, 1413, 1414, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1415, 270, 1175, 460, 461, 1416, 647, 462, 648,
	464, 465, 1417, 0, 466, 0, 1418, 1419, 468, 469,
	470, 1420, 1421, 471, 472, 649, 1176, 473, 1177, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1422, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 1423, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 1424, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1425, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1426, 546,
	547, 545, 548, 549, 550, 1427, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 1428, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 1429,
	577, 578, 0, 574, 565, 1430, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 1431, 587, 660, 661, 662,
	663, 1432, 596, 1433, 588, 589, 590, 664, 591, 665,
	1434, 592, 593, 594, 595, 0, 597, 598, 1435, 1436,
	599, 600, 601, 603, 604, 602, 605, 1437, 606, 1438,
	0, 607, 608, 609, 666, 667, 668, 1439, 611, 610,
	612, 669, 1440, 613, 1441, 1442, 1443, 1444, 614, 615,
	670, 616, 617, 618, 1456, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 0, 271, 273, 272, 274, 275, 276, 277,
	1365, 278, 279, 1366, 1367, 1368, 0, 1369, 619, 1370,
	1371, 1372, 1373, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 1374,
	624, 290, 291, 292, 293, 294, 295, 1375, 1376, 0,
	296, 625, 626, 627, 1377, 297, 298, 628, 1378, 1307,
	1379, 299, 300, 301, 302, 303, 304, 305, 0, 1380,
	307, 308, 309, 306, 310, 1381, 311, 0, 312, 313,
	314, 315, 316, 317, 1382, 318, 319, 320, 1164, 321,
	322, 323, 1383, 1384, 1386, 1385, 1387, 1388, 1389, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 1390, 333,
	330, 331, 1391, 334, 332, 335, 1392, 336, 337, 338,
	1393, 1394, 339, 340, 341, 1395, 342, 343, 1396, 344,
	345, 346, 1397, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 1398,
	268, 1399, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 1400, 365, 366, 1401, 1402, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1403, 378, 637, 1404, 638, 379, 1405,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 1167,
	385, 386, 1406, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1407, 1166, 395, 642,
	643, 1408, 644, 1409, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1410, 409, 411, 410, 1411, 412, 646,
	1171, 413, 414, 1172, 1412, 415, 0, 0, 0, 416,
	417, 420, 1413, 1414, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1415,
	270, 1175, 460, 461, 1416, 647, 462, 648, 464, 465,
	1417, 0, 466, 0, 1418, 1419, 468, 469, 470, 1420,
	1421, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1422,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 1423, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 1424, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1425, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1426, 546, 547, 545,
	548, 549, 550, 1427, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	1428, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 1429, 577, 578,
	0, 574, 565, 1430, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 1431, 587, 660, 661, 662, 663, 1432,
	596, 1433, 588, 589, 590, 664, 591, 665, 1434, 592,
	593, 594, 595, 0, 597, 598, 1435, 1436, 599, 600,
	601, 603, 604, 602, 605, 1437, 606, 1438, 0, 607,
	608, 609, 666, 667, 668, 1439, 611, 610, 612, 669,
	1440, 613, 1441, 1442, 1443, 1444, 614, 615, 670, 616,
	617, 618, 1357, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1365, 278,
	279, 1366, 1367, 1368, 0, 1369, 619, 1370, 1371, 1372,
	1373, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 1374, 624, 290,
	291, 292, 293, 294, 295, 1375, 1376, 0, 296, 625,
	626, 627, 1377, 297, 298, 628, 1378, 1307, 1379, 299,
	300, 301, 302, 303, 304, 305, 0, 1380, 307, 308,
	309, 306, 310, 1381, 311, 0, 312, 313, 314, 315,
	316, 317, 1382, 318, 319, 320, 1164, 321, 322, 323,
	1383, 1384, 1386, 1385, 1387, 1388, 1389, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 1390, 333, 330, 331,
	1391, 334, 332, 335, 1392, 336, 337, 338, 1393, 1394,
	339, 340, 341, 1395, 342, 343, 1396, 344, 345, 346,
	1397, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 1398, 268, 1399,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 1400, 365, 366, 1401, 1402, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1403, 378, 637, 1404, 638, 379, 1405, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1167, 385, 386,
	1406, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1407, 1166, 395, 642, 643, 1408,
	644, 1409, 397, 398, 1168, 645, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1410, 409, 411, 410, 1411, 412, 646, 1171, 413,
	414, 1172, 1412, 415, 0, 0, 0, 416, 417, 420,
	1413, 1414, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1415, 270, 1175,
	460, 461, 1416, 647, 462, 648, 464, 465, 1417, 0,
	466, 0, 1418, 1419, 468, 469, 470, 1420, 1421, 471,
	472, 649, 1176, 473, 1177, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1422, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 1423, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 1424,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1425, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1426, 546, 547, 545, 548, 549,
	550, 1427, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 1428, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 1429, 577, 578, 0, 574,
	565, 1430, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 1431, 587, 660, 661, 662, 663, 1432, 596, 1433,
	588, 589, 590, 664, 591, 665, 1434, 592, 593, 594,
	595, 0, 597, 598, 1435, 1436, 599, 600, 601, 603,
	604, 602, 605, 1437, 606, 1438, 0, 607, 608, 609,
	666, 667, 668, 1439, 611, 610, 612, 669, 1440, 613,
	1441, 1442, 1443, 1444, 614, 615, 670, 616, 617, 618,
	1360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 1365, 278, 279, 1366, 1367, 1368,
	0, 1369, 619, 1370, 1371, 1372, 1373, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 1374, 624, 290, 291, 292, 293, 294,
	295, 1375, 1376, 0, 296, 625, 626, 627, 1377, 297,
	298, 628, 1378, 1307, 1379, 299, 300, 301, 302, 303,
	304, 305, 0, 1380, 307, 308, 309, 306, 310, 1381,
	311, 0, 312, 313, 314, 315, 316, 317, 1382, 318,
	319, 320, 1164, 321, 322, 323, 1383, 1384, 1386, 1385,
	1387, 1388, 1389, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 1390, 333, 330, 331, 1391, 334, 332, 335,
	1392, 336, 337, 338, 1393, 1394, 339, 340, 341, 1395,
	342, 343, 1396, 344, 345, 346, 1397, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 1398, 268, 1399, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 1400, 365,
	366, 1401, 1402, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1403, 378, 637,
	1404, 638, 379, 1405, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 1406, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1407, 1166, 395, 642, 643, 1408, 644, 1409, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1410, 409, 411,
	410, 1411, 412, 646, 1171, 413, 414, 1172, 1412, 415,
	0, 0, 0, 416, 417, 420, 1413, 1414, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 1415, 270, 1175, 460, 461, 1416, 647,
	462, 648, 464, 465, 1417, 0, 466, 0, 1418, 1419,
	468, 469, 470, 1420, 1421, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1422, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 1423,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 1424, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1425, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1426, 546, 547, 545, 548, 549, 550, 1427, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 1428, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 1429, 577, 578, 0, 574, 565, 1430, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 1431, 587, 660,
	661, 662, 663, 1432, 596, 1433, 588, 589, 590, 664,
	591, 665, 1434, 592, 593, 594, 595, 0, 597, 598,
	1435, 1436, 599, 600, 601, 603, 604, 602, 605, 1437,
	606, 1438, 0, 607, 608, 609, 666, 667, 668, 1439,
	611, 610, 612, 669, 1440, 613, 1441, 1442, 1443, 1444,
	614, 615, 670, 616, 617, 618, 2467, 0, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 2464, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 2465, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 2463, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 2466, 0, 0, 0, 0, 0, 0, 1083, 2462,
	0, 1045, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 230, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	232, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 1579,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 224, 614, 615, 670, 616, 617, 618, 1058,
	0, 225, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 1824, 1822, 0, 0, 1081, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 232, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 1579, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 224, 614, 615, 670, 616,
	617, 618, 1058, 0, 225, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 1099,
	1071, 1072, 1073, 1069, 1070, 1082, 1824, 3074, 0, 0,
	1081, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1123, 1087, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 1136, 0, 288, 1143,
	289, 1142, 0, 1153, 290, 291, 292, 293, 294, 295,
	1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297, 298,
	1129, 0, 1110, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115,
	1114, 1118, 324, 325, 326, 327, 328, 1146, 329, 1140,
	1139, 1060, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1131, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1066, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1154,
	1155, 360, 1078, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1138, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 1151, 1152, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1161, 0,
	1088, 379, 0, 380, 381, 382, 383, 384, 1124, 1125,
	1128, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1166, 395, 1133, 1134, 0, 1094, 0, 397, 398, 1168,
	1126, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1162, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 1117, 1116, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1057, 270, 1175, 460, 461, 1079, 1127, 462,
	1141, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	1156, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1157, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1137,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 1067, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 230,
	546, 547, 545, 548, 549, 550, 1120, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	1135, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1182, 568, 569, 570, 571, 1158, 575, 576,
	0, 577, 578, 1055, 574, 565, 232, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1147, 1148,
	1149, 1150, 0, 596, 0, 588, 589, 590, 1159, 591,
	1160, 1077, 592, 593, 594, 595, 0, 597, 598, 0,
	1061, 599, 600, 601, 603, 604, 602, 605, 1121, 606,
	0, 0, 607, 608, 609, 1579, 1144, 1181, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 224, 614,
	615, 670, 616, 617, 618, 1058, 0, 225, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1824,
	1822, 0, 0, 1081, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 2595, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 2600, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 2596, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 2597, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 0, 2512, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 2510, 0,
	2509, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 2507, 0, 2506, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 2504, 0,
	2503, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 2501, 0, 1672, 1081, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 1671, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	1048, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	1062, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 1069,
	1070, 1082, 1083, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 1087, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 1136, 0, 288, 1143, 289, 1142, 0, 1153,
	290, 291, 292, 293, 294, 295, 1089, 1122, 1056, 296,
	1183, 1184, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 4449, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 1146, 329, 1140, 1139, 1060, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1131, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1066, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 1078, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1138, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 1151, 1152, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 1088, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 1133, 1134,
	0, 1094, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 1057, 270,
	1175, 460, 461, 1079, 1127, 462, 1141, 464, 465, 0,
	0, 466, 0, 1062, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1137, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	1067, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 1135, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1182, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 1055,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1147, 1148, 1149, 1150, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 1077, 592, 593,
	594, 595, 0, 597, 598, 0, 1061, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 1144, 1181, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1058, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 0, 0, 1052, 1053, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 1083, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 2381, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 2380, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 1062,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070,
	1082, 1083, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1123, 1087, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 1136, 0, 288, 1143, 289, 1142, 0, 1153, 290,
	291, 292, 293, 294, 295, 1089, 1122, 1056, 296, 1183,
	1184, 627, 0, 297, 298, 1129, 0, 1110, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	4210, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326,
	327, 328, 1146, 329, 1140, 1139, 1060, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1131, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1066, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1154, 1155, 360, 1078, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1138, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	1151, 1152, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1161, 0, 1088, 379, 0, 380, 381,
	382, 383, 384, 1124, 1125, 1128, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1166, 395, 1133, 1134, 0,
	1094, 0, 397, 398, 1168, 1126, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1162, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	1117, 1116, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1057, 270, 1175,
	460, 461, 1079, 1127, 462, 1141, 464, 465, 0, 0,
	466, 0, 1062, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 1156, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1157, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1137, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 1067,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1120, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 1135, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1182, 568, 569,
	570, 571, 1158, 575, 576, 0, 577, 578, 1055, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1147, 1148, 1149, 1150, 0, 596, 0,
	588, 589, 590, 1159, 591, 1160, 1077, 592, 593, 594,
	595, 0, 597, 598, 0, 1061, 599, 600, 601, 603,
	604, 602, 605, 1121, 606, 0, 0, 607, 608, 609,
	666, 1144, 1181, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1058, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 1083, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 3832, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 1052, 1053,
	1892, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	0, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	597, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 3558, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 1069,
	1070, 1082, 1083, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 1087, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 1136, 0, 288, 1143, 289, 1142, 0, 1153,
	290, 291, 292, 293, 294, 295, 1089, 1122, 1056, 296,
	1183, 1184, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 1146, 329, 1140, 1139, 1060, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1131, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1066, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 1078, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1138, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 1151, 1152, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 1088, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 1133, 1134,
	0, 1094, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 1057, 270,
	1175, 460, 461, 1079, 1127, 462, 1141, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1137, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	1067, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 1135, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1182, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 1055,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1147, 1148, 1149, 1150, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 1077, 592, 593,
	594, 595, 0, 597, 598, 0, 1061, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 1144, 1181, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1058, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 0, 0, 1052, 1053, 1892, 0,
	0, 0, 0, 0, 0, 1083, 0, 0, 0, 1081,
	1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 1087, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 1136, 0, 288,
	1143, 289, 1142, 0, 1153, 290, 291, 292, 293, 294,
	295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 1146, 329,
	1140, 1139, 1060, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1131, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1066,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 1078, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1138, 0, 0, 0, 364, 0, 365,
	366, 0, 2600, 1165, 367, 368, 1151, 1152, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 1088, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 1133, 1134, 0, 1094, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 1057, 270, 1175, 460, 461, 1079, 1127,
	462, 1141, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1137, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 1067, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 1135, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1182, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 1055, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1147,
	1148, 1149, 1150, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 1077, 592, 593, 594, 595, 0, 597, 598,
	0, 1061, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 1144, 1181, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1058, 0, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	0, 1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	1083, 0, 0, 0, 1081, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1083, 1822, 0, 2605, 1081, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1083, 0,
	0, 2603, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 2591, 1081, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1083, 0,
	0, 2580, 1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 329, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	383, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 2578, 1081, 2569, 2576,
	1072, 1073, 1069, 1070, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 2572, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 1088,
	379, 0, 380, 381, 382, 2573, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 2574, 430, 2571,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 2575, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 2570, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1083, 0,
	0, 2566, 1081, 2569, 2576, 1072, 1073, 1069, 1070, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1123, 1087, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	1136, 0, 288, 1143, 289, 1142, 0, 1153, 290, 291,
	292, 293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184,
	627, 0, 297, 298, 1129, 0, 1110, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 1113,
	1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327,
	328, 1146, 2572, 1140, 1139, 1060, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1131, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1066, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1154, 1155, 360, 1078, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1138, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 1151,
	1152, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1161, 0, 1088, 379, 0, 380, 381, 382,
	2573, 384, 1124, 1125, 1128, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1166, 395, 1133, 1134, 0, 1094,
	0, 397, 398, 1168, 1126, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1162, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 1117,
	1116, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 2574, 430, 2571, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 1057, 270, 1175, 460,
	461, 1079, 1127, 462, 1141, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 1156, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 1157, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1137, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 1067, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 2575, 0, 546, 547, 545, 548, 549, 550,
	1120, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 1135, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 1182, 568, 569, 570,
	571, 1158, 575, 576, 0, 577, 578, 1055, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 1147, 1148, 1149, 1150, 0, 596, 0, 588,
	589, 590, 1159, 591, 1160, 1077, 592, 593, 594, 595,
	0, 597, 598, 0, 1061, 599, 600, 601, 603, 604,
	602, 605, 1121, 606, 0, 0, 607, 608, 609, 666,
	1144, 1181, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 2570, 618, 1058,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 1083, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 1830, 0, 1083, 0, 0, 0,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 2360, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1677, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1609,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1604, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1595,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1590, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1502,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1501, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1496, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1495, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1489,
	1081, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 1309, 1081, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 1056,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 1060, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 1057,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 1067, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	1055, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 1061, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1058, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 1052, 1053, 1099,
	1071, 1072, 1073, 1069, 1070, 1082, 1083, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1123, 1087, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 1136, 0, 288, 1143,
	289, 1142, 0, 1153, 290, 291, 292, 293, 294, 295,
	1089, 1122, 1056, 296, 1183, 1184, 627, 0, 297, 298,
	1129, 0, 1110, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115,
	1114, 1118, 324, 325, 326, 327, 328, 1146, 329, 1140,
	1139, 1060, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1131, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1066, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1154,
	1155, 360, 1078, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1138, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 1151, 1152, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1161, 0,
	1088, 379, 0, 380, 381, 382, 383, 384, 1124, 1125,
	1128, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1166, 395, 1133, 1134, 0, 1094, 0, 397, 398, 1168,
	1126, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1162, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 1117, 1116, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 1057, 270, 1175, 460, 461, 1079, 1127, 462,
	1141, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	1156, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1157, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1137,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 1067, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1120, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	1135, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 1182, 568, 569, 570, 571, 1158, 575, 576,
	0, 577, 578, 1055, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 1147, 1148,
	1149, 1150, 0, 596, 0, 588, 589, 590, 1159, 591,
	1160, 1077, 592, 593, 594, 595, 0, 597, 598, 0,
	1061, 599, 600, 601, 603, 604, 602, 605, 1121, 606,
	0, 0, 607, 608, 609, 666, 1144, 1181, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1058, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	1052, 1053, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 4495, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 1168, 1126, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 1175, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	4494, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1058, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 1069,
	1070, 1082, 1083, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 1087, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 4493, 1136, 0, 288, 1143, 289, 1142, 0, 1153,
	290, 291, 292, 293, 294, 295, 1089, 1122, 1056, 296,
	1183, 1184, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	4495, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 1146, 329, 1140, 1139, 1060, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1131, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1066, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 1078, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1138, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 1151, 1152, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 1088, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 1133, 1134,
	0, 1094, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 1057, 270,
	1175, 460, 461, 1079, 1127, 462, 1141, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1137, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	1067, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 1135, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 1182, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 1055,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 1147, 1148, 1149, 1150, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 1077, 592, 593,
	594, 595, 0, 4494, 598, 0, 1061, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 1144, 1181, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1058, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 0, 0, 1052, 1053, 1099, 1071,
	1072, 1073, 1069, 1070, 1082, 1083, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 1087, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 1136, 0, 288, 1143, 289,
	1142, 0, 1153, 290, 291, 292, 293, 294, 295, 1089,
	1122, 1056, 296, 1183, 1184, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 4154, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 1146, 329, 1140, 1139,
	1060, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1131, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1066, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 1078, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1138, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 1151, 1152, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 4155,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1137, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 4153, 1067, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 1135,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 1182, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 1055, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 1147, 1148, 1149,
	1150, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	1077, 592, 593, 594, 595, 0, 597, 598, 0, 1061,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 1144, 1181, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1058, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 1052,
	1053, 1099, 1071, 1072, 1073, 3041, 3042, 1082, 1083, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 1087, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 1136, 0,
	288, 1143, 289, 1142, 0, 1153, 290, 291, 292, 293,
	294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 1146,
	329, 1140, 1139, 1060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1131, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1066, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 1078, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1138, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 1151, 1152, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 1088, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 1133, 1134, 0, 1094, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 1057, 270, 1175, 460, 461, 1079,
	1127, 462, 1141, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1137, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 1067, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 1135, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 1182, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 1055, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	1147, 1148, 1149, 1150, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 1077, 592, 593, 594, 595, 0, 597,
	598, 0, 1061, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 1144, 1181,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1058, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 1052, 1053, 1099, 1071, 1072, 1073, 3039, 3040,
	1082, 1083, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1123, 1087, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 1136, 0, 288, 1143, 289, 1142, 0, 1153, 290,
	291, 292, 293, 294, 295, 1089, 1122, 1056, 296, 1183,
	1184, 627, 0, 297, 298, 1129, 0, 1110, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326,
	327, 328, 1146, 329, 1140, 1139, 1060, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1131, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1066, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1154, 1155, 360, 1078, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1138, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	1151, 1152, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1161, 0, 1088, 379, 0, 380, 381,
	382, 383, 384, 1124, 1125, 1128, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1166, 395, 1133, 1134, 0,
	1094, 0, 397, 398, 1168, 1126, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1162, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	1117, 1116, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 1057, 270, 1175,
	460, 461, 1079, 1127, 462, 1141, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 1156, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1157, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1137, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 1067,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1120, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 1135, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 1182, 568, 569,
	570, 571, 1158, 575, 576, 0, 577, 578, 1055, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 1147, 1148, 1149, 1150, 0, 596, 0,
	588, 589, 590, 1159, 591, 1160, 1077, 592, 593, 594,
	595, 0, 597, 598, 0, 1061, 599, 600, 601, 603,
	604, 602, 605, 1121, 606, 0, 0, 607, 608, 609,
	666, 1144, 1181, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1058, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 1052, 1053, 1099, 1071, 1072,
	1073, 1069, 1070, 1082, 1083, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1123,
	1087, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 1136, 0, 288, 1143, 289, 1142,
	0, 1153, 290, 291, 292, 293, 294, 295, 1089, 1122,
	1056, 296, 1183, 1184, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 1146, 329, 1140, 1139, 1060,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1131, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1066, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	1078, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1138, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 1151, 1152, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 1088, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	1133, 1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	1057, 270, 1175, 460, 461, 1079, 1127, 462, 1141, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1137, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 1067, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 1135, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	1182, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 1055, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 1147, 1148, 1149, 1150,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 1077,
	592, 593, 594, 595, 0, 597, 598, 0, 1061, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 1144, 1181, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1058, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 2368, 2369,
	1099, 1071, 1072, 1073, 1069, 1070, 1082, 1083, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 1087, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 1136, 0, 288,
	1143, 289, 1142, 0, 1153, 290, 291, 292, 293, 294,
	295, 1089, 1122, 0, 296, 1183, 1184, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 1146, 329,
	1140, 1139, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1131, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1066,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 1078, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1138, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 1151, 1152, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 1088, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 1133, 1134, 0, 1094, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 270, 1175, 460, 461, 1079, 1127,
	462, 1141, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1137, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 1067, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 1135, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 1182, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 1147,
	1148, 1149, 1150, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 1077, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 666, 1144, 1181, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1099, 1071, 1072, 1073,
	1069, 1070, 1082, 0, 2588, 0, 0, 0, 0, 0,
	0, 2586, 2587, 271, 273, 272, 274, 275, 276, 277,
	1083, 278, 279, 0, 1081, 0, 0, 0, 1123, 1087,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 1136, 0, 288, 1143, 289, 1142, 0,
	1153, 290, 291, 292, 293, 294, 295, 1089, 1122, 0,
	296, 1183, 1184, 627, 0, 297, 298, 1129, 0, 1110,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324,
	325, 326, 327, 328, 1146, 329, 1140, 1139, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1131, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1066, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1154, 1155, 360, 1078,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1138,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 1151, 1152, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1161, 0, 1088, 379, 0,
	380, 381, 382, 383, 384, 1124, 1125, 1128, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1166, 395, 1133,
	1134, 0, 1094, 0, 397, 398, 1168, 1126, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1162,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 1117, 1116, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	270, 1175, 460, 461, 1079, 1127, 462, 1141, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 1156, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	1157, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1137, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 3034, 3035, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1120, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 1135, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 1182,
	568, 569, 570, 571, 1158, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 1147, 1148, 1149, 1150, 0,
	596, 0, 588, 589, 590, 1159, 591, 1160, 1077, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 1121, 606, 0, 0, 607,
	608, 609, 666, 1144, 1181, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1099, 1071, 1072, 1073, 1069, 1070, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 2074, 271,
	273, 272, 274, 275, 276, 277, 1083, 278, 279, 0,
	1081, 0, 0, 0, 1123, 1087, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 0, 1136,
	0, 288, 1143, 289, 1142, 0, 1153, 290, 291, 292,
	293, 294, 295, 1089, 1122, 1056, 296, 1183, 1184, 627,
	0, 297, 298, 1129, 0, 1110, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 4495, 1113, 1111,
	1112, 1119, 1115, 1114, 1118, 324, 325, 326, 327, 328,
	1146, 329, 1140, 1139, 1060, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1066, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1154, 1155, 360, 1078, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1138, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1151, 1152,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1161, 0, 1088, 379, 0, 380, 381, 382, 383,
	384, 1124, 1125, 1128, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1166, 395, 1133, 1134, 0, 1094, 0,
	397, 398, 0, 1126, 0, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1162, 1171, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 1117, 1116,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 1057, 270, 0, 460, 461,
	1079, 1127, 462, 1141, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 1156, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 1157, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1137, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 1067, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1120,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 1135, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1182, 568, 569, 570, 571,
	1158, 575, 576, 0, 577, 578, 1055, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1147, 1148, 1149, 1150, 0, 596, 0, 588, 589,
	590, 1159, 591, 1160, 1077, 592, 593, 594, 595, 0,
	4494, 598, 0, 1061, 599, 600, 601, 603, 604, 602,
	605, 1121, 606, 0, 0, 607, 608, 609, 666, 1144,
	1181, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	1221, 0, 0, 1052, 1053, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 0, 0, 1081, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 1122, 0, 296, 625, 626, 627, 0, 297,
	298, 1129, 0, 1110, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119,
	1115, 1114, 1118, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1154, 1155, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1161,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 1124,
	1125, 1128, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 1126, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1207, 409, 411,
	410, 0, 412, 1162, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 1117, 1116, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 270, 1175, 460, 461, 0, 1127,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 1213,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 1156, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 1157, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 1215, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 1120, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 1158, 575,
	576, 0, 577, 578, 0, 574, 565, 232, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 1159,
	591, 1160, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 1121,
	606, 0, 0, 607, 608, 609, 1579, 667, 668, 0,
	611, 610, 612, 669, 1221, 613, 0, 0, 0, 224,
	614, 615, 670, 616, 617, 618, 0, 0, 225, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1123, 0, 1211, 0,
	1916, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 1122, 0, 296, 625,
	626, 627, 0, 297, 298, 1129, 0, 1110, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1154, 1155, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1161, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 1124, 1125, 1128, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1166, 395, 642, 643, 0,
	644, 0, 397, 398, 1168, 1126, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1207, 409, 411, 410, 0, 412, 1162, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	1117, 1116, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 0, 270, 1175,
	460, 461, 0, 1127, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 1213, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 1156, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 1157, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	1215, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 1120, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 1158, 575, 576, 0, 577, 578, 0, 574,
	565, 232, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 1159, 591, 1160, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 1121, 606, 0, 0, 607, 608, 609,
	1579, 667, 668, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 224, 614, 615, 670, 616, 617, 618,
	0, 0, 225, 0, 0, 0, 3194, 0, 1221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 0, 1916, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	1122, 0, 296, 625, 626, 627, 0, 297, 298, 1129,
	0, 1110, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114,
	1118, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1154, 1155,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1161, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1124, 1125, 1128,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1166,
	395, 642, 643, 0, 644, 0, 397, 398, 1168, 1126,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1207, 409, 411, 410, 0,
	412, 1162, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 1117, 1116, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 0, 270, 1175, 460, 461, 0, 1127, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 1213, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 1156,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 1157, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 1215, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1120, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 1158, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 1159, 591, 1160,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 1121, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 0, 613, 0, 1203, 0, 1221, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 1211, 0, 1209, 1123,
	0, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 1122,
	0, 296, 625, 626, 627, 0, 297, 298, 1129, 0,
	1110, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 1113, 1111, 1112, 1119, 1115, 1114, 1118,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1154, 1155, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1161, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 1124, 1125, 1128, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1166, 395,
	642, 643, 0, 644, 0, 397, 398, 1168, 1126, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1207, 409, 411, 410, 0, 412,
	1162, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 1117, 1116, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	0, 270, 1175, 460, 461, 0, 1127, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 1213, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 1156, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 1157, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 656, 1215, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1120, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 1158, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 1159, 591, 1160, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 1121, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 1221, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1123, 0, 1211, 0, 1209, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 1122, 0, 296, 625, 626, 627, 0,
	297, 298, 1129, 0, 1110, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 1113, 1111, 1112,
	1119, 1115, 1114, 1118, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1154, 1155, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1161, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	1124, 1125, 1128, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1166, 395, 642, 643, 0, 644, 0, 397,
	398, 1168, 1126, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1207, 409,
	411, 410, 0, 412, 1162, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 1117, 1116, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 270, 1175, 460, 461, 0,
	1127, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	1213, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 1156, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 1157, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 1215, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1120, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 1158,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	1159, 591, 1160, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	1121, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 1221, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 0, 1211,
	0, 1209, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 1122, 0, 296,
	625, 626, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 270,
	1175, 460, 461, 0, 1127, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 1221,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 3985, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 1122, 0, 296, 625, 626, 627, 0, 297, 298,
	1129, 0, 1110, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 1113, 1111, 1112, 1119, 1115,
	1114, 1118, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1154,
	1155, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1161, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1124, 1125,
	1128, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1166, 395, 642, 643, 0, 644, 0, 397, 398, 1168,
	1126, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1162, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 1117, 1116, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 0, 270, 1175, 460, 461, 0, 1127, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	1156, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 1157, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 1215, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1120, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 1158, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 1159, 591,
	1160, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 1121, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 1045, 613, 1302, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 1815,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1307, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 0,
	1175, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 232, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 1579, 667, 668, 0, 611, 610, 612, 669, 1576,
	613, 1302, 0, 0, 224, 614, 615, 670, 616, 617,
	618, 0, 0, 225, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 186, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 1307, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1166, 395, 642, 643, 0, 644, 0, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 0, 1175, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 232, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 1579, 667, 668,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	224, 614, 615, 670, 616, 617, 618, 1302, 1301, 225,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 186, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	1307, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1166, 395,
	642, 643, 0, 644, 0, 397, 398, 1168, 645, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	0, 0, 1175, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 1302, 1301, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 1601, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 1307, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1166, 395, 642, 643, 0, 644,
	0, 397, 398, 1168, 645, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 0, 0, 1175, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 1302,
	1301, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 3477, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 1163, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 1307, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1164, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1165, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 1167, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1166, 395, 642, 643, 0, 644, 0, 397, 398, 1168,
	645, 1169, 399, 400, 401, 1170, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 1171, 413, 414, 1172, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1173, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1174,
	459, 449, 0, 0, 1175, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 1176, 473, 1177,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 2256,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1178,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1179, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 1302, 2170, 0, 0, 0,
	0, 2171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1601,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1307, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 2169, 411, 410, 0, 412, 646, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 0,
	1175, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1302, 1301, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1601, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 1307, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1166, 395, 642, 643, 0, 644, 0, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 0, 1175, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 1221, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1123, 0, 0,
	0, 1585, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 1122, 0, 296,
	625, 626, 627, 0, 297, 298, 1129, 0, 1110, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 1113, 1111, 1112, 1119, 1115, 1114, 1118, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1154, 1155, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1161, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1124, 1125, 1128, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 1126, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1162, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 1117, 1116, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 270,
	1175, 460, 461, 0, 1127, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 1156, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 1157,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1120, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 1158, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 1159, 591, 1160, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 1121, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 1045,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 232, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 1579, 667, 668,
	0, 611, 610, 612, 669, 265, 613, 0, 0, 0,
	224, 614, 615, 670, 616, 617, 618, 0, 0, 225,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 186, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 265, 2947, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 1930, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 265, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 4651, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 3427, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1573, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 265, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 2935, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 265, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 3583, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 886, 613, 793, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 2247, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 800, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 884,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 798, 579, 580, 581, 582, 583,
	799, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 791, 613, 793, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	803, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 800,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	798, 579, 580, 581, 582, 583, 799, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 1969, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 0, 1975,
	0, 288, 1965, 289, 1981, 0, 1988, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 1991, 1992, 0,
	0, 297, 298, 0, 0, 1307, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	1146, 329, 1979, 1978, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1131,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 0, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 1977, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 1986, 1987,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 0, 380, 381, 382, 383,
	384, 0, 0, 0, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1166, 395, 1972, 1973, 0, 1968, 0,
	397, 398, 1168, 0, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 0, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 0, 0, 1175, 460, 461,
	0, 0, 462, 1980, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 0,
	1176, 473, 1177, 0, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 1962, 486,
	487, 488, 1963, 489, 490, 491, 0, 492, 0, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1976, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 0, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 1974, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 1990, 568, 569, 570, 571,
	0, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 1982, 1983, 1984, 1985, 0, 596, 0, 588, 589,
	590, 0, 591, 0, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 0, 1966,
	1989, 0, 611, 610, 612, 0, 0, 613, 0, 0,
	793, 0, 614, 615, 0, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 1956, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 800, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 798, 579, 580,
	581, 582, 583, 799, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 793,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 803, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 800, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	2290, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 2291, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 798, 579, 580, 581,
	582, 583, 799, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 2292, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 2039, 613, 1302, 2006, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 803, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1307, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 2003, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 0,
	1175, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 2004, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 2000,
	613, 1302, 2006, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 1307, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 2003, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1166, 395, 642, 643, 0, 644, 0, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 0, 1175, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 2004, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	793, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 800, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 1995, 541, 542, 543, 544,
	0, 1996, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 798, 579, 580,
	581, 582, 583, 799, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 1994, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 793,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 803, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 800, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 1947, 541, 542, 543, 544, 0,
	1948, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 798, 579, 580, 581,
	582, 583, 799, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 1946, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 0, 613, 1302, 2006, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 803, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 1163, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 1307, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1164, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 2003, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1165, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 1167, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1166, 395, 642, 643,
	0, 644, 0, 397, 398, 1168, 645, 1169, 399, 400,
	401, 1170, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 1171,
	413, 414, 1172, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1173, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1174, 459, 449, 0, 0,
	1175, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 1176, 473, 1177, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1178, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 2004, 551, 552, 534, 535, 553, 554, 1179,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1302, 1301, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	1163, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 1307, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1164, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1165, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 1167, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1166, 395, 642, 643, 0, 644, 0, 397,
	398, 1168, 645, 1169, 399, 400, 401, 1170, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 1171, 413, 414, 1172, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1173, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1174, 459, 449, 0, 0, 1175, 460, 461, 3771,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 1176,
	473, 1177, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1178, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1179, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 1302, 1301, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 1163, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	1307, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1164,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1165, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	1167, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1166, 395,
	642, 643, 0, 644, 0, 397, 398, 1168, 645, 1169,
	399, 400, 401, 1170, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 1171, 413, 414, 1172, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1173, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1174, 459, 449,
	0, 0, 1175, 460, 461, 3398, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 1176, 473, 1177, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1178, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1179, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1629, 0, 1302, 1301, 0, 0, 0, 0,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 1307, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 1628, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1166, 395, 642, 643, 0,
	644, 0, 397, 398, 1168, 645, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 0, 0, 1175,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 1627, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	1626, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	1547, 0, 1302, 1301, 0, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1307, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 1546, 640, 641, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1166, 395, 642, 643, 0, 644, 0,
	397, 398, 1168, 645, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 0, 0, 1175, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 1507, 0,
	1302, 1301, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 1163,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 1307, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1164, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1165, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 1167, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1166, 395, 642, 643, 0, 644, 0, 397, 398,
	1168, 645, 1169, 399, 400, 401, 1170, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 1171, 413, 414, 1172, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1173, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1174, 459, 449, 0, 0, 1175, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 1176, 473,
	1177, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1178, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1179, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 1475, 0, 1302, 1301,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 1307, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 1474, 640, 641,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1166,
	395, 642, 643, 0, 644, 0, 397, 398, 1168, 645,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 0, 0, 1175, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 1296, 0, 1302, 1301, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 1163, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 1307,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1164, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1165,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 1295, 640, 641, 463, 1167,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1166, 395, 642,
	643, 0, 644, 0, 397, 398, 1168, 645, 1169, 399,
	400, 401, 1170, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	1171, 413, 414, 1172, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1173, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1174, 459, 449, 0,
	0, 1175, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 1176, 473, 1177, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1178, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1179, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 1302, 1301, 0, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 1163, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 1307, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1164, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1165, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 1167, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1166, 395, 642, 643, 0, 644, 0,
	397, 398, 1168, 645, 1169, 399, 400, 401, 1170, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 1171, 413, 414, 1172,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1173,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1174, 459, 449, 0, 0, 1175, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	1176, 473, 1177, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1178, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1179, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 0, 613, 1302, 2006,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 1163, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 1307, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1164, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	2046, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1165, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 1167, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1166,
	395, 642, 643, 0, 644, 0, 397, 398, 1168, 645,
	1169, 399, 400, 401, 1170, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 1171, 413, 414, 1172, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1173, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1174, 459,
	449, 0, 0, 1175, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 1176, 473, 1177, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1178, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1179, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 0, 613, 1302, 1301, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1163, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 1307, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1164, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1165, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 1167, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1166, 395, 642, 643, 0,
	644, 0, 397, 398, 1168, 645, 1169, 399, 400, 401,
	1170, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 1171, 413,
	414, 1172, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1173, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1174, 459, 449, 0, 0, 1175,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 1176, 473, 1177, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1178, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1179, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 1302, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 1163, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 1307, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1164, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1165, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 1167, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1166, 395, 642, 643, 0, 644,
	0, 397, 398, 1168, 645, 1169, 399, 400, 401, 1170,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 1171, 413, 414,
	1172, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1173, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1174, 459, 449, 0, 0, 1175, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 1176, 473, 1177, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1178, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1179, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	2754, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 2751, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 2758,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 2960, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 2757, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 2957, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 2959, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 2956,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 2756, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 2958, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 2754,
	297, 298, 628, 0, 0, 2748, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2751, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2758, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 2757, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	2747, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	2756, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 2755, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 1700, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1699, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 1703, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 1701, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 1702, 610, 612,
	669, 1449, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1451, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 1213, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 1446, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1448, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 1213, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 1353, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1355, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 1213, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 702,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 701, 276, 277, 691, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 694,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 695, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 696, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 690, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 691, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 694, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 695, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 696, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 1213, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 3348, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 2905,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	2904, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 2262, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 2203, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	2210, 613, 265, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 2209, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 2196, 613, 265, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 2198, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 2166, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 1213, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 1551, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1550, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 1466, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 1459, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1461, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 1286,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	1285, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 1276, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 1275, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 1273, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1272, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 1268, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1267, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 672, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 256,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 694, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 695, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 696,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2299, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 2297, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 2295, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 2216, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 2025, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 2019, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 873, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 872, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 871, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 2960, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 4053, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 0, 611, 610,
	612, 669, 759, 613, 265, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 1323, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 1321, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	760, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 756,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 1324,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 755, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 759, 613,
	265, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 1323,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 1321, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 760, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 756, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 1324, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 755,
	661, 662, 663, 0, 596, 0, 588, 1322, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 0,
	611, 610, 612, 669, 681, 613, 265, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	680, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 679, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 0, 611, 610, 612, 669,
	0, 613, 265, 2947, 0, 0, 614, 615, 670, 616,
	617, 618, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 639, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 0, 611, 610, 612, 669, 0, 613, 265, 4063,
	0, 0, 614, 615, 670, 616, 617, 618, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 4324, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 3962, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 3739, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 2640, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 639, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 0, 611, 610, 612, 669, 0, 613,
	265, 2947, 0, 0, 614, 615, 670, 616, 617, 618,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 639,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 2944, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 2272, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 2260, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 759,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 749, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 760, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 756, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 1584, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	755, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 1557, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 1556, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 1541, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1539, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 1534, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 1511, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 1509, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 1472,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 1454, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 1291, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 1290, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 1282, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 1281, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 1235, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 765, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 0, 611, 610, 612,
	669, 759, 613, 265, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 749, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 747, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 639, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 748, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 760,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 750, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 756, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 751, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 755, 661, 662, 663, 0, 596, 0, 588,
	753, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 0, 611, 610, 612, 669, 741, 613, 265,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 742,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 0, 611,
	610, 612, 669, 704, 613, 265, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 698,
	613, 265, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	639, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	0, 611, 610, 612, 669, 676, 613, 265, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 639, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 379, 0, 380,
	381, 382, 383, 384, 3447, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 265, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	620, 621, 0, 288, 622, 289, 623, 0, 624, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 625,
	626, 627, 0, 297, 298, 628, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 629, 630, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 631, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 632, 633, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 634, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	635, 636, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 637, 0, 638, 379, 0, 380, 381,
	382, 383, 384, 3384, 640, 641, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 642, 643, 0,
	644, 0, 397, 398, 0, 645, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 646, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 647, 462, 648, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 649, 0, 473, 0, 650, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	651, 486, 487, 488, 652, 489, 490, 491, 653, 492,
	654, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 655, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 656,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 657, 0, 561, 0, 562,
	563, 564, 566, 536, 567, 572, 573, 658, 568, 569,
	570, 571, 659, 575, 576, 0, 577, 578, 0, 574,
	565, 0, 579, 580, 581, 582, 583, 584, 585, 354,
	586, 0, 587, 660, 661, 662, 663, 0, 596, 0,
	588, 589, 590, 664, 591, 665, 0, 592, 593, 594,
	595, 0, 597, 598, 0, 0, 599, 600, 601, 603,
	604, 602, 605, 0, 606, 0, 0, 607, 608, 609,
	666, 667, 668, 265, 611, 610, 612, 669, 0, 613,
	0, 0, 0, 0, 614, 615, 670, 616, 617, 618,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 620,
	621, 0, 288, 622, 289, 623, 0, 624, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 625, 626,
	627, 0, 297, 298, 628, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 629, 630, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 631, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 632, 633, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 634, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 635,
	636, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 637, 0, 638, 379, 0, 380, 381, 382,
	383, 384, 3313, 640, 641, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 642, 643, 0, 644,
	0, 397, 398, 0, 645, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 646, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 647, 462, 648, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	649, 0, 473, 0, 650, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 651,
	486, 487, 488, 652, 489, 490, 491, 653, 492, 654,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 655, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 656, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 657, 0, 561, 0, 562, 563,
	564, 566, 536, 567, 572, 573, 658, 568, 569, 570,
	571, 659, 575, 576, 0, 577, 578, 0, 574, 565,
	0, 579, 580, 581, 582, 583, 584, 585, 354, 586,
	0, 587, 660, 661, 662, 663, 0, 596, 0, 588,
	589, 590, 664, 591, 665, 0, 592, 593, 594, 595,
	0, 597, 598, 0, 0, 599, 600, 601, 603, 604,
	602, 605, 0, 606, 0, 0, 607, 608, 609, 666,
	667, 668, 265, 611, 610, 612, 669, 0, 613, 0,
	0, 0, 0, 614, 615, 670, 616, 617, 618, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 620, 621,
	0, 288, 622, 289, 623, 0, 624, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 625, 626, 627,
	0, 297, 298, 628, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 629, 630, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 631, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 632, 633, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 634, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 635, 636,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 637, 0, 638, 379, 0, 380, 381, 382, 383,
	384, 3311, 640, 641, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 642, 643, 0, 644, 0,
	397, 398, 0, 645, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 646, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 647, 462, 648, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 649,
	0, 473, 0, 650, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 651, 486,
	487, 488, 652, 489, 490, 491, 653, 492, 654, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 655, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 656, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 657, 0, 561, 0, 562, 563, 564,
	566, 536, 567, 572, 573, 658, 568, 569, 570, 571,
	659, 575, 576, 0, 577, 578, 0, 574, 565, 0,
	579, 580, 581, 582, 583, 584, 585, 354, 586, 0,
	587, 660, 661, 662, 663, 0, 596, 0, 588, 589,
	590, 664, 591, 665, 0, 592, 593, 594, 595, 0,
	597, 598, 0, 0, 599, 600, 601, 603, 604, 602,
	605, 0, 606, 0, 0, 607, 608, 609, 666, 667,
	668, 265, 611, 610, 612, 669, 0, 613, 0, 0,
	0, 0, 614, 615, 670, 616, 617, 618, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 620, 621, 0,
	288, 622, 289, 623, 0, 624, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 625, 626, 627, 0,
	297, 298, 628, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 629, 630, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	631, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 632, 633, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 634, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 635, 636, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	637, 0, 638, 379, 0, 380, 381, 382, 383, 384,
	3296, 640, 641, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 642, 643, 0, 644, 0, 397,
	398, 0, 645, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 646, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	647, 462, 648, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 649, 0,
	473, 0, 650, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 651, 486, 487,
	488, 652, 489, 490, 491, 653, 492, 654, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 655, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 656, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 657, 0, 561, 0, 562, 563, 564, 566,
	536, 567, 572, 573, 658, 568, 569, 570, 571, 659,
	575, 576, 0, 577, 578, 0, 574, 565, 0, 579,
	580, 581, 582, 583, 584, 585, 354, 586, 0, 587,
	660, 661, 662, 663, 0, 596, 0, 588, 589, 590,
	664, 591, 665, 0, 592, 593, 594, 595, 0, 597,
	598, 0, 0, 599, 600, 601, 603, 604, 602, 605,
	0, 606, 0, 0, 607, 608, 609, 666, 667, 668,
	265, 611, 610, 612, 669, 0, 613, 0, 0, 0,
	0, 614, 615, 670, 616, 617, 618, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 620, 621, 0, 288,
	622, 289, 623, 0, 624, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 625, 626, 627, 0, 297,
	298, 628, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	629, 630, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 631,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	632, 633, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 634, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 635, 636, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 637,
	0, 638, 379, 0, 380, 381, 382, 383, 384, 2915,
	640, 641, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 642, 643, 0, 644, 0, 397, 398,
	0, 645, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 646, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 647,
	462, 648, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 649, 0, 473,
	0, 650, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 651, 486, 487, 488,
	652, 489, 490, 491, 653, 492, 654, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	655, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 656, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 657, 0, 561, 0, 562, 563, 564, 566, 536,
	567, 572, 573, 658, 568, 569, 570, 571, 659, 575,
	576, 0, 577, 578, 0, 574, 565, 0, 579, 580,
	581, 582, 583, 584, 585, 354, 586, 0, 587, 660,
	661, 662, 663, 0, 596, 0, 588, 589, 590, 664,
	591, 665, 0, 592, 593, 594, 595, 0, 597, 598,
	0, 0, 599, 600, 601, 603, 604, 602, 605, 0,
	606, 0, 0, 607, 608, 609, 666, 667, 668, 265,
	611, 610, 612, 669, 0, 613, 0, 0, 0, 0,
	614, 615, 670, 616, 617, 618, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 620, 621, 0, 288, 622,
	289, 623, 0, 624, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 625, 626, 627, 0, 297, 298,
	628, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 629,
	630, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 631, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 632,
	633, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 634, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 635, 636, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 637, 0,
	638, 379, 0, 380, 381, 382, 383, 384, 639, 640,
	641, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 642, 643, 0, 644, 0, 397, 398, 0,
	645, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 646, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 647, 462,
	648, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 649, 0, 473, 0,
	650, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 651, 486, 487, 488, 652,
	489, 490, 491, 653, 492, 654, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 655,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 656, 529, 0, 530, 531, 742,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	657, 0, 561, 0, 562, 563, 564, 566, 536, 567,
	572, 573, 658, 568, 569, 570, 571, 659, 575, 576,
	0, 577, 578, 0, 574, 565, 0, 579, 580, 581,
	582, 583, 584, 585, 354, 586, 0, 587, 660, 661,
	662, 663, 0, 596, 0, 588, 589, 590, 664, 591,
	665, 0, 592, 593, 594, 595, 0, 597, 598, 0,
	0, 599, 600, 601, 603, 604, 602, 605, 0, 606,
	0, 0, 607, 608, 609, 666, 667, 668, 265, 611,
	610, 612, 669, 0, 613, 0, 0, 0, 0, 614,
	615, 670, 616, 617, 618, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	619, 0, 2234, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 620, 621, 0, 288, 622, 289,
	623, 0, 624, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 625, 626, 627, 0, 297, 298, 628,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 629, 630,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 631, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 632, 633,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 634, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 635, 636, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 637, 0, 638,
	379, 0, 380, 381, 382, 383, 384, 639, 640, 641,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 642, 643, 0, 644, 0, 397, 398, 0, 645,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 646, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 647, 462, 648,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 649, 0, 473, 0, 650,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 651, 486, 487, 488, 652, 489,
	490, 491, 653, 492, 654, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 655, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 656, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 0, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 657,
	0, 561, 0, 562, 563, 564, 566, 536, 567, 572,
	573, 658, 568, 569, 570, 571, 659, 575, 576, 0,
	577, 578, 0, 574, 565, 0, 579, 580, 581, 582,
	583, 584, 585, 354, 586, 0, 587, 660, 661, 662,
	663, 0, 596, 0, 588, 589, 590, 664, 591, 665,
	0, 592, 593, 594, 595, 0, 597, 598, 0, 0,
	599, 600, 601, 603, 604, 602, 605, 0, 606, 0,
	0, 607, 608, 609, 666, 667, 668, 265, 611, 610,
	612, 669, 0, 613, 0, 0, 0, 0, 614, 615,
	670, 616, 617, 618, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 620, 621, 0, 288, 622, 289, 623,
	0, 624, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 625, 626, 627, 0, 297, 298, 628, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 629, 630, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 631, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 632, 633, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	634, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 635, 636, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 637, 0, 638, 379,
	0, 380, 381, 382, 383, 384, 1253, 640, 641, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	642, 643, 0, 644, 0, 397, 398, 0, 645, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	646, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 647, 462, 648, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 649, 0, 473, 0, 650, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 651, 486, 487, 488, 652, 489, 490,
	491, 653, 492, 654, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 655, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 656, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 657, 0,
	561, 0, 562, 563, 564, 566, 536, 567, 572, 573,
	658, 568, 569, 570, 571, 659, 575, 576, 0, 577,
	578, 0, 574, 565, 0, 579, 580, 581, 582, 583,
	584, 585, 354, 586, 0, 587, 660, 661, 662, 663,
	0, 596, 0, 588, 589, 590, 664, 591, 665, 0,
	592, 593, 594, 595, 0, 597, 598, 0, 0, 599,
	600, 601, 603, 604, 602, 605, 0, 606, 0, 0,
	607, 608, 609, 666, 667, 668, 265, 611, 610, 612,
	669, 0, 613, 0, 0, 0, 0, 614, 615, 670,
	616, 617, 618, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 620, 621, 0, 288, 622, 289, 623, 0,
	624, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 625, 626, 627, 0, 297, 298, 628, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 629, 630, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 631, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 632, 633, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 634,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 635, 636, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 637, 0, 638, 379, 0,
	380, 381, 382, 383, 384, 639, 640, 641, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 642,
	643, 0, 644, 0, 397, 398, 0, 645, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 646,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 647, 462, 648, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 649, 0, 473, 0, 650, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 651, 486, 487, 488, 652, 489, 490, 491,
	653, 492, 654, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 655, 504, 1186, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 656, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 657, 0, 561,
	0, 562, 563, 564, 566, 536, 567, 572, 573, 658,
	568, 569, 570, 571, 659, 575, 576, 0, 577, 578,
	0, 574, 565, 0, 579, 580, 581, 582, 583, 584,
	585, 354, 586, 0, 587, 660, 661, 662, 663, 0,
	596, 0, 588, 589, 590, 664, 591, 665, 0, 592,
	593, 594, 595, 0, 597, 598, 0, 0, 599, 600,
	601, 603, 604, 602, 605, 0, 606, 0, 0, 607,
	608, 609, 666, 667, 668, 265, 611, 610, 612, 669,
	0, 613, 0, 0, 0, 0, 614, 615, 670, 616,
	617, 618, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 619, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 620, 621, 0, 288, 622, 289, 623, 0, 624,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	625, 626, 627, 0, 297, 298, 628, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 629, 630, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 631, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 632, 633, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 634, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 635, 636, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 637, 0, 638, 0, 0, 380,
	381, 382, 383, 384, 639, 640, 641, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 642, 643,
	0, 644, 0, 397, 398, 0, 645, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 646, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 647, 462, 648, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 649, 0, 473, 0, 650, 474, 475, 467,
	476, 477, 0, 479, 480, 481, 482, 483, 0, 484,
	485, 651, 486, 487, 488, 652, 489, 490, 491, 653,
	492, 654, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 0, 502, 503, 655, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	656, 0, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 657, 0, 561, 0,
	562, 563, 564, 566, 536, 567, 572, 573, 658, 568,
	569, 570, 571, 659, 575, 576, 0, 577, 578, 0,
	574, 565, 0, 579, 580, 581, 582, 583, 584, 585,
	354, 586, 0, 587, 660, 661, 662, 663, 0, 596,
	0, 588, 589, 590, 664, 591, 665, 0, 592, 593,
	594, 595, 0, 597, 598, 0, 0, 599, 600, 601,
	603, 604, 602, 605, 0, 606, 0, 0, 607, 608,
	609, 666, 667, 668, 0, 611, 610, 612, 669, 0,
	613, 0, 0, 0, 0, 614, 615, 670, 616, 617,
	618, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 1780, 0, 0, 0, 0, 1749,
	1750, 1752, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 1780, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 1751, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1776, 1777, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 1789, 1796, 0, 1799, 0,
	0, 0, 0, 1766, 1767, 1779, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1795, 0, 1796, 0, 0, 0, 0, 0,
	0, 1766, 1767, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 1773, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 1785, 1780, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 1790, 1773,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 1774, 1775, 1776, 1777, 4428, 0, 0, 1788, 0,
	0, 1757, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 1749, 1750, 4424, 1782, 1783, 1784, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 1799, 0, 1785, 1780, 0, 0, 0, 1779, 1781,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 1795, 0, 1796, 0, 0,
	0, 0, 0, 0, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 1772, 0, 1749,
	1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 1780, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 1771, 0, 0, 0, 0, 0,
	1757, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 1778, 0, 0, 0, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 1795, 0, 1796, 0, 0, 0,
	0, 0, 0, 1766, 1767, 0, 0, 0, 1774, 1775,
	1776, 1777, 0, 0, 0, 0, 0, 0, 1757, 1790,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 1799, 0,
	1785, 1780, 0, 0, 0, 1779, 1781, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 1797,
	0, 0, 1795, 0, 1796, 0, 0, 0, 0, 0,
	0, 1766, 1767, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 1788, 1768, 0, 1772, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 0, 4345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 1780, 0, 1789, 0, 0, 1799, 1778, 1752,
	0, 0, 0, 0, 1779, 1781, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 1795, 0, 1796, 0, 0, 0, 0, 0, 0,
	1766, 1767, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 1790, 0, 1787, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 1772, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 0, 0, 4310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 1774, 1775,
	1776, 1777, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 0, 0, 4309, 0, 1789, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 1779, 1781, 1778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 1796, 0, 0, 0, 1773, 0,
	0, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 1749, 1750, 1790, 1782, 1783, 1784, 1792,
	1793, 1794, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 1780, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	0, 0, 4138, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 1774, 1775, 1776, 1777, 0, 0, 0, 0,
	0, 0, 1757, 0, 1749, 1750, 0, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1780, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 1789,
	0, 0, 1799, 1798, 0, 0, 0, 0, 0, 1779,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 1796, 1751,
	0, 0, 0, 0, 0, 1766, 1767, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0,
	0, 0, 0, 3981, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 0, 0, 1786,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1749, 1750, 1799, 1782, 1783, 1784, 1792, 1793, 1794,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 1785, 1780, 0, 0, 1795, 0, 1796,
	0, 1752, 0, 0, 0, 0, 1766, 1767, 0, 0,
	1798, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 1772,
	1790, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 1776, 1777, 0, 0, 0, 0, 0, 0,
	1757, 0, 1788, 0, 0, 0, 0, 1763, 1764, 1770,
	1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755,
	1756, 1758, 1759, 1778, 0, 0, 0, 3917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	1799, 0, 0, 0, 1773, 0, 0, 1779, 1781, 0,
	0, 0, 0, 0, 0, 1749, 1750, 0, 1782, 1783,
	1784, 1792, 1793, 1794, 1795, 0, 1796, 0, 0, 0,
	0, 1790, 0, 1766, 1767, 0, 0, 1785, 1780, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 1787, 0, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 0, 0, 3916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1775, 1776, 1777, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 1789, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 1779, 1781, 0, 1785, 1780, 0, 0, 1790, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 1795, 0,
	1796, 1798, 0, 0, 0, 0, 0, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	1772, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769,
	1765, 1786, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758,
	1759, 0, 0, 0, 0, 3915, 0, 0, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 1749, 1750, 0, 1782, 1783,
	1784, 1792, 1793, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 1780, 0,
	0, 0, 0, 0, 1778, 1752, 0, 0, 1789, 0,
	0, 1799, 0, 0, 1798, 0, 0, 0, 1779, 1781,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 1796, 0, 0,
	1751, 0, 0, 0, 1766, 1767, 0, 0, 0, 0,
	1771, 0, 1790, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 1787, 0, 1749, 1750, 0, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1780, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 1774, 1775, 1776, 1777, 1786, 1771,
	0, 0, 0, 0, 1757, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 1763,
	1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0, 3588,
	0, 1789, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 1779, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 1795, 0,
	1796, 0, 0, 0, 0, 0, 0, 1766, 1767, 0,
	0, 0, 1773, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 0, 1787, 0, 1749, 1750, 0,
	1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0, 1790,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	1780, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	1789, 0, 0, 1799, 0, 0, 1798, 0, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 1795, 0, 1796,
	0, 0, 1751, 0, 0, 0, 1766, 1767, 0, 0,
	0, 1786, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 1778, 0, 3114, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 1777,
	1786, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1750, 0, 1782, 1783, 1784,
	1792, 1793, 1794, 1789, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 1779, 1781, 0, 1785, 1780, 0, 0,
	0, 0, 0, 1778, 1752, 0, 0, 0, 0, 0,
	1795, 0, 1796, 1798, 0, 0, 0, 0, 0, 1766,
	1767, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 1790, 1772, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 1763,
	1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753,
	1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0, 3113,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 1778, 0, 3112, 0,
	1789, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 1773, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 1795, 0, 1796,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 0,
	1785, 1780, 0, 0, 1790, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 1787, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760,
	1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0,
	0, 3111, 0, 0, 0, 0, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 0, 0, 1757, 4565, 0,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 1796, 0, 0, 0, 0, 0, 0,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 1786, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 0, 0, 3078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1750, 4564, 1782, 1783, 1784,
	1792, 1793, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1780, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 1778, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 1790, 0, 0, 1768, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 1780, 0, 0, 0, 0,
	3049, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 1774, 1775, 1776, 1777, 1771, 0, 0,
	0, 0, 0, 1757, 0, 3174, 1768, 0, 0, 3173,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	1789, 0, 0, 1799, 0, 3050, 0, 0, 0, 0,
	1779, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 1796,
	0, 0, 0, 0, 0, 0, 1766, 1767, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 2613, 0, 0, 0, 0, 0, 1772,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 1799, 1785, 1780, 0, 0, 0, 2612, 1779, 1781,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1797, 0, 0, 1795, 0, 1796, 0, 0,
	0, 0, 0, 0, 1766, 1767, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 1772, 1749, 1750,
	0, 1782, 1783, 1784, 1792, 1793, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 1780, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 1778, 0, 0, 0, 1798, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 1786, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 1774,
	1775, 1776, 1777, 1771, 0, 0, 0, 0, 0, 1757,
	0, 1790, 1768, 0, 0, 0, 0, 0, 0, 0,
	1749, 1750, 0, 1782, 1783, 1784, 1792, 1793, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 1780, 0, 0, 1789, 0, 0, 1799,
	1752, 1778, 0, 0, 0, 0, 1779, 1781, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1795, 0, 1796, 0, 0, 0, 0,
	0, 0, 1766, 1767, 0, 1751, 0, 1774, 1775, 1776,
	1777, 0, 0, 0, 0, 1771, 0, 1757, 0, 1790,
	1787, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 1772, 0, 0, 1763, 1764,
	1770, 1791, 1769, 1765, 0, 1762, 1760, 1761, 1753, 1754,
	1755, 1756, 1758, 1759, 1789, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 1779, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 1795, 0, 1796, 0, 0, 0, 0, 0, 0,
	1766, 1767, 0, 0, 0, 0, 1786, 0, 0, 1774,
	1775, 1776, 1777, 0, 0, 0, 0, 0, 1787, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 1772, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 0, 1789, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 1779, 1781, 0, 1778,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 1795, 0, 1796, 0, 0, 0, 0,
	1773, 0, 1766, 1767, 1786, 1042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 1772, 1749, 1750, 0, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 1780,
	0, 0, 0, 0, 0, 0, 1752, 1778, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 1790, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 0, 0, 0, 0, 1757, 0, 1790, 0, 0,
	0, 3180, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0, 1762,
	1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 0, 0,
	0, 0, 1789, 0, 0, 1799, 0, 0, 0, 0,
	3569, 0, 1779, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 1796, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 1772, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765,
	0, 1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759,
	0, 0, 0, 0, 0, 0, 1749, 1750, 0, 1782,
	1783, 1784, 1792, 1793, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 1785, 1780,
	0, 0, 0, 3175, 0, 0, 1752, 0, 0, 0,
	0, 0, 1786, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 1785, 1780, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 1774, 1775, 1776, 1777, 0,
	0, 1798, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 1789, 0, 0, 1799, 1768, 0, 0, 0,
	0, 0, 1779, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 1796, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 1787, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 1799, 1786, 0, 0, 0, 0, 0, 1779, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 1796, 0, 0,
	0, 0, 0, 0, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 1749, 1750, 0, 1782, 1783, 1784, 1792, 1793,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 1790, 1785, 1780, 0, 0, 0, 3115,
	0, 0, 1752, 0, 0, 0, 0, 0, 1786, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3142, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 1788, 0, 0, 0, 0,
	1763, 1764, 1770, 1791, 1769, 1765, 0, 1762, 1760, 1761,
	1753, 1754, 1755, 1756, 1758, 1759, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 1776, 1777, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1749,
	1750, 1799, 1782, 1783, 1784, 1792, 1793, 1794, 1779, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 1780, 0, 0, 1795, 0, 1796, 0, 1752,
	0, 0, 0, 0, 1766, 1767, 0, 0, 1798, 0,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 1787, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 1751, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1776, 1777, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 979, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 1799, 0,
	940, 0, 1773, 0, 0, 1779, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 954, 0, 938, 937,
	0, 0, 1795, 0, 1796, 0, 0, 0, 0, 1790,
	0, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 1787,
	0, 942, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 1772, 951, 952, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 0, 0, 1786, 0, 0, 0, 977,
	0, 1788, 0, 0, 0, 0, 1763, 1764, 1770, 1791,
	1769, 1765, 0, 1762, 1760, 1761, 1753, 1754, 1755, 1756,
	1758, 1759, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 948, 949, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 955, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 965, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	984, 976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 986, 1788, 0,
	0, 0, 0, 1763, 1764, 1770, 1791, 1769, 1765, 0,
	1762, 1760, 1761, 1753, 1754, 1755, 1756, 1758, 1759, 941,
	0, 0, 0, 972, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 970, 0,
	0, 0, 0, 0, 0, 985, 966, 0, 0, 959,
	957, 0, 962, 0, 0, 0, 0, 0, 963, 0,
	0, 934, 0, 982, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 974, 0, 964, 0,
	0, 0, 0, 0, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 983, 0, 0, 0, 0,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 971,
}

var sqlPact = [...]int{
	9710, -1000, -1000, -1000, -1000, 195, -1000, -1000, 193, 191,
	188, 183, 176, 173, 172, 171, 169, 168, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 162, -1000, -1000, 161, -1000,
	159, 156, 155, -1000, -1000, 153, -1000, 152, -1000, -1000,
	-1000, -1000, 145, 144, 143, 89037, 88491, 89576, 2214, 109673,
	96072, 2140, 79783, 109127, 79237, 108581, 2042, 8005, 108035, 2681,
	142, -1000, 107489, 141, 140, 139, -1000, 106943, -1000, 1863,
	-1000, 136, -1000, 7146, 64459, 132, 130, 129, 2255, 128,
	-1000, 127, 126, -1000, -1000, 125, -1000, 7496, 1487, -1000,
	124, 123, -1000, 733, 93895, 122, 121, 2460, 120, 119,
	63913, 117, 116, 2240, 2772, -1000, -1000, 2058, -1000, -1000,
	115, 107, 99, 98, 96, 94, 93, 92, 91, 90,
	88, -1000, 87, 86, 84, 83, 81, -1000, 78, 77,
	76, -1000, 75, -1000, 74, 71, 70, 69, 68, 66,
	65, 63, 62, 56, 46, 45, 42, 41, 121892, -1000,
	-1000, 1924, 1660, 1659, 1652, 1647, 1641, 947, 40, 38,
	37, 36, 35, 34, 32, 31, 29, 28, 27, 26,
	22, 16, 15, 13, 10, 160, 9, 8, 5, 4,
	3, 0, -4, 2220, -1000, 1746, 1127, 29938, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115602, 110212, -5, -73, -6, -1000,
	3263, 978, 52973, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 253, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 444, 1912, 730, -1000, -1000, -1000, 106404,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2207, -68,
	-1000, 1943, -1000, -1000, -1000, -1000, -1000, 727, -1000, 2198,
	263, 2108, -1000, -1000, -1000, 3325, 2375, 3714, 3712, 3710,
	3708, 3707, 115063, 1853, 3704, 2455, 3703, 3700, 3696, 3695,
	3693, 3692, 3691, -1000, 87945, 1011, 87399, 86853, 3344, 105865,
	86307, 105319, 73242, 45052, 1117, 3324, -1000, -1000, -1000, -1000,
	-1000, -1000, 110212, -1000, 1010, -1000, -1000, 3690, 3689, 2087,
	724, 95526, -1000, 1735, -1000, 885, 31657, -1000, 1177, -1000,
	31657, 251, -1000, -1000, -1000, -1000, -1000, -1000, 3688, 3686,
	3684, 3683, 3682, -1000, -1000, 78691, 23010, 78145, 77599, 104773,
	22452, 85761, 85215, 3681, 3680, 3679, 3678, 104227, 72684, 1008,
	1385, -1000, -1000, -1000, -1000, -1000, -1000, -39, 70452, 3473,
	110212, -1000, 250, -1000, -1000, -1000, -1000, -1000, -1000, 44467,
	1017, 43882, 989, 43297, 979, -1000, -1000, -1000, -1000, 72126,
	-1000, 103681, 2370, 3675, 3673, 1109, 3672, 3213, 1813, 3670,
	1828, 1198, 3669, 3668, 3667, 3666, 3664, 3663, 3662, 1447,
	103135, 2887, 1521, 102589, 1757, 71568, 1005, 84669, 89576, 2551,
	102043, 1417, 1416, -1000, -1000, -1000, -1000, 3025, 2762, 2761,
	1304, -1000, -1000, -1000, -1000, 55697, 6767, 6357, 9003, 101497,
	58477, 89576, 89576, -1000, -1000, -1000, -1000, -1000, 42712, 854,
	42127, 1116, -1000, -1000, 56253, 2843, -1000, -1000, -1000, -1000,
	41542, 772, 40957, 735, 110212, -1000, 2884, 1883, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2328, 1620, 3488, 2665, 71010, 2074,
	1343, 3281, 3024, 3023, 1490, 3022, 3661, 2494, 3016, 3015,
	3014, 3012, 3008, 1650, 2501, 292, 29353, 2865, 1709, 40372,
	1481, 1502, 3005, 2946, 3502, 1937, 2013, 2020, 77053, 3660,
	3659, 3244, 2944, 2943, 2713, 2915, -1000, 2834, 1440, -1000,
	-1000, -1000, -1000, 1406, -1000, -1000, -1000, -1000, 80322, -1000,
	-1000, 1325, -1000, -1000, 1325, -1000, -1000, -1000, -1000, -1000,
	1320, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1746, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2080, -1000, 2052, -1000, -1000, 2602, 3240,
	3240, 3240, 3323, 419, 418, -1000, 160, -1000, -1000, 121698,
	-1000, -1000, 45625, 45625, 45625, 45625, 45625, 45625, 45625, 2048,
	-1000, 721, -1000, -1000, 767, -1000, 720, 602, -1000, -1000,
	-1000, -1000, -1000, -1000, 716, -1000, -1000, -1000, -1000, -1000,
	-1000, 3473, -1000, 25855, -1000, -1000, -1000, 384, 712, 45625,
	-1000, -1000, 3528, 3526, 869, -1000, 242, 928, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2883, 710, 708, -1000, 707, 706, 703, 699, 697, -1000,
	-1000, -1000, 696, 688, 687, 685, 684, 682, 668, 667,
	-1000, 1978, -1000, -1000, -1000, -1000, -1000, -1000, 636, 635,
	635, 635, -1000, 998, -1000, -1000, -1000, 289, 633, 271,
	631, 629, 628, -1000, 665, 664, 662, 661, 658, 657,
	656, 655, 652, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	995, -1000, -1000, -1000, -1000, -40, 110212, -1000, 444, -40,
	-1000, -1000, 651, -1000, 33961, 33961, 33961, -1000, -1000, 2192,
	45625, -1000, 2567, -1000, -27, -27, 821, 54605, -1000, 51860,
	821, 281, 782, 60111, -1000, 2833, -1000, -1000, 649, 239,
	-1000, -1000, -1000, -1000, 23566, 2822, 110212, 110212, 89576, 89576,
	89576, 3657, 3129, 45625, -1000, -1000, 68255, 110212, 90115, -1000,
	-1000, 3422, 64998, 67716, 110212, 2881, 67177, 3655, -1000, -1000,
	-1000, -1000, -1000, 3092, 3651, 3650, 3649, -1000, 110212, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 217, 3091, -1000, -1000,
	93349, 217, 3089, -1000, 217, 3085, -1000, 92810, -1000, -1000,
	2212, 3061, -1000, -1000, 226, 3060, -1000, -1000, -1000, 218,
	3059, -1000, -1000, 232, -65, 3053, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 121698, -1000,
	-1000, -1000, 66631, -1000, 3256, -1000, -1000, 110212, -1000, 45625,
	-1000, 3421, 1681, 74344, 3362, -50, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2426, 2391, 1088, 2242, -1000, 3151, 1584,
	-1000, 31657, 3201, -1000, -1000, -1000, 223, 23566, -1000, -1000,
	-1000, -1000, -1000, -1000, 3342, 3052, 1401, -1000, 2241, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1934, 3046, -1000,
	2291, 3040, 1812, -1000, -1000, 2569, -1000, 3233, -1000, -1000,
	2111, 3033, -24, -1000, -1000, 2296, -1000, -1000, -1000, -1000,
	-1000, 1942, -1000, 953, 3031, -1000, 84123, 57921, 56253, 70452,
	-44, -1000, -1000, -1000, -1000, -181, -1000, 21894, 121698, -1000,
	-1000, -1000, -1000, 1841, 121698, 830, -1000, -1000, 3030, -1000,
	121698, 816, -1000, -1000, 3027, -1000, 2879, -1000, -1000, 2327,
	-1000, -1000, 3648, -1000, -1000, 3647, -1000, 3646, 3645, 3643,
	-1000, 1721, 1963, 3640, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 83584, 2191, -1000, -1000, 82492, 2875, -1000, 2325,
	3361, -1000, 83038, 1004, -1000, 953, 2323, -1000, 92271, 897,
	2322, -1000, 3639, 3320, 2610, 953, 2321, -1000, -1000, -1000,
	-1000, -1000, 985, -1000, 61740, -1000, 61740, -1000, 1607, -1000,
	114524, -27, 89576, 3473, -1000, -70, -1000, -1000, -1000, 978,
	-1000, 55151, -1000, 55151, 94980, 73798, 934, 717, 63367, 121698,
	-1000, -1000, -1000, -1000, 121698, -1000, -1000, -1000, -280, 2661,
	-1000, 73798, 57365, 121698, -1000, -1000, -1000, -1000, 121698, -1000,
	-1000, -1000, 73798, 82492, -1000, 100951, 81953, -1000, -1000, 1432,
	2484, -1000, -1000, -1000, 73798, 1270, 73798, 73798, 73798, -1000,
	100405, -1000, -1000, 2068, 1622, 3237, 2047, 89576, -1000, 1819,
	-1000, -1000, -1000, 3268, 110212, -1000, -1000, 2871, -1000, 66085,
	91732, -1000, 91193, -1000, 90654, -1000, 89576, -1000, 89576, -1000,
	3638, 3637, 3634, -1000, -1000, 3633, -1000, 3632, 3260, -1000,
	121698, 3239, -1000, 3630, 3349, 2865, 121698, -1000, 2942, 1644,
	1638, 110212, -1000, -1000, 110212, -1000, 110212, -1000, -1000, -1000,
	1548, -1000, -1000, 2425, -1000, -1000, -1000, -1000, 89576, 1424,
	-1000, -1000, -1000, -1000, -1000, -1000, 2928, 3629, 1740, -1000,
	1795, -1000, 2820, 3270, -1000, 1412, 1710, -1000, -1000, 228,
	-1000, -1000, -50, -1000, 113985, -1000, 2602, -1000, 110212, -1000,
	2422, 2850, 2863, 1690, 2219, 2549, -1000, 39787, 2512, 49063,
	2235, 160, -1000, -1000, 160, 160, 31084, -1000, -1000, 64998,
	64998, 23566, 1369, 45625, 45625, 45625, 45625, 45625, 45625, 45625,
	45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625,
	45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625,
	45625, 45625, 45625, 45625, 45625, 45625, 45625, 45625, 2060, 45625,
	1312, 45625, 45625, 45625, 45625, 1720, -1000, -1000, 1949, 499,
	2033, -1000, 3462, 3462, 3462, 486, 486, 13122, 13122, 448,
	3625, 767, -1000, 45625, -1000, 114, 45625, 24124, -1000, 418,
	11719, 2361, -1000, 417, 24709, -1000, -1000, -1000, 25855, 602,
	39202, 45625, 988, 121698, -1000, -1000, 1707, 3486, 21337, 2893,
	2704, 646, 802, 745, 28768, 28183, 27598, 27013, 597, 45625,
	45625, 45625, 45625, 45625, 45625, 45625, 45625, -1000, -1000, 3495,
	-1000, 3486, -1000, -1000, -1000, -1000, 3486, 1366, 1363, 3486,
	-1000, 3486, 3486, 8389, 8389, 38629, 38044, 37459, 49636, 36874,
	45625, 26428, 36289, 35704, -1000, 110212, -40, 3420, 45625, 184,
	-1000, 120309, -1000, 184, 184, 645, -84, 121698, 2560, 2560,
	53517, 2357, 2065, 2065, 2065, -1000, 821, 16852, 821, 99320,
	2061, 821, 821, 222, 237, 414, 51316, 2567, 99320, 753,
	644, -7, -8, -13, -1000, -1000, -16, -17, -1000, -1000,
	89576, 643, 24124, 23566, 215, 2016, -86, 2514, 2513, 2511,
	-1000, 2509, -1000, 1788, -89, 1300, 89576, 110212, 3624, -83,
	-1000, 5554, -94, -1000, 1279, 214, 3486, -1000, -1000, -1000,
	-1000, -1000, 3620, 3619, -1000, 990, 638, 637, 395, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 636, 635, 635,
	635, -1000, 289, 633, 271, 631, 629, 628, -1000, -1000,
	-1000, -1000, -1000, 2818, 89576, 110212, 3618, -181, 90115, -85,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 110212, -1000,
	-1000, -1000, 3615, -1000, 89576, -1000, -1000, 89576, 217, 3020,
	-1000, 89576, -1000, 89576, 213, 3013, -1000, -1000, 110212, -1000,
	89576, 89576, -1000, 110212, 110212, 110212, 73798, 73798, 227, -1000,
	89576, 855, -97, 1113, -50, -1000, -1000, -1000, 1325, -1000,
	1630, -1000, -1000, -1000, -1000, -1000, -1000, 1457, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 869, -1000, -1000, -1000,
	-1000, -1000, -1000, 3479, 3477, -41, -1000, -1000, 23566, -1000,
	-51, 1649, 1824, 1298, -1000, 76507, 2336, 3242, 3612, 2598,
	3221, 1605, -1000, 1547, -1000, 3332, 80322, 3374, 3411, 1365,
	-1000, 2815, -1000, -1000, 882, 1738, 1705, 1294, 1246, 80322,
	2291, -1000, 64998, -1000, 2592, 3319, 1346, 1349, 1346, 1346,
	1344, -1000, 80322, 1691, 1241, 1239, 1238, 1887, 1882, -1000,
	-1000, 1968, -1000, 1236, 1234, 804, 1869, -1000, -55, 3372,
	3405, 1319, -1000, 2809, 1228, -1000, -1000, -1000, 3317, 89576,
	23566, 1532, 1527, 1514, 1685, 1227, -42, -1000, 3369, 1226,
	1225, -1000, 5206, -1000, 73798, 1800, 2991, 2656, 806, 2652,
	-1000, -1000, -1000, 806, -44, 70452, 110212, 211, -1000, 114,
	45625, 45625, 114, 45625, 114, 3348, 2988, -1000, -1000, -1000,
	-1000, -1000, 3611, 1928, 2447, -1000, -1000, 627, 2316, 2804,
	110212, 2529, -46, 89576, -1000, 65546, 2984, 68801, 2291, 2314,
	-1000, -1000, 81407, -1000, 2983, 444, 2310, -1000, 701, 3608,
	2982, -1000, 113446, -1000, 3256, 1378, 2981, 1061, 984, 3417,
	-1000, 984, 62279, -1000, 110212, -1000, -27, 969, 75429, -99,
	-100, 411, -1000, 99866, 110212, 1060, 75968, 110212, 3190, 949,
	56253, -1000, 56253, -102, -280, 2645, 1504, 934, 934, 806,
	-1000, 806, -1000, 89576, 2862, -1000, -1000, 73798, 934, 934,
	934, -1000, -1000, -1000, -1000, 3606, 3601, 3593, 3586, -1000,
	-1000, 952, 89576, 110212, 89576, -1000, 210, -1000, 110212, -1000,
	110212, 110212, 89576, -1000, 952, 110212, 952, 110212, 952, 110212,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 114, 45625, -1000,
	-1000, 3583, 1642, -1000, 2861, -1000, 2851, -1000, 12, -1000,
	-1000, -1000, -1000, -1000, -1000, 2085, -1000, -1000, -1000, -1000,
	89576, 89576, 89576, 89576, 110212, 3177, -1000, 110212, 3173, 89576,
	-1000, -1000, 80322, -1000, 2422, 2850, -1000, -1000, -1000, -1000,
	-1000, -1000, 1411, 2120, -1000, 2476, -1000, 1570, -1000, -1000,
	-1000, 121698, 50192, -1000, -1000, 121698, 1852, -1000, 48490, 47917,
	-1000, -1000, 1727, 89576, 2537, -1000, 2537, -151, -1000, 120121,
	2475, 89576, -1000, -1000, -1000, -1000, -1000, 881, 544, 544,
	1361, 1361, 1361, 1361, 3341, 5243, 432, 525, 6532, 6532,
	6867, 6867, 6867, 6867, 6867, 6532, 4481, 486, 486, 4481,
	4481, 4481, 4481, 4481, 486, 486, 486, 6532, 6532, 6532,
	13122, 12410, 5500, 45625, 45625, 1224, 1935, 499, 5454, 45625,
	6162, 6162, 6162, 6162, -1000, 2011, -1000, -1000, -1000, -1000,
	2798, 625, 49636, 49636, -1000, -1000, -1000, -1000, 25282, 45625,
	-1000, -1000, -1000, -1000, 35119, -1000, -1000, 119443, -313, 410,
	-127, 21, -1000, 45625, 45625, 45625, 409, -1000, 208, 45625,
	110212, -1000, 15543, 752, -183, -1000, -107, 1393, -1000, 45625,
	-1000, -1000, 1222, -1000, 1215, 1214, 1213, -1000, 623, 408,
	-1000, 204, -1000, 2055, 622, 621, 45625, -1000, -1000, -1000,
	-1000, -1000, 119246, -1000, -1000, 119073, -1000, -1000, 118984, -1000,
	-1000, 118811, -1000, -1000, -1000, 121491, 14954, 14522, 14349, 11135,
	14087, 13030, -108, 405, -113, 404, 876, 875, 402, 401,
	400, -114, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -120, 399, -1000, 2795, -127, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 377, -1000, 374,
	-1000, 121191, -127, 373, 6627, -1000, 49636, 49636, 49636, -1000,
	366, -1000, 120033, -1000, 121065, 34546, 34546, 34546, 365, 120765,
	45625, -127, -122, -1000, -125, -1000, -1000, 503, -128, 982,
	33961, 52424, 23566, -1000, 982, 982, 45625, -1000, 45625, 2493,
	-1000, -1000, -1000, -1000, 2491, 2392, 2560, 53517, -1000, -1000,
	-1000, -1000, 99320, -1000, 3473, 2726, -1000, 99320, -1000, -1000,
	110212, 444, -1000, 99320, 99320, 23566, 821, -1000, 821, 99320,
	785, -1000, -1000, -1000, -1000, -1000, 361, 59021, 21, 202,
	23566, 953, -1000, -1000, 2579, 2579, 2579, 2579, -1000, -1000,
	110212, 1210, -48, -121, -1000, 3438, -1000, 1994, -1000, 64998,
	-1000, 764, 1021, 23566, -1000, -1000, -1000, 619, -1000, 3486,
	3486, -1000, 3486, 110212, 2793, 112, -1000, 110, 68801, 68801,
	3582, -1000, -1000, 217, -1000, 89576, 217, 217, -1000, 89576,
	89576, 2212, -1000, 226, -1000, 218, -1000, -1000, -65, -1000,
	977, 31657, -1000, 1325, -1000, -1000, 1528, -1000, 1948, -1000,
	1357, -1000, -1000, -1000, -1000, 31657, -1000, 3166, 110212, 110212,
	89576, -1000, 110212, -1000, 2089, 68801, -1000, 2308, 112907, 2295,
	64998, 110212, -1000, -1000, 616, 904, 2474, 2473, 1048, 110212,
	110212, 2470, 112368, 111829, -1000, 3581, 110212, 1971, 45625, 3315,
	2083, 2164, 114, 114, -1000, 114, 114, 114, -1000, 614,
	1328, 89576, 89576, 110212, 68801, 89576, 1786, -1000, -1000, -1000,
	-1000, -1000, 80861, -1000, -1000, 3492, 3491, -1000, 1346, -1000,
	-1000, -1000, 1346, 2291, 1768, 110212, 68801, 89576, 68801, 110212,
	110212, -1000, 1678, 110212, 1438, -1000, 804, 2006, 114, 114,
	-1000, 114, 114, 114, 610, 23566, 1894, -1000, 2886, 110212,
	3525, 111290, 3523, 110212, 110212, 110212, 68801, 3232, 110212, 110212,
	68801, 5206, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 69913, 1063, 953, 1672, 1200, 1199, 80322,
	56253, 946, 56253, 2617, -1000, -1000, 20780, -1000, 121698, 121698,
	-1000, 121698, -1000, 65546, 110212, -1000, 1000, 110212, 75968, 909,
	2980, 61201, -181, 934, 73798, 89576, -46, 2529, 110212, -1000,
	-1000, 2291, 2978, 444, 2302, -1000, 73798, 3416, 2973, 609,
	3580, 3578, -1000, 89576, 2190, 2297, -1000, -1000, 110751, 3111,
	804, 110212, 982, 53517, 1901, -1000, 59567, 1025, 110212, 1815,
	100, -1000, -1000, -1000, 2, 110212, -1000, 778, -1000, -1000,
	969, 969, 934, -182, 605, -1000, 837, 831, 56809, 73798,
	-130, -1000, -1000, -1000, -1000, 2295, 89576, 110212, 1248, 2605,
	110212, -131, -1000, 201, 603, -1000, 2459, -1000, -280, -1000,
	949, 56253, 2782, 2781, -1000, -1000, 975, -1000, 1407, 934,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -35, 110212, -181, -181, -47, -48, -1000, 952, -1000,
	952, -1000, 952, -1000, 121698, -1000, -1000, 1629, 1611, 110212,
	-1000, 23566, 110212, 89576, 23566, 89576, 2849, 2848, -1000, -1000,
	-1000, 110212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1080,
	-1000, 1852, 2114, -1000, 602, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2409, -1000, -49, 31084, 844, -1000,
	-1000, 89576, -36, 45625, 45625, 4779, 4713, 45625, 49636, 49636,
	-1000, 45625, 596, -1000, -1000, -1000, -1000, -1000, 2780, 600,
	45625, 64998, 6116, 5416, -1000, 359, 12188, 4481, -1000, 45625,
	-1000, 356, 33388, -1000, 120397, -63, -137, -1000, 17422, -127,
	-138, -1000, -1000, 761, -1000, 3102, -1000, 45625, 120489, 2337,
	1879, 1823, 1663, 3486, 3520, 20223, -1000, 62823, 983, 2078,
	118614, -1000, -1000, -1000, -1000, 64998, 64998, 45625, 45625, -1000,
	45625, 45625, 45625, -1000, -1000, -1000, 3486, 877, -1000, -1000,
	-1000, 877, -1000, -1000, 1346, -1000, 1346, -1000, 45625, -1000,
	-1000, 2779, 45625, -1000, 64998, 64998, 49636, 49636, 49636, 49636,
	49636, 49636, 49636, 49636, 49636, 49636, 49636, 49636, 49636, 49636,
	49636, 49636, 49636, 49636, 49636, 2420, 49636, 3460, 3460, 3460,
	-1000, 2773, 2779, 45625, 45625, 64998, 353, 352, 351, -1000,
	45625, -127, -1000, -1000, 969, 599, -1000, 2398, -1000, 2698,
	-1000, 45625, -1000, -275, -1000, 2567, -1000, -1000, 2698, 2698,
	-139, 121698, 53517, 53517, -1000, 594, 45625, 2488, -1000, -1000,
	749, -315, -1000, 829, -1000, -1000, -1000, -1000, -1000, 444,
	-1000, -1000, -1000, 200, 99320, 99320, 748, -1000, -144, -1000,
	-1000, -149, -1000, 3415, 348, 23566, -1000, 982, 2679, -1000,
	-1000, -1000, -1000, -1000, -1000, -181, 110212, 110212, 2107, 3518,
	-1000, 3487, 759, 740, 199, 3486, 347, 346, 345, -181,
	110212, 110212, 110212, -1000, -1000, -1000, -1000, 217, -1000, -1000,
	-1000, 213, -1000, -1000, -1000, -1000, 2556, -1000, -50, -1000,
	-1000, -1000, 45625, -1000, -1000, 3235, 1196, 1195, -1000, -1000,
	-1000, -1000, 2803, -1000, 2972, -1000, 2287, -1000, 1038, -1000,
	1658, -1000, 45625, 580, 2601, 579, 578, 3577, 2103, 3576,
	1052, 2967, 2212, 2962, 2212, -1000, -1000, -1000, 900, -1000,
	121698, 2083, -1000, 577, 576, -1000, -51, 1626, 1808, 1192,
	973, -1000, -1000, -1000, -1000, 45625, 45625, 98781, -1000, 445,
	3233, -37, -1000, -1000, -1000, 1670, 1191, 1190, -1000, -1000,
	-1000, -1000, 2291, 1668, 1189, 1188, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 972, -1000, 2909, 2908, 860, 110212, -1000,
	967, -1000, -1000, -1000, -1000, 45625, -1000, -55, 1187, 3354,
	2281, 89576, -1000, 2212, 2960, 1186, -1000, 1185, -1000, -1000,
	-1000, 3366, 3364, 1168, -1000, -1000, -1000, -1000, -1000, 69357,
	-1000, 110212, 68801, 89576, 1712, 806, -1000, 2682, 806, 946,
	2776, -1000, 2520, 965, 89576, 3574, 343, -152, -56, 64998,
	3412, -1000, 2176, 607, 89576, 848, -1000, 3473, -1000, -1000,
	-1000, 954, -1000, 3353, 89576, 3410, 2959, 953, 114, 89576,
	3500, -1000, -1000, 3406, 89576, 2956, 2182, 2275, 2434, 804,
	74890, 953, 2073, -64, -1000, 1815, 32803, 3230, -155, -1000,
	-1000, -1000, 982, 62279, 53517, 45625, 3573, -157, -1000, -1000,
	-1000, -1000, -1000, 96618, 96618, 73798, 73798, 73798, 934, 110212,
	110212, 75968, -1000, -1000, 575, 110212, 110212, 574, -1000, 110212,
	110212, 3570, 73798, -57, 573, -1000, 828, 825, 824, -1000,
	-1000, -1000, -1000, -1000, 949, -1000, -280, 56253, 114, -1000,
	2105, 89576, -1000, 19666, -1000, -1000, -1000, -1000, -1000, -1000,
	952, -1000, -1000, 2012, 2232, 2012, 1803, 1799, -1000, -1000,
	2092, -1000, -1000, -1000, -1000, 2550, 3247, 23566, 3345, 6162,
	45625, 45625, 468, 4834, 398, 6162, 45625, 45625, 64998, 16139,
	-160, 45625, 45625, -1000, 45625, 738, 121698, 3515, 45625, 342,
	339, -1000, -1000, -1000, 3475, -1000, -1000, -1000, 121698, 45625,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 336, -1000, 198,
	-1000, -1000, -1000, 116141, -1000, 45625, 326, 3312, -1000, 312,
	311, 340, 8790, 118390, 118183, 118012, 307, -1000, -1000, 305,
	303, 121698, 2773, 121698, -1000, -1000, 1135, 1135, 1327, 1327,
	1327, 1327, 3460, 1058, 1096, 937, 1987, 1987, 1987, 681,
	872, 872, 1987, 1987, 1987, 2775, 2436, 567, 561, -1000,
	-1000, 121698, 121698, 302, -1000, -1000, -1000, -127, 295, 969,
	-1000, 2683, 3302, 121698, -1000, 53517, 2683, 2683, -1000, -1000,
	2392, 110212, 121698, 53517, -1000, 2726, -1000, 17990, -1000, 23566,
	-1000, -1000, -1000, -1000, 3473, -1000, 59021, -1000, 559, -1000,
	111, -1000, 2679, -1000, 823, -1000, -1000, 73798, 73798, -181,
	-212, -1000, -1000, 598, 3566, 755, 23566, 287, -1000, -1000,
	-1000, -181, -181, -181, -1000, -1000, -1000, 3187, 121698, 110212,
	110212, 1523, 98242, 110212, 2955, -1000, 2101, -1000, 1048, 117748,
	54061, -1000, 54061, 110212, -1000, -1000, -1000, 1886, 1479, 3565,
	1097, -1000, 3272, 110212, -1000, 110212, -1000, -1000, -1000, 110212,
	110212, 89576, 110212, -1000, 68801, 2919, -162, 121698, -58, -1000,
	822, -1000, 1358, -1000, 19109, 110212, 68801, 89576, 110212, 68801,
	89576, 2038, -1000, -1000, 2907, -1000, 2917, -165, 23566, -1000,
	3510, 3506, 2950, 3278, -1000, 110212, 3505, 110212, 89576, 3186,
	-1000, -1000, -1000, -1000, -1000, 1654, 1184, 1158, 946, -59,
	536, -1000, 814, -1000, -1000, 813, -1000, 946, -1000, 73798,
	56253, 3564, 444, -1000, 2552, -1000, 94434, 2189, 114, -1000,
	3563, 97164, 532, -1000, 2091, -1000, 562, -1000, 2305, 68801,
	2291, 114, 89576, -1000, -1000, 444, 285, -60, -1000, 3100,
	1043, 23566, 89576, 2949, 2450, 804, 74890, -1000, 1378, 2549,
	-1000, -61, -1000, 450, 114, 2073, -1000, -64, 121698, -1000,
	812, -1000, -168, -1000, -1000, 284, -1000, 3185, 3183, -1000,
	2706, 54061, 531, 530, 110212, 3182, -1000, -1000, -170, 2495,
	2495, 73798, 56253, 73798, -1000, 949, 806, -1000, 2313, -1000,
	-1000, -1000, -1000, -1000, 23566, 1719, -1000, 529, 512, -1000,
	-1000, -1000, -1000, 3247, 6162, 6162, 45625, 45625, 45625, 6162,
	16139, -184, -1000, 6162, 6162, -127, -1000, -1000, 120397, -1000,
	-1000, -1000, 121698, -1000, 18552, 2018, -1000, 117567, -1000, 31084,
	-1000, -1000, 45625, 45625, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 49636, 2757, 511, 64998, -1000, -1000, 283, 948,
	45625, 47344, 2567, 948, 948, -1000, -190, -1000, -1000, -1000,
	3473, 111, -1000, -1000, 3562, 23566, -1000, 73798, -1000, -1000,
	3560, 736, -1000, 3559, -1000, -1000, -1000, -1000, -1000, 2641,
	3403, -1000, 1860, -1000, 110212, -1000, 110212, -1000, 23566, 110212,
	2724, 1323, -1000, 904, 2469, 510, 49636, 89576, 862, -1000,
	3413, 2685, -191, -1000, 110212, 45625, 110212, -192, -193, 2258,
	-1000, -1000, 1280, 45625, -1000, -1000, -1000, 64998, 509, 2212,
	2212, -198, -200, -1000, -1000, -1000, 45625, 1157, 110212, 32230,
	-1000, 3555, 3233, -1000, -1000, -1000, -1000, -1000, -1000, 110212,
	-1000, 45625, 1153, -1000, -1000, -1000, 3504, 2212, 23566, 2212,
	-1000, 2212, 3278, 1095, 110212, 68801, 89576, -1000, 2201, 2201,
	73798, 56253, -1000, -65, 946, -1000, 3402, 2595, 3554, -1000,
	-1000, -1000, -1000, 2466, -1000, -1000, 110212, 2465, 941, -1000,
	-201, -1000, 811, 810, 75968, 909, 921, -1000, -66, 507,
	-1000, 809, -1000, -1000, -1000, -1000, 444, 3387, -1000, 3501,
	505, 502, 110212, 2177, 501, 23566, 3226, 804, 74890, -1000,
	3111, 1815, -1000, 2266, 110212, 3219, -1000, 2549, 499, -1000,
	934, 496, 494, 3595, 3595, -206, 54061, 54061, -207, 492,
	934, -1000, -209, -1000, -1000, -1000, -1000, -1000, -67, -1000,
	858, 834, -1000, -1000, 89576, 89576, 45625, 45625, -1000, 6162,
	6162, 6162, -1000, 275, -1000, -1000, 2073, 3301, -1000, -72,
	117378, 117290, 6851, 49636, 64998, -214, -1000, -1000, 110212, 121698,
	-82, -1000, 121698, 490, 488, 350, -1000, -1000, -1000, 526,
	-1000, -1000, -1000, 3552, -1000, 97703, 110212, -1000, -1000, 1610,
	-1000, -1000, -1000, 110212, 2272, -1000, -1000, -1000, 1046, 45625,
	561, 484, 45625, -1000, 3385, -1000, 2563, 2769, 1867, 54061,
	-1000, 3247, -1000, 117101, -1000, 1042, 1908, -1000, -1000, -1000,
	121698, 3278, 54061, -1000, -1000, 483, 476, 121698, 467, 807,
	2752, -1000, -1000, -1000, -1000, 121698, 466, 3354, -1000, -1000,
	-1000, -1000, 2212, 89576, -1000, -1000, -1000, -1000, -217, -1000,
	-1000, 1896, 114, 2010, 2635, -1000, 2189, 465, -1000, -1000,
	2125, 2499, -1000, 97164, 31657, 31657, 274, 3384, 921, -1000,
	3470, -1000, 3157, 3157, 45625, 3380, 114, -1000, 3500, 54061,
	-1000, 89576, 54061, 2172, 1968, 2421, 74890, -1000, 2434, -1000,
	-1000, -222, 110212, 1815, -1000, -1000, 73798, 73798, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1042,
	-223, -224, -1000, 73798, -1000, -1000, 2313, -1000, 110212, -1000,
	110212, -1000, -1000, -225, -236, -1000, 2155, 45625, 31084, -1000,
	-1000, 6851, -239, -1000, -95, -1000, 3378, 47344, 3549, 3544,
	3538, -1000, -1000, -1000, 1856, -1000, -1000, -1000, 2947, 2691,
	116718, 2402, 110212, 116690, -1000, 2758, -1000, -1000, 2595, 455,
	-1000, -1000, -1000, -1000, 844, 110212, 2595, 2678, 89576, 1045,
	-241, 2012, 2012, 45625, 30511, 2035, 45625, -1000, -1000, 3278,
	-1000, 2728, 3465, -1000, 909, -1000, 2029, 110212, -1000, 3265,
	-1000, 3180, -1000, -1000, -1000, 2552, 114, -1000, -1000, -1000,
	-242, 121698, 114, -1000, 273, -247, 1043, -249, 89576, 1881,
	-1000, 804, -1000, 2450, 982, -1000, -1000, -250, -252, 1867,
	1042, 2006, -255, -1000, -257, -258, -1000, -1000, 268, 46771,
	46771, 46771, -127, -151, -1000, 110212, 451, -1000, -1000, -1000,
	-1000, -1000, 2902, 945, -1000, 2135, 1880, 255, 1059, -1000,
	-1000, 2006, 110212, -1000, -1000, -1000, 944, 444, -1000, 45625,
	1042, -260, -1000, 1024, -263, -1000, 1018, -265, -1000, 2748,
	-1000, -266, 2212, 943, 3347, -1000, -1000, -1000, 2125, 89576,
	-268, -1000, -1000, 2233, -1000, 2595, 941, -1000, -1000, -1000,
	1042, 441, 1867, 440, 1463, 804, -1000, -1000, 1346, 3226,
	3125, 934, 934, 2595, 1867, 932, -1000, 934, -1000, -1000,
	-1000, 3026, -1000, 50748, 2174, 1792, 119667, 3026, 3026, -1000,
	-1000, 110212, 3333, -1000, 2166, 2137, 1478, -1000, -1000, -1000,
	-1000, -1000, -1000, 2685, -273, 3331, 2402, 121698, 2595, -1000,
	2012, 2625, -1000, 2012, 2747, -1000, 2022, -1000, -1000, -1000,
	1692, 3459, 2413, 439, -1000, 110212, 1769, 1765, 3537, 2010,
	2125, 1867, 54061, 2595, 54061, -1000, -1000, 110212, -1000, 1968,
	1287, -1000, -1000, 2006, 2595, 982, 438, -1000, -1000, 1732,
	3428, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 799,
	-1000, 3139, -1000, 1068, 2102, 2102, 982, -1000, 797, 2135,
	-1000, -1000, 437, -1000, 436, -1000, 2090, -1000, -1000, -1000,
	-1000, 110212, -1000, -1000, 3535, -1000, 909, -1000, 2595, -274,
	2006, -279, -1000, -181, 1881, -1000, 1593, 932, 2006, -1000,
	1747, -1000, -1000, 2069, 46198, 45625, -1000, 3444, -1000, -1000,
	2443, -1000, -1000, 45625, 2685, 45625, 45625, 60657, -281, -1000,
	2125, 2006, 1042, 932, 1867, 1463, 62279, 982, 932, -1000,
	-1000, -1000, 121698, -1000, -1000, -1000, 121698, -1000, -282, -284,
	-182, 96618, 2185, 2413, 932, 1867, 982, 2595, -1000, -271,
	-1000, 982, 2006, 1144, -290, -1000, -1000, -1000, -1000, 982,
	2595, -1000, 2006, -1000, -1000, -1000, -1000, 434, -1000, -1000,
	2006, 932, 45625, 932, 982, -292, 982, -1000, 2006, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4406, 4405, 4404, 4402, 4399, 4398, 4397, 4390, 4389,
	4388, 4383, 4382, 4380, 4377, 4376, 4374, 4373, 4372, 4371,
	4370, 4369, 4366, 4364, 4363, 4362, 4360, 4356, 4349, 4348,
	4346, 4343, 4341, 4340, 4339, 4337, 4333, 4328, 4327, 4305,
	4302, 4300, 4299, 4297, 4296, 4293, 4291, 4290, 4287, 4285,
	4284, 4283, 4282, 4279, 4276, 4266, 4265, 4262, 4261, 4258,
	4253, 4243, 4241, 53, 4239, 4237, 4236, 4235, 4233, 4231,
	4230, 4229, 4228, 4227, 4226, 4225, 4224, 4222, 4218, 4217,
	4216, 4215, 4214, 4210, 62, 4209, 264, 4207, 4206, 4205,
	4202, 4199, 4198, 4196, 4194, 4193, 4192, 4191, 4189, 261,
	4188, 149, 4186, 4185, 4184, 4182, 4181, 260, 4179, 4174,
	4173, 4171, 275, 4168, 4167, 4164, 4159, 4158, 4155, 4150,
	4147, 4142, 4138, 4135, 121, 207, 4134, 4131, 262, 4126,
	4119, 4118, 4117, 4116, 4115, 4114, 4112, 4111, 4110, 236,
	4109, 259, 4105, 4103, 4101, 4098, 4096, 4095, 4094, 4093,
	4090, 4088, 4087, 4085, 4084, 4083, 4082, 4079, 4078, 4077,
	4075, 4072, 4071, 4070, 4069, 4068, 4066, 4063, 4062, 4060,
	4059, 4056, 4055, 4052, 4051, 4049, 4048, 4047, 4044, 229,
	269, 184, 4043, 4040, 257, 256, 4038, 4037, 4031, 4030,
	4025, 126, 7, 42, 4023, 4021, 88, 90, 85, 107,
	100, 94, 4020, 104, 4019, 135, 66, 4018, 10, 2,
	215, 242, 5274, 235, 4017, 4016, 4015, 239, 180, 4014,
	227, 4013, 4012, 4011, 4009, 4008, 72, 51, 171, 160,
	165, 155, 720, 4005, 138, 105, 78, 55, 40, 18,
	76, 202, 21, 4004, 249, 8, 133, 1, 37, 4003,
	4001, 4000, 3999, 3543, 132, 3997, 254, 234, 156, 3996,
	3995, 3993, 634, 3989, 3987, 48, 3985, 175, 86, 118,
	27, 116, 3983, 141, 34, 3979, 178, 79, 3976, 159,
	96, 84, 11618, 6950, 3975, 110, 74, 120, 3275, 183,
	162, 194, 95, 157, 151, 190, 206, 201, 167, 54,
	3974, 248, 3972, 3391, 122, 177, 3970, 3968, 3966, 81,
	192, 108, 3965, 3964, 65, 11, 14, 4, 6, 125,
	22, 20, 16, 3963, 26, 111, 46, 30, 3962, 24,
	3961, 3958, 3954, 3953, 3952, 43, 169, 3951, 270, 3950,
	83, 50, 44, 3949, 102, 210, 3947, 220, 140, 3945,
	3944, 246, 196, 174, 3943, 73, 219, 3942, 3941, 3940,
	3939, 3938, 130, 3, 128, 3937, 3936, 142, 3935, 49,
	231, 191, 3930, 56, 3928, 3927, 166, 109, 139, 268,
	186, 217, 113, 216, 181, 225, 3924, 3922, 3917, 203,
	3916, 3909, 211, 176, 3904, 3902, 244, 273, 91, 45,
	77, 226, 80, 189, 150, 3901, 195, 3899, 3894, 272,
	172, 205, 13, 17, 99, 119, 3893, 5, 222, 154,
	224, 117, 3892, 6491, 2175, 68, 3891, 3890, 134, 115,
	67, 127, 145, 251, 106, 3886, 3885, 2795, 3884, 3882,
	3877, 3874, 185, 3872, 3871, 3870, 148, 144, 173, 3869,
	92, 59, 47, 28, 112, 271, 255, 114, 214, 164,
	241, 3866, 3865, 3860, 182, 3857, 87, 123, 153, 193,
	238, 61, 3856, 143, 3855, 137, 223, 63, 152, 3854,
	209, 3853, 3851, 3850, 3849, 3848, 3846, 3842, 213, 221,
	3840, 3839, 3835, 35, 187, 3831, 250, 163, 197, 98,
	70, 3830, 97, 2633, 3829, 124, 1088, 71, 252, 168,
	253, 3826, 3367, 57, 3823, 0, 12533, 7145, 9988, 12592,
	3821, 4881, 3820, 3819, 3818, 204, 136, 3817, 3815, 3814,
	103, 3813, 82, 3812, 3811, 64, 3809, 25, 12, 19,
	33, 31, 313, 69, 3808, 3806, 29, 129, 146, 3804,
	267, 218, 3802, 3801, 3800, 3799, 93, 3798, 39, 3797,
	36, 3796, 3792, 38, 15, 41, 3785, 3783, 199, 3770,
	212, 245, 3761, 158, 3760, 3387, 131, 3756, 3755, 3752,
	60, 58, 247, 89, 3749, 278, 3748, 3338, 3746, 3743,
	23, 3741, 3739, 230, 200, 170, 208, 3738, 3737, 161,
	3734, 3733, 3732, 266, 3731, 3730, 3729, 32, 3726, 9,
	3725, 3724, 198, 3095, 3720, 3719, 52, 3717, 179,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 582, 582, 594, 594, 22, 22, 42, 42,
	23, 43, 16, 583, 583, 583, 583, 35, 24, 44,
	28, 28, 28, 28, 28, 194, 194, 194, 194, 21,
	21, 38, 38, 229, 229, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 578, 578, 231, 231, 230, 224, 224, 225, 225,
	584, 584, 232, 232, 232, 234, 234, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 477, 477, 477,
	510, 510, 509, 509, 509, 508, 508, 598, 598, 599,
	599, 599, 599, 599, 127, 127, 375, 375, 375, 52,
	52, 52, 52, 52, 573, 573, 196, 196, 196, 198,
	198, 197, 197, 197, 197, 197, 75, 75, 589, 589,
	590, 590, 588, 591, 591, 591, 195, 195, 195, 123,
	123, 123, 123, 123, 123, 124, 124, 125, 125, 199,
	199, 199, 201, 201, 200, 200, 200, 200, 200, 200,
	200, 200, 205, 15, 15, 15, 15, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 103, 103, 512, 512,
	513, 513, 190, 190, 191, 191, 191, 191, 192, 192,
	193, 193, 193, 66, 66, 202, 202, 204, 204, 203,
	203, 203, 203, 203, 54, 54, 54, 54, 54, 54,
	54, 55, 55, 55, 55, 55, 56, 56, 56, 56,
	56, 56, 57, 57, 57, 57, 57, 57, 64, 64,
	64, 64, 64, 181, 181, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 72, 72,
	72, 72, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 601, 601, 602, 602, 603, 603, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 81, 81, 337, 337, 302, 302, 82,
	82, 82, 83, 83, 84, 84, 68, 68, 571, 571,
	352, 352, 468, 468, 69, 579, 579, 579, 581, 581,
	580, 580, 86, 86, 374, 374, 87, 87, 87, 87,
	87, 87, 88, 88, 88, 88, 88, 88, 88, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 96, 96, 96, 96, 96, 97, 97,
	97, 94, 94, 94, 91, 91, 91, 90, 90, 90,
	95, 95, 95, 570, 291, 291, 93, 93, 93, 92,
	92, 92, 353, 353, 98, 98, 98, 98, 303, 99,
	99, 99, 99, 99, 99, 99, 99, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	470, 470, 100, 100, 100, 435, 435, 104, 104, 104,
	390, 390, 105, 105, 105, 105, 105, 106, 106, 106,
	106, 106, 106, 106, 106, 126, 126, 126, 126, 126,
	126, 126, 575, 575, 345, 345, 256, 256, 256, 256,
	116, 116, 116, 116, 117, 117, 117, 118, 118, 186,
	186, 133, 133, 133, 133, 133, 132, 132, 132, 132,
	132, 132, 58, 58, 58, 59, 59, 60, 60, 61,
	61, 62, 62, 63, 63, 63, 63, 63, 135, 135,
	595, 595, 137, 134, 134, 134, 136, 136, 136, 136,
	138, 139, 139, 139, 139, 139, 139, 139, 139, 140,
	140, 502, 502, 361, 361, 500, 500, 522, 522, 501,
	501, 307, 307, 307, 307, 307, 308, 308, 308, 511,
	511, 511, 511, 511, 511, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 187, 187, 188, 189, 189, 189,
	189, 189, 164, 164, 164, 180, 180, 180, 180, 180,
	180, 180, 167, 167, 167, 151, 151, 142, 142, 142,
	142, 142, 142, 142, 146, 146, 146, 146, 146, 146,
	146, 146, 143, 143, 153, 153, 153, 153, 153, 147,
	147, 148, 148, 148, 148, 174, 174, 150, 150, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 144, 144,
	144, 144, 155, 155, 155, 155, 397, 397, 397, 179,
	179, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 177, 177, 177, 177, 177, 177, 592, 592,
	593, 593, 171, 171, 171, 171, 171, 171, 449, 449,
	165, 165, 165, 165, 170, 170, 170, 170, 173, 173,
	173, 173, 380, 380, 162, 162, 162, 163, 163, 163,
	168, 168, 169, 166, 166, 172, 172, 172, 172, 145,
	145, 145, 145, 605, 605, 605, 175, 175, 161, 161,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 606, 606, 157, 157, 157, 156, 156, 156, 156,
	159, 159, 160, 160, 160, 160, 160, 160, 158, 149,
	178, 572, 572, 568, 568, 568, 568, 568, 568, 568,
	568, 569, 569, 569, 569, 574, 574, 109, 109, 109,
	109, 109, 119, 119, 119, 119, 119, 110, 110, 110,
	110, 110, 112, 112, 111, 111, 111, 111, 76, 76,
	76, 76, 76, 14, 14, 14, 77, 77, 247, 247,
	208, 208, 208, 326, 326, 209, 209, 315, 315, 315,
	315, 206, 206, 207, 207, 78, 78, 607, 607, 607,
	585, 585, 585, 586, 586, 586, 586, 586, 586, 309,
	309, 310, 310, 415, 415, 415, 415, 415, 313, 313,
	313, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	316, 316, 233, 233, 233, 324, 325, 325, 317, 317,
	323, 322, 322, 321, 321, 320, 320, 318, 319, 319,
	319, 328, 328, 327, 330, 330, 329, 414, 531, 531,
	533, 533, 533, 533, 533, 533, 533, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 398,
	398, 608, 608, 529, 529, 529, 530, 525, 525, 526,
	526, 526, 526, 526, 311, 311, 312, 312, 312, 312,
	527, 528, 343, 343, 453, 532, 532, 534, 534, 536,
	609, 609, 609, 609, 609, 609, 610, 610, 610, 413,
	413, 412, 412, 335, 335, 537, 537, 537, 537, 538,
	538, 538, 538, 538, 541, 540, 539, 539, 539, 539,
	539, 80, 80, 80, 377, 377, 376, 376, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 183, 183, 259, 259, 74, 74, 74,
	12, 12, 12, 587, 587, 587, 79, 79, 79, 79,
	79, 79, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 577, 577, 576, 576, 260, 260, 612, 612,
	85, 85, 85, 85, 85, 85, 85, 85, 471, 471,
	472, 472, 73, 73, 73, 73, 73, 399, 399, 396,
	396, 395, 395, 342, 342, 451, 451, 451, 452, 264,
	264, 265, 265, 226, 226, 226, 30, 29, 20, 20,
	25, 25, 26, 26, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 27, 27, 46, 46, 46, 46, 47,
	47, 47, 47, 50, 50, 51, 51, 45, 45, 45,
	45, 48, 48, 41, 41, 596, 596, 597, 597, 115,
	115, 120, 120, 120, 120, 120, 121, 121, 121, 121,
	122, 122, 122, 122, 131, 131, 182, 182, 182, 182,
	182, 182, 182, 53, 53, 53, 53, 65, 65, 65,
	65, 129, 614, 614, 614, 130, 130, 130, 613, 613,
	257, 257, 409, 409, 410, 410, 615, 615, 411, 411,
	411, 411, 411, 250, 249, 251, 251, 252, 252, 71,
	71, 71, 242, 242, 241, 239, 239, 514, 514, 244,
	244, 244, 245, 245, 235, 235, 236, 236, 237, 237,
	238, 238, 248, 248, 616, 616, 107, 107, 107, 185,
	185, 301, 301, 301, 406, 406, 406, 336, 336, 271,
	271, 408, 408, 408, 408, 373, 373, 373, 184, 184,
	350, 350, 363, 363, 364, 364, 465, 465, 365, 113,
	113, 114, 114, 128, 128, 212, 212, 210, 210, 210,
	210, 210, 210, 210, 210, 217, 217, 218, 218, 219,
	219, 220, 221, 221, 221, 221, 354, 354, 222, 222,
	222, 211, 211, 211, 213, 213, 213, 213, 213, 213,
	213, 216, 216, 216, 216, 223, 223, 223, 215, 215,
	548, 548, 548, 550, 550, 552, 552, 551, 551, 547,
	547, 549, 549, 611, 611, 379, 379, 379, 333, 334,
	331, 331, 332, 332, 340, 340, 338, 339, 339, 341,
	341, 450, 450, 450, 227, 227, 227, 370, 370, 370,
	370, 371, 371, 402, 402, 400, 400, 400, 400, 401,
	401, 403, 403, 403, 404, 404, 405, 405, 367, 367,
	368, 368, 369, 369, 369, 369, 431, 431, 214, 214,
	214, 347, 347, 347, 348, 348, 421, 421, 421, 421,
	421, 421, 422, 422, 420, 420, 420, 420, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 455, 456, 456,
	349, 349, 457, 407, 407, 566, 566, 566, 567, 567,
	448, 448, 458, 458, 458, 458, 458, 458, 446, 446,
	447, 447, 466, 467, 467, 383, 383, 383, 383, 381,
	381, 384, 384, 384, 384, 384, 382, 382, 459, 459,
	459, 459, 372, 372, 460, 460, 460, 460, 461, 462,
	462, 463, 463, 416, 417, 417, 473, 473, 473, 473,
	475, 346, 346, 346, 346, 346, 524, 523, 523, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	490, 490, 490, 490, 490, 490, 490, 476, 476, 476,
	476, 476, 480, 480, 480, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 481, 481, 486, 486,
	487, 487, 487, 482, 483, 488, 488, 488, 488, 617,
	617, 492, 492, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 478, 478, 478, 485, 485, 485, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 391, 391, 393, 393, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 425, 425, 425, 425, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 542, 542, 542, 542, 542, 542, 542, 542, 427,
	427, 545, 545, 546, 546, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 553, 553, 554, 554, 556, 556,
	557, 557, 558, 559, 559, 559, 560, 561, 561, 555,
	555, 562, 562, 562, 562, 563, 563, 564, 564, 564,
	564, 564, 565, 565, 565, 565, 565, 437, 437, 438,
	438, 444, 444, 444, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	261, 261, 261, 261, 261, 359, 359, 357, 357, 357,
	360, 360, 358, 358, 356, 356, 355, 355, 434, 434,
	432, 432, 436, 436, 385, 385, 491, 491, 491, 491,
	491, 491, 491, 491, 386, 386, 386, 394, 387, 387,
	388, 388, 388, 388, 388, 428, 429, 389, 389, 389,
	430, 430, 439, 443, 443, 442, 441, 441, 440, 440,
	418, 418, 419, 419, 366, 366, 618, 618, 362, 362,
	464, 464, 464, 464, 305, 305, 351, 351, 304, 304,
	296, 296, 297, 297, 297, 297, 344, 344, 445, 445,
	493, 493, 494, 494, 495, 495, 496, 496, 497, 498,
	499, 433, 433, 281, 280, 268, 269, 279, 278, 277,
	267, 270, 274, 275, 276, 272, 273, 287, 286, 285,
	240, 243, 292, 293, 293, 295, 295, 294, 294, 283,
	284, 469, 266, 298, 298, 299, 299, 299, 300, 300,
	300, 300, 262, 262, 263, 263, 288, 288, 289, 290,
	290, 282, 282, 282, 253, 253, 253, 254, 254, 255,
	255, 507, 507, 504, 504, 504, 505, 505, 505, 506,
	506, 506, 506, 503, 503, 503, 503, 503, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 516, 516,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 518, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	521, 521,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 9, 5, 2, 6, 4, 7, 7, 7,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 4, 3, 3, 5, 3, 4, 3,
	5, 3, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 12,
	15, 3, 1, 0, 4, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 587, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-182, -187, -188, -189, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -183, -184, -185, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-136, -137, 452, -53, -65, -130, -129, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -600, 102, -549, -89,
	-92, -122, -604, 161, 219, -110, -111, 364, -117, -118,
	417, -120, -121, 419, 162, -60, -59, 156, -210, -212,
	-134, -135, -186, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 457, -169,
	-178, 517, 49, 471, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -548, -90, -91, -94, -96,
	-97, -93, -95, 416, -213, -211, 584, 532, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 553, 562, -216, -214, -215, -223,
	444, 540, 491, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, -303, 2, -283, -288, -289,
	-290, -282, -253, -518, -521, 4, -515, -519, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 499, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 473, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 467, 469, 470, 471, 490, 472, 474, 478, 479,
	480, 481, 475, 476, 489, 483, 484, 486, 487, 492,
	493, 494, 495, 496, 497, 498, 500, 502, 510, 511,
	512, 514, 517, 518, 519, 520, 508, 522, 523, 526,
	527, 528, 531, 529, 530, 532, 534, 537, 538, 539,
	545, 544, 546, 549, 554, 555, 557, 558, 559, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 190, 191, 203, 205, 213,
	214, 215, 237, 238, 240, 245, 267, 333, 335, 351,
	355, 370, 374, 378, 380, 394, 429, 465, 477, 482,
	503, 504, 505, 506, 513, 515, 540, 541, 542, 547,
	556, -303, 2, -283, 342, -276, 2, -253, -253, 381,
	28, 2, 28, 369, 446, 494, 496, 2, -575, -345,
	2, 28, -256, -253, 102, 201, 444, -276, 2, -575,
	-345, 25, 2, -253, 2, 356, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -603, 358, 388, 432, 448,
	489, 500, 514, 2, 544, 288, 445, 491, 229, 120,
	519, 439, -587, 437, 438, 356, 386, 425, 204, 533,
	-257, 2, 434, -253, 288, 2, 587, 94, 278, 74,
	429, 449, -139, 511, -138, 503, 439, -140, -502, 2,
	310, -253, 587, 587, 587, 28, -266, -253, 491, 229,
	439, 120, 487, 587, 2, 491, 361, 544, 445, 120,
	391, 229, 519, 188, 140, 27, 126, 439, -587, 288,
	-573, 2, -568, 4, -519, -515, -297, -296, 491, 497,
	120, -290, -282, 577, -289, 587, 587, 587, 2, 248,
	249, 390, 389, 449, 450, 587, 587, 587, 587, 437,
	2, 163, 22, 27, 66, 93, 98, 126, 185, 188,
	347, -601, 358, 388, 448, 489, 493, 500, 514, -586,
	472, 68, 414, 439, -585, -587, 288, 519, 140, -395,
	120, 278, 199, 527, 496, 494, 525, 132, 236, 530,
	529, 587, 587, -101, 2, 584, 32, 31, 142, 452,
	-205, 491, 241, 2, -253, 587, 587, 2, 248, 249,
	437, 438, 587, 587, 186, -568, 2, 587, 587, 2,
	248, 249, 437, 438, 241, 2, 68, 441, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 2, -180, 449, 472, 210, 47, 46, 74,
	28, 387, 79, 362, 121, 148, 520, 202, 229, 230,
	256, 93, 94, -397, 44, 249, 248, 438, -592, 437,
	-449, 492, 440, 446, 486, 260, 434, 511, 102, 534,
	426, 559, 391, 392, 484, 404, 279, 157, 187, 4,
	120, 310, 451, 503, 278, 433, 365, 84, -611, 2,
	491, -613, 2, 511, 511, 2, -613, 2, -613, 2,
	-613, 2, -614, 511, 556, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, -211, -213, -212, 587, 587, 587, 587, 587,
	587, 587, -180, 449, 2, 74, 28, -338, -340, 524,
	239, 150, 348, -210, -212, 2, -548, -500, 2, -423,
	-522, -425, 575, 576, 568, 488, 67, 327, 560, -437,
	126, 525, 342, -521, -426, -439, 153, 429, -360, 8,
	9, 5, 6, 7, -262, -427, -433, 516, 167, 332,
	-300, 588, 10, 584, -545, -212, -438, 37, 205, 65,
	-504, -299, -263, -476, 240, -298, -282, -542, -543, 4,
	-515, -516, -505, -479, -487, -483, -484, -490, -253, -518,
	77, 111, 112, 110, 115, 114, 281, 280, 116, 113,
	451, 533, 66, 36, 213, 214, 245, 333, 215, 75,
	-544, 141, -517, 237, 238, 465, 51, 394, 177, 125,
	124, 335, 56, 54, 541, -488, 122, 503, 504, 505,
	506, 190, 191, 58, 164, 165, 355, 378, 482, 513,
	515, 203, 267, 43, 106, 187, 235, 217, 244, 246,
	250, 268, 271, 311, 324, 329, 352, 354, 424, 458,
	-617, 542, 477, 69, 70, -550, 396, -551, -276, -550,
	587, 587, 589, 587, -331, -333, -334, 2, 28, 138,
	584, 2, -454, 2, -455, -459, -212, 261, -458, 584,
	-456, 582, -283, 343, -546, 430, -542, -543, -262, -282,
	-299, 4, -515, -517, 586, -335, 584, 120, 491, 78,
	229, 163, -390, 584, -253, 28, 342, 507, 589, -332,
	385, -435, 584, 342, 186, 345, 60, 292, 2, 2,
	2, 2, 2, 213, -253, 491, 119, 2, 259, 2,
	2, 2, 2, 2, 2, 2, -353, 213, 2, -283,
	544, -353, 213, 2, -353, 213, 2, -396, 2, 87,
	-267, 213, 2, -253, -291, 213, 2, -286, -288, -295,
	213, 2, -293, -253, -513, 213, 2, -512, -507, 10,
	-506, 5, 4, -515, -519, -516, -518, 77, -423, 2,
	-128, 2, 60, -253, 544, 2, 2, 454, 2, 584,
	-139, 71, 511, 43, 449, -410, 2, -411, -249, -250,
	-251, -466, -252, 247, 384, 393, 563, 130, 327, 559,
	-500, -595, 186, 567, 507, -500, -361, 586, 2, 2,
	2, 2, 2, 2, -459, 213, -283, 2, -280, -503,
	4, -515, -519, -516, -520, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	126, 130, 134, 138, 139, 143, 146, 150, 167, 169,
	182, 185, 186, 201, 204, 207, 220, 234, 239, 241,
	261, 265, 272, 280, 281, 327, 332, 338, 342, 343,
	347, 348, 367, 383, 399, 420, 444, 451, 468, 485,
	491, 501, 507, 509, 516, 524, 525, 533, 535, 543,
	548, 550, 551, 552, 553, -521, 2, -459, 213, 2,
	-285, 213, -459, -288, 2, -267, 2, -279, -503, 2,
	-304, 213, -283, -284, -288, -286, 2, 2, 2, 2,
	2, -293, 2, -512, 213, 2, 544, 241, 507, 589,
	-351, -296, -297, -499, 8, -344, -253, 586, -423, 2,
	-128, -112, 2, 182, -423, 213, 2, -128, 213, 2,
	-423, 213, 2, -128, 213, 2, -589, 2, -512, 213,
	-253, 2, 292, 2, 2, 514, 2, 98, 491, 119,
	2, 413, -602, 432, 518, 2, 2, 2, 2, 2,
	2, 2, 491, -272, 2, -253, 182, 475, -293, 213,
	-294, 2, 445, -612, 396, -512, 213, 2, 544, -286,
	213, 2, -286, 229, 243, -267, 213, 2, 496, 494,
	496, 494, 186, 2, 241, 2, 241, 2, -460, 2,
	-461, -455, -462, 582, 343, -470, 2, -469, -506, 540,
	-101, 584, -101, 584, 449, 584, -512, -283, -283, -423,
	2, -128, -112, 2, -423, 2, -128, 2, -125, -512,
	-124, 584, 186, -423, 2, -128, -112, 2, -423, 2,
	-128, 2, -205, 182, 2, 120, 491, -180, 2, 182,
	535, 2, 8, 2, 220, -512, 440, 392, 174, 2,
	454, 2, 455, 74, -397, 559, 74, 186, 2, 186,
	2, -380, 2, 553, 186, 2, 2, -572, 2, 342,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-179, 450, 512, 490, 389, 249, 2, -128, 550, -112,
	-423, 550, 2, -593, 182, 438, -423, 2, 510, 258,
	158, 186, -380, 2, 186, 2, 186, 2, 5, 2,
	390, 473, 2, 247, 384, 473, 2, -283, -605, 28,
	2, 491, 544, 445, 2, 2, 88, 89, 186, 2,
	186, 2, 200, 186, 2, 186, 491, 559, 2, -372,
	-459, -409, -410, -409, 507, -338, -340, -180, 454, 2,
	-217, -370, -219, 182, -400, -401, -220, 272, 169, 338,
	-221, -379, 28, 138, -379, -379, 60, 585, 585, 11,
	12, 76, 41, 575, 576, 577, 578, 180, 579, 580,
	573, 574, 572, 565, 566, 570, 253, 254, 95, 569,
	567, 86, 286, 431, 170, 171, 172, 173, 410, 227,
	34, 228, 14, 15, 16, 33, 347, 271, 560, 217,
	458, 568, 17, 18, 19, 244, 246, 329, 50, 220,
	-261, -306, -423, -423, -423, -423, -423, -423, -423, 354,
	584, -366, -418, 582, -212, 584, 584, 584, -499, -212,
	-423, -437, 585, -358, 584, -212, -437, -432, 584, 429,
	582, 584, -440, -423, 5, 5, 5, 584, 586, -553,
	554, 182, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 380, -481, 584,
	-480, 584, -480, -480, 545, -478, 584, 562, 555, 584,
	-478, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 545, 589, -550, -335, 584, -362,
	-464, -423, 577, -362, -362, 342, -355, -423, 106, -383,
	250, 311, 187, 268, 424, 235, -420, 588, -420, -448,
	562, -212, -456, -282, -212, -458, 584, -454, -448, -102,
	-499, -86, -99, -107, -128, -141, -184, -185, 577, -283,
	584, 186, 584, 586, -503, 186, -344, -267, -283, -298,
	-299, -304, 2, 137, -355, -568, 519, 439, 445, -344,
	-256, 38, -434, -473, -474, -524, 588, -523, -476, -486,
	-482, -485, 370, 374, -505, 54, 541, -488, 240, 4,
	-515, -517, 237, 238, 465, 51, 394, 177, 125, 124,
	335, 56, 503, 504, 505, 506, 190, 191, 58, 542,
	477, 69, 70, -568, 519, 439, 445, -344, 182, -510,
	2, -509, -508, 116, 451, -506, 5, 2, 153, 2,
	2, 2, -253, -232, 589, 64, 418, 153, -353, 213,
	-232, 153, -232, 153, -305, 213, -304, -232, 153, -232,
	589, 153, -232, 589, 153, 586, 589, 153, -510, 2,
	-396, -502, -355, 38, -410, 2, 126, -508, -615, 589,
	270, -308, 285, 326, 209, 343, 557, 336, 130, -511,
	5, 4, -433, -445, 126, 278, 240, -493, -495, 8,
	-494, 9, -496, 575, 576, -501, -500, 109, 586, -503,
	-229, 411, 452, 357, -228, 24, 29, 142, 231, 314,
	538, 159, -321, 232, -318, 361, 153, 469, 528, -582,
	-583, 436, 498, 499, 90, 336, 452, 357, 411, 153,
	-376, -378, 38, 118, 314, 356, 61, 224, 290, 291,
	471, 547, 153, 452, 357, 411, 357, 24, 142, -244,
	-241, 452, -583, 99, 411, 483, 383, -583, -231, 469,
	528, -582, -583, 436, 411, -230, -323, -318, 361, 153,
	588, 24, 142, 411, 452, 357, -598, -599, 29, 411,
	357, -576, -547, 553, 153, -459, 213, -590, -124, 262,
	5, 10, -512, -124, -351, 589, 589, -503, 577, 438,
	437, 153, 153, 153, 153, 182, 327, 2, 2, 2,
	2, 2, 188, -585, -603, 2, 2, -283, 213, -337,
	342, -571, -352, 491, -283, 182, 327, 43, -285, 213,
	2, -288, 544, -576, 327, -287, 213, -283, 38, 584,
	327, 2, -396, 2, 229, -547, 327, -460, -301, -283,
	-455, -301, 452, -276, 38, -420, -283, 585, 589, -470,
	-470, -512, -193, 553, 186, 102, 584, 584, -205, -467,
	589, -466, 220, -513, -125, -512, 414, -512, -571, -267,
	2, -283, 2, 491, 251, -512, -193, 220, -512, -512,
	-512, -502, 28, 455, 2, -179, 450, 512, 89, 455,
	2, -283, 491, 120, 229, 80, -253, -574, 182, -569,
	425, 439, 519, -568, -283, 120, -283, 120, -283, 120,
	-283, -283, 2, 2, 2, 2, 2, 85, 85, 2,
	46, -593, 182, 2, 510, 2, 510, 2, -253, -253,
	-253, 472, 270, -283, 492, -606, 2, 186, 182, 2,
	491, 229, 491, 229, 120, 186, 74, 120, 28, 491,
	435, -232, 589, -257, -217, -370, -502, -371, -370, -218,
	-217, -220, 182, 393, 529, 314, 456, 255, -401, -400,
	28, -423, -405, 176, 313, -423, -403, -425, 575, 576,
	-494, -496, -354, 336, -211, -211, -211, -341, -450, -423,
	383, 229, -475, -473, -473, -281, -503, 503, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, 271, 217, 458, 50, 220, -423, 507,
	-423, -423, -423, -423, 308, 327, 332, 516, 167, 526,
	138, 336, -618, 485, 40, -430, -212, -359, 584, -444,
	35, 468, 28, -437, 584, 2, -418, -423, -419, -356,
	-355, -355, 585, 543, 28, 138, 577, 2, 585, 589,
	38, 585, -423, -356, -436, -432, -355, -443, -442, 550,
	-391, -392, 558, 295, 123, 211, 293, -393, 443, -497,
	8, -503, 577, -554, 175, 204, 584, 585, 2, 585,
	2, 585, -423, 2, 585, -423, 2, 585, -423, 2,
	585, -423, 2, 585, 2, -423, -423, -423, -423, -423,
	-423, -423, -355, 8, -497, -497, 503, 503, -497, -497,
	-497, -489, 370, 371, 372, 373, 273, 274, 275, 276,
	374, 375, 376, 377, 300, 301, 302, 303, 296, 297,
	298, 299, 304, 305, 306, 307, 195, 196, 197, 198,
	191, 192, 193, 194, -489, -385, 2, -491, -355, 4,
	558, 295, 123, 211, 293, 443, 5, -385, 2, -386,
	2, -423, -355, -387, -424, -425, 575, 576, 568, -437,
	-388, 2, -423, -356, -423, 57, 265, 509, -389, -423,
	186, -355, -355, 2, -355, 2, -551, 38, -355, -347,
	589, 186, 38, 4, -347, -347, 584, 585, 589, -384,
	208, 289, 284, 243, -384, -454, -383, 250, -381, 352,
	-381, -381, -448, -268, 582, 590, -503, -448, -447, -446,
	38, -276, 349, -448, -448, 586, 585, -447, 583, -566,
	584, 587, 587, 587, 587, 587, -283, 584, -355, -503,
	586, 474, 2, 585, 244, 244, 244, 244, 430, 585,
	507, -570, -291, -295, 2, 553, -101, 344, 585, 589,
	-346, 37, 582, 586, -497, 2, 2, -492, 545, 584,
	584, -392, 584, 186, -570, -295, 2, -345, 589, 507,
	-253, 2, -283, -353, -232, 153, -353, -353, -232, 589,
	153, -267, -286, -291, -293, -295, -253, -512, -513, -232,
	-287, -595, 585, 511, -411, -307, 393, 467, 412, 447,
	487, 8, 9, 8, 9, 589, -503, 589, -596, 93,
	507, 78, 439, -246, 279, 507, -414, 213, 78, -525,
	-270, 93, -526, -253, 72, 525, 383, 185, 151, -596,
	93, 383, -596, 93, 2, 231, 93, 452, 472, 28,
	60, -459, 41, 41, 28, -594, 325, 266, 549, 186,
	559, 491, 229, 439, 507, 507, -459, -378, -473, 118,
	290, 291, 60, -498, -493, 575, 576, -498, 60, -498,
	-498, -498, 553, -285, -459, 439, 507, 507, 507, 402,
	402, -241, 507, 507, -616, 567, 402, 589, 41, 41,
	28, -594, 325, 266, 186, 507, -304, -268, 539, 42,
	539, 42, 539, 507, 42, 439, 507, 589, 42, 507,
	507, -577, -258, 105, 320, 283, 321, 97, 317, 96,
	316, 103, 318, 104, 319, 546, 330, 63, 315, 294,
	322, -259, -260, 363, 537, -512, 452, 357, 411, 153,
	220, -467, 220, -467, -296, -253, 586, -128, -423, -423,
	-128, -423, -128, 46, 153, 2, -612, 259, 584, -311,
	327, 186, -344, -468, 241, 589, -352, -568, 153, -509,
	-377, -376, 327, -287, 213, 2, 153, -335, 327, 147,
	584, 391, 2, 153, -269, 213, -254, -253, -396, -235,
	495, 153, -374, 535, -406, -128, 584, 126, 38, -406,
	-363, -364, -465, -365, -270, 584, -276, -420, -101, -469,
	585, 585, 585, -192, 346, -191, -253, 5, -205, 535,
	-310, -415, -414, -529, -530, -525, 271, 229, 525, 243,
	168, -336, -271, -270, 119, -199, 553, -124, -125, 585,
	-467, 220, 475, -193, -193, -467, -467, -283, 182, -512,
	-193, -193, -193, 2, 2, 2, 2, -380, -283, -267,
	-304, -283, 586, -344, -344, -295, -291, -380, -267, -380,
	-267, -380, -267, -128, -423, 2, 449, 182, 182, 586,
	-380, 391, 120, 491, 361, 229, -283, -304, -283, -304,
	-267, 120, -267, 121, -283, -459, -371, -218, 343, 255,
	456, -403, -404, -425, 429, 430, -404, 429, 430, 8,
	9, 8, 9, -222, 460, 331, -353, 589, -226, 39,
	134, 255, -283, 559, 149, -423, -423, 507, -618, 485,
	-430, 149, -423, 308, 332, 516, 167, 526, 138, 336,
	186, 584, -424, -424, 585, -357, -423, -423, 583, 592,
	585, -340, 589, -338, -423, -355, -355, 585, 586, -355,
	-344, 583, 583, 589, 585, -441, -442, 143, -423, 507,
	507, 507, 507, 584, 585, 586, -559, 353, 584, 584,
	-423, 585, 585, 585, 585, 38, 589, 589, 589, 585,
	589, 589, 589, 585, 585, 585, 589, 585, 559, 559,
	585, 585, 585, 585, 589, 585, 589, 585, 186, 585,
	585, -394, 367, 585, 11, 12, 575, 576, 577, 578,
	180, 579, 580, 573, 574, 572, 565, 566, 567, 86,
	286, 431, 14, 15, 16, 244, 220, -424, -424, -424,
	585, -428, -429, 186, 182, 38, -389, -389, -389, 585,
	186, -355, 585, 585, 584, -552, 288, 327, 585, -417,
	-416, 551, -464, -348, 2, -454, -278, -503, -417, -417,
	-355, -423, 250, 250, -382, 535, 342, -384, -454, -447,
	-499, -422, -421, 184, 39, 134, 323, 216, -447, -276,
	-335, -447, -447, -503, -448, -448, -446, 585, -567, -499,
	585, -349, -457, -546, -340, 586, -503, -202, -547, -181,
	5, 332, -181, -181, -181, -344, 507, 507, 25, 368,
	-473, 582, 583, 8, -503, 584, -497, -497, -497, -344,
	186, 186, 186, -509, -509, 2, -232, -353, -232, -232,
	-304, -305, -232, -232, -232, -375, 553, -500, -410, 523,
	83, 393, 503, -500, -228, 411, -270, -270, -283, -292,
	-253, 199, 403, -509, 327, -414, 213, -234, 327, -473,
	-277, -253, 584, -398, 555, 255, 255, 535, -270, -277,
	255, 213, -270, 213, -277, 2, -277, -578, 393, 337,
	-423, 60, -319, 277, 391, 328, -229, 411, 452, 357,
	-128, -128, -128, -128, -128, 584, -595, 535, 137, -283,
	-304, -283, -292, -509, -287, 452, 357, 411, 324, -298,
	-498, -498, -376, 452, 357, 411, -292, -509, -285, -509,
	-240, -253, -240, 439, -267, 402, 559, 45, -616, -230,
	-128, -128, -128, -128, -128, 584, -268, -231, 411, 5,
	213, -270, 5, -270, 213, 5, -253, -270, -292, -509,
	-599, 24, 142, -270, -292, -509, -258, -512, 332, 531,
	-576, 439, 507, 507, -459, -124, -196, 553, -124, -190,
	225, 577, -573, -253, 544, -253, -309, -312, -310, -270,
	-208, -209, 555, 553, 153, -302, -283, 582, -193, -512,
	-283, -468, -293, -294, 153, -335, 327, -512, 38, 153,
	584, 2, 2, -286, 342, 327, -269, 213, -236, 144,
	-616, -267, -417, -348, -373, -408, 420, 342, -336, 540,
	-276, -373, -350, 589, 186, 567, 586, -336, -463, 577,
	-101, -101, -193, 589, 584, 567, 567, 584, -512, -512,
	585, 589, -234, -283, -269, 229, 229, -275, -254, 585,
	589, 586, 584, -201, 346, -200, 145, 257, 242, 461,
	462, 463, 464, 136, -467, -199, -125, 186, 186, -61,
	553, 491, -193, 588, -253, -380, -380, -380, 449, 449,
	-253, -279, -267, -283, -280, -304, 182, 182, -267, 529,
	-404, 343, 282, -450, -227, 561, -283, 588, -423, -423,
	149, 149, -423, -424, -424, -423, 149, 186, 584, -423,
	-434, 33, 33, 585, 589, -419, -423, 585, 543, -340,
	-340, 585, 577, -503, 588, 585, -432, 146, -423, 501,
	295, 211, 293, -393, 293, -393, -393, -497, 5, -503,
	577, -560, -273, 584, -253, 551, -339, 348, 585, -475,
	-473, -423, -423, -423, -423, -423, -497, -478, -478, -493,
	-493, -423, -428, -423, -475, -473, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, 138, 327, 336, -424, -429,
	-428, -423, -423, -473, 585, 585, 585, -355, -101, 584,
	288, -367, 204, -423, -467, 589, -367, -367, 585, -454,
	-454, 584, -423, 250, 583, 589, 591, 567, -335, 586,
	-446, -447, 583, 585, 589, 585, 589, -407, 38, 585,
	-503, -417, -204, -203, 135, 53, 107, 133, 332, -344,
	-344, 345, 5, 8, 582, 583, 586, -497, 585, 585,
	585, -344, -344, -344, -232, -232, 119, 314, -423, 507,
	507, 60, 220, 153, 327, 537, -531, -526, 151, -423,
	584, 229, 584, 584, 2, -224, -225, 142, 452, 24,
	-597, 2, 535, 153, -232, 153, -232, 557, -319, 584,
	584, 507, 439, -246, 507, 553, -355, -423, -194, 126,
	-502, -583, 588, -583, 588, 439, 507, 507, 439, 507,
	507, 553, 166, 166, 559, -240, 553, -355, 507, -477,
	48, 26, 327, -286, -232, 153, 507, 507, 519, 452,
	-512, 332, -292, -509, -287, 452, 357, 411, -467, -198,
	346, -197, 145, 422, 136, 257, 222, -467, -196, 186,
	241, 553, -287, 2, 585, 585, 589, -532, 38, 340,
	340, 584, -283, -82, 553, -466, -499, -579, 553, 43,
	-285, 38, 153, -576, -128, -287, -471, -472, 5, 38,
	-283, 153, 342, 327, -237, 264, -616, -507, -547, -340,
	-373, -362, 328, 91, 585, -417, -364, -348, -423, 2,
	585, -191, -192, -512, -512, -512, -193, -205, -205, -415,
	-313, 584, -269, -254, 584, -205, -271, 2, -513, 589,
	584, 567, 567, 567, -199, -467, -124, -128, 346, -283,
	577, -380, -325, -324, 361, 336, -325, 429, 429, 343,
	176, 260, -226, -268, -423, -423, 149, 33, 33, -423,
	-423, -434, 585, -423, -423, -355, 583, 5, -423, 585,
	585, 8, -423, 585, 586, -561, -253, -423, 585, 60,
	585, 585, 589, 589, 585, 585, 585, 585, 585, 585,
	585, -429, 186, 138, 336, 584, 585, 585, -101, -431,
	207, 60, -454, -431, -431, -382, -344, -454, -421, -268,
	582, -503, -499, -457, 584, 586, -203, 567, -512, -512,
	553, 583, 2, 582, -503, 585, 119, -270, -270, 491,
	429, -240, 383, -414, 153, -533, 93, -535, 76, 168,
	102, 327, 332, 525, 383, 72, 126, 399, -608, 38,
	564, 585, -342, -451, -546, 584, -253, -342, -344, 327,
	480, 126, 327, 126, 548, 119, 2, 519, 79, -270,
	-277, -344, -344, -283, -292, -509, 160, 585, 589, 567,
	2, 577, 577, -292, -509, -287, -292, -509, -285, 359,
	166, 160, 585, -268, 5, 5, 153, -265, 76, -270,
	5, -270, -286, 119, 439, 507, 507, -196, 589, 584,
	567, 567, -196, -513, -124, 2, -335, -326, 231, -270,
	-530, -527, -528, 383, -534, -536, 168, 383, -128, 2,
	-207, -206, -253, 5, 584, -311, 346, 583, -581, 346,
	-580, 117, 136, -509, -377, -128, -287, -335, 585, 589,
	147, -399, 535, -268, -283, 153, -238, 263, -616, -507,
	-235, -402, -400, 139, 584, 342, -128, -340, 567, 585,
	585, 119, 119, 223, 152, -342, 584, 584, -344, 119,
	585, -200, -201, -512, -124, -512, -199, -467, -62, -63,
	229, 93, 366, -280, 491, 229, 584, 584, -226, -423,
	-423, -423, 585, -340, -503, 577, -555, 361, 585, -450,
	-423, -423, -424, 186, 584, -434, 585, -556, 552, -423,
	-368, -369, -423, 428, 108, 205, -556, -556, 585, -499,
	2, -512, 2, 582, 2, 220, 38, 402, -414, -277,
	-281, -274, -253, 168, 213, 332, 548, -398, 255, 584,
	-424, -283, 584, 2, 30, -609, 130, 234, 585, 589,
	-452, -264, -253, -423, -452, 585, 585, 332, 332, 548,
	-423, -473, 584, -232, -232, 585, 585, -423, 507, -502,
	100, -500, 2, -583, -267, -423, 507, 5, -232, -281,
	-232, -232, -265, 519, -292, -509, -287, -197, -198, -512,
	-124, -196, 38, -316, 233, 2, -532, 255, -274, 255,
	-607, 553, 585, 589, 567, 567, -309, -208, -83, -84,
	508, -466, 589, 584, 567, -335, 38, 5, 584, 584,
	-253, 342, 584, -268, -248, 92, -616, -507, -236, -373,
	328, -344, 93, -402, -430, -193, 584, 584, -314, 81,
	94, 127, 212, 189, 230, 472, 478, 28, -314, 585,
	-342, -342, 585, 584, -193, 585, 589, 28, 584, 28,
	584, -283, -304, -355, -355, 585, -340, 60, 589, 585,
	585, -424, -434, 585, -557, -558, -273, 589, 584, 584,
	453, 583, 2, -240, 383, -253, -535, -274, 327, 535,
	-423, -255, 584, -423, 38, 234, 131, 218, -413, -610,
	101, 481, 221, -451, -226, 585, -412, 535, 399, -265,
	-342, 584, 584, 584, 567, 186, 584, -477, -232, -286,
	585, -588, 397, -128, -320, -321, 220, 584, -315, 342,
	119, 314, -206, -500, -500, 585, 38, -84, 9, -580,
	-581, -423, 38, -128, -471, -342, -283, -342, 342, -242,
	-241, 272, -507, -237, 585, -277, -373, -513, -513, -412,
	585, 585, -513, -63, -344, -344, 585, 585, -562, 391,
	430, 206, -355, -341, 585, 589, 38, -369, 2, 2,
	2, 402, 153, 208, 585, -537, 287, -253, 585, 131,
	218, -316, 584, -227, -452, -316, 208, -283, -584, 535,
	585, -328, -327, -324, -330, -329, -324, -355, -500, 100,
	359, -355, -265, -591, 187, -590, 5, 10, -208, 359,
	-343, -453, -270, 82, 119, -326, -128, 585, -128, 585,
	585, -399, 585, -283, -239, -514, 402, 404, -616, -238,
	-417, 585, 585, -413, -412, -322, -318, 585, 585, 585,
	585, -563, -564, 50, 522, 109, -423, -563, -563, -558,
	-560, 168, 553, -538, -541, -540, 342, 459, 187, 360,
	585, 480, 547, -322, -344, 553, -335, -423, -412, 585,
	589, 540, 585, 589, 540, 585, 186, 585, -232, -195,
	553, 46, -315, -283, 585, 589, 382, 132, 142, -316,
	-607, -412, 584, -413, 584, -245, -244, -616, -493, -248,
	139, -193, -193, -316, -413, -209, 553, -193, -565, 151,
	-564, 379, 181, 429, 379, 181, -565, -565, -274, 55,
	-540, 342, -541, 342, 529, 132, -609, 585, 55, -537,
	-316, -327, 220, -329, 186, 359, 437, -590, 30, -247,
	-246, 584, -453, 430, 430, 2, -320, -315, -413, -342,
	-316, -342, -243, -344, -242, 328, 529, -322, -316, -417,
	109, 204, 502, 314, 33, 567, -539, 314, 418, 64,
	452, -539, -417, 567, -538, 584, 584, 346, -344, 2,
	-208, -316, 585, -322, 585, -239, 452, -209, -322, 429,
	350, -564, -423, 23, 332, 126, -423, -609, -355, -355,
	-192, 584, 585, -315, -322, -412, -209, -413, -245, -363,
	-417, -209, 585, 585, -192, -233, 64, 418, -247, -209,
	-413, -417, -316, -417, -417, -317, -318, 507, 585, -417,
	-316, -322, 584, -322, -209, -355, -209, -417, 585, -417,
	-317,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 537, 538, 540, 541, 542, 544,
	545, 547, 549, 551, 552, 553, 555, 556, 558, 559,
	560, 561, 562, 564, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	631, 633, 0, 1326, 1328, 1330, 1332, 0, 776, 0,
	36, 37, 39, 0, -2, 324, 326, 328, 0, 355,
	357, 358, 360, 362, 363, 364, 366, -2, 0, 472,
	473, 475, 477, -2, 0, 967, 969, 0, 620, 622,
	0, 972, 974, 0, 0, 642, 643, 0, 1433, -2,
	636, 638, 640, 705, 707, 709, 711, 713, 715, 717,
	719, 721, 722, 724, 726, 728, 730, 732, 733, 735,
	737, 739, 740, 742, 743, 745, 747, 749, 751, 753,
	755, 757, 759, 761, 763, 765, 767, 769, -2, 772,
	773, -2, -2, 0, -2, -2, -2, 1344, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 416, 418, 420,
	422, 424, 427, 429, 431, 1491, 479, 481, 483, 485,
	487, 489, 491, 0, -2, 1505, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1464, 1466, 1468, 1470,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 539, 543, 546, 548, 550,
	554, 557, 563, 565, 567, 524, 525, 528, 2169, 2186,
	2187, 2188, 2191, 2192, 2193, 2194, 2195, 2196, 2638, 2720,
	2721, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 526, 527, 1144, 0, 591, 589, 2154, 592, 2440,
	594, 596, 466, 467, 468, 469, 470, 471, 0, 613,
	604, 1503, 614, 616, 617, 618, 619, 586, 584, 0,
	613, 2222, 611, 1324, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 395, 1193, 1194, 1195,
	1309, 1310, 2484, 1351, 0, 225, 632, -2, -2, -2,
	2603, -2, 664, -2, 671, 2607, 2487, 676, 0, 678,
	-2, 681, 1327, 1329, 1331, 774, 775, 2172, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 235, -2, -2, -2, -2, 0, 0, 2531,
	2274, 2122, 2188, 2125, 2120, 325, 327, 329, 330, 0,
	0, 0, 0, 0, 0, 356, 359, 361, 365, -2,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1028, 1020, 1021, 1251, 0, 0, 0,
	-2, 474, 476, 529, 530, 0, 1492, 1492, -2, 0,
	0, 0, 0, 295, 282, 968, 970, 971, 0, 0,
	0, 0, 621, 623, 0, 0, 264, 973, 975, 976,
	0, 0, 0, 0, 0, 297, 0, 0, 637, 639,
	641, 706, 708, 710, 712, 714, 716, 718, 720, 723,
	725, 727, 729, 731, 734, 736, 738, 741, 744, 746,
	748, 750, 752, 754, 756, 758, 760, 762, 764, 766,
	768, 770, 771, 782, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 870, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 948, 0, 0, 785,
	787, 788, 789, 0, 848, 868, 869, 878, 0, 1184,
	1493, 1353, 1334, 1348, 1353, 1336, 1337, 1338, 1339, 1340,
	1345, 1347, 1341, 1342, 1343, 42, 44, 46, 48, 50,
	52, 54, 56, 58, 417, 419, 421, 423, 425, 428,
	430, 432, -2, 1462, 1463, 480, 482, 484, 486, 488,
	490, 492, 624, 0, 626, 0, 786, -2, 0, 1497,
	1497, 1497, 0, 0, 1463, 1461, 0, 629, 630, 685,
	686, 1765, 0, 0, 0, 0, 0, 0, 0, 2019,
	1851, 0, 687, -2, 1882, 1884, 2578, 2603, 2018, 1886,
	1887, 1888, 1889, 1890, 0, 1892, 1893, 1894, 1895, 1896,
	1897, 0, 1899, 0, 1904, 1905, 1906, 0, 2585, 2099,
	2182, -2, 0, 0, 2591, 2178, 0, 1985, 1922, -2,
	-2, 2205, 2184, 1697, 1698, 1699, 1700, 1701, -2, -2,
	2621, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 0, 2566, 2586, 2587, 2592, 2594, 2588, 2575,
	1947, 2287, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1724, 1733, -2, -2, -2,
	-2, -2, -2, -2, 2579, 2580, 2597, 2600, 2606, 2611,
	2612, 2584, 2593, 2620, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	1725, -2, -2, -2, -2, 1480, 2453, 1483, 1144, 1481,
	1465, 1467, 0, 1469, 0, 0, 0, 1474, 1500, 1498,
	0, 1549, 1478, 1479, 1567, 1567, 1591, 0, 1572, 0,
	1591, 1492, 1618, 0, 1578, 2476, 1923, 1924, 0, 2188,
	2183, -2, -2, 2618, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 0, 593, 595, 0, 0, 0, 612,
	1502, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	400, 401, 402, 2586, 0, 0, 0, 407, 0, 409,
	410, 411, 412, 413, 414, 415, 194, 2586, 497, 522,
	0, 194, 2586, 500, 194, 2586, 503, 0, 506, 1249,
	194, 2586, 509, 2150, 194, 2586, 512, 514, 2158, 194,
	2586, 518, 2165, 2163, 519, 2586, 521, 300, 298, 299,
	2201, 2202, 2209, 2210, 2211, 2212, 2619, 2621, 1320, 1321,
	1322, 1323, 0, 1350, 1250, 634, 635, 0, 659, 0,
	663, 2574, -2, 0, 2496, -2, 667, 1354, 1358, 1359,
	1360, 1361, 1362, 0, 0, 0, 0, 1367, 0, 0,
	673, 0, 0, 660, 661, 679, 682, 0, 777, 778,
	779, 780, 781, 70, 0, 2586, 1618, 72, 0, 2144,
	2213, 2214, 2215, 2216, 2217, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 76, 0, 2586, 81,
	0, 2586, 0, -2, 92, 0, 100, 0, 2147, 109,
	0, 2586, 0, 2119, -2, 0, 206, 283, 284, 285,
	286, 0, 995, -2, 2586, 1192, 0, 0, 0, 0,
	958, 2116, 2121, 959, 2140, 960, 2126, 0, 331, 332,
	333, 334, 335, 0, 336, 2586, 338, 339, 0, 341,
	342, 2586, 344, 345, 0, 347, 0, 247, 248, 2586,
	369, 371, 0, 373, 374, 0, 376, 0, 0, 0,
	380, -2, 396, 0, 393, 383, 384, 386, 387, 388,
	389, 390, 0, 436, 434, 2155, 0, 0, -2, 2586,
	0, 992, 0, 0, 1229, -2, 2586, 1189, 0, 1236,
	2586, 1232, 0, -2, 0, 1490, 2586, 1371, 1024, 1025,
	1026, 1027, 1630, 463, 0, 1398, 0, 1400, 0, 1419,
	1624, 1567, 0, 0, 1629, 0, -2, 580, 2171, -2,
	532, 0, 533, 0, -2, 0, 312, 0, 0, 977,
	978, 979, 980, 981, 984, 985, 986, 987, 1604, 265,
	267, 0, 0, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 0, 0, 644, 0, 0, 783, 784, 0,
	0, 794, 795, 796, 0, 312, 2488, 2449, 2308, 803,
	0, 806, 809, -2, 0, 0, 0, 0, 813, 0,
	818, 819, 820, 0, 0, 824, 826, 966, 828, 0,
	0, 830, 0, 834, 0, 837, 0, 839, 0, 841,
	-2, -2, -2, 849, 850, -2, 854, -2, 0, 857,
	859, 0, 861, -2, 0, 870, 866, 867, 0, 0,
	0, 0, 886, 887, 0, 896, 0, 899, 900, 901,
	0, 903, 904, 0, 906, 907, 908, 909, 0, 0,
	912, 913, -2, -2, 917, 919, 0, -2, 0, 935,
	0, 939, 0, 0, 947, 0, 0, 790, 791, 194,
	1622, 1333, -2, 1335, 0, -2, 0, 625, 0, 628,
	1522, 1448, 1445, 0, 1519, 1520, 1449, 0, 0, 0,
	1456, 0, 1495, 1496, 0, 0, 0, 1435, 1436, 0,
	0, 0, 0, 2024, 2025, 2026, 2027, 2028, 2029, 2032,
	2033, 2030, 2031, 2034, 2035, 0, 0, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 2038, 2039, 0, 0, 2041, 0, 2043,
	0, 0, 0, 0, 0, 0, 1830, 1832, 2107, 0,
	0, 2040, 1770, 1771, 1772, 1773, 1774, 1809, 1810, 0,
	0, 1883, 2104, 2103, 1885, 0, 2055, 0, 1898, -2,
	0, 2019, 2050, 0, 0, 1907, 1908, 1909, 0, 0,
	2055, 0, 0, 2098, 1919, 1920, 1762, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 1710, 0,
	1712, 0, 1713, 1714, 1721, 1734, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 2079, -2,
	0, 0, 0, 0, 1726, 0, 1482, 0, 0, 1553,
	2108, 2112, 2113, 1553, 1553, 0, 0, 2056, 1615, 1615,
	0, 0, 1610, 1610, 1610, 1608, 1591, 0, 1591, 1601,
	0, 1591, 1591, 0, -2, 1572, 0, 0, 1601, 0,
	1585, 568, 570, 572, 574, 575, 576, 578, 1619, 1620,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	2174, 0, 352, 0, 0, 0, 2541, 2487, -2, 598,
	615, 1492, 0, 2058, 1645, 1649, 0, 1651, 1652, 1653,
	1654, 1655, 0, 0, 1646, -2, 1722, 1724, 1745, 2206,
	2207, 2208, 1705, 1706, 1707, 1708, 1709, 1717, 1704, 1704,
	1704, 1715, 1744, 1736, 1744, 1740, 1690, 1691, 1692, 1727,
	1728, 1729, 1730, 0, 2541, 2487, -2, 606, 0, 0,
	1430, 210, 212, 213, 214, 215, 216, 397, 0, 404,
	405, 406, 0, 493, 0, 192, 193, 0, 194, 2586,
	498, 0, 501, 0, 194, 2586, 2114, 507, 0, 510,
	0, 0, 516, 0, 0, 0, 0, 0, 194, 1432,
	0, 0, 0, 0, -2, 669, 674, 675, 0, 1356,
	0, 1363, 696, 697, 698, 1365, 1366, 0, 1368, 672,
	699, 700, 701, 702, 703, 704, 0, 2128, 2129, 2130,
	2131, 2134, 2135, 0, 0, 670, 689, 677, 0, 683,
	110, 1306, 0, 0, 153, 0, 1306, 1306, 0, 0,
	0, 0, 179, 0, 1063, 0, 0, 0, 0, 125,
	138, 149, 122, 123, 0, 0, 0, 0, 0, 0,
	82, 1166, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 96,
	97, 0, 137, 0, 0, 1395, 0, 132, 112, 0,
	0, 125, 139, 151, 0, 183, 185, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 217, 0, 0,
	0, 1190, 0, 1489, 0, 0, 2586, 0, 1604, 2356,
	-2, -2, 265, 1604, 957, 0, 0, 2189, 2124, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 375, 377,
	378, 379, 0, 1228, 0, 385, 426, 1115, 2586, 0,
	0, 453, 448, 0, 450, 0, 0, 0, 1165, 2586,
	1163, 2159, 0, 1187, 0, 1144, 2586, 2157, 0, 0,
	0, 1237, 2198, 1246, 1250, 1385, 0, 465, 0, 1401,
	1403, 0, 0, 1625, 0, 1627, 1567, 1492, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 271,
	0, 1603, 0, 0, 1604, 265, 2464, 312, 312, 1604,
	646, 1604, 648, 0, 0, 797, 798, 0, 312, 312,
	312, 804, 805, 807, 808, -2, -2, -2, -2, 810,
	811, 893, 0, 0, 0, 892, 823, 827, 0, 951,
	2472, 2487, 2541, 964, 893, 2274, 893, 2274, 893, 2274,
	838, 840, 843, 881, 889, 853, 858, 0, 0, 863,
	871, -2, 0, 873, 0, 875, 0, 877, 893, 894,
	897, 902, 905, 910, 911, 0, 926, 931, 932, 928,
	0, 0, 0, 0, 0, 0, 942, 943, 0, 0,
	950, 1183, 0, 1346, 1522, 1448, 627, 1439, 1521, 1440,
	1447, 1450, 0, 0, 1452, 0, 1454, 0, 1517, 1518,
	1525, 1526, 0, 1536, 1537, 1529, 0, -2, 0, 0,
	1532, 1533, 1458, 0, 1475, 1476, 1477, 1506, 1509, 1265,
	0, 2720, 1766, 1640, 1767, 1768, 2143, 0, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, -2, -2,
	-2, -2, -2, -2, -2, -2, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, -2, -2, -2,
	1807, 1808, -2, 2042, 2044, 0, 2107, 0, -2, 0,
	-2, -2, -2, -2, 1827, 0, 1829, 1834, 1836, 1838,
	0, 0, 0, 0, 2106, 1848, 2090, 2091, 0, 0,
	2021, 2022, 2023, 1833, 0, 1852, 2105, 2102, 0, 0,
	2054, 1505, 1911, 0, 0, 0, 0, 1918, 1903, 2052,
	0, 2051, 0, 0, 0, 2062, 0, 2097, 2093, 0,
	2141, 1761, 1748, 1749, 1750, 1751, 1752, 1753, 1763, 0,
	2138, 2175, 2181, 1995, 0, 0, 0, 1948, 1949, 1950,
	1951, 1952, 0, 1954, 1955, 0, 1957, 1958, 0, 1960,
	1961, 0, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 0, 0, 1967, 0, 2065, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1969, 0,
	1971, 2056, 2076, 0, 0, 1853, 0, 0, 0, 2019,
	0, 1974, 2056, 2084, 0, 0, 0, 0, 0, 2056,
	0, 2089, 0, 1981, 0, 1983, 1484, 0, 0, 1635,
	0, 0, 0, 2111, 1635, 1635, 0, 1548, 0, 0,
	1611, 1612, 1613, 1614, 0, 0, 1615, 0, 1605, 1609,
	1606, 1607, 1601, 1564, 0, 0, 2145, 1601, 1570, 1600,
	0, 1144, 1590, 1601, 1601, 0, -2, 1574, 1591, 0,
	0, 569, 571, 573, 577, 579, 0, 0, 1505, -2,
	0, -2, 314, 1143, 0, 0, 0, 0, 588, 590,
	0, 0, 513, 0, 603, 0, 582, 0, 585, 0,
	1636, 1639, 0, 0, 1650, 1656, 1657, 0, -2, 0,
	0, 1746, 0, 0, 0, 0, 610, 0, 0, 0,
	0, 408, 523, 194, 495, 0, 194, 194, 504, 0,
	0, 194, 515, 194, 2166, 194, 2164, 301, 520, 1431,
	228, 0, 662, 0, 1355, 1364, 0, 693, 0, 695,
	0, 2132, 2136, 2133, 2137, 0, 684, 0, 0, 0,
	0, 1305, 0, 1272, 0, 0, 157, 2586, 0, 196,
	0, 0, 1108, 2151, 0, 1100, 0, 0, 2294, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 1167, 1168, 1170,
	1177, 1179, 0, 1173, 2139, 0, 0, 1174, 0, 1176,
	1178, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 0, 1394, 1395, 0, 0, 0,
	121, 0, 0, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 1222, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 0, 0, -2, 0, 0, 0, 0,
	0, 238, 0, 303, 2117, 2127, 0, 982, 983, 337,
	340, 343, 346, 234, 0, 381, 0, 0, 1030, 1005,
	0, 0, 435, 312, 0, 0, 449, 453, 2168, 990,
	1161, 1164, 0, 1144, 2586, 1201, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 2586, 2146, 2197, 2198, 1387,
	1395, 0, 1635, 0, 1417, 1404, 0, 0, 0, 1417,
	1421, 1422, 1424, 1425, 0, 0, 1626, 1632, 531, 581,
	1492, 1492, 312, 310, 2417, 308, 305, 307, 0, 0,
	0, 1031, 1033, 1034, 1035, 196, 0, 2198, 1100, 2345,
	2198, 0, 1407, 1409, 0, 259, 0, 268, 1604, 266,
	271, 0, 0, 0, 447, 645, 650, 792, 0, 312,
	800, 801, 802, 845, 883, 891, 930, 812, 814, 815,
	816, 0, 0, 965, 961, 962, 963, 829, 893, 832,
	893, 835, 893, 856, 860, 865, 872, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 936, 937,
	938, 940, 945, 944, 949, 1623, 1443, 1444, 1446, 0,
	1455, 0, 0, 1531, -2, -2, 1530, 1534, 1535, -2,
	-2, -2, -2, 1451, 0, 1460, 1457, 0, 1516, 1263,
	1264, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1849, 0, -2, 1828, 1831, 1835, 1837, 1839, 0, 0,
	0, 0, 0, 0, 2045, 0, 2047, 1850, 2100, 2103,
	2017, 0, 0, 1504, 1505, 1505, 0, 1917, 0, 2053,
	0, 2060, 2061, 0, 1910, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1921, 0, 0, 0,
	0, 1953, 1956, 1959, 1962, 0, 0, 0, 0, 1942,
	0, 0, 0, 1946, 1716, 1702, 0, 1744, 1742, 1743,
	1737, 1744, 1741, 1694, 0, 1693, 0, 1966, 0, 1968,
	1970, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1857, 1858,
	1973, 2082, 2083, 0, 0, 0, 0, 0, 0, 1979,
	0, 2088, 1980, 1982, 1492, 0, 1485, 0, 1550, 1539,
	1634, 0, 2109, 1604, 1552, 1554, 2110, 2148, 1539, 1539,
	0, 2057, 0, 0, 1595, 0, 0, 0, 1597, 1568,
	0, 0, 1562, 0, 1558, 1559, 1560, 1561, 1569, 1144,
	1599, 1571, 1575, 2175, 0, 1601, 0, 1586, 0, 1588,
	1621, 0, 1580, 1583, 0, 0, 2190, 1635, 0, 348,
	353, 354, 349, 350, 351, 597, 0, 0, 0, 0,
	2059, 0, 1641, 0, 1647, 0, 0, 0, 0, 605,
	0, 0, 0, 211, 1429, 403, 494, 194, 499, 502,
	2115, 194, 508, 511, 517, 224, 0, 658, -2, 691,
	692, 694, 0, 690, 154, 1306, 0, 0, 1268, 1270,
	2162, 1274, 1280, 1283, 0, 159, 2586, 170, 0, 1079,
	0, 2149, 0, 0, 0, 0, 0, 0, 1308, 0,
	0, 2586, 194, 2586, 194, 173, 175, 178, 0, 182,
	180, 0, 1067, 0, 0, 1070, 111, 1306, 0, 0,
	114, 118, 126, 127, 130, 0, 0, 0, 136, 0,
	0, 0, 1285, 1289, 1297, 0, 0, 0, 1171, 1172,
	1175, 1181, 83, 0, 0, 0, 1293, 1295, 1301, 93,
	94, 2160, 95, 0, 1267, 0, 0, 0, 0, 184,
	116, 120, 128, 129, 131, 0, 1303, 113, 0, 209,
	0, 0, 199, 194, 2586, 0, 201, 0, 202, 203,
	218, 0, 0, 0, 993, 994, 1223, 1185, 1186, 0,
	1191, 0, 0, 0, 0, 1604, 230, 0, 1604, 238,
	0, 2123, 0, 368, 0, 0, 0, 0, 1029, 1126,
	0, 1000, 0, 0, 0, 441, 437, 0, 446, 452,
	451, 457, -2, 0, 0, 0, 0, -2, 0, 0,
	1239, 1233, 1234, 0, 0, 0, 0, 2586, 1389, 1395,
	0, 1490, 1505, 464, 1396, 1417, 0, 0, 0, 1406,
	1402, 1399, 1635, 0, 0, 0, 0, 0, 1628, 1631,
	534, 535, 287, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 1036, 1040, 0, 2198, 2198, 0, 2153, 0,
	0, 0, 0, 269, 0, 272, 0, 0, 0, 277,
	278, 279, 280, 281, 271, 261, 1604, 0, 0, 647,
	0, 0, 799, 0, 822, 831, 833, 836, 874, 876,
	893, 920, 921, 1057, 0, 1057, 0, 0, 941, 1453,
	0, 1528, 1459, 1510, 1511, 0, 1265, 0, 1769, 1812,
	0, 0, -2, 0, 0, 1816, 0, 0, 0, -2,
	0, 0, 0, 2046, 2048, 0, 2102, 1912, 0, 0,
	0, 1916, 1900, 1901, 0, 2020, 2063, 2092, 2096, 0,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 0, 2142, 2176,
	2180, 1993, 1994, 1998, 2156, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 1739, 0,
	0, 2064, 2075, 2077, 1854, 1855, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, -2, -2, -2, 1872,
	1873, 1874, -2, -2, -2, 0, 0, 0, 2078, 2080,
	2081, 2085, 2086, 0, 1976, 1977, 1978, 2087, 0, 1492,
	1486, 1547, 0, 1633, 1551, 0, 1547, 1547, 1499, 1593,
	0, 0, 1617, 0, 1565, 0, 1566, 0, 1598, 0,
	1573, 1576, 1577, 1587, 0, 1579, 0, 1582, 0, 1912,
	-2, 313, 315, 317, 0, 320, 321, 0, 0, 600,
	601, 599, 583, 0, 0, 1643, 0, 0, 1719, 1723,
	1747, 608, 609, 607, 496, 505, 226, 0, 1602, 0,
	0, 0, 0, 0, 0, 195, 1077, 1107, 0, 0,
	0, 1099, 0, 0, 1113, 161, 162, 0, 0, 0,
	0, 171, 0, 0, 168, 0, 177, 181, 1064, 0,
	0, 0, 0, 1273, 0, 0, 0, 133, 134, 135,
	0, 140, 0, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 1380, 0, 1374, 0, 0, 0, 197,
	0, 0, 0, 1262, 220, 0, 0, 0, 0, 0,
	1226, 1227, 1286, 1290, 1298, 0, 0, 0, 238, 236,
	0, 239, 0, 242, 243, 0, 245, 238, 232, 0,
	0, 0, 1144, 382, 1003, 1114, 0, 1116, 0, 1001,
	0, 0, 1115, 433, 0, 440, 0, 454, 0, 0,
	1165, 0, 0, 1188, 1199, 1144, 0, 1238, 1240, 0,
	1248, 0, 0, 0, 1391, 1395, 0, 1384, 1385, 1524,
	1397, 1415, -2, 0, 0, 1505, 1423, 1420, 1426, 1427,
	0, 309, 0, 304, 306, 0, 290, 0, 0, 1032,
	1037, 0, 0, 0, 0, 0, 1408, 1410, 0, 0,
	0, 0, 0, 0, 260, 271, 1604, 296, 0, 793,
	817, 884, 922, 1056, 0, 0, 924, 0, 0, 1527,
	1514, 1515, 1512, 1265, 1814, 1818, 0, 0, 0, 1820,
	-2, 0, 1842, -2, -2, 2049, 2101, 1891, 1505, 1913,
	1915, 1902, 2095, 1764, 0, 2000, 1997, 0, 1984, 0,
	1937, 1938, 0, 0, 1941, 1943, 1944, 1945, 1703, 1696,
	1695, 2074, 0, 0, 0, 0, 1975, 1487, 0, 1989,
	0, 0, 1555, 1989, 1989, 1594, 0, 1596, 1563, 1556,
	0, 2176, 1589, 1581, 0, 0, 318, 0, 322, 323,
	0, 1637, 1642, 0, 1648, 1718, 227, 155, 156, 1277,
	1281, 1278, 0, 158, 0, 1078, 0, 1081, 0, 0,
	0, 0, 1088, 1100, 0, 0, 0, 0, 0, 1101,
	0, 1130, 0, 1253, 1260, 0, -2, 0, 0, 0,
	164, 187, 0, 0, 188, 1307, 166, 0, 0, 194,
	194, 0, 0, 1269, 1271, 1284, 0, 0, 0, 0,
	143, 0, 0, 1287, 1291, 1299, 1294, 1296, 1302, 0,
	1381, 0, 0, 1304, 207, 208, 0, 194, 0, 194,
	200, 194, 1262, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 231, 302, 238, 370, 0, 1051, 0, 1126,
	1118, 1119, 1120, 0, 1125, 1127, 0, 0, 1017, 1002,
	0, 1013, 0, 0, 1030, 1005, 0, 438, 455, 0,
	458, 0, 461, 991, 1162, 1196, 1144, 0, 1230, 0,
	0, 0, 0, 0, 0, 0, 1393, 1395, 0, 1386,
	1387, 1417, 1523, 0, 0, 0, 1405, 1524, 0, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 273, 0, 274, 275, 276, 262, 263, 649, 651,
	0, 0, 657, 1055, 0, 0, 0, 0, 1513, 1822,
	-2, -2, 1843, 0, 2177, 2179, 1505, 0, 1986, 1507,
	0, 0, -2, 0, 0, 0, 1488, 1471, 0, 1546,
	1538, 1540, 1542, 2475, 2269, 2585, 1472, 1473, 1616, 0,
	1584, 319, 602, 0, 1644, 0, 0, 1279, 160, 0,
	1082, 1083, 2152, 1085, 0, 1087, 1089, 1090, 1091, 0,
	1094, 2200, 0, 1098, 0, 1109, 1131, 0, 1140, 0,
	1255, 1265, 1259, 0, 1257, 1142, 0, 163, 165, 189,
	186, 1262, 0, 167, 176, 0, 0, 115, 0, 0,
	2263, 146, 144, 142, 1266, 117, 0, 209, 219, 1261,
	221, 204, 194, 0, 1288, 1292, 1300, 240, 0, 241,
	244, 0, 0, 1066, 0, 1004, 1117, 0, 1128, 1129,
	1007, 0, 1006, 0, 0, 0, 0, 0, 439, 442,
	0, 445, 0, 0, 0, 0, 0, 1241, 1239, 0,
	1247, 0, 0, 0, 1373, 0, 0, 1388, 1389, 462,
	1411, 0, 0, 1417, 1428, 289, 0, 0, 1038, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1039, 1142,
	0, 0, 1106, 0, 294, 270, 0, 653, 0, 655,
	0, 923, 925, 0, 0, 1914, 2004, 0, 0, 1939,
	1940, -2, 0, 1880, 1988, 1990, 0, 0, 0, 0,
	0, 1557, 1638, 1275, 0, 1282, 1080, 1084, 0, 0,
	0, 1148, 0, 0, 1102, 0, 1134, 1135, 1051, 0,
	1136, 1137, 1138, 1254, 1516, 1260, 1051, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 198, 222, 1262,
	237, 255, 0, 1197, 1005, 1065, 0, 0, 1015, 0,
	1018, 0, 1014, 1011, 1012, 1003, 0, 443, 444, 459,
	0, 460, 0, 1200, 0, 0, 1248, 0, 0, 1376,
	1372, 1395, 1390, 1391, 1635, 1414, 1418, 0, 0, 1140,
	1142, 1062, 0, 652, 0, 0, 933, 934, 0, 0,
	0, 0, 1999, 1508, 1881, 0, 0, 1541, 1543, 1544,
	1545, 1276, 0, 0, 1093, 1153, 0, 0, 0, 1132,
	1133, 1062, 0, 1258, 1256, 1111, 0, 1144, 169, 0,
	1142, 0, 1071, 0, 0, 1074, 0, 0, 147, 2263,
	145, 0, 194, 258, 0, 252, 250, 251, 1007, 0,
	0, 1122, 1124, 0, 1019, 1051, 1017, 456, 1198, 1231,
	1142, 0, 1140, 0, 1383, 1395, 1377, 1378, 0, 1393,
	0, 312, 312, 1051, 1140, 1005, 1061, 312, 654, 656,
	1996, 2016, 2005, -2, 2544, 2270, 0, 2016, 2016, 1991,
	1992, 0, 0, 1095, 1149, 1150, 0, 1145, 1146, 1147,
	2199, 1096, 1097, 1130, 0, 0, 1148, 190, 1051, 1068,
	0, 0, 1069, 0, 0, 150, 0, 152, 223, 246,
	0, 0, 999, 0, 1121, 0, 0, 0, 0, 1066,
	1007, 1140, 0, 1051, 0, 1369, 1382, 0, 1392, 1373,
	0, 291, 292, 1062, 1051, 1635, 0, 293, 2001, 0,
	0, 2007, 2008, 2009, 2010, 2011, 2002, 2003, 1086, 0,
	1151, 0, 1152, 0, 0, 0, 1635, 1139, 0, 1153,
	174, 1072, 0, 1075, 0, 148, 0, 253, 254, 996,
	998, 0, 1123, 1008, 0, 1010, 1005, 1016, 1051, 0,
	1062, 0, 1375, 2161, 1376, 1412, 0, 1005, 1062, 1105,
	0, 2013, 2014, 0, 0, 0, 1154, 0, 1157, 1158,
	0, 1155, 1110, 0, 1130, 0, 0, 0, 0, 1009,
	1007, 1062, 1142, 1005, 1140, 1383, 0, 1635, 1005, 2012,
	2015, 2006, 1092, 1156, 1159, 1160, 1141, 1112, 0, 0,
	256, 0, 1054, 999, 1005, 1140, 1635, 1051, 1370, 1635,
	1103, 1635, 1059, 0, 0, 1050, 1052, 1053, 997, 1635,
	1051, 1244, 1062, 1413, 1104, 1073, 1058, 0, 257, 1242,
	1062, 1005, 0, 1005, 1635, 0, 1635, 1245, 1059, 1243,
	1076,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 573, 3, 579, 574, 3,
	584, 585, 577, 575, 589, 576, 586, 578, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 592, 3,
	565, 567, 566, 570, 588, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 582, 3, 583, 580, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 590, 572, 591, 568,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 569, 57908, 571, 57909, 581,
	57910, 587, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1304
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1331
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1438
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1452
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1532
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1541
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1629
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1638
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1659
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1667
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1690
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1691
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1695
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1704
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1728
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1775
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1794
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1804
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1814
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1823
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1834
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1840
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1866
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1871
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1957
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2234
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2238
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2327
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2411
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2419
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2563
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2580
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2696
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2740
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			return unimplemented(sqllex, "alter function")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2839
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2848
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2854
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2859
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2864
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2869
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2874
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2897
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2905
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2981
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2995
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3015
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3048
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3161
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3181
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "CREATE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplemented(sqllex, "create access method")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplemented(sqllex, "create cast")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3226
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "create operator")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "create publication")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "create rule")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "create server")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3245
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3248
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3249
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3252
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3253
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3256
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3262
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3267
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3268
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return unimplemented(sqllex, "drop server")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3400
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3435
		{

			sqlVAL.union.val = nil
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "DELETE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "DROP")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3748
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3814
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3838
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3846
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DELETE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "INSERT")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "DELETE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "INSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3923
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3956
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4045
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4049
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "GRANT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "RESET")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "RESET")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "USE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4186
		{
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "USE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4405
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return unimplemented(sqllex, "set from current")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4429
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.Low
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = tree.Normal
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = tree.High
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.str = "client_encoding"
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.str = "timezone"
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4676
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4885
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = true
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = true
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = false
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5093
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = false
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = true
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = false
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5231
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5259
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5312
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5320
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5355
		{
		}
	case 933:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5364
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5387
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5458
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5468
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5475
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5718
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "RESUME")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5899
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5915
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5944
		{

			sqlVAL.union.val = nil
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.str = ""
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = nil
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5983
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5987
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6013
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6027
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6042
		{
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6149
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6165
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.str = ""
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6413
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{

			sqlVAL.union.val = true
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = false
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6551
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6579
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6589
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6669
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6671
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6673
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6746
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6830
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6839
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6847
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6876
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6886
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6888
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6951
		{

			sqlVAL.union.val = true
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = false
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6966
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6980
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6992
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7004
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7014
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7024
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = nil
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7160
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7162
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7166
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7168
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7170
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7208
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7226
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7245
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7262
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7279
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = false
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = true
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = false
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = true
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = false
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7343
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.str = ""
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.str = ""
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7416
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7422
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7647
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7653
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7665
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7671
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7685
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7691
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7709
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7712
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7713
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7751
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7820
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7825
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7879
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7899
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7900
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7941
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7943
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7947
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8034
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.str = ""
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8060
		{

		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8075
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.str = ""
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.str = ""
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.str = ""
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8130
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8143
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8144
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8204
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8253
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8280
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8284
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8375
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = true
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = false
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = nil
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = true
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = false
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = false
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8790
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8861
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9051
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9088
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9098
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9109
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9179
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9235
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9265
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9298
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = nil
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = true
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = false
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = tree.AstFull
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.str = tree.AstRight
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.str = tree.AstInner
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.str = tree.AstHash
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.str = ""
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9510
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9532
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = true
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = false
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = true
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = false
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9594
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9602
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9603
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9621
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9651
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9700
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9712
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = types.Geography
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9762
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9770
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9804
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = nil
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = types.Int2
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = types.Int
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = types.Float4
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = types.Float
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9863
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = types.Bool
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = types.Float
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9896
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9902
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9924
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = types.String
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = types.Date
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9973
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9981
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9995
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10004
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10012
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10029
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = true
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = false
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = false
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = types.Interval
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10053
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = nil
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10182
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10560
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10582
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10781
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10807
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10831
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10861
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10872
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10873
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10963
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11159
		{
			return unimplemented(sqllex, "treat")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.str = ""
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11334
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11431
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.Any
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.Some
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.All
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = tree.Div
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.LT
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.GT
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.LE
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.GE
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = tree.NE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = tree.Like
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11792
		{
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11793
		{
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11865
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11873
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11946
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11962
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11991
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12011
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12244
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.str = ""
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
